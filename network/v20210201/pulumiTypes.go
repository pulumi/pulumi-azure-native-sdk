// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponse struct {
	// Backend addresses.
	BackendAddresses []ApplicationGatewayBackendAddressResponse `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the backend address pool resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolResponseOutput) ToApplicationGatewayBackendAddressPoolResponseOutput() ApplicationGatewayBackendAddressPoolResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseOutput) ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseOutput {
	return o
}

// Backend addresses.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) BackendAddresses() ApplicationGatewayBackendAddressResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) []ApplicationGatewayBackendAddressResponse {
		return v.BackendAddresses
	}).(ApplicationGatewayBackendAddressResponseArrayOutput)
}

// Collection of references to IPs defined in network interfaces.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) []NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend address pool that is unique within an Application Gateway.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the backend address pool resource.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayBackendAddressPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) ToApplicationGatewayBackendAddressPoolResponseArrayOutput() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressPoolResponse {
		return vs[0].([]ApplicationGatewayBackendAddressPoolResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressPoolResponseOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponse struct {
	// Fully qualified domain name (FQDN).
	Fqdn *string `pulumi:"fqdn"`
	// IP address.
	IpAddress *string `pulumi:"ipAddress"`
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressResponseOutput) ToApplicationGatewayBackendAddressResponseOutput() ApplicationGatewayBackendAddressResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseOutput) ToApplicationGatewayBackendAddressResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseOutput {
	return o
}

// Fully qualified domain name (FQDN).
func (o ApplicationGatewayBackendAddressResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address.
func (o ApplicationGatewayBackendAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) ToApplicationGatewayBackendAddressResponseArrayOutput() ApplicationGatewayBackendAddressResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressResponse {
		return vs[0].([]ApplicationGatewayBackendAddressResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressResponseOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Reference to the subnet resource. A subnet from where application gateway gets its private address.
	Subnet *SubResource `pulumi:"subnet"`
}

// ApplicationGatewayIPConfigurationInput is an input type that accepts ApplicationGatewayIPConfigurationArgs and ApplicationGatewayIPConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationInput` via:
//
//	ApplicationGatewayIPConfigurationArgs{...}
type ApplicationGatewayIPConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput
	ToApplicationGatewayIPConfigurationOutputWithContext(context.Context) ApplicationGatewayIPConfigurationOutput
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to the subnet resource. A subnet from where application gateway gets its private address.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationArgs) ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput {
	return i.ToApplicationGatewayIPConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationArgs) ToApplicationGatewayIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationOutput)
}

// ApplicationGatewayIPConfigurationArrayInput is an input type that accepts ApplicationGatewayIPConfigurationArray and ApplicationGatewayIPConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationArrayInput` via:
//
//	ApplicationGatewayIPConfigurationArray{ ApplicationGatewayIPConfigurationArgs{...} }
type ApplicationGatewayIPConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput
	ToApplicationGatewayIPConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayIPConfigurationArrayOutput
}

type ApplicationGatewayIPConfigurationArray []ApplicationGatewayIPConfigurationInput

func (ApplicationGatewayIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationArray) ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput {
	return i.ToApplicationGatewayIPConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationArray) ToApplicationGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationArrayOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationOutput) ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationOutput) ToApplicationGatewayIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to the subnet resource. A subnet from where application gateway gets its private address.
func (o ApplicationGatewayIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type ApplicationGatewayIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationArrayOutput) ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationArrayOutput) ToApplicationGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayIPConfiguration {
		return vs[0].([]ApplicationGatewayIPConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayIPConfigurationOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the application gateway IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Reference to the subnet resource. A subnet from where application gateway gets its private address.
	Subnet *SubResourceResponse `pulumi:"subnet"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationResponseOutput) ToApplicationGatewayIPConfigurationResponseOutput() ApplicationGatewayIPConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseOutput) ToApplicationGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the application gateway IP configuration resource.
func (o ApplicationGatewayIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Reference to the subnet resource. A subnet from where application gateway gets its private address.
func (o ApplicationGatewayIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayIPConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) ToApplicationGatewayIPConfigurationResponseArrayOutput() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayIPConfigurationResponse {
		return vs[0].([]ApplicationGatewayIPConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayIPConfigurationResponseOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroup struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// ApplicationSecurityGroupInput is an input type that accepts ApplicationSecurityGroupArgs and ApplicationSecurityGroupOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupInput` via:
//
//	ApplicationSecurityGroupArgs{...}
type ApplicationSecurityGroupInput interface {
	pulumi.Input

	ToApplicationSecurityGroupOutput() ApplicationSecurityGroupOutput
	ToApplicationSecurityGroupOutputWithContext(context.Context) ApplicationSecurityGroupOutput
}

// An application security group in a resource group.
type ApplicationSecurityGroupArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ApplicationSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroup)(nil)).Elem()
}

func (i ApplicationSecurityGroupArgs) ToApplicationSecurityGroupOutput() ApplicationSecurityGroupOutput {
	return i.ToApplicationSecurityGroupOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupArgs) ToApplicationSecurityGroupOutputWithContext(ctx context.Context) ApplicationSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupOutput)
}

// ApplicationSecurityGroupArrayInput is an input type that accepts ApplicationSecurityGroupArray and ApplicationSecurityGroupArrayOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupArrayInput` via:
//
//	ApplicationSecurityGroupArray{ ApplicationSecurityGroupArgs{...} }
type ApplicationSecurityGroupArrayInput interface {
	pulumi.Input

	ToApplicationSecurityGroupArrayOutput() ApplicationSecurityGroupArrayOutput
	ToApplicationSecurityGroupArrayOutputWithContext(context.Context) ApplicationSecurityGroupArrayOutput
}

type ApplicationSecurityGroupArray []ApplicationSecurityGroupInput

func (ApplicationSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroup)(nil)).Elem()
}

func (i ApplicationSecurityGroupArray) ToApplicationSecurityGroupArrayOutput() ApplicationSecurityGroupArrayOutput {
	return i.ToApplicationSecurityGroupArrayOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupArray) ToApplicationSecurityGroupArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupArrayOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroup)(nil)).Elem()
}

func (o ApplicationSecurityGroupOutput) ToApplicationSecurityGroupOutput() ApplicationSecurityGroupOutput {
	return o
}

func (o ApplicationSecurityGroupOutput) ToApplicationSecurityGroupOutputWithContext(ctx context.Context) ApplicationSecurityGroupOutput {
	return o
}

// Resource ID.
func (o ApplicationSecurityGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ApplicationSecurityGroupOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroup) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o ApplicationSecurityGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationSecurityGroup) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ApplicationSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroup)(nil)).Elem()
}

func (o ApplicationSecurityGroupArrayOutput) ToApplicationSecurityGroupArrayOutput() ApplicationSecurityGroupArrayOutput {
	return o
}

func (o ApplicationSecurityGroupArrayOutput) ToApplicationSecurityGroupArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupArrayOutput {
	return o
}

func (o ApplicationSecurityGroupArrayOutput) Index(i pulumi.IntInput) ApplicationSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSecurityGroup {
		return vs[0].([]ApplicationSecurityGroup)[vs[1].(int)]
	}).(ApplicationSecurityGroupOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the application security group resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// An application security group in a resource group.
type ApplicationSecurityGroupResponseOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (o ApplicationSecurityGroupResponseOutput) ToApplicationSecurityGroupResponseOutput() ApplicationSecurityGroupResponseOutput {
	return o
}

func (o ApplicationSecurityGroupResponseOutput) ToApplicationSecurityGroupResponseOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationSecurityGroupResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationSecurityGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ApplicationSecurityGroupResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ApplicationSecurityGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the application security group resource.
func (o ApplicationSecurityGroupResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
func (o ApplicationSecurityGroupResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource tags.
func (o ApplicationSecurityGroupResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ApplicationSecurityGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationSecurityGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (o ApplicationSecurityGroupResponseArrayOutput) ToApplicationSecurityGroupResponseArrayOutput() ApplicationSecurityGroupResponseArrayOutput {
	return o
}

func (o ApplicationSecurityGroupResponseArrayOutput) ToApplicationSecurityGroupResponseArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseArrayOutput {
	return o
}

func (o ApplicationSecurityGroupResponseArrayOutput) Index(i pulumi.IntInput) ApplicationSecurityGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSecurityGroupResponse {
		return vs[0].([]ApplicationSecurityGroupResponse)[vs[1].(int)]
	}).(ApplicationSecurityGroupResponseOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolResponse struct {
	// An array of references to IP addresses defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of backend addresses.
	LoadBalancerBackendAddresses []LoadBalancerBackendAddressResponse `pulumi:"loadBalancerBackendAddresses"`
	// An array of references to load balancing rules that use this backend address pool.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// The location of the backend address pool.
	Location *string `pulumi:"location"`
	// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// A reference to an outbound rule that uses this backend address pool.
	OutboundRule SubResourceResponse `pulumi:"outboundRule"`
	// An array of references to outbound rules that use this backend address pool.
	OutboundRules []SubResourceResponse `pulumi:"outboundRules"`
	// The provisioning state of the backend address pool resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// An array of gateway load balancer tunnel interfaces.
	TunnelInterfaces []GatewayLoadBalancerTunnelInterfaceResponse `pulumi:"tunnelInterfaces"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Pool of backend IP addresses.
type BackendAddressPoolResponseOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolResponse)(nil)).Elem()
}

func (o BackendAddressPoolResponseOutput) ToBackendAddressPoolResponseOutput() BackendAddressPoolResponseOutput {
	return o
}

func (o BackendAddressPoolResponseOutput) ToBackendAddressPoolResponseOutputWithContext(ctx context.Context) BackendAddressPoolResponseOutput {
	return o
}

// An array of references to IP addresses defined in network interfaces.
func (o BackendAddressPoolResponseOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o BackendAddressPoolResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o BackendAddressPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of backend addresses.
func (o BackendAddressPoolResponseOutput) LoadBalancerBackendAddresses() LoadBalancerBackendAddressResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []LoadBalancerBackendAddressResponse {
		return v.LoadBalancerBackendAddresses
	}).(LoadBalancerBackendAddressResponseArrayOutput)
}

// An array of references to load balancing rules that use this backend address pool.
func (o BackendAddressPoolResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// The location of the backend address pool.
func (o BackendAddressPoolResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
func (o BackendAddressPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A reference to an outbound rule that uses this backend address pool.
func (o BackendAddressPoolResponseOutput) OutboundRule() SubResourceResponseOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) SubResourceResponse { return v.OutboundRule }).(SubResourceResponseOutput)
}

// An array of references to outbound rules that use this backend address pool.
func (o BackendAddressPoolResponseOutput) OutboundRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []SubResourceResponse { return v.OutboundRules }).(SubResourceResponseArrayOutput)
}

// The provisioning state of the backend address pool resource.
func (o BackendAddressPoolResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// An array of gateway load balancer tunnel interfaces.
func (o BackendAddressPoolResponseOutput) TunnelInterfaces() GatewayLoadBalancerTunnelInterfaceResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []GatewayLoadBalancerTunnelInterfaceResponse {
		return v.TunnelInterfaces
	}).(GatewayLoadBalancerTunnelInterfaceResponseArrayOutput)
}

// Type of the resource.
func (o BackendAddressPoolResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) string { return v.Type }).(pulumi.StringOutput)
}

type BackendAddressPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPoolResponse)(nil)).Elem()
}

func (o BackendAddressPoolResponseArrayOutput) ToBackendAddressPoolResponseArrayOutput() BackendAddressPoolResponseArrayOutput {
	return o
}

func (o BackendAddressPoolResponseArrayOutput) ToBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) BackendAddressPoolResponseArrayOutput {
	return o
}

func (o BackendAddressPoolResponseArrayOutput) Index(i pulumi.IntInput) BackendAddressPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendAddressPoolResponse {
		return vs[0].([]BackendAddressPoolResponse)[vs[1].(int)]
	}).(BackendAddressPoolResponseOutput)
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormat struct {
	// Fqdn that resolves to private endpoint ip address.
	Fqdn *string `pulumi:"fqdn"`
	// A list of private ip addresses of the private endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// CustomDnsConfigPropertiesFormatInput is an input type that accepts CustomDnsConfigPropertiesFormatArgs and CustomDnsConfigPropertiesFormatOutput values.
// You can construct a concrete instance of `CustomDnsConfigPropertiesFormatInput` via:
//
//	CustomDnsConfigPropertiesFormatArgs{...}
type CustomDnsConfigPropertiesFormatInput interface {
	pulumi.Input

	ToCustomDnsConfigPropertiesFormatOutput() CustomDnsConfigPropertiesFormatOutput
	ToCustomDnsConfigPropertiesFormatOutputWithContext(context.Context) CustomDnsConfigPropertiesFormatOutput
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormatArgs struct {
	// Fqdn that resolves to private endpoint ip address.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// A list of private ip addresses of the private endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (CustomDnsConfigPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDnsConfigPropertiesFormat)(nil)).Elem()
}

func (i CustomDnsConfigPropertiesFormatArgs) ToCustomDnsConfigPropertiesFormatOutput() CustomDnsConfigPropertiesFormatOutput {
	return i.ToCustomDnsConfigPropertiesFormatOutputWithContext(context.Background())
}

func (i CustomDnsConfigPropertiesFormatArgs) ToCustomDnsConfigPropertiesFormatOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDnsConfigPropertiesFormatOutput)
}

// CustomDnsConfigPropertiesFormatArrayInput is an input type that accepts CustomDnsConfigPropertiesFormatArray and CustomDnsConfigPropertiesFormatArrayOutput values.
// You can construct a concrete instance of `CustomDnsConfigPropertiesFormatArrayInput` via:
//
//	CustomDnsConfigPropertiesFormatArray{ CustomDnsConfigPropertiesFormatArgs{...} }
type CustomDnsConfigPropertiesFormatArrayInput interface {
	pulumi.Input

	ToCustomDnsConfigPropertiesFormatArrayOutput() CustomDnsConfigPropertiesFormatArrayOutput
	ToCustomDnsConfigPropertiesFormatArrayOutputWithContext(context.Context) CustomDnsConfigPropertiesFormatArrayOutput
}

type CustomDnsConfigPropertiesFormatArray []CustomDnsConfigPropertiesFormatInput

func (CustomDnsConfigPropertiesFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDnsConfigPropertiesFormat)(nil)).Elem()
}

func (i CustomDnsConfigPropertiesFormatArray) ToCustomDnsConfigPropertiesFormatArrayOutput() CustomDnsConfigPropertiesFormatArrayOutput {
	return i.ToCustomDnsConfigPropertiesFormatArrayOutputWithContext(context.Background())
}

func (i CustomDnsConfigPropertiesFormatArray) ToCustomDnsConfigPropertiesFormatArrayOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDnsConfigPropertiesFormatArrayOutput)
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormatOutput struct{ *pulumi.OutputState }

func (CustomDnsConfigPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDnsConfigPropertiesFormat)(nil)).Elem()
}

func (o CustomDnsConfigPropertiesFormatOutput) ToCustomDnsConfigPropertiesFormatOutput() CustomDnsConfigPropertiesFormatOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatOutput) ToCustomDnsConfigPropertiesFormatOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatOutput {
	return o
}

// Fqdn that resolves to private endpoint ip address.
func (o CustomDnsConfigPropertiesFormatOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDnsConfigPropertiesFormat) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// A list of private ip addresses of the private endpoint.
func (o CustomDnsConfigPropertiesFormatOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomDnsConfigPropertiesFormat) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type CustomDnsConfigPropertiesFormatArrayOutput struct{ *pulumi.OutputState }

func (CustomDnsConfigPropertiesFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDnsConfigPropertiesFormat)(nil)).Elem()
}

func (o CustomDnsConfigPropertiesFormatArrayOutput) ToCustomDnsConfigPropertiesFormatArrayOutput() CustomDnsConfigPropertiesFormatArrayOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatArrayOutput) ToCustomDnsConfigPropertiesFormatArrayOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatArrayOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatArrayOutput) Index(i pulumi.IntInput) CustomDnsConfigPropertiesFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDnsConfigPropertiesFormat {
		return vs[0].([]CustomDnsConfigPropertiesFormat)[vs[1].(int)]
	}).(CustomDnsConfigPropertiesFormatOutput)
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormatResponse struct {
	// Fqdn that resolves to private endpoint ip address.
	Fqdn *string `pulumi:"fqdn"`
	// A list of private ip addresses of the private endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (CustomDnsConfigPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDnsConfigPropertiesFormatResponse)(nil)).Elem()
}

func (o CustomDnsConfigPropertiesFormatResponseOutput) ToCustomDnsConfigPropertiesFormatResponseOutput() CustomDnsConfigPropertiesFormatResponseOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatResponseOutput) ToCustomDnsConfigPropertiesFormatResponseOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatResponseOutput {
	return o
}

// Fqdn that resolves to private endpoint ip address.
func (o CustomDnsConfigPropertiesFormatResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDnsConfigPropertiesFormatResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// A list of private ip addresses of the private endpoint.
func (o CustomDnsConfigPropertiesFormatResponseOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomDnsConfigPropertiesFormatResponse) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type CustomDnsConfigPropertiesFormatResponseArrayOutput struct{ *pulumi.OutputState }

func (CustomDnsConfigPropertiesFormatResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDnsConfigPropertiesFormatResponse)(nil)).Elem()
}

func (o CustomDnsConfigPropertiesFormatResponseArrayOutput) ToCustomDnsConfigPropertiesFormatResponseArrayOutput() CustomDnsConfigPropertiesFormatResponseArrayOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatResponseArrayOutput) ToCustomDnsConfigPropertiesFormatResponseArrayOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatResponseArrayOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatResponseArrayOutput) Index(i pulumi.IntInput) CustomDnsConfigPropertiesFormatResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDnsConfigPropertiesFormatResponse {
		return vs[0].([]CustomDnsConfigPropertiesFormatResponse)[vs[1].(int)]
	}).(CustomDnsConfigPropertiesFormatResponseOutput)
}

// Contains the DDoS protection settings of the public IP.
type DdosSettings struct {
	// The DDoS custom policy associated with the public IP.
	DdosCustomPolicy *SubResource `pulumi:"ddosCustomPolicy"`
	// Enables DDoS protection on the public IP.
	ProtectedIP *bool `pulumi:"protectedIP"`
	// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
	ProtectionCoverage *string `pulumi:"protectionCoverage"`
}

// DdosSettingsInput is an input type that accepts DdosSettingsArgs and DdosSettingsOutput values.
// You can construct a concrete instance of `DdosSettingsInput` via:
//
//	DdosSettingsArgs{...}
type DdosSettingsInput interface {
	pulumi.Input

	ToDdosSettingsOutput() DdosSettingsOutput
	ToDdosSettingsOutputWithContext(context.Context) DdosSettingsOutput
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsArgs struct {
	// The DDoS custom policy associated with the public IP.
	DdosCustomPolicy SubResourcePtrInput `pulumi:"ddosCustomPolicy"`
	// Enables DDoS protection on the public IP.
	ProtectedIP pulumi.BoolPtrInput `pulumi:"protectedIP"`
	// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
	ProtectionCoverage pulumi.StringPtrInput `pulumi:"protectionCoverage"`
}

func (DdosSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosSettings)(nil)).Elem()
}

func (i DdosSettingsArgs) ToDdosSettingsOutput() DdosSettingsOutput {
	return i.ToDdosSettingsOutputWithContext(context.Background())
}

func (i DdosSettingsArgs) ToDdosSettingsOutputWithContext(ctx context.Context) DdosSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsOutput)
}

func (i DdosSettingsArgs) ToDdosSettingsPtrOutput() DdosSettingsPtrOutput {
	return i.ToDdosSettingsPtrOutputWithContext(context.Background())
}

func (i DdosSettingsArgs) ToDdosSettingsPtrOutputWithContext(ctx context.Context) DdosSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsOutput).ToDdosSettingsPtrOutputWithContext(ctx)
}

// DdosSettingsPtrInput is an input type that accepts DdosSettingsArgs, DdosSettingsPtr and DdosSettingsPtrOutput values.
// You can construct a concrete instance of `DdosSettingsPtrInput` via:
//
//	        DdosSettingsArgs{...}
//
//	or:
//
//	        nil
type DdosSettingsPtrInput interface {
	pulumi.Input

	ToDdosSettingsPtrOutput() DdosSettingsPtrOutput
	ToDdosSettingsPtrOutputWithContext(context.Context) DdosSettingsPtrOutput
}

type ddosSettingsPtrType DdosSettingsArgs

func DdosSettingsPtr(v *DdosSettingsArgs) DdosSettingsPtrInput {
	return (*ddosSettingsPtrType)(v)
}

func (*ddosSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosSettings)(nil)).Elem()
}

func (i *ddosSettingsPtrType) ToDdosSettingsPtrOutput() DdosSettingsPtrOutput {
	return i.ToDdosSettingsPtrOutputWithContext(context.Background())
}

func (i *ddosSettingsPtrType) ToDdosSettingsPtrOutputWithContext(ctx context.Context) DdosSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsPtrOutput)
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsOutput struct{ *pulumi.OutputState }

func (DdosSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosSettings)(nil)).Elem()
}

func (o DdosSettingsOutput) ToDdosSettingsOutput() DdosSettingsOutput {
	return o
}

func (o DdosSettingsOutput) ToDdosSettingsOutputWithContext(ctx context.Context) DdosSettingsOutput {
	return o
}

func (o DdosSettingsOutput) ToDdosSettingsPtrOutput() DdosSettingsPtrOutput {
	return o.ToDdosSettingsPtrOutputWithContext(context.Background())
}

func (o DdosSettingsOutput) ToDdosSettingsPtrOutputWithContext(ctx context.Context) DdosSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DdosSettings) *DdosSettings {
		return &v
	}).(DdosSettingsPtrOutput)
}

// The DDoS custom policy associated with the public IP.
func (o DdosSettingsOutput) DdosCustomPolicy() SubResourcePtrOutput {
	return o.ApplyT(func(v DdosSettings) *SubResource { return v.DdosCustomPolicy }).(SubResourcePtrOutput)
}

// Enables DDoS protection on the public IP.
func (o DdosSettingsOutput) ProtectedIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DdosSettings) *bool { return v.ProtectedIP }).(pulumi.BoolPtrOutput)
}

// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
func (o DdosSettingsOutput) ProtectionCoverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosSettings) *string { return v.ProtectionCoverage }).(pulumi.StringPtrOutput)
}

type DdosSettingsPtrOutput struct{ *pulumi.OutputState }

func (DdosSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosSettings)(nil)).Elem()
}

func (o DdosSettingsPtrOutput) ToDdosSettingsPtrOutput() DdosSettingsPtrOutput {
	return o
}

func (o DdosSettingsPtrOutput) ToDdosSettingsPtrOutputWithContext(ctx context.Context) DdosSettingsPtrOutput {
	return o
}

func (o DdosSettingsPtrOutput) Elem() DdosSettingsOutput {
	return o.ApplyT(func(v *DdosSettings) DdosSettings {
		if v != nil {
			return *v
		}
		var ret DdosSettings
		return ret
	}).(DdosSettingsOutput)
}

// The DDoS custom policy associated with the public IP.
func (o DdosSettingsPtrOutput) DdosCustomPolicy() SubResourcePtrOutput {
	return o.ApplyT(func(v *DdosSettings) *SubResource {
		if v == nil {
			return nil
		}
		return v.DdosCustomPolicy
	}).(SubResourcePtrOutput)
}

// Enables DDoS protection on the public IP.
func (o DdosSettingsPtrOutput) ProtectedIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DdosSettings) *bool {
		if v == nil {
			return nil
		}
		return v.ProtectedIP
	}).(pulumi.BoolPtrOutput)
}

// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
func (o DdosSettingsPtrOutput) ProtectionCoverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosSettings) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionCoverage
	}).(pulumi.StringPtrOutput)
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsResponse struct {
	// The DDoS custom policy associated with the public IP.
	DdosCustomPolicy *SubResourceResponse `pulumi:"ddosCustomPolicy"`
	// Enables DDoS protection on the public IP.
	ProtectedIP *bool `pulumi:"protectedIP"`
	// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
	ProtectionCoverage *string `pulumi:"protectionCoverage"`
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsResponseOutput struct{ *pulumi.OutputState }

func (DdosSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosSettingsResponse)(nil)).Elem()
}

func (o DdosSettingsResponseOutput) ToDdosSettingsResponseOutput() DdosSettingsResponseOutput {
	return o
}

func (o DdosSettingsResponseOutput) ToDdosSettingsResponseOutputWithContext(ctx context.Context) DdosSettingsResponseOutput {
	return o
}

// The DDoS custom policy associated with the public IP.
func (o DdosSettingsResponseOutput) DdosCustomPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *SubResourceResponse { return v.DdosCustomPolicy }).(SubResourceResponsePtrOutput)
}

// Enables DDoS protection on the public IP.
func (o DdosSettingsResponseOutput) ProtectedIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *bool { return v.ProtectedIP }).(pulumi.BoolPtrOutput)
}

// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
func (o DdosSettingsResponseOutput) ProtectionCoverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *string { return v.ProtectionCoverage }).(pulumi.StringPtrOutput)
}

type DdosSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DdosSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosSettingsResponse)(nil)).Elem()
}

func (o DdosSettingsResponsePtrOutput) ToDdosSettingsResponsePtrOutput() DdosSettingsResponsePtrOutput {
	return o
}

func (o DdosSettingsResponsePtrOutput) ToDdosSettingsResponsePtrOutputWithContext(ctx context.Context) DdosSettingsResponsePtrOutput {
	return o
}

func (o DdosSettingsResponsePtrOutput) Elem() DdosSettingsResponseOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) DdosSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DdosSettingsResponse
		return ret
	}).(DdosSettingsResponseOutput)
}

// The DDoS custom policy associated with the public IP.
func (o DdosSettingsResponsePtrOutput) DdosCustomPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.DdosCustomPolicy
	}).(SubResourceResponsePtrOutput)
}

// Enables DDoS protection on the public IP.
func (o DdosSettingsResponsePtrOutput) ProtectedIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ProtectedIP
	}).(pulumi.BoolPtrOutput)
}

// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
func (o DdosSettingsResponsePtrOutput) ProtectionCoverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionCoverage
	}).(pulumi.StringPtrOutput)
}

// Details the service to which the subnet is delegated.
type Delegation struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
	ServiceName *string `pulumi:"serviceName"`
	// Resource type.
	Type *string `pulumi:"type"`
}

// DelegationInput is an input type that accepts DelegationArgs and DelegationOutput values.
// You can construct a concrete instance of `DelegationInput` via:
//
//	DelegationArgs{...}
type DelegationInput interface {
	pulumi.Input

	ToDelegationOutput() DelegationOutput
	ToDelegationOutputWithContext(context.Context) DelegationOutput
}

// Details the service to which the subnet is delegated.
type DelegationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// Resource type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DelegationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Delegation)(nil)).Elem()
}

func (i DelegationArgs) ToDelegationOutput() DelegationOutput {
	return i.ToDelegationOutputWithContext(context.Background())
}

func (i DelegationArgs) ToDelegationOutputWithContext(ctx context.Context) DelegationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationOutput)
}

// DelegationArrayInput is an input type that accepts DelegationArray and DelegationArrayOutput values.
// You can construct a concrete instance of `DelegationArrayInput` via:
//
//	DelegationArray{ DelegationArgs{...} }
type DelegationArrayInput interface {
	pulumi.Input

	ToDelegationArrayOutput() DelegationArrayOutput
	ToDelegationArrayOutputWithContext(context.Context) DelegationArrayOutput
}

type DelegationArray []DelegationInput

func (DelegationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Delegation)(nil)).Elem()
}

func (i DelegationArray) ToDelegationArrayOutput() DelegationArrayOutput {
	return i.ToDelegationArrayOutputWithContext(context.Background())
}

func (i DelegationArray) ToDelegationArrayOutputWithContext(ctx context.Context) DelegationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationArrayOutput)
}

// Details the service to which the subnet is delegated.
type DelegationOutput struct{ *pulumi.OutputState }

func (DelegationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Delegation)(nil)).Elem()
}

func (o DelegationOutput) ToDelegationOutput() DelegationOutput {
	return o
}

func (o DelegationOutput) ToDelegationOutputWithContext(ctx context.Context) DelegationOutput {
	return o
}

// Resource ID.
func (o DelegationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a subnet. This name can be used to access the resource.
func (o DelegationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
func (o DelegationOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o DelegationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DelegationArrayOutput struct{ *pulumi.OutputState }

func (DelegationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Delegation)(nil)).Elem()
}

func (o DelegationArrayOutput) ToDelegationArrayOutput() DelegationArrayOutput {
	return o
}

func (o DelegationArrayOutput) ToDelegationArrayOutputWithContext(ctx context.Context) DelegationArrayOutput {
	return o
}

func (o DelegationArrayOutput) Index(i pulumi.IntInput) DelegationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Delegation {
		return vs[0].([]Delegation)[vs[1].(int)]
	}).(DelegationOutput)
}

// Details the service to which the subnet is delegated.
type DelegationResponse struct {
	// The actions permitted to the service upon delegation.
	Actions []string `pulumi:"actions"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the service delegation resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
	ServiceName *string `pulumi:"serviceName"`
	// Resource type.
	Type *string `pulumi:"type"`
}

// Details the service to which the subnet is delegated.
type DelegationResponseOutput struct{ *pulumi.OutputState }

func (DelegationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DelegationResponse)(nil)).Elem()
}

func (o DelegationResponseOutput) ToDelegationResponseOutput() DelegationResponseOutput {
	return o
}

func (o DelegationResponseOutput) ToDelegationResponseOutputWithContext(ctx context.Context) DelegationResponseOutput {
	return o
}

// The actions permitted to the service upon delegation.
func (o DelegationResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DelegationResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o DelegationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v DelegationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o DelegationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a subnet. This name can be used to access the resource.
func (o DelegationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the service delegation resource.
func (o DelegationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DelegationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
func (o DelegationResponseOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o DelegationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DelegationResponseArrayOutput struct{ *pulumi.OutputState }

func (DelegationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DelegationResponse)(nil)).Elem()
}

func (o DelegationResponseArrayOutput) ToDelegationResponseArrayOutput() DelegationResponseArrayOutput {
	return o
}

func (o DelegationResponseArrayOutput) ToDelegationResponseArrayOutputWithContext(ctx context.Context) DelegationResponseArrayOutput {
	return o
}

func (o DelegationResponseArrayOutput) Index(i pulumi.IntInput) DelegationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DelegationResponse {
		return vs[0].([]DelegationResponse)[vs[1].(int)]
	}).(DelegationResponseOutput)
}

// ExtendedLocation complex type.
type ExtendedLocation struct {
	// The name of the extended location.
	Name *string `pulumi:"name"`
	// The type of the extended location.
	Type *string `pulumi:"type"`
}

// ExtendedLocationInput is an input type that accepts ExtendedLocationArgs and ExtendedLocationOutput values.
// You can construct a concrete instance of `ExtendedLocationInput` via:
//
//	ExtendedLocationArgs{...}
type ExtendedLocationInput interface {
	pulumi.Input

	ToExtendedLocationOutput() ExtendedLocationOutput
	ToExtendedLocationOutputWithContext(context.Context) ExtendedLocationOutput
}

// ExtendedLocation complex type.
type ExtendedLocationArgs struct {
	// The name of the extended location.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the extended location.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (i ExtendedLocationArgs) ToExtendedLocationOutput() ExtendedLocationOutput {
	return i.ToExtendedLocationOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput)
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput).ToExtendedLocationPtrOutputWithContext(ctx)
}

// ExtendedLocationPtrInput is an input type that accepts ExtendedLocationArgs, ExtendedLocationPtr and ExtendedLocationPtrOutput values.
// You can construct a concrete instance of `ExtendedLocationPtrInput` via:
//
//	        ExtendedLocationArgs{...}
//
//	or:
//
//	        nil
type ExtendedLocationPtrInput interface {
	pulumi.Input

	ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput
	ToExtendedLocationPtrOutputWithContext(context.Context) ExtendedLocationPtrOutput
}

type extendedLocationPtrType ExtendedLocationArgs

func ExtendedLocationPtr(v *ExtendedLocationArgs) ExtendedLocationPtrInput {
	return (*extendedLocationPtrType)(v)
}

func (*extendedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationPtrOutput)
}

// ExtendedLocation complex type.
type ExtendedLocationOutput struct{ *pulumi.OutputState }

func (ExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationOutput) ToExtendedLocationOutput() ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocation) *ExtendedLocation {
		return &v
	}).(ExtendedLocationPtrOutput)
}

// The name of the extended location.
func (o ExtendedLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) Elem() ExtendedLocationOutput {
	return o.ApplyT(func(v *ExtendedLocation) ExtendedLocation {
		if v != nil {
			return *v
		}
		var ret ExtendedLocation
		return ret
	}).(ExtendedLocationOutput)
}

// The name of the extended location.
func (o ExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// ExtendedLocation complex type.
type ExtendedLocationResponse struct {
	// The name of the extended location.
	Name *string `pulumi:"name"`
	// The type of the extended location.
	Type *string `pulumi:"type"`
}

// ExtendedLocation complex type.
type ExtendedLocationResponseOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutput() ExtendedLocationResponseOutput {
	return o
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutputWithContext(ctx context.Context) ExtendedLocationResponseOutput {
	return o
}

// The name of the extended location.
func (o ExtendedLocationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExtendedLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutput() ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutputWithContext(ctx context.Context) ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) Elem() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) ExtendedLocationResponse {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationResponse
		return ret
	}).(ExtendedLocationResponseOutput)
}

// The name of the extended location.
func (o ExtendedLocationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Parameters that define the flow log format.
type FlowLogFormatParametersResponse struct {
	// The file type of flow log.
	Type *string `pulumi:"type"`
	// The version (revision) of the flow log.
	Version *int `pulumi:"version"`
}

// Defaults sets the appropriate defaults for FlowLogFormatParametersResponse
func (val *FlowLogFormatParametersResponse) Defaults() *FlowLogFormatParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Version == nil {
		version_ := 0
		tmp.Version = &version_
	}
	return &tmp
}

// Parameters that define the flow log format.
type FlowLogFormatParametersResponseOutput struct{ *pulumi.OutputState }

func (FlowLogFormatParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogFormatParametersResponse)(nil)).Elem()
}

func (o FlowLogFormatParametersResponseOutput) ToFlowLogFormatParametersResponseOutput() FlowLogFormatParametersResponseOutput {
	return o
}

func (o FlowLogFormatParametersResponseOutput) ToFlowLogFormatParametersResponseOutputWithContext(ctx context.Context) FlowLogFormatParametersResponseOutput {
	return o
}

// The file type of flow log.
func (o FlowLogFormatParametersResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLogFormatParametersResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The version (revision) of the flow log.
func (o FlowLogFormatParametersResponseOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FlowLogFormatParametersResponse) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type FlowLogFormatParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (FlowLogFormatParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLogFormatParametersResponse)(nil)).Elem()
}

func (o FlowLogFormatParametersResponsePtrOutput) ToFlowLogFormatParametersResponsePtrOutput() FlowLogFormatParametersResponsePtrOutput {
	return o
}

func (o FlowLogFormatParametersResponsePtrOutput) ToFlowLogFormatParametersResponsePtrOutputWithContext(ctx context.Context) FlowLogFormatParametersResponsePtrOutput {
	return o
}

func (o FlowLogFormatParametersResponsePtrOutput) Elem() FlowLogFormatParametersResponseOutput {
	return o.ApplyT(func(v *FlowLogFormatParametersResponse) FlowLogFormatParametersResponse {
		if v != nil {
			return *v
		}
		var ret FlowLogFormatParametersResponse
		return ret
	}).(FlowLogFormatParametersResponseOutput)
}

// The file type of flow log.
func (o FlowLogFormatParametersResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowLogFormatParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The version (revision) of the flow log.
func (o FlowLogFormatParametersResponsePtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlowLogFormatParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// A flow log resource.
type FlowLogResponse struct {
	// Flag to enable/disable flow logging.
	Enabled *bool `pulumi:"enabled"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Parameters that define the configuration of traffic analytics.
	FlowAnalyticsConfiguration *TrafficAnalyticsPropertiesResponse `pulumi:"flowAnalyticsConfiguration"`
	// Parameters that define the flow log format.
	Format *FlowLogFormatParametersResponse `pulumi:"format"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the flow log.
	ProvisioningState string `pulumi:"provisioningState"`
	// Parameters that define the retention policy for flow log.
	RetentionPolicy *RetentionPolicyParametersResponse `pulumi:"retentionPolicy"`
	// ID of the storage account which is used to store the flow log.
	StorageId string `pulumi:"storageId"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Guid of network security group to which flow log will be applied.
	TargetResourceGuid string `pulumi:"targetResourceGuid"`
	// ID of network security group to which flow log will be applied.
	TargetResourceId string `pulumi:"targetResourceId"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for FlowLogResponse
func (val *FlowLogResponse) Defaults() *FlowLogResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Format = tmp.Format.Defaults()

	tmp.RetentionPolicy = tmp.RetentionPolicy.Defaults()

	return &tmp
}

// A flow log resource.
type FlowLogResponseOutput struct{ *pulumi.OutputState }

func (FlowLogResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogResponse)(nil)).Elem()
}

func (o FlowLogResponseOutput) ToFlowLogResponseOutput() FlowLogResponseOutput {
	return o
}

func (o FlowLogResponseOutput) ToFlowLogResponseOutputWithContext(ctx context.Context) FlowLogResponseOutput {
	return o
}

// Flag to enable/disable flow logging.
func (o FlowLogResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o FlowLogResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o FlowLogResponseOutput) FlowAnalyticsConfiguration() TrafficAnalyticsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *TrafficAnalyticsPropertiesResponse { return v.FlowAnalyticsConfiguration }).(TrafficAnalyticsPropertiesResponsePtrOutput)
}

// Parameters that define the flow log format.
func (o FlowLogResponseOutput) Format() FlowLogFormatParametersResponsePtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *FlowLogFormatParametersResponse { return v.Format }).(FlowLogFormatParametersResponsePtrOutput)
}

// Resource ID.
func (o FlowLogResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o FlowLogResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o FlowLogResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the flow log.
func (o FlowLogResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Parameters that define the retention policy for flow log.
func (o FlowLogResponseOutput) RetentionPolicy() RetentionPolicyParametersResponsePtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *RetentionPolicyParametersResponse { return v.RetentionPolicy }).(RetentionPolicyParametersResponsePtrOutput)
}

// ID of the storage account which is used to store the flow log.
func (o FlowLogResponseOutput) StorageId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.StorageId }).(pulumi.StringOutput)
}

// Resource tags.
func (o FlowLogResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowLogResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Guid of network security group to which flow log will be applied.
func (o FlowLogResponseOutput) TargetResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.TargetResourceGuid }).(pulumi.StringOutput)
}

// ID of network security group to which flow log will be applied.
func (o FlowLogResponseOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.TargetResourceId }).(pulumi.StringOutput)
}

// Resource type.
func (o FlowLogResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.Type }).(pulumi.StringOutput)
}

type FlowLogResponseArrayOutput struct{ *pulumi.OutputState }

func (FlowLogResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowLogResponse)(nil)).Elem()
}

func (o FlowLogResponseArrayOutput) ToFlowLogResponseArrayOutput() FlowLogResponseArrayOutput {
	return o
}

func (o FlowLogResponseArrayOutput) ToFlowLogResponseArrayOutputWithContext(ctx context.Context) FlowLogResponseArrayOutput {
	return o
}

func (o FlowLogResponseArrayOutput) Index(i pulumi.IntInput) FlowLogResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowLogResponse {
		return vs[0].([]FlowLogResponse)[vs[1].(int)]
	}).(FlowLogResponseOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfiguration struct {
	// The reference to gateway load balancer frontend IP.
	GatewayLoadBalancer *SubResource `pulumi:"gatewayLoadBalancer"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The Private IP allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The reference to the Public IP resource.
	PublicIPAddress *PublicIPAddress `pulumi:"publicIPAddress"`
	// The reference to the Public IP Prefix resource.
	PublicIPPrefix *SubResource `pulumi:"publicIPPrefix"`
	// The reference to the subnet resource.
	Subnet *Subnet `pulumi:"subnet"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// Defaults sets the appropriate defaults for FrontendIPConfiguration
func (val *FrontendIPConfiguration) Defaults() *FrontendIPConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// FrontendIPConfigurationInput is an input type that accepts FrontendIPConfigurationArgs and FrontendIPConfigurationOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationInput` via:
//
//	FrontendIPConfigurationArgs{...}
type FrontendIPConfigurationInput interface {
	pulumi.Input

	ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput
	ToFrontendIPConfigurationOutputWithContext(context.Context) FrontendIPConfigurationOutput
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationArgs struct {
	// The reference to gateway load balancer frontend IP.
	GatewayLoadBalancer SubResourcePtrInput `pulumi:"gatewayLoadBalancer"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
	PrivateIPAddressVersion pulumi.StringPtrInput `pulumi:"privateIPAddressVersion"`
	// The Private IP allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The reference to the Public IP resource.
	PublicIPAddress PublicIPAddressPtrInput `pulumi:"publicIPAddress"`
	// The reference to the Public IP Prefix resource.
	PublicIPPrefix SubResourcePtrInput `pulumi:"publicIPPrefix"`
	// The reference to the subnet resource.
	Subnet SubnetPtrInput `pulumi:"subnet"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

// Defaults sets the appropriate defaults for FrontendIPConfigurationArgs
func (val *FrontendIPConfigurationArgs) Defaults() *FrontendIPConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (FrontendIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfiguration)(nil)).Elem()
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput {
	return i.ToFrontendIPConfigurationOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationOutputWithContext(ctx context.Context) FrontendIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationOutput)
}

// FrontendIPConfigurationArrayInput is an input type that accepts FrontendIPConfigurationArray and FrontendIPConfigurationArrayOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationArrayInput` via:
//
//	FrontendIPConfigurationArray{ FrontendIPConfigurationArgs{...} }
type FrontendIPConfigurationArrayInput interface {
	pulumi.Input

	ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput
	ToFrontendIPConfigurationArrayOutputWithContext(context.Context) FrontendIPConfigurationArrayOutput
}

type FrontendIPConfigurationArray []FrontendIPConfigurationInput

func (FrontendIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfiguration)(nil)).Elem()
}

func (i FrontendIPConfigurationArray) ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput {
	return i.ToFrontendIPConfigurationArrayOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationArray) ToFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationArrayOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfiguration)(nil)).Elem()
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput {
	return o
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationOutputWithContext(ctx context.Context) FrontendIPConfigurationOutput {
	return o
}

// The reference to gateway load balancer frontend IP.
func (o FrontendIPConfigurationOutput) GatewayLoadBalancer() SubResourcePtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *SubResource { return v.GatewayLoadBalancer }).(SubResourcePtrOutput)
}

// Resource ID.
func (o FrontendIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
func (o FrontendIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
func (o FrontendIPConfigurationOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The Private IP allocation method.
func (o FrontendIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The reference to the Public IP resource.
func (o FrontendIPConfigurationOutput) PublicIPAddress() PublicIPAddressPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *PublicIPAddress { return v.PublicIPAddress }).(PublicIPAddressPtrOutput)
}

// The reference to the Public IP Prefix resource.
func (o FrontendIPConfigurationOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *SubResource { return v.PublicIPPrefix }).(SubResourcePtrOutput)
}

// The reference to the subnet resource.
func (o FrontendIPConfigurationOutput) Subnet() SubnetPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *Subnet { return v.Subnet }).(SubnetPtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfiguration)(nil)).Elem()
}

func (o FrontendIPConfigurationArrayOutput) ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput {
	return o
}

func (o FrontendIPConfigurationArrayOutput) ToFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationArrayOutput {
	return o
}

func (o FrontendIPConfigurationArrayOutput) Index(i pulumi.IntInput) FrontendIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendIPConfiguration {
		return vs[0].([]FrontendIPConfiguration)[vs[1].(int)]
	}).(FrontendIPConfigurationOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The reference to gateway load balancer frontend IP.
	GatewayLoadBalancer *SubResourceResponse `pulumi:"gatewayLoadBalancer"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of references to inbound pools that use this frontend IP.
	InboundNatPools []SubResourceResponse `pulumi:"inboundNatPools"`
	// An array of references to inbound rules that use this frontend IP.
	InboundNatRules []SubResourceResponse `pulumi:"inboundNatRules"`
	// An array of references to load balancing rules that use this frontend IP.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// An array of references to outbound rules that use this frontend IP.
	OutboundRules []SubResourceResponse `pulumi:"outboundRules"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The Private IP allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the frontend IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the Public IP resource.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// The reference to the Public IP Prefix resource.
	PublicIPPrefix *SubResourceResponse `pulumi:"publicIPPrefix"`
	// The reference to the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// Type of the resource.
	Type string `pulumi:"type"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// Defaults sets the appropriate defaults for FrontendIPConfigurationResponse
func (val *FrontendIPConfigurationResponse) Defaults() *FrontendIPConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.PublicIPAddress = tmp.PublicIPAddress.Defaults()

	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponseOutput() FrontendIPConfigurationResponseOutput {
	return o
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The reference to gateway load balancer frontend IP.
func (o FrontendIPConfigurationResponseOutput) GatewayLoadBalancer() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *SubResourceResponse { return v.GatewayLoadBalancer }).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o FrontendIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of references to inbound pools that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) InboundNatPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.InboundNatPools }).(SubResourceResponseArrayOutput)
}

// An array of references to inbound rules that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) InboundNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.InboundNatRules }).(SubResourceResponseArrayOutput)
}

// An array of references to load balancing rules that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
func (o FrontendIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An array of references to outbound rules that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) OutboundRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.OutboundRules }).(SubResourceResponseArrayOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
func (o FrontendIPConfigurationResponseOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The Private IP allocation method.
func (o FrontendIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the frontend IP configuration resource.
func (o FrontendIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the Public IP resource.
func (o FrontendIPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// The reference to the Public IP Prefix resource.
func (o FrontendIPConfigurationResponseOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *SubResourceResponse { return v.PublicIPPrefix }).(SubResourceResponsePtrOutput)
}

// The reference to the subnet resource.
func (o FrontendIPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// Type of the resource.
func (o FrontendIPConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponsePtrOutput) ToFrontendIPConfigurationResponsePtrOutput() FrontendIPConfigurationResponsePtrOutput {
	return o
}

func (o FrontendIPConfigurationResponsePtrOutput) ToFrontendIPConfigurationResponsePtrOutputWithContext(ctx context.Context) FrontendIPConfigurationResponsePtrOutput {
	return o
}

func (o FrontendIPConfigurationResponsePtrOutput) Elem() FrontendIPConfigurationResponseOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) FrontendIPConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret FrontendIPConfigurationResponse
		return ret
	}).(FrontendIPConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// The reference to gateway load balancer frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) GatewayLoadBalancer() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.GatewayLoadBalancer
	}).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o FrontendIPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// An array of references to inbound pools that use this frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) InboundNatPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.InboundNatPools
	}).(SubResourceResponseArrayOutput)
}

// An array of references to inbound rules that use this frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) InboundNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.InboundNatRules
	}).(SubResourceResponseArrayOutput)
}

// An array of references to load balancing rules that use this frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancingRules
	}).(SubResourceResponseArrayOutput)
}

// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
func (o FrontendIPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// An array of references to outbound rules that use this frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) OutboundRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.OutboundRules
	}).(SubResourceResponseArrayOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
func (o FrontendIPConfigurationResponsePtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The Private IP allocation method.
func (o FrontendIPConfigurationResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the frontend IP configuration resource.
func (o FrontendIPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference to the Public IP resource.
func (o FrontendIPConfigurationResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// The reference to the Public IP Prefix resource.
func (o FrontendIPConfigurationResponsePtrOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourceResponsePtrOutput)
}

// The reference to the subnet resource.
func (o FrontendIPConfigurationResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

// Type of the resource.
func (o FrontendIPConfigurationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationResponsePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponseArrayOutput) ToFrontendIPConfigurationResponseArrayOutput() FrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o FrontendIPConfigurationResponseArrayOutput) ToFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o FrontendIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) FrontendIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendIPConfigurationResponse {
		return vs[0].([]FrontendIPConfigurationResponse)[vs[1].(int)]
	}).(FrontendIPConfigurationResponseOutput)
}

// Gateway load balancer tunnel interface of a load balancer backend address pool.
type GatewayLoadBalancerTunnelInterfaceResponse struct {
	// Identifier of gateway load balancer tunnel interface.
	Identifier *int `pulumi:"identifier"`
	// Port of gateway load balancer tunnel interface.
	Port *int `pulumi:"port"`
	// Protocol of gateway load balancer tunnel interface.
	Protocol *string `pulumi:"protocol"`
	// Traffic type of gateway load balancer tunnel interface.
	Type *string `pulumi:"type"`
}

// Gateway load balancer tunnel interface of a load balancer backend address pool.
type GatewayLoadBalancerTunnelInterfaceResponseOutput struct{ *pulumi.OutputState }

func (GatewayLoadBalancerTunnelInterfaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayLoadBalancerTunnelInterfaceResponse)(nil)).Elem()
}

func (o GatewayLoadBalancerTunnelInterfaceResponseOutput) ToGatewayLoadBalancerTunnelInterfaceResponseOutput() GatewayLoadBalancerTunnelInterfaceResponseOutput {
	return o
}

func (o GatewayLoadBalancerTunnelInterfaceResponseOutput) ToGatewayLoadBalancerTunnelInterfaceResponseOutputWithContext(ctx context.Context) GatewayLoadBalancerTunnelInterfaceResponseOutput {
	return o
}

// Identifier of gateway load balancer tunnel interface.
func (o GatewayLoadBalancerTunnelInterfaceResponseOutput) Identifier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayLoadBalancerTunnelInterfaceResponse) *int { return v.Identifier }).(pulumi.IntPtrOutput)
}

// Port of gateway load balancer tunnel interface.
func (o GatewayLoadBalancerTunnelInterfaceResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayLoadBalancerTunnelInterfaceResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol of gateway load balancer tunnel interface.
func (o GatewayLoadBalancerTunnelInterfaceResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLoadBalancerTunnelInterfaceResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Traffic type of gateway load balancer tunnel interface.
func (o GatewayLoadBalancerTunnelInterfaceResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLoadBalancerTunnelInterfaceResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GatewayLoadBalancerTunnelInterfaceResponseArrayOutput struct{ *pulumi.OutputState }

func (GatewayLoadBalancerTunnelInterfaceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayLoadBalancerTunnelInterfaceResponse)(nil)).Elem()
}

func (o GatewayLoadBalancerTunnelInterfaceResponseArrayOutput) ToGatewayLoadBalancerTunnelInterfaceResponseArrayOutput() GatewayLoadBalancerTunnelInterfaceResponseArrayOutput {
	return o
}

func (o GatewayLoadBalancerTunnelInterfaceResponseArrayOutput) ToGatewayLoadBalancerTunnelInterfaceResponseArrayOutputWithContext(ctx context.Context) GatewayLoadBalancerTunnelInterfaceResponseArrayOutput {
	return o
}

func (o GatewayLoadBalancerTunnelInterfaceResponseArrayOutput) Index(i pulumi.IntInput) GatewayLoadBalancerTunnelInterfaceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayLoadBalancerTunnelInterfaceResponse {
		return vs[0].([]GatewayLoadBalancerTunnelInterfaceResponse)[vs[1].(int)]
	}).(GatewayLoadBalancerTunnelInterfaceResponseOutput)
}

// IP configuration profile child resource.
type IPConfigurationProfileResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the IP configuration profile resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the subnet resource to create a container network interface ip configuration.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// Sub Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for IPConfigurationProfileResponse
func (val *IPConfigurationProfileResponse) Defaults() *IPConfigurationProfileResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// IP configuration profile child resource.
type IPConfigurationProfileResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfileResponse)(nil)).Elem()
}

func (o IPConfigurationProfileResponseOutput) ToIPConfigurationProfileResponseOutput() IPConfigurationProfileResponseOutput {
	return o
}

func (o IPConfigurationProfileResponseOutput) ToIPConfigurationProfileResponseOutputWithContext(ctx context.Context) IPConfigurationProfileResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationProfileResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o IPConfigurationProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o IPConfigurationProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the IP configuration profile resource.
func (o IPConfigurationProfileResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the subnet resource to create a container network interface ip configuration.
func (o IPConfigurationProfileResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// Sub Resource type.
func (o IPConfigurationProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type IPConfigurationProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationProfileResponse)(nil)).Elem()
}

func (o IPConfigurationProfileResponseArrayOutput) ToIPConfigurationProfileResponseArrayOutput() IPConfigurationProfileResponseArrayOutput {
	return o
}

func (o IPConfigurationProfileResponseArrayOutput) ToIPConfigurationProfileResponseArrayOutputWithContext(ctx context.Context) IPConfigurationProfileResponseArrayOutput {
	return o
}

func (o IPConfigurationProfileResponseArrayOutput) Index(i pulumi.IntInput) IPConfigurationProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationProfileResponse {
		return vs[0].([]IPConfigurationProfileResponse)[vs[1].(int)]
	}).(IPConfigurationProfileResponseOutput)
}

// IP configuration.
type IPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the public IP resource.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// The reference to the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
}

// Defaults sets the appropriate defaults for IPConfigurationResponse
func (val *IPConfigurationResponse) Defaults() *IPConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrivateIPAllocationMethod == nil {
		privateIPAllocationMethod_ := "Dynamic"
		tmp.PrivateIPAllocationMethod = &privateIPAllocationMethod_
	}
	tmp.PublicIPAddress = tmp.PublicIPAddress.Defaults()

	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// IP configuration.
type IPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponseOutput() IPConfigurationResponseOutput {
	return o
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponseOutputWithContext(ctx context.Context) IPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o IPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o IPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the IP configuration resource.
func (o IPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the public IP resource.
func (o IPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// The reference to the subnet resource.
func (o IPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

type IPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponsePtrOutput) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return o
}

func (o IPConfigurationResponsePtrOutput) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return o
}

func (o IPConfigurationResponsePtrOutput) Elem() IPConfigurationResponseOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) IPConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret IPConfigurationResponse
		return ret
	}).(IPConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o IPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o IPConfigurationResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the IP configuration resource.
func (o IPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference to the public IP resource.
func (o IPConfigurationResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// The reference to the subnet resource.
func (o IPConfigurationResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

type IPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponseArrayOutput) ToIPConfigurationResponseArrayOutput() IPConfigurationResponseArrayOutput {
	return o
}

func (o IPConfigurationResponseArrayOutput) ToIPConfigurationResponseArrayOutputWithContext(ctx context.Context) IPConfigurationResponseArrayOutput {
	return o
}

func (o IPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) IPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationResponse {
		return vs[0].([]IPConfigurationResponse)[vs[1].(int)]
	}).(IPConfigurationResponseOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponse struct {
	// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
	BackendIPConfiguration NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfiguration"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort *int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort *int `pulumi:"frontendPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference to the transport protocol used by the load balancing rule.
	Protocol *string `pulumi:"protocol"`
	// The provisioning state of the inbound NAT rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for InboundNatRuleResponse
func (val *InboundNatRuleResponse) Defaults() *InboundNatRuleResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.BackendIPConfiguration = *tmp.BackendIPConfiguration.Defaults()

	return &tmp
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponseOutput struct{ *pulumi.OutputState }

func (InboundNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleResponse)(nil)).Elem()
}

func (o InboundNatRuleResponseOutput) ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput {
	return o
}

func (o InboundNatRuleResponseOutput) ToInboundNatRuleResponseOutputWithContext(ctx context.Context) InboundNatRuleResponseOutput {
	return o
}

// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
func (o InboundNatRuleResponseOutput) BackendIPConfiguration() NetworkInterfaceIPConfigurationResponseOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponseOutput)
}

// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
func (o InboundNatRuleResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatRuleResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleResponseOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatRuleResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
func (o InboundNatRuleResponseOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o InboundNatRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
func (o InboundNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference to the transport protocol used by the load balancing rule.
func (o InboundNatRuleResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The provisioning state of the inbound NAT rule resource.
func (o InboundNatRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o InboundNatRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type InboundNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleResponse)(nil)).Elem()
}

func (o InboundNatRuleResponseArrayOutput) ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput {
	return o
}

func (o InboundNatRuleResponseArrayOutput) ToInboundNatRuleResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleResponseArrayOutput {
	return o
}

func (o InboundNatRuleResponseArrayOutput) Index(i pulumi.IntInput) InboundNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatRuleResponse {
		return vs[0].([]InboundNatRuleResponse)[vs[1].(int)]
	}).(InboundNatRuleResponseOutput)
}

// Contains the IpTag associated with the object.
type IpTag struct {
	// The IP tag type. Example: FirstPartyUsage.
	IpTagType *string `pulumi:"ipTagType"`
	// The value of the IP tag associated with the public IP. Example: SQL.
	Tag *string `pulumi:"tag"`
}

// IpTagInput is an input type that accepts IpTagArgs and IpTagOutput values.
// You can construct a concrete instance of `IpTagInput` via:
//
//	IpTagArgs{...}
type IpTagInput interface {
	pulumi.Input

	ToIpTagOutput() IpTagOutput
	ToIpTagOutputWithContext(context.Context) IpTagOutput
}

// Contains the IpTag associated with the object.
type IpTagArgs struct {
	// The IP tag type. Example: FirstPartyUsage.
	IpTagType pulumi.StringPtrInput `pulumi:"ipTagType"`
	// The value of the IP tag associated with the public IP. Example: SQL.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (IpTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTag)(nil)).Elem()
}

func (i IpTagArgs) ToIpTagOutput() IpTagOutput {
	return i.ToIpTagOutputWithContext(context.Background())
}

func (i IpTagArgs) ToIpTagOutputWithContext(ctx context.Context) IpTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpTagOutput)
}

// IpTagArrayInput is an input type that accepts IpTagArray and IpTagArrayOutput values.
// You can construct a concrete instance of `IpTagArrayInput` via:
//
//	IpTagArray{ IpTagArgs{...} }
type IpTagArrayInput interface {
	pulumi.Input

	ToIpTagArrayOutput() IpTagArrayOutput
	ToIpTagArrayOutputWithContext(context.Context) IpTagArrayOutput
}

type IpTagArray []IpTagInput

func (IpTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTag)(nil)).Elem()
}

func (i IpTagArray) ToIpTagArrayOutput() IpTagArrayOutput {
	return i.ToIpTagArrayOutputWithContext(context.Background())
}

func (i IpTagArray) ToIpTagArrayOutputWithContext(ctx context.Context) IpTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpTagArrayOutput)
}

// Contains the IpTag associated with the object.
type IpTagOutput struct{ *pulumi.OutputState }

func (IpTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTag)(nil)).Elem()
}

func (o IpTagOutput) ToIpTagOutput() IpTagOutput {
	return o
}

func (o IpTagOutput) ToIpTagOutputWithContext(ctx context.Context) IpTagOutput {
	return o
}

// The IP tag type. Example: FirstPartyUsage.
func (o IpTagOutput) IpTagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTag) *string { return v.IpTagType }).(pulumi.StringPtrOutput)
}

// The value of the IP tag associated with the public IP. Example: SQL.
func (o IpTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IpTagArrayOutput struct{ *pulumi.OutputState }

func (IpTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTag)(nil)).Elem()
}

func (o IpTagArrayOutput) ToIpTagArrayOutput() IpTagArrayOutput {
	return o
}

func (o IpTagArrayOutput) ToIpTagArrayOutputWithContext(ctx context.Context) IpTagArrayOutput {
	return o
}

func (o IpTagArrayOutput) Index(i pulumi.IntInput) IpTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpTag {
		return vs[0].([]IpTag)[vs[1].(int)]
	}).(IpTagOutput)
}

// Contains the IpTag associated with the object.
type IpTagResponse struct {
	// The IP tag type. Example: FirstPartyUsage.
	IpTagType *string `pulumi:"ipTagType"`
	// The value of the IP tag associated with the public IP. Example: SQL.
	Tag *string `pulumi:"tag"`
}

// Contains the IpTag associated with the object.
type IpTagResponseOutput struct{ *pulumi.OutputState }

func (IpTagResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTagResponse)(nil)).Elem()
}

func (o IpTagResponseOutput) ToIpTagResponseOutput() IpTagResponseOutput {
	return o
}

func (o IpTagResponseOutput) ToIpTagResponseOutputWithContext(ctx context.Context) IpTagResponseOutput {
	return o
}

// The IP tag type. Example: FirstPartyUsage.
func (o IpTagResponseOutput) IpTagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTagResponse) *string { return v.IpTagType }).(pulumi.StringPtrOutput)
}

// The value of the IP tag associated with the public IP. Example: SQL.
func (o IpTagResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTagResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IpTagResponseArrayOutput struct{ *pulumi.OutputState }

func (IpTagResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTagResponse)(nil)).Elem()
}

func (o IpTagResponseArrayOutput) ToIpTagResponseArrayOutput() IpTagResponseArrayOutput {
	return o
}

func (o IpTagResponseArrayOutput) ToIpTagResponseArrayOutputWithContext(ctx context.Context) IpTagResponseArrayOutput {
	return o
}

func (o IpTagResponseArrayOutput) Index(i pulumi.IntInput) IpTagResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpTagResponse {
		return vs[0].([]IpTagResponse)[vs[1].(int)]
	}).(IpTagResponseOutput)
}

// Load balancer backend addresses.
type LoadBalancerBackendAddressResponse struct {
	// IP Address belonging to the referenced virtual network.
	IpAddress *string `pulumi:"ipAddress"`
	// Reference to the frontend ip address configuration defined in regional loadbalancer.
	LoadBalancerFrontendIPConfiguration *SubResourceResponse `pulumi:"loadBalancerFrontendIPConfiguration"`
	// Name of the backend address.
	Name *string `pulumi:"name"`
	// Reference to IP address defined in network interfaces.
	NetworkInterfaceIPConfiguration SubResourceResponse `pulumi:"networkInterfaceIPConfiguration"`
	// Reference to an existing subnet.
	Subnet *SubResourceResponse `pulumi:"subnet"`
	// Reference to an existing virtual network.
	VirtualNetwork *SubResourceResponse `pulumi:"virtualNetwork"`
}

// Load balancer backend addresses.
type LoadBalancerBackendAddressResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddressResponse)(nil)).Elem()
}

func (o LoadBalancerBackendAddressResponseOutput) ToLoadBalancerBackendAddressResponseOutput() LoadBalancerBackendAddressResponseOutput {
	return o
}

func (o LoadBalancerBackendAddressResponseOutput) ToLoadBalancerBackendAddressResponseOutputWithContext(ctx context.Context) LoadBalancerBackendAddressResponseOutput {
	return o
}

// IP Address belonging to the referenced virtual network.
func (o LoadBalancerBackendAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Reference to the frontend ip address configuration defined in regional loadbalancer.
func (o LoadBalancerBackendAddressResponseOutput) LoadBalancerFrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *SubResourceResponse {
		return v.LoadBalancerFrontendIPConfiguration
	}).(SubResourceResponsePtrOutput)
}

// Name of the backend address.
func (o LoadBalancerBackendAddressResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to IP address defined in network interfaces.
func (o LoadBalancerBackendAddressResponseOutput) NetworkInterfaceIPConfiguration() SubResourceResponseOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) SubResourceResponse {
		return v.NetworkInterfaceIPConfiguration
	}).(SubResourceResponseOutput)
}

// Reference to an existing subnet.
func (o LoadBalancerBackendAddressResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

// Reference to an existing virtual network.
func (o LoadBalancerBackendAddressResponseOutput) VirtualNetwork() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *SubResourceResponse { return v.VirtualNetwork }).(SubResourceResponsePtrOutput)
}

type LoadBalancerBackendAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddressResponse)(nil)).Elem()
}

func (o LoadBalancerBackendAddressResponseArrayOutput) ToLoadBalancerBackendAddressResponseArrayOutput() LoadBalancerBackendAddressResponseArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressResponseArrayOutput) ToLoadBalancerBackendAddressResponseArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressResponseArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancerBackendAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerBackendAddressResponse {
		return vs[0].([]LoadBalancerBackendAddressResponse)[vs[1].(int)]
	}).(LoadBalancerBackendAddressResponseOutput)
}

// Nat Gateway resource.
type NatGateway struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The idle timeout of the nat gateway.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Resource location.
	Location *string `pulumi:"location"`
	// An array of public ip addresses associated with the nat gateway resource.
	PublicIpAddresses []SubResource `pulumi:"publicIpAddresses"`
	// An array of public ip prefixes associated with the nat gateway resource.
	PublicIpPrefixes []SubResource `pulumi:"publicIpPrefixes"`
	// The nat gateway SKU.
	Sku *NatGatewaySku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// A list of availability zones denoting the zone in which Nat Gateway should be deployed.
	Zones []string `pulumi:"zones"`
}

// NatGatewayInput is an input type that accepts NatGatewayArgs and NatGatewayOutput values.
// You can construct a concrete instance of `NatGatewayInput` via:
//
//	NatGatewayArgs{...}
type NatGatewayInput interface {
	pulumi.Input

	ToNatGatewayOutput() NatGatewayOutput
	ToNatGatewayOutputWithContext(context.Context) NatGatewayOutput
}

// Nat Gateway resource.
type NatGatewayArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The idle timeout of the nat gateway.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// An array of public ip addresses associated with the nat gateway resource.
	PublicIpAddresses SubResourceArrayInput `pulumi:"publicIpAddresses"`
	// An array of public ip prefixes associated with the nat gateway resource.
	PublicIpPrefixes SubResourceArrayInput `pulumi:"publicIpPrefixes"`
	// The nat gateway SKU.
	Sku NatGatewaySkuPtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// A list of availability zones denoting the zone in which Nat Gateway should be deployed.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (NatGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGateway)(nil)).Elem()
}

func (i NatGatewayArgs) ToNatGatewayOutput() NatGatewayOutput {
	return i.ToNatGatewayOutputWithContext(context.Background())
}

func (i NatGatewayArgs) ToNatGatewayOutputWithContext(ctx context.Context) NatGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewayOutput)
}

func (i NatGatewayArgs) ToNatGatewayPtrOutput() NatGatewayPtrOutput {
	return i.ToNatGatewayPtrOutputWithContext(context.Background())
}

func (i NatGatewayArgs) ToNatGatewayPtrOutputWithContext(ctx context.Context) NatGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewayOutput).ToNatGatewayPtrOutputWithContext(ctx)
}

// NatGatewayPtrInput is an input type that accepts NatGatewayArgs, NatGatewayPtr and NatGatewayPtrOutput values.
// You can construct a concrete instance of `NatGatewayPtrInput` via:
//
//	        NatGatewayArgs{...}
//
//	or:
//
//	        nil
type NatGatewayPtrInput interface {
	pulumi.Input

	ToNatGatewayPtrOutput() NatGatewayPtrOutput
	ToNatGatewayPtrOutputWithContext(context.Context) NatGatewayPtrOutput
}

type natGatewayPtrType NatGatewayArgs

func NatGatewayPtr(v *NatGatewayArgs) NatGatewayPtrInput {
	return (*natGatewayPtrType)(v)
}

func (*natGatewayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGateway)(nil)).Elem()
}

func (i *natGatewayPtrType) ToNatGatewayPtrOutput() NatGatewayPtrOutput {
	return i.ToNatGatewayPtrOutputWithContext(context.Background())
}

func (i *natGatewayPtrType) ToNatGatewayPtrOutputWithContext(ctx context.Context) NatGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewayPtrOutput)
}

// Nat Gateway resource.
type NatGatewayOutput struct{ *pulumi.OutputState }

func (NatGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGateway)(nil)).Elem()
}

func (o NatGatewayOutput) ToNatGatewayOutput() NatGatewayOutput {
	return o
}

func (o NatGatewayOutput) ToNatGatewayOutputWithContext(ctx context.Context) NatGatewayOutput {
	return o
}

func (o NatGatewayOutput) ToNatGatewayPtrOutput() NatGatewayPtrOutput {
	return o.ToNatGatewayPtrOutputWithContext(context.Background())
}

func (o NatGatewayOutput) ToNatGatewayPtrOutputWithContext(ctx context.Context) NatGatewayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NatGateway) *NatGateway {
		return &v
	}).(NatGatewayPtrOutput)
}

// Resource ID.
func (o NatGatewayOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatGateway) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The idle timeout of the nat gateway.
func (o NatGatewayOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NatGateway) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Resource location.
func (o NatGatewayOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatGateway) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// An array of public ip addresses associated with the nat gateway resource.
func (o NatGatewayOutput) PublicIpAddresses() SubResourceArrayOutput {
	return o.ApplyT(func(v NatGateway) []SubResource { return v.PublicIpAddresses }).(SubResourceArrayOutput)
}

// An array of public ip prefixes associated with the nat gateway resource.
func (o NatGatewayOutput) PublicIpPrefixes() SubResourceArrayOutput {
	return o.ApplyT(func(v NatGateway) []SubResource { return v.PublicIpPrefixes }).(SubResourceArrayOutput)
}

// The nat gateway SKU.
func (o NatGatewayOutput) Sku() NatGatewaySkuPtrOutput {
	return o.ApplyT(func(v NatGateway) *NatGatewaySku { return v.Sku }).(NatGatewaySkuPtrOutput)
}

// Resource tags.
func (o NatGatewayOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NatGateway) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A list of availability zones denoting the zone in which Nat Gateway should be deployed.
func (o NatGatewayOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatGateway) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type NatGatewayPtrOutput struct{ *pulumi.OutputState }

func (NatGatewayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGateway)(nil)).Elem()
}

func (o NatGatewayPtrOutput) ToNatGatewayPtrOutput() NatGatewayPtrOutput {
	return o
}

func (o NatGatewayPtrOutput) ToNatGatewayPtrOutputWithContext(ctx context.Context) NatGatewayPtrOutput {
	return o
}

func (o NatGatewayPtrOutput) Elem() NatGatewayOutput {
	return o.ApplyT(func(v *NatGateway) NatGateway {
		if v != nil {
			return *v
		}
		var ret NatGateway
		return ret
	}).(NatGatewayOutput)
}

// Resource ID.
func (o NatGatewayPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGateway) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The idle timeout of the nat gateway.
func (o NatGatewayPtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NatGateway) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// Resource location.
func (o NatGatewayPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGateway) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// An array of public ip addresses associated with the nat gateway resource.
func (o NatGatewayPtrOutput) PublicIpAddresses() SubResourceArrayOutput {
	return o.ApplyT(func(v *NatGateway) []SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIpAddresses
	}).(SubResourceArrayOutput)
}

// An array of public ip prefixes associated with the nat gateway resource.
func (o NatGatewayPtrOutput) PublicIpPrefixes() SubResourceArrayOutput {
	return o.ApplyT(func(v *NatGateway) []SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIpPrefixes
	}).(SubResourceArrayOutput)
}

// The nat gateway SKU.
func (o NatGatewayPtrOutput) Sku() NatGatewaySkuPtrOutput {
	return o.ApplyT(func(v *NatGateway) *NatGatewaySku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(NatGatewaySkuPtrOutput)
}

// Resource tags.
func (o NatGatewayPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NatGateway) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// A list of availability zones denoting the zone in which Nat Gateway should be deployed.
func (o NatGatewayPtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatGateway) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// Nat Gateway resource.
type NatGatewayResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The idle timeout of the nat gateway.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the NAT gateway resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// An array of public ip addresses associated with the nat gateway resource.
	PublicIpAddresses []SubResourceResponse `pulumi:"publicIpAddresses"`
	// An array of public ip prefixes associated with the nat gateway resource.
	PublicIpPrefixes []SubResourceResponse `pulumi:"publicIpPrefixes"`
	// The resource GUID property of the NAT gateway resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// The nat gateway SKU.
	Sku *NatGatewaySkuResponse `pulumi:"sku"`
	// An array of references to the subnets using this nat gateway resource.
	Subnets []SubResourceResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// A list of availability zones denoting the zone in which Nat Gateway should be deployed.
	Zones []string `pulumi:"zones"`
}

// Nat Gateway resource.
type NatGatewayResponseOutput struct{ *pulumi.OutputState }

func (NatGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGatewayResponse)(nil)).Elem()
}

func (o NatGatewayResponseOutput) ToNatGatewayResponseOutput() NatGatewayResponseOutput {
	return o
}

func (o NatGatewayResponseOutput) ToNatGatewayResponseOutputWithContext(ctx context.Context) NatGatewayResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o NatGatewayResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NatGatewayResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o NatGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The idle timeout of the nat gateway.
func (o NatGatewayResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NatGatewayResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Resource location.
func (o NatGatewayResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatGatewayResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NatGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NatGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the NAT gateway resource.
func (o NatGatewayResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NatGatewayResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// An array of public ip addresses associated with the nat gateway resource.
func (o NatGatewayResponseOutput) PublicIpAddresses() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v NatGatewayResponse) []SubResourceResponse { return v.PublicIpAddresses }).(SubResourceResponseArrayOutput)
}

// An array of public ip prefixes associated with the nat gateway resource.
func (o NatGatewayResponseOutput) PublicIpPrefixes() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v NatGatewayResponse) []SubResourceResponse { return v.PublicIpPrefixes }).(SubResourceResponseArrayOutput)
}

// The resource GUID property of the NAT gateway resource.
func (o NatGatewayResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v NatGatewayResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The nat gateway SKU.
func (o NatGatewayResponseOutput) Sku() NatGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v NatGatewayResponse) *NatGatewaySkuResponse { return v.Sku }).(NatGatewaySkuResponsePtrOutput)
}

// An array of references to the subnets using this nat gateway resource.
func (o NatGatewayResponseOutput) Subnets() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v NatGatewayResponse) []SubResourceResponse { return v.Subnets }).(SubResourceResponseArrayOutput)
}

// Resource tags.
func (o NatGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NatGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NatGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NatGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A list of availability zones denoting the zone in which Nat Gateway should be deployed.
func (o NatGatewayResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatGatewayResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type NatGatewayResponsePtrOutput struct{ *pulumi.OutputState }

func (NatGatewayResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewayResponse)(nil)).Elem()
}

func (o NatGatewayResponsePtrOutput) ToNatGatewayResponsePtrOutput() NatGatewayResponsePtrOutput {
	return o
}

func (o NatGatewayResponsePtrOutput) ToNatGatewayResponsePtrOutputWithContext(ctx context.Context) NatGatewayResponsePtrOutput {
	return o
}

func (o NatGatewayResponsePtrOutput) Elem() NatGatewayResponseOutput {
	return o.ApplyT(func(v *NatGatewayResponse) NatGatewayResponse {
		if v != nil {
			return *v
		}
		var ret NatGatewayResponse
		return ret
	}).(NatGatewayResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NatGatewayResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NatGatewayResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The idle timeout of the nat gateway.
func (o NatGatewayResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// Resource location.
func (o NatGatewayResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NatGatewayResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the NAT gateway resource.
func (o NatGatewayResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// An array of public ip addresses associated with the nat gateway resource.
func (o NatGatewayResponsePtrOutput) PublicIpAddresses() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *NatGatewayResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIpAddresses
	}).(SubResourceResponseArrayOutput)
}

// An array of public ip prefixes associated with the nat gateway resource.
func (o NatGatewayResponsePtrOutput) PublicIpPrefixes() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *NatGatewayResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIpPrefixes
	}).(SubResourceResponseArrayOutput)
}

// The resource GUID property of the NAT gateway resource.
func (o NatGatewayResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The nat gateway SKU.
func (o NatGatewayResponsePtrOutput) Sku() NatGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *NatGatewaySkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(NatGatewaySkuResponsePtrOutput)
}

// An array of references to the subnets using this nat gateway resource.
func (o NatGatewayResponsePtrOutput) Subnets() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *NatGatewayResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubResourceResponseArrayOutput)
}

// Resource tags.
func (o NatGatewayResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NatGatewayResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o NatGatewayResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// A list of availability zones denoting the zone in which Nat Gateway should be deployed.
func (o NatGatewayResponsePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatGatewayResponse) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// SKU of nat gateway.
type NatGatewaySku struct {
	// Name of Nat Gateway SKU.
	Name *string `pulumi:"name"`
}

// NatGatewaySkuInput is an input type that accepts NatGatewaySkuArgs and NatGatewaySkuOutput values.
// You can construct a concrete instance of `NatGatewaySkuInput` via:
//
//	NatGatewaySkuArgs{...}
type NatGatewaySkuInput interface {
	pulumi.Input

	ToNatGatewaySkuOutput() NatGatewaySkuOutput
	ToNatGatewaySkuOutputWithContext(context.Context) NatGatewaySkuOutput
}

// SKU of nat gateway.
type NatGatewaySkuArgs struct {
	// Name of Nat Gateway SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (NatGatewaySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGatewaySku)(nil)).Elem()
}

func (i NatGatewaySkuArgs) ToNatGatewaySkuOutput() NatGatewaySkuOutput {
	return i.ToNatGatewaySkuOutputWithContext(context.Background())
}

func (i NatGatewaySkuArgs) ToNatGatewaySkuOutputWithContext(ctx context.Context) NatGatewaySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewaySkuOutput)
}

func (i NatGatewaySkuArgs) ToNatGatewaySkuPtrOutput() NatGatewaySkuPtrOutput {
	return i.ToNatGatewaySkuPtrOutputWithContext(context.Background())
}

func (i NatGatewaySkuArgs) ToNatGatewaySkuPtrOutputWithContext(ctx context.Context) NatGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewaySkuOutput).ToNatGatewaySkuPtrOutputWithContext(ctx)
}

// NatGatewaySkuPtrInput is an input type that accepts NatGatewaySkuArgs, NatGatewaySkuPtr and NatGatewaySkuPtrOutput values.
// You can construct a concrete instance of `NatGatewaySkuPtrInput` via:
//
//	        NatGatewaySkuArgs{...}
//
//	or:
//
//	        nil
type NatGatewaySkuPtrInput interface {
	pulumi.Input

	ToNatGatewaySkuPtrOutput() NatGatewaySkuPtrOutput
	ToNatGatewaySkuPtrOutputWithContext(context.Context) NatGatewaySkuPtrOutput
}

type natGatewaySkuPtrType NatGatewaySkuArgs

func NatGatewaySkuPtr(v *NatGatewaySkuArgs) NatGatewaySkuPtrInput {
	return (*natGatewaySkuPtrType)(v)
}

func (*natGatewaySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewaySku)(nil)).Elem()
}

func (i *natGatewaySkuPtrType) ToNatGatewaySkuPtrOutput() NatGatewaySkuPtrOutput {
	return i.ToNatGatewaySkuPtrOutputWithContext(context.Background())
}

func (i *natGatewaySkuPtrType) ToNatGatewaySkuPtrOutputWithContext(ctx context.Context) NatGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewaySkuPtrOutput)
}

// SKU of nat gateway.
type NatGatewaySkuOutput struct{ *pulumi.OutputState }

func (NatGatewaySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGatewaySku)(nil)).Elem()
}

func (o NatGatewaySkuOutput) ToNatGatewaySkuOutput() NatGatewaySkuOutput {
	return o
}

func (o NatGatewaySkuOutput) ToNatGatewaySkuOutputWithContext(ctx context.Context) NatGatewaySkuOutput {
	return o
}

func (o NatGatewaySkuOutput) ToNatGatewaySkuPtrOutput() NatGatewaySkuPtrOutput {
	return o.ToNatGatewaySkuPtrOutputWithContext(context.Background())
}

func (o NatGatewaySkuOutput) ToNatGatewaySkuPtrOutputWithContext(ctx context.Context) NatGatewaySkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NatGatewaySku) *NatGatewaySku {
		return &v
	}).(NatGatewaySkuPtrOutput)
}

// Name of Nat Gateway SKU.
func (o NatGatewaySkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatGatewaySku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type NatGatewaySkuPtrOutput struct{ *pulumi.OutputState }

func (NatGatewaySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewaySku)(nil)).Elem()
}

func (o NatGatewaySkuPtrOutput) ToNatGatewaySkuPtrOutput() NatGatewaySkuPtrOutput {
	return o
}

func (o NatGatewaySkuPtrOutput) ToNatGatewaySkuPtrOutputWithContext(ctx context.Context) NatGatewaySkuPtrOutput {
	return o
}

func (o NatGatewaySkuPtrOutput) Elem() NatGatewaySkuOutput {
	return o.ApplyT(func(v *NatGatewaySku) NatGatewaySku {
		if v != nil {
			return *v
		}
		var ret NatGatewaySku
		return ret
	}).(NatGatewaySkuOutput)
}

// Name of Nat Gateway SKU.
func (o NatGatewaySkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// SKU of nat gateway.
type NatGatewaySkuResponse struct {
	// Name of Nat Gateway SKU.
	Name *string `pulumi:"name"`
}

// SKU of nat gateway.
type NatGatewaySkuResponseOutput struct{ *pulumi.OutputState }

func (NatGatewaySkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGatewaySkuResponse)(nil)).Elem()
}

func (o NatGatewaySkuResponseOutput) ToNatGatewaySkuResponseOutput() NatGatewaySkuResponseOutput {
	return o
}

func (o NatGatewaySkuResponseOutput) ToNatGatewaySkuResponseOutputWithContext(ctx context.Context) NatGatewaySkuResponseOutput {
	return o
}

// Name of Nat Gateway SKU.
func (o NatGatewaySkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatGatewaySkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type NatGatewaySkuResponsePtrOutput struct{ *pulumi.OutputState }

func (NatGatewaySkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewaySkuResponse)(nil)).Elem()
}

func (o NatGatewaySkuResponsePtrOutput) ToNatGatewaySkuResponsePtrOutput() NatGatewaySkuResponsePtrOutput {
	return o
}

func (o NatGatewaySkuResponsePtrOutput) ToNatGatewaySkuResponsePtrOutputWithContext(ctx context.Context) NatGatewaySkuResponsePtrOutput {
	return o
}

func (o NatGatewaySkuResponsePtrOutput) Elem() NatGatewaySkuResponseOutput {
	return o.ApplyT(func(v *NatGatewaySkuResponse) NatGatewaySkuResponse {
		if v != nil {
			return *v
		}
		var ret NatGatewaySkuResponse
		return ret
	}).(NatGatewaySkuResponseOutput)
}

// Name of Nat Gateway SKU.
func (o NatGatewaySkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponse struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers []string `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers []string `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel *string `pulumi:"internalDnsNameLabel"`
	// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
	InternalDomainNameSuffix string `pulumi:"internalDomainNameSuffix"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn string `pulumi:"internalFqdn"`
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponseOutput() NetworkInterfaceDnsSettingsResponseOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponseOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponseOutput {
	return o
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsResponseOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) []string { return v.AppliedDnsServers }).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) *string { return v.InternalDnsNameLabel }).(pulumi.StringPtrOutput)
}

// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalDomainNameSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) string { return v.InternalDomainNameSuffix }).(pulumi.StringOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) string { return v.InternalFqdn }).(pulumi.StringOutput)
}

type NetworkInterfaceDnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) Elem() NetworkInterfaceDnsSettingsResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) NetworkInterfaceDnsSettingsResponse {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceDnsSettingsResponse
		return ret
	}).(NetworkInterfaceDnsSettingsResponseOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.AppliedDnsServers
	}).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalDnsNameLabel
	}).(pulumi.StringPtrOutput)
}

// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalDomainNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InternalDomainNameSuffix
	}).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InternalFqdn
	}).(pulumi.StringPtrOutput)
}

// PrivateLinkConnection properties for the network interface.
type NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse struct {
	// List of FQDNs for current private link connection.
	Fqdns []string `pulumi:"fqdns"`
	// The group ID for current private link connection.
	GroupId string `pulumi:"groupId"`
	// The required member name for current private link connection.
	RequiredMemberName string `pulumi:"requiredMemberName"`
}

// PrivateLinkConnection properties for the network interface.
type NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return o
}

// List of FQDNs for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) []string {
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// The group ID for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) string {
		return v.GroupId
	}).(pulumi.StringOutput)
}

// The required member name for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) RequiredMemberName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) string {
		return v.RequiredMemberName
	}).(pulumi.StringOutput)
}

type NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) Elem() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse
		return ret
	}).(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput)
}

// List of FQDNs for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// The group ID for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GroupId
	}).(pulumi.StringPtrOutput)
}

// The required member name for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) RequiredMemberName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RequiredMemberName
	}).(pulumi.StringPtrOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponse struct {
	// The reference to ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools []ApplicationGatewayBackendAddressPoolResponse `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"applicationSecurityGroups"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The reference to gateway load balancer frontend IP.
	GatewayLoadBalancer *SubResourceResponse `pulumi:"gatewayLoadBalancer"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The reference to LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools []BackendAddressPoolResponse `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules []InboundNatRuleResponse `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Whether this is a primary customer address on the network interface.
	Primary *bool `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// PrivateLinkConnection properties for the network interface.
	PrivateLinkConnectionProperties NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse `pulumi:"privateLinkConnectionProperties"`
	// The provisioning state of the network interface IP configuration.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// Resource type.
	Type *string `pulumi:"type"`
	// The reference to Virtual Network Taps.
	VirtualNetworkTaps []VirtualNetworkTapResponse `pulumi:"virtualNetworkTaps"`
}

// Defaults sets the appropriate defaults for NetworkInterfaceIPConfigurationResponse
func (val *NetworkInterfaceIPConfigurationResponse) Defaults() *NetworkInterfaceIPConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.PublicIPAddress = tmp.PublicIPAddress.Defaults()

	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponseOutput() NetworkInterfaceIPConfigurationResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseOutput {
	return o
}

// The reference to ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []ApplicationGatewayBackendAddressPoolResponse {
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationResponseOutput) ApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []ApplicationSecurityGroupResponse {
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The reference to gateway load balancer frontend IP.
func (o NetworkInterfaceIPConfigurationResponseOutput) GatewayLoadBalancer() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *SubResourceResponse { return v.GatewayLoadBalancer }).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reference to LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) LoadBalancerBackendAddressPools() BackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []BackendAddressPoolResponse {
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolResponseArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationResponseOutput) LoadBalancerInboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []InboundNatRuleResponse {
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// PrivateLinkConnection properties for the network interface.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateLinkConnectionProperties() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse {
		return v.PrivateLinkConnectionProperties
	}).(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput)
}

// The provisioning state of the network interface IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// Resource type.
func (o NetworkInterfaceIPConfigurationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The reference to Virtual Network Taps.
func (o NetworkInterfaceIPConfigurationResponseOutput) VirtualNetworkTaps() VirtualNetworkTapResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []VirtualNetworkTapResponse {
		return v.VirtualNetworkTaps
	}).(VirtualNetworkTapResponseArrayOutput)
}

type NetworkInterfaceIPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Elem() NetworkInterfaceIPConfigurationResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) NetworkInterfaceIPConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceIPConfigurationResponse
		return ret
	}).(NetworkInterfaceIPConfigurationResponseOutput)
}

// The reference to ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []ApplicationGatewayBackendAddressPoolResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []ApplicationSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// The reference to gateway load balancer frontend IP.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) GatewayLoadBalancer() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.GatewayLoadBalancer
	}).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The reference to LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) LoadBalancerBackendAddressPools() BackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []BackendAddressPoolResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolResponseArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) LoadBalancerInboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []InboundNatRuleResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// PrivateLinkConnection properties for the network interface.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateLinkConnectionProperties() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.PrivateLinkConnectionProperties
	}).(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput)
}

// The provisioning state of the network interface IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

// Resource type.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The reference to Virtual Network Taps.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) VirtualNetworkTaps() VirtualNetworkTapResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []VirtualNetworkTapResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkTaps
	}).(VirtualNetworkTapResponseArrayOutput)
}

type NetworkInterfaceIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) ToNetworkInterfaceIPConfigurationResponseArrayOutput() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceIPConfigurationResponse {
		return vs[0].([]NetworkInterfaceIPConfigurationResponse)[vs[1].(int)]
	}).(NetworkInterfaceIPConfigurationResponseOutput)
}

// A network interface in a resource group.
type NetworkInterfaceResponse struct {
	// The DNS settings in network interface.
	DnsSettings *NetworkInterfaceDnsSettingsResponse `pulumi:"dnsSettings"`
	// A reference to the dscp configuration to which the network interface is linked.
	DscpConfiguration SubResourceResponse `pulumi:"dscpConfiguration"`
	// If the network interface is accelerated networking enabled.
	EnableAcceleratedNetworking *bool `pulumi:"enableAcceleratedNetworking"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding *bool `pulumi:"enableIPForwarding"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The extended location of the network interface.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// A list of references to linked BareMetal resources.
	HostedWorkloads []string `pulumi:"hostedWorkloads"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The MAC address of the network interface.
	MacAddress string `pulumi:"macAddress"`
	// Migration phase of Network Interface resource.
	MigrationPhase *string `pulumi:"migrationPhase"`
	// Resource name.
	Name string `pulumi:"name"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupResponse `pulumi:"networkSecurityGroup"`
	// Type of Network Interface resource.
	NicType *string `pulumi:"nicType"`
	// Whether this is a primary network interface on a virtual machine.
	Primary bool `pulumi:"primary"`
	// A reference to the private endpoint to which the network interface is linked.
	PrivateEndpoint PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// Privatelinkservice of the network interface resource.
	PrivateLinkService *PrivateLinkServiceResponse `pulumi:"privateLinkService"`
	// The provisioning state of the network interface resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// A list of TapConfigurations of the network interface.
	TapConfigurations []NetworkInterfaceTapConfigurationResponse `pulumi:"tapConfigurations"`
	// Resource type.
	Type string `pulumi:"type"`
	// The reference to a virtual machine.
	VirtualMachine SubResourceResponse `pulumi:"virtualMachine"`
	// WorkloadType of the NetworkInterface for BareMetal resources
	WorkloadType *string `pulumi:"workloadType"`
}

// Defaults sets the appropriate defaults for NetworkInterfaceResponse
func (val *NetworkInterfaceResponse) Defaults() *NetworkInterfaceResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.PrivateEndpoint = *tmp.PrivateEndpoint.Defaults()

	return &tmp
}

// A network interface in a resource group.
type NetworkInterfaceResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput {
	return o
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutputWithContext(ctx context.Context) NetworkInterfaceResponseOutput {
	return o
}

// The DNS settings in network interface.
func (o NetworkInterfaceResponseOutput) DnsSettings() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *NetworkInterfaceDnsSettingsResponse { return v.DnsSettings }).(NetworkInterfaceDnsSettingsResponsePtrOutput)
}

// A reference to the dscp configuration to which the network interface is linked.
func (o NetworkInterfaceResponseOutput) DscpConfiguration() SubResourceResponseOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) SubResourceResponse { return v.DscpConfiguration }).(SubResourceResponseOutput)
}

// If the network interface is accelerated networking enabled.
func (o NetworkInterfaceResponseOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *bool { return v.EnableAcceleratedNetworking }).(pulumi.BoolPtrOutput)
}

// Indicates whether IP forwarding is enabled on this network interface.
func (o NetworkInterfaceResponseOutput) EnableIPForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *bool { return v.EnableIPForwarding }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The extended location of the network interface.
func (o NetworkInterfaceResponseOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// A list of references to linked BareMetal resources.
func (o NetworkInterfaceResponseOutput) HostedWorkloads() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) []string { return v.HostedWorkloads }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o NetworkInterfaceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A list of IPConfigurations of the network interface.
func (o NetworkInterfaceResponseOutput) IpConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) []NetworkInterfaceIPConfigurationResponse { return v.IpConfigurations }).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o NetworkInterfaceResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The MAC address of the network interface.
func (o NetworkInterfaceResponseOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.MacAddress }).(pulumi.StringOutput)
}

// Migration phase of Network Interface resource.
func (o NetworkInterfaceResponseOutput) MigrationPhase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.MigrationPhase }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkInterfaceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o NetworkInterfaceResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *NetworkSecurityGroupResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupResponsePtrOutput)
}

// Type of Network Interface resource.
func (o NetworkInterfaceResponseOutput) NicType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.NicType }).(pulumi.StringPtrOutput)
}

// Whether this is a primary network interface on a virtual machine.
func (o NetworkInterfaceResponseOutput) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) bool { return v.Primary }).(pulumi.BoolOutput)
}

// A reference to the private endpoint to which the network interface is linked.
func (o NetworkInterfaceResponseOutput) PrivateEndpoint() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponseOutput)
}

// Privatelinkservice of the network interface resource.
func (o NetworkInterfaceResponseOutput) PrivateLinkService() PrivateLinkServiceResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *PrivateLinkServiceResponse { return v.PrivateLinkService }).(PrivateLinkServiceResponsePtrOutput)
}

// The provisioning state of the network interface resource.
func (o NetworkInterfaceResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the network interface resource.
func (o NetworkInterfaceResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource tags.
func (o NetworkInterfaceResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A list of TapConfigurations of the network interface.
func (o NetworkInterfaceResponseOutput) TapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) []NetworkInterfaceTapConfigurationResponse {
		return v.TapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// Resource type.
func (o NetworkInterfaceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The reference to a virtual machine.
func (o NetworkInterfaceResponseOutput) VirtualMachine() SubResourceResponseOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) SubResourceResponse { return v.VirtualMachine }).(SubResourceResponseOutput)
}

// WorkloadType of the NetworkInterface for BareMetal resources
func (o NetworkInterfaceResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseArrayOutput) ToNetworkInterfaceResponseArrayOutput() NetworkInterfaceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceResponseArrayOutput) ToNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceResponse {
		return vs[0].([]NetworkInterfaceResponse)[vs[1].(int)]
	}).(NetworkInterfaceResponseOutput)
}

// Tap configuration in a Network Interface.
type NetworkInterfaceTapConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the network interface tap configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Sub Resource type.
	Type string `pulumi:"type"`
	// The reference to the Virtual Network Tap resource.
	VirtualNetworkTap *VirtualNetworkTapResponse `pulumi:"virtualNetworkTap"`
}

// Defaults sets the appropriate defaults for NetworkInterfaceTapConfigurationResponse
func (val *NetworkInterfaceTapConfigurationResponse) Defaults() *NetworkInterfaceTapConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.VirtualNetworkTap = tmp.VirtualNetworkTap.Defaults()

	return &tmp
}

// Tap configuration in a Network Interface.
type NetworkInterfaceTapConfigurationResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTapConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationResponseOutput) ToNetworkInterfaceTapConfigurationResponseOutput() NetworkInterfaceTapConfigurationResponseOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationResponseOutput) ToNetworkInterfaceTapConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceTapConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o NetworkInterfaceTapConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceTapConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the network interface tap configuration resource.
func (o NetworkInterfaceTapConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Sub Resource type.
func (o NetworkInterfaceTapConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The reference to the Virtual Network Tap resource.
func (o NetworkInterfaceTapConfigurationResponseOutput) VirtualNetworkTap() VirtualNetworkTapResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) *VirtualNetworkTapResponse {
		return v.VirtualNetworkTap
	}).(VirtualNetworkTapResponsePtrOutput)
}

type NetworkInterfaceTapConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceTapConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationResponseArrayOutput) ToNetworkInterfaceTapConfigurationResponseArrayOutput() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationResponseArrayOutput) ToNetworkInterfaceTapConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceTapConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceTapConfigurationResponse {
		return vs[0].([]NetworkInterfaceTapConfigurationResponse)[vs[1].(int)]
	}).(NetworkInterfaceTapConfigurationResponseOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroup struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// A collection of security rules of the network security group.
	SecurityRules []SecurityRule `pulumi:"securityRules"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// NetworkSecurityGroupInput is an input type that accepts NetworkSecurityGroupArgs and NetworkSecurityGroupOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupInput` via:
//
//	NetworkSecurityGroupArgs{...}
type NetworkSecurityGroupInput interface {
	pulumi.Input

	ToNetworkSecurityGroupOutput() NetworkSecurityGroupOutput
	ToNetworkSecurityGroupOutputWithContext(context.Context) NetworkSecurityGroupOutput
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// A collection of security rules of the network security group.
	SecurityRules SecurityRuleArrayInput `pulumi:"securityRules"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (NetworkSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroup)(nil)).Elem()
}

func (i NetworkSecurityGroupArgs) ToNetworkSecurityGroupOutput() NetworkSecurityGroupOutput {
	return i.ToNetworkSecurityGroupOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupArgs) ToNetworkSecurityGroupOutputWithContext(ctx context.Context) NetworkSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupOutput)
}

func (i NetworkSecurityGroupArgs) ToNetworkSecurityGroupPtrOutput() NetworkSecurityGroupPtrOutput {
	return i.ToNetworkSecurityGroupPtrOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupArgs) ToNetworkSecurityGroupPtrOutputWithContext(ctx context.Context) NetworkSecurityGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupOutput).ToNetworkSecurityGroupPtrOutputWithContext(ctx)
}

// NetworkSecurityGroupPtrInput is an input type that accepts NetworkSecurityGroupArgs, NetworkSecurityGroupPtr and NetworkSecurityGroupPtrOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupPtrInput` via:
//
//	        NetworkSecurityGroupArgs{...}
//
//	or:
//
//	        nil
type NetworkSecurityGroupPtrInput interface {
	pulumi.Input

	ToNetworkSecurityGroupPtrOutput() NetworkSecurityGroupPtrOutput
	ToNetworkSecurityGroupPtrOutputWithContext(context.Context) NetworkSecurityGroupPtrOutput
}

type networkSecurityGroupPtrType NetworkSecurityGroupArgs

func NetworkSecurityGroupPtr(v *NetworkSecurityGroupArgs) NetworkSecurityGroupPtrInput {
	return (*networkSecurityGroupPtrType)(v)
}

func (*networkSecurityGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroup)(nil)).Elem()
}

func (i *networkSecurityGroupPtrType) ToNetworkSecurityGroupPtrOutput() NetworkSecurityGroupPtrOutput {
	return i.ToNetworkSecurityGroupPtrOutputWithContext(context.Background())
}

func (i *networkSecurityGroupPtrType) ToNetworkSecurityGroupPtrOutputWithContext(ctx context.Context) NetworkSecurityGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupPtrOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroup)(nil)).Elem()
}

func (o NetworkSecurityGroupOutput) ToNetworkSecurityGroupOutput() NetworkSecurityGroupOutput {
	return o
}

func (o NetworkSecurityGroupOutput) ToNetworkSecurityGroupOutputWithContext(ctx context.Context) NetworkSecurityGroupOutput {
	return o
}

func (o NetworkSecurityGroupOutput) ToNetworkSecurityGroupPtrOutput() NetworkSecurityGroupPtrOutput {
	return o.ToNetworkSecurityGroupPtrOutputWithContext(context.Background())
}

func (o NetworkSecurityGroupOutput) ToNetworkSecurityGroupPtrOutputWithContext(ctx context.Context) NetworkSecurityGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkSecurityGroup) *NetworkSecurityGroup {
		return &v
	}).(NetworkSecurityGroupPtrOutput)
}

// Resource ID.
func (o NetworkSecurityGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroup) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupOutput) SecurityRules() SecurityRuleArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroup) []SecurityRule { return v.SecurityRules }).(SecurityRuleArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityGroup) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type NetworkSecurityGroupPtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroup)(nil)).Elem()
}

func (o NetworkSecurityGroupPtrOutput) ToNetworkSecurityGroupPtrOutput() NetworkSecurityGroupPtrOutput {
	return o
}

func (o NetworkSecurityGroupPtrOutput) ToNetworkSecurityGroupPtrOutputWithContext(ctx context.Context) NetworkSecurityGroupPtrOutput {
	return o
}

func (o NetworkSecurityGroupPtrOutput) Elem() NetworkSecurityGroupOutput {
	return o.ApplyT(func(v *NetworkSecurityGroup) NetworkSecurityGroup {
		if v != nil {
			return *v
		}
		var ret NetworkSecurityGroup
		return ret
	}).(NetworkSecurityGroupOutput)
}

// Resource ID.
func (o NetworkSecurityGroupPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroup) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroup) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupPtrOutput) SecurityRules() SecurityRuleArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroup) []SecurityRule {
		if v == nil {
			return nil
		}
		return v.SecurityRules
	}).(SecurityRuleArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityGroup) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponse struct {
	// The default security rules of network security group.
	DefaultSecurityRules []SecurityRuleResponse `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// A collection of references to flow log resources.
	FlowLogs []FlowLogResponse `pulumi:"flowLogs"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// A collection of references to network interfaces.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// The provisioning state of the network security group resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules []SecurityRuleResponse `pulumi:"securityRules"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponseOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponseOutput() NetworkSecurityGroupResponseOutput {
	return o
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupResponseOutput {
	return o
}

// The default security rules of network security group.
func (o NetworkSecurityGroupResponseOutput) DefaultSecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SecurityRuleResponse { return v.DefaultSecurityRules }).(SecurityRuleResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// A collection of references to flow log resources.
func (o NetworkSecurityGroupResponseOutput) FlowLogs() FlowLogResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []FlowLogResponse { return v.FlowLogs }).(FlowLogResponseArrayOutput)
}

// Resource ID.
func (o NetworkSecurityGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

// The provisioning state of the network security group resource.
func (o NetworkSecurityGroupResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupResponseOutput) SecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SecurityRuleResponse { return v.SecurityRules }).(SecurityRuleResponseArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type NetworkSecurityGroupResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResponsePtrOutput) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupResponsePtrOutput) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupResponsePtrOutput) Elem() NetworkSecurityGroupResponseOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) NetworkSecurityGroupResponse {
		if v != nil {
			return *v
		}
		var ret NetworkSecurityGroupResponse
		return ret
	}).(NetworkSecurityGroupResponseOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupResponsePtrOutput) DefaultSecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SecurityRuleResponse {
		if v == nil {
			return nil
		}
		return v.DefaultSecurityRules
	}).(SecurityRuleResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// A collection of references to flow log resources.
func (o NetworkSecurityGroupResponsePtrOutput) FlowLogs() FlowLogResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []FlowLogResponse {
		if v == nil {
			return nil
		}
		return v.FlowLogs
	}).(FlowLogResponseArrayOutput)
}

// Resource ID.
func (o NetworkSecurityGroupResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityGroupResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupResponsePtrOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []NetworkInterfaceResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceResponseArrayOutput)
}

// The provisioning state of the network security group resource.
func (o NetworkSecurityGroupResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupResponsePtrOutput) SecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SecurityRuleResponse {
		if v == nil {
			return nil
		}
		return v.SecurityRules
	}).(SecurityRuleResponseArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityGroupResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// PrivateDnsZoneConfig resource.
type PrivateDnsZoneConfig struct {
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The resource id of the private dns zone.
	PrivateDnsZoneId *string `pulumi:"privateDnsZoneId"`
}

// PrivateDnsZoneConfigInput is an input type that accepts PrivateDnsZoneConfigArgs and PrivateDnsZoneConfigOutput values.
// You can construct a concrete instance of `PrivateDnsZoneConfigInput` via:
//
//	PrivateDnsZoneConfigArgs{...}
type PrivateDnsZoneConfigInput interface {
	pulumi.Input

	ToPrivateDnsZoneConfigOutput() PrivateDnsZoneConfigOutput
	ToPrivateDnsZoneConfigOutputWithContext(context.Context) PrivateDnsZoneConfigOutput
}

// PrivateDnsZoneConfig resource.
type PrivateDnsZoneConfigArgs struct {
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource id of the private dns zone.
	PrivateDnsZoneId pulumi.StringPtrInput `pulumi:"privateDnsZoneId"`
}

func (PrivateDnsZoneConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsZoneConfig)(nil)).Elem()
}

func (i PrivateDnsZoneConfigArgs) ToPrivateDnsZoneConfigOutput() PrivateDnsZoneConfigOutput {
	return i.ToPrivateDnsZoneConfigOutputWithContext(context.Background())
}

func (i PrivateDnsZoneConfigArgs) ToPrivateDnsZoneConfigOutputWithContext(ctx context.Context) PrivateDnsZoneConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsZoneConfigOutput)
}

// PrivateDnsZoneConfigArrayInput is an input type that accepts PrivateDnsZoneConfigArray and PrivateDnsZoneConfigArrayOutput values.
// You can construct a concrete instance of `PrivateDnsZoneConfigArrayInput` via:
//
//	PrivateDnsZoneConfigArray{ PrivateDnsZoneConfigArgs{...} }
type PrivateDnsZoneConfigArrayInput interface {
	pulumi.Input

	ToPrivateDnsZoneConfigArrayOutput() PrivateDnsZoneConfigArrayOutput
	ToPrivateDnsZoneConfigArrayOutputWithContext(context.Context) PrivateDnsZoneConfigArrayOutput
}

type PrivateDnsZoneConfigArray []PrivateDnsZoneConfigInput

func (PrivateDnsZoneConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateDnsZoneConfig)(nil)).Elem()
}

func (i PrivateDnsZoneConfigArray) ToPrivateDnsZoneConfigArrayOutput() PrivateDnsZoneConfigArrayOutput {
	return i.ToPrivateDnsZoneConfigArrayOutputWithContext(context.Background())
}

func (i PrivateDnsZoneConfigArray) ToPrivateDnsZoneConfigArrayOutputWithContext(ctx context.Context) PrivateDnsZoneConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsZoneConfigArrayOutput)
}

// PrivateDnsZoneConfig resource.
type PrivateDnsZoneConfigOutput struct{ *pulumi.OutputState }

func (PrivateDnsZoneConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsZoneConfig)(nil)).Elem()
}

func (o PrivateDnsZoneConfigOutput) ToPrivateDnsZoneConfigOutput() PrivateDnsZoneConfigOutput {
	return o
}

func (o PrivateDnsZoneConfigOutput) ToPrivateDnsZoneConfigOutputWithContext(ctx context.Context) PrivateDnsZoneConfigOutput {
	return o
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PrivateDnsZoneConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource id of the private dns zone.
func (o PrivateDnsZoneConfigOutput) PrivateDnsZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfig) *string { return v.PrivateDnsZoneId }).(pulumi.StringPtrOutput)
}

type PrivateDnsZoneConfigArrayOutput struct{ *pulumi.OutputState }

func (PrivateDnsZoneConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateDnsZoneConfig)(nil)).Elem()
}

func (o PrivateDnsZoneConfigArrayOutput) ToPrivateDnsZoneConfigArrayOutput() PrivateDnsZoneConfigArrayOutput {
	return o
}

func (o PrivateDnsZoneConfigArrayOutput) ToPrivateDnsZoneConfigArrayOutputWithContext(ctx context.Context) PrivateDnsZoneConfigArrayOutput {
	return o
}

func (o PrivateDnsZoneConfigArrayOutput) Index(i pulumi.IntInput) PrivateDnsZoneConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateDnsZoneConfig {
		return vs[0].([]PrivateDnsZoneConfig)[vs[1].(int)]
	}).(PrivateDnsZoneConfigOutput)
}

// PrivateDnsZoneConfig resource.
type PrivateDnsZoneConfigResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The id of the privateDnsZoneConfig.
	Id string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The resource id of the private dns zone.
	PrivateDnsZoneId *string `pulumi:"privateDnsZoneId"`
	// The provisioning state of the private dns zone group resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// A collection of information regarding a recordSet, holding information to identify private resources.
	RecordSets []RecordSetResponse `pulumi:"recordSets"`
	// Type of resource. Will be specified as private dns zone configurations.
	Type string `pulumi:"type"`
}

// PrivateDnsZoneConfig resource.
type PrivateDnsZoneConfigResponseOutput struct{ *pulumi.OutputState }

func (PrivateDnsZoneConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsZoneConfigResponse)(nil)).Elem()
}

func (o PrivateDnsZoneConfigResponseOutput) ToPrivateDnsZoneConfigResponseOutput() PrivateDnsZoneConfigResponseOutput {
	return o
}

func (o PrivateDnsZoneConfigResponseOutput) ToPrivateDnsZoneConfigResponseOutputWithContext(ctx context.Context) PrivateDnsZoneConfigResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateDnsZoneConfigResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfigResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The id of the privateDnsZoneConfig.
func (o PrivateDnsZoneConfigResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfigResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PrivateDnsZoneConfigResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfigResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource id of the private dns zone.
func (o PrivateDnsZoneConfigResponseOutput) PrivateDnsZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfigResponse) *string { return v.PrivateDnsZoneId }).(pulumi.StringPtrOutput)
}

// The provisioning state of the private dns zone group resource.
func (o PrivateDnsZoneConfigResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfigResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// A collection of information regarding a recordSet, holding information to identify private resources.
func (o PrivateDnsZoneConfigResponseOutput) RecordSets() RecordSetResponseArrayOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfigResponse) []RecordSetResponse { return v.RecordSets }).(RecordSetResponseArrayOutput)
}

// Type of resource. Will be specified as private dns zone configurations.
func (o PrivateDnsZoneConfigResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfigResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateDnsZoneConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateDnsZoneConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateDnsZoneConfigResponse)(nil)).Elem()
}

func (o PrivateDnsZoneConfigResponseArrayOutput) ToPrivateDnsZoneConfigResponseArrayOutput() PrivateDnsZoneConfigResponseArrayOutput {
	return o
}

func (o PrivateDnsZoneConfigResponseArrayOutput) ToPrivateDnsZoneConfigResponseArrayOutputWithContext(ctx context.Context) PrivateDnsZoneConfigResponseArrayOutput {
	return o
}

func (o PrivateDnsZoneConfigResponseArrayOutput) Index(i pulumi.IntInput) PrivateDnsZoneConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateDnsZoneConfigResponse {
		return vs[0].([]PrivateDnsZoneConfigResponse)[vs[1].(int)]
	}).(PrivateDnsZoneConfigResponseOutput)
}

// PrivateEndpointConnection resource.
type PrivateEndpointConnectionResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The consumer link id.
	LinkIdentifier string `pulumi:"linkIdentifier"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for PrivateEndpointConnectionResponse
func (val *PrivateEndpointConnectionResponse) Defaults() *PrivateEndpointConnectionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.PrivateEndpoint = *tmp.PrivateEndpoint.Defaults()

	return &tmp
}

// PrivateEndpointConnection resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateEndpointConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The consumer link id.
func (o PrivateEndpointConnectionResponseOutput) LinkIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.LinkIdentifier }).(pulumi.StringOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource of private end point.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponseOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource type.
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// Private endpoint resource.
type PrivateEndpointResponse struct {
	// An array of custom dns configurations.
	CustomDnsConfigs []CustomDnsConfigPropertiesFormatResponse `pulumi:"customDnsConfigs"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The extended location of the load balancer.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
	ManualPrivateLinkServiceConnections []PrivateLinkServiceConnectionResponse `pulumi:"manualPrivateLinkServiceConnections"`
	// Resource name.
	Name string `pulumi:"name"`
	// An array of references to the network interfaces created for this private endpoint.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// A grouping of information about the connection to the remote resource.
	PrivateLinkServiceConnections []PrivateLinkServiceConnectionResponse `pulumi:"privateLinkServiceConnections"`
	// The provisioning state of the private endpoint resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource id of private endpoint.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// The ID of the subnet from which the private IP will be allocated.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for PrivateEndpointResponse
func (val *PrivateEndpointResponse) Defaults() *PrivateEndpointResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// Private endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// An array of custom dns configurations.
func (o PrivateEndpointResponseOutput) CustomDnsConfigs() CustomDnsConfigPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []CustomDnsConfigPropertiesFormatResponse { return v.CustomDnsConfigs }).(CustomDnsConfigPropertiesFormatResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateEndpointResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The extended location of the load balancer.
func (o PrivateEndpointResponseOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// Resource ID.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o PrivateEndpointResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
func (o PrivateEndpointResponseOutput) ManualPrivateLinkServiceConnections() PrivateLinkServiceConnectionResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []PrivateLinkServiceConnectionResponse {
		return v.ManualPrivateLinkServiceConnections
	}).(PrivateLinkServiceConnectionResponseArrayOutput)
}

// Resource name.
func (o PrivateEndpointResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Name }).(pulumi.StringOutput)
}

// An array of references to the network interfaces created for this private endpoint.
func (o PrivateEndpointResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

// A grouping of information about the connection to the remote resource.
func (o PrivateEndpointResponseOutput) PrivateLinkServiceConnections() PrivateLinkServiceConnectionResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []PrivateLinkServiceConnectionResponse {
		return v.PrivateLinkServiceConnections
	}).(PrivateLinkServiceConnectionResponseArrayOutput)
}

// The provisioning state of the private endpoint resource.
func (o PrivateEndpointResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource id of private endpoint.
func (o PrivateEndpointResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// The ID of the subnet from which the private IP will be allocated.
func (o PrivateEndpointResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// Resource tags.
func (o PrivateEndpointResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o PrivateEndpointResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseArrayOutput) ToPrivateEndpointResponseArrayOutput() PrivateEndpointResponseArrayOutput {
	return o
}

func (o PrivateEndpointResponseArrayOutput) ToPrivateEndpointResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointResponseArrayOutput {
	return o
}

func (o PrivateEndpointResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointResponse {
		return vs[0].([]PrivateEndpointResponse)[vs[1].(int)]
	}).(PrivateEndpointResponseOutput)
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnection struct {
	// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
	GroupIds []string `pulumi:"groupIds"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// A collection of read-only information about the state of the connection to the remote resource.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState `pulumi:"privateLinkServiceConnectionState"`
	// The resource id of private link service.
	PrivateLinkServiceId *string `pulumi:"privateLinkServiceId"`
	// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
	RequestMessage *string `pulumi:"requestMessage"`
	// The location for the resolved private link service.
	ResolvedPrivateLinkServiceLocation *string `pulumi:"resolvedPrivateLinkServiceLocation"`
}

// PrivateLinkServiceConnectionInput is an input type that accepts PrivateLinkServiceConnectionArgs and PrivateLinkServiceConnectionOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionInput` via:
//
//	PrivateLinkServiceConnectionArgs{...}
type PrivateLinkServiceConnectionInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionOutput() PrivateLinkServiceConnectionOutput
	ToPrivateLinkServiceConnectionOutputWithContext(context.Context) PrivateLinkServiceConnectionOutput
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnectionArgs struct {
	// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A collection of read-only information about the state of the connection to the remote resource.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStatePtrInput `pulumi:"privateLinkServiceConnectionState"`
	// The resource id of private link service.
	PrivateLinkServiceId pulumi.StringPtrInput `pulumi:"privateLinkServiceId"`
	// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
	// The location for the resolved private link service.
	ResolvedPrivateLinkServiceLocation pulumi.StringPtrInput `pulumi:"resolvedPrivateLinkServiceLocation"`
}

func (PrivateLinkServiceConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnection)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionArgs) ToPrivateLinkServiceConnectionOutput() PrivateLinkServiceConnectionOutput {
	return i.ToPrivateLinkServiceConnectionOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionArgs) ToPrivateLinkServiceConnectionOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionOutput)
}

// PrivateLinkServiceConnectionArrayInput is an input type that accepts PrivateLinkServiceConnectionArray and PrivateLinkServiceConnectionArrayOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionArrayInput` via:
//
//	PrivateLinkServiceConnectionArray{ PrivateLinkServiceConnectionArgs{...} }
type PrivateLinkServiceConnectionArrayInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionArrayOutput() PrivateLinkServiceConnectionArrayOutput
	ToPrivateLinkServiceConnectionArrayOutputWithContext(context.Context) PrivateLinkServiceConnectionArrayOutput
}

type PrivateLinkServiceConnectionArray []PrivateLinkServiceConnectionInput

func (PrivateLinkServiceConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceConnection)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionArray) ToPrivateLinkServiceConnectionArrayOutput() PrivateLinkServiceConnectionArrayOutput {
	return i.ToPrivateLinkServiceConnectionArrayOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionArray) ToPrivateLinkServiceConnectionArrayOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionArrayOutput)
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnectionOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnection)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionOutput) ToPrivateLinkServiceConnectionOutput() PrivateLinkServiceConnectionOutput {
	return o
}

func (o PrivateLinkServiceConnectionOutput) ToPrivateLinkServiceConnectionOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionOutput {
	return o
}

// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
func (o PrivateLinkServiceConnectionOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o PrivateLinkServiceConnectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PrivateLinkServiceConnectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A collection of read-only information about the state of the connection to the remote resource.
func (o PrivateLinkServiceConnectionOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) *PrivateLinkServiceConnectionState {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// The resource id of private link service.
func (o PrivateLinkServiceConnectionOutput) PrivateLinkServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) *string { return v.PrivateLinkServiceId }).(pulumi.StringPtrOutput)
}

// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
func (o PrivateLinkServiceConnectionOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// The location for the resolved private link service.
func (o PrivateLinkServiceConnectionOutput) ResolvedPrivateLinkServiceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) *string { return v.ResolvedPrivateLinkServiceLocation }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceConnection)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionArrayOutput) ToPrivateLinkServiceConnectionArrayOutput() PrivateLinkServiceConnectionArrayOutput {
	return o
}

func (o PrivateLinkServiceConnectionArrayOutput) ToPrivateLinkServiceConnectionArrayOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionArrayOutput {
	return o
}

func (o PrivateLinkServiceConnectionArrayOutput) Index(i pulumi.IntInput) PrivateLinkServiceConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkServiceConnection {
		return vs[0].([]PrivateLinkServiceConnection)[vs[1].(int)]
	}).(PrivateLinkServiceConnectionOutput)
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnectionResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
	GroupIds []string `pulumi:"groupIds"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// A collection of read-only information about the state of the connection to the remote resource.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The resource id of private link service.
	PrivateLinkServiceId *string `pulumi:"privateLinkServiceId"`
	// The provisioning state of the private link service connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
	RequestMessage *string `pulumi:"requestMessage"`
	// The location for the resolved private link service.
	ResolvedPrivateLinkServiceLocation *string `pulumi:"resolvedPrivateLinkServiceLocation"`
	// The resource type.
	Type string `pulumi:"type"`
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionResponseOutput) ToPrivateLinkServiceConnectionResponseOutput() PrivateLinkServiceConnectionResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionResponseOutput) ToPrivateLinkServiceConnectionResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateLinkServiceConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
func (o PrivateLinkServiceConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o PrivateLinkServiceConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PrivateLinkServiceConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A collection of read-only information about the state of the connection to the remote resource.
func (o PrivateLinkServiceConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// The resource id of private link service.
func (o PrivateLinkServiceConnectionResponseOutput) PrivateLinkServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.PrivateLinkServiceId }).(pulumi.StringPtrOutput)
}

// The provisioning state of the private link service connection resource.
func (o PrivateLinkServiceConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
func (o PrivateLinkServiceConnectionResponseOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// The location for the resolved private link service.
func (o PrivateLinkServiceConnectionResponseOutput) ResolvedPrivateLinkServiceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.ResolvedPrivateLinkServiceLocation }).(pulumi.StringPtrOutput)
}

// The resource type.
func (o PrivateLinkServiceConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateLinkServiceConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceConnectionResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionResponseArrayOutput) ToPrivateLinkServiceConnectionResponseArrayOutput() PrivateLinkServiceConnectionResponseArrayOutput {
	return o
}

func (o PrivateLinkServiceConnectionResponseArrayOutput) ToPrivateLinkServiceConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionResponseArrayOutput {
	return o
}

func (o PrivateLinkServiceConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateLinkServiceConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkServiceConnectionResponse {
		return vs[0].([]PrivateLinkServiceConnectionResponse)[vs[1].(int)]
	}).(PrivateLinkServiceConnectionResponseOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput).ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStatePtrInput is an input type that accepts PrivateLinkServiceConnectionStateArgs, PrivateLinkServiceConnectionStatePtr and PrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStatePtrInput` via:
//
//	        PrivateLinkServiceConnectionStateArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput
	ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStatePtrOutput
}

type privateLinkServiceConnectionStatePtrType PrivateLinkServiceConnectionStateArgs

func PrivateLinkServiceConnectionStatePtr(v *PrivateLinkServiceConnectionStateArgs) PrivateLinkServiceConnectionStatePtrInput {
	return (*privateLinkServiceConnectionStatePtrType)(v)
}

func (*privateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServiceConnectionState) *PrivateLinkServiceConnectionState {
		return &v
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) Elem() PrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) PrivateLinkServiceConnectionState {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionState
		return ret
	}).(PrivateLinkServiceConnectionStateOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionStateResponse
		return ret
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The private link service ip configuration.
type PrivateLinkServiceIpConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of private link service ip configuration.
	Name *string `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary *bool `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The reference to the subnet resource.
	Subnet *Subnet `pulumi:"subnet"`
}

// Defaults sets the appropriate defaults for PrivateLinkServiceIpConfiguration
func (val *PrivateLinkServiceIpConfiguration) Defaults() *PrivateLinkServiceIpConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// PrivateLinkServiceIpConfigurationInput is an input type that accepts PrivateLinkServiceIpConfigurationArgs and PrivateLinkServiceIpConfigurationOutput values.
// You can construct a concrete instance of `PrivateLinkServiceIpConfigurationInput` via:
//
//	PrivateLinkServiceIpConfigurationArgs{...}
type PrivateLinkServiceIpConfigurationInput interface {
	pulumi.Input

	ToPrivateLinkServiceIpConfigurationOutput() PrivateLinkServiceIpConfigurationOutput
	ToPrivateLinkServiceIpConfigurationOutputWithContext(context.Context) PrivateLinkServiceIpConfigurationOutput
}

// The private link service ip configuration.
type PrivateLinkServiceIpConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of private link service ip configuration.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion pulumi.StringPtrInput `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The reference to the subnet resource.
	Subnet SubnetPtrInput `pulumi:"subnet"`
}

// Defaults sets the appropriate defaults for PrivateLinkServiceIpConfigurationArgs
func (val *PrivateLinkServiceIpConfigurationArgs) Defaults() *PrivateLinkServiceIpConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (PrivateLinkServiceIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceIpConfiguration)(nil)).Elem()
}

func (i PrivateLinkServiceIpConfigurationArgs) ToPrivateLinkServiceIpConfigurationOutput() PrivateLinkServiceIpConfigurationOutput {
	return i.ToPrivateLinkServiceIpConfigurationOutputWithContext(context.Background())
}

func (i PrivateLinkServiceIpConfigurationArgs) ToPrivateLinkServiceIpConfigurationOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceIpConfigurationOutput)
}

// PrivateLinkServiceIpConfigurationArrayInput is an input type that accepts PrivateLinkServiceIpConfigurationArray and PrivateLinkServiceIpConfigurationArrayOutput values.
// You can construct a concrete instance of `PrivateLinkServiceIpConfigurationArrayInput` via:
//
//	PrivateLinkServiceIpConfigurationArray{ PrivateLinkServiceIpConfigurationArgs{...} }
type PrivateLinkServiceIpConfigurationArrayInput interface {
	pulumi.Input

	ToPrivateLinkServiceIpConfigurationArrayOutput() PrivateLinkServiceIpConfigurationArrayOutput
	ToPrivateLinkServiceIpConfigurationArrayOutputWithContext(context.Context) PrivateLinkServiceIpConfigurationArrayOutput
}

type PrivateLinkServiceIpConfigurationArray []PrivateLinkServiceIpConfigurationInput

func (PrivateLinkServiceIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceIpConfiguration)(nil)).Elem()
}

func (i PrivateLinkServiceIpConfigurationArray) ToPrivateLinkServiceIpConfigurationArrayOutput() PrivateLinkServiceIpConfigurationArrayOutput {
	return i.ToPrivateLinkServiceIpConfigurationArrayOutputWithContext(context.Background())
}

func (i PrivateLinkServiceIpConfigurationArray) ToPrivateLinkServiceIpConfigurationArrayOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceIpConfigurationArrayOutput)
}

// The private link service ip configuration.
type PrivateLinkServiceIpConfigurationOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceIpConfiguration)(nil)).Elem()
}

func (o PrivateLinkServiceIpConfigurationOutput) ToPrivateLinkServiceIpConfigurationOutput() PrivateLinkServiceIpConfigurationOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationOutput) ToPrivateLinkServiceIpConfigurationOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationOutput {
	return o
}

// Resource ID.
func (o PrivateLinkServiceIpConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of private link service ip configuration.
func (o PrivateLinkServiceIpConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether the ip configuration is primary or not.
func (o PrivateLinkServiceIpConfigurationOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The private IP address of the IP configuration.
func (o PrivateLinkServiceIpConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o PrivateLinkServiceIpConfigurationOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o PrivateLinkServiceIpConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The reference to the subnet resource.
func (o PrivateLinkServiceIpConfigurationOutput) Subnet() SubnetPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *Subnet { return v.Subnet }).(SubnetPtrOutput)
}

type PrivateLinkServiceIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceIpConfiguration)(nil)).Elem()
}

func (o PrivateLinkServiceIpConfigurationArrayOutput) ToPrivateLinkServiceIpConfigurationArrayOutput() PrivateLinkServiceIpConfigurationArrayOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationArrayOutput) ToPrivateLinkServiceIpConfigurationArrayOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationArrayOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationArrayOutput) Index(i pulumi.IntInput) PrivateLinkServiceIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkServiceIpConfiguration {
		return vs[0].([]PrivateLinkServiceIpConfiguration)[vs[1].(int)]
	}).(PrivateLinkServiceIpConfigurationOutput)
}

// The private link service ip configuration.
type PrivateLinkServiceIpConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of private link service ip configuration.
	Name *string `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary *bool `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the private link service IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// The resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for PrivateLinkServiceIpConfigurationResponse
func (val *PrivateLinkServiceIpConfigurationResponse) Defaults() *PrivateLinkServiceIpConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Subnet = tmp.Subnet.Defaults()

	return &tmp
}

// The private link service ip configuration.
type PrivateLinkServiceIpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceIpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceIpConfigurationResponse)(nil)).Elem()
}

func (o PrivateLinkServiceIpConfigurationResponseOutput) ToPrivateLinkServiceIpConfigurationResponseOutput() PrivateLinkServiceIpConfigurationResponseOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationResponseOutput) ToPrivateLinkServiceIpConfigurationResponseOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of private link service ip configuration.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether the ip configuration is primary or not.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The private IP address of the IP configuration.
func (o PrivateLinkServiceIpConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o PrivateLinkServiceIpConfigurationResponseOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o PrivateLinkServiceIpConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the private link service IP configuration resource.
func (o PrivateLinkServiceIpConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the subnet resource.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// The resource type.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateLinkServiceIpConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceIpConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceIpConfigurationResponse)(nil)).Elem()
}

func (o PrivateLinkServiceIpConfigurationResponseArrayOutput) ToPrivateLinkServiceIpConfigurationResponseArrayOutput() PrivateLinkServiceIpConfigurationResponseArrayOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationResponseArrayOutput) ToPrivateLinkServiceIpConfigurationResponseArrayOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationResponseArrayOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationResponseArrayOutput) Index(i pulumi.IntInput) PrivateLinkServiceIpConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkServiceIpConfigurationResponse {
		return vs[0].([]PrivateLinkServiceIpConfigurationResponse)[vs[1].(int)]
	}).(PrivateLinkServiceIpConfigurationResponseOutput)
}

// The auto-approval list of the private link service.
type PrivateLinkServicePropertiesAutoApproval struct {
	// The list of subscriptions.
	Subscriptions []string `pulumi:"subscriptions"`
}

// PrivateLinkServicePropertiesAutoApprovalInput is an input type that accepts PrivateLinkServicePropertiesAutoApprovalArgs and PrivateLinkServicePropertiesAutoApprovalOutput values.
// You can construct a concrete instance of `PrivateLinkServicePropertiesAutoApprovalInput` via:
//
//	PrivateLinkServicePropertiesAutoApprovalArgs{...}
type PrivateLinkServicePropertiesAutoApprovalInput interface {
	pulumi.Input

	ToPrivateLinkServicePropertiesAutoApprovalOutput() PrivateLinkServicePropertiesAutoApprovalOutput
	ToPrivateLinkServicePropertiesAutoApprovalOutputWithContext(context.Context) PrivateLinkServicePropertiesAutoApprovalOutput
}

// The auto-approval list of the private link service.
type PrivateLinkServicePropertiesAutoApprovalArgs struct {
	// The list of subscriptions.
	Subscriptions pulumi.StringArrayInput `pulumi:"subscriptions"`
}

func (PrivateLinkServicePropertiesAutoApprovalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesAutoApproval)(nil)).Elem()
}

func (i PrivateLinkServicePropertiesAutoApprovalArgs) ToPrivateLinkServicePropertiesAutoApprovalOutput() PrivateLinkServicePropertiesAutoApprovalOutput {
	return i.ToPrivateLinkServicePropertiesAutoApprovalOutputWithContext(context.Background())
}

func (i PrivateLinkServicePropertiesAutoApprovalArgs) ToPrivateLinkServicePropertiesAutoApprovalOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesAutoApprovalOutput)
}

func (i PrivateLinkServicePropertiesAutoApprovalArgs) ToPrivateLinkServicePropertiesAutoApprovalPtrOutput() PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return i.ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(context.Background())
}

func (i PrivateLinkServicePropertiesAutoApprovalArgs) ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesAutoApprovalOutput).ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(ctx)
}

// PrivateLinkServicePropertiesAutoApprovalPtrInput is an input type that accepts PrivateLinkServicePropertiesAutoApprovalArgs, PrivateLinkServicePropertiesAutoApprovalPtr and PrivateLinkServicePropertiesAutoApprovalPtrOutput values.
// You can construct a concrete instance of `PrivateLinkServicePropertiesAutoApprovalPtrInput` via:
//
//	        PrivateLinkServicePropertiesAutoApprovalArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkServicePropertiesAutoApprovalPtrInput interface {
	pulumi.Input

	ToPrivateLinkServicePropertiesAutoApprovalPtrOutput() PrivateLinkServicePropertiesAutoApprovalPtrOutput
	ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(context.Context) PrivateLinkServicePropertiesAutoApprovalPtrOutput
}

type privateLinkServicePropertiesAutoApprovalPtrType PrivateLinkServicePropertiesAutoApprovalArgs

func PrivateLinkServicePropertiesAutoApprovalPtr(v *PrivateLinkServicePropertiesAutoApprovalArgs) PrivateLinkServicePropertiesAutoApprovalPtrInput {
	return (*privateLinkServicePropertiesAutoApprovalPtrType)(v)
}

func (*privateLinkServicePropertiesAutoApprovalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesAutoApproval)(nil)).Elem()
}

func (i *privateLinkServicePropertiesAutoApprovalPtrType) ToPrivateLinkServicePropertiesAutoApprovalPtrOutput() PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return i.ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(context.Background())
}

func (i *privateLinkServicePropertiesAutoApprovalPtrType) ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesAutoApprovalPtrOutput)
}

// The auto-approval list of the private link service.
type PrivateLinkServicePropertiesAutoApprovalOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesAutoApprovalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesAutoApproval)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesAutoApprovalOutput) ToPrivateLinkServicePropertiesAutoApprovalOutput() PrivateLinkServicePropertiesAutoApprovalOutput {
	return o
}

func (o PrivateLinkServicePropertiesAutoApprovalOutput) ToPrivateLinkServicePropertiesAutoApprovalOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalOutput {
	return o
}

func (o PrivateLinkServicePropertiesAutoApprovalOutput) ToPrivateLinkServicePropertiesAutoApprovalPtrOutput() PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return o.ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServicePropertiesAutoApprovalOutput) ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServicePropertiesAutoApproval) *PrivateLinkServicePropertiesAutoApproval {
		return &v
	}).(PrivateLinkServicePropertiesAutoApprovalPtrOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesAutoApprovalOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServicePropertiesAutoApproval) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

type PrivateLinkServicePropertiesAutoApprovalPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesAutoApprovalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesAutoApproval)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesAutoApprovalPtrOutput) ToPrivateLinkServicePropertiesAutoApprovalPtrOutput() PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesAutoApprovalPtrOutput) ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesAutoApprovalPtrOutput) Elem() PrivateLinkServicePropertiesAutoApprovalOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesAutoApproval) PrivateLinkServicePropertiesAutoApproval {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServicePropertiesAutoApproval
		return ret
	}).(PrivateLinkServicePropertiesAutoApprovalOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesAutoApprovalPtrOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesAutoApproval) []string {
		if v == nil {
			return nil
		}
		return v.Subscriptions
	}).(pulumi.StringArrayOutput)
}

// The auto-approval list of the private link service.
type PrivateLinkServicePropertiesResponseAutoApproval struct {
	// The list of subscriptions.
	Subscriptions []string `pulumi:"subscriptions"`
}

// The auto-approval list of the private link service.
type PrivateLinkServicePropertiesResponseAutoApprovalOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesResponseAutoApprovalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesResponseAutoApproval)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalOutput) ToPrivateLinkServicePropertiesResponseAutoApprovalOutput() PrivateLinkServicePropertiesResponseAutoApprovalOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalOutput) ToPrivateLinkServicePropertiesResponseAutoApprovalOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseAutoApprovalOutput {
	return o
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesResponseAutoApprovalOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServicePropertiesResponseAutoApproval) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

type PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesResponseAutoApproval)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput) ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutput() PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput) ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput) Elem() PrivateLinkServicePropertiesResponseAutoApprovalOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesResponseAutoApproval) PrivateLinkServicePropertiesResponseAutoApproval {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServicePropertiesResponseAutoApproval
		return ret
	}).(PrivateLinkServicePropertiesResponseAutoApprovalOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesResponseAutoApproval) []string {
		if v == nil {
			return nil
		}
		return v.Subscriptions
	}).(pulumi.StringArrayOutput)
}

// The visibility list of the private link service.
type PrivateLinkServicePropertiesResponseVisibility struct {
	// The list of subscriptions.
	Subscriptions []string `pulumi:"subscriptions"`
}

// The visibility list of the private link service.
type PrivateLinkServicePropertiesResponseVisibilityOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesResponseVisibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesResponseVisibility)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesResponseVisibilityOutput) ToPrivateLinkServicePropertiesResponseVisibilityOutput() PrivateLinkServicePropertiesResponseVisibilityOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseVisibilityOutput) ToPrivateLinkServicePropertiesResponseVisibilityOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseVisibilityOutput {
	return o
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesResponseVisibilityOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServicePropertiesResponseVisibility) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

type PrivateLinkServicePropertiesResponseVisibilityPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesResponseVisibilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesResponseVisibility)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesResponseVisibilityPtrOutput) ToPrivateLinkServicePropertiesResponseVisibilityPtrOutput() PrivateLinkServicePropertiesResponseVisibilityPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseVisibilityPtrOutput) ToPrivateLinkServicePropertiesResponseVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseVisibilityPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseVisibilityPtrOutput) Elem() PrivateLinkServicePropertiesResponseVisibilityOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesResponseVisibility) PrivateLinkServicePropertiesResponseVisibility {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServicePropertiesResponseVisibility
		return ret
	}).(PrivateLinkServicePropertiesResponseVisibilityOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesResponseVisibilityPtrOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesResponseVisibility) []string {
		if v == nil {
			return nil
		}
		return v.Subscriptions
	}).(pulumi.StringArrayOutput)
}

// The visibility list of the private link service.
type PrivateLinkServicePropertiesVisibility struct {
	// The list of subscriptions.
	Subscriptions []string `pulumi:"subscriptions"`
}

// PrivateLinkServicePropertiesVisibilityInput is an input type that accepts PrivateLinkServicePropertiesVisibilityArgs and PrivateLinkServicePropertiesVisibilityOutput values.
// You can construct a concrete instance of `PrivateLinkServicePropertiesVisibilityInput` via:
//
//	PrivateLinkServicePropertiesVisibilityArgs{...}
type PrivateLinkServicePropertiesVisibilityInput interface {
	pulumi.Input

	ToPrivateLinkServicePropertiesVisibilityOutput() PrivateLinkServicePropertiesVisibilityOutput
	ToPrivateLinkServicePropertiesVisibilityOutputWithContext(context.Context) PrivateLinkServicePropertiesVisibilityOutput
}

// The visibility list of the private link service.
type PrivateLinkServicePropertiesVisibilityArgs struct {
	// The list of subscriptions.
	Subscriptions pulumi.StringArrayInput `pulumi:"subscriptions"`
}

func (PrivateLinkServicePropertiesVisibilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesVisibility)(nil)).Elem()
}

func (i PrivateLinkServicePropertiesVisibilityArgs) ToPrivateLinkServicePropertiesVisibilityOutput() PrivateLinkServicePropertiesVisibilityOutput {
	return i.ToPrivateLinkServicePropertiesVisibilityOutputWithContext(context.Background())
}

func (i PrivateLinkServicePropertiesVisibilityArgs) ToPrivateLinkServicePropertiesVisibilityOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesVisibilityOutput)
}

func (i PrivateLinkServicePropertiesVisibilityArgs) ToPrivateLinkServicePropertiesVisibilityPtrOutput() PrivateLinkServicePropertiesVisibilityPtrOutput {
	return i.ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(context.Background())
}

func (i PrivateLinkServicePropertiesVisibilityArgs) ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesVisibilityOutput).ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(ctx)
}

// PrivateLinkServicePropertiesVisibilityPtrInput is an input type that accepts PrivateLinkServicePropertiesVisibilityArgs, PrivateLinkServicePropertiesVisibilityPtr and PrivateLinkServicePropertiesVisibilityPtrOutput values.
// You can construct a concrete instance of `PrivateLinkServicePropertiesVisibilityPtrInput` via:
//
//	        PrivateLinkServicePropertiesVisibilityArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkServicePropertiesVisibilityPtrInput interface {
	pulumi.Input

	ToPrivateLinkServicePropertiesVisibilityPtrOutput() PrivateLinkServicePropertiesVisibilityPtrOutput
	ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(context.Context) PrivateLinkServicePropertiesVisibilityPtrOutput
}

type privateLinkServicePropertiesVisibilityPtrType PrivateLinkServicePropertiesVisibilityArgs

func PrivateLinkServicePropertiesVisibilityPtr(v *PrivateLinkServicePropertiesVisibilityArgs) PrivateLinkServicePropertiesVisibilityPtrInput {
	return (*privateLinkServicePropertiesVisibilityPtrType)(v)
}

func (*privateLinkServicePropertiesVisibilityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesVisibility)(nil)).Elem()
}

func (i *privateLinkServicePropertiesVisibilityPtrType) ToPrivateLinkServicePropertiesVisibilityPtrOutput() PrivateLinkServicePropertiesVisibilityPtrOutput {
	return i.ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(context.Background())
}

func (i *privateLinkServicePropertiesVisibilityPtrType) ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesVisibilityPtrOutput)
}

// The visibility list of the private link service.
type PrivateLinkServicePropertiesVisibilityOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesVisibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesVisibility)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesVisibilityOutput) ToPrivateLinkServicePropertiesVisibilityOutput() PrivateLinkServicePropertiesVisibilityOutput {
	return o
}

func (o PrivateLinkServicePropertiesVisibilityOutput) ToPrivateLinkServicePropertiesVisibilityOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityOutput {
	return o
}

func (o PrivateLinkServicePropertiesVisibilityOutput) ToPrivateLinkServicePropertiesVisibilityPtrOutput() PrivateLinkServicePropertiesVisibilityPtrOutput {
	return o.ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServicePropertiesVisibilityOutput) ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServicePropertiesVisibility) *PrivateLinkServicePropertiesVisibility {
		return &v
	}).(PrivateLinkServicePropertiesVisibilityPtrOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesVisibilityOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServicePropertiesVisibility) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

type PrivateLinkServicePropertiesVisibilityPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesVisibilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesVisibility)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesVisibilityPtrOutput) ToPrivateLinkServicePropertiesVisibilityPtrOutput() PrivateLinkServicePropertiesVisibilityPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesVisibilityPtrOutput) ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesVisibilityPtrOutput) Elem() PrivateLinkServicePropertiesVisibilityOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesVisibility) PrivateLinkServicePropertiesVisibility {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServicePropertiesVisibility
		return ret
	}).(PrivateLinkServicePropertiesVisibilityOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesVisibilityPtrOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesVisibility) []string {
		if v == nil {
			return nil
		}
		return v.Subscriptions
	}).(pulumi.StringArrayOutput)
}

// Private link service resource.
type PrivateLinkServiceResponse struct {
	// The alias of the private link service.
	Alias string `pulumi:"alias"`
	// The auto-approval list of the private link service.
	AutoApproval *PrivateLinkServicePropertiesResponseAutoApproval `pulumi:"autoApproval"`
	// Whether the private link service is enabled for proxy protocol or not.
	EnableProxyProtocol *bool `pulumi:"enableProxyProtocol"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The extended location of the load balancer.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// The list of Fqdn.
	Fqdns []string `pulumi:"fqdns"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of private link service IP configurations.
	IpConfigurations []PrivateLinkServiceIpConfigurationResponse `pulumi:"ipConfigurations"`
	// An array of references to the load balancer IP configurations.
	LoadBalancerFrontendIpConfigurations []FrontendIPConfigurationResponse `pulumi:"loadBalancerFrontendIpConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// An array of references to the network interfaces created for this private link service.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// An array of list about connections to the private endpoint.
	PrivateEndpointConnections []PrivateEndpointConnectionResponse `pulumi:"privateEndpointConnections"`
	// The provisioning state of the private link service resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource id of private link service.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// The visibility list of the private link service.
	Visibility *PrivateLinkServicePropertiesResponseVisibility `pulumi:"visibility"`
}

// Private link service resource.
type PrivateLinkServiceResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceResponse)(nil)).Elem()
}

func (o PrivateLinkServiceResponseOutput) ToPrivateLinkServiceResponseOutput() PrivateLinkServiceResponseOutput {
	return o
}

func (o PrivateLinkServiceResponseOutput) ToPrivateLinkServiceResponseOutputWithContext(ctx context.Context) PrivateLinkServiceResponseOutput {
	return o
}

// The alias of the private link service.
func (o PrivateLinkServiceResponseOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) string { return v.Alias }).(pulumi.StringOutput)
}

// The auto-approval list of the private link service.
func (o PrivateLinkServiceResponseOutput) AutoApproval() PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) *PrivateLinkServicePropertiesResponseAutoApproval {
		return v.AutoApproval
	}).(PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput)
}

// Whether the private link service is enabled for proxy protocol or not.
func (o PrivateLinkServiceResponseOutput) EnableProxyProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) *bool { return v.EnableProxyProtocol }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateLinkServiceResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The extended location of the load balancer.
func (o PrivateLinkServiceResponseOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// The list of Fqdn.
func (o PrivateLinkServiceResponseOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) []string { return v.Fqdns }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o PrivateLinkServiceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of private link service IP configurations.
func (o PrivateLinkServiceResponseOutput) IpConfigurations() PrivateLinkServiceIpConfigurationResponseArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) []PrivateLinkServiceIpConfigurationResponse {
		return v.IpConfigurations
	}).(PrivateLinkServiceIpConfigurationResponseArrayOutput)
}

// An array of references to the load balancer IP configurations.
func (o PrivateLinkServiceResponseOutput) LoadBalancerFrontendIpConfigurations() FrontendIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) []FrontendIPConfigurationResponse {
		return v.LoadBalancerFrontendIpConfigurations
	}).(FrontendIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o PrivateLinkServiceResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PrivateLinkServiceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// An array of references to the network interfaces created for this private link service.
func (o PrivateLinkServiceResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

// An array of list about connections to the private endpoint.
func (o PrivateLinkServiceResponseOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) []PrivateEndpointConnectionResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionResponseArrayOutput)
}

// The provisioning state of the private link service resource.
func (o PrivateLinkServiceResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource id of private link service.
func (o PrivateLinkServiceResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o PrivateLinkServiceResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o PrivateLinkServiceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The visibility list of the private link service.
func (o PrivateLinkServiceResponseOutput) Visibility() PrivateLinkServicePropertiesResponseVisibilityPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceResponse) *PrivateLinkServicePropertiesResponseVisibility {
		return v.Visibility
	}).(PrivateLinkServicePropertiesResponseVisibilityPtrOutput)
}

type PrivateLinkServiceResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceResponse)(nil)).Elem()
}

func (o PrivateLinkServiceResponsePtrOutput) ToPrivateLinkServiceResponsePtrOutput() PrivateLinkServiceResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceResponsePtrOutput) ToPrivateLinkServiceResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceResponsePtrOutput) Elem() PrivateLinkServiceResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) PrivateLinkServiceResponse {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceResponse
		return ret
	}).(PrivateLinkServiceResponseOutput)
}

// The alias of the private link service.
func (o PrivateLinkServiceResponsePtrOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Alias
	}).(pulumi.StringPtrOutput)
}

// The auto-approval list of the private link service.
func (o PrivateLinkServiceResponsePtrOutput) AutoApproval() PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *PrivateLinkServicePropertiesResponseAutoApproval {
		if v == nil {
			return nil
		}
		return v.AutoApproval
	}).(PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput)
}

// Whether the private link service is enabled for proxy protocol or not.
func (o PrivateLinkServiceResponsePtrOutput) EnableProxyProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableProxyProtocol
	}).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateLinkServiceResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// The extended location of the load balancer.
func (o PrivateLinkServiceResponsePtrOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *ExtendedLocationResponse {
		if v == nil {
			return nil
		}
		return v.ExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// The list of Fqdn.
func (o PrivateLinkServiceResponsePtrOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) []string {
		if v == nil {
			return nil
		}
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o PrivateLinkServiceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// An array of private link service IP configurations.
func (o PrivateLinkServiceResponsePtrOutput) IpConfigurations() PrivateLinkServiceIpConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) []PrivateLinkServiceIpConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(PrivateLinkServiceIpConfigurationResponseArrayOutput)
}

// An array of references to the load balancer IP configurations.
func (o PrivateLinkServiceResponsePtrOutput) LoadBalancerFrontendIpConfigurations() FrontendIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) []FrontendIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerFrontendIpConfigurations
	}).(FrontendIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o PrivateLinkServiceResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PrivateLinkServiceResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// An array of references to the network interfaces created for this private link service.
func (o PrivateLinkServiceResponsePtrOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) []NetworkInterfaceResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceResponseArrayOutput)
}

// An array of list about connections to the private endpoint.
func (o PrivateLinkServiceResponsePtrOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) []PrivateEndpointConnectionResponse {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionResponseArrayOutput)
}

// The provisioning state of the private link service resource.
func (o PrivateLinkServiceResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource id of private link service.
func (o PrivateLinkServiceResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o PrivateLinkServiceResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o PrivateLinkServiceResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The visibility list of the private link service.
func (o PrivateLinkServiceResponsePtrOutput) Visibility() PrivateLinkServicePropertiesResponseVisibilityPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceResponse) *PrivateLinkServicePropertiesResponseVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(PrivateLinkServicePropertiesResponseVisibilityPtrOutput)
}

// Public IP address resource.
type PublicIPAddress struct {
	// The DDoS protection custom policy associated with the public IP address.
	DdosSettings *DdosSettings `pulumi:"ddosSettings"`
	// Specify what happens to the public IP address when the VM using it is deleted
	DeleteOption *string `pulumi:"deleteOption"`
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings *PublicIPAddressDnsSettings `pulumi:"dnsSettings"`
	// The extended location of the public ip address.
	ExtendedLocation *ExtendedLocation `pulumi:"extendedLocation"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress *string `pulumi:"ipAddress"`
	// The list of tags associated with the public IP address.
	IpTags []IpTag `pulumi:"ipTags"`
	// The linked public IP address of the public IP address resource.
	LinkedPublicIPAddress *PublicIPAddress `pulumi:"linkedPublicIPAddress"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Migration phase of Public IP Address.
	MigrationPhase *string `pulumi:"migrationPhase"`
	// The NatGateway for the Public IP address.
	NatGateway *NatGateway `pulumi:"natGateway"`
	// The public IP address version.
	PublicIPAddressVersion *string `pulumi:"publicIPAddressVersion"`
	// The public IP address allocation method.
	PublicIPAllocationMethod *string `pulumi:"publicIPAllocationMethod"`
	// The Public IP Prefix this Public IP Address should be allocated from.
	PublicIPPrefix *SubResource `pulumi:"publicIPPrefix"`
	// The service public IP address of the public IP address resource.
	ServicePublicIPAddress *PublicIPAddress `pulumi:"servicePublicIPAddress"`
	// The public IP address SKU.
	Sku *PublicIPAddressSku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// PublicIPAddressInput is an input type that accepts PublicIPAddressArgs and PublicIPAddressOutput values.
// You can construct a concrete instance of `PublicIPAddressInput` via:
//
//	PublicIPAddressArgs{...}
type PublicIPAddressInput interface {
	pulumi.Input

	ToPublicIPAddressOutput() PublicIPAddressOutput
	ToPublicIPAddressOutputWithContext(context.Context) PublicIPAddressOutput
}

// Public IP address resource.
type PublicIPAddressArgs struct {
	// The DDoS protection custom policy associated with the public IP address.
	DdosSettings DdosSettingsPtrInput `pulumi:"ddosSettings"`
	// Specify what happens to the public IP address when the VM using it is deleted
	DeleteOption pulumi.StringPtrInput `pulumi:"deleteOption"`
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings PublicIPAddressDnsSettingsPtrInput `pulumi:"dnsSettings"`
	// The extended location of the public ip address.
	ExtendedLocation ExtendedLocationPtrInput `pulumi:"extendedLocation"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The list of tags associated with the public IP address.
	IpTags IpTagArrayInput `pulumi:"ipTags"`
	// The linked public IP address of the public IP address resource.
	LinkedPublicIPAddress PublicIPAddressPtrInput `pulumi:"linkedPublicIPAddress"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Migration phase of Public IP Address.
	MigrationPhase pulumi.StringPtrInput `pulumi:"migrationPhase"`
	// The NatGateway for the Public IP address.
	NatGateway NatGatewayPtrInput `pulumi:"natGateway"`
	// The public IP address version.
	PublicIPAddressVersion pulumi.StringPtrInput `pulumi:"publicIPAddressVersion"`
	// The public IP address allocation method.
	PublicIPAllocationMethod pulumi.StringPtrInput `pulumi:"publicIPAllocationMethod"`
	// The Public IP Prefix this Public IP Address should be allocated from.
	PublicIPPrefix SubResourcePtrInput `pulumi:"publicIPPrefix"`
	// The service public IP address of the public IP address resource.
	ServicePublicIPAddress PublicIPAddressPtrInput `pulumi:"servicePublicIPAddress"`
	// The public IP address SKU.
	Sku PublicIPAddressSkuPtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (PublicIPAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddress)(nil)).Elem()
}

func (i PublicIPAddressArgs) ToPublicIPAddressOutput() PublicIPAddressOutput {
	return i.ToPublicIPAddressOutputWithContext(context.Background())
}

func (i PublicIPAddressArgs) ToPublicIPAddressOutputWithContext(ctx context.Context) PublicIPAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressOutput)
}

func (i PublicIPAddressArgs) ToPublicIPAddressPtrOutput() PublicIPAddressPtrOutput {
	return i.ToPublicIPAddressPtrOutputWithContext(context.Background())
}

func (i PublicIPAddressArgs) ToPublicIPAddressPtrOutputWithContext(ctx context.Context) PublicIPAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressOutput).ToPublicIPAddressPtrOutputWithContext(ctx)
}

// PublicIPAddressPtrInput is an input type that accepts PublicIPAddressArgs, PublicIPAddressPtr and PublicIPAddressPtrOutput values.
// You can construct a concrete instance of `PublicIPAddressPtrInput` via:
//
//	        PublicIPAddressArgs{...}
//
//	or:
//
//	        nil
type PublicIPAddressPtrInput interface {
	pulumi.Input

	ToPublicIPAddressPtrOutput() PublicIPAddressPtrOutput
	ToPublicIPAddressPtrOutputWithContext(context.Context) PublicIPAddressPtrOutput
}

type publicIPAddressPtrType PublicIPAddressArgs

func PublicIPAddressPtr(v *PublicIPAddressArgs) PublicIPAddressPtrInput {
	return (*publicIPAddressPtrType)(v)
}

func (*publicIPAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddress)(nil)).Elem()
}

func (i *publicIPAddressPtrType) ToPublicIPAddressPtrOutput() PublicIPAddressPtrOutput {
	return i.ToPublicIPAddressPtrOutputWithContext(context.Background())
}

func (i *publicIPAddressPtrType) ToPublicIPAddressPtrOutputWithContext(ctx context.Context) PublicIPAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressPtrOutput)
}

// Public IP address resource.
type PublicIPAddressOutput struct{ *pulumi.OutputState }

func (PublicIPAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddress)(nil)).Elem()
}

func (o PublicIPAddressOutput) ToPublicIPAddressOutput() PublicIPAddressOutput {
	return o
}

func (o PublicIPAddressOutput) ToPublicIPAddressOutputWithContext(ctx context.Context) PublicIPAddressOutput {
	return o
}

func (o PublicIPAddressOutput) ToPublicIPAddressPtrOutput() PublicIPAddressPtrOutput {
	return o.ToPublicIPAddressPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressOutput) ToPublicIPAddressPtrOutputWithContext(ctx context.Context) PublicIPAddressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicIPAddress) *PublicIPAddress {
		return &v
	}).(PublicIPAddressPtrOutput)
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressOutput) DdosSettings() DdosSettingsPtrOutput {
	return o.ApplyT(func(v PublicIPAddress) *DdosSettings { return v.DdosSettings }).(DdosSettingsPtrOutput)
}

// Specify what happens to the public IP address when the VM using it is deleted
func (o PublicIPAddressOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddress) *string { return v.DeleteOption }).(pulumi.StringPtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressOutput) DnsSettings() PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyT(func(v PublicIPAddress) *PublicIPAddressDnsSettings { return v.DnsSettings }).(PublicIPAddressDnsSettingsPtrOutput)
}

// The extended location of the public ip address.
func (o PublicIPAddressOutput) ExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v PublicIPAddress) *ExtendedLocation { return v.ExtendedLocation }).(ExtendedLocationPtrOutput)
}

// Resource ID.
func (o PublicIPAddressOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddress) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicIPAddress) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressOutput) IpTags() IpTagArrayOutput {
	return o.ApplyT(func(v PublicIPAddress) []IpTag { return v.IpTags }).(IpTagArrayOutput)
}

// The linked public IP address of the public IP address resource.
func (o PublicIPAddressOutput) LinkedPublicIPAddress() PublicIPAddressPtrOutput {
	return o.ApplyT(func(v PublicIPAddress) *PublicIPAddress { return v.LinkedPublicIPAddress }).(PublicIPAddressPtrOutput)
}

// Resource location.
func (o PublicIPAddressOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddress) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Migration phase of Public IP Address.
func (o PublicIPAddressOutput) MigrationPhase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddress) *string { return v.MigrationPhase }).(pulumi.StringPtrOutput)
}

// The NatGateway for the Public IP address.
func (o PublicIPAddressOutput) NatGateway() NatGatewayPtrOutput {
	return o.ApplyT(func(v PublicIPAddress) *NatGateway { return v.NatGateway }).(NatGatewayPtrOutput)
}

// The public IP address version.
func (o PublicIPAddressOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddress) *string { return v.PublicIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The public IP address allocation method.
func (o PublicIPAddressOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddress) *string { return v.PublicIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v PublicIPAddress) *SubResource { return v.PublicIPPrefix }).(SubResourcePtrOutput)
}

// The service public IP address of the public IP address resource.
func (o PublicIPAddressOutput) ServicePublicIPAddress() PublicIPAddressPtrOutput {
	return o.ApplyT(func(v PublicIPAddress) *PublicIPAddress { return v.ServicePublicIPAddress }).(PublicIPAddressPtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressOutput) Sku() PublicIPAddressSkuPtrOutput {
	return o.ApplyT(func(v PublicIPAddress) *PublicIPAddressSku { return v.Sku }).(PublicIPAddressSkuPtrOutput)
}

// Resource tags.
func (o PublicIPAddressOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicIPAddress) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicIPAddress) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type PublicIPAddressPtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddress)(nil)).Elem()
}

func (o PublicIPAddressPtrOutput) ToPublicIPAddressPtrOutput() PublicIPAddressPtrOutput {
	return o
}

func (o PublicIPAddressPtrOutput) ToPublicIPAddressPtrOutputWithContext(ctx context.Context) PublicIPAddressPtrOutput {
	return o
}

func (o PublicIPAddressPtrOutput) Elem() PublicIPAddressOutput {
	return o.ApplyT(func(v *PublicIPAddress) PublicIPAddress {
		if v != nil {
			return *v
		}
		var ret PublicIPAddress
		return ret
	}).(PublicIPAddressOutput)
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressPtrOutput) DdosSettings() DdosSettingsPtrOutput {
	return o.ApplyT(func(v *PublicIPAddress) *DdosSettings {
		if v == nil {
			return nil
		}
		return v.DdosSettings
	}).(DdosSettingsPtrOutput)
}

// Specify what happens to the public IP address when the VM using it is deleted
func (o PublicIPAddressPtrOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddress) *string {
		if v == nil {
			return nil
		}
		return v.DeleteOption
	}).(pulumi.StringPtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressPtrOutput) DnsSettings() PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyT(func(v *PublicIPAddress) *PublicIPAddressDnsSettings {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(PublicIPAddressDnsSettingsPtrOutput)
}

// The extended location of the public ip address.
func (o PublicIPAddressPtrOutput) ExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v *PublicIPAddress) *ExtendedLocation {
		if v == nil {
			return nil
		}
		return v.ExtendedLocation
	}).(ExtendedLocationPtrOutput)
}

// Resource ID.
func (o PublicIPAddressPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddress) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressPtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicIPAddress) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressPtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddress) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressPtrOutput) IpTags() IpTagArrayOutput {
	return o.ApplyT(func(v *PublicIPAddress) []IpTag {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(IpTagArrayOutput)
}

// The linked public IP address of the public IP address resource.
func (o PublicIPAddressPtrOutput) LinkedPublicIPAddress() PublicIPAddressPtrOutput {
	return o.ApplyT(func(v *PublicIPAddress) *PublicIPAddress {
		if v == nil {
			return nil
		}
		return v.LinkedPublicIPAddress
	}).(PublicIPAddressPtrOutput)
}

// Resource location.
func (o PublicIPAddressPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddress) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Migration phase of Public IP Address.
func (o PublicIPAddressPtrOutput) MigrationPhase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddress) *string {
		if v == nil {
			return nil
		}
		return v.MigrationPhase
	}).(pulumi.StringPtrOutput)
}

// The NatGateway for the Public IP address.
func (o PublicIPAddressPtrOutput) NatGateway() NatGatewayPtrOutput {
	return o.ApplyT(func(v *PublicIPAddress) *NatGateway {
		if v == nil {
			return nil
		}
		return v.NatGateway
	}).(NatGatewayPtrOutput)
}

// The public IP address version.
func (o PublicIPAddressPtrOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddress) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The public IP address allocation method.
func (o PublicIPAddressPtrOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddress) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressPtrOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v *PublicIPAddress) *SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourcePtrOutput)
}

// The service public IP address of the public IP address resource.
func (o PublicIPAddressPtrOutput) ServicePublicIPAddress() PublicIPAddressPtrOutput {
	return o.ApplyT(func(v *PublicIPAddress) *PublicIPAddress {
		if v == nil {
			return nil
		}
		return v.ServicePublicIPAddress
	}).(PublicIPAddressPtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressPtrOutput) Sku() PublicIPAddressSkuPtrOutput {
	return o.ApplyT(func(v *PublicIPAddress) *PublicIPAddressSku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(PublicIPAddressSkuPtrOutput)
}

// Resource tags.
func (o PublicIPAddressPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicIPAddress) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressPtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicIPAddress) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettings struct {
	// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn *string `pulumi:"fqdn"`
	// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn *string `pulumi:"reverseFqdn"`
}

// PublicIPAddressDnsSettingsInput is an input type that accepts PublicIPAddressDnsSettingsArgs and PublicIPAddressDnsSettingsOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsInput` via:
//
//	PublicIPAddressDnsSettingsArgs{...}
type PublicIPAddressDnsSettingsInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput
	ToPublicIPAddressDnsSettingsOutputWithContext(context.Context) PublicIPAddressDnsSettingsOutput
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettingsArgs struct {
	// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn pulumi.StringPtrInput `pulumi:"reverseFqdn"`
}

func (PublicIPAddressDnsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettings)(nil)).Elem()
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput {
	return i.ToPublicIPAddressDnsSettingsOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsOutput)
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return i.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsOutput).ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx)
}

// PublicIPAddressDnsSettingsPtrInput is an input type that accepts PublicIPAddressDnsSettingsArgs, PublicIPAddressDnsSettingsPtr and PublicIPAddressDnsSettingsPtrOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsPtrInput` via:
//
//	        PublicIPAddressDnsSettingsArgs{...}
//
//	or:
//
//	        nil
type PublicIPAddressDnsSettingsPtrInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput
	ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Context) PublicIPAddressDnsSettingsPtrOutput
}

type publicIPAddressDnsSettingsPtrType PublicIPAddressDnsSettingsArgs

func PublicIPAddressDnsSettingsPtr(v *PublicIPAddressDnsSettingsArgs) PublicIPAddressDnsSettingsPtrInput {
	return (*publicIPAddressDnsSettingsPtrType)(v)
}

func (*publicIPAddressDnsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettings)(nil)).Elem()
}

func (i *publicIPAddressDnsSettingsPtrType) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return i.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (i *publicIPAddressDnsSettingsPtrType) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsPtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettingsOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettings)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput {
	return o
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsOutput {
	return o
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return o.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicIPAddressDnsSettings) *PublicIPAddressDnsSettings {
		return &v
	}).(PublicIPAddressDnsSettingsPtrOutput)
}

// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.ReverseFqdn }).(pulumi.StringPtrOutput)
}

type PublicIPAddressDnsSettingsPtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettings)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsPtrOutput) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsPtrOutput) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsPtrOutput) Elem() PublicIPAddressDnsSettingsOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) PublicIPAddressDnsSettings {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressDnsSettings
		return ret
	}).(PublicIPAddressDnsSettingsOutput)
}

// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsPtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsPtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsPtrOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.ReverseFqdn
	}).(pulumi.StringPtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettingsResponse struct {
	// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn *string `pulumi:"fqdn"`
	// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn *string `pulumi:"reverseFqdn"`
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponseOutput() PublicIPAddressDnsSettingsResponseOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponseOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponseOutput {
	return o
}

// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsResponseOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsResponseOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.ReverseFqdn }).(pulumi.StringPtrOutput)
}

type PublicIPAddressDnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) Elem() PublicIPAddressDnsSettingsResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) PublicIPAddressDnsSettingsResponse {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressDnsSettingsResponse
		return ret
	}).(PublicIPAddressDnsSettingsResponseOutput)
}

// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReverseFqdn
	}).(pulumi.StringPtrOutput)
}

// Public IP address resource.
type PublicIPAddressResponse struct {
	// The DDoS protection custom policy associated with the public IP address.
	DdosSettings *DdosSettingsResponse `pulumi:"ddosSettings"`
	// Specify what happens to the public IP address when the VM using it is deleted
	DeleteOption *string `pulumi:"deleteOption"`
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings *PublicIPAddressDnsSettingsResponse `pulumi:"dnsSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The extended location of the public ip address.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress *string `pulumi:"ipAddress"`
	// The IP configuration associated with the public IP address.
	IpConfiguration IPConfigurationResponse `pulumi:"ipConfiguration"`
	// The list of tags associated with the public IP address.
	IpTags []IpTagResponse `pulumi:"ipTags"`
	// The linked public IP address of the public IP address resource.
	LinkedPublicIPAddress *PublicIPAddressResponse `pulumi:"linkedPublicIPAddress"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Migration phase of Public IP Address.
	MigrationPhase *string `pulumi:"migrationPhase"`
	// Resource name.
	Name string `pulumi:"name"`
	// The NatGateway for the Public IP address.
	NatGateway *NatGatewayResponse `pulumi:"natGateway"`
	// The provisioning state of the public IP address resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The public IP address version.
	PublicIPAddressVersion *string `pulumi:"publicIPAddressVersion"`
	// The public IP address allocation method.
	PublicIPAllocationMethod *string `pulumi:"publicIPAllocationMethod"`
	// The Public IP Prefix this Public IP Address should be allocated from.
	PublicIPPrefix *SubResourceResponse `pulumi:"publicIPPrefix"`
	// The resource GUID property of the public IP address resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// The service public IP address of the public IP address resource.
	ServicePublicIPAddress *PublicIPAddressResponse `pulumi:"servicePublicIPAddress"`
	// The public IP address SKU.
	Sku *PublicIPAddressSkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// Defaults sets the appropriate defaults for PublicIPAddressResponse
func (val *PublicIPAddressResponse) Defaults() *PublicIPAddressResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.IpConfiguration = *tmp.IpConfiguration.Defaults()

	tmp.LinkedPublicIPAddress = tmp.LinkedPublicIPAddress.Defaults()

	tmp.ServicePublicIPAddress = tmp.ServicePublicIPAddress.Defaults()

	return &tmp
}

// Public IP address resource.
type PublicIPAddressResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResponse)(nil)).Elem()
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponseOutput() PublicIPAddressResponseOutput {
	return o
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponseOutputWithContext(ctx context.Context) PublicIPAddressResponseOutput {
	return o
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressResponseOutput) DdosSettings() DdosSettingsResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *DdosSettingsResponse { return v.DdosSettings }).(DdosSettingsResponsePtrOutput)
}

// Specify what happens to the public IP address when the VM using it is deleted
func (o PublicIPAddressResponseOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.DeleteOption }).(pulumi.StringPtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressResponseOutput) DnsSettings() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressDnsSettingsResponse { return v.DnsSettings }).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The extended location of the public ip address.
func (o PublicIPAddressResponseOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// Resource ID.
func (o PublicIPAddressResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The IP configuration associated with the public IP address.
func (o PublicIPAddressResponseOutput) IpConfiguration() IPConfigurationResponseOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) IPConfigurationResponse { return v.IpConfiguration }).(IPConfigurationResponseOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressResponseOutput) IpTags() IpTagResponseArrayOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) []IpTagResponse { return v.IpTags }).(IpTagResponseArrayOutput)
}

// The linked public IP address of the public IP address resource.
func (o PublicIPAddressResponseOutput) LinkedPublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressResponse { return v.LinkedPublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// Resource location.
func (o PublicIPAddressResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Migration phase of Public IP Address.
func (o PublicIPAddressResponseOutput) MigrationPhase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.MigrationPhase }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPAddressResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The NatGateway for the Public IP address.
func (o PublicIPAddressResponseOutput) NatGateway() NatGatewayResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *NatGatewayResponse { return v.NatGateway }).(NatGatewayResponsePtrOutput)
}

// The provisioning state of the public IP address resource.
func (o PublicIPAddressResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The public IP address version.
func (o PublicIPAddressResponseOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.PublicIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The public IP address allocation method.
func (o PublicIPAddressResponseOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.PublicIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressResponseOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *SubResourceResponse { return v.PublicIPPrefix }).(SubResourceResponsePtrOutput)
}

// The resource GUID property of the public IP address resource.
func (o PublicIPAddressResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The service public IP address of the public IP address resource.
func (o PublicIPAddressResponseOutput) ServicePublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressResponse { return v.ServicePublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressResponseOutput) Sku() PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressSkuResponse { return v.Sku }).(PublicIPAddressSkuResponsePtrOutput)
}

// Resource tags.
func (o PublicIPAddressResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPAddressResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type PublicIPAddressResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressResponse)(nil)).Elem()
}

func (o PublicIPAddressResponsePtrOutput) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return o
}

func (o PublicIPAddressResponsePtrOutput) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return o
}

func (o PublicIPAddressResponsePtrOutput) Elem() PublicIPAddressResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) PublicIPAddressResponse {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressResponse
		return ret
	}).(PublicIPAddressResponseOutput)
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) DdosSettings() DdosSettingsResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *DdosSettingsResponse {
		if v == nil {
			return nil
		}
		return v.DdosSettings
	}).(DdosSettingsResponsePtrOutput)
}

// Specify what happens to the public IP address when the VM using it is deleted
func (o PublicIPAddressResponsePtrOutput) DeleteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeleteOption
	}).(pulumi.StringPtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) DnsSettings() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressDnsSettingsResponse {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// The extended location of the public ip address.
func (o PublicIPAddressResponsePtrOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *ExtendedLocationResponse {
		if v == nil {
			return nil
		}
		return v.ExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// Resource ID.
func (o PublicIPAddressResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The IP configuration associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) IpConfiguration() IPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *IPConfigurationResponse {
		if v == nil {
			return nil
		}
		return &v.IpConfiguration
	}).(IPConfigurationResponsePtrOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) IpTags() IpTagResponseArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) []IpTagResponse {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(IpTagResponseArrayOutput)
}

// The linked public IP address of the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) LinkedPublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.LinkedPublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// Resource location.
func (o PublicIPAddressResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Migration phase of Public IP Address.
func (o PublicIPAddressResponsePtrOutput) MigrationPhase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.MigrationPhase
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPAddressResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The NatGateway for the Public IP address.
func (o PublicIPAddressResponsePtrOutput) NatGateway() NatGatewayResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *NatGatewayResponse {
		if v == nil {
			return nil
		}
		return v.NatGateway
	}).(NatGatewayResponsePtrOutput)
}

// The provisioning state of the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The public IP address version.
func (o PublicIPAddressResponsePtrOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The public IP address allocation method.
func (o PublicIPAddressResponsePtrOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressResponsePtrOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourceResponsePtrOutput)
}

// The resource GUID property of the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The service public IP address of the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) ServicePublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.ServicePublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressResponsePtrOutput) Sku() PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressSkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(PublicIPAddressSkuResponsePtrOutput)
}

// Resource tags.
func (o PublicIPAddressResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPAddressResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressResponsePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// SKU of a public IP address.
type PublicIPAddressSku struct {
	// Name of a public IP address SKU.
	Name *string `pulumi:"name"`
	// Tier of a public IP address SKU.
	Tier *string `pulumi:"tier"`
}

// PublicIPAddressSkuInput is an input type that accepts PublicIPAddressSkuArgs and PublicIPAddressSkuOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuInput` via:
//
//	PublicIPAddressSkuArgs{...}
type PublicIPAddressSkuInput interface {
	pulumi.Input

	ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput
	ToPublicIPAddressSkuOutputWithContext(context.Context) PublicIPAddressSkuOutput
}

// SKU of a public IP address.
type PublicIPAddressSkuArgs struct {
	// Name of a public IP address SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of a public IP address SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (PublicIPAddressSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSku)(nil)).Elem()
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput {
	return i.ToPublicIPAddressSkuOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuOutputWithContext(ctx context.Context) PublicIPAddressSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuOutput)
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return i.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuOutput).ToPublicIPAddressSkuPtrOutputWithContext(ctx)
}

// PublicIPAddressSkuPtrInput is an input type that accepts PublicIPAddressSkuArgs, PublicIPAddressSkuPtr and PublicIPAddressSkuPtrOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuPtrInput` via:
//
//	        PublicIPAddressSkuArgs{...}
//
//	or:
//
//	        nil
type PublicIPAddressSkuPtrInput interface {
	pulumi.Input

	ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput
	ToPublicIPAddressSkuPtrOutputWithContext(context.Context) PublicIPAddressSkuPtrOutput
}

type publicIPAddressSkuPtrType PublicIPAddressSkuArgs

func PublicIPAddressSkuPtr(v *PublicIPAddressSkuArgs) PublicIPAddressSkuPtrInput {
	return (*publicIPAddressSkuPtrType)(v)
}

func (*publicIPAddressSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSku)(nil)).Elem()
}

func (i *publicIPAddressSkuPtrType) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return i.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (i *publicIPAddressSkuPtrType) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuPtrOutput)
}

// SKU of a public IP address.
type PublicIPAddressSkuOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSku)(nil)).Elem()
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput {
	return o
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuOutputWithContext(ctx context.Context) PublicIPAddressSkuOutput {
	return o
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return o.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicIPAddressSku) *PublicIPAddressSku {
		return &v
	}).(PublicIPAddressSkuPtrOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of a public IP address SKU.
func (o PublicIPAddressSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type PublicIPAddressSkuPtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSku)(nil)).Elem()
}

func (o PublicIPAddressSkuPtrOutput) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return o
}

func (o PublicIPAddressSkuPtrOutput) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return o
}

func (o PublicIPAddressSkuPtrOutput) Elem() PublicIPAddressSkuOutput {
	return o.ApplyT(func(v *PublicIPAddressSku) PublicIPAddressSku {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressSku
		return ret
	}).(PublicIPAddressSkuOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of a public IP address SKU.
func (o PublicIPAddressSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of a public IP address.
type PublicIPAddressSkuResponse struct {
	// Name of a public IP address SKU.
	Name *string `pulumi:"name"`
	// Tier of a public IP address SKU.
	Tier *string `pulumi:"tier"`
}

// SKU of a public IP address.
type PublicIPAddressSkuResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSkuResponse)(nil)).Elem()
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponseOutput() PublicIPAddressSkuResponseOutput {
	return o
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponseOutputWithContext(ctx context.Context) PublicIPAddressSkuResponseOutput {
	return o
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of a public IP address SKU.
func (o PublicIPAddressSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type PublicIPAddressSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSkuResponse)(nil)).Elem()
}

func (o PublicIPAddressSkuResponsePtrOutput) ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput {
	return o
}

func (o PublicIPAddressSkuResponsePtrOutput) ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuResponsePtrOutput {
	return o
}

func (o PublicIPAddressSkuResponsePtrOutput) Elem() PublicIPAddressSkuResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) PublicIPAddressSkuResponse {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressSkuResponse
		return ret
	}).(PublicIPAddressSkuResponseOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of a public IP address SKU.
func (o PublicIPAddressSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// A collective group of information about the record set information.
type RecordSetResponse struct {
	// Fqdn that resolves to private endpoint ip address.
	Fqdn *string `pulumi:"fqdn"`
	// The private ip address of the private endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
	// The provisioning state of the recordset.
	ProvisioningState string `pulumi:"provisioningState"`
	// Recordset name.
	RecordSetName *string `pulumi:"recordSetName"`
	// Resource record type.
	RecordType *string `pulumi:"recordType"`
	// Recordset time to live.
	Ttl *int `pulumi:"ttl"`
}

// A collective group of information about the record set information.
type RecordSetResponseOutput struct{ *pulumi.OutputState }

func (RecordSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordSetResponse)(nil)).Elem()
}

func (o RecordSetResponseOutput) ToRecordSetResponseOutput() RecordSetResponseOutput {
	return o
}

func (o RecordSetResponseOutput) ToRecordSetResponseOutputWithContext(ctx context.Context) RecordSetResponseOutput {
	return o
}

// Fqdn that resolves to private endpoint ip address.
func (o RecordSetResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The private ip address of the private endpoint.
func (o RecordSetResponseOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecordSetResponse) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// The provisioning state of the recordset.
func (o RecordSetResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RecordSetResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Recordset name.
func (o RecordSetResponseOutput) RecordSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetResponse) *string { return v.RecordSetName }).(pulumi.StringPtrOutput)
}

// Resource record type.
func (o RecordSetResponseOutput) RecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetResponse) *string { return v.RecordType }).(pulumi.StringPtrOutput)
}

// Recordset time to live.
func (o RecordSetResponseOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordSetResponse) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type RecordSetResponseArrayOutput struct{ *pulumi.OutputState }

func (RecordSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecordSetResponse)(nil)).Elem()
}

func (o RecordSetResponseArrayOutput) ToRecordSetResponseArrayOutput() RecordSetResponseArrayOutput {
	return o
}

func (o RecordSetResponseArrayOutput) ToRecordSetResponseArrayOutputWithContext(ctx context.Context) RecordSetResponseArrayOutput {
	return o
}

func (o RecordSetResponseArrayOutput) Index(i pulumi.IntInput) RecordSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecordSetResponse {
		return vs[0].([]RecordSetResponse)[vs[1].(int)]
	}).(RecordSetResponseOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Link to the external resource.
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the resource navigation link resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponseOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLinkResponse)(nil)).Elem()
}

func (o ResourceNavigationLinkResponseOutput) ToResourceNavigationLinkResponseOutput() ResourceNavigationLinkResponseOutput {
	return o
}

func (o ResourceNavigationLinkResponseOutput) ToResourceNavigationLinkResponseOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ResourceNavigationLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ResourceNavigationLinkResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Link to the external resource.
func (o ResourceNavigationLinkResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ResourceNavigationLinkResponseOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ResourceNavigationLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource navigation link resource.
func (o ResourceNavigationLinkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o ResourceNavigationLinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ResourceNavigationLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLinkResponse)(nil)).Elem()
}

func (o ResourceNavigationLinkResponseArrayOutput) ToResourceNavigationLinkResponseArrayOutput() ResourceNavigationLinkResponseArrayOutput {
	return o
}

func (o ResourceNavigationLinkResponseArrayOutput) ToResourceNavigationLinkResponseArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseArrayOutput {
	return o
}

func (o ResourceNavigationLinkResponseArrayOutput) Index(i pulumi.IntInput) ResourceNavigationLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceNavigationLinkResponse {
		return vs[0].([]ResourceNavigationLinkResponse)[vs[1].(int)]
	}).(ResourceNavigationLinkResponseOutput)
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersResponse struct {
	// Number of days to retain flow log records.
	Days *int `pulumi:"days"`
	// Flag to enable/disable retention.
	Enabled *bool `pulumi:"enabled"`
}

// Defaults sets the appropriate defaults for RetentionPolicyParametersResponse
func (val *RetentionPolicyParametersResponse) Defaults() *RetentionPolicyParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Days == nil {
		days_ := 0
		tmp.Days = &days_
	}
	if tmp.Enabled == nil {
		enabled_ := false
		tmp.Enabled = &enabled_
	}
	return &tmp
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersResponseOutput struct{ *pulumi.OutputState }

func (RetentionPolicyParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyParametersResponse)(nil)).Elem()
}

func (o RetentionPolicyParametersResponseOutput) ToRetentionPolicyParametersResponseOutput() RetentionPolicyParametersResponseOutput {
	return o
}

func (o RetentionPolicyParametersResponseOutput) ToRetentionPolicyParametersResponseOutputWithContext(ctx context.Context) RetentionPolicyParametersResponseOutput {
	return o
}

// Number of days to retain flow log records.
func (o RetentionPolicyParametersResponseOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParametersResponse) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Flag to enable/disable retention.
func (o RetentionPolicyParametersResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParametersResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type RetentionPolicyParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (RetentionPolicyParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyParametersResponse)(nil)).Elem()
}

func (o RetentionPolicyParametersResponsePtrOutput) ToRetentionPolicyParametersResponsePtrOutput() RetentionPolicyParametersResponsePtrOutput {
	return o
}

func (o RetentionPolicyParametersResponsePtrOutput) ToRetentionPolicyParametersResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyParametersResponsePtrOutput {
	return o
}

func (o RetentionPolicyParametersResponsePtrOutput) Elem() RetentionPolicyParametersResponseOutput {
	return o.ApplyT(func(v *RetentionPolicyParametersResponse) RetentionPolicyParametersResponse {
		if v != nil {
			return *v
		}
		var ret RetentionPolicyParametersResponse
		return ret
	}).(RetentionPolicyParametersResponseOutput)
}

// Number of days to retain flow log records.
func (o RetentionPolicyParametersResponsePtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Flag to enable/disable retention.
func (o RetentionPolicyParametersResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyParametersResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Route resource.
type Route struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
	HasBgpOverride *bool `pulumi:"hasBgpOverride"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType string `pulumi:"nextHopType"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// RouteInput is an input type that accepts RouteArgs and RouteOutput values.
// You can construct a concrete instance of `RouteInput` via:
//
//	RouteArgs{...}
type RouteInput interface {
	pulumi.Input

	ToRouteOutput() RouteOutput
	ToRouteOutputWithContext(context.Context) RouteOutput
}

// Route resource.
type RouteArgs struct {
	// The destination CIDR to which the route applies.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
	HasBgpOverride pulumi.BoolPtrInput `pulumi:"hasBgpOverride"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (RouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Route)(nil)).Elem()
}

func (i RouteArgs) ToRouteOutput() RouteOutput {
	return i.ToRouteOutputWithContext(context.Background())
}

func (i RouteArgs) ToRouteOutputWithContext(ctx context.Context) RouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteOutput)
}

// RouteArrayInput is an input type that accepts RouteArray and RouteArrayOutput values.
// You can construct a concrete instance of `RouteArrayInput` via:
//
//	RouteArray{ RouteArgs{...} }
type RouteArrayInput interface {
	pulumi.Input

	ToRouteArrayOutput() RouteArrayOutput
	ToRouteArrayOutputWithContext(context.Context) RouteArrayOutput
}

type RouteArray []RouteInput

func (RouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Route)(nil)).Elem()
}

func (i RouteArray) ToRouteArrayOutput() RouteArrayOutput {
	return i.ToRouteArrayOutputWithContext(context.Background())
}

func (i RouteArray) ToRouteArrayOutputWithContext(ctx context.Context) RouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteArrayOutput)
}

// Route resource.
type RouteOutput struct{ *pulumi.OutputState }

func (RouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Route)(nil)).Elem()
}

func (o RouteOutput) ToRouteOutput() RouteOutput {
	return o
}

func (o RouteOutput) ToRouteOutputWithContext(ctx context.Context) RouteOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
func (o RouteOutput) HasBgpOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Route) *bool { return v.HasBgpOverride }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o RouteOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to.
func (o RouteOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v Route) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The type of the resource.
func (o RouteOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type RouteArrayOutput struct{ *pulumi.OutputState }

func (RouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Route)(nil)).Elem()
}

func (o RouteArrayOutput) ToRouteArrayOutput() RouteArrayOutput {
	return o
}

func (o RouteArrayOutput) ToRouteArrayOutputWithContext(ctx context.Context) RouteArrayOutput {
	return o
}

func (o RouteArrayOutput) Index(i pulumi.IntInput) RouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Route {
		return vs[0].([]Route)[vs[1].(int)]
	}).(RouteOutput)
}

// Route resource.
type RouteResponse struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
	HasBgpOverride *bool `pulumi:"hasBgpOverride"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType string `pulumi:"nextHopType"`
	// The provisioning state of the route resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// Route resource.
type RouteResponseOutput struct{ *pulumi.OutputState }

func (RouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (o RouteResponseOutput) ToRouteResponseOutput() RouteResponseOutput {
	return o
}

func (o RouteResponseOutput) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
func (o RouteResponseOutput) HasBgpOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteResponse) *bool { return v.HasBgpOverride }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o RouteResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to.
func (o RouteResponseOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The provisioning state of the route resource.
func (o RouteResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the resource.
func (o RouteResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type RouteResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteResponse)(nil)).Elem()
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutput() RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutputWithContext(ctx context.Context) RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) Index(i pulumi.IntInput) RouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteResponse {
		return vs[0].([]RouteResponse)[vs[1].(int)]
	}).(RouteResponseOutput)
}

// Route table resource.
type RouteTable struct {
	// Whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation *bool `pulumi:"disableBgpRoutePropagation"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Collection of routes contained within a route table.
	Routes []Route `pulumi:"routes"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// RouteTableInput is an input type that accepts RouteTableArgs and RouteTableOutput values.
// You can construct a concrete instance of `RouteTableInput` via:
//
//	RouteTableArgs{...}
type RouteTableInput interface {
	pulumi.Input

	ToRouteTableOutput() RouteTableOutput
	ToRouteTableOutputWithContext(context.Context) RouteTableOutput
}

// Route table resource.
type RouteTableArgs struct {
	// Whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation pulumi.BoolPtrInput `pulumi:"disableBgpRoutePropagation"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Collection of routes contained within a route table.
	Routes RouteArrayInput `pulumi:"routes"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (RouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTable)(nil)).Elem()
}

func (i RouteTableArgs) ToRouteTableOutput() RouteTableOutput {
	return i.ToRouteTableOutputWithContext(context.Background())
}

func (i RouteTableArgs) ToRouteTableOutputWithContext(ctx context.Context) RouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableOutput)
}

func (i RouteTableArgs) ToRouteTablePtrOutput() RouteTablePtrOutput {
	return i.ToRouteTablePtrOutputWithContext(context.Background())
}

func (i RouteTableArgs) ToRouteTablePtrOutputWithContext(ctx context.Context) RouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableOutput).ToRouteTablePtrOutputWithContext(ctx)
}

// RouteTablePtrInput is an input type that accepts RouteTableArgs, RouteTablePtr and RouteTablePtrOutput values.
// You can construct a concrete instance of `RouteTablePtrInput` via:
//
//	        RouteTableArgs{...}
//
//	or:
//
//	        nil
type RouteTablePtrInput interface {
	pulumi.Input

	ToRouteTablePtrOutput() RouteTablePtrOutput
	ToRouteTablePtrOutputWithContext(context.Context) RouteTablePtrOutput
}

type routeTablePtrType RouteTableArgs

func RouteTablePtr(v *RouteTableArgs) RouteTablePtrInput {
	return (*routeTablePtrType)(v)
}

func (*routeTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTable)(nil)).Elem()
}

func (i *routeTablePtrType) ToRouteTablePtrOutput() RouteTablePtrOutput {
	return i.ToRouteTablePtrOutputWithContext(context.Background())
}

func (i *routeTablePtrType) ToRouteTablePtrOutputWithContext(ctx context.Context) RouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablePtrOutput)
}

// Route table resource.
type RouteTableOutput struct{ *pulumi.OutputState }

func (RouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTable)(nil)).Elem()
}

func (o RouteTableOutput) ToRouteTableOutput() RouteTableOutput {
	return o
}

func (o RouteTableOutput) ToRouteTableOutputWithContext(ctx context.Context) RouteTableOutput {
	return o
}

func (o RouteTableOutput) ToRouteTablePtrOutput() RouteTablePtrOutput {
	return o.ToRouteTablePtrOutputWithContext(context.Background())
}

func (o RouteTableOutput) ToRouteTablePtrOutputWithContext(ctx context.Context) RouteTablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteTable) *RouteTable {
		return &v
	}).(RouteTablePtrOutput)
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteTable) *bool { return v.DisableBgpRoutePropagation }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o RouteTableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTable) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableOutput) Routes() RouteArrayOutput {
	return o.ApplyT(func(v RouteTable) []Route { return v.Routes }).(RouteArrayOutput)
}

// Resource tags.
func (o RouteTableOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTable) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type RouteTablePtrOutput struct{ *pulumi.OutputState }

func (RouteTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTable)(nil)).Elem()
}

func (o RouteTablePtrOutput) ToRouteTablePtrOutput() RouteTablePtrOutput {
	return o
}

func (o RouteTablePtrOutput) ToRouteTablePtrOutputWithContext(ctx context.Context) RouteTablePtrOutput {
	return o
}

func (o RouteTablePtrOutput) Elem() RouteTableOutput {
	return o.ApplyT(func(v *RouteTable) RouteTable {
		if v != nil {
			return *v
		}
		var ret RouteTable
		return ret
	}).(RouteTableOutput)
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTablePtrOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouteTable) *bool {
		if v == nil {
			return nil
		}
		return v.DisableBgpRoutePropagation
	}).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o RouteTablePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTable) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTablePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTable) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTablePtrOutput) Routes() RouteArrayOutput {
	return o.ApplyT(func(v *RouteTable) []Route {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteArrayOutput)
}

// Resource tags.
func (o RouteTablePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTable) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Route table resource.
type RouteTableResponse struct {
	// Whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation *bool `pulumi:"disableBgpRoutePropagation"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the route table resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the route table.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Collection of routes contained within a route table.
	Routes []RouteResponse `pulumi:"routes"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Route table resource.
type RouteTableResponseOutput struct{ *pulumi.OutputState }

func (RouteTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutput() RouteTableResponseOutput {
	return o
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutputWithContext(ctx context.Context) RouteTableResponseOutput {
	return o
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableResponseOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *bool { return v.DisableBgpRoutePropagation }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o RouteTableResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the route table resource.
func (o RouteTableResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the route table.
func (o RouteTableResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableResponseOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v RouteTableResponse) []RouteResponse { return v.Routes }).(RouteResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v RouteTableResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o RouteTableResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTableResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RouteTableResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) Elem() RouteTableResponseOutput {
	return o.ApplyT(func(v *RouteTableResponse) RouteTableResponse {
		if v != nil {
			return *v
		}
		var ret RouteTableResponse
		return ret
	}).(RouteTableResponseOutput)
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableResponsePtrOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableBgpRoutePropagation
	}).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the route table resource.
func (o RouteTableResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the route table.
func (o RouteTableResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableResponsePtrOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableResponse) []RouteResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o RouteTableResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTableResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Network security rule.
type SecurityRule struct {
	// The network traffic is allowed or denied.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes []string `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups []ApplicationSecurityGroup `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction string `pulumi:"direction"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes []string `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups []ApplicationSecurityGroup `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// SecurityRuleInput is an input type that accepts SecurityRuleArgs and SecurityRuleOutput values.
// You can construct a concrete instance of `SecurityRuleInput` via:
//
//	SecurityRuleArgs{...}
type SecurityRuleInput interface {
	pulumi.Input

	ToSecurityRuleOutput() SecurityRuleOutput
	ToSecurityRuleOutputWithContext(context.Context) SecurityRuleOutput
}

// Network security rule.
type SecurityRuleArgs struct {
	// The network traffic is allowed or denied.
	Access pulumi.StringInput `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix pulumi.StringPtrInput `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes pulumi.StringArrayInput `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups ApplicationSecurityGroupArrayInput `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges pulumi.StringArrayInput `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringPtrInput `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes pulumi.StringArrayInput `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups ApplicationSecurityGroupArrayInput `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges pulumi.StringArrayInput `pulumi:"sourcePortRanges"`
	// The type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SecurityRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRule)(nil)).Elem()
}

func (i SecurityRuleArgs) ToSecurityRuleOutput() SecurityRuleOutput {
	return i.ToSecurityRuleOutputWithContext(context.Background())
}

func (i SecurityRuleArgs) ToSecurityRuleOutputWithContext(ctx context.Context) SecurityRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleOutput)
}

// SecurityRuleArrayInput is an input type that accepts SecurityRuleArray and SecurityRuleArrayOutput values.
// You can construct a concrete instance of `SecurityRuleArrayInput` via:
//
//	SecurityRuleArray{ SecurityRuleArgs{...} }
type SecurityRuleArrayInput interface {
	pulumi.Input

	ToSecurityRuleArrayOutput() SecurityRuleArrayOutput
	ToSecurityRuleArrayOutputWithContext(context.Context) SecurityRuleArrayOutput
}

type SecurityRuleArray []SecurityRuleInput

func (SecurityRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRule)(nil)).Elem()
}

func (i SecurityRuleArray) ToSecurityRuleArrayOutput() SecurityRuleArrayOutput {
	return i.ToSecurityRuleArrayOutputWithContext(context.Background())
}

func (i SecurityRuleArray) ToSecurityRuleArrayOutputWithContext(ctx context.Context) SecurityRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleArrayOutput)
}

// Network security rule.
type SecurityRuleOutput struct{ *pulumi.OutputState }

func (SecurityRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRule)(nil)).Elem()
}

func (o SecurityRuleOutput) ToSecurityRuleOutput() SecurityRuleOutput {
	return o
}

func (o SecurityRuleOutput) ToSecurityRuleOutputWithContext(ctx context.Context) SecurityRuleOutput {
	return o
}

// The network traffic is allowed or denied.
func (o SecurityRuleOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRule) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRuleOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRule) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o SecurityRuleOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRule) []string { return v.DestinationAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as destination.
func (o SecurityRuleOutput) DestinationApplicationSecurityGroups() ApplicationSecurityGroupArrayOutput {
	return o.ApplyT(func(v SecurityRule) []ApplicationSecurityGroup { return v.DestinationApplicationSecurityGroups }).(ApplicationSecurityGroupArrayOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRule) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o SecurityRuleOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRule) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
func (o SecurityRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRule) string { return v.Direction }).(pulumi.StringOutput)
}

// Resource ID.
func (o SecurityRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to.
func (o SecurityRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRuleOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRule) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP ranges.
func (o SecurityRuleOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRule) []string { return v.SourceAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as source.
func (o SecurityRuleOutput) SourceApplicationSecurityGroups() ApplicationSecurityGroupArrayOutput {
	return o.ApplyT(func(v SecurityRule) []ApplicationSecurityGroup { return v.SourceApplicationSecurityGroups }).(ApplicationSecurityGroupArrayOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRule) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

// The source port ranges.
func (o SecurityRuleOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRule) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The type of the resource.
func (o SecurityRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecurityRuleArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRule)(nil)).Elem()
}

func (o SecurityRuleArrayOutput) ToSecurityRuleArrayOutput() SecurityRuleArrayOutput {
	return o
}

func (o SecurityRuleArrayOutput) ToSecurityRuleArrayOutputWithContext(ctx context.Context) SecurityRuleArrayOutput {
	return o
}

func (o SecurityRuleArrayOutput) Index(i pulumi.IntInput) SecurityRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRule {
		return vs[0].([]SecurityRule)[vs[1].(int)]
	}).(SecurityRuleOutput)
}

// Network security rule.
type SecurityRuleResponse struct {
	// The network traffic is allowed or denied.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes []string `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction string `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the security rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes []string `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// Network security rule.
type SecurityRuleResponseOutput struct{ *pulumi.OutputState }

func (SecurityRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleResponse)(nil)).Elem()
}

func (o SecurityRuleResponseOutput) ToSecurityRuleResponseOutput() SecurityRuleResponseOutput {
	return o
}

func (o SecurityRuleResponseOutput) ToSecurityRuleResponseOutputWithContext(ctx context.Context) SecurityRuleResponseOutput {
	return o
}

// The network traffic is allowed or denied.
func (o SecurityRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRuleResponseOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o SecurityRuleResponseOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.DestinationAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as destination.
func (o SecurityRuleResponseOutput) DestinationApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []ApplicationSecurityGroupResponse {
		return v.DestinationApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleResponseOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o SecurityRuleResponseOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
func (o SecurityRuleResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SecurityRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o SecurityRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRuleResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to.
func (o SecurityRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the security rule resource.
func (o SecurityRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRuleResponseOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP ranges.
func (o SecurityRuleResponseOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.SourceAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as source.
func (o SecurityRuleResponseOutput) SourceApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []ApplicationSecurityGroupResponse {
		return v.SourceApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleResponseOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

// The source port ranges.
func (o SecurityRuleResponseOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The type of the resource.
func (o SecurityRuleResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecurityRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleResponse)(nil)).Elem()
}

func (o SecurityRuleResponseArrayOutput) ToSecurityRuleResponseArrayOutput() SecurityRuleResponseArrayOutput {
	return o
}

func (o SecurityRuleResponseArrayOutput) ToSecurityRuleResponseArrayOutputWithContext(ctx context.Context) SecurityRuleResponseArrayOutput {
	return o
}

func (o SecurityRuleResponseArrayOutput) Index(i pulumi.IntInput) SecurityRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRuleResponse {
		return vs[0].([]SecurityRuleResponse)[vs[1].(int)]
	}).(SecurityRuleResponseOutput)
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkResponse struct {
	// If true, the resource can be deleted.
	AllowDelete *bool `pulumi:"allowDelete"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Link to the external resource.
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the service association link resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkResponseOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLinkResponse)(nil)).Elem()
}

func (o ServiceAssociationLinkResponseOutput) ToServiceAssociationLinkResponseOutput() ServiceAssociationLinkResponseOutput {
	return o
}

func (o ServiceAssociationLinkResponseOutput) ToServiceAssociationLinkResponseOutputWithContext(ctx context.Context) ServiceAssociationLinkResponseOutput {
	return o
}

// If true, the resource can be deleted.
func (o ServiceAssociationLinkResponseOutput) AllowDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *bool { return v.AllowDelete }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceAssociationLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ServiceAssociationLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Link to the external resource.
func (o ServiceAssociationLinkResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ServiceAssociationLinkResponseOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// A list of locations.
func (o ServiceAssociationLinkResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceAssociationLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the service association link resource.
func (o ServiceAssociationLinkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o ServiceAssociationLinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceAssociationLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAssociationLinkResponse)(nil)).Elem()
}

func (o ServiceAssociationLinkResponseArrayOutput) ToServiceAssociationLinkResponseArrayOutput() ServiceAssociationLinkResponseArrayOutput {
	return o
}

func (o ServiceAssociationLinkResponseArrayOutput) ToServiceAssociationLinkResponseArrayOutputWithContext(ctx context.Context) ServiceAssociationLinkResponseArrayOutput {
	return o
}

func (o ServiceAssociationLinkResponseArrayOutput) Index(i pulumi.IntInput) ServiceAssociationLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAssociationLinkResponse {
		return vs[0].([]ServiceAssociationLinkResponse)[vs[1].(int)]
	}).(ServiceAssociationLinkResponseOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicy struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions []ServiceEndpointPolicyDefinition `pulumi:"serviceEndpointPolicyDefinitions"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// ServiceEndpointPolicyInput is an input type that accepts ServiceEndpointPolicyArgs and ServiceEndpointPolicyOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyInput` via:
//
//	ServiceEndpointPolicyArgs{...}
type ServiceEndpointPolicyInput interface {
	pulumi.Input

	ToServiceEndpointPolicyOutput() ServiceEndpointPolicyOutput
	ToServiceEndpointPolicyOutputWithContext(context.Context) ServiceEndpointPolicyOutput
}

// Service End point policy resource.
type ServiceEndpointPolicyArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions ServiceEndpointPolicyDefinitionArrayInput `pulumi:"serviceEndpointPolicyDefinitions"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ServiceEndpointPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicy)(nil)).Elem()
}

func (i ServiceEndpointPolicyArgs) ToServiceEndpointPolicyOutput() ServiceEndpointPolicyOutput {
	return i.ToServiceEndpointPolicyOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyArgs) ToServiceEndpointPolicyOutputWithContext(ctx context.Context) ServiceEndpointPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyOutput)
}

// ServiceEndpointPolicyArrayInput is an input type that accepts ServiceEndpointPolicyArray and ServiceEndpointPolicyArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyArrayInput` via:
//
//	ServiceEndpointPolicyArray{ ServiceEndpointPolicyArgs{...} }
type ServiceEndpointPolicyArrayInput interface {
	pulumi.Input

	ToServiceEndpointPolicyArrayOutput() ServiceEndpointPolicyArrayOutput
	ToServiceEndpointPolicyArrayOutputWithContext(context.Context) ServiceEndpointPolicyArrayOutput
}

type ServiceEndpointPolicyArray []ServiceEndpointPolicyInput

func (ServiceEndpointPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicy)(nil)).Elem()
}

func (i ServiceEndpointPolicyArray) ToServiceEndpointPolicyArrayOutput() ServiceEndpointPolicyArrayOutput {
	return i.ToServiceEndpointPolicyArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyArray) ToServiceEndpointPolicyArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyArrayOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicy)(nil)).Elem()
}

func (o ServiceEndpointPolicyOutput) ToServiceEndpointPolicyOutput() ServiceEndpointPolicyOutput {
	return o
}

func (o ServiceEndpointPolicyOutput) ToServiceEndpointPolicyOutputWithContext(ctx context.Context) ServiceEndpointPolicyOutput {
	return o
}

// Resource ID.
func (o ServiceEndpointPolicyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicy) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ServiceEndpointPolicyOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicy) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// A collection of service endpoint policy definitions of the service endpoint policy.
func (o ServiceEndpointPolicyOutput) ServiceEndpointPolicyDefinitions() ServiceEndpointPolicyDefinitionArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicy) []ServiceEndpointPolicyDefinition {
		return v.ServiceEndpointPolicyDefinitions
	}).(ServiceEndpointPolicyDefinitionArrayOutput)
}

// Resource tags.
func (o ServiceEndpointPolicyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceEndpointPolicy) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ServiceEndpointPolicyArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicy)(nil)).Elem()
}

func (o ServiceEndpointPolicyArrayOutput) ToServiceEndpointPolicyArrayOutput() ServiceEndpointPolicyArrayOutput {
	return o
}

func (o ServiceEndpointPolicyArrayOutput) ToServiceEndpointPolicyArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyArrayOutput {
	return o
}

func (o ServiceEndpointPolicyArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicy {
		return vs[0].([]ServiceEndpointPolicy)[vs[1].(int)]
	}).(ServiceEndpointPolicyOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinition struct {
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Service endpoint name.
	Service *string `pulumi:"service"`
	// A list of service resources.
	ServiceResources []string `pulumi:"serviceResources"`
}

// ServiceEndpointPolicyDefinitionInput is an input type that accepts ServiceEndpointPolicyDefinitionArgs and ServiceEndpointPolicyDefinitionOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionInput` via:
//
//	ServiceEndpointPolicyDefinitionArgs{...}
type ServiceEndpointPolicyDefinitionInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionOutput() ServiceEndpointPolicyDefinitionOutput
	ToServiceEndpointPolicyDefinitionOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionOutput
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionArgs struct {
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Service endpoint name.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// A list of service resources.
	ServiceResources pulumi.StringArrayInput `pulumi:"serviceResources"`
}

func (ServiceEndpointPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinition)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionArgs) ToServiceEndpointPolicyDefinitionOutput() ServiceEndpointPolicyDefinitionOutput {
	return i.ToServiceEndpointPolicyDefinitionOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionArgs) ToServiceEndpointPolicyDefinitionOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionOutput)
}

// ServiceEndpointPolicyDefinitionArrayInput is an input type that accepts ServiceEndpointPolicyDefinitionArray and ServiceEndpointPolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionArrayInput` via:
//
//	ServiceEndpointPolicyDefinitionArray{ ServiceEndpointPolicyDefinitionArgs{...} }
type ServiceEndpointPolicyDefinitionArrayInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionArrayOutput() ServiceEndpointPolicyDefinitionArrayOutput
	ToServiceEndpointPolicyDefinitionArrayOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionArrayOutput
}

type ServiceEndpointPolicyDefinitionArray []ServiceEndpointPolicyDefinitionInput

func (ServiceEndpointPolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinition)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionArray) ToServiceEndpointPolicyDefinitionArrayOutput() ServiceEndpointPolicyDefinitionArrayOutput {
	return i.ToServiceEndpointPolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionArray) ToServiceEndpointPolicyDefinitionArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionArrayOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinition)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionOutput) ToServiceEndpointPolicyDefinitionOutput() ServiceEndpointPolicyDefinitionOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionOutput) ToServiceEndpointPolicyDefinitionOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionOutput {
	return o
}

// A description for this rule. Restricted to 140 chars.
func (o ServiceEndpointPolicyDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceEndpointPolicyDefinitionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Service endpoint name.
func (o ServiceEndpointPolicyDefinitionOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinition) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// A list of service resources.
func (o ServiceEndpointPolicyDefinitionOutput) ServiceResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinition) []string { return v.ServiceResources }).(pulumi.StringArrayOutput)
}

type ServiceEndpointPolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinition)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionArrayOutput) ToServiceEndpointPolicyDefinitionArrayOutput() ServiceEndpointPolicyDefinitionArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionArrayOutput) ToServiceEndpointPolicyDefinitionArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyDefinition {
		return vs[0].([]ServiceEndpointPolicyDefinition)[vs[1].(int)]
	}).(ServiceEndpointPolicyDefinitionOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionResponse struct {
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the service endpoint policy definition resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Service endpoint name.
	Service *string `pulumi:"service"`
	// A list of service resources.
	ServiceResources []string `pulumi:"serviceResources"`
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionResponseOutput) ToServiceEndpointPolicyDefinitionResponseOutput() ServiceEndpointPolicyDefinitionResponseOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseOutput) ToServiceEndpointPolicyDefinitionResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionResponseOutput {
	return o
}

// A description for this rule. Restricted to 140 chars.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the service endpoint policy definition resource.
func (o ServiceEndpointPolicyDefinitionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Service endpoint name.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// A list of service resources.
func (o ServiceEndpointPolicyDefinitionResponseOutput) ServiceResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) []string { return v.ServiceResources }).(pulumi.StringArrayOutput)
}

type ServiceEndpointPolicyDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinitionResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) ToServiceEndpointPolicyDefinitionResponseArrayOutput() ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) ToServiceEndpointPolicyDefinitionResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyDefinitionResponse {
		return vs[0].([]ServiceEndpointPolicyDefinitionResponse)[vs[1].(int)]
	}).(ServiceEndpointPolicyDefinitionResponseOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Kind of service endpoint policy. This is metadata used for the Azure portal experience.
	Kind string `pulumi:"kind"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the service endpoint policy resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the service endpoint policy resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions []ServiceEndpointPolicyDefinitionResponse `pulumi:"serviceEndpointPolicyDefinitions"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Service End point policy resource.
type ServiceEndpointPolicyResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyResponseOutput) ToServiceEndpointPolicyResponseOutput() ServiceEndpointPolicyResponseOutput {
	return o
}

func (o ServiceEndpointPolicyResponseOutput) ToServiceEndpointPolicyResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Kind of service endpoint policy. This is metadata used for the Azure portal experience.
func (o ServiceEndpointPolicyResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// Resource location.
func (o ServiceEndpointPolicyResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ServiceEndpointPolicyResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the service endpoint policy resource.
func (o ServiceEndpointPolicyResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the service endpoint policy resource.
func (o ServiceEndpointPolicyResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// A collection of service endpoint policy definitions of the service endpoint policy.
func (o ServiceEndpointPolicyResponseOutput) ServiceEndpointPolicyDefinitions() ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) []ServiceEndpointPolicyDefinitionResponse {
		return v.ServiceEndpointPolicyDefinitions
	}).(ServiceEndpointPolicyDefinitionResponseArrayOutput)
}

// A collection of references to subnets.
func (o ServiceEndpointPolicyResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o ServiceEndpointPolicyResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ServiceEndpointPolicyResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceEndpointPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyResponseArrayOutput) ToServiceEndpointPolicyResponseArrayOutput() ServiceEndpointPolicyResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyResponseArrayOutput) ToServiceEndpointPolicyResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyResponse {
		return vs[0].([]ServiceEndpointPolicyResponse)[vs[1].(int)]
	}).(ServiceEndpointPolicyResponseOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormat struct {
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// The type of the endpoint service.
	Service *string `pulumi:"service"`
}

// ServiceEndpointPropertiesFormatInput is an input type that accepts ServiceEndpointPropertiesFormatArgs and ServiceEndpointPropertiesFormatOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatInput` via:
//
//	ServiceEndpointPropertiesFormatArgs{...}
type ServiceEndpointPropertiesFormatInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput
	ToServiceEndpointPropertiesFormatOutputWithContext(context.Context) ServiceEndpointPropertiesFormatOutput
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatArgs struct {
	// A list of locations.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// The type of the endpoint service.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (ServiceEndpointPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatArgs) ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput {
	return i.ToServiceEndpointPropertiesFormatOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatArgs) ToServiceEndpointPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatOutput)
}

// ServiceEndpointPropertiesFormatArrayInput is an input type that accepts ServiceEndpointPropertiesFormatArray and ServiceEndpointPropertiesFormatArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatArrayInput` via:
//
//	ServiceEndpointPropertiesFormatArray{ ServiceEndpointPropertiesFormatArgs{...} }
type ServiceEndpointPropertiesFormatArrayInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput
	ToServiceEndpointPropertiesFormatArrayOutputWithContext(context.Context) ServiceEndpointPropertiesFormatArrayOutput
}

type ServiceEndpointPropertiesFormatArray []ServiceEndpointPropertiesFormatInput

func (ServiceEndpointPropertiesFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatArray) ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput {
	return i.ToServiceEndpointPropertiesFormatArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatArray) ToServiceEndpointPropertiesFormatArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatArrayOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatOutput) ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatOutput) ToServiceEndpointPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatOutput {
	return o
}

// A list of locations.
func (o ServiceEndpointPropertiesFormatOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The type of the endpoint service.
func (o ServiceEndpointPropertiesFormatOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPropertiesFormatArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatArrayOutput) ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatArrayOutput) ToServiceEndpointPropertiesFormatArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPropertiesFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPropertiesFormat {
		return vs[0].([]ServiceEndpointPropertiesFormat)[vs[1].(int)]
	}).(ServiceEndpointPropertiesFormatOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponse struct {
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// The provisioning state of the service endpoint resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service *string `pulumi:"service"`
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatResponseOutput) ToServiceEndpointPropertiesFormatResponseOutput() ServiceEndpointPropertiesFormatResponseOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseOutput) ToServiceEndpointPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseOutput {
	return o
}

// A list of locations.
func (o ServiceEndpointPropertiesFormatResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The provisioning state of the service endpoint resource.
func (o ServiceEndpointPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the endpoint service.
func (o ServiceEndpointPropertiesFormatResponseOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPropertiesFormatResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) ToServiceEndpointPropertiesFormatResponseArrayOutput() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) ToServiceEndpointPropertiesFormatResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPropertiesFormatResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPropertiesFormatResponse {
		return vs[0].([]ServiceEndpointPropertiesFormatResponse)[vs[1].(int)]
	}).(ServiceEndpointPropertiesFormatResponseOutput)
}

// Reference to another subresource.
type SubResource struct {
	// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
	// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
	// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
	// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
	Id *string `pulumi:"id"`
}

// SubResourceInput is an input type that accepts SubResourceArgs and SubResourceOutput values.
// You can construct a concrete instance of `SubResourceInput` via:
//
//	SubResourceArgs{...}
type SubResourceInput interface {
	pulumi.Input

	ToSubResourceOutput() SubResourceOutput
	ToSubResourceOutputWithContext(context.Context) SubResourceOutput
}

// Reference to another subresource.
type SubResourceArgs struct {
	// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
	// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
	// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
	// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (i SubResourceArgs) ToSubResourceOutput() SubResourceOutput {
	return i.ToSubResourceOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput)
}

func (i SubResourceArgs) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput).ToSubResourcePtrOutputWithContext(ctx)
}

// SubResourcePtrInput is an input type that accepts SubResourceArgs, SubResourcePtr and SubResourcePtrOutput values.
// You can construct a concrete instance of `SubResourcePtrInput` via:
//
//	        SubResourceArgs{...}
//
//	or:
//
//	        nil
type SubResourcePtrInput interface {
	pulumi.Input

	ToSubResourcePtrOutput() SubResourcePtrOutput
	ToSubResourcePtrOutputWithContext(context.Context) SubResourcePtrOutput
}

type subResourcePtrType SubResourceArgs

func SubResourcePtr(v *SubResourceArgs) SubResourcePtrInput {
	return (*subResourcePtrType)(v)
}

func (*subResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (i *subResourcePtrType) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i *subResourcePtrType) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourcePtrOutput)
}

// SubResourceArrayInput is an input type that accepts SubResourceArray and SubResourceArrayOutput values.
// You can construct a concrete instance of `SubResourceArrayInput` via:
//
//	SubResourceArray{ SubResourceArgs{...} }
type SubResourceArrayInput interface {
	pulumi.Input

	ToSubResourceArrayOutput() SubResourceArrayOutput
	ToSubResourceArrayOutputWithContext(context.Context) SubResourceArrayOutput
}

type SubResourceArray []SubResourceInput

func (SubResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (i SubResourceArray) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return i.ToSubResourceArrayOutputWithContext(context.Background())
}

func (i SubResourceArray) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceArrayOutput)
}

// Reference to another subresource.
type SubResourceOutput struct{ *pulumi.OutputState }

func (SubResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (o SubResourceOutput) ToSubResourceOutput() SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o.ToSubResourcePtrOutputWithContext(context.Background())
}

func (o SubResourceOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubResource) *SubResource {
		return &v
	}).(SubResourcePtrOutput)
}

// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
func (o SubResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourcePtrOutput struct{ *pulumi.OutputState }

func (SubResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) Elem() SubResourceOutput {
	return o.ApplyT(func(v *SubResource) SubResource {
		if v != nil {
			return *v
		}
		var ret SubResource
		return ret
	}).(SubResourceOutput)
}

// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
func (o SubResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceArrayOutput struct{ *pulumi.OutputState }

func (SubResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) Index(i pulumi.IntInput) SubResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResource {
		return vs[0].([]SubResource)[vs[1].(int)]
	}).(SubResourceOutput)
}

// Reference to another subresource.
type SubResourceResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Reference to another subresource.
type SubResourceResponseOutput struct{ *pulumi.OutputState }

func (SubResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return o
}

// Resource ID.
func (o SubResourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourceResponsePtrOutput struct{ *pulumi.OutputState }

func (SubResourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) Elem() SubResourceResponseOutput {
	return o.ApplyT(func(v *SubResourceResponse) SubResourceResponse {
		if v != nil {
			return *v
		}
		var ret SubResourceResponse
		return ret
	}).(SubResourceResponseOutput)
}

// Resource ID.
func (o SubResourceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SubResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutputWithContext(ctx context.Context) SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) Index(i pulumi.IntInput) SubResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResourceResponse {
		return vs[0].([]SubResourceResponse)[vs[1].(int)]
	}).(SubResourceResponseOutput)
}

// Subnet in a virtual network resource.
type Subnet struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// Application gateway IP configurations of virtual network resource.
	ApplicationGatewayIpConfigurations []ApplicationGatewayIPConfiguration `pulumi:"applicationGatewayIpConfigurations"`
	// An array of references to the delegations on the subnet.
	Delegations []Delegation `pulumi:"delegations"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Array of IpAllocation which reference this subnet.
	IpAllocations []SubResource `pulumi:"ipAllocations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Nat gateway associated with this subnet.
	NatGateway *SubResource `pulumi:"natGateway"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroup `pulumi:"networkSecurityGroup"`
	// Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies *string `pulumi:"privateEndpointNetworkPolicies"`
	// Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies *string `pulumi:"privateLinkServiceNetworkPolicies"`
	// The reference to the RouteTable resource.
	RouteTable *RouteTable `pulumi:"routeTable"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies []ServiceEndpointPolicy `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormat `pulumi:"serviceEndpoints"`
	// Resource type.
	Type *string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for Subnet
func (val *Subnet) Defaults() *Subnet {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrivateEndpointNetworkPolicies == nil {
		privateEndpointNetworkPolicies_ := "Enabled"
		tmp.PrivateEndpointNetworkPolicies = &privateEndpointNetworkPolicies_
	}
	if tmp.PrivateLinkServiceNetworkPolicies == nil {
		privateLinkServiceNetworkPolicies_ := "Enabled"
		tmp.PrivateLinkServiceNetworkPolicies = &privateLinkServiceNetworkPolicies_
	}
	return &tmp
}

// SubnetInput is an input type that accepts SubnetArgs and SubnetOutput values.
// You can construct a concrete instance of `SubnetInput` via:
//
//	SubnetArgs{...}
type SubnetInput interface {
	pulumi.Input

	ToSubnetOutput() SubnetOutput
	ToSubnetOutputWithContext(context.Context) SubnetOutput
}

// Subnet in a virtual network resource.
type SubnetArgs struct {
	// The address prefix for the subnet.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// Application gateway IP configurations of virtual network resource.
	ApplicationGatewayIpConfigurations ApplicationGatewayIPConfigurationArrayInput `pulumi:"applicationGatewayIpConfigurations"`
	// An array of references to the delegations on the subnet.
	Delegations DelegationArrayInput `pulumi:"delegations"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Array of IpAllocation which reference this subnet.
	IpAllocations SubResourceArrayInput `pulumi:"ipAllocations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Nat gateway associated with this subnet.
	NatGateway SubResourcePtrInput `pulumi:"natGateway"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupPtrInput `pulumi:"networkSecurityGroup"`
	// Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies pulumi.StringPtrInput `pulumi:"privateEndpointNetworkPolicies"`
	// Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies pulumi.StringPtrInput `pulumi:"privateLinkServiceNetworkPolicies"`
	// The reference to the RouteTable resource.
	RouteTable RouteTablePtrInput `pulumi:"routeTable"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies ServiceEndpointPolicyArrayInput `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints ServiceEndpointPropertiesFormatArrayInput `pulumi:"serviceEndpoints"`
	// Resource type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

// Defaults sets the appropriate defaults for SubnetArgs
func (val *SubnetArgs) Defaults() *SubnetArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrivateEndpointNetworkPolicies == nil {
		tmp.PrivateEndpointNetworkPolicies = pulumi.StringPtr("Enabled")
	}
	if tmp.PrivateLinkServiceNetworkPolicies == nil {
		tmp.PrivateLinkServiceNetworkPolicies = pulumi.StringPtr("Enabled")
	}
	return &tmp
}
func (SubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Subnet)(nil)).Elem()
}

func (i SubnetArgs) ToSubnetOutput() SubnetOutput {
	return i.ToSubnetOutputWithContext(context.Background())
}

func (i SubnetArgs) ToSubnetOutputWithContext(ctx context.Context) SubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetOutput)
}

func (i SubnetArgs) ToSubnetPtrOutput() SubnetPtrOutput {
	return i.ToSubnetPtrOutputWithContext(context.Background())
}

func (i SubnetArgs) ToSubnetPtrOutputWithContext(ctx context.Context) SubnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetOutput).ToSubnetPtrOutputWithContext(ctx)
}

// SubnetPtrInput is an input type that accepts SubnetArgs, SubnetPtr and SubnetPtrOutput values.
// You can construct a concrete instance of `SubnetPtrInput` via:
//
//	        SubnetArgs{...}
//
//	or:
//
//	        nil
type SubnetPtrInput interface {
	pulumi.Input

	ToSubnetPtrOutput() SubnetPtrOutput
	ToSubnetPtrOutputWithContext(context.Context) SubnetPtrOutput
}

type subnetPtrType SubnetArgs

func SubnetPtr(v *SubnetArgs) SubnetPtrInput {
	return (*subnetPtrType)(v)
}

func (*subnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Subnet)(nil)).Elem()
}

func (i *subnetPtrType) ToSubnetPtrOutput() SubnetPtrOutput {
	return i.ToSubnetPtrOutputWithContext(context.Background())
}

func (i *subnetPtrType) ToSubnetPtrOutputWithContext(ctx context.Context) SubnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetPtrOutput)
}

// Subnet in a virtual network resource.
type SubnetOutput struct{ *pulumi.OutputState }

func (SubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Subnet)(nil)).Elem()
}

func (o SubnetOutput) ToSubnetOutput() SubnetOutput {
	return o
}

func (o SubnetOutput) ToSubnetOutputWithContext(ctx context.Context) SubnetOutput {
	return o
}

func (o SubnetOutput) ToSubnetPtrOutput() SubnetPtrOutput {
	return o.ToSubnetPtrOutputWithContext(context.Background())
}

func (o SubnetOutput) ToSubnetPtrOutputWithContext(ctx context.Context) SubnetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Subnet) *Subnet {
		return &v
	}).(SubnetPtrOutput)
}

// The address prefix for the subnet.
func (o SubnetOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Subnet) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// Application gateway IP configurations of virtual network resource.
func (o SubnetOutput) ApplicationGatewayIpConfigurations() ApplicationGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v Subnet) []ApplicationGatewayIPConfiguration { return v.ApplicationGatewayIpConfigurations }).(ApplicationGatewayIPConfigurationArrayOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetOutput) Delegations() DelegationArrayOutput {
	return o.ApplyT(func(v Subnet) []Delegation { return v.Delegations }).(DelegationArrayOutput)
}

// Resource ID.
func (o SubnetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetOutput) IpAllocations() SubResourceArrayOutput {
	return o.ApplyT(func(v Subnet) []SubResource { return v.IpAllocations }).(SubResourceArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetOutput) NatGateway() SubResourcePtrOutput {
	return o.ApplyT(func(v Subnet) *SubResource { return v.NatGateway }).(SubResourcePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetOutput) NetworkSecurityGroup() NetworkSecurityGroupPtrOutput {
	return o.ApplyT(func(v Subnet) *NetworkSecurityGroup { return v.NetworkSecurityGroup }).(NetworkSecurityGroupPtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.PrivateEndpointNetworkPolicies }).(pulumi.StringPtrOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.PrivateLinkServiceNetworkPolicies }).(pulumi.StringPtrOutput)
}

// The reference to the RouteTable resource.
func (o SubnetOutput) RouteTable() RouteTablePtrOutput {
	return o.ApplyT(func(v Subnet) *RouteTable { return v.RouteTable }).(RouteTablePtrOutput)
}

// An array of service endpoint policies.
func (o SubnetOutput) ServiceEndpointPolicies() ServiceEndpointPolicyArrayOutput {
	return o.ApplyT(func(v Subnet) []ServiceEndpointPolicy { return v.ServiceEndpointPolicies }).(ServiceEndpointPolicyArrayOutput)
}

// An array of service endpoints.
func (o SubnetOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatArrayOutput {
	return o.ApplyT(func(v Subnet) []ServiceEndpointPropertiesFormat { return v.ServiceEndpoints }).(ServiceEndpointPropertiesFormatArrayOutput)
}

// Resource type.
func (o SubnetOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SubnetPtrOutput struct{ *pulumi.OutputState }

func (SubnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Subnet)(nil)).Elem()
}

func (o SubnetPtrOutput) ToSubnetPtrOutput() SubnetPtrOutput {
	return o
}

func (o SubnetPtrOutput) ToSubnetPtrOutputWithContext(ctx context.Context) SubnetPtrOutput {
	return o
}

func (o SubnetPtrOutput) Elem() SubnetOutput {
	return o.ApplyT(func(v *Subnet) Subnet {
		if v != nil {
			return *v
		}
		var ret Subnet
		return ret
	}).(SubnetOutput)
}

// The address prefix for the subnet.
func (o SubnetPtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Subnet) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetPtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Subnet) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// Application gateway IP configurations of virtual network resource.
func (o SubnetPtrOutput) ApplicationGatewayIpConfigurations() ApplicationGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v *Subnet) []ApplicationGatewayIPConfiguration {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayIpConfigurations
	}).(ApplicationGatewayIPConfigurationArrayOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetPtrOutput) Delegations() DelegationArrayOutput {
	return o.ApplyT(func(v *Subnet) []Delegation {
		if v == nil {
			return nil
		}
		return v.Delegations
	}).(DelegationArrayOutput)
}

// Resource ID.
func (o SubnetPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Subnet) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetPtrOutput) IpAllocations() SubResourceArrayOutput {
	return o.ApplyT(func(v *Subnet) []SubResource {
		if v == nil {
			return nil
		}
		return v.IpAllocations
	}).(SubResourceArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Subnet) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetPtrOutput) NatGateway() SubResourcePtrOutput {
	return o.ApplyT(func(v *Subnet) *SubResource {
		if v == nil {
			return nil
		}
		return v.NatGateway
	}).(SubResourcePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetPtrOutput) NetworkSecurityGroup() NetworkSecurityGroupPtrOutput {
	return o.ApplyT(func(v *Subnet) *NetworkSecurityGroup {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupPtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetPtrOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Subnet) *string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetPtrOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Subnet) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// The reference to the RouteTable resource.
func (o SubnetPtrOutput) RouteTable() RouteTablePtrOutput {
	return o.ApplyT(func(v *Subnet) *RouteTable {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(RouteTablePtrOutput)
}

// An array of service endpoint policies.
func (o SubnetPtrOutput) ServiceEndpointPolicies() ServiceEndpointPolicyArrayOutput {
	return o.ApplyT(func(v *Subnet) []ServiceEndpointPolicy {
		if v == nil {
			return nil
		}
		return v.ServiceEndpointPolicies
	}).(ServiceEndpointPolicyArrayOutput)
}

// An array of service endpoints.
func (o SubnetPtrOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatArrayOutput {
	return o.ApplyT(func(v *Subnet) []ServiceEndpointPropertiesFormat {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(ServiceEndpointPropertiesFormatArrayOutput)
}

// Resource type.
func (o SubnetPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Subnet) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Subnet in a virtual network resource.
type SubnetResponse struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// Application gateway IP configurations of virtual network resource.
	ApplicationGatewayIpConfigurations []ApplicationGatewayIPConfigurationResponse `pulumi:"applicationGatewayIpConfigurations"`
	// An array of references to the delegations on the subnet.
	Delegations []DelegationResponse `pulumi:"delegations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Array of IpAllocation which reference this subnet.
	IpAllocations []SubResourceResponse `pulumi:"ipAllocations"`
	// Array of IP configuration profiles which reference this subnet.
	IpConfigurationProfiles []IPConfigurationProfileResponse `pulumi:"ipConfigurationProfiles"`
	// An array of references to the network interface IP configurations using subnet.
	IpConfigurations []IPConfigurationResponse `pulumi:"ipConfigurations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Nat gateway associated with this subnet.
	NatGateway *SubResourceResponse `pulumi:"natGateway"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupResponse `pulumi:"networkSecurityGroup"`
	// Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies *string `pulumi:"privateEndpointNetworkPolicies"`
	// An array of references to private endpoints.
	PrivateEndpoints []PrivateEndpointResponse `pulumi:"privateEndpoints"`
	// Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies *string `pulumi:"privateLinkServiceNetworkPolicies"`
	// The provisioning state of the subnet resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
	Purpose string `pulumi:"purpose"`
	// An array of references to the external resources using subnet.
	ResourceNavigationLinks []ResourceNavigationLinkResponse `pulumi:"resourceNavigationLinks"`
	// The reference to the RouteTable resource.
	RouteTable *RouteTableResponse `pulumi:"routeTable"`
	// An array of references to services injecting into this subnet.
	ServiceAssociationLinks []ServiceAssociationLinkResponse `pulumi:"serviceAssociationLinks"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies []ServiceEndpointPolicyResponse `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormatResponse `pulumi:"serviceEndpoints"`
	// Resource type.
	Type *string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for SubnetResponse
func (val *SubnetResponse) Defaults() *SubnetResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PrivateEndpointNetworkPolicies == nil {
		privateEndpointNetworkPolicies_ := "Enabled"
		tmp.PrivateEndpointNetworkPolicies = &privateEndpointNetworkPolicies_
	}
	if tmp.PrivateLinkServiceNetworkPolicies == nil {
		privateLinkServiceNetworkPolicies_ := "Enabled"
		tmp.PrivateLinkServiceNetworkPolicies = &privateLinkServiceNetworkPolicies_
	}
	return &tmp
}

// Subnet in a virtual network resource.
type SubnetResponseOutput struct{ *pulumi.OutputState }

func (SubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseOutput) ToSubnetResponseOutput() SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return o
}

// The address prefix for the subnet.
func (o SubnetResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// Application gateway IP configurations of virtual network resource.
func (o SubnetResponseOutput) ApplicationGatewayIpConfigurations() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ApplicationGatewayIPConfigurationResponse {
		return v.ApplicationGatewayIpConfigurations
	}).(ApplicationGatewayIPConfigurationResponseArrayOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetResponseOutput) Delegations() DelegationResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []DelegationResponse { return v.Delegations }).(DelegationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o SubnetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetResponseOutput) IpAllocations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []SubResourceResponse { return v.IpAllocations }).(SubResourceResponseArrayOutput)
}

// Array of IP configuration profiles which reference this subnet.
func (o SubnetResponseOutput) IpConfigurationProfiles() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []IPConfigurationProfileResponse { return v.IpConfigurationProfiles }).(IPConfigurationProfileResponseArrayOutput)
}

// An array of references to the network interface IP configurations using subnet.
func (o SubnetResponseOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []IPConfigurationResponse { return v.IpConfigurations }).(IPConfigurationResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetResponseOutput) NatGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *SubResourceResponse { return v.NatGateway }).(SubResourceResponsePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *NetworkSecurityGroupResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupResponsePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetResponseOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.PrivateEndpointNetworkPolicies }).(pulumi.StringPtrOutput)
}

// An array of references to private endpoints.
func (o SubnetResponseOutput) PrivateEndpoints() PrivateEndpointResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []PrivateEndpointResponse { return v.PrivateEndpoints }).(PrivateEndpointResponseArrayOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetResponseOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.PrivateLinkServiceNetworkPolicies }).(pulumi.StringPtrOutput)
}

// The provisioning state of the subnet resource.
func (o SubnetResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
func (o SubnetResponseOutput) Purpose() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetResponse) string { return v.Purpose }).(pulumi.StringOutput)
}

// An array of references to the external resources using subnet.
func (o SubnetResponseOutput) ResourceNavigationLinks() ResourceNavigationLinkResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ResourceNavigationLinkResponse { return v.ResourceNavigationLinks }).(ResourceNavigationLinkResponseArrayOutput)
}

// The reference to the RouteTable resource.
func (o SubnetResponseOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *RouteTableResponse { return v.RouteTable }).(RouteTableResponsePtrOutput)
}

// An array of references to services injecting into this subnet.
func (o SubnetResponseOutput) ServiceAssociationLinks() ServiceAssociationLinkResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ServiceAssociationLinkResponse { return v.ServiceAssociationLinks }).(ServiceAssociationLinkResponseArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetResponseOutput) ServiceEndpointPolicies() ServiceEndpointPolicyResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ServiceEndpointPolicyResponse { return v.ServiceEndpointPolicies }).(ServiceEndpointPolicyResponseArrayOutput)
}

// An array of service endpoints.
func (o SubnetResponseOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ServiceEndpointPropertiesFormatResponse { return v.ServiceEndpoints }).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

// Resource type.
func (o SubnetResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SubnetResponsePtrOutput struct{ *pulumi.OutputState }

func (SubnetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetResponse)(nil)).Elem()
}

func (o SubnetResponsePtrOutput) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return o
}

func (o SubnetResponsePtrOutput) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return o
}

func (o SubnetResponsePtrOutput) Elem() SubnetResponseOutput {
	return o.ApplyT(func(v *SubnetResponse) SubnetResponse {
		if v != nil {
			return *v
		}
		var ret SubnetResponse
		return ret
	}).(SubnetResponseOutput)
}

// The address prefix for the subnet.
func (o SubnetResponsePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetResponsePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// Application gateway IP configurations of virtual network resource.
func (o SubnetResponsePtrOutput) ApplicationGatewayIpConfigurations() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ApplicationGatewayIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayIpConfigurations
	}).(ApplicationGatewayIPConfigurationResponseArrayOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetResponsePtrOutput) Delegations() DelegationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []DelegationResponse {
		if v == nil {
			return nil
		}
		return v.Delegations
	}).(DelegationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetResponsePtrOutput) IpAllocations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.IpAllocations
	}).(SubResourceResponseArrayOutput)
}

// Array of IP configuration profiles which reference this subnet.
func (o SubnetResponsePtrOutput) IpConfigurationProfiles() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []IPConfigurationProfileResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurationProfiles
	}).(IPConfigurationProfileResponseArrayOutput)
}

// An array of references to the network interface IP configurations using subnet.
func (o SubnetResponsePtrOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []IPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(IPConfigurationResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetResponsePtrOutput) NatGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.NatGateway
	}).(SubResourceResponsePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetResponsePtrOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *NetworkSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupResponsePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetResponsePtrOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// An array of references to private endpoints.
func (o SubnetResponsePtrOutput) PrivateEndpoints() PrivateEndpointResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []PrivateEndpointResponse {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoints
	}).(PrivateEndpointResponseArrayOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetResponsePtrOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the subnet resource.
func (o SubnetResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
func (o SubnetResponsePtrOutput) Purpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Purpose
	}).(pulumi.StringPtrOutput)
}

// An array of references to the external resources using subnet.
func (o SubnetResponsePtrOutput) ResourceNavigationLinks() ResourceNavigationLinkResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ResourceNavigationLinkResponse {
		if v == nil {
			return nil
		}
		return v.ResourceNavigationLinks
	}).(ResourceNavigationLinkResponseArrayOutput)
}

// The reference to the RouteTable resource.
func (o SubnetResponsePtrOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *RouteTableResponse {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(RouteTableResponsePtrOutput)
}

// An array of references to services injecting into this subnet.
func (o SubnetResponsePtrOutput) ServiceAssociationLinks() ServiceAssociationLinkResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ServiceAssociationLinkResponse {
		if v == nil {
			return nil
		}
		return v.ServiceAssociationLinks
	}).(ServiceAssociationLinkResponseArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetResponsePtrOutput) ServiceEndpointPolicies() ServiceEndpointPolicyResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ServiceEndpointPolicyResponse {
		if v == nil {
			return nil
		}
		return v.ServiceEndpointPolicies
	}).(ServiceEndpointPolicyResponseArrayOutput)
}

// An array of service endpoints.
func (o SubnetResponsePtrOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ServiceEndpointPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

// Resource type.
func (o SubnetResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type SubnetResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) Index(i pulumi.IntInput) SubnetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetResponse {
		return vs[0].([]SubnetResponse)[vs[1].(int)]
	}).(SubnetResponseOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesResponse struct {
	// Flag to enable/disable traffic analytics.
	Enabled *bool `pulumi:"enabled"`
	// The interval in minutes which would decide how frequently TA service should do flow analytics.
	TrafficAnalyticsInterval *int `pulumi:"trafficAnalyticsInterval"`
	// The resource guid of the attached workspace.
	WorkspaceId *string `pulumi:"workspaceId"`
	// The location of the attached workspace.
	WorkspaceRegion *string `pulumi:"workspaceRegion"`
	// Resource Id of the attached workspace.
	WorkspaceResourceId *string `pulumi:"workspaceResourceId"`
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsConfigurationPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) ToTrafficAnalyticsConfigurationPropertiesResponseOutput() TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) ToTrafficAnalyticsConfigurationPropertiesResponseOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return o
}

// Flag to enable/disable traffic analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The interval in minutes which would decide how frequently TA service should do flow analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) TrafficAnalyticsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *int { return v.TrafficAnalyticsInterval }).(pulumi.IntPtrOutput)
}

// The resource guid of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *string { return v.WorkspaceRegion }).(pulumi.StringPtrOutput)
}

// Resource Id of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *string { return v.WorkspaceResourceId }).(pulumi.StringPtrOutput)
}

type TrafficAnalyticsConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsConfigurationPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutput() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) Elem() TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) TrafficAnalyticsConfigurationPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret TrafficAnalyticsConfigurationPropertiesResponse
		return ret
	}).(TrafficAnalyticsConfigurationPropertiesResponseOutput)
}

// Flag to enable/disable traffic analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The interval in minutes which would decide how frequently TA service should do flow analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) TrafficAnalyticsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.TrafficAnalyticsInterval
	}).(pulumi.IntPtrOutput)
}

// The resource guid of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceId
	}).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceRegion
	}).(pulumi.StringPtrOutput)
}

// Resource Id of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesResponse struct {
	// Parameters that define the configuration of traffic analytics.
	NetworkWatcherFlowAnalyticsConfiguration *TrafficAnalyticsConfigurationPropertiesResponse `pulumi:"networkWatcherFlowAnalyticsConfiguration"`
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsPropertiesResponseOutput) ToTrafficAnalyticsPropertiesResponseOutput() TrafficAnalyticsPropertiesResponseOutput {
	return o
}

func (o TrafficAnalyticsPropertiesResponseOutput) ToTrafficAnalyticsPropertiesResponseOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesResponseOutput {
	return o
}

// Parameters that define the configuration of traffic analytics.
func (o TrafficAnalyticsPropertiesResponseOutput) NetworkWatcherFlowAnalyticsConfiguration() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsPropertiesResponse) *TrafficAnalyticsConfigurationPropertiesResponse {
		return v.NetworkWatcherFlowAnalyticsConfiguration
	}).(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput)
}

type TrafficAnalyticsPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsPropertiesResponsePtrOutput) ToTrafficAnalyticsPropertiesResponsePtrOutput() TrafficAnalyticsPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsPropertiesResponsePtrOutput) ToTrafficAnalyticsPropertiesResponsePtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsPropertiesResponsePtrOutput) Elem() TrafficAnalyticsPropertiesResponseOutput {
	return o.ApplyT(func(v *TrafficAnalyticsPropertiesResponse) TrafficAnalyticsPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret TrafficAnalyticsPropertiesResponse
		return ret
	}).(TrafficAnalyticsPropertiesResponseOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o TrafficAnalyticsPropertiesResponsePtrOutput) NetworkWatcherFlowAnalyticsConfiguration() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsPropertiesResponse) *TrafficAnalyticsConfigurationPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.NetworkWatcherFlowAnalyticsConfiguration
	}).(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput)
}

// Virtual Network Tap resource.
type VirtualNetworkTapResponse struct {
	// The reference to the private IP address on the internal Load Balancer that will receive the tap.
	DestinationLoadBalancerFrontEndIPConfiguration *FrontendIPConfigurationResponse `pulumi:"destinationLoadBalancerFrontEndIPConfiguration"`
	// The reference to the private IP Address of the collector nic that will receive the tap.
	DestinationNetworkInterfaceIPConfiguration *NetworkInterfaceIPConfigurationResponse `pulumi:"destinationNetworkInterfaceIPConfiguration"`
	// The VXLAN destination port that will receive the tapped traffic.
	DestinationPort *int `pulumi:"destinationPort"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
	NetworkInterfaceTapConfigurations []NetworkInterfaceTapConfigurationResponse `pulumi:"networkInterfaceTapConfigurations"`
	// The provisioning state of the virtual network tap resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the virtual network tap resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for VirtualNetworkTapResponse
func (val *VirtualNetworkTapResponse) Defaults() *VirtualNetworkTapResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.DestinationLoadBalancerFrontEndIPConfiguration = tmp.DestinationLoadBalancerFrontEndIPConfiguration.Defaults()

	tmp.DestinationNetworkInterfaceIPConfiguration = tmp.DestinationNetworkInterfaceIPConfiguration.Defaults()

	return &tmp
}

// Virtual Network Tap resource.
type VirtualNetworkTapResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponseOutput) ToVirtualNetworkTapResponseOutput() VirtualNetworkTapResponseOutput {
	return o
}

func (o VirtualNetworkTapResponseOutput) ToVirtualNetworkTapResponseOutputWithContext(ctx context.Context) VirtualNetworkTapResponseOutput {
	return o
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap.
func (o VirtualNetworkTapResponseOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *FrontendIPConfigurationResponse {
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationResponsePtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap.
func (o VirtualNetworkTapResponseOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *NetworkInterfaceIPConfigurationResponse {
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapResponseOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *int { return v.DestinationPort }).(pulumi.IntPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkTapResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualNetworkTapResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkTapResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
func (o VirtualNetworkTapResponseOutput) NetworkInterfaceTapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) []NetworkInterfaceTapConfigurationResponse {
		return v.NetworkInterfaceTapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// The provisioning state of the virtual network tap resource.
func (o VirtualNetworkTapResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the virtual network tap resource.
func (o VirtualNetworkTapResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource tags.
func (o VirtualNetworkTapResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkTapResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VirtualNetworkTapResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponsePtrOutput) ToVirtualNetworkTapResponsePtrOutput() VirtualNetworkTapResponsePtrOutput {
	return o
}

func (o VirtualNetworkTapResponsePtrOutput) ToVirtualNetworkTapResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkTapResponsePtrOutput {
	return o
}

func (o VirtualNetworkTapResponsePtrOutput) Elem() VirtualNetworkTapResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) VirtualNetworkTapResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkTapResponse
		return ret
	}).(VirtualNetworkTapResponseOutput)
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap.
func (o VirtualNetworkTapResponsePtrOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *FrontendIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationResponsePtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap.
func (o VirtualNetworkTapResponsePtrOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *NetworkInterfaceIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapResponsePtrOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *int {
		if v == nil {
			return nil
		}
		return v.DestinationPort
	}).(pulumi.IntPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkTapResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkTapResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkTapResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
func (o VirtualNetworkTapResponsePtrOutput) NetworkInterfaceTapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) []NetworkInterfaceTapConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaceTapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// The provisioning state of the virtual network tap resource.
func (o VirtualNetworkTapResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the virtual network tap resource.
func (o VirtualNetworkTapResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o VirtualNetworkTapResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkTapResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type VirtualNetworkTapResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponseArrayOutput) ToVirtualNetworkTapResponseArrayOutput() VirtualNetworkTapResponseArrayOutput {
	return o
}

func (o VirtualNetworkTapResponseArrayOutput) ToVirtualNetworkTapResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkTapResponseArrayOutput {
	return o
}

func (o VirtualNetworkTapResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkTapResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkTapResponse {
		return vs[0].([]VirtualNetworkTapResponse)[vs[1].(int)]
	}).(VirtualNetworkTapResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupResponseOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolResponseOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(CustomDnsConfigPropertiesFormatOutput{})
	pulumi.RegisterOutputType(CustomDnsConfigPropertiesFormatArrayOutput{})
	pulumi.RegisterOutputType(CustomDnsConfigPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(CustomDnsConfigPropertiesFormatResponseArrayOutput{})
	pulumi.RegisterOutputType(DdosSettingsOutput{})
	pulumi.RegisterOutputType(DdosSettingsPtrOutput{})
	pulumi.RegisterOutputType(DdosSettingsResponseOutput{})
	pulumi.RegisterOutputType(DdosSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DelegationOutput{})
	pulumi.RegisterOutputType(DelegationArrayOutput{})
	pulumi.RegisterOutputType(DelegationResponseOutput{})
	pulumi.RegisterOutputType(DelegationResponseArrayOutput{})
	pulumi.RegisterOutputType(ExtendedLocationOutput{})
	pulumi.RegisterOutputType(ExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponseOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(FlowLogFormatParametersResponseOutput{})
	pulumi.RegisterOutputType(FlowLogFormatParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(FlowLogResponseOutput{})
	pulumi.RegisterOutputType(FlowLogResponseArrayOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(GatewayLoadBalancerTunnelInterfaceResponseOutput{})
	pulumi.RegisterOutputType(GatewayLoadBalancerTunnelInterfaceResponseArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfileResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(InboundNatRuleResponseOutput{})
	pulumi.RegisterOutputType(InboundNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(IpTagOutput{})
	pulumi.RegisterOutputType(IpTagArrayOutput{})
	pulumi.RegisterOutputType(IpTagResponseOutput{})
	pulumi.RegisterOutputType(IpTagResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(NatGatewayOutput{})
	pulumi.RegisterOutputType(NatGatewayPtrOutput{})
	pulumi.RegisterOutputType(NatGatewayResponseOutput{})
	pulumi.RegisterOutputType(NatGatewayResponsePtrOutput{})
	pulumi.RegisterOutputType(NatGatewaySkuOutput{})
	pulumi.RegisterOutputType(NatGatewaySkuPtrOutput{})
	pulumi.RegisterOutputType(NatGatewaySkuResponseOutput{})
	pulumi.RegisterOutputType(NatGatewaySkuResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupPtrOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResponseOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateDnsZoneConfigOutput{})
	pulumi.RegisterOutputType(PrivateDnsZoneConfigArrayOutput{})
	pulumi.RegisterOutputType(PrivateDnsZoneConfigResponseOutput{})
	pulumi.RegisterOutputType(PrivateDnsZoneConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceIpConfigurationOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceIpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceIpConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesAutoApprovalOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesAutoApprovalPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesResponseAutoApprovalOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesResponseVisibilityOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesResponseVisibilityPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesVisibilityOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesVisibilityPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressOutput{})
	pulumi.RegisterOutputType(PublicIPAddressPtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsPtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuPtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(RecordSetResponseOutput{})
	pulumi.RegisterOutputType(RecordSetResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkResponseOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(RetentionPolicyParametersResponseOutput{})
	pulumi.RegisterOutputType(RetentionPolicyParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteOutput{})
	pulumi.RegisterOutputType(RouteArrayOutput{})
	pulumi.RegisterOutputType(RouteResponseOutput{})
	pulumi.RegisterOutputType(RouteResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteTableOutput{})
	pulumi.RegisterOutputType(RouteTablePtrOutput{})
	pulumi.RegisterOutputType(RouteTableResponseOutput{})
	pulumi.RegisterOutputType(RouteTableResponsePtrOutput{})
	pulumi.RegisterOutputType(SecurityRuleOutput{})
	pulumi.RegisterOutputType(SecurityRuleArrayOutput{})
	pulumi.RegisterOutputType(SecurityRuleResponseOutput{})
	pulumi.RegisterOutputType(SecurityRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkResponseOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatResponseArrayOutput{})
	pulumi.RegisterOutputType(SubResourceOutput{})
	pulumi.RegisterOutputType(SubResourcePtrOutput{})
	pulumi.RegisterOutputType(SubResourceArrayOutput{})
	pulumi.RegisterOutputType(SubResourceResponseOutput{})
	pulumi.RegisterOutputType(SubResourceResponsePtrOutput{})
	pulumi.RegisterOutputType(SubResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetOutput{})
	pulumi.RegisterOutputType(SubnetPtrOutput{})
	pulumi.RegisterOutputType(SubnetResponseOutput{})
	pulumi.RegisterOutputType(SubnetResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetResponseArrayOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponseArrayOutput{})
}
