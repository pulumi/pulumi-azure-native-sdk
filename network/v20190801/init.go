// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190801

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure-native:network/v20190801:ApplicationGateway":
		r = &ApplicationGateway{}
	case "azure-native:network/v20190801:ExpressRouteCircuitPeering":
		r = &ExpressRouteCircuitPeering{}
	case "azure-native:network/v20190801:ExpressRouteCrossConnectionPeering":
		r = &ExpressRouteCrossConnectionPeering{}
	case "azure-native:network/v20190801:ExpressRoutePort":
		r = &ExpressRoutePort{}
	case "azure-native:network/v20190801:LoadBalancer":
		r = &LoadBalancer{}
	case "azure-native:network/v20190801:LocalNetworkGateway":
		r = &LocalNetworkGateway{}
	case "azure-native:network/v20190801:NatGateway":
		r = &NatGateway{}
	case "azure-native:network/v20190801:NetworkInterface":
		r = &NetworkInterface{}
	case "azure-native:network/v20190801:NetworkProfile":
		r = &NetworkProfile{}
	case "azure-native:network/v20190801:NetworkSecurityGroup":
		r = &NetworkSecurityGroup{}
	case "azure-native:network/v20190801:PrivateLinkService":
		r = &PrivateLinkService{}
	case "azure-native:network/v20190801:PublicIPAddress":
		r = &PublicIPAddress{}
	case "azure-native:network/v20190801:PublicIPPrefix":
		r = &PublicIPPrefix{}
	case "azure-native:network/v20190801:RouteFilter":
		r = &RouteFilter{}
	case "azure-native:network/v20190801:Subnet":
		r = &Subnet{}
	case "azure-native:network/v20190801:VirtualNetwork":
		r = &VirtualNetwork{}
	case "azure-native:network/v20190801:VirtualNetworkGateway":
		r = &VirtualNetworkGateway{}
	case "azure-native:network/v20190801:VirtualNetworkGatewayConnection":
		r = &VirtualNetworkGatewayConnection{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := utilities.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"azure-native",
		"network/v20190801",
		&module{version},
	)
}
