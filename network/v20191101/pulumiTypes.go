// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20191101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Defines the endpoint properties
type ExperimentEndpoint struct {
	// The endpoint URL
	Endpoint *string `pulumi:"endpoint"`
	// The name of the endpoint
	Name *string `pulumi:"name"`
}

// ExperimentEndpointInput is an input type that accepts ExperimentEndpointArgs and ExperimentEndpointOutput values.
// You can construct a concrete instance of `ExperimentEndpointInput` via:
//
//	ExperimentEndpointArgs{...}
type ExperimentEndpointInput interface {
	pulumi.Input

	ToExperimentEndpointOutput() ExperimentEndpointOutput
	ToExperimentEndpointOutputWithContext(context.Context) ExperimentEndpointOutput
}

// Defines the endpoint properties
type ExperimentEndpointArgs struct {
	// The endpoint URL
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The name of the endpoint
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExperimentEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentEndpoint)(nil)).Elem()
}

func (i ExperimentEndpointArgs) ToExperimentEndpointOutput() ExperimentEndpointOutput {
	return i.ToExperimentEndpointOutputWithContext(context.Background())
}

func (i ExperimentEndpointArgs) ToExperimentEndpointOutputWithContext(ctx context.Context) ExperimentEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentEndpointOutput)
}

func (i ExperimentEndpointArgs) ToExperimentEndpointPtrOutput() ExperimentEndpointPtrOutput {
	return i.ToExperimentEndpointPtrOutputWithContext(context.Background())
}

func (i ExperimentEndpointArgs) ToExperimentEndpointPtrOutputWithContext(ctx context.Context) ExperimentEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentEndpointOutput).ToExperimentEndpointPtrOutputWithContext(ctx)
}

// ExperimentEndpointPtrInput is an input type that accepts ExperimentEndpointArgs, ExperimentEndpointPtr and ExperimentEndpointPtrOutput values.
// You can construct a concrete instance of `ExperimentEndpointPtrInput` via:
//
//	        ExperimentEndpointArgs{...}
//
//	or:
//
//	        nil
type ExperimentEndpointPtrInput interface {
	pulumi.Input

	ToExperimentEndpointPtrOutput() ExperimentEndpointPtrOutput
	ToExperimentEndpointPtrOutputWithContext(context.Context) ExperimentEndpointPtrOutput
}

type experimentEndpointPtrType ExperimentEndpointArgs

func ExperimentEndpointPtr(v *ExperimentEndpointArgs) ExperimentEndpointPtrInput {
	return (*experimentEndpointPtrType)(v)
}

func (*experimentEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentEndpoint)(nil)).Elem()
}

func (i *experimentEndpointPtrType) ToExperimentEndpointPtrOutput() ExperimentEndpointPtrOutput {
	return i.ToExperimentEndpointPtrOutputWithContext(context.Background())
}

func (i *experimentEndpointPtrType) ToExperimentEndpointPtrOutputWithContext(ctx context.Context) ExperimentEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentEndpointPtrOutput)
}

// Defines the endpoint properties
type ExperimentEndpointOutput struct{ *pulumi.OutputState }

func (ExperimentEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentEndpoint)(nil)).Elem()
}

func (o ExperimentEndpointOutput) ToExperimentEndpointOutput() ExperimentEndpointOutput {
	return o
}

func (o ExperimentEndpointOutput) ToExperimentEndpointOutputWithContext(ctx context.Context) ExperimentEndpointOutput {
	return o
}

func (o ExperimentEndpointOutput) ToExperimentEndpointPtrOutput() ExperimentEndpointPtrOutput {
	return o.ToExperimentEndpointPtrOutputWithContext(context.Background())
}

func (o ExperimentEndpointOutput) ToExperimentEndpointPtrOutputWithContext(ctx context.Context) ExperimentEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExperimentEndpoint) *ExperimentEndpoint {
		return &v
	}).(ExperimentEndpointPtrOutput)
}

// The endpoint URL
func (o ExperimentEndpointOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExperimentEndpoint) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The name of the endpoint
func (o ExperimentEndpointOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExperimentEndpoint) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExperimentEndpointPtrOutput struct{ *pulumi.OutputState }

func (ExperimentEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentEndpoint)(nil)).Elem()
}

func (o ExperimentEndpointPtrOutput) ToExperimentEndpointPtrOutput() ExperimentEndpointPtrOutput {
	return o
}

func (o ExperimentEndpointPtrOutput) ToExperimentEndpointPtrOutputWithContext(ctx context.Context) ExperimentEndpointPtrOutput {
	return o
}

func (o ExperimentEndpointPtrOutput) Elem() ExperimentEndpointOutput {
	return o.ApplyT(func(v *ExperimentEndpoint) ExperimentEndpoint {
		if v != nil {
			return *v
		}
		var ret ExperimentEndpoint
		return ret
	}).(ExperimentEndpointOutput)
}

// The endpoint URL
func (o ExperimentEndpointPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExperimentEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The name of the endpoint
func (o ExperimentEndpointPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExperimentEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Defines the endpoint properties
type ExperimentEndpointResponse struct {
	// The endpoint URL
	Endpoint *string `pulumi:"endpoint"`
	// The name of the endpoint
	Name *string `pulumi:"name"`
}

// Defines the endpoint properties
type ExperimentEndpointResponseOutput struct{ *pulumi.OutputState }

func (ExperimentEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentEndpointResponse)(nil)).Elem()
}

func (o ExperimentEndpointResponseOutput) ToExperimentEndpointResponseOutput() ExperimentEndpointResponseOutput {
	return o
}

func (o ExperimentEndpointResponseOutput) ToExperimentEndpointResponseOutputWithContext(ctx context.Context) ExperimentEndpointResponseOutput {
	return o
}

// The endpoint URL
func (o ExperimentEndpointResponseOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExperimentEndpointResponse) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The name of the endpoint
func (o ExperimentEndpointResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExperimentEndpointResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExperimentEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (ExperimentEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentEndpointResponse)(nil)).Elem()
}

func (o ExperimentEndpointResponsePtrOutput) ToExperimentEndpointResponsePtrOutput() ExperimentEndpointResponsePtrOutput {
	return o
}

func (o ExperimentEndpointResponsePtrOutput) ToExperimentEndpointResponsePtrOutputWithContext(ctx context.Context) ExperimentEndpointResponsePtrOutput {
	return o
}

func (o ExperimentEndpointResponsePtrOutput) Elem() ExperimentEndpointResponseOutput {
	return o.ApplyT(func(v *ExperimentEndpointResponse) ExperimentEndpointResponse {
		if v != nil {
			return *v
		}
		var ret ExperimentEndpointResponse
		return ret
	}).(ExperimentEndpointResponseOutput)
}

// The endpoint URL
func (o ExperimentEndpointResponsePtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExperimentEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The name of the endpoint
func (o ExperimentEndpointResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExperimentEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ExperimentEndpointOutput{})
	pulumi.RegisterOutputType(ExperimentEndpointPtrOutput{})
	pulumi.RegisterOutputType(ExperimentEndpointResponseOutput{})
	pulumi.RegisterOutputType(ExperimentEndpointResponsePtrOutput{})
}
