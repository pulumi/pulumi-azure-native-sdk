// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Address prefix type.
type AddressPrefixType string

const (
	AddressPrefixTypeIPPrefix   = AddressPrefixType("IPPrefix")
	AddressPrefixTypeServiceTag = AddressPrefixType("ServiceTag")
)

func (AddressPrefixType) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressPrefixType)(nil)).Elem()
}

func (e AddressPrefixType) ToAddressPrefixTypeOutput() AddressPrefixTypeOutput {
	return pulumi.ToOutput(e).(AddressPrefixTypeOutput)
}

func (e AddressPrefixType) ToAddressPrefixTypeOutputWithContext(ctx context.Context) AddressPrefixTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AddressPrefixTypeOutput)
}

func (e AddressPrefixType) ToAddressPrefixTypePtrOutput() AddressPrefixTypePtrOutput {
	return e.ToAddressPrefixTypePtrOutputWithContext(context.Background())
}

func (e AddressPrefixType) ToAddressPrefixTypePtrOutputWithContext(ctx context.Context) AddressPrefixTypePtrOutput {
	return AddressPrefixType(e).ToAddressPrefixTypeOutputWithContext(ctx).ToAddressPrefixTypePtrOutputWithContext(ctx)
}

func (e AddressPrefixType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressPrefixType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressPrefixType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AddressPrefixType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AddressPrefixTypeOutput struct{ *pulumi.OutputState }

func (AddressPrefixTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressPrefixType)(nil)).Elem()
}

func (o AddressPrefixTypeOutput) ToAddressPrefixTypeOutput() AddressPrefixTypeOutput {
	return o
}

func (o AddressPrefixTypeOutput) ToAddressPrefixTypeOutputWithContext(ctx context.Context) AddressPrefixTypeOutput {
	return o
}

func (o AddressPrefixTypeOutput) ToAddressPrefixTypePtrOutput() AddressPrefixTypePtrOutput {
	return o.ToAddressPrefixTypePtrOutputWithContext(context.Background())
}

func (o AddressPrefixTypeOutput) ToAddressPrefixTypePtrOutputWithContext(ctx context.Context) AddressPrefixTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddressPrefixType) *AddressPrefixType {
		return &v
	}).(AddressPrefixTypePtrOutput)
}

func (o AddressPrefixTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AddressPrefixTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressPrefixType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AddressPrefixTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressPrefixTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressPrefixType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AddressPrefixTypePtrOutput struct{ *pulumi.OutputState }

func (AddressPrefixTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressPrefixType)(nil)).Elem()
}

func (o AddressPrefixTypePtrOutput) ToAddressPrefixTypePtrOutput() AddressPrefixTypePtrOutput {
	return o
}

func (o AddressPrefixTypePtrOutput) ToAddressPrefixTypePtrOutputWithContext(ctx context.Context) AddressPrefixTypePtrOutput {
	return o
}

func (o AddressPrefixTypePtrOutput) Elem() AddressPrefixTypeOutput {
	return o.ApplyT(func(v *AddressPrefixType) AddressPrefixType {
		if v != nil {
			return *v
		}
		var ret AddressPrefixType
		return ret
	}).(AddressPrefixTypeOutput)
}

func (o AddressPrefixTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressPrefixTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AddressPrefixType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AddressPrefixTypeInput is an input type that accepts values of the AddressPrefixType enum
// A concrete instance of `AddressPrefixTypeInput` can be one of the following:
//
//	AddressPrefixTypeIPPrefix
//	AddressPrefixTypeServiceTag
type AddressPrefixTypeInput interface {
	pulumi.Input

	ToAddressPrefixTypeOutput() AddressPrefixTypeOutput
	ToAddressPrefixTypeOutputWithContext(context.Context) AddressPrefixTypeOutput
}

var addressPrefixTypePtrType = reflect.TypeOf((**AddressPrefixType)(nil)).Elem()

type AddressPrefixTypePtrInput interface {
	pulumi.Input

	ToAddressPrefixTypePtrOutput() AddressPrefixTypePtrOutput
	ToAddressPrefixTypePtrOutputWithContext(context.Context) AddressPrefixTypePtrOutput
}

type addressPrefixTypePtr string

func AddressPrefixTypePtr(v string) AddressPrefixTypePtrInput {
	return (*addressPrefixTypePtr)(&v)
}

func (*addressPrefixTypePtr) ElementType() reflect.Type {
	return addressPrefixTypePtrType
}

func (in *addressPrefixTypePtr) ToAddressPrefixTypePtrOutput() AddressPrefixTypePtrOutput {
	return pulumi.ToOutput(in).(AddressPrefixTypePtrOutput)
}

func (in *addressPrefixTypePtr) ToAddressPrefixTypePtrOutputWithContext(ctx context.Context) AddressPrefixTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AddressPrefixTypePtrOutput)
}

func (in *addressPrefixTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AddressPrefixType] {
	return pulumix.Output[*AddressPrefixType]{
		OutputState: in.ToAddressPrefixTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The allowed type DNS record types for this profile.
type AllowedEndpointRecordType string

const (
	AllowedEndpointRecordTypeDomainName  = AllowedEndpointRecordType("DomainName")
	AllowedEndpointRecordTypeIPv4Address = AllowedEndpointRecordType("IPv4Address")
	AllowedEndpointRecordTypeIPv6Address = AllowedEndpointRecordType("IPv6Address")
	AllowedEndpointRecordTypeAny         = AllowedEndpointRecordType("Any")
)

func (AllowedEndpointRecordType) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowedEndpointRecordType)(nil)).Elem()
}

func (e AllowedEndpointRecordType) ToAllowedEndpointRecordTypeOutput() AllowedEndpointRecordTypeOutput {
	return pulumi.ToOutput(e).(AllowedEndpointRecordTypeOutput)
}

func (e AllowedEndpointRecordType) ToAllowedEndpointRecordTypeOutputWithContext(ctx context.Context) AllowedEndpointRecordTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AllowedEndpointRecordTypeOutput)
}

func (e AllowedEndpointRecordType) ToAllowedEndpointRecordTypePtrOutput() AllowedEndpointRecordTypePtrOutput {
	return e.ToAllowedEndpointRecordTypePtrOutputWithContext(context.Background())
}

func (e AllowedEndpointRecordType) ToAllowedEndpointRecordTypePtrOutputWithContext(ctx context.Context) AllowedEndpointRecordTypePtrOutput {
	return AllowedEndpointRecordType(e).ToAllowedEndpointRecordTypeOutputWithContext(ctx).ToAllowedEndpointRecordTypePtrOutputWithContext(ctx)
}

func (e AllowedEndpointRecordType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AllowedEndpointRecordType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AllowedEndpointRecordType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AllowedEndpointRecordType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AllowedEndpointRecordTypeOutput struct{ *pulumi.OutputState }

func (AllowedEndpointRecordTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowedEndpointRecordType)(nil)).Elem()
}

func (o AllowedEndpointRecordTypeOutput) ToAllowedEndpointRecordTypeOutput() AllowedEndpointRecordTypeOutput {
	return o
}

func (o AllowedEndpointRecordTypeOutput) ToAllowedEndpointRecordTypeOutputWithContext(ctx context.Context) AllowedEndpointRecordTypeOutput {
	return o
}

func (o AllowedEndpointRecordTypeOutput) ToAllowedEndpointRecordTypePtrOutput() AllowedEndpointRecordTypePtrOutput {
	return o.ToAllowedEndpointRecordTypePtrOutputWithContext(context.Background())
}

func (o AllowedEndpointRecordTypeOutput) ToAllowedEndpointRecordTypePtrOutputWithContext(ctx context.Context) AllowedEndpointRecordTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AllowedEndpointRecordType) *AllowedEndpointRecordType {
		return &v
	}).(AllowedEndpointRecordTypePtrOutput)
}

func (o AllowedEndpointRecordTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AllowedEndpointRecordTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AllowedEndpointRecordType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AllowedEndpointRecordTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AllowedEndpointRecordTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AllowedEndpointRecordType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AllowedEndpointRecordTypePtrOutput struct{ *pulumi.OutputState }

func (AllowedEndpointRecordTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AllowedEndpointRecordType)(nil)).Elem()
}

func (o AllowedEndpointRecordTypePtrOutput) ToAllowedEndpointRecordTypePtrOutput() AllowedEndpointRecordTypePtrOutput {
	return o
}

func (o AllowedEndpointRecordTypePtrOutput) ToAllowedEndpointRecordTypePtrOutputWithContext(ctx context.Context) AllowedEndpointRecordTypePtrOutput {
	return o
}

func (o AllowedEndpointRecordTypePtrOutput) Elem() AllowedEndpointRecordTypeOutput {
	return o.ApplyT(func(v *AllowedEndpointRecordType) AllowedEndpointRecordType {
		if v != nil {
			return *v
		}
		var ret AllowedEndpointRecordType
		return ret
	}).(AllowedEndpointRecordTypeOutput)
}

func (o AllowedEndpointRecordTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AllowedEndpointRecordTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AllowedEndpointRecordType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AllowedEndpointRecordTypeInput is an input type that accepts values of the AllowedEndpointRecordType enum
// A concrete instance of `AllowedEndpointRecordTypeInput` can be one of the following:
//
//	AllowedEndpointRecordTypeDomainName
//	AllowedEndpointRecordTypeIPv4Address
//	AllowedEndpointRecordTypeIPv6Address
//	AllowedEndpointRecordTypeAny
type AllowedEndpointRecordTypeInput interface {
	pulumi.Input

	ToAllowedEndpointRecordTypeOutput() AllowedEndpointRecordTypeOutput
	ToAllowedEndpointRecordTypeOutputWithContext(context.Context) AllowedEndpointRecordTypeOutput
}

var allowedEndpointRecordTypePtrType = reflect.TypeOf((**AllowedEndpointRecordType)(nil)).Elem()

type AllowedEndpointRecordTypePtrInput interface {
	pulumi.Input

	ToAllowedEndpointRecordTypePtrOutput() AllowedEndpointRecordTypePtrOutput
	ToAllowedEndpointRecordTypePtrOutputWithContext(context.Context) AllowedEndpointRecordTypePtrOutput
}

type allowedEndpointRecordTypePtr string

func AllowedEndpointRecordTypePtr(v string) AllowedEndpointRecordTypePtrInput {
	return (*allowedEndpointRecordTypePtr)(&v)
}

func (*allowedEndpointRecordTypePtr) ElementType() reflect.Type {
	return allowedEndpointRecordTypePtrType
}

func (in *allowedEndpointRecordTypePtr) ToAllowedEndpointRecordTypePtrOutput() AllowedEndpointRecordTypePtrOutput {
	return pulumi.ToOutput(in).(AllowedEndpointRecordTypePtrOutput)
}

func (in *allowedEndpointRecordTypePtr) ToAllowedEndpointRecordTypePtrOutputWithContext(ctx context.Context) AllowedEndpointRecordTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AllowedEndpointRecordTypePtrOutput)
}

func (in *allowedEndpointRecordTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AllowedEndpointRecordType] {
	return pulumix.Output[*AllowedEndpointRecordType]{
		OutputState: in.ToAllowedEndpointRecordTypePtrOutputWithContext(ctx).OutputState,
	}
}

// If Always Serve is enabled, probing for endpoint health will be disabled and endpoints will be included in the traffic routing method.
type AlwaysServe string

const (
	AlwaysServeEnabled  = AlwaysServe("Enabled")
	AlwaysServeDisabled = AlwaysServe("Disabled")
)

func (AlwaysServe) ElementType() reflect.Type {
	return reflect.TypeOf((*AlwaysServe)(nil)).Elem()
}

func (e AlwaysServe) ToAlwaysServeOutput() AlwaysServeOutput {
	return pulumi.ToOutput(e).(AlwaysServeOutput)
}

func (e AlwaysServe) ToAlwaysServeOutputWithContext(ctx context.Context) AlwaysServeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AlwaysServeOutput)
}

func (e AlwaysServe) ToAlwaysServePtrOutput() AlwaysServePtrOutput {
	return e.ToAlwaysServePtrOutputWithContext(context.Background())
}

func (e AlwaysServe) ToAlwaysServePtrOutputWithContext(ctx context.Context) AlwaysServePtrOutput {
	return AlwaysServe(e).ToAlwaysServeOutputWithContext(ctx).ToAlwaysServePtrOutputWithContext(ctx)
}

func (e AlwaysServe) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AlwaysServe) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AlwaysServe) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AlwaysServe) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AlwaysServeOutput struct{ *pulumi.OutputState }

func (AlwaysServeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlwaysServe)(nil)).Elem()
}

func (o AlwaysServeOutput) ToAlwaysServeOutput() AlwaysServeOutput {
	return o
}

func (o AlwaysServeOutput) ToAlwaysServeOutputWithContext(ctx context.Context) AlwaysServeOutput {
	return o
}

func (o AlwaysServeOutput) ToAlwaysServePtrOutput() AlwaysServePtrOutput {
	return o.ToAlwaysServePtrOutputWithContext(context.Background())
}

func (o AlwaysServeOutput) ToAlwaysServePtrOutputWithContext(ctx context.Context) AlwaysServePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlwaysServe) *AlwaysServe {
		return &v
	}).(AlwaysServePtrOutput)
}

func (o AlwaysServeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AlwaysServeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AlwaysServe) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AlwaysServeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlwaysServeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AlwaysServe) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AlwaysServePtrOutput struct{ *pulumi.OutputState }

func (AlwaysServePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlwaysServe)(nil)).Elem()
}

func (o AlwaysServePtrOutput) ToAlwaysServePtrOutput() AlwaysServePtrOutput {
	return o
}

func (o AlwaysServePtrOutput) ToAlwaysServePtrOutputWithContext(ctx context.Context) AlwaysServePtrOutput {
	return o
}

func (o AlwaysServePtrOutput) Elem() AlwaysServeOutput {
	return o.ApplyT(func(v *AlwaysServe) AlwaysServe {
		if v != nil {
			return *v
		}
		var ret AlwaysServe
		return ret
	}).(AlwaysServeOutput)
}

func (o AlwaysServePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AlwaysServePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AlwaysServe) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AlwaysServeInput is an input type that accepts values of the AlwaysServe enum
// A concrete instance of `AlwaysServeInput` can be one of the following:
//
//	AlwaysServeEnabled
//	AlwaysServeDisabled
type AlwaysServeInput interface {
	pulumi.Input

	ToAlwaysServeOutput() AlwaysServeOutput
	ToAlwaysServeOutputWithContext(context.Context) AlwaysServeOutput
}

var alwaysServePtrType = reflect.TypeOf((**AlwaysServe)(nil)).Elem()

type AlwaysServePtrInput interface {
	pulumi.Input

	ToAlwaysServePtrOutput() AlwaysServePtrOutput
	ToAlwaysServePtrOutputWithContext(context.Context) AlwaysServePtrOutput
}

type alwaysServePtr string

func AlwaysServePtr(v string) AlwaysServePtrInput {
	return (*alwaysServePtr)(&v)
}

func (*alwaysServePtr) ElementType() reflect.Type {
	return alwaysServePtrType
}

func (in *alwaysServePtr) ToAlwaysServePtrOutput() AlwaysServePtrOutput {
	return pulumi.ToOutput(in).(AlwaysServePtrOutput)
}

func (in *alwaysServePtr) ToAlwaysServePtrOutputWithContext(ctx context.Context) AlwaysServePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AlwaysServePtrOutput)
}

func (in *alwaysServePtr) ToOutput(ctx context.Context) pulumix.Output[*AlwaysServe] {
	return pulumix.Output[*AlwaysServe]{
		OutputState: in.ToAlwaysServePtrOutputWithContext(ctx).OutputState,
	}
}

// Flag if need to delete existing network security groups.
type DeleteExistingNSGs string

const (
	DeleteExistingNSGsFalse = DeleteExistingNSGs("False")
	DeleteExistingNSGsTrue  = DeleteExistingNSGs("True")
)

func (DeleteExistingNSGs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeleteExistingNSGs)(nil)).Elem()
}

func (e DeleteExistingNSGs) ToDeleteExistingNSGsOutput() DeleteExistingNSGsOutput {
	return pulumi.ToOutput(e).(DeleteExistingNSGsOutput)
}

func (e DeleteExistingNSGs) ToDeleteExistingNSGsOutputWithContext(ctx context.Context) DeleteExistingNSGsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DeleteExistingNSGsOutput)
}

func (e DeleteExistingNSGs) ToDeleteExistingNSGsPtrOutput() DeleteExistingNSGsPtrOutput {
	return e.ToDeleteExistingNSGsPtrOutputWithContext(context.Background())
}

func (e DeleteExistingNSGs) ToDeleteExistingNSGsPtrOutputWithContext(ctx context.Context) DeleteExistingNSGsPtrOutput {
	return DeleteExistingNSGs(e).ToDeleteExistingNSGsOutputWithContext(ctx).ToDeleteExistingNSGsPtrOutputWithContext(ctx)
}

func (e DeleteExistingNSGs) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeleteExistingNSGs) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeleteExistingNSGs) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DeleteExistingNSGs) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DeleteExistingNSGsOutput struct{ *pulumi.OutputState }

func (DeleteExistingNSGsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeleteExistingNSGs)(nil)).Elem()
}

func (o DeleteExistingNSGsOutput) ToDeleteExistingNSGsOutput() DeleteExistingNSGsOutput {
	return o
}

func (o DeleteExistingNSGsOutput) ToDeleteExistingNSGsOutputWithContext(ctx context.Context) DeleteExistingNSGsOutput {
	return o
}

func (o DeleteExistingNSGsOutput) ToDeleteExistingNSGsPtrOutput() DeleteExistingNSGsPtrOutput {
	return o.ToDeleteExistingNSGsPtrOutputWithContext(context.Background())
}

func (o DeleteExistingNSGsOutput) ToDeleteExistingNSGsPtrOutputWithContext(ctx context.Context) DeleteExistingNSGsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeleteExistingNSGs) *DeleteExistingNSGs {
		return &v
	}).(DeleteExistingNSGsPtrOutput)
}

func (o DeleteExistingNSGsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DeleteExistingNSGsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DeleteExistingNSGs) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DeleteExistingNSGsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DeleteExistingNSGsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DeleteExistingNSGs) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DeleteExistingNSGsPtrOutput struct{ *pulumi.OutputState }

func (DeleteExistingNSGsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeleteExistingNSGs)(nil)).Elem()
}

func (o DeleteExistingNSGsPtrOutput) ToDeleteExistingNSGsPtrOutput() DeleteExistingNSGsPtrOutput {
	return o
}

func (o DeleteExistingNSGsPtrOutput) ToDeleteExistingNSGsPtrOutputWithContext(ctx context.Context) DeleteExistingNSGsPtrOutput {
	return o
}

func (o DeleteExistingNSGsPtrOutput) Elem() DeleteExistingNSGsOutput {
	return o.ApplyT(func(v *DeleteExistingNSGs) DeleteExistingNSGs {
		if v != nil {
			return *v
		}
		var ret DeleteExistingNSGs
		return ret
	}).(DeleteExistingNSGsOutput)
}

func (o DeleteExistingNSGsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DeleteExistingNSGsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DeleteExistingNSGs) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DeleteExistingNSGsInput is an input type that accepts values of the DeleteExistingNSGs enum
// A concrete instance of `DeleteExistingNSGsInput` can be one of the following:
//
//	DeleteExistingNSGsFalse
//	DeleteExistingNSGsTrue
type DeleteExistingNSGsInput interface {
	pulumi.Input

	ToDeleteExistingNSGsOutput() DeleteExistingNSGsOutput
	ToDeleteExistingNSGsOutputWithContext(context.Context) DeleteExistingNSGsOutput
}

var deleteExistingNSGsPtrType = reflect.TypeOf((**DeleteExistingNSGs)(nil)).Elem()

type DeleteExistingNSGsPtrInput interface {
	pulumi.Input

	ToDeleteExistingNSGsPtrOutput() DeleteExistingNSGsPtrOutput
	ToDeleteExistingNSGsPtrOutputWithContext(context.Context) DeleteExistingNSGsPtrOutput
}

type deleteExistingNSGsPtr string

func DeleteExistingNSGsPtr(v string) DeleteExistingNSGsPtrInput {
	return (*deleteExistingNSGsPtr)(&v)
}

func (*deleteExistingNSGsPtr) ElementType() reflect.Type {
	return deleteExistingNSGsPtrType
}

func (in *deleteExistingNSGsPtr) ToDeleteExistingNSGsPtrOutput() DeleteExistingNSGsPtrOutput {
	return pulumi.ToOutput(in).(DeleteExistingNSGsPtrOutput)
}

func (in *deleteExistingNSGsPtr) ToDeleteExistingNSGsPtrOutputWithContext(ctx context.Context) DeleteExistingNSGsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DeleteExistingNSGsPtrOutput)
}

func (in *deleteExistingNSGsPtr) ToOutput(ctx context.Context) pulumix.Output[*DeleteExistingNSGs] {
	return pulumix.Output[*DeleteExistingNSGs]{
		OutputState: in.ToDeleteExistingNSGsPtrOutputWithContext(ctx).OutputState,
	}
}

// The monitoring status of the endpoint.
type EndpointMonitorStatus string

const (
	EndpointMonitorStatusCheckingEndpoint = EndpointMonitorStatus("CheckingEndpoint")
	EndpointMonitorStatusOnline           = EndpointMonitorStatus("Online")
	EndpointMonitorStatusDegraded         = EndpointMonitorStatus("Degraded")
	EndpointMonitorStatusDisabled         = EndpointMonitorStatus("Disabled")
	EndpointMonitorStatusInactive         = EndpointMonitorStatus("Inactive")
	EndpointMonitorStatusStopped          = EndpointMonitorStatus("Stopped")
)

func (EndpointMonitorStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointMonitorStatus)(nil)).Elem()
}

func (e EndpointMonitorStatus) ToEndpointMonitorStatusOutput() EndpointMonitorStatusOutput {
	return pulumi.ToOutput(e).(EndpointMonitorStatusOutput)
}

func (e EndpointMonitorStatus) ToEndpointMonitorStatusOutputWithContext(ctx context.Context) EndpointMonitorStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EndpointMonitorStatusOutput)
}

func (e EndpointMonitorStatus) ToEndpointMonitorStatusPtrOutput() EndpointMonitorStatusPtrOutput {
	return e.ToEndpointMonitorStatusPtrOutputWithContext(context.Background())
}

func (e EndpointMonitorStatus) ToEndpointMonitorStatusPtrOutputWithContext(ctx context.Context) EndpointMonitorStatusPtrOutput {
	return EndpointMonitorStatus(e).ToEndpointMonitorStatusOutputWithContext(ctx).ToEndpointMonitorStatusPtrOutputWithContext(ctx)
}

func (e EndpointMonitorStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointMonitorStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointMonitorStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EndpointMonitorStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EndpointMonitorStatusOutput struct{ *pulumi.OutputState }

func (EndpointMonitorStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointMonitorStatus)(nil)).Elem()
}

func (o EndpointMonitorStatusOutput) ToEndpointMonitorStatusOutput() EndpointMonitorStatusOutput {
	return o
}

func (o EndpointMonitorStatusOutput) ToEndpointMonitorStatusOutputWithContext(ctx context.Context) EndpointMonitorStatusOutput {
	return o
}

func (o EndpointMonitorStatusOutput) ToEndpointMonitorStatusPtrOutput() EndpointMonitorStatusPtrOutput {
	return o.ToEndpointMonitorStatusPtrOutputWithContext(context.Background())
}

func (o EndpointMonitorStatusOutput) ToEndpointMonitorStatusPtrOutputWithContext(ctx context.Context) EndpointMonitorStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointMonitorStatus) *EndpointMonitorStatus {
		return &v
	}).(EndpointMonitorStatusPtrOutput)
}

func (o EndpointMonitorStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EndpointMonitorStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointMonitorStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EndpointMonitorStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointMonitorStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointMonitorStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EndpointMonitorStatusPtrOutput struct{ *pulumi.OutputState }

func (EndpointMonitorStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointMonitorStatus)(nil)).Elem()
}

func (o EndpointMonitorStatusPtrOutput) ToEndpointMonitorStatusPtrOutput() EndpointMonitorStatusPtrOutput {
	return o
}

func (o EndpointMonitorStatusPtrOutput) ToEndpointMonitorStatusPtrOutputWithContext(ctx context.Context) EndpointMonitorStatusPtrOutput {
	return o
}

func (o EndpointMonitorStatusPtrOutput) Elem() EndpointMonitorStatusOutput {
	return o.ApplyT(func(v *EndpointMonitorStatus) EndpointMonitorStatus {
		if v != nil {
			return *v
		}
		var ret EndpointMonitorStatus
		return ret
	}).(EndpointMonitorStatusOutput)
}

func (o EndpointMonitorStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointMonitorStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EndpointMonitorStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EndpointMonitorStatusInput is an input type that accepts values of the EndpointMonitorStatus enum
// A concrete instance of `EndpointMonitorStatusInput` can be one of the following:
//
//	EndpointMonitorStatusCheckingEndpoint
//	EndpointMonitorStatusOnline
//	EndpointMonitorStatusDegraded
//	EndpointMonitorStatusDisabled
//	EndpointMonitorStatusInactive
//	EndpointMonitorStatusStopped
type EndpointMonitorStatusInput interface {
	pulumi.Input

	ToEndpointMonitorStatusOutput() EndpointMonitorStatusOutput
	ToEndpointMonitorStatusOutputWithContext(context.Context) EndpointMonitorStatusOutput
}

var endpointMonitorStatusPtrType = reflect.TypeOf((**EndpointMonitorStatus)(nil)).Elem()

type EndpointMonitorStatusPtrInput interface {
	pulumi.Input

	ToEndpointMonitorStatusPtrOutput() EndpointMonitorStatusPtrOutput
	ToEndpointMonitorStatusPtrOutputWithContext(context.Context) EndpointMonitorStatusPtrOutput
}

type endpointMonitorStatusPtr string

func EndpointMonitorStatusPtr(v string) EndpointMonitorStatusPtrInput {
	return (*endpointMonitorStatusPtr)(&v)
}

func (*endpointMonitorStatusPtr) ElementType() reflect.Type {
	return endpointMonitorStatusPtrType
}

func (in *endpointMonitorStatusPtr) ToEndpointMonitorStatusPtrOutput() EndpointMonitorStatusPtrOutput {
	return pulumi.ToOutput(in).(EndpointMonitorStatusPtrOutput)
}

func (in *endpointMonitorStatusPtr) ToEndpointMonitorStatusPtrOutputWithContext(ctx context.Context) EndpointMonitorStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EndpointMonitorStatusPtrOutput)
}

func (in *endpointMonitorStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*EndpointMonitorStatus] {
	return pulumix.Output[*EndpointMonitorStatus]{
		OutputState: in.ToEndpointMonitorStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
type EndpointStatus string

const (
	EndpointStatusEnabled  = EndpointStatus("Enabled")
	EndpointStatusDisabled = EndpointStatus("Disabled")
)

func (EndpointStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointStatus)(nil)).Elem()
}

func (e EndpointStatus) ToEndpointStatusOutput() EndpointStatusOutput {
	return pulumi.ToOutput(e).(EndpointStatusOutput)
}

func (e EndpointStatus) ToEndpointStatusOutputWithContext(ctx context.Context) EndpointStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EndpointStatusOutput)
}

func (e EndpointStatus) ToEndpointStatusPtrOutput() EndpointStatusPtrOutput {
	return e.ToEndpointStatusPtrOutputWithContext(context.Background())
}

func (e EndpointStatus) ToEndpointStatusPtrOutputWithContext(ctx context.Context) EndpointStatusPtrOutput {
	return EndpointStatus(e).ToEndpointStatusOutputWithContext(ctx).ToEndpointStatusPtrOutputWithContext(ctx)
}

func (e EndpointStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EndpointStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EndpointStatusOutput struct{ *pulumi.OutputState }

func (EndpointStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointStatus)(nil)).Elem()
}

func (o EndpointStatusOutput) ToEndpointStatusOutput() EndpointStatusOutput {
	return o
}

func (o EndpointStatusOutput) ToEndpointStatusOutputWithContext(ctx context.Context) EndpointStatusOutput {
	return o
}

func (o EndpointStatusOutput) ToEndpointStatusPtrOutput() EndpointStatusPtrOutput {
	return o.ToEndpointStatusPtrOutputWithContext(context.Background())
}

func (o EndpointStatusOutput) ToEndpointStatusPtrOutputWithContext(ctx context.Context) EndpointStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointStatus) *EndpointStatus {
		return &v
	}).(EndpointStatusPtrOutput)
}

func (o EndpointStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EndpointStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EndpointStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EndpointStatusPtrOutput struct{ *pulumi.OutputState }

func (EndpointStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointStatus)(nil)).Elem()
}

func (o EndpointStatusPtrOutput) ToEndpointStatusPtrOutput() EndpointStatusPtrOutput {
	return o
}

func (o EndpointStatusPtrOutput) ToEndpointStatusPtrOutputWithContext(ctx context.Context) EndpointStatusPtrOutput {
	return o
}

func (o EndpointStatusPtrOutput) Elem() EndpointStatusOutput {
	return o.ApplyT(func(v *EndpointStatus) EndpointStatus {
		if v != nil {
			return *v
		}
		var ret EndpointStatus
		return ret
	}).(EndpointStatusOutput)
}

func (o EndpointStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EndpointStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EndpointStatusInput is an input type that accepts values of the EndpointStatus enum
// A concrete instance of `EndpointStatusInput` can be one of the following:
//
//	EndpointStatusEnabled
//	EndpointStatusDisabled
type EndpointStatusInput interface {
	pulumi.Input

	ToEndpointStatusOutput() EndpointStatusOutput
	ToEndpointStatusOutputWithContext(context.Context) EndpointStatusOutput
}

var endpointStatusPtrType = reflect.TypeOf((**EndpointStatus)(nil)).Elem()

type EndpointStatusPtrInput interface {
	pulumi.Input

	ToEndpointStatusPtrOutput() EndpointStatusPtrOutput
	ToEndpointStatusPtrOutputWithContext(context.Context) EndpointStatusPtrOutput
}

type endpointStatusPtr string

func EndpointStatusPtr(v string) EndpointStatusPtrInput {
	return (*endpointStatusPtr)(&v)
}

func (*endpointStatusPtr) ElementType() reflect.Type {
	return endpointStatusPtrType
}

func (in *endpointStatusPtr) ToEndpointStatusPtrOutput() EndpointStatusPtrOutput {
	return pulumi.ToOutput(in).(EndpointStatusPtrOutput)
}

func (in *endpointStatusPtr) ToEndpointStatusPtrOutputWithContext(ctx context.Context) EndpointStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EndpointStatusPtrOutput)
}

func (in *endpointStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*EndpointStatus] {
	return pulumix.Output[*EndpointStatus]{
		OutputState: in.ToEndpointStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
type MonitorProtocol string

const (
	MonitorProtocolHTTP  = MonitorProtocol("HTTP")
	MonitorProtocolHTTPS = MonitorProtocol("HTTPS")
	MonitorProtocolTCP   = MonitorProtocol("TCP")
)

func (MonitorProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorProtocol)(nil)).Elem()
}

func (e MonitorProtocol) ToMonitorProtocolOutput() MonitorProtocolOutput {
	return pulumi.ToOutput(e).(MonitorProtocolOutput)
}

func (e MonitorProtocol) ToMonitorProtocolOutputWithContext(ctx context.Context) MonitorProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MonitorProtocolOutput)
}

func (e MonitorProtocol) ToMonitorProtocolPtrOutput() MonitorProtocolPtrOutput {
	return e.ToMonitorProtocolPtrOutputWithContext(context.Background())
}

func (e MonitorProtocol) ToMonitorProtocolPtrOutputWithContext(ctx context.Context) MonitorProtocolPtrOutput {
	return MonitorProtocol(e).ToMonitorProtocolOutputWithContext(ctx).ToMonitorProtocolPtrOutputWithContext(ctx)
}

func (e MonitorProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MonitorProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MonitorProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MonitorProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MonitorProtocolOutput struct{ *pulumi.OutputState }

func (MonitorProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorProtocol)(nil)).Elem()
}

func (o MonitorProtocolOutput) ToMonitorProtocolOutput() MonitorProtocolOutput {
	return o
}

func (o MonitorProtocolOutput) ToMonitorProtocolOutputWithContext(ctx context.Context) MonitorProtocolOutput {
	return o
}

func (o MonitorProtocolOutput) ToMonitorProtocolPtrOutput() MonitorProtocolPtrOutput {
	return o.ToMonitorProtocolPtrOutputWithContext(context.Background())
}

func (o MonitorProtocolOutput) ToMonitorProtocolPtrOutputWithContext(ctx context.Context) MonitorProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorProtocol) *MonitorProtocol {
		return &v
	}).(MonitorProtocolPtrOutput)
}

func (o MonitorProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MonitorProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MonitorProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MonitorProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MonitorProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MonitorProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MonitorProtocolPtrOutput struct{ *pulumi.OutputState }

func (MonitorProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorProtocol)(nil)).Elem()
}

func (o MonitorProtocolPtrOutput) ToMonitorProtocolPtrOutput() MonitorProtocolPtrOutput {
	return o
}

func (o MonitorProtocolPtrOutput) ToMonitorProtocolPtrOutputWithContext(ctx context.Context) MonitorProtocolPtrOutput {
	return o
}

func (o MonitorProtocolPtrOutput) Elem() MonitorProtocolOutput {
	return o.ApplyT(func(v *MonitorProtocol) MonitorProtocol {
		if v != nil {
			return *v
		}
		var ret MonitorProtocol
		return ret
	}).(MonitorProtocolOutput)
}

func (o MonitorProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MonitorProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MonitorProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MonitorProtocolInput is an input type that accepts values of the MonitorProtocol enum
// A concrete instance of `MonitorProtocolInput` can be one of the following:
//
//	MonitorProtocolHTTP
//	MonitorProtocolHTTPS
//	MonitorProtocolTCP
type MonitorProtocolInput interface {
	pulumi.Input

	ToMonitorProtocolOutput() MonitorProtocolOutput
	ToMonitorProtocolOutputWithContext(context.Context) MonitorProtocolOutput
}

var monitorProtocolPtrType = reflect.TypeOf((**MonitorProtocol)(nil)).Elem()

type MonitorProtocolPtrInput interface {
	pulumi.Input

	ToMonitorProtocolPtrOutput() MonitorProtocolPtrOutput
	ToMonitorProtocolPtrOutputWithContext(context.Context) MonitorProtocolPtrOutput
}

type monitorProtocolPtr string

func MonitorProtocolPtr(v string) MonitorProtocolPtrInput {
	return (*monitorProtocolPtr)(&v)
}

func (*monitorProtocolPtr) ElementType() reflect.Type {
	return monitorProtocolPtrType
}

func (in *monitorProtocolPtr) ToMonitorProtocolPtrOutput() MonitorProtocolPtrOutput {
	return pulumi.ToOutput(in).(MonitorProtocolPtrOutput)
}

func (in *monitorProtocolPtr) ToMonitorProtocolPtrOutputWithContext(ctx context.Context) MonitorProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MonitorProtocolPtrOutput)
}

func (in *monitorProtocolPtr) ToOutput(ctx context.Context) pulumix.Output[*MonitorProtocol] {
	return pulumix.Output[*MonitorProtocol]{
		OutputState: in.ToMonitorProtocolPtrOutputWithContext(ctx).OutputState,
	}
}

// The profile-level monitoring status of the Traffic Manager profile.
type ProfileMonitorStatus string

const (
	ProfileMonitorStatusCheckingEndpoints = ProfileMonitorStatus("CheckingEndpoints")
	ProfileMonitorStatusOnline            = ProfileMonitorStatus("Online")
	ProfileMonitorStatusDegraded          = ProfileMonitorStatus("Degraded")
	ProfileMonitorStatusDisabled          = ProfileMonitorStatus("Disabled")
	ProfileMonitorStatusInactive          = ProfileMonitorStatus("Inactive")
)

func (ProfileMonitorStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileMonitorStatus)(nil)).Elem()
}

func (e ProfileMonitorStatus) ToProfileMonitorStatusOutput() ProfileMonitorStatusOutput {
	return pulumi.ToOutput(e).(ProfileMonitorStatusOutput)
}

func (e ProfileMonitorStatus) ToProfileMonitorStatusOutputWithContext(ctx context.Context) ProfileMonitorStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProfileMonitorStatusOutput)
}

func (e ProfileMonitorStatus) ToProfileMonitorStatusPtrOutput() ProfileMonitorStatusPtrOutput {
	return e.ToProfileMonitorStatusPtrOutputWithContext(context.Background())
}

func (e ProfileMonitorStatus) ToProfileMonitorStatusPtrOutputWithContext(ctx context.Context) ProfileMonitorStatusPtrOutput {
	return ProfileMonitorStatus(e).ToProfileMonitorStatusOutputWithContext(ctx).ToProfileMonitorStatusPtrOutputWithContext(ctx)
}

func (e ProfileMonitorStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProfileMonitorStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProfileMonitorStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProfileMonitorStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProfileMonitorStatusOutput struct{ *pulumi.OutputState }

func (ProfileMonitorStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileMonitorStatus)(nil)).Elem()
}

func (o ProfileMonitorStatusOutput) ToProfileMonitorStatusOutput() ProfileMonitorStatusOutput {
	return o
}

func (o ProfileMonitorStatusOutput) ToProfileMonitorStatusOutputWithContext(ctx context.Context) ProfileMonitorStatusOutput {
	return o
}

func (o ProfileMonitorStatusOutput) ToProfileMonitorStatusPtrOutput() ProfileMonitorStatusPtrOutput {
	return o.ToProfileMonitorStatusPtrOutputWithContext(context.Background())
}

func (o ProfileMonitorStatusOutput) ToProfileMonitorStatusPtrOutputWithContext(ctx context.Context) ProfileMonitorStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileMonitorStatus) *ProfileMonitorStatus {
		return &v
	}).(ProfileMonitorStatusPtrOutput)
}

func (o ProfileMonitorStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProfileMonitorStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProfileMonitorStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProfileMonitorStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProfileMonitorStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProfileMonitorStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProfileMonitorStatusPtrOutput struct{ *pulumi.OutputState }

func (ProfileMonitorStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileMonitorStatus)(nil)).Elem()
}

func (o ProfileMonitorStatusPtrOutput) ToProfileMonitorStatusPtrOutput() ProfileMonitorStatusPtrOutput {
	return o
}

func (o ProfileMonitorStatusPtrOutput) ToProfileMonitorStatusPtrOutputWithContext(ctx context.Context) ProfileMonitorStatusPtrOutput {
	return o
}

func (o ProfileMonitorStatusPtrOutput) Elem() ProfileMonitorStatusOutput {
	return o.ApplyT(func(v *ProfileMonitorStatus) ProfileMonitorStatus {
		if v != nil {
			return *v
		}
		var ret ProfileMonitorStatus
		return ret
	}).(ProfileMonitorStatusOutput)
}

func (o ProfileMonitorStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProfileMonitorStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProfileMonitorStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProfileMonitorStatusInput is an input type that accepts values of the ProfileMonitorStatus enum
// A concrete instance of `ProfileMonitorStatusInput` can be one of the following:
//
//	ProfileMonitorStatusCheckingEndpoints
//	ProfileMonitorStatusOnline
//	ProfileMonitorStatusDegraded
//	ProfileMonitorStatusDisabled
//	ProfileMonitorStatusInactive
type ProfileMonitorStatusInput interface {
	pulumi.Input

	ToProfileMonitorStatusOutput() ProfileMonitorStatusOutput
	ToProfileMonitorStatusOutputWithContext(context.Context) ProfileMonitorStatusOutput
}

var profileMonitorStatusPtrType = reflect.TypeOf((**ProfileMonitorStatus)(nil)).Elem()

type ProfileMonitorStatusPtrInput interface {
	pulumi.Input

	ToProfileMonitorStatusPtrOutput() ProfileMonitorStatusPtrOutput
	ToProfileMonitorStatusPtrOutputWithContext(context.Context) ProfileMonitorStatusPtrOutput
}

type profileMonitorStatusPtr string

func ProfileMonitorStatusPtr(v string) ProfileMonitorStatusPtrInput {
	return (*profileMonitorStatusPtr)(&v)
}

func (*profileMonitorStatusPtr) ElementType() reflect.Type {
	return profileMonitorStatusPtrType
}

func (in *profileMonitorStatusPtr) ToProfileMonitorStatusPtrOutput() ProfileMonitorStatusPtrOutput {
	return pulumi.ToOutput(in).(ProfileMonitorStatusPtrOutput)
}

func (in *profileMonitorStatusPtr) ToProfileMonitorStatusPtrOutputWithContext(ctx context.Context) ProfileMonitorStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProfileMonitorStatusPtrOutput)
}

func (in *profileMonitorStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*ProfileMonitorStatus] {
	return pulumix.Output[*ProfileMonitorStatus]{
		OutputState: in.ToProfileMonitorStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// The status of the Traffic Manager profile.
type ProfileStatus string

const (
	ProfileStatusEnabled  = ProfileStatus("Enabled")
	ProfileStatusDisabled = ProfileStatus("Disabled")
)

func (ProfileStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileStatus)(nil)).Elem()
}

func (e ProfileStatus) ToProfileStatusOutput() ProfileStatusOutput {
	return pulumi.ToOutput(e).(ProfileStatusOutput)
}

func (e ProfileStatus) ToProfileStatusOutputWithContext(ctx context.Context) ProfileStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProfileStatusOutput)
}

func (e ProfileStatus) ToProfileStatusPtrOutput() ProfileStatusPtrOutput {
	return e.ToProfileStatusPtrOutputWithContext(context.Background())
}

func (e ProfileStatus) ToProfileStatusPtrOutputWithContext(ctx context.Context) ProfileStatusPtrOutput {
	return ProfileStatus(e).ToProfileStatusOutputWithContext(ctx).ToProfileStatusPtrOutputWithContext(ctx)
}

func (e ProfileStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProfileStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProfileStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProfileStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProfileStatusOutput struct{ *pulumi.OutputState }

func (ProfileStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileStatus)(nil)).Elem()
}

func (o ProfileStatusOutput) ToProfileStatusOutput() ProfileStatusOutput {
	return o
}

func (o ProfileStatusOutput) ToProfileStatusOutputWithContext(ctx context.Context) ProfileStatusOutput {
	return o
}

func (o ProfileStatusOutput) ToProfileStatusPtrOutput() ProfileStatusPtrOutput {
	return o.ToProfileStatusPtrOutputWithContext(context.Background())
}

func (o ProfileStatusOutput) ToProfileStatusPtrOutputWithContext(ctx context.Context) ProfileStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileStatus) *ProfileStatus {
		return &v
	}).(ProfileStatusPtrOutput)
}

func (o ProfileStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProfileStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProfileStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProfileStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProfileStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProfileStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProfileStatusPtrOutput struct{ *pulumi.OutputState }

func (ProfileStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileStatus)(nil)).Elem()
}

func (o ProfileStatusPtrOutput) ToProfileStatusPtrOutput() ProfileStatusPtrOutput {
	return o
}

func (o ProfileStatusPtrOutput) ToProfileStatusPtrOutputWithContext(ctx context.Context) ProfileStatusPtrOutput {
	return o
}

func (o ProfileStatusPtrOutput) Elem() ProfileStatusOutput {
	return o.ApplyT(func(v *ProfileStatus) ProfileStatus {
		if v != nil {
			return *v
		}
		var ret ProfileStatus
		return ret
	}).(ProfileStatusOutput)
}

func (o ProfileStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProfileStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProfileStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProfileStatusInput is an input type that accepts values of the ProfileStatus enum
// A concrete instance of `ProfileStatusInput` can be one of the following:
//
//	ProfileStatusEnabled
//	ProfileStatusDisabled
type ProfileStatusInput interface {
	pulumi.Input

	ToProfileStatusOutput() ProfileStatusOutput
	ToProfileStatusOutputWithContext(context.Context) ProfileStatusOutput
}

var profileStatusPtrType = reflect.TypeOf((**ProfileStatus)(nil)).Elem()

type ProfileStatusPtrInput interface {
	pulumi.Input

	ToProfileStatusPtrOutput() ProfileStatusPtrOutput
	ToProfileStatusPtrOutputWithContext(context.Context) ProfileStatusPtrOutput
}

type profileStatusPtr string

func ProfileStatusPtr(v string) ProfileStatusPtrInput {
	return (*profileStatusPtr)(&v)
}

func (*profileStatusPtr) ElementType() reflect.Type {
	return profileStatusPtrType
}

func (in *profileStatusPtr) ToProfileStatusPtrOutput() ProfileStatusPtrOutput {
	return pulumi.ToOutput(in).(ProfileStatusPtrOutput)
}

func (in *profileStatusPtr) ToProfileStatusPtrOutputWithContext(ctx context.Context) ProfileStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProfileStatusPtrOutput)
}

func (in *profileStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*ProfileStatus] {
	return pulumix.Output[*ProfileStatus]{
		OutputState: in.ToProfileStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// Indicates if the traffic matched against the rule in inbound or outbound.
type SecurityConfigurationRuleDirection string

const (
	SecurityConfigurationRuleDirectionInbound  = SecurityConfigurationRuleDirection("Inbound")
	SecurityConfigurationRuleDirectionOutbound = SecurityConfigurationRuleDirection("Outbound")
)

func (SecurityConfigurationRuleDirection) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfigurationRuleDirection)(nil)).Elem()
}

func (e SecurityConfigurationRuleDirection) ToSecurityConfigurationRuleDirectionOutput() SecurityConfigurationRuleDirectionOutput {
	return pulumi.ToOutput(e).(SecurityConfigurationRuleDirectionOutput)
}

func (e SecurityConfigurationRuleDirection) ToSecurityConfigurationRuleDirectionOutputWithContext(ctx context.Context) SecurityConfigurationRuleDirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityConfigurationRuleDirectionOutput)
}

func (e SecurityConfigurationRuleDirection) ToSecurityConfigurationRuleDirectionPtrOutput() SecurityConfigurationRuleDirectionPtrOutput {
	return e.ToSecurityConfigurationRuleDirectionPtrOutputWithContext(context.Background())
}

func (e SecurityConfigurationRuleDirection) ToSecurityConfigurationRuleDirectionPtrOutputWithContext(ctx context.Context) SecurityConfigurationRuleDirectionPtrOutput {
	return SecurityConfigurationRuleDirection(e).ToSecurityConfigurationRuleDirectionOutputWithContext(ctx).ToSecurityConfigurationRuleDirectionPtrOutputWithContext(ctx)
}

func (e SecurityConfigurationRuleDirection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityConfigurationRuleDirection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityConfigurationRuleDirection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityConfigurationRuleDirection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityConfigurationRuleDirectionOutput struct{ *pulumi.OutputState }

func (SecurityConfigurationRuleDirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfigurationRuleDirection)(nil)).Elem()
}

func (o SecurityConfigurationRuleDirectionOutput) ToSecurityConfigurationRuleDirectionOutput() SecurityConfigurationRuleDirectionOutput {
	return o
}

func (o SecurityConfigurationRuleDirectionOutput) ToSecurityConfigurationRuleDirectionOutputWithContext(ctx context.Context) SecurityConfigurationRuleDirectionOutput {
	return o
}

func (o SecurityConfigurationRuleDirectionOutput) ToSecurityConfigurationRuleDirectionPtrOutput() SecurityConfigurationRuleDirectionPtrOutput {
	return o.ToSecurityConfigurationRuleDirectionPtrOutputWithContext(context.Background())
}

func (o SecurityConfigurationRuleDirectionOutput) ToSecurityConfigurationRuleDirectionPtrOutputWithContext(ctx context.Context) SecurityConfigurationRuleDirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityConfigurationRuleDirection) *SecurityConfigurationRuleDirection {
		return &v
	}).(SecurityConfigurationRuleDirectionPtrOutput)
}

func (o SecurityConfigurationRuleDirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityConfigurationRuleDirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityConfigurationRuleDirection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityConfigurationRuleDirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityConfigurationRuleDirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityConfigurationRuleDirection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityConfigurationRuleDirectionPtrOutput struct{ *pulumi.OutputState }

func (SecurityConfigurationRuleDirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityConfigurationRuleDirection)(nil)).Elem()
}

func (o SecurityConfigurationRuleDirectionPtrOutput) ToSecurityConfigurationRuleDirectionPtrOutput() SecurityConfigurationRuleDirectionPtrOutput {
	return o
}

func (o SecurityConfigurationRuleDirectionPtrOutput) ToSecurityConfigurationRuleDirectionPtrOutputWithContext(ctx context.Context) SecurityConfigurationRuleDirectionPtrOutput {
	return o
}

func (o SecurityConfigurationRuleDirectionPtrOutput) Elem() SecurityConfigurationRuleDirectionOutput {
	return o.ApplyT(func(v *SecurityConfigurationRuleDirection) SecurityConfigurationRuleDirection {
		if v != nil {
			return *v
		}
		var ret SecurityConfigurationRuleDirection
		return ret
	}).(SecurityConfigurationRuleDirectionOutput)
}

func (o SecurityConfigurationRuleDirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityConfigurationRuleDirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityConfigurationRuleDirection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityConfigurationRuleDirectionInput is an input type that accepts values of the SecurityConfigurationRuleDirection enum
// A concrete instance of `SecurityConfigurationRuleDirectionInput` can be one of the following:
//
//	SecurityConfigurationRuleDirectionInbound
//	SecurityConfigurationRuleDirectionOutbound
type SecurityConfigurationRuleDirectionInput interface {
	pulumi.Input

	ToSecurityConfigurationRuleDirectionOutput() SecurityConfigurationRuleDirectionOutput
	ToSecurityConfigurationRuleDirectionOutputWithContext(context.Context) SecurityConfigurationRuleDirectionOutput
}

var securityConfigurationRuleDirectionPtrType = reflect.TypeOf((**SecurityConfigurationRuleDirection)(nil)).Elem()

type SecurityConfigurationRuleDirectionPtrInput interface {
	pulumi.Input

	ToSecurityConfigurationRuleDirectionPtrOutput() SecurityConfigurationRuleDirectionPtrOutput
	ToSecurityConfigurationRuleDirectionPtrOutputWithContext(context.Context) SecurityConfigurationRuleDirectionPtrOutput
}

type securityConfigurationRuleDirectionPtr string

func SecurityConfigurationRuleDirectionPtr(v string) SecurityConfigurationRuleDirectionPtrInput {
	return (*securityConfigurationRuleDirectionPtr)(&v)
}

func (*securityConfigurationRuleDirectionPtr) ElementType() reflect.Type {
	return securityConfigurationRuleDirectionPtrType
}

func (in *securityConfigurationRuleDirectionPtr) ToSecurityConfigurationRuleDirectionPtrOutput() SecurityConfigurationRuleDirectionPtrOutput {
	return pulumi.ToOutput(in).(SecurityConfigurationRuleDirectionPtrOutput)
}

func (in *securityConfigurationRuleDirectionPtr) ToSecurityConfigurationRuleDirectionPtrOutputWithContext(ctx context.Context) SecurityConfigurationRuleDirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityConfigurationRuleDirectionPtrOutput)
}

func (in *securityConfigurationRuleDirectionPtr) ToOutput(ctx context.Context) pulumix.Output[*SecurityConfigurationRuleDirection] {
	return pulumix.Output[*SecurityConfigurationRuleDirection]{
		OutputState: in.ToSecurityConfigurationRuleDirectionPtrOutputWithContext(ctx).OutputState,
	}
}

// Network protocol this rule applies to.
type SecurityConfigurationRuleProtocol string

const (
	SecurityConfigurationRuleProtocolTcp  = SecurityConfigurationRuleProtocol("Tcp")
	SecurityConfigurationRuleProtocolUdp  = SecurityConfigurationRuleProtocol("Udp")
	SecurityConfigurationRuleProtocolIcmp = SecurityConfigurationRuleProtocol("Icmp")
	SecurityConfigurationRuleProtocolEsp  = SecurityConfigurationRuleProtocol("Esp")
	SecurityConfigurationRuleProtocolAny  = SecurityConfigurationRuleProtocol("Any")
	SecurityConfigurationRuleProtocolAh   = SecurityConfigurationRuleProtocol("Ah")
)

func (SecurityConfigurationRuleProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfigurationRuleProtocol)(nil)).Elem()
}

func (e SecurityConfigurationRuleProtocol) ToSecurityConfigurationRuleProtocolOutput() SecurityConfigurationRuleProtocolOutput {
	return pulumi.ToOutput(e).(SecurityConfigurationRuleProtocolOutput)
}

func (e SecurityConfigurationRuleProtocol) ToSecurityConfigurationRuleProtocolOutputWithContext(ctx context.Context) SecurityConfigurationRuleProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityConfigurationRuleProtocolOutput)
}

func (e SecurityConfigurationRuleProtocol) ToSecurityConfigurationRuleProtocolPtrOutput() SecurityConfigurationRuleProtocolPtrOutput {
	return e.ToSecurityConfigurationRuleProtocolPtrOutputWithContext(context.Background())
}

func (e SecurityConfigurationRuleProtocol) ToSecurityConfigurationRuleProtocolPtrOutputWithContext(ctx context.Context) SecurityConfigurationRuleProtocolPtrOutput {
	return SecurityConfigurationRuleProtocol(e).ToSecurityConfigurationRuleProtocolOutputWithContext(ctx).ToSecurityConfigurationRuleProtocolPtrOutputWithContext(ctx)
}

func (e SecurityConfigurationRuleProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityConfigurationRuleProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityConfigurationRuleProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityConfigurationRuleProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityConfigurationRuleProtocolOutput struct{ *pulumi.OutputState }

func (SecurityConfigurationRuleProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfigurationRuleProtocol)(nil)).Elem()
}

func (o SecurityConfigurationRuleProtocolOutput) ToSecurityConfigurationRuleProtocolOutput() SecurityConfigurationRuleProtocolOutput {
	return o
}

func (o SecurityConfigurationRuleProtocolOutput) ToSecurityConfigurationRuleProtocolOutputWithContext(ctx context.Context) SecurityConfigurationRuleProtocolOutput {
	return o
}

func (o SecurityConfigurationRuleProtocolOutput) ToSecurityConfigurationRuleProtocolPtrOutput() SecurityConfigurationRuleProtocolPtrOutput {
	return o.ToSecurityConfigurationRuleProtocolPtrOutputWithContext(context.Background())
}

func (o SecurityConfigurationRuleProtocolOutput) ToSecurityConfigurationRuleProtocolPtrOutputWithContext(ctx context.Context) SecurityConfigurationRuleProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityConfigurationRuleProtocol) *SecurityConfigurationRuleProtocol {
		return &v
	}).(SecurityConfigurationRuleProtocolPtrOutput)
}

func (o SecurityConfigurationRuleProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityConfigurationRuleProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityConfigurationRuleProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityConfigurationRuleProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityConfigurationRuleProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityConfigurationRuleProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityConfigurationRuleProtocolPtrOutput struct{ *pulumi.OutputState }

func (SecurityConfigurationRuleProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityConfigurationRuleProtocol)(nil)).Elem()
}

func (o SecurityConfigurationRuleProtocolPtrOutput) ToSecurityConfigurationRuleProtocolPtrOutput() SecurityConfigurationRuleProtocolPtrOutput {
	return o
}

func (o SecurityConfigurationRuleProtocolPtrOutput) ToSecurityConfigurationRuleProtocolPtrOutputWithContext(ctx context.Context) SecurityConfigurationRuleProtocolPtrOutput {
	return o
}

func (o SecurityConfigurationRuleProtocolPtrOutput) Elem() SecurityConfigurationRuleProtocolOutput {
	return o.ApplyT(func(v *SecurityConfigurationRuleProtocol) SecurityConfigurationRuleProtocol {
		if v != nil {
			return *v
		}
		var ret SecurityConfigurationRuleProtocol
		return ret
	}).(SecurityConfigurationRuleProtocolOutput)
}

func (o SecurityConfigurationRuleProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityConfigurationRuleProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityConfigurationRuleProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityConfigurationRuleProtocolInput is an input type that accepts values of the SecurityConfigurationRuleProtocol enum
// A concrete instance of `SecurityConfigurationRuleProtocolInput` can be one of the following:
//
//	SecurityConfigurationRuleProtocolTcp
//	SecurityConfigurationRuleProtocolUdp
//	SecurityConfigurationRuleProtocolIcmp
//	SecurityConfigurationRuleProtocolEsp
//	SecurityConfigurationRuleProtocolAny
//	SecurityConfigurationRuleProtocolAh
type SecurityConfigurationRuleProtocolInput interface {
	pulumi.Input

	ToSecurityConfigurationRuleProtocolOutput() SecurityConfigurationRuleProtocolOutput
	ToSecurityConfigurationRuleProtocolOutputWithContext(context.Context) SecurityConfigurationRuleProtocolOutput
}

var securityConfigurationRuleProtocolPtrType = reflect.TypeOf((**SecurityConfigurationRuleProtocol)(nil)).Elem()

type SecurityConfigurationRuleProtocolPtrInput interface {
	pulumi.Input

	ToSecurityConfigurationRuleProtocolPtrOutput() SecurityConfigurationRuleProtocolPtrOutput
	ToSecurityConfigurationRuleProtocolPtrOutputWithContext(context.Context) SecurityConfigurationRuleProtocolPtrOutput
}

type securityConfigurationRuleProtocolPtr string

func SecurityConfigurationRuleProtocolPtr(v string) SecurityConfigurationRuleProtocolPtrInput {
	return (*securityConfigurationRuleProtocolPtr)(&v)
}

func (*securityConfigurationRuleProtocolPtr) ElementType() reflect.Type {
	return securityConfigurationRuleProtocolPtrType
}

func (in *securityConfigurationRuleProtocolPtr) ToSecurityConfigurationRuleProtocolPtrOutput() SecurityConfigurationRuleProtocolPtrOutput {
	return pulumi.ToOutput(in).(SecurityConfigurationRuleProtocolPtrOutput)
}

func (in *securityConfigurationRuleProtocolPtr) ToSecurityConfigurationRuleProtocolPtrOutputWithContext(ctx context.Context) SecurityConfigurationRuleProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityConfigurationRuleProtocolPtrOutput)
}

func (in *securityConfigurationRuleProtocolPtr) ToOutput(ctx context.Context) pulumix.Output[*SecurityConfigurationRuleProtocol] {
	return pulumix.Output[*SecurityConfigurationRuleProtocol]{
		OutputState: in.ToSecurityConfigurationRuleProtocolPtrOutputWithContext(ctx).OutputState,
	}
}

// The traffic routing method of the Traffic Manager profile.
type TrafficRoutingMethod string

const (
	TrafficRoutingMethodPerformance = TrafficRoutingMethod("Performance")
	TrafficRoutingMethodPriority    = TrafficRoutingMethod("Priority")
	TrafficRoutingMethodWeighted    = TrafficRoutingMethod("Weighted")
	TrafficRoutingMethodGeographic  = TrafficRoutingMethod("Geographic")
	TrafficRoutingMethodMultiValue  = TrafficRoutingMethod("MultiValue")
	TrafficRoutingMethodSubnet      = TrafficRoutingMethod("Subnet")
)

func (TrafficRoutingMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficRoutingMethod)(nil)).Elem()
}

func (e TrafficRoutingMethod) ToTrafficRoutingMethodOutput() TrafficRoutingMethodOutput {
	return pulumi.ToOutput(e).(TrafficRoutingMethodOutput)
}

func (e TrafficRoutingMethod) ToTrafficRoutingMethodOutputWithContext(ctx context.Context) TrafficRoutingMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TrafficRoutingMethodOutput)
}

func (e TrafficRoutingMethod) ToTrafficRoutingMethodPtrOutput() TrafficRoutingMethodPtrOutput {
	return e.ToTrafficRoutingMethodPtrOutputWithContext(context.Background())
}

func (e TrafficRoutingMethod) ToTrafficRoutingMethodPtrOutputWithContext(ctx context.Context) TrafficRoutingMethodPtrOutput {
	return TrafficRoutingMethod(e).ToTrafficRoutingMethodOutputWithContext(ctx).ToTrafficRoutingMethodPtrOutputWithContext(ctx)
}

func (e TrafficRoutingMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TrafficRoutingMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TrafficRoutingMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TrafficRoutingMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TrafficRoutingMethodOutput struct{ *pulumi.OutputState }

func (TrafficRoutingMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficRoutingMethod)(nil)).Elem()
}

func (o TrafficRoutingMethodOutput) ToTrafficRoutingMethodOutput() TrafficRoutingMethodOutput {
	return o
}

func (o TrafficRoutingMethodOutput) ToTrafficRoutingMethodOutputWithContext(ctx context.Context) TrafficRoutingMethodOutput {
	return o
}

func (o TrafficRoutingMethodOutput) ToTrafficRoutingMethodPtrOutput() TrafficRoutingMethodPtrOutput {
	return o.ToTrafficRoutingMethodPtrOutputWithContext(context.Background())
}

func (o TrafficRoutingMethodOutput) ToTrafficRoutingMethodPtrOutputWithContext(ctx context.Context) TrafficRoutingMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrafficRoutingMethod) *TrafficRoutingMethod {
		return &v
	}).(TrafficRoutingMethodPtrOutput)
}

func (o TrafficRoutingMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TrafficRoutingMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrafficRoutingMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TrafficRoutingMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrafficRoutingMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrafficRoutingMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TrafficRoutingMethodPtrOutput struct{ *pulumi.OutputState }

func (TrafficRoutingMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficRoutingMethod)(nil)).Elem()
}

func (o TrafficRoutingMethodPtrOutput) ToTrafficRoutingMethodPtrOutput() TrafficRoutingMethodPtrOutput {
	return o
}

func (o TrafficRoutingMethodPtrOutput) ToTrafficRoutingMethodPtrOutputWithContext(ctx context.Context) TrafficRoutingMethodPtrOutput {
	return o
}

func (o TrafficRoutingMethodPtrOutput) Elem() TrafficRoutingMethodOutput {
	return o.ApplyT(func(v *TrafficRoutingMethod) TrafficRoutingMethod {
		if v != nil {
			return *v
		}
		var ret TrafficRoutingMethod
		return ret
	}).(TrafficRoutingMethodOutput)
}

func (o TrafficRoutingMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrafficRoutingMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TrafficRoutingMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TrafficRoutingMethodInput is an input type that accepts values of the TrafficRoutingMethod enum
// A concrete instance of `TrafficRoutingMethodInput` can be one of the following:
//
//	TrafficRoutingMethodPerformance
//	TrafficRoutingMethodPriority
//	TrafficRoutingMethodWeighted
//	TrafficRoutingMethodGeographic
//	TrafficRoutingMethodMultiValue
//	TrafficRoutingMethodSubnet
type TrafficRoutingMethodInput interface {
	pulumi.Input

	ToTrafficRoutingMethodOutput() TrafficRoutingMethodOutput
	ToTrafficRoutingMethodOutputWithContext(context.Context) TrafficRoutingMethodOutput
}

var trafficRoutingMethodPtrType = reflect.TypeOf((**TrafficRoutingMethod)(nil)).Elem()

type TrafficRoutingMethodPtrInput interface {
	pulumi.Input

	ToTrafficRoutingMethodPtrOutput() TrafficRoutingMethodPtrOutput
	ToTrafficRoutingMethodPtrOutputWithContext(context.Context) TrafficRoutingMethodPtrOutput
}

type trafficRoutingMethodPtr string

func TrafficRoutingMethodPtr(v string) TrafficRoutingMethodPtrInput {
	return (*trafficRoutingMethodPtr)(&v)
}

func (*trafficRoutingMethodPtr) ElementType() reflect.Type {
	return trafficRoutingMethodPtrType
}

func (in *trafficRoutingMethodPtr) ToTrafficRoutingMethodPtrOutput() TrafficRoutingMethodPtrOutput {
	return pulumi.ToOutput(in).(TrafficRoutingMethodPtrOutput)
}

func (in *trafficRoutingMethodPtr) ToTrafficRoutingMethodPtrOutputWithContext(ctx context.Context) TrafficRoutingMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TrafficRoutingMethodPtrOutput)
}

func (in *trafficRoutingMethodPtr) ToOutput(ctx context.Context) pulumix.Output[*TrafficRoutingMethod] {
	return pulumix.Output[*TrafficRoutingMethod]{
		OutputState: in.ToTrafficRoutingMethodPtrOutputWithContext(ctx).OutputState,
	}
}

// Indicates whether Traffic View is 'Enabled' or 'Disabled' for the Traffic Manager profile. Null, indicates 'Disabled'. Enabling this feature will increase the cost of the Traffic Manage profile.
type TrafficViewEnrollmentStatus string

const (
	TrafficViewEnrollmentStatusEnabled  = TrafficViewEnrollmentStatus("Enabled")
	TrafficViewEnrollmentStatusDisabled = TrafficViewEnrollmentStatus("Disabled")
)

func (TrafficViewEnrollmentStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficViewEnrollmentStatus)(nil)).Elem()
}

func (e TrafficViewEnrollmentStatus) ToTrafficViewEnrollmentStatusOutput() TrafficViewEnrollmentStatusOutput {
	return pulumi.ToOutput(e).(TrafficViewEnrollmentStatusOutput)
}

func (e TrafficViewEnrollmentStatus) ToTrafficViewEnrollmentStatusOutputWithContext(ctx context.Context) TrafficViewEnrollmentStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TrafficViewEnrollmentStatusOutput)
}

func (e TrafficViewEnrollmentStatus) ToTrafficViewEnrollmentStatusPtrOutput() TrafficViewEnrollmentStatusPtrOutput {
	return e.ToTrafficViewEnrollmentStatusPtrOutputWithContext(context.Background())
}

func (e TrafficViewEnrollmentStatus) ToTrafficViewEnrollmentStatusPtrOutputWithContext(ctx context.Context) TrafficViewEnrollmentStatusPtrOutput {
	return TrafficViewEnrollmentStatus(e).ToTrafficViewEnrollmentStatusOutputWithContext(ctx).ToTrafficViewEnrollmentStatusPtrOutputWithContext(ctx)
}

func (e TrafficViewEnrollmentStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TrafficViewEnrollmentStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TrafficViewEnrollmentStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TrafficViewEnrollmentStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TrafficViewEnrollmentStatusOutput struct{ *pulumi.OutputState }

func (TrafficViewEnrollmentStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficViewEnrollmentStatus)(nil)).Elem()
}

func (o TrafficViewEnrollmentStatusOutput) ToTrafficViewEnrollmentStatusOutput() TrafficViewEnrollmentStatusOutput {
	return o
}

func (o TrafficViewEnrollmentStatusOutput) ToTrafficViewEnrollmentStatusOutputWithContext(ctx context.Context) TrafficViewEnrollmentStatusOutput {
	return o
}

func (o TrafficViewEnrollmentStatusOutput) ToTrafficViewEnrollmentStatusPtrOutput() TrafficViewEnrollmentStatusPtrOutput {
	return o.ToTrafficViewEnrollmentStatusPtrOutputWithContext(context.Background())
}

func (o TrafficViewEnrollmentStatusOutput) ToTrafficViewEnrollmentStatusPtrOutputWithContext(ctx context.Context) TrafficViewEnrollmentStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrafficViewEnrollmentStatus) *TrafficViewEnrollmentStatus {
		return &v
	}).(TrafficViewEnrollmentStatusPtrOutput)
}

func (o TrafficViewEnrollmentStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TrafficViewEnrollmentStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrafficViewEnrollmentStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TrafficViewEnrollmentStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrafficViewEnrollmentStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrafficViewEnrollmentStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TrafficViewEnrollmentStatusPtrOutput struct{ *pulumi.OutputState }

func (TrafficViewEnrollmentStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficViewEnrollmentStatus)(nil)).Elem()
}

func (o TrafficViewEnrollmentStatusPtrOutput) ToTrafficViewEnrollmentStatusPtrOutput() TrafficViewEnrollmentStatusPtrOutput {
	return o
}

func (o TrafficViewEnrollmentStatusPtrOutput) ToTrafficViewEnrollmentStatusPtrOutputWithContext(ctx context.Context) TrafficViewEnrollmentStatusPtrOutput {
	return o
}

func (o TrafficViewEnrollmentStatusPtrOutput) Elem() TrafficViewEnrollmentStatusOutput {
	return o.ApplyT(func(v *TrafficViewEnrollmentStatus) TrafficViewEnrollmentStatus {
		if v != nil {
			return *v
		}
		var ret TrafficViewEnrollmentStatus
		return ret
	}).(TrafficViewEnrollmentStatusOutput)
}

func (o TrafficViewEnrollmentStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrafficViewEnrollmentStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TrafficViewEnrollmentStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TrafficViewEnrollmentStatusInput is an input type that accepts values of the TrafficViewEnrollmentStatus enum
// A concrete instance of `TrafficViewEnrollmentStatusInput` can be one of the following:
//
//	TrafficViewEnrollmentStatusEnabled
//	TrafficViewEnrollmentStatusDisabled
type TrafficViewEnrollmentStatusInput interface {
	pulumi.Input

	ToTrafficViewEnrollmentStatusOutput() TrafficViewEnrollmentStatusOutput
	ToTrafficViewEnrollmentStatusOutputWithContext(context.Context) TrafficViewEnrollmentStatusOutput
}

var trafficViewEnrollmentStatusPtrType = reflect.TypeOf((**TrafficViewEnrollmentStatus)(nil)).Elem()

type TrafficViewEnrollmentStatusPtrInput interface {
	pulumi.Input

	ToTrafficViewEnrollmentStatusPtrOutput() TrafficViewEnrollmentStatusPtrOutput
	ToTrafficViewEnrollmentStatusPtrOutputWithContext(context.Context) TrafficViewEnrollmentStatusPtrOutput
}

type trafficViewEnrollmentStatusPtr string

func TrafficViewEnrollmentStatusPtr(v string) TrafficViewEnrollmentStatusPtrInput {
	return (*trafficViewEnrollmentStatusPtr)(&v)
}

func (*trafficViewEnrollmentStatusPtr) ElementType() reflect.Type {
	return trafficViewEnrollmentStatusPtrType
}

func (in *trafficViewEnrollmentStatusPtr) ToTrafficViewEnrollmentStatusPtrOutput() TrafficViewEnrollmentStatusPtrOutput {
	return pulumi.ToOutput(in).(TrafficViewEnrollmentStatusPtrOutput)
}

func (in *trafficViewEnrollmentStatusPtr) ToTrafficViewEnrollmentStatusPtrOutputWithContext(ctx context.Context) TrafficViewEnrollmentStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TrafficViewEnrollmentStatusPtrOutput)
}

func (in *trafficViewEnrollmentStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*TrafficViewEnrollmentStatus] {
	return pulumix.Output[*TrafficViewEnrollmentStatus]{
		OutputState: in.ToTrafficViewEnrollmentStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// Whether the rule is custom or default.
type UserRuleKind string

const (
	UserRuleKindCustom  = UserRuleKind("Custom")
	UserRuleKindDefault = UserRuleKind("Default")
)

func init() {
	pulumi.RegisterOutputType(AddressPrefixTypeOutput{})
	pulumi.RegisterOutputType(AddressPrefixTypePtrOutput{})
	pulumi.RegisterOutputType(AllowedEndpointRecordTypeOutput{})
	pulumi.RegisterOutputType(AllowedEndpointRecordTypePtrOutput{})
	pulumi.RegisterOutputType(AlwaysServeOutput{})
	pulumi.RegisterOutputType(AlwaysServePtrOutput{})
	pulumi.RegisterOutputType(DeleteExistingNSGsOutput{})
	pulumi.RegisterOutputType(DeleteExistingNSGsPtrOutput{})
	pulumi.RegisterOutputType(EndpointMonitorStatusOutput{})
	pulumi.RegisterOutputType(EndpointMonitorStatusPtrOutput{})
	pulumi.RegisterOutputType(EndpointStatusOutput{})
	pulumi.RegisterOutputType(EndpointStatusPtrOutput{})
	pulumi.RegisterOutputType(MonitorProtocolOutput{})
	pulumi.RegisterOutputType(MonitorProtocolPtrOutput{})
	pulumi.RegisterOutputType(ProfileMonitorStatusOutput{})
	pulumi.RegisterOutputType(ProfileMonitorStatusPtrOutput{})
	pulumi.RegisterOutputType(ProfileStatusOutput{})
	pulumi.RegisterOutputType(ProfileStatusPtrOutput{})
	pulumi.RegisterOutputType(SecurityConfigurationRuleDirectionOutput{})
	pulumi.RegisterOutputType(SecurityConfigurationRuleDirectionPtrOutput{})
	pulumi.RegisterOutputType(SecurityConfigurationRuleProtocolOutput{})
	pulumi.RegisterOutputType(SecurityConfigurationRuleProtocolPtrOutput{})
	pulumi.RegisterOutputType(TrafficRoutingMethodOutput{})
	pulumi.RegisterOutputType(TrafficRoutingMethodPtrOutput{})
	pulumi.RegisterOutputType(TrafficViewEnrollmentStatusOutput{})
	pulumi.RegisterOutputType(TrafficViewEnrollmentStatusPtrOutput{})
}
