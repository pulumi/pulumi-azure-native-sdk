// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// DDoS custom policy properties.
type ProtocolCustomSettingsFormat struct {
	// The protocol for which the DDoS protection policy is being customized.
	Protocol *string `pulumi:"protocol"`
	// The customized DDoS protection source rate.
	SourceRateOverride *string `pulumi:"sourceRateOverride"`
	// The customized DDoS protection trigger rate.
	TriggerRateOverride *string `pulumi:"triggerRateOverride"`
	// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
	TriggerSensitivityOverride *string `pulumi:"triggerSensitivityOverride"`
}

// ProtocolCustomSettingsFormatInput is an input type that accepts ProtocolCustomSettingsFormatArgs and ProtocolCustomSettingsFormatOutput values.
// You can construct a concrete instance of `ProtocolCustomSettingsFormatInput` via:
//
//	ProtocolCustomSettingsFormatArgs{...}
type ProtocolCustomSettingsFormatInput interface {
	pulumi.Input

	ToProtocolCustomSettingsFormatOutput() ProtocolCustomSettingsFormatOutput
	ToProtocolCustomSettingsFormatOutputWithContext(context.Context) ProtocolCustomSettingsFormatOutput
}

// DDoS custom policy properties.
type ProtocolCustomSettingsFormatArgs struct {
	// The protocol for which the DDoS protection policy is being customized.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The customized DDoS protection source rate.
	SourceRateOverride pulumi.StringPtrInput `pulumi:"sourceRateOverride"`
	// The customized DDoS protection trigger rate.
	TriggerRateOverride pulumi.StringPtrInput `pulumi:"triggerRateOverride"`
	// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
	TriggerSensitivityOverride pulumi.StringPtrInput `pulumi:"triggerSensitivityOverride"`
}

func (ProtocolCustomSettingsFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolCustomSettingsFormat)(nil)).Elem()
}

func (i ProtocolCustomSettingsFormatArgs) ToProtocolCustomSettingsFormatOutput() ProtocolCustomSettingsFormatOutput {
	return i.ToProtocolCustomSettingsFormatOutputWithContext(context.Background())
}

func (i ProtocolCustomSettingsFormatArgs) ToProtocolCustomSettingsFormatOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolCustomSettingsFormatOutput)
}

// ProtocolCustomSettingsFormatArrayInput is an input type that accepts ProtocolCustomSettingsFormatArray and ProtocolCustomSettingsFormatArrayOutput values.
// You can construct a concrete instance of `ProtocolCustomSettingsFormatArrayInput` via:
//
//	ProtocolCustomSettingsFormatArray{ ProtocolCustomSettingsFormatArgs{...} }
type ProtocolCustomSettingsFormatArrayInput interface {
	pulumi.Input

	ToProtocolCustomSettingsFormatArrayOutput() ProtocolCustomSettingsFormatArrayOutput
	ToProtocolCustomSettingsFormatArrayOutputWithContext(context.Context) ProtocolCustomSettingsFormatArrayOutput
}

type ProtocolCustomSettingsFormatArray []ProtocolCustomSettingsFormatInput

func (ProtocolCustomSettingsFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtocolCustomSettingsFormat)(nil)).Elem()
}

func (i ProtocolCustomSettingsFormatArray) ToProtocolCustomSettingsFormatArrayOutput() ProtocolCustomSettingsFormatArrayOutput {
	return i.ToProtocolCustomSettingsFormatArrayOutputWithContext(context.Background())
}

func (i ProtocolCustomSettingsFormatArray) ToProtocolCustomSettingsFormatArrayOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolCustomSettingsFormatArrayOutput)
}

// DDoS custom policy properties.
type ProtocolCustomSettingsFormatOutput struct{ *pulumi.OutputState }

func (ProtocolCustomSettingsFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolCustomSettingsFormat)(nil)).Elem()
}

func (o ProtocolCustomSettingsFormatOutput) ToProtocolCustomSettingsFormatOutput() ProtocolCustomSettingsFormatOutput {
	return o
}

func (o ProtocolCustomSettingsFormatOutput) ToProtocolCustomSettingsFormatOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatOutput {
	return o
}

// The protocol for which the DDoS protection policy is being customized.
func (o ProtocolCustomSettingsFormatOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormat) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection source rate.
func (o ProtocolCustomSettingsFormatOutput) SourceRateOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormat) *string { return v.SourceRateOverride }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection trigger rate.
func (o ProtocolCustomSettingsFormatOutput) TriggerRateOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormat) *string { return v.TriggerRateOverride }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
func (o ProtocolCustomSettingsFormatOutput) TriggerSensitivityOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormat) *string { return v.TriggerSensitivityOverride }).(pulumi.StringPtrOutput)
}

type ProtocolCustomSettingsFormatArrayOutput struct{ *pulumi.OutputState }

func (ProtocolCustomSettingsFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtocolCustomSettingsFormat)(nil)).Elem()
}

func (o ProtocolCustomSettingsFormatArrayOutput) ToProtocolCustomSettingsFormatArrayOutput() ProtocolCustomSettingsFormatArrayOutput {
	return o
}

func (o ProtocolCustomSettingsFormatArrayOutput) ToProtocolCustomSettingsFormatArrayOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatArrayOutput {
	return o
}

func (o ProtocolCustomSettingsFormatArrayOutput) Index(i pulumi.IntInput) ProtocolCustomSettingsFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtocolCustomSettingsFormat {
		return vs[0].([]ProtocolCustomSettingsFormat)[vs[1].(int)]
	}).(ProtocolCustomSettingsFormatOutput)
}

// DDoS custom policy properties.
type ProtocolCustomSettingsFormatResponse struct {
	// The protocol for which the DDoS protection policy is being customized.
	Protocol *string `pulumi:"protocol"`
	// The customized DDoS protection source rate.
	SourceRateOverride *string `pulumi:"sourceRateOverride"`
	// The customized DDoS protection trigger rate.
	TriggerRateOverride *string `pulumi:"triggerRateOverride"`
	// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
	TriggerSensitivityOverride *string `pulumi:"triggerSensitivityOverride"`
}

// DDoS custom policy properties.
type ProtocolCustomSettingsFormatResponseOutput struct{ *pulumi.OutputState }

func (ProtocolCustomSettingsFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolCustomSettingsFormatResponse)(nil)).Elem()
}

func (o ProtocolCustomSettingsFormatResponseOutput) ToProtocolCustomSettingsFormatResponseOutput() ProtocolCustomSettingsFormatResponseOutput {
	return o
}

func (o ProtocolCustomSettingsFormatResponseOutput) ToProtocolCustomSettingsFormatResponseOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatResponseOutput {
	return o
}

// The protocol for which the DDoS protection policy is being customized.
func (o ProtocolCustomSettingsFormatResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormatResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection source rate.
func (o ProtocolCustomSettingsFormatResponseOutput) SourceRateOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormatResponse) *string { return v.SourceRateOverride }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection trigger rate.
func (o ProtocolCustomSettingsFormatResponseOutput) TriggerRateOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormatResponse) *string { return v.TriggerRateOverride }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
func (o ProtocolCustomSettingsFormatResponseOutput) TriggerSensitivityOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormatResponse) *string { return v.TriggerSensitivityOverride }).(pulumi.StringPtrOutput)
}

type ProtocolCustomSettingsFormatResponseArrayOutput struct{ *pulumi.OutputState }

func (ProtocolCustomSettingsFormatResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtocolCustomSettingsFormatResponse)(nil)).Elem()
}

func (o ProtocolCustomSettingsFormatResponseArrayOutput) ToProtocolCustomSettingsFormatResponseArrayOutput() ProtocolCustomSettingsFormatResponseArrayOutput {
	return o
}

func (o ProtocolCustomSettingsFormatResponseArrayOutput) ToProtocolCustomSettingsFormatResponseArrayOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatResponseArrayOutput {
	return o
}

func (o ProtocolCustomSettingsFormatResponseArrayOutput) Index(i pulumi.IntInput) ProtocolCustomSettingsFormatResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtocolCustomSettingsFormatResponse {
		return vs[0].([]ProtocolCustomSettingsFormatResponse)[vs[1].(int)]
	}).(ProtocolCustomSettingsFormatResponseOutput)
}

// The routing policy object used in a RoutingIntent resource.
type RoutingPolicy struct {
	// List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
	Destinations []string `pulumi:"destinations"`
	// The unique name for the routing policy.
	Name string `pulumi:"name"`
	// The next hop resource id on which this routing policy is applicable to.
	NextHop string `pulumi:"nextHop"`
}

// RoutingPolicyInput is an input type that accepts RoutingPolicyArgs and RoutingPolicyOutput values.
// You can construct a concrete instance of `RoutingPolicyInput` via:
//
//	RoutingPolicyArgs{...}
type RoutingPolicyInput interface {
	pulumi.Input

	ToRoutingPolicyOutput() RoutingPolicyOutput
	ToRoutingPolicyOutputWithContext(context.Context) RoutingPolicyOutput
}

// The routing policy object used in a RoutingIntent resource.
type RoutingPolicyArgs struct {
	// List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// The unique name for the routing policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The next hop resource id on which this routing policy is applicable to.
	NextHop pulumi.StringInput `pulumi:"nextHop"`
}

func (RoutingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPolicy)(nil)).Elem()
}

func (i RoutingPolicyArgs) ToRoutingPolicyOutput() RoutingPolicyOutput {
	return i.ToRoutingPolicyOutputWithContext(context.Background())
}

func (i RoutingPolicyArgs) ToRoutingPolicyOutputWithContext(ctx context.Context) RoutingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPolicyOutput)
}

// RoutingPolicyArrayInput is an input type that accepts RoutingPolicyArray and RoutingPolicyArrayOutput values.
// You can construct a concrete instance of `RoutingPolicyArrayInput` via:
//
//	RoutingPolicyArray{ RoutingPolicyArgs{...} }
type RoutingPolicyArrayInput interface {
	pulumi.Input

	ToRoutingPolicyArrayOutput() RoutingPolicyArrayOutput
	ToRoutingPolicyArrayOutputWithContext(context.Context) RoutingPolicyArrayOutput
}

type RoutingPolicyArray []RoutingPolicyInput

func (RoutingPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingPolicy)(nil)).Elem()
}

func (i RoutingPolicyArray) ToRoutingPolicyArrayOutput() RoutingPolicyArrayOutput {
	return i.ToRoutingPolicyArrayOutputWithContext(context.Background())
}

func (i RoutingPolicyArray) ToRoutingPolicyArrayOutputWithContext(ctx context.Context) RoutingPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPolicyArrayOutput)
}

// The routing policy object used in a RoutingIntent resource.
type RoutingPolicyOutput struct{ *pulumi.OutputState }

func (RoutingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPolicy)(nil)).Elem()
}

func (o RoutingPolicyOutput) ToRoutingPolicyOutput() RoutingPolicyOutput {
	return o
}

func (o RoutingPolicyOutput) ToRoutingPolicyOutputWithContext(ctx context.Context) RoutingPolicyOutput {
	return o
}

// List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
func (o RoutingPolicyOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutingPolicy) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The unique name for the routing policy.
func (o RoutingPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The next hop resource id on which this routing policy is applicable to.
func (o RoutingPolicyOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingPolicy) string { return v.NextHop }).(pulumi.StringOutput)
}

type RoutingPolicyArrayOutput struct{ *pulumi.OutputState }

func (RoutingPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingPolicy)(nil)).Elem()
}

func (o RoutingPolicyArrayOutput) ToRoutingPolicyArrayOutput() RoutingPolicyArrayOutput {
	return o
}

func (o RoutingPolicyArrayOutput) ToRoutingPolicyArrayOutputWithContext(ctx context.Context) RoutingPolicyArrayOutput {
	return o
}

func (o RoutingPolicyArrayOutput) Index(i pulumi.IntInput) RoutingPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingPolicy {
		return vs[0].([]RoutingPolicy)[vs[1].(int)]
	}).(RoutingPolicyOutput)
}

// The routing policy object used in a RoutingIntent resource.
type RoutingPolicyResponse struct {
	// List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
	Destinations []string `pulumi:"destinations"`
	// The unique name for the routing policy.
	Name string `pulumi:"name"`
	// The next hop resource id on which this routing policy is applicable to.
	NextHop string `pulumi:"nextHop"`
}

// The routing policy object used in a RoutingIntent resource.
type RoutingPolicyResponseOutput struct{ *pulumi.OutputState }

func (RoutingPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPolicyResponse)(nil)).Elem()
}

func (o RoutingPolicyResponseOutput) ToRoutingPolicyResponseOutput() RoutingPolicyResponseOutput {
	return o
}

func (o RoutingPolicyResponseOutput) ToRoutingPolicyResponseOutputWithContext(ctx context.Context) RoutingPolicyResponseOutput {
	return o
}

// List of all destinations which this routing policy is applicable to (for example: Internet, PrivateTraffic).
func (o RoutingPolicyResponseOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutingPolicyResponse) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The unique name for the routing policy.
func (o RoutingPolicyResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingPolicyResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The next hop resource id on which this routing policy is applicable to.
func (o RoutingPolicyResponseOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingPolicyResponse) string { return v.NextHop }).(pulumi.StringOutput)
}

type RoutingPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingPolicyResponse)(nil)).Elem()
}

func (o RoutingPolicyResponseArrayOutput) ToRoutingPolicyResponseArrayOutput() RoutingPolicyResponseArrayOutput {
	return o
}

func (o RoutingPolicyResponseArrayOutput) ToRoutingPolicyResponseArrayOutputWithContext(ctx context.Context) RoutingPolicyResponseArrayOutput {
	return o
}

func (o RoutingPolicyResponseArrayOutput) Index(i pulumi.IntInput) RoutingPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingPolicyResponse {
		return vs[0].([]RoutingPolicyResponse)[vs[1].(int)]
	}).(RoutingPolicyResponseOutput)
}

// Reference to another subresource.
type SubResource struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// SubResourceInput is an input type that accepts SubResourceArgs and SubResourceOutput values.
// You can construct a concrete instance of `SubResourceInput` via:
//
//	SubResourceArgs{...}
type SubResourceInput interface {
	pulumi.Input

	ToSubResourceOutput() SubResourceOutput
	ToSubResourceOutputWithContext(context.Context) SubResourceOutput
}

// Reference to another subresource.
type SubResourceArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (i SubResourceArgs) ToSubResourceOutput() SubResourceOutput {
	return i.ToSubResourceOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput)
}

func (i SubResourceArgs) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput).ToSubResourcePtrOutputWithContext(ctx)
}

// SubResourcePtrInput is an input type that accepts SubResourceArgs, SubResourcePtr and SubResourcePtrOutput values.
// You can construct a concrete instance of `SubResourcePtrInput` via:
//
//	        SubResourceArgs{...}
//
//	or:
//
//	        nil
type SubResourcePtrInput interface {
	pulumi.Input

	ToSubResourcePtrOutput() SubResourcePtrOutput
	ToSubResourcePtrOutputWithContext(context.Context) SubResourcePtrOutput
}

type subResourcePtrType SubResourceArgs

func SubResourcePtr(v *SubResourceArgs) SubResourcePtrInput {
	return (*subResourcePtrType)(v)
}

func (*subResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (i *subResourcePtrType) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i *subResourcePtrType) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourcePtrOutput)
}

// Reference to another subresource.
type SubResourceOutput struct{ *pulumi.OutputState }

func (SubResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (o SubResourceOutput) ToSubResourceOutput() SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o.ToSubResourcePtrOutputWithContext(context.Background())
}

func (o SubResourceOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubResource) *SubResource {
		return &v
	}).(SubResourcePtrOutput)
}

// Resource ID.
func (o SubResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourcePtrOutput struct{ *pulumi.OutputState }

func (SubResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) Elem() SubResourceOutput {
	return o.ApplyT(func(v *SubResource) SubResource {
		if v != nil {
			return *v
		}
		var ret SubResource
		return ret
	}).(SubResourceOutput)
}

// Resource ID.
func (o SubResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Reference to another subresource.
type SubResourceResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Reference to another subresource.
type SubResourceResponseOutput struct{ *pulumi.OutputState }

func (SubResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return o
}

// Resource ID.
func (o SubResourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourceResponsePtrOutput struct{ *pulumi.OutputState }

func (SubResourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) Elem() SubResourceResponseOutput {
	return o.ApplyT(func(v *SubResourceResponse) SubResourceResponse {
		if v != nil {
			return *v
		}
		var ret SubResourceResponse
		return ret
	}).(SubResourceResponseOutput)
}

// Resource ID.
func (o SubResourceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SubResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutputWithContext(ctx context.Context) SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) Index(i pulumi.IntInput) SubResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResourceResponse {
		return vs[0].([]SubResourceResponse)[vs[1].(int)]
	}).(SubResourceResponseOutput)
}

// VpnServerConfiguration PolicyGroup member
type VpnServerConfigurationPolicyGroupMember struct {
	// The Vpn Policy member attribute type.
	AttributeType *string `pulumi:"attributeType"`
	// The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
	AttributeValue *string `pulumi:"attributeValue"`
	// Name of the VpnServerConfigurationPolicyGroupMember.
	Name *string `pulumi:"name"`
}

// VpnServerConfigurationPolicyGroupMemberInput is an input type that accepts VpnServerConfigurationPolicyGroupMemberArgs and VpnServerConfigurationPolicyGroupMemberOutput values.
// You can construct a concrete instance of `VpnServerConfigurationPolicyGroupMemberInput` via:
//
//	VpnServerConfigurationPolicyGroupMemberArgs{...}
type VpnServerConfigurationPolicyGroupMemberInput interface {
	pulumi.Input

	ToVpnServerConfigurationPolicyGroupMemberOutput() VpnServerConfigurationPolicyGroupMemberOutput
	ToVpnServerConfigurationPolicyGroupMemberOutputWithContext(context.Context) VpnServerConfigurationPolicyGroupMemberOutput
}

// VpnServerConfiguration PolicyGroup member
type VpnServerConfigurationPolicyGroupMemberArgs struct {
	// The Vpn Policy member attribute type.
	AttributeType pulumi.StringPtrInput `pulumi:"attributeType"`
	// The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
	AttributeValue pulumi.StringPtrInput `pulumi:"attributeValue"`
	// Name of the VpnServerConfigurationPolicyGroupMember.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnServerConfigurationPolicyGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroupMember)(nil)).Elem()
}

func (i VpnServerConfigurationPolicyGroupMemberArgs) ToVpnServerConfigurationPolicyGroupMemberOutput() VpnServerConfigurationPolicyGroupMemberOutput {
	return i.ToVpnServerConfigurationPolicyGroupMemberOutputWithContext(context.Background())
}

func (i VpnServerConfigurationPolicyGroupMemberArgs) ToVpnServerConfigurationPolicyGroupMemberOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPolicyGroupMemberOutput)
}

// VpnServerConfigurationPolicyGroupMemberArrayInput is an input type that accepts VpnServerConfigurationPolicyGroupMemberArray and VpnServerConfigurationPolicyGroupMemberArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigurationPolicyGroupMemberArrayInput` via:
//
//	VpnServerConfigurationPolicyGroupMemberArray{ VpnServerConfigurationPolicyGroupMemberArgs{...} }
type VpnServerConfigurationPolicyGroupMemberArrayInput interface {
	pulumi.Input

	ToVpnServerConfigurationPolicyGroupMemberArrayOutput() VpnServerConfigurationPolicyGroupMemberArrayOutput
	ToVpnServerConfigurationPolicyGroupMemberArrayOutputWithContext(context.Context) VpnServerConfigurationPolicyGroupMemberArrayOutput
}

type VpnServerConfigurationPolicyGroupMemberArray []VpnServerConfigurationPolicyGroupMemberInput

func (VpnServerConfigurationPolicyGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroupMember)(nil)).Elem()
}

func (i VpnServerConfigurationPolicyGroupMemberArray) ToVpnServerConfigurationPolicyGroupMemberArrayOutput() VpnServerConfigurationPolicyGroupMemberArrayOutput {
	return i.ToVpnServerConfigurationPolicyGroupMemberArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigurationPolicyGroupMemberArray) ToVpnServerConfigurationPolicyGroupMemberArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPolicyGroupMemberArrayOutput)
}

// VpnServerConfiguration PolicyGroup member
type VpnServerConfigurationPolicyGroupMemberOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroupMember)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupMemberOutput) ToVpnServerConfigurationPolicyGroupMemberOutput() VpnServerConfigurationPolicyGroupMemberOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberOutput) ToVpnServerConfigurationPolicyGroupMemberOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberOutput {
	return o
}

// The Vpn Policy member attribute type.
func (o VpnServerConfigurationPolicyGroupMemberOutput) AttributeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMember) *string { return v.AttributeType }).(pulumi.StringPtrOutput)
}

// The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
func (o VpnServerConfigurationPolicyGroupMemberOutput) AttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMember) *string { return v.AttributeValue }).(pulumi.StringPtrOutput)
}

// Name of the VpnServerConfigurationPolicyGroupMember.
func (o VpnServerConfigurationPolicyGroupMemberOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMember) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnServerConfigurationPolicyGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroupMember)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupMemberArrayOutput) ToVpnServerConfigurationPolicyGroupMemberArrayOutput() VpnServerConfigurationPolicyGroupMemberArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberArrayOutput) ToVpnServerConfigurationPolicyGroupMemberArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationPolicyGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationPolicyGroupMember {
		return vs[0].([]VpnServerConfigurationPolicyGroupMember)[vs[1].(int)]
	}).(VpnServerConfigurationPolicyGroupMemberOutput)
}

// VpnServerConfiguration PolicyGroup member
type VpnServerConfigurationPolicyGroupMemberResponse struct {
	// The Vpn Policy member attribute type.
	AttributeType *string `pulumi:"attributeType"`
	// The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
	AttributeValue *string `pulumi:"attributeValue"`
	// Name of the VpnServerConfigurationPolicyGroupMember.
	Name *string `pulumi:"name"`
}

// VpnServerConfiguration PolicyGroup member
type VpnServerConfigurationPolicyGroupMemberResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupMemberResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroupMemberResponse)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupMemberResponseOutput) ToVpnServerConfigurationPolicyGroupMemberResponseOutput() VpnServerConfigurationPolicyGroupMemberResponseOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberResponseOutput) ToVpnServerConfigurationPolicyGroupMemberResponseOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberResponseOutput {
	return o
}

// The Vpn Policy member attribute type.
func (o VpnServerConfigurationPolicyGroupMemberResponseOutput) AttributeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMemberResponse) *string { return v.AttributeType }).(pulumi.StringPtrOutput)
}

// The value of Attribute used for this VpnServerConfigurationPolicyGroupMember.
func (o VpnServerConfigurationPolicyGroupMemberResponseOutput) AttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMemberResponse) *string { return v.AttributeValue }).(pulumi.StringPtrOutput)
}

// Name of the VpnServerConfigurationPolicyGroupMember.
func (o VpnServerConfigurationPolicyGroupMemberResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupMemberResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnServerConfigurationPolicyGroupMemberResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupMemberResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroupMemberResponse)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupMemberResponseArrayOutput) ToVpnServerConfigurationPolicyGroupMemberResponseArrayOutput() VpnServerConfigurationPolicyGroupMemberResponseArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberResponseArrayOutput) ToVpnServerConfigurationPolicyGroupMemberResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMemberResponseArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMemberResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationPolicyGroupMemberResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationPolicyGroupMemberResponse {
		return vs[0].([]VpnServerConfigurationPolicyGroupMemberResponse)[vs[1].(int)]
	}).(VpnServerConfigurationPolicyGroupMemberResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ProtocolCustomSettingsFormatOutput{})
	pulumi.RegisterOutputType(ProtocolCustomSettingsFormatArrayOutput{})
	pulumi.RegisterOutputType(ProtocolCustomSettingsFormatResponseOutput{})
	pulumi.RegisterOutputType(ProtocolCustomSettingsFormatResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingPolicyOutput{})
	pulumi.RegisterOutputType(RoutingPolicyArrayOutput{})
	pulumi.RegisterOutputType(RoutingPolicyResponseOutput{})
	pulumi.RegisterOutputType(RoutingPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(SubResourceOutput{})
	pulumi.RegisterOutputType(SubResourcePtrOutput{})
	pulumi.RegisterOutputType(SubResourceResponseOutput{})
	pulumi.RegisterOutputType(SubResourceResponsePtrOutput{})
	pulumi.RegisterOutputType(SubResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupMemberOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupMemberResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupMemberResponseArrayOutput{})
}
