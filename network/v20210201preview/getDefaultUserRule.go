// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a user rule.
func GetDefaultUserRule(ctx *pulumi.Context, args *GetDefaultUserRuleArgs, opts ...pulumi.InvokeOption) (*GetDefaultUserRuleResult, error) {
	var rv GetDefaultUserRuleResult
	err := ctx.Invoke("azure-native:network/v20210201preview:getDefaultUserRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetDefaultUserRuleArgs struct {
	// The name of the network manager security Configuration.
	ConfigurationName string `pulumi:"configurationName"`
	// The name of the network manager.
	NetworkManagerName string `pulumi:"networkManagerName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the network manager security Configuration rule collection.
	RuleCollectionName string `pulumi:"ruleCollectionName"`
	// The name of the rule.
	RuleName string `pulumi:"ruleName"`
}

// Network security default user rule.
type GetDefaultUserRuleResult struct {
	// A description for this rule. Restricted to 140 chars.
	Description string `pulumi:"description"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The destination address prefixes. CIDR or destination IP ranges.
	Destinations []AddressPrefixItemResponse `pulumi:"destinations"`
	// Indicates if the traffic matched against the rule in inbound or outbound.
	Direction string `pulumi:"direction"`
	// A friendly name for the rule.
	DisplayName string `pulumi:"displayName"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Default rule flag.
	Flag *string `pulumi:"flag"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Whether the rule is custom or default.
	// Expected value is 'Default'.
	Kind string `pulumi:"kind"`
	// Resource name.
	Name string `pulumi:"name"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the security configuration user rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The CIDR or source IP ranges.
	Sources []AddressPrefixItemResponse `pulumi:"sources"`
	// The system metadata related to this resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource type.
	Type string `pulumi:"type"`
}

func GetDefaultUserRuleOutput(ctx *pulumi.Context, args GetDefaultUserRuleOutputArgs, opts ...pulumi.InvokeOption) GetDefaultUserRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDefaultUserRuleResult, error) {
			args := v.(GetDefaultUserRuleArgs)
			r, err := GetDefaultUserRule(ctx, &args, opts...)
			var s GetDefaultUserRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDefaultUserRuleResultOutput)
}

type GetDefaultUserRuleOutputArgs struct {
	// The name of the network manager security Configuration.
	ConfigurationName pulumi.StringInput `pulumi:"configurationName"`
	// The name of the network manager.
	NetworkManagerName pulumi.StringInput `pulumi:"networkManagerName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the network manager security Configuration rule collection.
	RuleCollectionName pulumi.StringInput `pulumi:"ruleCollectionName"`
	// The name of the rule.
	RuleName pulumi.StringInput `pulumi:"ruleName"`
}

func (GetDefaultUserRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDefaultUserRuleArgs)(nil)).Elem()
}

// Network security default user rule.
type GetDefaultUserRuleResultOutput struct{ *pulumi.OutputState }

func (GetDefaultUserRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDefaultUserRuleResult)(nil)).Elem()
}

func (o GetDefaultUserRuleResultOutput) ToGetDefaultUserRuleResultOutput() GetDefaultUserRuleResultOutput {
	return o
}

func (o GetDefaultUserRuleResultOutput) ToGetDefaultUserRuleResultOutputWithContext(ctx context.Context) GetDefaultUserRuleResultOutput {
	return o
}

// A description for this rule. Restricted to 140 chars.
func (o GetDefaultUserRuleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultUserRuleResult) string { return v.Description }).(pulumi.StringOutput)
}

// The destination port ranges.
func (o GetDefaultUserRuleResultOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDefaultUserRuleResult) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o GetDefaultUserRuleResultOutput) Destinations() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v GetDefaultUserRuleResult) []AddressPrefixItemResponse { return v.Destinations }).(AddressPrefixItemResponseArrayOutput)
}

// Indicates if the traffic matched against the rule in inbound or outbound.
func (o GetDefaultUserRuleResultOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultUserRuleResult) string { return v.Direction }).(pulumi.StringOutput)
}

// A friendly name for the rule.
func (o GetDefaultUserRuleResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultUserRuleResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o GetDefaultUserRuleResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultUserRuleResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Default rule flag.
func (o GetDefaultUserRuleResultOutput) Flag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDefaultUserRuleResult) *string { return v.Flag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o GetDefaultUserRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultUserRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// Whether the rule is custom or default.
// Expected value is 'Default'.
func (o GetDefaultUserRuleResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultUserRuleResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Resource name.
func (o GetDefaultUserRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultUserRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

// Network protocol this rule applies to.
func (o GetDefaultUserRuleResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultUserRuleResult) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the security configuration user rule resource.
func (o GetDefaultUserRuleResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultUserRuleResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The source port ranges.
func (o GetDefaultUserRuleResultOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDefaultUserRuleResult) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The CIDR or source IP ranges.
func (o GetDefaultUserRuleResultOutput) Sources() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v GetDefaultUserRuleResult) []AddressPrefixItemResponse { return v.Sources }).(AddressPrefixItemResponseArrayOutput)
}

// The system metadata related to this resource.
func (o GetDefaultUserRuleResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v GetDefaultUserRuleResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource type.
func (o GetDefaultUserRuleResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDefaultUserRuleResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDefaultUserRuleResultOutput{})
}
