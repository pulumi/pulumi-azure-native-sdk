// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An A record.
type ARecord struct {
	// The IPv4 address of this A record.
	Ipv4Address *string `pulumi:"ipv4Address"`
}

// ARecordInput is an input type that accepts ARecordArgs and ARecordOutput values.
// You can construct a concrete instance of `ARecordInput` via:
//
//	ARecordArgs{...}
type ARecordInput interface {
	pulumi.Input

	ToARecordOutput() ARecordOutput
	ToARecordOutputWithContext(context.Context) ARecordOutput
}

// An A record.
type ARecordArgs struct {
	// The IPv4 address of this A record.
	Ipv4Address pulumi.StringPtrInput `pulumi:"ipv4Address"`
}

func (ARecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ARecord)(nil)).Elem()
}

func (i ARecordArgs) ToARecordOutput() ARecordOutput {
	return i.ToARecordOutputWithContext(context.Background())
}

func (i ARecordArgs) ToARecordOutputWithContext(ctx context.Context) ARecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ARecordOutput)
}

// ARecordArrayInput is an input type that accepts ARecordArray and ARecordArrayOutput values.
// You can construct a concrete instance of `ARecordArrayInput` via:
//
//	ARecordArray{ ARecordArgs{...} }
type ARecordArrayInput interface {
	pulumi.Input

	ToARecordArrayOutput() ARecordArrayOutput
	ToARecordArrayOutputWithContext(context.Context) ARecordArrayOutput
}

type ARecordArray []ARecordInput

func (ARecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ARecord)(nil)).Elem()
}

func (i ARecordArray) ToARecordArrayOutput() ARecordArrayOutput {
	return i.ToARecordArrayOutputWithContext(context.Background())
}

func (i ARecordArray) ToARecordArrayOutputWithContext(ctx context.Context) ARecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ARecordArrayOutput)
}

// An A record.
type ARecordOutput struct{ *pulumi.OutputState }

func (ARecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ARecord)(nil)).Elem()
}

func (o ARecordOutput) ToARecordOutput() ARecordOutput {
	return o
}

func (o ARecordOutput) ToARecordOutputWithContext(ctx context.Context) ARecordOutput {
	return o
}

// The IPv4 address of this A record.
func (o ARecordOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ARecord) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

type ARecordArrayOutput struct{ *pulumi.OutputState }

func (ARecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ARecord)(nil)).Elem()
}

func (o ARecordArrayOutput) ToARecordArrayOutput() ARecordArrayOutput {
	return o
}

func (o ARecordArrayOutput) ToARecordArrayOutputWithContext(ctx context.Context) ARecordArrayOutput {
	return o
}

func (o ARecordArrayOutput) Index(i pulumi.IntInput) ARecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ARecord {
		return vs[0].([]ARecord)[vs[1].(int)]
	}).(ARecordOutput)
}

// An A record.
type ARecordResponse struct {
	// The IPv4 address of this A record.
	Ipv4Address *string `pulumi:"ipv4Address"`
}

// An A record.
type ARecordResponseOutput struct{ *pulumi.OutputState }

func (ARecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ARecordResponse)(nil)).Elem()
}

func (o ARecordResponseOutput) ToARecordResponseOutput() ARecordResponseOutput {
	return o
}

func (o ARecordResponseOutput) ToARecordResponseOutputWithContext(ctx context.Context) ARecordResponseOutput {
	return o
}

// The IPv4 address of this A record.
func (o ARecordResponseOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ARecordResponse) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

type ARecordResponseArrayOutput struct{ *pulumi.OutputState }

func (ARecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ARecordResponse)(nil)).Elem()
}

func (o ARecordResponseArrayOutput) ToARecordResponseArrayOutput() ARecordResponseArrayOutput {
	return o
}

func (o ARecordResponseArrayOutput) ToARecordResponseArrayOutputWithContext(ctx context.Context) ARecordResponseArrayOutput {
	return o
}

func (o ARecordResponseArrayOutput) Index(i pulumi.IntInput) ARecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ARecordResponse {
		return vs[0].([]ARecordResponse)[vs[1].(int)]
	}).(ARecordResponseOutput)
}

// An AAAA record.
type AaaaRecord struct {
	// The IPv6 address of this AAAA record.
	Ipv6Address *string `pulumi:"ipv6Address"`
}

// AaaaRecordInput is an input type that accepts AaaaRecordArgs and AaaaRecordOutput values.
// You can construct a concrete instance of `AaaaRecordInput` via:
//
//	AaaaRecordArgs{...}
type AaaaRecordInput interface {
	pulumi.Input

	ToAaaaRecordOutput() AaaaRecordOutput
	ToAaaaRecordOutputWithContext(context.Context) AaaaRecordOutput
}

// An AAAA record.
type AaaaRecordArgs struct {
	// The IPv6 address of this AAAA record.
	Ipv6Address pulumi.StringPtrInput `pulumi:"ipv6Address"`
}

func (AaaaRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AaaaRecord)(nil)).Elem()
}

func (i AaaaRecordArgs) ToAaaaRecordOutput() AaaaRecordOutput {
	return i.ToAaaaRecordOutputWithContext(context.Background())
}

func (i AaaaRecordArgs) ToAaaaRecordOutputWithContext(ctx context.Context) AaaaRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AaaaRecordOutput)
}

// AaaaRecordArrayInput is an input type that accepts AaaaRecordArray and AaaaRecordArrayOutput values.
// You can construct a concrete instance of `AaaaRecordArrayInput` via:
//
//	AaaaRecordArray{ AaaaRecordArgs{...} }
type AaaaRecordArrayInput interface {
	pulumi.Input

	ToAaaaRecordArrayOutput() AaaaRecordArrayOutput
	ToAaaaRecordArrayOutputWithContext(context.Context) AaaaRecordArrayOutput
}

type AaaaRecordArray []AaaaRecordInput

func (AaaaRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AaaaRecord)(nil)).Elem()
}

func (i AaaaRecordArray) ToAaaaRecordArrayOutput() AaaaRecordArrayOutput {
	return i.ToAaaaRecordArrayOutputWithContext(context.Background())
}

func (i AaaaRecordArray) ToAaaaRecordArrayOutputWithContext(ctx context.Context) AaaaRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AaaaRecordArrayOutput)
}

// An AAAA record.
type AaaaRecordOutput struct{ *pulumi.OutputState }

func (AaaaRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AaaaRecord)(nil)).Elem()
}

func (o AaaaRecordOutput) ToAaaaRecordOutput() AaaaRecordOutput {
	return o
}

func (o AaaaRecordOutput) ToAaaaRecordOutputWithContext(ctx context.Context) AaaaRecordOutput {
	return o
}

// The IPv6 address of this AAAA record.
func (o AaaaRecordOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AaaaRecord) *string { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

type AaaaRecordArrayOutput struct{ *pulumi.OutputState }

func (AaaaRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AaaaRecord)(nil)).Elem()
}

func (o AaaaRecordArrayOutput) ToAaaaRecordArrayOutput() AaaaRecordArrayOutput {
	return o
}

func (o AaaaRecordArrayOutput) ToAaaaRecordArrayOutputWithContext(ctx context.Context) AaaaRecordArrayOutput {
	return o
}

func (o AaaaRecordArrayOutput) Index(i pulumi.IntInput) AaaaRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AaaaRecord {
		return vs[0].([]AaaaRecord)[vs[1].(int)]
	}).(AaaaRecordOutput)
}

// An AAAA record.
type AaaaRecordResponse struct {
	// The IPv6 address of this AAAA record.
	Ipv6Address *string `pulumi:"ipv6Address"`
}

// An AAAA record.
type AaaaRecordResponseOutput struct{ *pulumi.OutputState }

func (AaaaRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AaaaRecordResponse)(nil)).Elem()
}

func (o AaaaRecordResponseOutput) ToAaaaRecordResponseOutput() AaaaRecordResponseOutput {
	return o
}

func (o AaaaRecordResponseOutput) ToAaaaRecordResponseOutputWithContext(ctx context.Context) AaaaRecordResponseOutput {
	return o
}

// The IPv6 address of this AAAA record.
func (o AaaaRecordResponseOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AaaaRecordResponse) *string { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

type AaaaRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (AaaaRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AaaaRecordResponse)(nil)).Elem()
}

func (o AaaaRecordResponseArrayOutput) ToAaaaRecordResponseArrayOutput() AaaaRecordResponseArrayOutput {
	return o
}

func (o AaaaRecordResponseArrayOutput) ToAaaaRecordResponseArrayOutputWithContext(ctx context.Context) AaaaRecordResponseArrayOutput {
	return o
}

func (o AaaaRecordResponseArrayOutput) Index(i pulumi.IntInput) AaaaRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AaaaRecordResponse {
		return vs[0].([]AaaaRecordResponse)[vs[1].(int)]
	}).(AaaaRecordResponseOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponse struct {
	// Backend addresses.
	BackendAddresses []ApplicationGatewayBackendAddressResponse `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the backend address pool resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolResponseOutput) ToApplicationGatewayBackendAddressPoolResponseOutput() ApplicationGatewayBackendAddressPoolResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseOutput) ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseOutput {
	return o
}

// Backend addresses.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) BackendAddresses() ApplicationGatewayBackendAddressResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) []ApplicationGatewayBackendAddressResponse {
		return v.BackendAddresses
	}).(ApplicationGatewayBackendAddressResponseArrayOutput)
}

// Collection of references to IPs defined in network interfaces.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) []NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend address pool that is unique within an Application Gateway.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the backend address pool resource.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayBackendAddressPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) ToApplicationGatewayBackendAddressPoolResponseArrayOutput() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressPoolResponse {
		return vs[0].([]ApplicationGatewayBackendAddressPoolResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressPoolResponseOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponse struct {
	// Fully qualified domain name (FQDN).
	Fqdn *string `pulumi:"fqdn"`
	// IP address.
	IpAddress *string `pulumi:"ipAddress"`
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressResponseOutput) ToApplicationGatewayBackendAddressResponseOutput() ApplicationGatewayBackendAddressResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseOutput) ToApplicationGatewayBackendAddressResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseOutput {
	return o
}

// Fully qualified domain name (FQDN).
func (o ApplicationGatewayBackendAddressResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address.
func (o ApplicationGatewayBackendAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) ToApplicationGatewayBackendAddressResponseArrayOutput() ApplicationGatewayBackendAddressResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressResponse {
		return vs[0].([]ApplicationGatewayBackendAddressResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressResponseOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroup struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// ApplicationSecurityGroupInput is an input type that accepts ApplicationSecurityGroupArgs and ApplicationSecurityGroupOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupInput` via:
//
//	ApplicationSecurityGroupArgs{...}
type ApplicationSecurityGroupInput interface {
	pulumi.Input

	ToApplicationSecurityGroupOutput() ApplicationSecurityGroupOutput
	ToApplicationSecurityGroupOutputWithContext(context.Context) ApplicationSecurityGroupOutput
}

// An application security group in a resource group.
type ApplicationSecurityGroupArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ApplicationSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroup)(nil)).Elem()
}

func (i ApplicationSecurityGroupArgs) ToApplicationSecurityGroupOutput() ApplicationSecurityGroupOutput {
	return i.ToApplicationSecurityGroupOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupArgs) ToApplicationSecurityGroupOutputWithContext(ctx context.Context) ApplicationSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupOutput)
}

// ApplicationSecurityGroupArrayInput is an input type that accepts ApplicationSecurityGroupArray and ApplicationSecurityGroupArrayOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupArrayInput` via:
//
//	ApplicationSecurityGroupArray{ ApplicationSecurityGroupArgs{...} }
type ApplicationSecurityGroupArrayInput interface {
	pulumi.Input

	ToApplicationSecurityGroupArrayOutput() ApplicationSecurityGroupArrayOutput
	ToApplicationSecurityGroupArrayOutputWithContext(context.Context) ApplicationSecurityGroupArrayOutput
}

type ApplicationSecurityGroupArray []ApplicationSecurityGroupInput

func (ApplicationSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroup)(nil)).Elem()
}

func (i ApplicationSecurityGroupArray) ToApplicationSecurityGroupArrayOutput() ApplicationSecurityGroupArrayOutput {
	return i.ToApplicationSecurityGroupArrayOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupArray) ToApplicationSecurityGroupArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupArrayOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroup)(nil)).Elem()
}

func (o ApplicationSecurityGroupOutput) ToApplicationSecurityGroupOutput() ApplicationSecurityGroupOutput {
	return o
}

func (o ApplicationSecurityGroupOutput) ToApplicationSecurityGroupOutputWithContext(ctx context.Context) ApplicationSecurityGroupOutput {
	return o
}

// Resource ID.
func (o ApplicationSecurityGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ApplicationSecurityGroupOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroup) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o ApplicationSecurityGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationSecurityGroup) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ApplicationSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroup)(nil)).Elem()
}

func (o ApplicationSecurityGroupArrayOutput) ToApplicationSecurityGroupArrayOutput() ApplicationSecurityGroupArrayOutput {
	return o
}

func (o ApplicationSecurityGroupArrayOutput) ToApplicationSecurityGroupArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupArrayOutput {
	return o
}

func (o ApplicationSecurityGroupArrayOutput) Index(i pulumi.IntInput) ApplicationSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSecurityGroup {
		return vs[0].([]ApplicationSecurityGroup)[vs[1].(int)]
	}).(ApplicationSecurityGroupOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the application security group resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// An application security group in a resource group.
type ApplicationSecurityGroupResponseOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (o ApplicationSecurityGroupResponseOutput) ToApplicationSecurityGroupResponseOutput() ApplicationSecurityGroupResponseOutput {
	return o
}

func (o ApplicationSecurityGroupResponseOutput) ToApplicationSecurityGroupResponseOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationSecurityGroupResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationSecurityGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ApplicationSecurityGroupResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ApplicationSecurityGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the application security group resource.
func (o ApplicationSecurityGroupResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
func (o ApplicationSecurityGroupResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource tags.
func (o ApplicationSecurityGroupResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ApplicationSecurityGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationSecurityGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (o ApplicationSecurityGroupResponseArrayOutput) ToApplicationSecurityGroupResponseArrayOutput() ApplicationSecurityGroupResponseArrayOutput {
	return o
}

func (o ApplicationSecurityGroupResponseArrayOutput) ToApplicationSecurityGroupResponseArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseArrayOutput {
	return o
}

func (o ApplicationSecurityGroupResponseArrayOutput) Index(i pulumi.IntInput) ApplicationSecurityGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSecurityGroupResponse {
		return vs[0].([]ApplicationSecurityGroupResponse)[vs[1].(int)]
	}).(ApplicationSecurityGroupResponseOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolResponse struct {
	// An array of references to IP addresses defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of backend addresses.
	LoadBalancerBackendAddresses []LoadBalancerBackendAddressResponse `pulumi:"loadBalancerBackendAddresses"`
	// An array of references to load balancing rules that use this backend address pool.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// A reference to an outbound rule that uses this backend address pool.
	OutboundRule SubResourceResponse `pulumi:"outboundRule"`
	// An array of references to outbound rules that use this backend address pool.
	OutboundRules []SubResourceResponse `pulumi:"outboundRules"`
	// The provisioning state of the backend address pool resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Pool of backend IP addresses.
type BackendAddressPoolResponseOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolResponse)(nil)).Elem()
}

func (o BackendAddressPoolResponseOutput) ToBackendAddressPoolResponseOutput() BackendAddressPoolResponseOutput {
	return o
}

func (o BackendAddressPoolResponseOutput) ToBackendAddressPoolResponseOutputWithContext(ctx context.Context) BackendAddressPoolResponseOutput {
	return o
}

// An array of references to IP addresses defined in network interfaces.
func (o BackendAddressPoolResponseOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o BackendAddressPoolResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o BackendAddressPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of backend addresses.
func (o BackendAddressPoolResponseOutput) LoadBalancerBackendAddresses() LoadBalancerBackendAddressResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []LoadBalancerBackendAddressResponse {
		return v.LoadBalancerBackendAddresses
	}).(LoadBalancerBackendAddressResponseArrayOutput)
}

// An array of references to load balancing rules that use this backend address pool.
func (o BackendAddressPoolResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
func (o BackendAddressPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A reference to an outbound rule that uses this backend address pool.
func (o BackendAddressPoolResponseOutput) OutboundRule() SubResourceResponseOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) SubResourceResponse { return v.OutboundRule }).(SubResourceResponseOutput)
}

// An array of references to outbound rules that use this backend address pool.
func (o BackendAddressPoolResponseOutput) OutboundRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []SubResourceResponse { return v.OutboundRules }).(SubResourceResponseArrayOutput)
}

// The provisioning state of the backend address pool resource.
func (o BackendAddressPoolResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o BackendAddressPoolResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) string { return v.Type }).(pulumi.StringOutput)
}

type BackendAddressPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPoolResponse)(nil)).Elem()
}

func (o BackendAddressPoolResponseArrayOutput) ToBackendAddressPoolResponseArrayOutput() BackendAddressPoolResponseArrayOutput {
	return o
}

func (o BackendAddressPoolResponseArrayOutput) ToBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) BackendAddressPoolResponseArrayOutput {
	return o
}

func (o BackendAddressPoolResponseArrayOutput) Index(i pulumi.IntInput) BackendAddressPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendAddressPoolResponse {
		return vs[0].([]BackendAddressPoolResponse)[vs[1].(int)]
	}).(BackendAddressPoolResponseOutput)
}

// A CNAME record.
type CnameRecord struct {
	// The canonical name for this CNAME record.
	Cname *string `pulumi:"cname"`
}

// CnameRecordInput is an input type that accepts CnameRecordArgs and CnameRecordOutput values.
// You can construct a concrete instance of `CnameRecordInput` via:
//
//	CnameRecordArgs{...}
type CnameRecordInput interface {
	pulumi.Input

	ToCnameRecordOutput() CnameRecordOutput
	ToCnameRecordOutputWithContext(context.Context) CnameRecordOutput
}

// A CNAME record.
type CnameRecordArgs struct {
	// The canonical name for this CNAME record.
	Cname pulumi.StringPtrInput `pulumi:"cname"`
}

func (CnameRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CnameRecord)(nil)).Elem()
}

func (i CnameRecordArgs) ToCnameRecordOutput() CnameRecordOutput {
	return i.ToCnameRecordOutputWithContext(context.Background())
}

func (i CnameRecordArgs) ToCnameRecordOutputWithContext(ctx context.Context) CnameRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CnameRecordOutput)
}

func (i CnameRecordArgs) ToCnameRecordPtrOutput() CnameRecordPtrOutput {
	return i.ToCnameRecordPtrOutputWithContext(context.Background())
}

func (i CnameRecordArgs) ToCnameRecordPtrOutputWithContext(ctx context.Context) CnameRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CnameRecordOutput).ToCnameRecordPtrOutputWithContext(ctx)
}

// CnameRecordPtrInput is an input type that accepts CnameRecordArgs, CnameRecordPtr and CnameRecordPtrOutput values.
// You can construct a concrete instance of `CnameRecordPtrInput` via:
//
//	        CnameRecordArgs{...}
//
//	or:
//
//	        nil
type CnameRecordPtrInput interface {
	pulumi.Input

	ToCnameRecordPtrOutput() CnameRecordPtrOutput
	ToCnameRecordPtrOutputWithContext(context.Context) CnameRecordPtrOutput
}

type cnameRecordPtrType CnameRecordArgs

func CnameRecordPtr(v *CnameRecordArgs) CnameRecordPtrInput {
	return (*cnameRecordPtrType)(v)
}

func (*cnameRecordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CnameRecord)(nil)).Elem()
}

func (i *cnameRecordPtrType) ToCnameRecordPtrOutput() CnameRecordPtrOutput {
	return i.ToCnameRecordPtrOutputWithContext(context.Background())
}

func (i *cnameRecordPtrType) ToCnameRecordPtrOutputWithContext(ctx context.Context) CnameRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CnameRecordPtrOutput)
}

// A CNAME record.
type CnameRecordOutput struct{ *pulumi.OutputState }

func (CnameRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CnameRecord)(nil)).Elem()
}

func (o CnameRecordOutput) ToCnameRecordOutput() CnameRecordOutput {
	return o
}

func (o CnameRecordOutput) ToCnameRecordOutputWithContext(ctx context.Context) CnameRecordOutput {
	return o
}

func (o CnameRecordOutput) ToCnameRecordPtrOutput() CnameRecordPtrOutput {
	return o.ToCnameRecordPtrOutputWithContext(context.Background())
}

func (o CnameRecordOutput) ToCnameRecordPtrOutputWithContext(ctx context.Context) CnameRecordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CnameRecord) *CnameRecord {
		return &v
	}).(CnameRecordPtrOutput)
}

// The canonical name for this CNAME record.
func (o CnameRecordOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CnameRecord) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

type CnameRecordPtrOutput struct{ *pulumi.OutputState }

func (CnameRecordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CnameRecord)(nil)).Elem()
}

func (o CnameRecordPtrOutput) ToCnameRecordPtrOutput() CnameRecordPtrOutput {
	return o
}

func (o CnameRecordPtrOutput) ToCnameRecordPtrOutputWithContext(ctx context.Context) CnameRecordPtrOutput {
	return o
}

func (o CnameRecordPtrOutput) Elem() CnameRecordOutput {
	return o.ApplyT(func(v *CnameRecord) CnameRecord {
		if v != nil {
			return *v
		}
		var ret CnameRecord
		return ret
	}).(CnameRecordOutput)
}

// The canonical name for this CNAME record.
func (o CnameRecordPtrOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CnameRecord) *string {
		if v == nil {
			return nil
		}
		return v.Cname
	}).(pulumi.StringPtrOutput)
}

// A CNAME record.
type CnameRecordResponse struct {
	// The canonical name for this CNAME record.
	Cname *string `pulumi:"cname"`
}

// A CNAME record.
type CnameRecordResponseOutput struct{ *pulumi.OutputState }

func (CnameRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CnameRecordResponse)(nil)).Elem()
}

func (o CnameRecordResponseOutput) ToCnameRecordResponseOutput() CnameRecordResponseOutput {
	return o
}

func (o CnameRecordResponseOutput) ToCnameRecordResponseOutputWithContext(ctx context.Context) CnameRecordResponseOutput {
	return o
}

// The canonical name for this CNAME record.
func (o CnameRecordResponseOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CnameRecordResponse) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

type CnameRecordResponsePtrOutput struct{ *pulumi.OutputState }

func (CnameRecordResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CnameRecordResponse)(nil)).Elem()
}

func (o CnameRecordResponsePtrOutput) ToCnameRecordResponsePtrOutput() CnameRecordResponsePtrOutput {
	return o
}

func (o CnameRecordResponsePtrOutput) ToCnameRecordResponsePtrOutputWithContext(ctx context.Context) CnameRecordResponsePtrOutput {
	return o
}

func (o CnameRecordResponsePtrOutput) Elem() CnameRecordResponseOutput {
	return o.ApplyT(func(v *CnameRecordResponse) CnameRecordResponse {
		if v != nil {
			return *v
		}
		var ret CnameRecordResponse
		return ret
	}).(CnameRecordResponseOutput)
}

// The canonical name for this CNAME record.
func (o CnameRecordResponsePtrOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CnameRecordResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cname
	}).(pulumi.StringPtrOutput)
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormatResponse struct {
	// Fqdn that resolves to private endpoint ip address.
	Fqdn *string `pulumi:"fqdn"`
	// A list of private ip addresses of the private endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (CustomDnsConfigPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDnsConfigPropertiesFormatResponse)(nil)).Elem()
}

func (o CustomDnsConfigPropertiesFormatResponseOutput) ToCustomDnsConfigPropertiesFormatResponseOutput() CustomDnsConfigPropertiesFormatResponseOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatResponseOutput) ToCustomDnsConfigPropertiesFormatResponseOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatResponseOutput {
	return o
}

// Fqdn that resolves to private endpoint ip address.
func (o CustomDnsConfigPropertiesFormatResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDnsConfigPropertiesFormatResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// A list of private ip addresses of the private endpoint.
func (o CustomDnsConfigPropertiesFormatResponseOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomDnsConfigPropertiesFormatResponse) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type CustomDnsConfigPropertiesFormatResponseArrayOutput struct{ *pulumi.OutputState }

func (CustomDnsConfigPropertiesFormatResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDnsConfigPropertiesFormatResponse)(nil)).Elem()
}

func (o CustomDnsConfigPropertiesFormatResponseArrayOutput) ToCustomDnsConfigPropertiesFormatResponseArrayOutput() CustomDnsConfigPropertiesFormatResponseArrayOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatResponseArrayOutput) ToCustomDnsConfigPropertiesFormatResponseArrayOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatResponseArrayOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatResponseArrayOutput) Index(i pulumi.IntInput) CustomDnsConfigPropertiesFormatResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDnsConfigPropertiesFormatResponse {
		return vs[0].([]CustomDnsConfigPropertiesFormatResponse)[vs[1].(int)]
	}).(CustomDnsConfigPropertiesFormatResponseOutput)
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsResponse struct {
	// The DDoS custom policy associated with the public IP.
	DdosCustomPolicy *SubResourceResponse `pulumi:"ddosCustomPolicy"`
	// Enables DDoS protection on the public IP.
	ProtectedIP *bool `pulumi:"protectedIP"`
	// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
	ProtectionCoverage *string `pulumi:"protectionCoverage"`
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsResponseOutput struct{ *pulumi.OutputState }

func (DdosSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosSettingsResponse)(nil)).Elem()
}

func (o DdosSettingsResponseOutput) ToDdosSettingsResponseOutput() DdosSettingsResponseOutput {
	return o
}

func (o DdosSettingsResponseOutput) ToDdosSettingsResponseOutputWithContext(ctx context.Context) DdosSettingsResponseOutput {
	return o
}

// The DDoS custom policy associated with the public IP.
func (o DdosSettingsResponseOutput) DdosCustomPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *SubResourceResponse { return v.DdosCustomPolicy }).(SubResourceResponsePtrOutput)
}

// Enables DDoS protection on the public IP.
func (o DdosSettingsResponseOutput) ProtectedIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *bool { return v.ProtectedIP }).(pulumi.BoolPtrOutput)
}

// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
func (o DdosSettingsResponseOutput) ProtectionCoverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *string { return v.ProtectionCoverage }).(pulumi.StringPtrOutput)
}

type DdosSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DdosSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosSettingsResponse)(nil)).Elem()
}

func (o DdosSettingsResponsePtrOutput) ToDdosSettingsResponsePtrOutput() DdosSettingsResponsePtrOutput {
	return o
}

func (o DdosSettingsResponsePtrOutput) ToDdosSettingsResponsePtrOutputWithContext(ctx context.Context) DdosSettingsResponsePtrOutput {
	return o
}

func (o DdosSettingsResponsePtrOutput) Elem() DdosSettingsResponseOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) DdosSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DdosSettingsResponse
		return ret
	}).(DdosSettingsResponseOutput)
}

// The DDoS custom policy associated with the public IP.
func (o DdosSettingsResponsePtrOutput) DdosCustomPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.DdosCustomPolicy
	}).(SubResourceResponsePtrOutput)
}

// Enables DDoS protection on the public IP.
func (o DdosSettingsResponsePtrOutput) ProtectedIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ProtectedIP
	}).(pulumi.BoolPtrOutput)
}

// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
func (o DdosSettingsResponsePtrOutput) ProtectionCoverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionCoverage
	}).(pulumi.StringPtrOutput)
}

// Details the service to which the subnet is delegated.
type Delegation struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
	ServiceName *string `pulumi:"serviceName"`
}

// DelegationInput is an input type that accepts DelegationArgs and DelegationOutput values.
// You can construct a concrete instance of `DelegationInput` via:
//
//	DelegationArgs{...}
type DelegationInput interface {
	pulumi.Input

	ToDelegationOutput() DelegationOutput
	ToDelegationOutputWithContext(context.Context) DelegationOutput
}

// Details the service to which the subnet is delegated.
type DelegationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (DelegationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Delegation)(nil)).Elem()
}

func (i DelegationArgs) ToDelegationOutput() DelegationOutput {
	return i.ToDelegationOutputWithContext(context.Background())
}

func (i DelegationArgs) ToDelegationOutputWithContext(ctx context.Context) DelegationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationOutput)
}

// DelegationArrayInput is an input type that accepts DelegationArray and DelegationArrayOutput values.
// You can construct a concrete instance of `DelegationArrayInput` via:
//
//	DelegationArray{ DelegationArgs{...} }
type DelegationArrayInput interface {
	pulumi.Input

	ToDelegationArrayOutput() DelegationArrayOutput
	ToDelegationArrayOutputWithContext(context.Context) DelegationArrayOutput
}

type DelegationArray []DelegationInput

func (DelegationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Delegation)(nil)).Elem()
}

func (i DelegationArray) ToDelegationArrayOutput() DelegationArrayOutput {
	return i.ToDelegationArrayOutputWithContext(context.Background())
}

func (i DelegationArray) ToDelegationArrayOutputWithContext(ctx context.Context) DelegationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationArrayOutput)
}

// Details the service to which the subnet is delegated.
type DelegationOutput struct{ *pulumi.OutputState }

func (DelegationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Delegation)(nil)).Elem()
}

func (o DelegationOutput) ToDelegationOutput() DelegationOutput {
	return o
}

func (o DelegationOutput) ToDelegationOutputWithContext(ctx context.Context) DelegationOutput {
	return o
}

// Resource ID.
func (o DelegationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a subnet. This name can be used to access the resource.
func (o DelegationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
func (o DelegationOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type DelegationArrayOutput struct{ *pulumi.OutputState }

func (DelegationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Delegation)(nil)).Elem()
}

func (o DelegationArrayOutput) ToDelegationArrayOutput() DelegationArrayOutput {
	return o
}

func (o DelegationArrayOutput) ToDelegationArrayOutputWithContext(ctx context.Context) DelegationArrayOutput {
	return o
}

func (o DelegationArrayOutput) Index(i pulumi.IntInput) DelegationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Delegation {
		return vs[0].([]Delegation)[vs[1].(int)]
	}).(DelegationOutput)
}

// Details the service to which the subnet is delegated.
type DelegationResponse struct {
	// The actions permitted to the service upon delegation.
	Actions []string `pulumi:"actions"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the service delegation resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
	ServiceName *string `pulumi:"serviceName"`
}

// Details the service to which the subnet is delegated.
type DelegationResponseOutput struct{ *pulumi.OutputState }

func (DelegationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DelegationResponse)(nil)).Elem()
}

func (o DelegationResponseOutput) ToDelegationResponseOutput() DelegationResponseOutput {
	return o
}

func (o DelegationResponseOutput) ToDelegationResponseOutputWithContext(ctx context.Context) DelegationResponseOutput {
	return o
}

// The actions permitted to the service upon delegation.
func (o DelegationResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DelegationResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o DelegationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v DelegationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o DelegationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a subnet. This name can be used to access the resource.
func (o DelegationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the service delegation resource.
func (o DelegationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DelegationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
func (o DelegationResponseOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type DelegationResponseArrayOutput struct{ *pulumi.OutputState }

func (DelegationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DelegationResponse)(nil)).Elem()
}

func (o DelegationResponseArrayOutput) ToDelegationResponseArrayOutput() DelegationResponseArrayOutput {
	return o
}

func (o DelegationResponseArrayOutput) ToDelegationResponseArrayOutputWithContext(ctx context.Context) DelegationResponseArrayOutput {
	return o
}

func (o DelegationResponseArrayOutput) Index(i pulumi.IntInput) DelegationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DelegationResponse {
		return vs[0].([]DelegationResponse)[vs[1].(int)]
	}).(DelegationResponseOutput)
}

// Parameters that define the flow log format.
type FlowLogFormatParametersResponse struct {
	// The file type of flow log.
	Type *string `pulumi:"type"`
	// The version (revision) of the flow log.
	Version *int `pulumi:"version"`
}

// Defaults sets the appropriate defaults for FlowLogFormatParametersResponse
func (val *FlowLogFormatParametersResponse) Defaults() *FlowLogFormatParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Version == nil {
		version_ := 0
		tmp.Version = &version_
	}
	return &tmp
}

// Parameters that define the flow log format.
type FlowLogFormatParametersResponseOutput struct{ *pulumi.OutputState }

func (FlowLogFormatParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogFormatParametersResponse)(nil)).Elem()
}

func (o FlowLogFormatParametersResponseOutput) ToFlowLogFormatParametersResponseOutput() FlowLogFormatParametersResponseOutput {
	return o
}

func (o FlowLogFormatParametersResponseOutput) ToFlowLogFormatParametersResponseOutputWithContext(ctx context.Context) FlowLogFormatParametersResponseOutput {
	return o
}

// The file type of flow log.
func (o FlowLogFormatParametersResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLogFormatParametersResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The version (revision) of the flow log.
func (o FlowLogFormatParametersResponseOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FlowLogFormatParametersResponse) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type FlowLogFormatParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (FlowLogFormatParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLogFormatParametersResponse)(nil)).Elem()
}

func (o FlowLogFormatParametersResponsePtrOutput) ToFlowLogFormatParametersResponsePtrOutput() FlowLogFormatParametersResponsePtrOutput {
	return o
}

func (o FlowLogFormatParametersResponsePtrOutput) ToFlowLogFormatParametersResponsePtrOutputWithContext(ctx context.Context) FlowLogFormatParametersResponsePtrOutput {
	return o
}

func (o FlowLogFormatParametersResponsePtrOutput) Elem() FlowLogFormatParametersResponseOutput {
	return o.ApplyT(func(v *FlowLogFormatParametersResponse) FlowLogFormatParametersResponse {
		if v != nil {
			return *v
		}
		var ret FlowLogFormatParametersResponse
		return ret
	}).(FlowLogFormatParametersResponseOutput)
}

// The file type of flow log.
func (o FlowLogFormatParametersResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowLogFormatParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The version (revision) of the flow log.
func (o FlowLogFormatParametersResponsePtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlowLogFormatParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// A flow log resource.
type FlowLogResponse struct {
	// Flag to enable/disable flow logging.
	Enabled *bool `pulumi:"enabled"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Parameters that define the configuration of traffic analytics.
	FlowAnalyticsConfiguration *TrafficAnalyticsPropertiesResponse `pulumi:"flowAnalyticsConfiguration"`
	// Parameters that define the flow log format.
	Format *FlowLogFormatParametersResponse `pulumi:"format"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the flow log.
	ProvisioningState string `pulumi:"provisioningState"`
	// Parameters that define the retention policy for flow log.
	RetentionPolicy *RetentionPolicyParametersResponse `pulumi:"retentionPolicy"`
	// ID of the storage account which is used to store the flow log.
	StorageId string `pulumi:"storageId"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Guid of network security group to which flow log will be applied.
	TargetResourceGuid string `pulumi:"targetResourceGuid"`
	// ID of network security group to which flow log will be applied.
	TargetResourceId string `pulumi:"targetResourceId"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for FlowLogResponse
func (val *FlowLogResponse) Defaults() *FlowLogResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Format = tmp.Format.Defaults()

	tmp.RetentionPolicy = tmp.RetentionPolicy.Defaults()

	return &tmp
}

// A flow log resource.
type FlowLogResponseOutput struct{ *pulumi.OutputState }

func (FlowLogResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogResponse)(nil)).Elem()
}

func (o FlowLogResponseOutput) ToFlowLogResponseOutput() FlowLogResponseOutput {
	return o
}

func (o FlowLogResponseOutput) ToFlowLogResponseOutputWithContext(ctx context.Context) FlowLogResponseOutput {
	return o
}

// Flag to enable/disable flow logging.
func (o FlowLogResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o FlowLogResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o FlowLogResponseOutput) FlowAnalyticsConfiguration() TrafficAnalyticsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *TrafficAnalyticsPropertiesResponse { return v.FlowAnalyticsConfiguration }).(TrafficAnalyticsPropertiesResponsePtrOutput)
}

// Parameters that define the flow log format.
func (o FlowLogResponseOutput) Format() FlowLogFormatParametersResponsePtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *FlowLogFormatParametersResponse { return v.Format }).(FlowLogFormatParametersResponsePtrOutput)
}

// Resource ID.
func (o FlowLogResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o FlowLogResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o FlowLogResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the flow log.
func (o FlowLogResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Parameters that define the retention policy for flow log.
func (o FlowLogResponseOutput) RetentionPolicy() RetentionPolicyParametersResponsePtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *RetentionPolicyParametersResponse { return v.RetentionPolicy }).(RetentionPolicyParametersResponsePtrOutput)
}

// ID of the storage account which is used to store the flow log.
func (o FlowLogResponseOutput) StorageId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.StorageId }).(pulumi.StringOutput)
}

// Resource tags.
func (o FlowLogResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowLogResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Guid of network security group to which flow log will be applied.
func (o FlowLogResponseOutput) TargetResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.TargetResourceGuid }).(pulumi.StringOutput)
}

// ID of network security group to which flow log will be applied.
func (o FlowLogResponseOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.TargetResourceId }).(pulumi.StringOutput)
}

// Resource type.
func (o FlowLogResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.Type }).(pulumi.StringOutput)
}

type FlowLogResponseArrayOutput struct{ *pulumi.OutputState }

func (FlowLogResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowLogResponse)(nil)).Elem()
}

func (o FlowLogResponseArrayOutput) ToFlowLogResponseArrayOutput() FlowLogResponseArrayOutput {
	return o
}

func (o FlowLogResponseArrayOutput) ToFlowLogResponseArrayOutputWithContext(ctx context.Context) FlowLogResponseArrayOutput {
	return o
}

func (o FlowLogResponseArrayOutput) Index(i pulumi.IntInput) FlowLogResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowLogResponse {
		return vs[0].([]FlowLogResponse)[vs[1].(int)]
	}).(FlowLogResponseOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of references to inbound pools that use this frontend IP.
	InboundNatPools []SubResourceResponse `pulumi:"inboundNatPools"`
	// An array of references to inbound rules that use this frontend IP.
	InboundNatRules []SubResourceResponse `pulumi:"inboundNatRules"`
	// An array of references to load balancing rules that use this frontend IP.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// An array of references to outbound rules that use this frontend IP.
	OutboundRules []SubResourceResponse `pulumi:"outboundRules"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The Private IP allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the frontend IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the Public IP resource.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// The reference to the Public IP Prefix resource.
	PublicIPPrefix *SubResourceResponse `pulumi:"publicIPPrefix"`
	// The reference to the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// Type of the resource.
	Type string `pulumi:"type"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponseOutput() FrontendIPConfigurationResponseOutput {
	return o
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o FrontendIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of references to inbound pools that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) InboundNatPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.InboundNatPools }).(SubResourceResponseArrayOutput)
}

// An array of references to inbound rules that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) InboundNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.InboundNatRules }).(SubResourceResponseArrayOutput)
}

// An array of references to load balancing rules that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
func (o FrontendIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An array of references to outbound rules that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) OutboundRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.OutboundRules }).(SubResourceResponseArrayOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
func (o FrontendIPConfigurationResponseOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The Private IP allocation method.
func (o FrontendIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the frontend IP configuration resource.
func (o FrontendIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the Public IP resource.
func (o FrontendIPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// The reference to the Public IP Prefix resource.
func (o FrontendIPConfigurationResponseOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *SubResourceResponse { return v.PublicIPPrefix }).(SubResourceResponsePtrOutput)
}

// The reference to the subnet resource.
func (o FrontendIPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// Type of the resource.
func (o FrontendIPConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponsePtrOutput) ToFrontendIPConfigurationResponsePtrOutput() FrontendIPConfigurationResponsePtrOutput {
	return o
}

func (o FrontendIPConfigurationResponsePtrOutput) ToFrontendIPConfigurationResponsePtrOutputWithContext(ctx context.Context) FrontendIPConfigurationResponsePtrOutput {
	return o
}

func (o FrontendIPConfigurationResponsePtrOutput) Elem() FrontendIPConfigurationResponseOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) FrontendIPConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret FrontendIPConfigurationResponse
		return ret
	}).(FrontendIPConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o FrontendIPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// An array of references to inbound pools that use this frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) InboundNatPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.InboundNatPools
	}).(SubResourceResponseArrayOutput)
}

// An array of references to inbound rules that use this frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) InboundNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.InboundNatRules
	}).(SubResourceResponseArrayOutput)
}

// An array of references to load balancing rules that use this frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancingRules
	}).(SubResourceResponseArrayOutput)
}

// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
func (o FrontendIPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// An array of references to outbound rules that use this frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) OutboundRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.OutboundRules
	}).(SubResourceResponseArrayOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
func (o FrontendIPConfigurationResponsePtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The Private IP allocation method.
func (o FrontendIPConfigurationResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the frontend IP configuration resource.
func (o FrontendIPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference to the Public IP resource.
func (o FrontendIPConfigurationResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// The reference to the Public IP Prefix resource.
func (o FrontendIPConfigurationResponsePtrOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourceResponsePtrOutput)
}

// The reference to the subnet resource.
func (o FrontendIPConfigurationResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

// Type of the resource.
func (o FrontendIPConfigurationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationResponsePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// IP configuration profile child resource.
type IPConfigurationProfileResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the IP configuration profile resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the subnet resource to create a container network interface ip configuration.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// Sub Resource type.
	Type string `pulumi:"type"`
}

// IP configuration profile child resource.
type IPConfigurationProfileResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfileResponse)(nil)).Elem()
}

func (o IPConfigurationProfileResponseOutput) ToIPConfigurationProfileResponseOutput() IPConfigurationProfileResponseOutput {
	return o
}

func (o IPConfigurationProfileResponseOutput) ToIPConfigurationProfileResponseOutputWithContext(ctx context.Context) IPConfigurationProfileResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationProfileResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o IPConfigurationProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o IPConfigurationProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the IP configuration profile resource.
func (o IPConfigurationProfileResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the subnet resource to create a container network interface ip configuration.
func (o IPConfigurationProfileResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// Sub Resource type.
func (o IPConfigurationProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type IPConfigurationProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationProfileResponse)(nil)).Elem()
}

func (o IPConfigurationProfileResponseArrayOutput) ToIPConfigurationProfileResponseArrayOutput() IPConfigurationProfileResponseArrayOutput {
	return o
}

func (o IPConfigurationProfileResponseArrayOutput) ToIPConfigurationProfileResponseArrayOutputWithContext(ctx context.Context) IPConfigurationProfileResponseArrayOutput {
	return o
}

func (o IPConfigurationProfileResponseArrayOutput) Index(i pulumi.IntInput) IPConfigurationProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationProfileResponse {
		return vs[0].([]IPConfigurationProfileResponse)[vs[1].(int)]
	}).(IPConfigurationProfileResponseOutput)
}

// IP configuration.
type IPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the public IP resource.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// The reference to the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
}

// IP configuration.
type IPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponseOutput() IPConfigurationResponseOutput {
	return o
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponseOutputWithContext(ctx context.Context) IPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o IPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o IPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the IP configuration resource.
func (o IPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the public IP resource.
func (o IPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// The reference to the subnet resource.
func (o IPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

type IPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponsePtrOutput) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return o
}

func (o IPConfigurationResponsePtrOutput) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return o
}

func (o IPConfigurationResponsePtrOutput) Elem() IPConfigurationResponseOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) IPConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret IPConfigurationResponse
		return ret
	}).(IPConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o IPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o IPConfigurationResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the IP configuration resource.
func (o IPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference to the public IP resource.
func (o IPConfigurationResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// The reference to the subnet resource.
func (o IPConfigurationResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

type IPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponseArrayOutput) ToIPConfigurationResponseArrayOutput() IPConfigurationResponseArrayOutput {
	return o
}

func (o IPConfigurationResponseArrayOutput) ToIPConfigurationResponseArrayOutputWithContext(ctx context.Context) IPConfigurationResponseArrayOutput {
	return o
}

func (o IPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) IPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationResponse {
		return vs[0].([]IPConfigurationResponse)[vs[1].(int)]
	}).(IPConfigurationResponseOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponse struct {
	// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
	BackendIPConfiguration NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfiguration"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort *int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort *int `pulumi:"frontendPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference to the transport protocol used by the load balancing rule.
	Protocol *string `pulumi:"protocol"`
	// The provisioning state of the inbound NAT rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponseOutput struct{ *pulumi.OutputState }

func (InboundNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleResponse)(nil)).Elem()
}

func (o InboundNatRuleResponseOutput) ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput {
	return o
}

func (o InboundNatRuleResponseOutput) ToInboundNatRuleResponseOutputWithContext(ctx context.Context) InboundNatRuleResponseOutput {
	return o
}

// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
func (o InboundNatRuleResponseOutput) BackendIPConfiguration() NetworkInterfaceIPConfigurationResponseOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponseOutput)
}

// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
func (o InboundNatRuleResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatRuleResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleResponseOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatRuleResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
func (o InboundNatRuleResponseOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o InboundNatRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
func (o InboundNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference to the transport protocol used by the load balancing rule.
func (o InboundNatRuleResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The provisioning state of the inbound NAT rule resource.
func (o InboundNatRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o InboundNatRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type InboundNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleResponse)(nil)).Elem()
}

func (o InboundNatRuleResponseArrayOutput) ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput {
	return o
}

func (o InboundNatRuleResponseArrayOutput) ToInboundNatRuleResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleResponseArrayOutput {
	return o
}

func (o InboundNatRuleResponseArrayOutput) Index(i pulumi.IntInput) InboundNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatRuleResponse {
		return vs[0].([]InboundNatRuleResponse)[vs[1].(int)]
	}).(InboundNatRuleResponseOutput)
}

// Contains the IpTag associated with the object.
type IpTagResponse struct {
	// The IP tag type. Example: FirstPartyUsage.
	IpTagType *string `pulumi:"ipTagType"`
	// The value of the IP tag associated with the public IP. Example: SQL.
	Tag *string `pulumi:"tag"`
}

// Contains the IpTag associated with the object.
type IpTagResponseOutput struct{ *pulumi.OutputState }

func (IpTagResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTagResponse)(nil)).Elem()
}

func (o IpTagResponseOutput) ToIpTagResponseOutput() IpTagResponseOutput {
	return o
}

func (o IpTagResponseOutput) ToIpTagResponseOutputWithContext(ctx context.Context) IpTagResponseOutput {
	return o
}

// The IP tag type. Example: FirstPartyUsage.
func (o IpTagResponseOutput) IpTagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTagResponse) *string { return v.IpTagType }).(pulumi.StringPtrOutput)
}

// The value of the IP tag associated with the public IP. Example: SQL.
func (o IpTagResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTagResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IpTagResponseArrayOutput struct{ *pulumi.OutputState }

func (IpTagResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTagResponse)(nil)).Elem()
}

func (o IpTagResponseArrayOutput) ToIpTagResponseArrayOutput() IpTagResponseArrayOutput {
	return o
}

func (o IpTagResponseArrayOutput) ToIpTagResponseArrayOutputWithContext(ctx context.Context) IpTagResponseArrayOutput {
	return o
}

func (o IpTagResponseArrayOutput) Index(i pulumi.IntInput) IpTagResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpTagResponse {
		return vs[0].([]IpTagResponse)[vs[1].(int)]
	}).(IpTagResponseOutput)
}

// Load balancer backend addresses.
type LoadBalancerBackendAddressResponse struct {
	// IP Address belonging to the referenced virtual network.
	IpAddress *string `pulumi:"ipAddress"`
	// Name of the backend address.
	Name *string `pulumi:"name"`
	// Reference to IP address defined in network interfaces.
	NetworkInterfaceIPConfiguration SubResourceResponse `pulumi:"networkInterfaceIPConfiguration"`
	// Reference to an existing virtual network.
	VirtualNetwork *SubResourceResponse `pulumi:"virtualNetwork"`
}

// Load balancer backend addresses.
type LoadBalancerBackendAddressResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddressResponse)(nil)).Elem()
}

func (o LoadBalancerBackendAddressResponseOutput) ToLoadBalancerBackendAddressResponseOutput() LoadBalancerBackendAddressResponseOutput {
	return o
}

func (o LoadBalancerBackendAddressResponseOutput) ToLoadBalancerBackendAddressResponseOutputWithContext(ctx context.Context) LoadBalancerBackendAddressResponseOutput {
	return o
}

// IP Address belonging to the referenced virtual network.
func (o LoadBalancerBackendAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Name of the backend address.
func (o LoadBalancerBackendAddressResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to IP address defined in network interfaces.
func (o LoadBalancerBackendAddressResponseOutput) NetworkInterfaceIPConfiguration() SubResourceResponseOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) SubResourceResponse {
		return v.NetworkInterfaceIPConfiguration
	}).(SubResourceResponseOutput)
}

// Reference to an existing virtual network.
func (o LoadBalancerBackendAddressResponseOutput) VirtualNetwork() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *SubResourceResponse { return v.VirtualNetwork }).(SubResourceResponsePtrOutput)
}

type LoadBalancerBackendAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddressResponse)(nil)).Elem()
}

func (o LoadBalancerBackendAddressResponseArrayOutput) ToLoadBalancerBackendAddressResponseArrayOutput() LoadBalancerBackendAddressResponseArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressResponseArrayOutput) ToLoadBalancerBackendAddressResponseArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressResponseArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancerBackendAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerBackendAddressResponse {
		return vs[0].([]LoadBalancerBackendAddressResponse)[vs[1].(int)]
	}).(LoadBalancerBackendAddressResponseOutput)
}

// An MX record.
type MxRecord struct {
	// The domain name of the mail host for this MX record.
	Exchange *string `pulumi:"exchange"`
	// The preference value for this MX record.
	Preference *int `pulumi:"preference"`
}

// MxRecordInput is an input type that accepts MxRecordArgs and MxRecordOutput values.
// You can construct a concrete instance of `MxRecordInput` via:
//
//	MxRecordArgs{...}
type MxRecordInput interface {
	pulumi.Input

	ToMxRecordOutput() MxRecordOutput
	ToMxRecordOutputWithContext(context.Context) MxRecordOutput
}

// An MX record.
type MxRecordArgs struct {
	// The domain name of the mail host for this MX record.
	Exchange pulumi.StringPtrInput `pulumi:"exchange"`
	// The preference value for this MX record.
	Preference pulumi.IntPtrInput `pulumi:"preference"`
}

func (MxRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MxRecord)(nil)).Elem()
}

func (i MxRecordArgs) ToMxRecordOutput() MxRecordOutput {
	return i.ToMxRecordOutputWithContext(context.Background())
}

func (i MxRecordArgs) ToMxRecordOutputWithContext(ctx context.Context) MxRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MxRecordOutput)
}

// MxRecordArrayInput is an input type that accepts MxRecordArray and MxRecordArrayOutput values.
// You can construct a concrete instance of `MxRecordArrayInput` via:
//
//	MxRecordArray{ MxRecordArgs{...} }
type MxRecordArrayInput interface {
	pulumi.Input

	ToMxRecordArrayOutput() MxRecordArrayOutput
	ToMxRecordArrayOutputWithContext(context.Context) MxRecordArrayOutput
}

type MxRecordArray []MxRecordInput

func (MxRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MxRecord)(nil)).Elem()
}

func (i MxRecordArray) ToMxRecordArrayOutput() MxRecordArrayOutput {
	return i.ToMxRecordArrayOutputWithContext(context.Background())
}

func (i MxRecordArray) ToMxRecordArrayOutputWithContext(ctx context.Context) MxRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MxRecordArrayOutput)
}

// An MX record.
type MxRecordOutput struct{ *pulumi.OutputState }

func (MxRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MxRecord)(nil)).Elem()
}

func (o MxRecordOutput) ToMxRecordOutput() MxRecordOutput {
	return o
}

func (o MxRecordOutput) ToMxRecordOutputWithContext(ctx context.Context) MxRecordOutput {
	return o
}

// The domain name of the mail host for this MX record.
func (o MxRecordOutput) Exchange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MxRecord) *string { return v.Exchange }).(pulumi.StringPtrOutput)
}

// The preference value for this MX record.
func (o MxRecordOutput) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MxRecord) *int { return v.Preference }).(pulumi.IntPtrOutput)
}

type MxRecordArrayOutput struct{ *pulumi.OutputState }

func (MxRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MxRecord)(nil)).Elem()
}

func (o MxRecordArrayOutput) ToMxRecordArrayOutput() MxRecordArrayOutput {
	return o
}

func (o MxRecordArrayOutput) ToMxRecordArrayOutputWithContext(ctx context.Context) MxRecordArrayOutput {
	return o
}

func (o MxRecordArrayOutput) Index(i pulumi.IntInput) MxRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MxRecord {
		return vs[0].([]MxRecord)[vs[1].(int)]
	}).(MxRecordOutput)
}

// An MX record.
type MxRecordResponse struct {
	// The domain name of the mail host for this MX record.
	Exchange *string `pulumi:"exchange"`
	// The preference value for this MX record.
	Preference *int `pulumi:"preference"`
}

// An MX record.
type MxRecordResponseOutput struct{ *pulumi.OutputState }

func (MxRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MxRecordResponse)(nil)).Elem()
}

func (o MxRecordResponseOutput) ToMxRecordResponseOutput() MxRecordResponseOutput {
	return o
}

func (o MxRecordResponseOutput) ToMxRecordResponseOutputWithContext(ctx context.Context) MxRecordResponseOutput {
	return o
}

// The domain name of the mail host for this MX record.
func (o MxRecordResponseOutput) Exchange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MxRecordResponse) *string { return v.Exchange }).(pulumi.StringPtrOutput)
}

// The preference value for this MX record.
func (o MxRecordResponseOutput) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MxRecordResponse) *int { return v.Preference }).(pulumi.IntPtrOutput)
}

type MxRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (MxRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MxRecordResponse)(nil)).Elem()
}

func (o MxRecordResponseArrayOutput) ToMxRecordResponseArrayOutput() MxRecordResponseArrayOutput {
	return o
}

func (o MxRecordResponseArrayOutput) ToMxRecordResponseArrayOutputWithContext(ctx context.Context) MxRecordResponseArrayOutput {
	return o
}

func (o MxRecordResponseArrayOutput) Index(i pulumi.IntInput) MxRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MxRecordResponse {
		return vs[0].([]MxRecordResponse)[vs[1].(int)]
	}).(MxRecordResponseOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponse struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers []string `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers []string `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel *string `pulumi:"internalDnsNameLabel"`
	// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
	InternalDomainNameSuffix string `pulumi:"internalDomainNameSuffix"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn string `pulumi:"internalFqdn"`
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponseOutput() NetworkInterfaceDnsSettingsResponseOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponseOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponseOutput {
	return o
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsResponseOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) []string { return v.AppliedDnsServers }).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) *string { return v.InternalDnsNameLabel }).(pulumi.StringPtrOutput)
}

// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalDomainNameSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) string { return v.InternalDomainNameSuffix }).(pulumi.StringOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) string { return v.InternalFqdn }).(pulumi.StringOutput)
}

type NetworkInterfaceDnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) Elem() NetworkInterfaceDnsSettingsResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) NetworkInterfaceDnsSettingsResponse {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceDnsSettingsResponse
		return ret
	}).(NetworkInterfaceDnsSettingsResponseOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.AppliedDnsServers
	}).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalDnsNameLabel
	}).(pulumi.StringPtrOutput)
}

// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalDomainNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InternalDomainNameSuffix
	}).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InternalFqdn
	}).(pulumi.StringPtrOutput)
}

// PrivateLinkConnection properties for the network interface.
type NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse struct {
	// List of FQDNs for current private link connection.
	Fqdns []string `pulumi:"fqdns"`
	// The group ID for current private link connection.
	GroupId string `pulumi:"groupId"`
	// The required member name for current private link connection.
	RequiredMemberName string `pulumi:"requiredMemberName"`
}

// PrivateLinkConnection properties for the network interface.
type NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return o
}

// List of FQDNs for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) []string {
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// The group ID for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) string {
		return v.GroupId
	}).(pulumi.StringOutput)
}

// The required member name for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) RequiredMemberName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) string {
		return v.RequiredMemberName
	}).(pulumi.StringOutput)
}

type NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) Elem() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse
		return ret
	}).(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput)
}

// List of FQDNs for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// The group ID for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GroupId
	}).(pulumi.StringPtrOutput)
}

// The required member name for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) RequiredMemberName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RequiredMemberName
	}).(pulumi.StringPtrOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponse struct {
	// The reference to ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools []ApplicationGatewayBackendAddressPoolResponse `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"applicationSecurityGroups"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The reference to LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools []BackendAddressPoolResponse `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules []InboundNatRuleResponse `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Whether this is a primary customer address on the network interface.
	Primary *bool `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// PrivateLinkConnection properties for the network interface.
	PrivateLinkConnectionProperties NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse `pulumi:"privateLinkConnectionProperties"`
	// The provisioning state of the network interface IP configuration.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// The reference to Virtual Network Taps.
	VirtualNetworkTaps []VirtualNetworkTapResponse `pulumi:"virtualNetworkTaps"`
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponseOutput() NetworkInterfaceIPConfigurationResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseOutput {
	return o
}

// The reference to ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []ApplicationGatewayBackendAddressPoolResponse {
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationResponseOutput) ApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []ApplicationSecurityGroupResponse {
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reference to LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) LoadBalancerBackendAddressPools() BackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []BackendAddressPoolResponse {
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolResponseArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationResponseOutput) LoadBalancerInboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []InboundNatRuleResponse {
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// PrivateLinkConnection properties for the network interface.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateLinkConnectionProperties() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse {
		return v.PrivateLinkConnectionProperties
	}).(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput)
}

// The provisioning state of the network interface IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// The reference to Virtual Network Taps.
func (o NetworkInterfaceIPConfigurationResponseOutput) VirtualNetworkTaps() VirtualNetworkTapResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []VirtualNetworkTapResponse {
		return v.VirtualNetworkTaps
	}).(VirtualNetworkTapResponseArrayOutput)
}

type NetworkInterfaceIPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Elem() NetworkInterfaceIPConfigurationResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) NetworkInterfaceIPConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceIPConfigurationResponse
		return ret
	}).(NetworkInterfaceIPConfigurationResponseOutput)
}

// The reference to ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []ApplicationGatewayBackendAddressPoolResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []ApplicationSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The reference to LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) LoadBalancerBackendAddressPools() BackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []BackendAddressPoolResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolResponseArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) LoadBalancerInboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []InboundNatRuleResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// PrivateLinkConnection properties for the network interface.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateLinkConnectionProperties() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.PrivateLinkConnectionProperties
	}).(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput)
}

// The provisioning state of the network interface IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

// The reference to Virtual Network Taps.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) VirtualNetworkTaps() VirtualNetworkTapResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []VirtualNetworkTapResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkTaps
	}).(VirtualNetworkTapResponseArrayOutput)
}

type NetworkInterfaceIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) ToNetworkInterfaceIPConfigurationResponseArrayOutput() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceIPConfigurationResponse {
		return vs[0].([]NetworkInterfaceIPConfigurationResponse)[vs[1].(int)]
	}).(NetworkInterfaceIPConfigurationResponseOutput)
}

// A network interface in a resource group.
type NetworkInterfaceResponse struct {
	// The DNS settings in network interface.
	DnsSettings *NetworkInterfaceDnsSettingsResponse `pulumi:"dnsSettings"`
	// A reference to the dscp configuration to which the network interface is linked.
	DscpConfiguration SubResourceResponse `pulumi:"dscpConfiguration"`
	// If the network interface is accelerated networking enabled.
	EnableAcceleratedNetworking *bool `pulumi:"enableAcceleratedNetworking"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding *bool `pulumi:"enableIPForwarding"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// A list of references to linked BareMetal resources.
	HostedWorkloads []string `pulumi:"hostedWorkloads"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The MAC address of the network interface.
	MacAddress string `pulumi:"macAddress"`
	// Resource name.
	Name string `pulumi:"name"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupResponse `pulumi:"networkSecurityGroup"`
	// Whether this is a primary network interface on a virtual machine.
	Primary bool `pulumi:"primary"`
	// A reference to the private endpoint to which the network interface is linked.
	PrivateEndpoint PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// The provisioning state of the network interface resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// A list of TapConfigurations of the network interface.
	TapConfigurations []NetworkInterfaceTapConfigurationResponse `pulumi:"tapConfigurations"`
	// Resource type.
	Type string `pulumi:"type"`
	// The reference to a virtual machine.
	VirtualMachine SubResourceResponse `pulumi:"virtualMachine"`
}

// A network interface in a resource group.
type NetworkInterfaceResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput {
	return o
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutputWithContext(ctx context.Context) NetworkInterfaceResponseOutput {
	return o
}

// The DNS settings in network interface.
func (o NetworkInterfaceResponseOutput) DnsSettings() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *NetworkInterfaceDnsSettingsResponse { return v.DnsSettings }).(NetworkInterfaceDnsSettingsResponsePtrOutput)
}

// A reference to the dscp configuration to which the network interface is linked.
func (o NetworkInterfaceResponseOutput) DscpConfiguration() SubResourceResponseOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) SubResourceResponse { return v.DscpConfiguration }).(SubResourceResponseOutput)
}

// If the network interface is accelerated networking enabled.
func (o NetworkInterfaceResponseOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *bool { return v.EnableAcceleratedNetworking }).(pulumi.BoolPtrOutput)
}

// Indicates whether IP forwarding is enabled on this network interface.
func (o NetworkInterfaceResponseOutput) EnableIPForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *bool { return v.EnableIPForwarding }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// A list of references to linked BareMetal resources.
func (o NetworkInterfaceResponseOutput) HostedWorkloads() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) []string { return v.HostedWorkloads }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o NetworkInterfaceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A list of IPConfigurations of the network interface.
func (o NetworkInterfaceResponseOutput) IpConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) []NetworkInterfaceIPConfigurationResponse { return v.IpConfigurations }).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o NetworkInterfaceResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The MAC address of the network interface.
func (o NetworkInterfaceResponseOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.MacAddress }).(pulumi.StringOutput)
}

// Resource name.
func (o NetworkInterfaceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o NetworkInterfaceResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *NetworkSecurityGroupResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupResponsePtrOutput)
}

// Whether this is a primary network interface on a virtual machine.
func (o NetworkInterfaceResponseOutput) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) bool { return v.Primary }).(pulumi.BoolOutput)
}

// A reference to the private endpoint to which the network interface is linked.
func (o NetworkInterfaceResponseOutput) PrivateEndpoint() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponseOutput)
}

// The provisioning state of the network interface resource.
func (o NetworkInterfaceResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the network interface resource.
func (o NetworkInterfaceResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource tags.
func (o NetworkInterfaceResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A list of TapConfigurations of the network interface.
func (o NetworkInterfaceResponseOutput) TapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) []NetworkInterfaceTapConfigurationResponse {
		return v.TapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// Resource type.
func (o NetworkInterfaceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The reference to a virtual machine.
func (o NetworkInterfaceResponseOutput) VirtualMachine() SubResourceResponseOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) SubResourceResponse { return v.VirtualMachine }).(SubResourceResponseOutput)
}

type NetworkInterfaceResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseArrayOutput) ToNetworkInterfaceResponseArrayOutput() NetworkInterfaceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceResponseArrayOutput) ToNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceResponse {
		return vs[0].([]NetworkInterfaceResponse)[vs[1].(int)]
	}).(NetworkInterfaceResponseOutput)
}

// Tap configuration in a Network Interface.
type NetworkInterfaceTapConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the network interface tap configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Sub Resource type.
	Type string `pulumi:"type"`
	// The reference to the Virtual Network Tap resource.
	VirtualNetworkTap *VirtualNetworkTapResponse `pulumi:"virtualNetworkTap"`
}

// Tap configuration in a Network Interface.
type NetworkInterfaceTapConfigurationResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTapConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationResponseOutput) ToNetworkInterfaceTapConfigurationResponseOutput() NetworkInterfaceTapConfigurationResponseOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationResponseOutput) ToNetworkInterfaceTapConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceTapConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o NetworkInterfaceTapConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceTapConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the network interface tap configuration resource.
func (o NetworkInterfaceTapConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Sub Resource type.
func (o NetworkInterfaceTapConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The reference to the Virtual Network Tap resource.
func (o NetworkInterfaceTapConfigurationResponseOutput) VirtualNetworkTap() VirtualNetworkTapResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) *VirtualNetworkTapResponse {
		return v.VirtualNetworkTap
	}).(VirtualNetworkTapResponsePtrOutput)
}

type NetworkInterfaceTapConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceTapConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationResponseArrayOutput) ToNetworkInterfaceTapConfigurationResponseArrayOutput() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationResponseArrayOutput) ToNetworkInterfaceTapConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceTapConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceTapConfigurationResponse {
		return vs[0].([]NetworkInterfaceTapConfigurationResponse)[vs[1].(int)]
	}).(NetworkInterfaceTapConfigurationResponseOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroup struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// A collection of security rules of the network security group.
	SecurityRules []SecurityRule `pulumi:"securityRules"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// NetworkSecurityGroupInput is an input type that accepts NetworkSecurityGroupArgs and NetworkSecurityGroupOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupInput` via:
//
//	NetworkSecurityGroupArgs{...}
type NetworkSecurityGroupInput interface {
	pulumi.Input

	ToNetworkSecurityGroupOutput() NetworkSecurityGroupOutput
	ToNetworkSecurityGroupOutputWithContext(context.Context) NetworkSecurityGroupOutput
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// A collection of security rules of the network security group.
	SecurityRules SecurityRuleArrayInput `pulumi:"securityRules"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (NetworkSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroup)(nil)).Elem()
}

func (i NetworkSecurityGroupArgs) ToNetworkSecurityGroupOutput() NetworkSecurityGroupOutput {
	return i.ToNetworkSecurityGroupOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupArgs) ToNetworkSecurityGroupOutputWithContext(ctx context.Context) NetworkSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupOutput)
}

func (i NetworkSecurityGroupArgs) ToNetworkSecurityGroupPtrOutput() NetworkSecurityGroupPtrOutput {
	return i.ToNetworkSecurityGroupPtrOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupArgs) ToNetworkSecurityGroupPtrOutputWithContext(ctx context.Context) NetworkSecurityGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupOutput).ToNetworkSecurityGroupPtrOutputWithContext(ctx)
}

// NetworkSecurityGroupPtrInput is an input type that accepts NetworkSecurityGroupArgs, NetworkSecurityGroupPtr and NetworkSecurityGroupPtrOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupPtrInput` via:
//
//	        NetworkSecurityGroupArgs{...}
//
//	or:
//
//	        nil
type NetworkSecurityGroupPtrInput interface {
	pulumi.Input

	ToNetworkSecurityGroupPtrOutput() NetworkSecurityGroupPtrOutput
	ToNetworkSecurityGroupPtrOutputWithContext(context.Context) NetworkSecurityGroupPtrOutput
}

type networkSecurityGroupPtrType NetworkSecurityGroupArgs

func NetworkSecurityGroupPtr(v *NetworkSecurityGroupArgs) NetworkSecurityGroupPtrInput {
	return (*networkSecurityGroupPtrType)(v)
}

func (*networkSecurityGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroup)(nil)).Elem()
}

func (i *networkSecurityGroupPtrType) ToNetworkSecurityGroupPtrOutput() NetworkSecurityGroupPtrOutput {
	return i.ToNetworkSecurityGroupPtrOutputWithContext(context.Background())
}

func (i *networkSecurityGroupPtrType) ToNetworkSecurityGroupPtrOutputWithContext(ctx context.Context) NetworkSecurityGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupPtrOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroup)(nil)).Elem()
}

func (o NetworkSecurityGroupOutput) ToNetworkSecurityGroupOutput() NetworkSecurityGroupOutput {
	return o
}

func (o NetworkSecurityGroupOutput) ToNetworkSecurityGroupOutputWithContext(ctx context.Context) NetworkSecurityGroupOutput {
	return o
}

func (o NetworkSecurityGroupOutput) ToNetworkSecurityGroupPtrOutput() NetworkSecurityGroupPtrOutput {
	return o.ToNetworkSecurityGroupPtrOutputWithContext(context.Background())
}

func (o NetworkSecurityGroupOutput) ToNetworkSecurityGroupPtrOutputWithContext(ctx context.Context) NetworkSecurityGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkSecurityGroup) *NetworkSecurityGroup {
		return &v
	}).(NetworkSecurityGroupPtrOutput)
}

// Resource ID.
func (o NetworkSecurityGroupOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroup) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroup) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupOutput) SecurityRules() SecurityRuleArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroup) []SecurityRule { return v.SecurityRules }).(SecurityRuleArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityGroup) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type NetworkSecurityGroupPtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroup)(nil)).Elem()
}

func (o NetworkSecurityGroupPtrOutput) ToNetworkSecurityGroupPtrOutput() NetworkSecurityGroupPtrOutput {
	return o
}

func (o NetworkSecurityGroupPtrOutput) ToNetworkSecurityGroupPtrOutputWithContext(ctx context.Context) NetworkSecurityGroupPtrOutput {
	return o
}

func (o NetworkSecurityGroupPtrOutput) Elem() NetworkSecurityGroupOutput {
	return o.ApplyT(func(v *NetworkSecurityGroup) NetworkSecurityGroup {
		if v != nil {
			return *v
		}
		var ret NetworkSecurityGroup
		return ret
	}).(NetworkSecurityGroupOutput)
}

// Resource ID.
func (o NetworkSecurityGroupPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroup) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroup) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupPtrOutput) SecurityRules() SecurityRuleArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroup) []SecurityRule {
		if v == nil {
			return nil
		}
		return v.SecurityRules
	}).(SecurityRuleArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityGroup) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponse struct {
	// The default security rules of network security group.
	DefaultSecurityRules []SecurityRuleResponse `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// A collection of references to flow log resources.
	FlowLogs []FlowLogResponse `pulumi:"flowLogs"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// A collection of references to network interfaces.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// The provisioning state of the network security group resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules []SecurityRuleResponse `pulumi:"securityRules"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponseOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponseOutput() NetworkSecurityGroupResponseOutput {
	return o
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupResponseOutput {
	return o
}

// The default security rules of network security group.
func (o NetworkSecurityGroupResponseOutput) DefaultSecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SecurityRuleResponse { return v.DefaultSecurityRules }).(SecurityRuleResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// A collection of references to flow log resources.
func (o NetworkSecurityGroupResponseOutput) FlowLogs() FlowLogResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []FlowLogResponse { return v.FlowLogs }).(FlowLogResponseArrayOutput)
}

// Resource ID.
func (o NetworkSecurityGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

// The provisioning state of the network security group resource.
func (o NetworkSecurityGroupResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupResponseOutput) SecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SecurityRuleResponse { return v.SecurityRules }).(SecurityRuleResponseArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type NetworkSecurityGroupResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResponsePtrOutput) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupResponsePtrOutput) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupResponsePtrOutput) Elem() NetworkSecurityGroupResponseOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) NetworkSecurityGroupResponse {
		if v != nil {
			return *v
		}
		var ret NetworkSecurityGroupResponse
		return ret
	}).(NetworkSecurityGroupResponseOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupResponsePtrOutput) DefaultSecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SecurityRuleResponse {
		if v == nil {
			return nil
		}
		return v.DefaultSecurityRules
	}).(SecurityRuleResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// A collection of references to flow log resources.
func (o NetworkSecurityGroupResponsePtrOutput) FlowLogs() FlowLogResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []FlowLogResponse {
		if v == nil {
			return nil
		}
		return v.FlowLogs
	}).(FlowLogResponseArrayOutput)
}

// Resource ID.
func (o NetworkSecurityGroupResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityGroupResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupResponsePtrOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []NetworkInterfaceResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceResponseArrayOutput)
}

// The provisioning state of the network security group resource.
func (o NetworkSecurityGroupResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupResponsePtrOutput) SecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SecurityRuleResponse {
		if v == nil {
			return nil
		}
		return v.SecurityRules
	}).(SecurityRuleResponseArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityGroupResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilter struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress *string `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort *string `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol *string `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress *string `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort *string `pulumi:"remotePort"`
}

// Defaults sets the appropriate defaults for PacketCaptureFilter
func (val *PacketCaptureFilter) Defaults() *PacketCaptureFilter {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		protocol_ := "Any"
		tmp.Protocol = &protocol_
	}
	return &tmp
}

// PacketCaptureFilterInput is an input type that accepts PacketCaptureFilterArgs and PacketCaptureFilterOutput values.
// You can construct a concrete instance of `PacketCaptureFilterInput` via:
//
//	PacketCaptureFilterArgs{...}
type PacketCaptureFilterInput interface {
	pulumi.Input

	ToPacketCaptureFilterOutput() PacketCaptureFilterOutput
	ToPacketCaptureFilterOutputWithContext(context.Context) PacketCaptureFilterOutput
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterArgs struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress pulumi.StringPtrInput `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort pulumi.StringPtrInput `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress pulumi.StringPtrInput `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort pulumi.StringPtrInput `pulumi:"remotePort"`
}

// Defaults sets the appropriate defaults for PacketCaptureFilterArgs
func (val *PacketCaptureFilterArgs) Defaults() *PacketCaptureFilterArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		tmp.Protocol = pulumi.StringPtr("Any")
	}
	return &tmp
}
func (PacketCaptureFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilter)(nil)).Elem()
}

func (i PacketCaptureFilterArgs) ToPacketCaptureFilterOutput() PacketCaptureFilterOutput {
	return i.ToPacketCaptureFilterOutputWithContext(context.Background())
}

func (i PacketCaptureFilterArgs) ToPacketCaptureFilterOutputWithContext(ctx context.Context) PacketCaptureFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureFilterOutput)
}

// PacketCaptureFilterArrayInput is an input type that accepts PacketCaptureFilterArray and PacketCaptureFilterArrayOutput values.
// You can construct a concrete instance of `PacketCaptureFilterArrayInput` via:
//
//	PacketCaptureFilterArray{ PacketCaptureFilterArgs{...} }
type PacketCaptureFilterArrayInput interface {
	pulumi.Input

	ToPacketCaptureFilterArrayOutput() PacketCaptureFilterArrayOutput
	ToPacketCaptureFilterArrayOutputWithContext(context.Context) PacketCaptureFilterArrayOutput
}

type PacketCaptureFilterArray []PacketCaptureFilterInput

func (PacketCaptureFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilter)(nil)).Elem()
}

func (i PacketCaptureFilterArray) ToPacketCaptureFilterArrayOutput() PacketCaptureFilterArrayOutput {
	return i.ToPacketCaptureFilterArrayOutputWithContext(context.Background())
}

func (i PacketCaptureFilterArray) ToPacketCaptureFilterArrayOutputWithContext(ctx context.Context) PacketCaptureFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureFilterArrayOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilter)(nil)).Elem()
}

func (o PacketCaptureFilterOutput) ToPacketCaptureFilterOutput() PacketCaptureFilterOutput {
	return o
}

func (o PacketCaptureFilterOutput) ToPacketCaptureFilterOutputWithContext(ctx context.Context) PacketCaptureFilterOutput {
	return o
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) LocalIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.LocalIPAddress }).(pulumi.StringPtrOutput)
}

// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) LocalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.LocalPort }).(pulumi.StringPtrOutput)
}

// Protocol to be filtered on.
func (o PacketCaptureFilterOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) RemoteIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.RemoteIPAddress }).(pulumi.StringPtrOutput)
}

// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) RemotePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.RemotePort }).(pulumi.StringPtrOutput)
}

type PacketCaptureFilterArrayOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilter)(nil)).Elem()
}

func (o PacketCaptureFilterArrayOutput) ToPacketCaptureFilterArrayOutput() PacketCaptureFilterArrayOutput {
	return o
}

func (o PacketCaptureFilterArrayOutput) ToPacketCaptureFilterArrayOutputWithContext(ctx context.Context) PacketCaptureFilterArrayOutput {
	return o
}

func (o PacketCaptureFilterArrayOutput) Index(i pulumi.IntInput) PacketCaptureFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PacketCaptureFilter {
		return vs[0].([]PacketCaptureFilter)[vs[1].(int)]
	}).(PacketCaptureFilterOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterResponse struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress *string `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort *string `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol *string `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress *string `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort *string `pulumi:"remotePort"`
}

// Defaults sets the appropriate defaults for PacketCaptureFilterResponse
func (val *PacketCaptureFilterResponse) Defaults() *PacketCaptureFilterResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		protocol_ := "Any"
		tmp.Protocol = &protocol_
	}
	return &tmp
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterResponseOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilterResponse)(nil)).Elem()
}

func (o PacketCaptureFilterResponseOutput) ToPacketCaptureFilterResponseOutput() PacketCaptureFilterResponseOutput {
	return o
}

func (o PacketCaptureFilterResponseOutput) ToPacketCaptureFilterResponseOutputWithContext(ctx context.Context) PacketCaptureFilterResponseOutput {
	return o
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) LocalIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.LocalIPAddress }).(pulumi.StringPtrOutput)
}

// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) LocalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.LocalPort }).(pulumi.StringPtrOutput)
}

// Protocol to be filtered on.
func (o PacketCaptureFilterResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) RemoteIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.RemoteIPAddress }).(pulumi.StringPtrOutput)
}

// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) RemotePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.RemotePort }).(pulumi.StringPtrOutput)
}

type PacketCaptureFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilterResponse)(nil)).Elem()
}

func (o PacketCaptureFilterResponseArrayOutput) ToPacketCaptureFilterResponseArrayOutput() PacketCaptureFilterResponseArrayOutput {
	return o
}

func (o PacketCaptureFilterResponseArrayOutput) ToPacketCaptureFilterResponseArrayOutputWithContext(ctx context.Context) PacketCaptureFilterResponseArrayOutput {
	return o
}

func (o PacketCaptureFilterResponseArrayOutput) Index(i pulumi.IntInput) PacketCaptureFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PacketCaptureFilterResponse {
		return vs[0].([]PacketCaptureFilterResponse)[vs[1].(int)]
	}).(PacketCaptureFilterResponseOutput)
}

// The storage location for a packet capture session.
type PacketCaptureStorageLocation struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath *string `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId *string `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath *string `pulumi:"storagePath"`
}

// PacketCaptureStorageLocationInput is an input type that accepts PacketCaptureStorageLocationArgs and PacketCaptureStorageLocationOutput values.
// You can construct a concrete instance of `PacketCaptureStorageLocationInput` via:
//
//	PacketCaptureStorageLocationArgs{...}
type PacketCaptureStorageLocationInput interface {
	pulumi.Input

	ToPacketCaptureStorageLocationOutput() PacketCaptureStorageLocationOutput
	ToPacketCaptureStorageLocationOutputWithContext(context.Context) PacketCaptureStorageLocationOutput
}

// The storage location for a packet capture session.
type PacketCaptureStorageLocationArgs struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId pulumi.StringPtrInput `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath pulumi.StringPtrInput `pulumi:"storagePath"`
}

func (PacketCaptureStorageLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocation)(nil)).Elem()
}

func (i PacketCaptureStorageLocationArgs) ToPacketCaptureStorageLocationOutput() PacketCaptureStorageLocationOutput {
	return i.ToPacketCaptureStorageLocationOutputWithContext(context.Background())
}

func (i PacketCaptureStorageLocationArgs) ToPacketCaptureStorageLocationOutputWithContext(ctx context.Context) PacketCaptureStorageLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationOutput)
}

// The storage location for a packet capture session.
type PacketCaptureStorageLocationOutput struct{ *pulumi.OutputState }

func (PacketCaptureStorageLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocation)(nil)).Elem()
}

func (o PacketCaptureStorageLocationOutput) ToPacketCaptureStorageLocationOutput() PacketCaptureStorageLocationOutput {
	return o
}

func (o PacketCaptureStorageLocationOutput) ToPacketCaptureStorageLocationOutputWithContext(ctx context.Context) PacketCaptureStorageLocationOutput {
	return o
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
func (o PacketCaptureStorageLocationOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
func (o PacketCaptureStorageLocationOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *string { return v.StorageId }).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
func (o PacketCaptureStorageLocationOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *string { return v.StoragePath }).(pulumi.StringPtrOutput)
}

// The storage location for a packet capture session.
type PacketCaptureStorageLocationResponse struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath *string `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId *string `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath *string `pulumi:"storagePath"`
}

// The storage location for a packet capture session.
type PacketCaptureStorageLocationResponseOutput struct{ *pulumi.OutputState }

func (PacketCaptureStorageLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocationResponse)(nil)).Elem()
}

func (o PacketCaptureStorageLocationResponseOutput) ToPacketCaptureStorageLocationResponseOutput() PacketCaptureStorageLocationResponseOutput {
	return o
}

func (o PacketCaptureStorageLocationResponseOutput) ToPacketCaptureStorageLocationResponseOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponseOutput {
	return o
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
func (o PacketCaptureStorageLocationResponseOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
func (o PacketCaptureStorageLocationResponseOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *string { return v.StorageId }).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
func (o PacketCaptureStorageLocationResponseOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *string { return v.StoragePath }).(pulumi.StringPtrOutput)
}

// Private endpoint resource.
type PrivateEndpointResponse struct {
	// An array of custom dns configurations.
	CustomDnsConfigs []CustomDnsConfigPropertiesFormatResponse `pulumi:"customDnsConfigs"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
	ManualPrivateLinkServiceConnections []PrivateLinkServiceConnectionResponse `pulumi:"manualPrivateLinkServiceConnections"`
	// Resource name.
	Name string `pulumi:"name"`
	// An array of references to the network interfaces created for this private endpoint.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// A grouping of information about the connection to the remote resource.
	PrivateLinkServiceConnections []PrivateLinkServiceConnectionResponse `pulumi:"privateLinkServiceConnections"`
	// The provisioning state of the private endpoint resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The ID of the subnet from which the private IP will be allocated.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Private endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// An array of custom dns configurations.
func (o PrivateEndpointResponseOutput) CustomDnsConfigs() CustomDnsConfigPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []CustomDnsConfigPropertiesFormatResponse { return v.CustomDnsConfigs }).(CustomDnsConfigPropertiesFormatResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateEndpointResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o PrivateEndpointResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
func (o PrivateEndpointResponseOutput) ManualPrivateLinkServiceConnections() PrivateLinkServiceConnectionResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []PrivateLinkServiceConnectionResponse {
		return v.ManualPrivateLinkServiceConnections
	}).(PrivateLinkServiceConnectionResponseArrayOutput)
}

// Resource name.
func (o PrivateEndpointResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Name }).(pulumi.StringOutput)
}

// An array of references to the network interfaces created for this private endpoint.
func (o PrivateEndpointResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

// A grouping of information about the connection to the remote resource.
func (o PrivateEndpointResponseOutput) PrivateLinkServiceConnections() PrivateLinkServiceConnectionResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []PrivateLinkServiceConnectionResponse {
		return v.PrivateLinkServiceConnections
	}).(PrivateLinkServiceConnectionResponseArrayOutput)
}

// The provisioning state of the private endpoint resource.
func (o PrivateEndpointResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The ID of the subnet from which the private IP will be allocated.
func (o PrivateEndpointResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// Resource tags.
func (o PrivateEndpointResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o PrivateEndpointResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseArrayOutput) ToPrivateEndpointResponseArrayOutput() PrivateEndpointResponseArrayOutput {
	return o
}

func (o PrivateEndpointResponseArrayOutput) ToPrivateEndpointResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointResponseArrayOutput {
	return o
}

func (o PrivateEndpointResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointResponse {
		return vs[0].([]PrivateEndpointResponse)[vs[1].(int)]
	}).(PrivateEndpointResponseOutput)
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnectionResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
	GroupIds []string `pulumi:"groupIds"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// A collection of read-only information about the state of the connection to the remote resource.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The resource id of private link service.
	PrivateLinkServiceId *string `pulumi:"privateLinkServiceId"`
	// The provisioning state of the private link service connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
	RequestMessage *string `pulumi:"requestMessage"`
	// The resource type.
	Type string `pulumi:"type"`
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionResponseOutput) ToPrivateLinkServiceConnectionResponseOutput() PrivateLinkServiceConnectionResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionResponseOutput) ToPrivateLinkServiceConnectionResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateLinkServiceConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
func (o PrivateLinkServiceConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o PrivateLinkServiceConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PrivateLinkServiceConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A collection of read-only information about the state of the connection to the remote resource.
func (o PrivateLinkServiceConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// The resource id of private link service.
func (o PrivateLinkServiceConnectionResponseOutput) PrivateLinkServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.PrivateLinkServiceId }).(pulumi.StringPtrOutput)
}

// The provisioning state of the private link service connection resource.
func (o PrivateLinkServiceConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
func (o PrivateLinkServiceConnectionResponseOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// The resource type.
func (o PrivateLinkServiceConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateLinkServiceConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceConnectionResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionResponseArrayOutput) ToPrivateLinkServiceConnectionResponseArrayOutput() PrivateLinkServiceConnectionResponseArrayOutput {
	return o
}

func (o PrivateLinkServiceConnectionResponseArrayOutput) ToPrivateLinkServiceConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionResponseArrayOutput {
	return o
}

func (o PrivateLinkServiceConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateLinkServiceConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkServiceConnectionResponse {
		return vs[0].([]PrivateLinkServiceConnectionResponse)[vs[1].(int)]
	}).(PrivateLinkServiceConnectionResponseOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionStateResponse
		return ret
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// A PTR record.
type PtrRecord struct {
	// The PTR target domain name for this PTR record.
	Ptrdname *string `pulumi:"ptrdname"`
}

// PtrRecordInput is an input type that accepts PtrRecordArgs and PtrRecordOutput values.
// You can construct a concrete instance of `PtrRecordInput` via:
//
//	PtrRecordArgs{...}
type PtrRecordInput interface {
	pulumi.Input

	ToPtrRecordOutput() PtrRecordOutput
	ToPtrRecordOutputWithContext(context.Context) PtrRecordOutput
}

// A PTR record.
type PtrRecordArgs struct {
	// The PTR target domain name for this PTR record.
	Ptrdname pulumi.StringPtrInput `pulumi:"ptrdname"`
}

func (PtrRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PtrRecord)(nil)).Elem()
}

func (i PtrRecordArgs) ToPtrRecordOutput() PtrRecordOutput {
	return i.ToPtrRecordOutputWithContext(context.Background())
}

func (i PtrRecordArgs) ToPtrRecordOutputWithContext(ctx context.Context) PtrRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PtrRecordOutput)
}

// PtrRecordArrayInput is an input type that accepts PtrRecordArray and PtrRecordArrayOutput values.
// You can construct a concrete instance of `PtrRecordArrayInput` via:
//
//	PtrRecordArray{ PtrRecordArgs{...} }
type PtrRecordArrayInput interface {
	pulumi.Input

	ToPtrRecordArrayOutput() PtrRecordArrayOutput
	ToPtrRecordArrayOutputWithContext(context.Context) PtrRecordArrayOutput
}

type PtrRecordArray []PtrRecordInput

func (PtrRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PtrRecord)(nil)).Elem()
}

func (i PtrRecordArray) ToPtrRecordArrayOutput() PtrRecordArrayOutput {
	return i.ToPtrRecordArrayOutputWithContext(context.Background())
}

func (i PtrRecordArray) ToPtrRecordArrayOutputWithContext(ctx context.Context) PtrRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PtrRecordArrayOutput)
}

// A PTR record.
type PtrRecordOutput struct{ *pulumi.OutputState }

func (PtrRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PtrRecord)(nil)).Elem()
}

func (o PtrRecordOutput) ToPtrRecordOutput() PtrRecordOutput {
	return o
}

func (o PtrRecordOutput) ToPtrRecordOutputWithContext(ctx context.Context) PtrRecordOutput {
	return o
}

// The PTR target domain name for this PTR record.
func (o PtrRecordOutput) Ptrdname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PtrRecord) *string { return v.Ptrdname }).(pulumi.StringPtrOutput)
}

type PtrRecordArrayOutput struct{ *pulumi.OutputState }

func (PtrRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PtrRecord)(nil)).Elem()
}

func (o PtrRecordArrayOutput) ToPtrRecordArrayOutput() PtrRecordArrayOutput {
	return o
}

func (o PtrRecordArrayOutput) ToPtrRecordArrayOutputWithContext(ctx context.Context) PtrRecordArrayOutput {
	return o
}

func (o PtrRecordArrayOutput) Index(i pulumi.IntInput) PtrRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PtrRecord {
		return vs[0].([]PtrRecord)[vs[1].(int)]
	}).(PtrRecordOutput)
}

// A PTR record.
type PtrRecordResponse struct {
	// The PTR target domain name for this PTR record.
	Ptrdname *string `pulumi:"ptrdname"`
}

// A PTR record.
type PtrRecordResponseOutput struct{ *pulumi.OutputState }

func (PtrRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PtrRecordResponse)(nil)).Elem()
}

func (o PtrRecordResponseOutput) ToPtrRecordResponseOutput() PtrRecordResponseOutput {
	return o
}

func (o PtrRecordResponseOutput) ToPtrRecordResponseOutputWithContext(ctx context.Context) PtrRecordResponseOutput {
	return o
}

// The PTR target domain name for this PTR record.
func (o PtrRecordResponseOutput) Ptrdname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PtrRecordResponse) *string { return v.Ptrdname }).(pulumi.StringPtrOutput)
}

type PtrRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (PtrRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PtrRecordResponse)(nil)).Elem()
}

func (o PtrRecordResponseArrayOutput) ToPtrRecordResponseArrayOutput() PtrRecordResponseArrayOutput {
	return o
}

func (o PtrRecordResponseArrayOutput) ToPtrRecordResponseArrayOutputWithContext(ctx context.Context) PtrRecordResponseArrayOutput {
	return o
}

func (o PtrRecordResponseArrayOutput) Index(i pulumi.IntInput) PtrRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PtrRecordResponse {
		return vs[0].([]PtrRecordResponse)[vs[1].(int)]
	}).(PtrRecordResponseOutput)
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettingsResponse struct {
	// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn *string `pulumi:"fqdn"`
	// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn *string `pulumi:"reverseFqdn"`
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponseOutput() PublicIPAddressDnsSettingsResponseOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponseOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponseOutput {
	return o
}

// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsResponseOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsResponseOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.ReverseFqdn }).(pulumi.StringPtrOutput)
}

type PublicIPAddressDnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) Elem() PublicIPAddressDnsSettingsResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) PublicIPAddressDnsSettingsResponse {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressDnsSettingsResponse
		return ret
	}).(PublicIPAddressDnsSettingsResponseOutput)
}

// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReverseFqdn
	}).(pulumi.StringPtrOutput)
}

// Public IP address resource.
type PublicIPAddressResponse struct {
	// The DDoS protection custom policy associated with the public IP address.
	DdosSettings *DdosSettingsResponse `pulumi:"ddosSettings"`
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings *PublicIPAddressDnsSettingsResponse `pulumi:"dnsSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress *string `pulumi:"ipAddress"`
	// The IP configuration associated with the public IP address.
	IpConfiguration IPConfigurationResponse `pulumi:"ipConfiguration"`
	// The list of tags associated with the public IP address.
	IpTags []IpTagResponse `pulumi:"ipTags"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the public IP address resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The public IP address version.
	PublicIPAddressVersion *string `pulumi:"publicIPAddressVersion"`
	// The public IP address allocation method.
	PublicIPAllocationMethod *string `pulumi:"publicIPAllocationMethod"`
	// The Public IP Prefix this Public IP Address should be allocated from.
	PublicIPPrefix *SubResourceResponse `pulumi:"publicIPPrefix"`
	// The resource GUID property of the public IP address resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// The public IP address SKU.
	Sku *PublicIPAddressSkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// Public IP address resource.
type PublicIPAddressResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResponse)(nil)).Elem()
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponseOutput() PublicIPAddressResponseOutput {
	return o
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponseOutputWithContext(ctx context.Context) PublicIPAddressResponseOutput {
	return o
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressResponseOutput) DdosSettings() DdosSettingsResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *DdosSettingsResponse { return v.DdosSettings }).(DdosSettingsResponsePtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressResponseOutput) DnsSettings() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressDnsSettingsResponse { return v.DnsSettings }).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o PublicIPAddressResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The IP configuration associated with the public IP address.
func (o PublicIPAddressResponseOutput) IpConfiguration() IPConfigurationResponseOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) IPConfigurationResponse { return v.IpConfiguration }).(IPConfigurationResponseOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressResponseOutput) IpTags() IpTagResponseArrayOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) []IpTagResponse { return v.IpTags }).(IpTagResponseArrayOutput)
}

// Resource location.
func (o PublicIPAddressResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPAddressResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the public IP address resource.
func (o PublicIPAddressResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The public IP address version.
func (o PublicIPAddressResponseOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.PublicIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The public IP address allocation method.
func (o PublicIPAddressResponseOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.PublicIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressResponseOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *SubResourceResponse { return v.PublicIPPrefix }).(SubResourceResponsePtrOutput)
}

// The resource GUID property of the public IP address resource.
func (o PublicIPAddressResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The public IP address SKU.
func (o PublicIPAddressResponseOutput) Sku() PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressSkuResponse { return v.Sku }).(PublicIPAddressSkuResponsePtrOutput)
}

// Resource tags.
func (o PublicIPAddressResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPAddressResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type PublicIPAddressResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressResponse)(nil)).Elem()
}

func (o PublicIPAddressResponsePtrOutput) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return o
}

func (o PublicIPAddressResponsePtrOutput) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return o
}

func (o PublicIPAddressResponsePtrOutput) Elem() PublicIPAddressResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) PublicIPAddressResponse {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressResponse
		return ret
	}).(PublicIPAddressResponseOutput)
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) DdosSettings() DdosSettingsResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *DdosSettingsResponse {
		if v == nil {
			return nil
		}
		return v.DdosSettings
	}).(DdosSettingsResponsePtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) DnsSettings() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressDnsSettingsResponse {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o PublicIPAddressResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The IP configuration associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) IpConfiguration() IPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *IPConfigurationResponse {
		if v == nil {
			return nil
		}
		return &v.IpConfiguration
	}).(IPConfigurationResponsePtrOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) IpTags() IpTagResponseArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) []IpTagResponse {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(IpTagResponseArrayOutput)
}

// Resource location.
func (o PublicIPAddressResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPAddressResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The public IP address version.
func (o PublicIPAddressResponsePtrOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The public IP address allocation method.
func (o PublicIPAddressResponsePtrOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressResponsePtrOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourceResponsePtrOutput)
}

// The resource GUID property of the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressResponsePtrOutput) Sku() PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressSkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(PublicIPAddressSkuResponsePtrOutput)
}

// Resource tags.
func (o PublicIPAddressResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPAddressResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressResponsePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// SKU of a public IP address.
type PublicIPAddressSkuResponse struct {
	// Name of a public IP address SKU.
	Name *string `pulumi:"name"`
}

// SKU of a public IP address.
type PublicIPAddressSkuResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSkuResponse)(nil)).Elem()
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponseOutput() PublicIPAddressSkuResponseOutput {
	return o
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponseOutputWithContext(ctx context.Context) PublicIPAddressSkuResponseOutput {
	return o
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PublicIPAddressSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSkuResponse)(nil)).Elem()
}

func (o PublicIPAddressSkuResponsePtrOutput) ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput {
	return o
}

func (o PublicIPAddressSkuResponsePtrOutput) ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuResponsePtrOutput {
	return o
}

func (o PublicIPAddressSkuResponsePtrOutput) Elem() PublicIPAddressSkuResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) PublicIPAddressSkuResponse {
		if v != nil {
			return *v
		}
		var ret PublicIPAddressSkuResponse
		return ret
	}).(PublicIPAddressSkuResponseOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Link to the external resource.
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the resource navigation link resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponseOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLinkResponse)(nil)).Elem()
}

func (o ResourceNavigationLinkResponseOutput) ToResourceNavigationLinkResponseOutput() ResourceNavigationLinkResponseOutput {
	return o
}

func (o ResourceNavigationLinkResponseOutput) ToResourceNavigationLinkResponseOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ResourceNavigationLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ResourceNavigationLinkResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Link to the external resource.
func (o ResourceNavigationLinkResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ResourceNavigationLinkResponseOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ResourceNavigationLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource navigation link resource.
func (o ResourceNavigationLinkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o ResourceNavigationLinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ResourceNavigationLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLinkResponse)(nil)).Elem()
}

func (o ResourceNavigationLinkResponseArrayOutput) ToResourceNavigationLinkResponseArrayOutput() ResourceNavigationLinkResponseArrayOutput {
	return o
}

func (o ResourceNavigationLinkResponseArrayOutput) ToResourceNavigationLinkResponseArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseArrayOutput {
	return o
}

func (o ResourceNavigationLinkResponseArrayOutput) Index(i pulumi.IntInput) ResourceNavigationLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceNavigationLinkResponse {
		return vs[0].([]ResourceNavigationLinkResponse)[vs[1].(int)]
	}).(ResourceNavigationLinkResponseOutput)
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersResponse struct {
	// Number of days to retain flow log records.
	Days *int `pulumi:"days"`
	// Flag to enable/disable retention.
	Enabled *bool `pulumi:"enabled"`
}

// Defaults sets the appropriate defaults for RetentionPolicyParametersResponse
func (val *RetentionPolicyParametersResponse) Defaults() *RetentionPolicyParametersResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Days == nil {
		days_ := 0
		tmp.Days = &days_
	}
	if tmp.Enabled == nil {
		enabled_ := false
		tmp.Enabled = &enabled_
	}
	return &tmp
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersResponseOutput struct{ *pulumi.OutputState }

func (RetentionPolicyParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyParametersResponse)(nil)).Elem()
}

func (o RetentionPolicyParametersResponseOutput) ToRetentionPolicyParametersResponseOutput() RetentionPolicyParametersResponseOutput {
	return o
}

func (o RetentionPolicyParametersResponseOutput) ToRetentionPolicyParametersResponseOutputWithContext(ctx context.Context) RetentionPolicyParametersResponseOutput {
	return o
}

// Number of days to retain flow log records.
func (o RetentionPolicyParametersResponseOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParametersResponse) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Flag to enable/disable retention.
func (o RetentionPolicyParametersResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParametersResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type RetentionPolicyParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (RetentionPolicyParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyParametersResponse)(nil)).Elem()
}

func (o RetentionPolicyParametersResponsePtrOutput) ToRetentionPolicyParametersResponsePtrOutput() RetentionPolicyParametersResponsePtrOutput {
	return o
}

func (o RetentionPolicyParametersResponsePtrOutput) ToRetentionPolicyParametersResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyParametersResponsePtrOutput {
	return o
}

func (o RetentionPolicyParametersResponsePtrOutput) Elem() RetentionPolicyParametersResponseOutput {
	return o.ApplyT(func(v *RetentionPolicyParametersResponse) RetentionPolicyParametersResponse {
		if v != nil {
			return *v
		}
		var ret RetentionPolicyParametersResponse
		return ret
	}).(RetentionPolicyParametersResponseOutput)
}

// Number of days to retain flow log records.
func (o RetentionPolicyParametersResponsePtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Flag to enable/disable retention.
func (o RetentionPolicyParametersResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyParametersResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Route resource.
type Route struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType string `pulumi:"nextHopType"`
}

// RouteInput is an input type that accepts RouteArgs and RouteOutput values.
// You can construct a concrete instance of `RouteInput` via:
//
//	RouteArgs{...}
type RouteInput interface {
	pulumi.Input

	ToRouteOutput() RouteOutput
	ToRouteOutputWithContext(context.Context) RouteOutput
}

// Route resource.
type RouteArgs struct {
	// The destination CIDR to which the route applies.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
}

func (RouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Route)(nil)).Elem()
}

func (i RouteArgs) ToRouteOutput() RouteOutput {
	return i.ToRouteOutputWithContext(context.Background())
}

func (i RouteArgs) ToRouteOutputWithContext(ctx context.Context) RouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteOutput)
}

// RouteArrayInput is an input type that accepts RouteArray and RouteArrayOutput values.
// You can construct a concrete instance of `RouteArrayInput` via:
//
//	RouteArray{ RouteArgs{...} }
type RouteArrayInput interface {
	pulumi.Input

	ToRouteArrayOutput() RouteArrayOutput
	ToRouteArrayOutputWithContext(context.Context) RouteArrayOutput
}

type RouteArray []RouteInput

func (RouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Route)(nil)).Elem()
}

func (i RouteArray) ToRouteArrayOutput() RouteArrayOutput {
	return i.ToRouteArrayOutputWithContext(context.Background())
}

func (i RouteArray) ToRouteArrayOutputWithContext(ctx context.Context) RouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteArrayOutput)
}

// Route resource.
type RouteOutput struct{ *pulumi.OutputState }

func (RouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Route)(nil)).Elem()
}

func (o RouteOutput) ToRouteOutput() RouteOutput {
	return o
}

func (o RouteOutput) ToRouteOutputWithContext(ctx context.Context) RouteOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to.
func (o RouteOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v Route) string { return v.NextHopType }).(pulumi.StringOutput)
}

type RouteArrayOutput struct{ *pulumi.OutputState }

func (RouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Route)(nil)).Elem()
}

func (o RouteArrayOutput) ToRouteArrayOutput() RouteArrayOutput {
	return o
}

func (o RouteArrayOutput) ToRouteArrayOutputWithContext(ctx context.Context) RouteArrayOutput {
	return o
}

func (o RouteArrayOutput) Index(i pulumi.IntInput) RouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Route {
		return vs[0].([]Route)[vs[1].(int)]
	}).(RouteOutput)
}

// Route resource.
type RouteResponse struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType string `pulumi:"nextHopType"`
	// The provisioning state of the route resource.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Route resource.
type RouteResponseOutput struct{ *pulumi.OutputState }

func (RouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (o RouteResponseOutput) ToRouteResponseOutput() RouteResponseOutput {
	return o
}

func (o RouteResponseOutput) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o RouteResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to.
func (o RouteResponseOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The provisioning state of the route resource.
func (o RouteResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type RouteResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteResponse)(nil)).Elem()
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutput() RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutputWithContext(ctx context.Context) RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) Index(i pulumi.IntInput) RouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteResponse {
		return vs[0].([]RouteResponse)[vs[1].(int)]
	}).(RouteResponseOutput)
}

// Route table resource.
type RouteTable struct {
	// Whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation *bool `pulumi:"disableBgpRoutePropagation"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Collection of routes contained within a route table.
	Routes []Route `pulumi:"routes"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// RouteTableInput is an input type that accepts RouteTableArgs and RouteTableOutput values.
// You can construct a concrete instance of `RouteTableInput` via:
//
//	RouteTableArgs{...}
type RouteTableInput interface {
	pulumi.Input

	ToRouteTableOutput() RouteTableOutput
	ToRouteTableOutputWithContext(context.Context) RouteTableOutput
}

// Route table resource.
type RouteTableArgs struct {
	// Whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation pulumi.BoolPtrInput `pulumi:"disableBgpRoutePropagation"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Collection of routes contained within a route table.
	Routes RouteArrayInput `pulumi:"routes"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (RouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTable)(nil)).Elem()
}

func (i RouteTableArgs) ToRouteTableOutput() RouteTableOutput {
	return i.ToRouteTableOutputWithContext(context.Background())
}

func (i RouteTableArgs) ToRouteTableOutputWithContext(ctx context.Context) RouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableOutput)
}

func (i RouteTableArgs) ToRouteTablePtrOutput() RouteTablePtrOutput {
	return i.ToRouteTablePtrOutputWithContext(context.Background())
}

func (i RouteTableArgs) ToRouteTablePtrOutputWithContext(ctx context.Context) RouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableOutput).ToRouteTablePtrOutputWithContext(ctx)
}

// RouteTablePtrInput is an input type that accepts RouteTableArgs, RouteTablePtr and RouteTablePtrOutput values.
// You can construct a concrete instance of `RouteTablePtrInput` via:
//
//	        RouteTableArgs{...}
//
//	or:
//
//	        nil
type RouteTablePtrInput interface {
	pulumi.Input

	ToRouteTablePtrOutput() RouteTablePtrOutput
	ToRouteTablePtrOutputWithContext(context.Context) RouteTablePtrOutput
}

type routeTablePtrType RouteTableArgs

func RouteTablePtr(v *RouteTableArgs) RouteTablePtrInput {
	return (*routeTablePtrType)(v)
}

func (*routeTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTable)(nil)).Elem()
}

func (i *routeTablePtrType) ToRouteTablePtrOutput() RouteTablePtrOutput {
	return i.ToRouteTablePtrOutputWithContext(context.Background())
}

func (i *routeTablePtrType) ToRouteTablePtrOutputWithContext(ctx context.Context) RouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablePtrOutput)
}

// Route table resource.
type RouteTableOutput struct{ *pulumi.OutputState }

func (RouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTable)(nil)).Elem()
}

func (o RouteTableOutput) ToRouteTableOutput() RouteTableOutput {
	return o
}

func (o RouteTableOutput) ToRouteTableOutputWithContext(ctx context.Context) RouteTableOutput {
	return o
}

func (o RouteTableOutput) ToRouteTablePtrOutput() RouteTablePtrOutput {
	return o.ToRouteTablePtrOutputWithContext(context.Background())
}

func (o RouteTableOutput) ToRouteTablePtrOutputWithContext(ctx context.Context) RouteTablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteTable) *RouteTable {
		return &v
	}).(RouteTablePtrOutput)
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteTable) *bool { return v.DisableBgpRoutePropagation }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o RouteTableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTable) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableOutput) Routes() RouteArrayOutput {
	return o.ApplyT(func(v RouteTable) []Route { return v.Routes }).(RouteArrayOutput)
}

// Resource tags.
func (o RouteTableOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTable) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type RouteTablePtrOutput struct{ *pulumi.OutputState }

func (RouteTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTable)(nil)).Elem()
}

func (o RouteTablePtrOutput) ToRouteTablePtrOutput() RouteTablePtrOutput {
	return o
}

func (o RouteTablePtrOutput) ToRouteTablePtrOutputWithContext(ctx context.Context) RouteTablePtrOutput {
	return o
}

func (o RouteTablePtrOutput) Elem() RouteTableOutput {
	return o.ApplyT(func(v *RouteTable) RouteTable {
		if v != nil {
			return *v
		}
		var ret RouteTable
		return ret
	}).(RouteTableOutput)
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTablePtrOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouteTable) *bool {
		if v == nil {
			return nil
		}
		return v.DisableBgpRoutePropagation
	}).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o RouteTablePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTable) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTablePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTable) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTablePtrOutput) Routes() RouteArrayOutput {
	return o.ApplyT(func(v *RouteTable) []Route {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteArrayOutput)
}

// Resource tags.
func (o RouteTablePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTable) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Route table resource.
type RouteTableResponse struct {
	// Whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation *bool `pulumi:"disableBgpRoutePropagation"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the route table resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes []RouteResponse `pulumi:"routes"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Route table resource.
type RouteTableResponseOutput struct{ *pulumi.OutputState }

func (RouteTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutput() RouteTableResponseOutput {
	return o
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutputWithContext(ctx context.Context) RouteTableResponseOutput {
	return o
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableResponseOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *bool { return v.DisableBgpRoutePropagation }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o RouteTableResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the route table resource.
func (o RouteTableResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableResponseOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v RouteTableResponse) []RouteResponse { return v.Routes }).(RouteResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v RouteTableResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o RouteTableResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTableResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RouteTableResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) Elem() RouteTableResponseOutput {
	return o.ApplyT(func(v *RouteTableResponse) RouteTableResponse {
		if v != nil {
			return *v
		}
		var ret RouteTableResponse
		return ret
	}).(RouteTableResponseOutput)
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableResponsePtrOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableBgpRoutePropagation
	}).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the route table resource.
func (o RouteTableResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableResponsePtrOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableResponse) []RouteResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o RouteTableResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTableResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Network security rule.
type SecurityRule struct {
	// The network traffic is allowed or denied.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes []string `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups []ApplicationSecurityGroup `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction string `pulumi:"direction"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes []string `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups []ApplicationSecurityGroup `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
}

// SecurityRuleInput is an input type that accepts SecurityRuleArgs and SecurityRuleOutput values.
// You can construct a concrete instance of `SecurityRuleInput` via:
//
//	SecurityRuleArgs{...}
type SecurityRuleInput interface {
	pulumi.Input

	ToSecurityRuleOutput() SecurityRuleOutput
	ToSecurityRuleOutputWithContext(context.Context) SecurityRuleOutput
}

// Network security rule.
type SecurityRuleArgs struct {
	// The network traffic is allowed or denied.
	Access pulumi.StringInput `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix pulumi.StringPtrInput `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes pulumi.StringArrayInput `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups ApplicationSecurityGroupArrayInput `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges pulumi.StringArrayInput `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringPtrInput `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes pulumi.StringArrayInput `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups ApplicationSecurityGroupArrayInput `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges pulumi.StringArrayInput `pulumi:"sourcePortRanges"`
}

func (SecurityRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRule)(nil)).Elem()
}

func (i SecurityRuleArgs) ToSecurityRuleOutput() SecurityRuleOutput {
	return i.ToSecurityRuleOutputWithContext(context.Background())
}

func (i SecurityRuleArgs) ToSecurityRuleOutputWithContext(ctx context.Context) SecurityRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleOutput)
}

// SecurityRuleArrayInput is an input type that accepts SecurityRuleArray and SecurityRuleArrayOutput values.
// You can construct a concrete instance of `SecurityRuleArrayInput` via:
//
//	SecurityRuleArray{ SecurityRuleArgs{...} }
type SecurityRuleArrayInput interface {
	pulumi.Input

	ToSecurityRuleArrayOutput() SecurityRuleArrayOutput
	ToSecurityRuleArrayOutputWithContext(context.Context) SecurityRuleArrayOutput
}

type SecurityRuleArray []SecurityRuleInput

func (SecurityRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRule)(nil)).Elem()
}

func (i SecurityRuleArray) ToSecurityRuleArrayOutput() SecurityRuleArrayOutput {
	return i.ToSecurityRuleArrayOutputWithContext(context.Background())
}

func (i SecurityRuleArray) ToSecurityRuleArrayOutputWithContext(ctx context.Context) SecurityRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleArrayOutput)
}

// Network security rule.
type SecurityRuleOutput struct{ *pulumi.OutputState }

func (SecurityRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRule)(nil)).Elem()
}

func (o SecurityRuleOutput) ToSecurityRuleOutput() SecurityRuleOutput {
	return o
}

func (o SecurityRuleOutput) ToSecurityRuleOutputWithContext(ctx context.Context) SecurityRuleOutput {
	return o
}

// The network traffic is allowed or denied.
func (o SecurityRuleOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRule) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRuleOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRule) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o SecurityRuleOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRule) []string { return v.DestinationAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as destination.
func (o SecurityRuleOutput) DestinationApplicationSecurityGroups() ApplicationSecurityGroupArrayOutput {
	return o.ApplyT(func(v SecurityRule) []ApplicationSecurityGroup { return v.DestinationApplicationSecurityGroups }).(ApplicationSecurityGroupArrayOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRule) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o SecurityRuleOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRule) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
func (o SecurityRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRule) string { return v.Direction }).(pulumi.StringOutput)
}

// Resource ID.
func (o SecurityRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to.
func (o SecurityRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRuleOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRule) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP ranges.
func (o SecurityRuleOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRule) []string { return v.SourceAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as source.
func (o SecurityRuleOutput) SourceApplicationSecurityGroups() ApplicationSecurityGroupArrayOutput {
	return o.ApplyT(func(v SecurityRule) []ApplicationSecurityGroup { return v.SourceApplicationSecurityGroups }).(ApplicationSecurityGroupArrayOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRule) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

// The source port ranges.
func (o SecurityRuleOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRule) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

type SecurityRuleArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRule)(nil)).Elem()
}

func (o SecurityRuleArrayOutput) ToSecurityRuleArrayOutput() SecurityRuleArrayOutput {
	return o
}

func (o SecurityRuleArrayOutput) ToSecurityRuleArrayOutputWithContext(ctx context.Context) SecurityRuleArrayOutput {
	return o
}

func (o SecurityRuleArrayOutput) Index(i pulumi.IntInput) SecurityRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRule {
		return vs[0].([]SecurityRule)[vs[1].(int)]
	}).(SecurityRuleOutput)
}

// Network security rule.
type SecurityRuleResponse struct {
	// The network traffic is allowed or denied.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes []string `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction string `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the security rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes []string `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
}

// Network security rule.
type SecurityRuleResponseOutput struct{ *pulumi.OutputState }

func (SecurityRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleResponse)(nil)).Elem()
}

func (o SecurityRuleResponseOutput) ToSecurityRuleResponseOutput() SecurityRuleResponseOutput {
	return o
}

func (o SecurityRuleResponseOutput) ToSecurityRuleResponseOutputWithContext(ctx context.Context) SecurityRuleResponseOutput {
	return o
}

// The network traffic is allowed or denied.
func (o SecurityRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRuleResponseOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o SecurityRuleResponseOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.DestinationAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as destination.
func (o SecurityRuleResponseOutput) DestinationApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []ApplicationSecurityGroupResponse {
		return v.DestinationApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleResponseOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o SecurityRuleResponseOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
func (o SecurityRuleResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SecurityRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o SecurityRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRuleResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to.
func (o SecurityRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the security rule resource.
func (o SecurityRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRuleResponseOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP ranges.
func (o SecurityRuleResponseOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.SourceAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as source.
func (o SecurityRuleResponseOutput) SourceApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []ApplicationSecurityGroupResponse {
		return v.SourceApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleResponseOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

// The source port ranges.
func (o SecurityRuleResponseOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

type SecurityRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleResponse)(nil)).Elem()
}

func (o SecurityRuleResponseArrayOutput) ToSecurityRuleResponseArrayOutput() SecurityRuleResponseArrayOutput {
	return o
}

func (o SecurityRuleResponseArrayOutput) ToSecurityRuleResponseArrayOutputWithContext(ctx context.Context) SecurityRuleResponseArrayOutput {
	return o
}

func (o SecurityRuleResponseArrayOutput) Index(i pulumi.IntInput) SecurityRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRuleResponse {
		return vs[0].([]SecurityRuleResponse)[vs[1].(int)]
	}).(SecurityRuleResponseOutput)
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkResponse struct {
	// If true, the resource can be deleted.
	AllowDelete *bool `pulumi:"allowDelete"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Link to the external resource.
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the service association link resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkResponseOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLinkResponse)(nil)).Elem()
}

func (o ServiceAssociationLinkResponseOutput) ToServiceAssociationLinkResponseOutput() ServiceAssociationLinkResponseOutput {
	return o
}

func (o ServiceAssociationLinkResponseOutput) ToServiceAssociationLinkResponseOutputWithContext(ctx context.Context) ServiceAssociationLinkResponseOutput {
	return o
}

// If true, the resource can be deleted.
func (o ServiceAssociationLinkResponseOutput) AllowDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *bool { return v.AllowDelete }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceAssociationLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ServiceAssociationLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Link to the external resource.
func (o ServiceAssociationLinkResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ServiceAssociationLinkResponseOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// A list of locations.
func (o ServiceAssociationLinkResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceAssociationLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the service association link resource.
func (o ServiceAssociationLinkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o ServiceAssociationLinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceAssociationLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAssociationLinkResponse)(nil)).Elem()
}

func (o ServiceAssociationLinkResponseArrayOutput) ToServiceAssociationLinkResponseArrayOutput() ServiceAssociationLinkResponseArrayOutput {
	return o
}

func (o ServiceAssociationLinkResponseArrayOutput) ToServiceAssociationLinkResponseArrayOutputWithContext(ctx context.Context) ServiceAssociationLinkResponseArrayOutput {
	return o
}

func (o ServiceAssociationLinkResponseArrayOutput) Index(i pulumi.IntInput) ServiceAssociationLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAssociationLinkResponse {
		return vs[0].([]ServiceAssociationLinkResponse)[vs[1].(int)]
	}).(ServiceAssociationLinkResponseOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicy struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions []ServiceEndpointPolicyDefinition `pulumi:"serviceEndpointPolicyDefinitions"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// ServiceEndpointPolicyInput is an input type that accepts ServiceEndpointPolicyArgs and ServiceEndpointPolicyOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyInput` via:
//
//	ServiceEndpointPolicyArgs{...}
type ServiceEndpointPolicyInput interface {
	pulumi.Input

	ToServiceEndpointPolicyOutput() ServiceEndpointPolicyOutput
	ToServiceEndpointPolicyOutputWithContext(context.Context) ServiceEndpointPolicyOutput
}

// Service End point policy resource.
type ServiceEndpointPolicyArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions ServiceEndpointPolicyDefinitionArrayInput `pulumi:"serviceEndpointPolicyDefinitions"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ServiceEndpointPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicy)(nil)).Elem()
}

func (i ServiceEndpointPolicyArgs) ToServiceEndpointPolicyOutput() ServiceEndpointPolicyOutput {
	return i.ToServiceEndpointPolicyOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyArgs) ToServiceEndpointPolicyOutputWithContext(ctx context.Context) ServiceEndpointPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyOutput)
}

// ServiceEndpointPolicyArrayInput is an input type that accepts ServiceEndpointPolicyArray and ServiceEndpointPolicyArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyArrayInput` via:
//
//	ServiceEndpointPolicyArray{ ServiceEndpointPolicyArgs{...} }
type ServiceEndpointPolicyArrayInput interface {
	pulumi.Input

	ToServiceEndpointPolicyArrayOutput() ServiceEndpointPolicyArrayOutput
	ToServiceEndpointPolicyArrayOutputWithContext(context.Context) ServiceEndpointPolicyArrayOutput
}

type ServiceEndpointPolicyArray []ServiceEndpointPolicyInput

func (ServiceEndpointPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicy)(nil)).Elem()
}

func (i ServiceEndpointPolicyArray) ToServiceEndpointPolicyArrayOutput() ServiceEndpointPolicyArrayOutput {
	return i.ToServiceEndpointPolicyArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyArray) ToServiceEndpointPolicyArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyArrayOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicy)(nil)).Elem()
}

func (o ServiceEndpointPolicyOutput) ToServiceEndpointPolicyOutput() ServiceEndpointPolicyOutput {
	return o
}

func (o ServiceEndpointPolicyOutput) ToServiceEndpointPolicyOutputWithContext(ctx context.Context) ServiceEndpointPolicyOutput {
	return o
}

// Resource ID.
func (o ServiceEndpointPolicyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicy) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ServiceEndpointPolicyOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicy) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// A collection of service endpoint policy definitions of the service endpoint policy.
func (o ServiceEndpointPolicyOutput) ServiceEndpointPolicyDefinitions() ServiceEndpointPolicyDefinitionArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicy) []ServiceEndpointPolicyDefinition {
		return v.ServiceEndpointPolicyDefinitions
	}).(ServiceEndpointPolicyDefinitionArrayOutput)
}

// Resource tags.
func (o ServiceEndpointPolicyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceEndpointPolicy) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ServiceEndpointPolicyArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicy)(nil)).Elem()
}

func (o ServiceEndpointPolicyArrayOutput) ToServiceEndpointPolicyArrayOutput() ServiceEndpointPolicyArrayOutput {
	return o
}

func (o ServiceEndpointPolicyArrayOutput) ToServiceEndpointPolicyArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyArrayOutput {
	return o
}

func (o ServiceEndpointPolicyArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicy {
		return vs[0].([]ServiceEndpointPolicy)[vs[1].(int)]
	}).(ServiceEndpointPolicyOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinition struct {
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Service endpoint name.
	Service *string `pulumi:"service"`
	// A list of service resources.
	ServiceResources []string `pulumi:"serviceResources"`
}

// ServiceEndpointPolicyDefinitionInput is an input type that accepts ServiceEndpointPolicyDefinitionArgs and ServiceEndpointPolicyDefinitionOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionInput` via:
//
//	ServiceEndpointPolicyDefinitionArgs{...}
type ServiceEndpointPolicyDefinitionInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionOutput() ServiceEndpointPolicyDefinitionOutput
	ToServiceEndpointPolicyDefinitionOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionOutput
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionArgs struct {
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Service endpoint name.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// A list of service resources.
	ServiceResources pulumi.StringArrayInput `pulumi:"serviceResources"`
}

func (ServiceEndpointPolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinition)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionArgs) ToServiceEndpointPolicyDefinitionOutput() ServiceEndpointPolicyDefinitionOutput {
	return i.ToServiceEndpointPolicyDefinitionOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionArgs) ToServiceEndpointPolicyDefinitionOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionOutput)
}

// ServiceEndpointPolicyDefinitionArrayInput is an input type that accepts ServiceEndpointPolicyDefinitionArray and ServiceEndpointPolicyDefinitionArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionArrayInput` via:
//
//	ServiceEndpointPolicyDefinitionArray{ ServiceEndpointPolicyDefinitionArgs{...} }
type ServiceEndpointPolicyDefinitionArrayInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionArrayOutput() ServiceEndpointPolicyDefinitionArrayOutput
	ToServiceEndpointPolicyDefinitionArrayOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionArrayOutput
}

type ServiceEndpointPolicyDefinitionArray []ServiceEndpointPolicyDefinitionInput

func (ServiceEndpointPolicyDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinition)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionArray) ToServiceEndpointPolicyDefinitionArrayOutput() ServiceEndpointPolicyDefinitionArrayOutput {
	return i.ToServiceEndpointPolicyDefinitionArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionArray) ToServiceEndpointPolicyDefinitionArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionArrayOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinition)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionOutput) ToServiceEndpointPolicyDefinitionOutput() ServiceEndpointPolicyDefinitionOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionOutput) ToServiceEndpointPolicyDefinitionOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionOutput {
	return o
}

// A description for this rule. Restricted to 140 chars.
func (o ServiceEndpointPolicyDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceEndpointPolicyDefinitionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Service endpoint name.
func (o ServiceEndpointPolicyDefinitionOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinition) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// A list of service resources.
func (o ServiceEndpointPolicyDefinitionOutput) ServiceResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinition) []string { return v.ServiceResources }).(pulumi.StringArrayOutput)
}

type ServiceEndpointPolicyDefinitionArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinition)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionArrayOutput) ToServiceEndpointPolicyDefinitionArrayOutput() ServiceEndpointPolicyDefinitionArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionArrayOutput) ToServiceEndpointPolicyDefinitionArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyDefinition {
		return vs[0].([]ServiceEndpointPolicyDefinition)[vs[1].(int)]
	}).(ServiceEndpointPolicyDefinitionOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionResponse struct {
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the service endpoint policy definition resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Service endpoint name.
	Service *string `pulumi:"service"`
	// A list of service resources.
	ServiceResources []string `pulumi:"serviceResources"`
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionResponseOutput) ToServiceEndpointPolicyDefinitionResponseOutput() ServiceEndpointPolicyDefinitionResponseOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseOutput) ToServiceEndpointPolicyDefinitionResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionResponseOutput {
	return o
}

// A description for this rule. Restricted to 140 chars.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the service endpoint policy definition resource.
func (o ServiceEndpointPolicyDefinitionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Service endpoint name.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// A list of service resources.
func (o ServiceEndpointPolicyDefinitionResponseOutput) ServiceResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) []string { return v.ServiceResources }).(pulumi.StringArrayOutput)
}

type ServiceEndpointPolicyDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinitionResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) ToServiceEndpointPolicyDefinitionResponseArrayOutput() ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) ToServiceEndpointPolicyDefinitionResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyDefinitionResponse {
		return vs[0].([]ServiceEndpointPolicyDefinitionResponse)[vs[1].(int)]
	}).(ServiceEndpointPolicyDefinitionResponseOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the service endpoint policy resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the service endpoint policy resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions []ServiceEndpointPolicyDefinitionResponse `pulumi:"serviceEndpointPolicyDefinitions"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Service End point policy resource.
type ServiceEndpointPolicyResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyResponseOutput) ToServiceEndpointPolicyResponseOutput() ServiceEndpointPolicyResponseOutput {
	return o
}

func (o ServiceEndpointPolicyResponseOutput) ToServiceEndpointPolicyResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ServiceEndpointPolicyResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ServiceEndpointPolicyResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the service endpoint policy resource.
func (o ServiceEndpointPolicyResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the service endpoint policy resource.
func (o ServiceEndpointPolicyResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// A collection of service endpoint policy definitions of the service endpoint policy.
func (o ServiceEndpointPolicyResponseOutput) ServiceEndpointPolicyDefinitions() ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) []ServiceEndpointPolicyDefinitionResponse {
		return v.ServiceEndpointPolicyDefinitions
	}).(ServiceEndpointPolicyDefinitionResponseArrayOutput)
}

// A collection of references to subnets.
func (o ServiceEndpointPolicyResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o ServiceEndpointPolicyResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ServiceEndpointPolicyResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceEndpointPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyResponseArrayOutput) ToServiceEndpointPolicyResponseArrayOutput() ServiceEndpointPolicyResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyResponseArrayOutput) ToServiceEndpointPolicyResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyResponse {
		return vs[0].([]ServiceEndpointPolicyResponse)[vs[1].(int)]
	}).(ServiceEndpointPolicyResponseOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormat struct {
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// The type of the endpoint service.
	Service *string `pulumi:"service"`
}

// ServiceEndpointPropertiesFormatInput is an input type that accepts ServiceEndpointPropertiesFormatArgs and ServiceEndpointPropertiesFormatOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatInput` via:
//
//	ServiceEndpointPropertiesFormatArgs{...}
type ServiceEndpointPropertiesFormatInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput
	ToServiceEndpointPropertiesFormatOutputWithContext(context.Context) ServiceEndpointPropertiesFormatOutput
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatArgs struct {
	// A list of locations.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// The type of the endpoint service.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (ServiceEndpointPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatArgs) ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput {
	return i.ToServiceEndpointPropertiesFormatOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatArgs) ToServiceEndpointPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatOutput)
}

// ServiceEndpointPropertiesFormatArrayInput is an input type that accepts ServiceEndpointPropertiesFormatArray and ServiceEndpointPropertiesFormatArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatArrayInput` via:
//
//	ServiceEndpointPropertiesFormatArray{ ServiceEndpointPropertiesFormatArgs{...} }
type ServiceEndpointPropertiesFormatArrayInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput
	ToServiceEndpointPropertiesFormatArrayOutputWithContext(context.Context) ServiceEndpointPropertiesFormatArrayOutput
}

type ServiceEndpointPropertiesFormatArray []ServiceEndpointPropertiesFormatInput

func (ServiceEndpointPropertiesFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatArray) ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput {
	return i.ToServiceEndpointPropertiesFormatArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatArray) ToServiceEndpointPropertiesFormatArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatArrayOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatOutput) ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatOutput) ToServiceEndpointPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatOutput {
	return o
}

// A list of locations.
func (o ServiceEndpointPropertiesFormatOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The type of the endpoint service.
func (o ServiceEndpointPropertiesFormatOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPropertiesFormatArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatArrayOutput) ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatArrayOutput) ToServiceEndpointPropertiesFormatArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPropertiesFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPropertiesFormat {
		return vs[0].([]ServiceEndpointPropertiesFormat)[vs[1].(int)]
	}).(ServiceEndpointPropertiesFormatOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponse struct {
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// The provisioning state of the service endpoint resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service *string `pulumi:"service"`
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatResponseOutput) ToServiceEndpointPropertiesFormatResponseOutput() ServiceEndpointPropertiesFormatResponseOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseOutput) ToServiceEndpointPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseOutput {
	return o
}

// A list of locations.
func (o ServiceEndpointPropertiesFormatResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The provisioning state of the service endpoint resource.
func (o ServiceEndpointPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the endpoint service.
func (o ServiceEndpointPropertiesFormatResponseOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPropertiesFormatResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) ToServiceEndpointPropertiesFormatResponseArrayOutput() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) ToServiceEndpointPropertiesFormatResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPropertiesFormatResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPropertiesFormatResponse {
		return vs[0].([]ServiceEndpointPropertiesFormatResponse)[vs[1].(int)]
	}).(ServiceEndpointPropertiesFormatResponseOutput)
}

// An SOA record.
type SoaRecord struct {
	// The email contact for this SOA record.
	Email *string `pulumi:"email"`
	// The expire time for this SOA record.
	ExpireTime *float64 `pulumi:"expireTime"`
	// The domain name of the authoritative name server for this SOA record.
	Host *string `pulumi:"host"`
	// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
	MinimumTtl *float64 `pulumi:"minimumTtl"`
	// The refresh value for this SOA record.
	RefreshTime *float64 `pulumi:"refreshTime"`
	// The retry time for this SOA record.
	RetryTime *float64 `pulumi:"retryTime"`
	// The serial number for this SOA record.
	SerialNumber *float64 `pulumi:"serialNumber"`
}

// SoaRecordInput is an input type that accepts SoaRecordArgs and SoaRecordOutput values.
// You can construct a concrete instance of `SoaRecordInput` via:
//
//	SoaRecordArgs{...}
type SoaRecordInput interface {
	pulumi.Input

	ToSoaRecordOutput() SoaRecordOutput
	ToSoaRecordOutputWithContext(context.Context) SoaRecordOutput
}

// An SOA record.
type SoaRecordArgs struct {
	// The email contact for this SOA record.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The expire time for this SOA record.
	ExpireTime pulumi.Float64PtrInput `pulumi:"expireTime"`
	// The domain name of the authoritative name server for this SOA record.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
	MinimumTtl pulumi.Float64PtrInput `pulumi:"minimumTtl"`
	// The refresh value for this SOA record.
	RefreshTime pulumi.Float64PtrInput `pulumi:"refreshTime"`
	// The retry time for this SOA record.
	RetryTime pulumi.Float64PtrInput `pulumi:"retryTime"`
	// The serial number for this SOA record.
	SerialNumber pulumi.Float64PtrInput `pulumi:"serialNumber"`
}

func (SoaRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoaRecord)(nil)).Elem()
}

func (i SoaRecordArgs) ToSoaRecordOutput() SoaRecordOutput {
	return i.ToSoaRecordOutputWithContext(context.Background())
}

func (i SoaRecordArgs) ToSoaRecordOutputWithContext(ctx context.Context) SoaRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoaRecordOutput)
}

func (i SoaRecordArgs) ToSoaRecordPtrOutput() SoaRecordPtrOutput {
	return i.ToSoaRecordPtrOutputWithContext(context.Background())
}

func (i SoaRecordArgs) ToSoaRecordPtrOutputWithContext(ctx context.Context) SoaRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoaRecordOutput).ToSoaRecordPtrOutputWithContext(ctx)
}

// SoaRecordPtrInput is an input type that accepts SoaRecordArgs, SoaRecordPtr and SoaRecordPtrOutput values.
// You can construct a concrete instance of `SoaRecordPtrInput` via:
//
//	        SoaRecordArgs{...}
//
//	or:
//
//	        nil
type SoaRecordPtrInput interface {
	pulumi.Input

	ToSoaRecordPtrOutput() SoaRecordPtrOutput
	ToSoaRecordPtrOutputWithContext(context.Context) SoaRecordPtrOutput
}

type soaRecordPtrType SoaRecordArgs

func SoaRecordPtr(v *SoaRecordArgs) SoaRecordPtrInput {
	return (*soaRecordPtrType)(v)
}

func (*soaRecordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SoaRecord)(nil)).Elem()
}

func (i *soaRecordPtrType) ToSoaRecordPtrOutput() SoaRecordPtrOutput {
	return i.ToSoaRecordPtrOutputWithContext(context.Background())
}

func (i *soaRecordPtrType) ToSoaRecordPtrOutputWithContext(ctx context.Context) SoaRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoaRecordPtrOutput)
}

// An SOA record.
type SoaRecordOutput struct{ *pulumi.OutputState }

func (SoaRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoaRecord)(nil)).Elem()
}

func (o SoaRecordOutput) ToSoaRecordOutput() SoaRecordOutput {
	return o
}

func (o SoaRecordOutput) ToSoaRecordOutputWithContext(ctx context.Context) SoaRecordOutput {
	return o
}

func (o SoaRecordOutput) ToSoaRecordPtrOutput() SoaRecordPtrOutput {
	return o.ToSoaRecordPtrOutputWithContext(context.Background())
}

func (o SoaRecordOutput) ToSoaRecordPtrOutputWithContext(ctx context.Context) SoaRecordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SoaRecord) *SoaRecord {
		return &v
	}).(SoaRecordPtrOutput)
}

// The email contact for this SOA record.
func (o SoaRecordOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoaRecord) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The expire time for this SOA record.
func (o SoaRecordOutput) ExpireTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecord) *float64 { return v.ExpireTime }).(pulumi.Float64PtrOutput)
}

// The domain name of the authoritative name server for this SOA record.
func (o SoaRecordOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoaRecord) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
func (o SoaRecordOutput) MinimumTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecord) *float64 { return v.MinimumTtl }).(pulumi.Float64PtrOutput)
}

// The refresh value for this SOA record.
func (o SoaRecordOutput) RefreshTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecord) *float64 { return v.RefreshTime }).(pulumi.Float64PtrOutput)
}

// The retry time for this SOA record.
func (o SoaRecordOutput) RetryTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecord) *float64 { return v.RetryTime }).(pulumi.Float64PtrOutput)
}

// The serial number for this SOA record.
func (o SoaRecordOutput) SerialNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecord) *float64 { return v.SerialNumber }).(pulumi.Float64PtrOutput)
}

type SoaRecordPtrOutput struct{ *pulumi.OutputState }

func (SoaRecordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoaRecord)(nil)).Elem()
}

func (o SoaRecordPtrOutput) ToSoaRecordPtrOutput() SoaRecordPtrOutput {
	return o
}

func (o SoaRecordPtrOutput) ToSoaRecordPtrOutputWithContext(ctx context.Context) SoaRecordPtrOutput {
	return o
}

func (o SoaRecordPtrOutput) Elem() SoaRecordOutput {
	return o.ApplyT(func(v *SoaRecord) SoaRecord {
		if v != nil {
			return *v
		}
		var ret SoaRecord
		return ret
	}).(SoaRecordOutput)
}

// The email contact for this SOA record.
func (o SoaRecordPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoaRecord) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The expire time for this SOA record.
func (o SoaRecordPtrOutput) ExpireTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecord) *float64 {
		if v == nil {
			return nil
		}
		return v.ExpireTime
	}).(pulumi.Float64PtrOutput)
}

// The domain name of the authoritative name server for this SOA record.
func (o SoaRecordPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoaRecord) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
func (o SoaRecordPtrOutput) MinimumTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecord) *float64 {
		if v == nil {
			return nil
		}
		return v.MinimumTtl
	}).(pulumi.Float64PtrOutput)
}

// The refresh value for this SOA record.
func (o SoaRecordPtrOutput) RefreshTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecord) *float64 {
		if v == nil {
			return nil
		}
		return v.RefreshTime
	}).(pulumi.Float64PtrOutput)
}

// The retry time for this SOA record.
func (o SoaRecordPtrOutput) RetryTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecord) *float64 {
		if v == nil {
			return nil
		}
		return v.RetryTime
	}).(pulumi.Float64PtrOutput)
}

// The serial number for this SOA record.
func (o SoaRecordPtrOutput) SerialNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecord) *float64 {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.Float64PtrOutput)
}

// An SOA record.
type SoaRecordResponse struct {
	// The email contact for this SOA record.
	Email *string `pulumi:"email"`
	// The expire time for this SOA record.
	ExpireTime *float64 `pulumi:"expireTime"`
	// The domain name of the authoritative name server for this SOA record.
	Host *string `pulumi:"host"`
	// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
	MinimumTtl *float64 `pulumi:"minimumTtl"`
	// The refresh value for this SOA record.
	RefreshTime *float64 `pulumi:"refreshTime"`
	// The retry time for this SOA record.
	RetryTime *float64 `pulumi:"retryTime"`
	// The serial number for this SOA record.
	SerialNumber *float64 `pulumi:"serialNumber"`
}

// An SOA record.
type SoaRecordResponseOutput struct{ *pulumi.OutputState }

func (SoaRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoaRecordResponse)(nil)).Elem()
}

func (o SoaRecordResponseOutput) ToSoaRecordResponseOutput() SoaRecordResponseOutput {
	return o
}

func (o SoaRecordResponseOutput) ToSoaRecordResponseOutputWithContext(ctx context.Context) SoaRecordResponseOutput {
	return o
}

// The email contact for this SOA record.
func (o SoaRecordResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The expire time for this SOA record.
func (o SoaRecordResponseOutput) ExpireTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *float64 { return v.ExpireTime }).(pulumi.Float64PtrOutput)
}

// The domain name of the authoritative name server for this SOA record.
func (o SoaRecordResponseOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
func (o SoaRecordResponseOutput) MinimumTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *float64 { return v.MinimumTtl }).(pulumi.Float64PtrOutput)
}

// The refresh value for this SOA record.
func (o SoaRecordResponseOutput) RefreshTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *float64 { return v.RefreshTime }).(pulumi.Float64PtrOutput)
}

// The retry time for this SOA record.
func (o SoaRecordResponseOutput) RetryTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *float64 { return v.RetryTime }).(pulumi.Float64PtrOutput)
}

// The serial number for this SOA record.
func (o SoaRecordResponseOutput) SerialNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *float64 { return v.SerialNumber }).(pulumi.Float64PtrOutput)
}

type SoaRecordResponsePtrOutput struct{ *pulumi.OutputState }

func (SoaRecordResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoaRecordResponse)(nil)).Elem()
}

func (o SoaRecordResponsePtrOutput) ToSoaRecordResponsePtrOutput() SoaRecordResponsePtrOutput {
	return o
}

func (o SoaRecordResponsePtrOutput) ToSoaRecordResponsePtrOutputWithContext(ctx context.Context) SoaRecordResponsePtrOutput {
	return o
}

func (o SoaRecordResponsePtrOutput) Elem() SoaRecordResponseOutput {
	return o.ApplyT(func(v *SoaRecordResponse) SoaRecordResponse {
		if v != nil {
			return *v
		}
		var ret SoaRecordResponse
		return ret
	}).(SoaRecordResponseOutput)
}

// The email contact for this SOA record.
func (o SoaRecordResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The expire time for this SOA record.
func (o SoaRecordResponsePtrOutput) ExpireTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.ExpireTime
	}).(pulumi.Float64PtrOutput)
}

// The domain name of the authoritative name server for this SOA record.
func (o SoaRecordResponsePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
func (o SoaRecordResponsePtrOutput) MinimumTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MinimumTtl
	}).(pulumi.Float64PtrOutput)
}

// The refresh value for this SOA record.
func (o SoaRecordResponsePtrOutput) RefreshTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.RefreshTime
	}).(pulumi.Float64PtrOutput)
}

// The retry time for this SOA record.
func (o SoaRecordResponsePtrOutput) RetryTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.RetryTime
	}).(pulumi.Float64PtrOutput)
}

// The serial number for this SOA record.
func (o SoaRecordResponsePtrOutput) SerialNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.Float64PtrOutput)
}

// An SRV record.
type SrvRecord struct {
	// The port value for this SRV record.
	Port *int `pulumi:"port"`
	// The priority value for this SRV record.
	Priority *int `pulumi:"priority"`
	// The target domain name for this SRV record.
	Target *string `pulumi:"target"`
	// The weight value for this SRV record.
	Weight *int `pulumi:"weight"`
}

// SrvRecordInput is an input type that accepts SrvRecordArgs and SrvRecordOutput values.
// You can construct a concrete instance of `SrvRecordInput` via:
//
//	SrvRecordArgs{...}
type SrvRecordInput interface {
	pulumi.Input

	ToSrvRecordOutput() SrvRecordOutput
	ToSrvRecordOutputWithContext(context.Context) SrvRecordOutput
}

// An SRV record.
type SrvRecordArgs struct {
	// The port value for this SRV record.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The priority value for this SRV record.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The target domain name for this SRV record.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The weight value for this SRV record.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (SrvRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SrvRecord)(nil)).Elem()
}

func (i SrvRecordArgs) ToSrvRecordOutput() SrvRecordOutput {
	return i.ToSrvRecordOutputWithContext(context.Background())
}

func (i SrvRecordArgs) ToSrvRecordOutputWithContext(ctx context.Context) SrvRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SrvRecordOutput)
}

// SrvRecordArrayInput is an input type that accepts SrvRecordArray and SrvRecordArrayOutput values.
// You can construct a concrete instance of `SrvRecordArrayInput` via:
//
//	SrvRecordArray{ SrvRecordArgs{...} }
type SrvRecordArrayInput interface {
	pulumi.Input

	ToSrvRecordArrayOutput() SrvRecordArrayOutput
	ToSrvRecordArrayOutputWithContext(context.Context) SrvRecordArrayOutput
}

type SrvRecordArray []SrvRecordInput

func (SrvRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SrvRecord)(nil)).Elem()
}

func (i SrvRecordArray) ToSrvRecordArrayOutput() SrvRecordArrayOutput {
	return i.ToSrvRecordArrayOutputWithContext(context.Background())
}

func (i SrvRecordArray) ToSrvRecordArrayOutputWithContext(ctx context.Context) SrvRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SrvRecordArrayOutput)
}

// An SRV record.
type SrvRecordOutput struct{ *pulumi.OutputState }

func (SrvRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SrvRecord)(nil)).Elem()
}

func (o SrvRecordOutput) ToSrvRecordOutput() SrvRecordOutput {
	return o
}

func (o SrvRecordOutput) ToSrvRecordOutputWithContext(ctx context.Context) SrvRecordOutput {
	return o
}

// The port value for this SRV record.
func (o SrvRecordOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecord) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The priority value for this SRV record.
func (o SrvRecordOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecord) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The target domain name for this SRV record.
func (o SrvRecordOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SrvRecord) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The weight value for this SRV record.
func (o SrvRecordOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecord) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type SrvRecordArrayOutput struct{ *pulumi.OutputState }

func (SrvRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SrvRecord)(nil)).Elem()
}

func (o SrvRecordArrayOutput) ToSrvRecordArrayOutput() SrvRecordArrayOutput {
	return o
}

func (o SrvRecordArrayOutput) ToSrvRecordArrayOutputWithContext(ctx context.Context) SrvRecordArrayOutput {
	return o
}

func (o SrvRecordArrayOutput) Index(i pulumi.IntInput) SrvRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SrvRecord {
		return vs[0].([]SrvRecord)[vs[1].(int)]
	}).(SrvRecordOutput)
}

// An SRV record.
type SrvRecordResponse struct {
	// The port value for this SRV record.
	Port *int `pulumi:"port"`
	// The priority value for this SRV record.
	Priority *int `pulumi:"priority"`
	// The target domain name for this SRV record.
	Target *string `pulumi:"target"`
	// The weight value for this SRV record.
	Weight *int `pulumi:"weight"`
}

// An SRV record.
type SrvRecordResponseOutput struct{ *pulumi.OutputState }

func (SrvRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SrvRecordResponse)(nil)).Elem()
}

func (o SrvRecordResponseOutput) ToSrvRecordResponseOutput() SrvRecordResponseOutput {
	return o
}

func (o SrvRecordResponseOutput) ToSrvRecordResponseOutputWithContext(ctx context.Context) SrvRecordResponseOutput {
	return o
}

// The port value for this SRV record.
func (o SrvRecordResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecordResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The priority value for this SRV record.
func (o SrvRecordResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecordResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The target domain name for this SRV record.
func (o SrvRecordResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SrvRecordResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The weight value for this SRV record.
func (o SrvRecordResponseOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecordResponse) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type SrvRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (SrvRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SrvRecordResponse)(nil)).Elem()
}

func (o SrvRecordResponseArrayOutput) ToSrvRecordResponseArrayOutput() SrvRecordResponseArrayOutput {
	return o
}

func (o SrvRecordResponseArrayOutput) ToSrvRecordResponseArrayOutputWithContext(ctx context.Context) SrvRecordResponseArrayOutput {
	return o
}

func (o SrvRecordResponseArrayOutput) Index(i pulumi.IntInput) SrvRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SrvRecordResponse {
		return vs[0].([]SrvRecordResponse)[vs[1].(int)]
	}).(SrvRecordResponseOutput)
}

// Reference to another subresource.
type SubResource struct {
	// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
	// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
	// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
	// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
	Id *string `pulumi:"id"`
}

// SubResourceInput is an input type that accepts SubResourceArgs and SubResourceOutput values.
// You can construct a concrete instance of `SubResourceInput` via:
//
//	SubResourceArgs{...}
type SubResourceInput interface {
	pulumi.Input

	ToSubResourceOutput() SubResourceOutput
	ToSubResourceOutputWithContext(context.Context) SubResourceOutput
}

// Reference to another subresource.
type SubResourceArgs struct {
	// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
	// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
	// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
	// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (i SubResourceArgs) ToSubResourceOutput() SubResourceOutput {
	return i.ToSubResourceOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput)
}

func (i SubResourceArgs) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput).ToSubResourcePtrOutputWithContext(ctx)
}

// SubResourcePtrInput is an input type that accepts SubResourceArgs, SubResourcePtr and SubResourcePtrOutput values.
// You can construct a concrete instance of `SubResourcePtrInput` via:
//
//	        SubResourceArgs{...}
//
//	or:
//
//	        nil
type SubResourcePtrInput interface {
	pulumi.Input

	ToSubResourcePtrOutput() SubResourcePtrOutput
	ToSubResourcePtrOutputWithContext(context.Context) SubResourcePtrOutput
}

type subResourcePtrType SubResourceArgs

func SubResourcePtr(v *SubResourceArgs) SubResourcePtrInput {
	return (*subResourcePtrType)(v)
}

func (*subResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (i *subResourcePtrType) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i *subResourcePtrType) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourcePtrOutput)
}

// SubResourceArrayInput is an input type that accepts SubResourceArray and SubResourceArrayOutput values.
// You can construct a concrete instance of `SubResourceArrayInput` via:
//
//	SubResourceArray{ SubResourceArgs{...} }
type SubResourceArrayInput interface {
	pulumi.Input

	ToSubResourceArrayOutput() SubResourceArrayOutput
	ToSubResourceArrayOutputWithContext(context.Context) SubResourceArrayOutput
}

type SubResourceArray []SubResourceInput

func (SubResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (i SubResourceArray) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return i.ToSubResourceArrayOutputWithContext(context.Background())
}

func (i SubResourceArray) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceArrayOutput)
}

// Reference to another subresource.
type SubResourceOutput struct{ *pulumi.OutputState }

func (SubResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (o SubResourceOutput) ToSubResourceOutput() SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o.ToSubResourcePtrOutputWithContext(context.Background())
}

func (o SubResourceOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubResource) *SubResource {
		return &v
	}).(SubResourcePtrOutput)
}

// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
func (o SubResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourcePtrOutput struct{ *pulumi.OutputState }

func (SubResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) Elem() SubResourceOutput {
	return o.ApplyT(func(v *SubResource) SubResource {
		if v != nil {
			return *v
		}
		var ret SubResource
		return ret
	}).(SubResourceOutput)
}

// Sub-resource ID. Both absolute resource ID and a relative resource ID are accepted.
// An absolute ID starts with /subscriptions/ and contains the entire ID of the parent resource and the ID of the sub-resource in the end.
// A relative ID replaces the ID of the parent resource with a token '$self', followed by the sub-resource ID itself.
// Example of a relative ID: $self/frontEndConfigurations/my-frontend.
func (o SubResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceArrayOutput struct{ *pulumi.OutputState }

func (SubResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) Index(i pulumi.IntInput) SubResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResource {
		return vs[0].([]SubResource)[vs[1].(int)]
	}).(SubResourceOutput)
}

// Reference to another subresource.
type SubResourceResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// Reference to another subresource.
type SubResourceResponseOutput struct{ *pulumi.OutputState }

func (SubResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return o
}

// Resource ID.
func (o SubResourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourceResponsePtrOutput struct{ *pulumi.OutputState }

func (SubResourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) Elem() SubResourceResponseOutput {
	return o.ApplyT(func(v *SubResourceResponse) SubResourceResponse {
		if v != nil {
			return *v
		}
		var ret SubResourceResponse
		return ret
	}).(SubResourceResponseOutput)
}

// Resource ID.
func (o SubResourceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SubResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutputWithContext(ctx context.Context) SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) Index(i pulumi.IntInput) SubResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResourceResponse {
		return vs[0].([]SubResourceResponse)[vs[1].(int)]
	}).(SubResourceResponseOutput)
}

// Subnet in a virtual network resource.
type SubnetResponse struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// An array of references to the delegations on the subnet.
	Delegations []DelegationResponse `pulumi:"delegations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Array of IpAllocation which reference this subnet.
	IpAllocations []SubResourceResponse `pulumi:"ipAllocations"`
	// Array of IP configuration profiles which reference this subnet.
	IpConfigurationProfiles []IPConfigurationProfileResponse `pulumi:"ipConfigurationProfiles"`
	// An array of references to the network interface IP configurations using subnet.
	IpConfigurations []IPConfigurationResponse `pulumi:"ipConfigurations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Nat gateway associated with this subnet.
	NatGateway *SubResourceResponse `pulumi:"natGateway"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupResponse `pulumi:"networkSecurityGroup"`
	// Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies *string `pulumi:"privateEndpointNetworkPolicies"`
	// An array of references to private endpoints.
	PrivateEndpoints []PrivateEndpointResponse `pulumi:"privateEndpoints"`
	// Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies *string `pulumi:"privateLinkServiceNetworkPolicies"`
	// The provisioning state of the subnet resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
	Purpose string `pulumi:"purpose"`
	// An array of references to the external resources using subnet.
	ResourceNavigationLinks []ResourceNavigationLinkResponse `pulumi:"resourceNavigationLinks"`
	// The reference to the RouteTable resource.
	RouteTable *RouteTableResponse `pulumi:"routeTable"`
	// An array of references to services injecting into this subnet.
	ServiceAssociationLinks []ServiceAssociationLinkResponse `pulumi:"serviceAssociationLinks"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies []ServiceEndpointPolicyResponse `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormatResponse `pulumi:"serviceEndpoints"`
}

// Subnet in a virtual network resource.
type SubnetResponseOutput struct{ *pulumi.OutputState }

func (SubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseOutput) ToSubnetResponseOutput() SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return o
}

// The address prefix for the subnet.
func (o SubnetResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetResponseOutput) Delegations() DelegationResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []DelegationResponse { return v.Delegations }).(DelegationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o SubnetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetResponseOutput) IpAllocations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []SubResourceResponse { return v.IpAllocations }).(SubResourceResponseArrayOutput)
}

// Array of IP configuration profiles which reference this subnet.
func (o SubnetResponseOutput) IpConfigurationProfiles() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []IPConfigurationProfileResponse { return v.IpConfigurationProfiles }).(IPConfigurationProfileResponseArrayOutput)
}

// An array of references to the network interface IP configurations using subnet.
func (o SubnetResponseOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []IPConfigurationResponse { return v.IpConfigurations }).(IPConfigurationResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetResponseOutput) NatGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *SubResourceResponse { return v.NatGateway }).(SubResourceResponsePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *NetworkSecurityGroupResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupResponsePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetResponseOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.PrivateEndpointNetworkPolicies }).(pulumi.StringPtrOutput)
}

// An array of references to private endpoints.
func (o SubnetResponseOutput) PrivateEndpoints() PrivateEndpointResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []PrivateEndpointResponse { return v.PrivateEndpoints }).(PrivateEndpointResponseArrayOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetResponseOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.PrivateLinkServiceNetworkPolicies }).(pulumi.StringPtrOutput)
}

// The provisioning state of the subnet resource.
func (o SubnetResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
func (o SubnetResponseOutput) Purpose() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetResponse) string { return v.Purpose }).(pulumi.StringOutput)
}

// An array of references to the external resources using subnet.
func (o SubnetResponseOutput) ResourceNavigationLinks() ResourceNavigationLinkResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ResourceNavigationLinkResponse { return v.ResourceNavigationLinks }).(ResourceNavigationLinkResponseArrayOutput)
}

// The reference to the RouteTable resource.
func (o SubnetResponseOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *RouteTableResponse { return v.RouteTable }).(RouteTableResponsePtrOutput)
}

// An array of references to services injecting into this subnet.
func (o SubnetResponseOutput) ServiceAssociationLinks() ServiceAssociationLinkResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ServiceAssociationLinkResponse { return v.ServiceAssociationLinks }).(ServiceAssociationLinkResponseArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetResponseOutput) ServiceEndpointPolicies() ServiceEndpointPolicyResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ServiceEndpointPolicyResponse { return v.ServiceEndpointPolicies }).(ServiceEndpointPolicyResponseArrayOutput)
}

// An array of service endpoints.
func (o SubnetResponseOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ServiceEndpointPropertiesFormatResponse { return v.ServiceEndpoints }).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

type SubnetResponsePtrOutput struct{ *pulumi.OutputState }

func (SubnetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetResponse)(nil)).Elem()
}

func (o SubnetResponsePtrOutput) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return o
}

func (o SubnetResponsePtrOutput) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return o
}

func (o SubnetResponsePtrOutput) Elem() SubnetResponseOutput {
	return o.ApplyT(func(v *SubnetResponse) SubnetResponse {
		if v != nil {
			return *v
		}
		var ret SubnetResponse
		return ret
	}).(SubnetResponseOutput)
}

// The address prefix for the subnet.
func (o SubnetResponsePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetResponsePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetResponsePtrOutput) Delegations() DelegationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []DelegationResponse {
		if v == nil {
			return nil
		}
		return v.Delegations
	}).(DelegationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetResponsePtrOutput) IpAllocations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.IpAllocations
	}).(SubResourceResponseArrayOutput)
}

// Array of IP configuration profiles which reference this subnet.
func (o SubnetResponsePtrOutput) IpConfigurationProfiles() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []IPConfigurationProfileResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurationProfiles
	}).(IPConfigurationProfileResponseArrayOutput)
}

// An array of references to the network interface IP configurations using subnet.
func (o SubnetResponsePtrOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []IPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(IPConfigurationResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetResponsePtrOutput) NatGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.NatGateway
	}).(SubResourceResponsePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetResponsePtrOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *NetworkSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupResponsePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetResponsePtrOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// An array of references to private endpoints.
func (o SubnetResponsePtrOutput) PrivateEndpoints() PrivateEndpointResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []PrivateEndpointResponse {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoints
	}).(PrivateEndpointResponseArrayOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetResponsePtrOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the subnet resource.
func (o SubnetResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
func (o SubnetResponsePtrOutput) Purpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Purpose
	}).(pulumi.StringPtrOutput)
}

// An array of references to the external resources using subnet.
func (o SubnetResponsePtrOutput) ResourceNavigationLinks() ResourceNavigationLinkResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ResourceNavigationLinkResponse {
		if v == nil {
			return nil
		}
		return v.ResourceNavigationLinks
	}).(ResourceNavigationLinkResponseArrayOutput)
}

// The reference to the RouteTable resource.
func (o SubnetResponsePtrOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *RouteTableResponse {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(RouteTableResponsePtrOutput)
}

// An array of references to services injecting into this subnet.
func (o SubnetResponsePtrOutput) ServiceAssociationLinks() ServiceAssociationLinkResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ServiceAssociationLinkResponse {
		if v == nil {
			return nil
		}
		return v.ServiceAssociationLinks
	}).(ServiceAssociationLinkResponseArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetResponsePtrOutput) ServiceEndpointPolicies() ServiceEndpointPolicyResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ServiceEndpointPolicyResponse {
		if v == nil {
			return nil
		}
		return v.ServiceEndpointPolicies
	}).(ServiceEndpointPolicyResponseArrayOutput)
}

// An array of service endpoints.
func (o SubnetResponsePtrOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ServiceEndpointPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

type SubnetResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) Index(i pulumi.IntInput) SubnetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetResponse {
		return vs[0].([]SubnetResponse)[vs[1].(int)]
	}).(SubnetResponseOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesResponse struct {
	// Flag to enable/disable traffic analytics.
	Enabled *bool `pulumi:"enabled"`
	// The interval in minutes which would decide how frequently TA service should do flow analytics.
	TrafficAnalyticsInterval *int `pulumi:"trafficAnalyticsInterval"`
	// The resource guid of the attached workspace.
	WorkspaceId *string `pulumi:"workspaceId"`
	// The location of the attached workspace.
	WorkspaceRegion *string `pulumi:"workspaceRegion"`
	// Resource Id of the attached workspace.
	WorkspaceResourceId *string `pulumi:"workspaceResourceId"`
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsConfigurationPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) ToTrafficAnalyticsConfigurationPropertiesResponseOutput() TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) ToTrafficAnalyticsConfigurationPropertiesResponseOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return o
}

// Flag to enable/disable traffic analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The interval in minutes which would decide how frequently TA service should do flow analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) TrafficAnalyticsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *int { return v.TrafficAnalyticsInterval }).(pulumi.IntPtrOutput)
}

// The resource guid of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *string { return v.WorkspaceRegion }).(pulumi.StringPtrOutput)
}

// Resource Id of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *string { return v.WorkspaceResourceId }).(pulumi.StringPtrOutput)
}

type TrafficAnalyticsConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsConfigurationPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutput() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) Elem() TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) TrafficAnalyticsConfigurationPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret TrafficAnalyticsConfigurationPropertiesResponse
		return ret
	}).(TrafficAnalyticsConfigurationPropertiesResponseOutput)
}

// Flag to enable/disable traffic analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The interval in minutes which would decide how frequently TA service should do flow analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) TrafficAnalyticsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.TrafficAnalyticsInterval
	}).(pulumi.IntPtrOutput)
}

// The resource guid of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceId
	}).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceRegion
	}).(pulumi.StringPtrOutput)
}

// Resource Id of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesResponse struct {
	// Parameters that define the configuration of traffic analytics.
	NetworkWatcherFlowAnalyticsConfiguration *TrafficAnalyticsConfigurationPropertiesResponse `pulumi:"networkWatcherFlowAnalyticsConfiguration"`
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsPropertiesResponseOutput) ToTrafficAnalyticsPropertiesResponseOutput() TrafficAnalyticsPropertiesResponseOutput {
	return o
}

func (o TrafficAnalyticsPropertiesResponseOutput) ToTrafficAnalyticsPropertiesResponseOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesResponseOutput {
	return o
}

// Parameters that define the configuration of traffic analytics.
func (o TrafficAnalyticsPropertiesResponseOutput) NetworkWatcherFlowAnalyticsConfiguration() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsPropertiesResponse) *TrafficAnalyticsConfigurationPropertiesResponse {
		return v.NetworkWatcherFlowAnalyticsConfiguration
	}).(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput)
}

type TrafficAnalyticsPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsPropertiesResponsePtrOutput) ToTrafficAnalyticsPropertiesResponsePtrOutput() TrafficAnalyticsPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsPropertiesResponsePtrOutput) ToTrafficAnalyticsPropertiesResponsePtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsPropertiesResponsePtrOutput) Elem() TrafficAnalyticsPropertiesResponseOutput {
	return o.ApplyT(func(v *TrafficAnalyticsPropertiesResponse) TrafficAnalyticsPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret TrafficAnalyticsPropertiesResponse
		return ret
	}).(TrafficAnalyticsPropertiesResponseOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o TrafficAnalyticsPropertiesResponsePtrOutput) NetworkWatcherFlowAnalyticsConfiguration() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsPropertiesResponse) *TrafficAnalyticsConfigurationPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.NetworkWatcherFlowAnalyticsConfiguration
	}).(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput)
}

// A TXT record.
type TxtRecord struct {
	// The text value of this TXT record.
	Value []string `pulumi:"value"`
}

// TxtRecordInput is an input type that accepts TxtRecordArgs and TxtRecordOutput values.
// You can construct a concrete instance of `TxtRecordInput` via:
//
//	TxtRecordArgs{...}
type TxtRecordInput interface {
	pulumi.Input

	ToTxtRecordOutput() TxtRecordOutput
	ToTxtRecordOutputWithContext(context.Context) TxtRecordOutput
}

// A TXT record.
type TxtRecordArgs struct {
	// The text value of this TXT record.
	Value pulumi.StringArrayInput `pulumi:"value"`
}

func (TxtRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TxtRecord)(nil)).Elem()
}

func (i TxtRecordArgs) ToTxtRecordOutput() TxtRecordOutput {
	return i.ToTxtRecordOutputWithContext(context.Background())
}

func (i TxtRecordArgs) ToTxtRecordOutputWithContext(ctx context.Context) TxtRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TxtRecordOutput)
}

// TxtRecordArrayInput is an input type that accepts TxtRecordArray and TxtRecordArrayOutput values.
// You can construct a concrete instance of `TxtRecordArrayInput` via:
//
//	TxtRecordArray{ TxtRecordArgs{...} }
type TxtRecordArrayInput interface {
	pulumi.Input

	ToTxtRecordArrayOutput() TxtRecordArrayOutput
	ToTxtRecordArrayOutputWithContext(context.Context) TxtRecordArrayOutput
}

type TxtRecordArray []TxtRecordInput

func (TxtRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TxtRecord)(nil)).Elem()
}

func (i TxtRecordArray) ToTxtRecordArrayOutput() TxtRecordArrayOutput {
	return i.ToTxtRecordArrayOutputWithContext(context.Background())
}

func (i TxtRecordArray) ToTxtRecordArrayOutputWithContext(ctx context.Context) TxtRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TxtRecordArrayOutput)
}

// A TXT record.
type TxtRecordOutput struct{ *pulumi.OutputState }

func (TxtRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TxtRecord)(nil)).Elem()
}

func (o TxtRecordOutput) ToTxtRecordOutput() TxtRecordOutput {
	return o
}

func (o TxtRecordOutput) ToTxtRecordOutputWithContext(ctx context.Context) TxtRecordOutput {
	return o
}

// The text value of this TXT record.
func (o TxtRecordOutput) Value() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TxtRecord) []string { return v.Value }).(pulumi.StringArrayOutput)
}

type TxtRecordArrayOutput struct{ *pulumi.OutputState }

func (TxtRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TxtRecord)(nil)).Elem()
}

func (o TxtRecordArrayOutput) ToTxtRecordArrayOutput() TxtRecordArrayOutput {
	return o
}

func (o TxtRecordArrayOutput) ToTxtRecordArrayOutputWithContext(ctx context.Context) TxtRecordArrayOutput {
	return o
}

func (o TxtRecordArrayOutput) Index(i pulumi.IntInput) TxtRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TxtRecord {
		return vs[0].([]TxtRecord)[vs[1].(int)]
	}).(TxtRecordOutput)
}

// A TXT record.
type TxtRecordResponse struct {
	// The text value of this TXT record.
	Value []string `pulumi:"value"`
}

// A TXT record.
type TxtRecordResponseOutput struct{ *pulumi.OutputState }

func (TxtRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TxtRecordResponse)(nil)).Elem()
}

func (o TxtRecordResponseOutput) ToTxtRecordResponseOutput() TxtRecordResponseOutput {
	return o
}

func (o TxtRecordResponseOutput) ToTxtRecordResponseOutputWithContext(ctx context.Context) TxtRecordResponseOutput {
	return o
}

// The text value of this TXT record.
func (o TxtRecordResponseOutput) Value() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TxtRecordResponse) []string { return v.Value }).(pulumi.StringArrayOutput)
}

type TxtRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (TxtRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TxtRecordResponse)(nil)).Elem()
}

func (o TxtRecordResponseArrayOutput) ToTxtRecordResponseArrayOutput() TxtRecordResponseArrayOutput {
	return o
}

func (o TxtRecordResponseArrayOutput) ToTxtRecordResponseArrayOutputWithContext(ctx context.Context) TxtRecordResponseArrayOutput {
	return o
}

func (o TxtRecordResponseArrayOutput) Index(i pulumi.IntInput) TxtRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TxtRecordResponse {
		return vs[0].([]TxtRecordResponse)[vs[1].(int)]
	}).(TxtRecordResponseOutput)
}

// VirtualHub route.
type VirtualHubRoute struct {
	// List of all addressPrefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// VirtualHubRouteInput is an input type that accepts VirtualHubRouteArgs and VirtualHubRouteOutput values.
// You can construct a concrete instance of `VirtualHubRouteInput` via:
//
//	VirtualHubRouteArgs{...}
type VirtualHubRouteInput interface {
	pulumi.Input

	ToVirtualHubRouteOutput() VirtualHubRouteOutput
	ToVirtualHubRouteOutputWithContext(context.Context) VirtualHubRouteOutput
}

// VirtualHub route.
type VirtualHubRouteArgs struct {
	// List of all addressPrefixes.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
}

func (VirtualHubRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRoute)(nil)).Elem()
}

func (i VirtualHubRouteArgs) ToVirtualHubRouteOutput() VirtualHubRouteOutput {
	return i.ToVirtualHubRouteOutputWithContext(context.Background())
}

func (i VirtualHubRouteArgs) ToVirtualHubRouteOutputWithContext(ctx context.Context) VirtualHubRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteOutput)
}

// VirtualHubRouteArrayInput is an input type that accepts VirtualHubRouteArray and VirtualHubRouteArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteArrayInput` via:
//
//	VirtualHubRouteArray{ VirtualHubRouteArgs{...} }
type VirtualHubRouteArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput
	ToVirtualHubRouteArrayOutputWithContext(context.Context) VirtualHubRouteArrayOutput
}

type VirtualHubRouteArray []VirtualHubRouteInput

func (VirtualHubRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRoute)(nil)).Elem()
}

func (i VirtualHubRouteArray) ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput {
	return i.ToVirtualHubRouteArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteArray) ToVirtualHubRouteArrayOutputWithContext(ctx context.Context) VirtualHubRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteArrayOutput)
}

// VirtualHub route.
type VirtualHubRouteOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRoute)(nil)).Elem()
}

func (o VirtualHubRouteOutput) ToVirtualHubRouteOutput() VirtualHubRouteOutput {
	return o
}

func (o VirtualHubRouteOutput) ToVirtualHubRouteOutputWithContext(ctx context.Context) VirtualHubRouteOutput {
	return o
}

// List of all addressPrefixes.
func (o VirtualHubRouteOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRoute) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// NextHop ip address.
func (o VirtualHubRouteOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRoute) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type VirtualHubRouteArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRoute)(nil)).Elem()
}

func (o VirtualHubRouteArrayOutput) ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput {
	return o
}

func (o VirtualHubRouteArrayOutput) ToVirtualHubRouteArrayOutputWithContext(ctx context.Context) VirtualHubRouteArrayOutput {
	return o
}

func (o VirtualHubRouteArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRoute {
		return vs[0].([]VirtualHubRoute)[vs[1].(int)]
	}).(VirtualHubRouteOutput)
}

// VirtualHub route.
type VirtualHubRouteResponse struct {
	// List of all addressPrefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// VirtualHub route.
type VirtualHubRouteResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteResponse)(nil)).Elem()
}

func (o VirtualHubRouteResponseOutput) ToVirtualHubRouteResponseOutput() VirtualHubRouteResponseOutput {
	return o
}

func (o VirtualHubRouteResponseOutput) ToVirtualHubRouteResponseOutputWithContext(ctx context.Context) VirtualHubRouteResponseOutput {
	return o
}

// List of all addressPrefixes.
func (o VirtualHubRouteResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// NextHop ip address.
func (o VirtualHubRouteResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type VirtualHubRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteResponse)(nil)).Elem()
}

func (o VirtualHubRouteResponseArrayOutput) ToVirtualHubRouteResponseArrayOutput() VirtualHubRouteResponseArrayOutput {
	return o
}

func (o VirtualHubRouteResponseArrayOutput) ToVirtualHubRouteResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteResponseArrayOutput {
	return o
}

func (o VirtualHubRouteResponseArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteResponse {
		return vs[0].([]VirtualHubRouteResponse)[vs[1].(int)]
	}).(VirtualHubRouteResponseOutput)
}

// VirtualHub route table.
type VirtualHubRouteTable struct {
	// List of all routes.
	Routes []VirtualHubRoute `pulumi:"routes"`
}

// VirtualHubRouteTableInput is an input type that accepts VirtualHubRouteTableArgs and VirtualHubRouteTableOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableInput` via:
//
//	VirtualHubRouteTableArgs{...}
type VirtualHubRouteTableInput interface {
	pulumi.Input

	ToVirtualHubRouteTableOutput() VirtualHubRouteTableOutput
	ToVirtualHubRouteTableOutputWithContext(context.Context) VirtualHubRouteTableOutput
}

// VirtualHub route table.
type VirtualHubRouteTableArgs struct {
	// List of all routes.
	Routes VirtualHubRouteArrayInput `pulumi:"routes"`
}

func (VirtualHubRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTable)(nil)).Elem()
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTableOutput() VirtualHubRouteTableOutput {
	return i.ToVirtualHubRouteTableOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTableOutputWithContext(ctx context.Context) VirtualHubRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableOutput)
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return i.ToVirtualHubRouteTablePtrOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableOutput).ToVirtualHubRouteTablePtrOutputWithContext(ctx)
}

// VirtualHubRouteTablePtrInput is an input type that accepts VirtualHubRouteTableArgs, VirtualHubRouteTablePtr and VirtualHubRouteTablePtrOutput values.
// You can construct a concrete instance of `VirtualHubRouteTablePtrInput` via:
//
//	        VirtualHubRouteTableArgs{...}
//
//	or:
//
//	        nil
type VirtualHubRouteTablePtrInput interface {
	pulumi.Input

	ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput
	ToVirtualHubRouteTablePtrOutputWithContext(context.Context) VirtualHubRouteTablePtrOutput
}

type virtualHubRouteTablePtrType VirtualHubRouteTableArgs

func VirtualHubRouteTablePtr(v *VirtualHubRouteTableArgs) VirtualHubRouteTablePtrInput {
	return (*virtualHubRouteTablePtrType)(v)
}

func (*virtualHubRouteTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTable)(nil)).Elem()
}

func (i *virtualHubRouteTablePtrType) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return i.ToVirtualHubRouteTablePtrOutputWithContext(context.Background())
}

func (i *virtualHubRouteTablePtrType) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTablePtrOutput)
}

// VirtualHub route table.
type VirtualHubRouteTableOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTable)(nil)).Elem()
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTableOutput() VirtualHubRouteTableOutput {
	return o
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTableOutputWithContext(ctx context.Context) VirtualHubRouteTableOutput {
	return o
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return o.ToVirtualHubRouteTablePtrOutputWithContext(context.Background())
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualHubRouteTable) *VirtualHubRouteTable {
		return &v
	}).(VirtualHubRouteTablePtrOutput)
}

// List of all routes.
func (o VirtualHubRouteTableOutput) Routes() VirtualHubRouteArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTable) []VirtualHubRoute { return v.Routes }).(VirtualHubRouteArrayOutput)
}

type VirtualHubRouteTablePtrOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTable)(nil)).Elem()
}

func (o VirtualHubRouteTablePtrOutput) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return o
}

func (o VirtualHubRouteTablePtrOutput) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return o
}

func (o VirtualHubRouteTablePtrOutput) Elem() VirtualHubRouteTableOutput {
	return o.ApplyT(func(v *VirtualHubRouteTable) VirtualHubRouteTable {
		if v != nil {
			return *v
		}
		var ret VirtualHubRouteTable
		return ret
	}).(VirtualHubRouteTableOutput)
}

// List of all routes.
func (o VirtualHubRouteTablePtrOutput) Routes() VirtualHubRouteArrayOutput {
	return o.ApplyT(func(v *VirtualHubRouteTable) []VirtualHubRoute {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(VirtualHubRouteArrayOutput)
}

// VirtualHub route table.
type VirtualHubRouteTableResponse struct {
	// List of all routes.
	Routes []VirtualHubRouteResponse `pulumi:"routes"`
}

// VirtualHub route table.
type VirtualHubRouteTableResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableResponse)(nil)).Elem()
}

func (o VirtualHubRouteTableResponseOutput) ToVirtualHubRouteTableResponseOutput() VirtualHubRouteTableResponseOutput {
	return o
}

func (o VirtualHubRouteTableResponseOutput) ToVirtualHubRouteTableResponseOutputWithContext(ctx context.Context) VirtualHubRouteTableResponseOutput {
	return o
}

// List of all routes.
func (o VirtualHubRouteTableResponseOutput) Routes() VirtualHubRouteResponseArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableResponse) []VirtualHubRouteResponse { return v.Routes }).(VirtualHubRouteResponseArrayOutput)
}

type VirtualHubRouteTableResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTableResponse)(nil)).Elem()
}

func (o VirtualHubRouteTableResponsePtrOutput) ToVirtualHubRouteTableResponsePtrOutput() VirtualHubRouteTableResponsePtrOutput {
	return o
}

func (o VirtualHubRouteTableResponsePtrOutput) ToVirtualHubRouteTableResponsePtrOutputWithContext(ctx context.Context) VirtualHubRouteTableResponsePtrOutput {
	return o
}

func (o VirtualHubRouteTableResponsePtrOutput) Elem() VirtualHubRouteTableResponseOutput {
	return o.ApplyT(func(v *VirtualHubRouteTableResponse) VirtualHubRouteTableResponse {
		if v != nil {
			return *v
		}
		var ret VirtualHubRouteTableResponse
		return ret
	}).(VirtualHubRouteTableResponseOutput)
}

// List of all routes.
func (o VirtualHubRouteTableResponsePtrOutput) Routes() VirtualHubRouteResponseArrayOutput {
	return o.ApplyT(func(v *VirtualHubRouteTableResponse) []VirtualHubRouteResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(VirtualHubRouteResponseArrayOutput)
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2 struct {
	// List of all connections attached to this route table v2.
	AttachedConnections []string `pulumi:"attachedConnections"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// List of all routes.
	Routes []VirtualHubRouteV2 `pulumi:"routes"`
}

// VirtualHubRouteTableV2Input is an input type that accepts VirtualHubRouteTableV2Args and VirtualHubRouteTableV2Output values.
// You can construct a concrete instance of `VirtualHubRouteTableV2Input` via:
//
//	VirtualHubRouteTableV2Args{...}
type VirtualHubRouteTableV2Input interface {
	pulumi.Input

	ToVirtualHubRouteTableV2Output() VirtualHubRouteTableV2Output
	ToVirtualHubRouteTableV2OutputWithContext(context.Context) VirtualHubRouteTableV2Output
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2Args struct {
	// List of all connections attached to this route table v2.
	AttachedConnections pulumi.StringArrayInput `pulumi:"attachedConnections"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of all routes.
	Routes VirtualHubRouteV2ArrayInput `pulumi:"routes"`
}

func (VirtualHubRouteTableV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableV2)(nil)).Elem()
}

func (i VirtualHubRouteTableV2Args) ToVirtualHubRouteTableV2Output() VirtualHubRouteTableV2Output {
	return i.ToVirtualHubRouteTableV2OutputWithContext(context.Background())
}

func (i VirtualHubRouteTableV2Args) ToVirtualHubRouteTableV2OutputWithContext(ctx context.Context) VirtualHubRouteTableV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableV2Output)
}

// VirtualHubRouteTableV2ArrayInput is an input type that accepts VirtualHubRouteTableV2Array and VirtualHubRouteTableV2ArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableV2ArrayInput` via:
//
//	VirtualHubRouteTableV2Array{ VirtualHubRouteTableV2Args{...} }
type VirtualHubRouteTableV2ArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteTableV2ArrayOutput() VirtualHubRouteTableV2ArrayOutput
	ToVirtualHubRouteTableV2ArrayOutputWithContext(context.Context) VirtualHubRouteTableV2ArrayOutput
}

type VirtualHubRouteTableV2Array []VirtualHubRouteTableV2Input

func (VirtualHubRouteTableV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteTableV2)(nil)).Elem()
}

func (i VirtualHubRouteTableV2Array) ToVirtualHubRouteTableV2ArrayOutput() VirtualHubRouteTableV2ArrayOutput {
	return i.ToVirtualHubRouteTableV2ArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableV2Array) ToVirtualHubRouteTableV2ArrayOutputWithContext(ctx context.Context) VirtualHubRouteTableV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableV2ArrayOutput)
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2Output struct{ *pulumi.OutputState }

func (VirtualHubRouteTableV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableV2)(nil)).Elem()
}

func (o VirtualHubRouteTableV2Output) ToVirtualHubRouteTableV2Output() VirtualHubRouteTableV2Output {
	return o
}

func (o VirtualHubRouteTableV2Output) ToVirtualHubRouteTableV2OutputWithContext(ctx context.Context) VirtualHubRouteTableV2Output {
	return o
}

// List of all connections attached to this route table v2.
func (o VirtualHubRouteTableV2Output) AttachedConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2) []string { return v.AttachedConnections }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o VirtualHubRouteTableV2Output) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualHubRouteTableV2Output) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of all routes.
func (o VirtualHubRouteTableV2Output) Routes() VirtualHubRouteV2ArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2) []VirtualHubRouteV2 { return v.Routes }).(VirtualHubRouteV2ArrayOutput)
}

type VirtualHubRouteTableV2ArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteTableV2)(nil)).Elem()
}

func (o VirtualHubRouteTableV2ArrayOutput) ToVirtualHubRouteTableV2ArrayOutput() VirtualHubRouteTableV2ArrayOutput {
	return o
}

func (o VirtualHubRouteTableV2ArrayOutput) ToVirtualHubRouteTableV2ArrayOutputWithContext(ctx context.Context) VirtualHubRouteTableV2ArrayOutput {
	return o
}

func (o VirtualHubRouteTableV2ArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteTableV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteTableV2 {
		return vs[0].([]VirtualHubRouteTableV2)[vs[1].(int)]
	}).(VirtualHubRouteTableV2Output)
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2Response struct {
	// List of all connections attached to this route table v2.
	AttachedConnections []string `pulumi:"attachedConnections"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the virtual hub route table v2 resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// List of all routes.
	Routes []VirtualHubRouteV2Response `pulumi:"routes"`
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2ResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableV2ResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableV2Response)(nil)).Elem()
}

func (o VirtualHubRouteTableV2ResponseOutput) ToVirtualHubRouteTableV2ResponseOutput() VirtualHubRouteTableV2ResponseOutput {
	return o
}

func (o VirtualHubRouteTableV2ResponseOutput) ToVirtualHubRouteTableV2ResponseOutputWithContext(ctx context.Context) VirtualHubRouteTableV2ResponseOutput {
	return o
}

// List of all connections attached to this route table v2.
func (o VirtualHubRouteTableV2ResponseOutput) AttachedConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) []string { return v.AttachedConnections }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualHubRouteTableV2ResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualHubRouteTableV2ResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualHubRouteTableV2ResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the virtual hub route table v2 resource.
func (o VirtualHubRouteTableV2ResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of all routes.
func (o VirtualHubRouteTableV2ResponseOutput) Routes() VirtualHubRouteV2ResponseArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) []VirtualHubRouteV2Response { return v.Routes }).(VirtualHubRouteV2ResponseArrayOutput)
}

type VirtualHubRouteTableV2ResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableV2ResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteTableV2Response)(nil)).Elem()
}

func (o VirtualHubRouteTableV2ResponseArrayOutput) ToVirtualHubRouteTableV2ResponseArrayOutput() VirtualHubRouteTableV2ResponseArrayOutput {
	return o
}

func (o VirtualHubRouteTableV2ResponseArrayOutput) ToVirtualHubRouteTableV2ResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteTableV2ResponseArrayOutput {
	return o
}

func (o VirtualHubRouteTableV2ResponseArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteTableV2ResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteTableV2Response {
		return vs[0].([]VirtualHubRouteTableV2Response)[vs[1].(int)]
	}).(VirtualHubRouteTableV2ResponseOutput)
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2 struct {
	// The type of destinations.
	DestinationType *string `pulumi:"destinationType"`
	// List of all destinations.
	Destinations []string `pulumi:"destinations"`
	// The type of next hops.
	NextHopType *string `pulumi:"nextHopType"`
	// NextHops ip address.
	NextHops []string `pulumi:"nextHops"`
}

// VirtualHubRouteV2Input is an input type that accepts VirtualHubRouteV2Args and VirtualHubRouteV2Output values.
// You can construct a concrete instance of `VirtualHubRouteV2Input` via:
//
//	VirtualHubRouteV2Args{...}
type VirtualHubRouteV2Input interface {
	pulumi.Input

	ToVirtualHubRouteV2Output() VirtualHubRouteV2Output
	ToVirtualHubRouteV2OutputWithContext(context.Context) VirtualHubRouteV2Output
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2Args struct {
	// The type of destinations.
	DestinationType pulumi.StringPtrInput `pulumi:"destinationType"`
	// List of all destinations.
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// The type of next hops.
	NextHopType pulumi.StringPtrInput `pulumi:"nextHopType"`
	// NextHops ip address.
	NextHops pulumi.StringArrayInput `pulumi:"nextHops"`
}

func (VirtualHubRouteV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteV2)(nil)).Elem()
}

func (i VirtualHubRouteV2Args) ToVirtualHubRouteV2Output() VirtualHubRouteV2Output {
	return i.ToVirtualHubRouteV2OutputWithContext(context.Background())
}

func (i VirtualHubRouteV2Args) ToVirtualHubRouteV2OutputWithContext(ctx context.Context) VirtualHubRouteV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteV2Output)
}

// VirtualHubRouteV2ArrayInput is an input type that accepts VirtualHubRouteV2Array and VirtualHubRouteV2ArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteV2ArrayInput` via:
//
//	VirtualHubRouteV2Array{ VirtualHubRouteV2Args{...} }
type VirtualHubRouteV2ArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteV2ArrayOutput() VirtualHubRouteV2ArrayOutput
	ToVirtualHubRouteV2ArrayOutputWithContext(context.Context) VirtualHubRouteV2ArrayOutput
}

type VirtualHubRouteV2Array []VirtualHubRouteV2Input

func (VirtualHubRouteV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteV2)(nil)).Elem()
}

func (i VirtualHubRouteV2Array) ToVirtualHubRouteV2ArrayOutput() VirtualHubRouteV2ArrayOutput {
	return i.ToVirtualHubRouteV2ArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteV2Array) ToVirtualHubRouteV2ArrayOutputWithContext(ctx context.Context) VirtualHubRouteV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteV2ArrayOutput)
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2Output struct{ *pulumi.OutputState }

func (VirtualHubRouteV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteV2)(nil)).Elem()
}

func (o VirtualHubRouteV2Output) ToVirtualHubRouteV2Output() VirtualHubRouteV2Output {
	return o
}

func (o VirtualHubRouteV2Output) ToVirtualHubRouteV2OutputWithContext(ctx context.Context) VirtualHubRouteV2Output {
	return o
}

// The type of destinations.
func (o VirtualHubRouteV2Output) DestinationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteV2) *string { return v.DestinationType }).(pulumi.StringPtrOutput)
}

// List of all destinations.
func (o VirtualHubRouteV2Output) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteV2) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The type of next hops.
func (o VirtualHubRouteV2Output) NextHopType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteV2) *string { return v.NextHopType }).(pulumi.StringPtrOutput)
}

// NextHops ip address.
func (o VirtualHubRouteV2Output) NextHops() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteV2) []string { return v.NextHops }).(pulumi.StringArrayOutput)
}

type VirtualHubRouteV2ArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteV2)(nil)).Elem()
}

func (o VirtualHubRouteV2ArrayOutput) ToVirtualHubRouteV2ArrayOutput() VirtualHubRouteV2ArrayOutput {
	return o
}

func (o VirtualHubRouteV2ArrayOutput) ToVirtualHubRouteV2ArrayOutputWithContext(ctx context.Context) VirtualHubRouteV2ArrayOutput {
	return o
}

func (o VirtualHubRouteV2ArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteV2 {
		return vs[0].([]VirtualHubRouteV2)[vs[1].(int)]
	}).(VirtualHubRouteV2Output)
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2Response struct {
	// The type of destinations.
	DestinationType *string `pulumi:"destinationType"`
	// List of all destinations.
	Destinations []string `pulumi:"destinations"`
	// The type of next hops.
	NextHopType *string `pulumi:"nextHopType"`
	// NextHops ip address.
	NextHops []string `pulumi:"nextHops"`
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2ResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteV2ResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteV2Response)(nil)).Elem()
}

func (o VirtualHubRouteV2ResponseOutput) ToVirtualHubRouteV2ResponseOutput() VirtualHubRouteV2ResponseOutput {
	return o
}

func (o VirtualHubRouteV2ResponseOutput) ToVirtualHubRouteV2ResponseOutputWithContext(ctx context.Context) VirtualHubRouteV2ResponseOutput {
	return o
}

// The type of destinations.
func (o VirtualHubRouteV2ResponseOutput) DestinationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteV2Response) *string { return v.DestinationType }).(pulumi.StringPtrOutput)
}

// List of all destinations.
func (o VirtualHubRouteV2ResponseOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteV2Response) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The type of next hops.
func (o VirtualHubRouteV2ResponseOutput) NextHopType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteV2Response) *string { return v.NextHopType }).(pulumi.StringPtrOutput)
}

// NextHops ip address.
func (o VirtualHubRouteV2ResponseOutput) NextHops() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteV2Response) []string { return v.NextHops }).(pulumi.StringArrayOutput)
}

type VirtualHubRouteV2ResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteV2ResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteV2Response)(nil)).Elem()
}

func (o VirtualHubRouteV2ResponseArrayOutput) ToVirtualHubRouteV2ResponseArrayOutput() VirtualHubRouteV2ResponseArrayOutput {
	return o
}

func (o VirtualHubRouteV2ResponseArrayOutput) ToVirtualHubRouteV2ResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteV2ResponseArrayOutput {
	return o
}

func (o VirtualHubRouteV2ResponseArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteV2ResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteV2Response {
		return vs[0].([]VirtualHubRouteV2Response)[vs[1].(int)]
	}).(VirtualHubRouteV2ResponseOutput)
}

// Virtual Network Tap resource.
type VirtualNetworkTapResponse struct {
	// The reference to the private IP address on the internal Load Balancer that will receive the tap.
	DestinationLoadBalancerFrontEndIPConfiguration *FrontendIPConfigurationResponse `pulumi:"destinationLoadBalancerFrontEndIPConfiguration"`
	// The reference to the private IP Address of the collector nic that will receive the tap.
	DestinationNetworkInterfaceIPConfiguration *NetworkInterfaceIPConfigurationResponse `pulumi:"destinationNetworkInterfaceIPConfiguration"`
	// The VXLAN destination port that will receive the tapped traffic.
	DestinationPort *int `pulumi:"destinationPort"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
	NetworkInterfaceTapConfigurations []NetworkInterfaceTapConfigurationResponse `pulumi:"networkInterfaceTapConfigurations"`
	// The provisioning state of the virtual network tap resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the virtual network tap resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Virtual Network Tap resource.
type VirtualNetworkTapResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponseOutput) ToVirtualNetworkTapResponseOutput() VirtualNetworkTapResponseOutput {
	return o
}

func (o VirtualNetworkTapResponseOutput) ToVirtualNetworkTapResponseOutputWithContext(ctx context.Context) VirtualNetworkTapResponseOutput {
	return o
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap.
func (o VirtualNetworkTapResponseOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *FrontendIPConfigurationResponse {
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationResponsePtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap.
func (o VirtualNetworkTapResponseOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *NetworkInterfaceIPConfigurationResponse {
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapResponseOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *int { return v.DestinationPort }).(pulumi.IntPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkTapResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualNetworkTapResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkTapResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
func (o VirtualNetworkTapResponseOutput) NetworkInterfaceTapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) []NetworkInterfaceTapConfigurationResponse {
		return v.NetworkInterfaceTapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// The provisioning state of the virtual network tap resource.
func (o VirtualNetworkTapResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the virtual network tap resource.
func (o VirtualNetworkTapResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource tags.
func (o VirtualNetworkTapResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkTapResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VirtualNetworkTapResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponsePtrOutput) ToVirtualNetworkTapResponsePtrOutput() VirtualNetworkTapResponsePtrOutput {
	return o
}

func (o VirtualNetworkTapResponsePtrOutput) ToVirtualNetworkTapResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkTapResponsePtrOutput {
	return o
}

func (o VirtualNetworkTapResponsePtrOutput) Elem() VirtualNetworkTapResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) VirtualNetworkTapResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkTapResponse
		return ret
	}).(VirtualNetworkTapResponseOutput)
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap.
func (o VirtualNetworkTapResponsePtrOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *FrontendIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationResponsePtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap.
func (o VirtualNetworkTapResponsePtrOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *NetworkInterfaceIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapResponsePtrOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *int {
		if v == nil {
			return nil
		}
		return v.DestinationPort
	}).(pulumi.IntPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkTapResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkTapResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkTapResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
func (o VirtualNetworkTapResponsePtrOutput) NetworkInterfaceTapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) []NetworkInterfaceTapConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaceTapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// The provisioning state of the virtual network tap resource.
func (o VirtualNetworkTapResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the virtual network tap resource.
func (o VirtualNetworkTapResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o VirtualNetworkTapResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkTapResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type VirtualNetworkTapResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponseArrayOutput) ToVirtualNetworkTapResponseArrayOutput() VirtualNetworkTapResponseArrayOutput {
	return o
}

func (o VirtualNetworkTapResponseArrayOutput) ToVirtualNetworkTapResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkTapResponseArrayOutput {
	return o
}

func (o VirtualNetworkTapResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkTapResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkTapResponse {
		return vs[0].([]VirtualNetworkTapResponse)[vs[1].(int)]
	}).(VirtualNetworkTapResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ARecordOutput{})
	pulumi.RegisterOutputType(ARecordArrayOutput{})
	pulumi.RegisterOutputType(ARecordResponseOutput{})
	pulumi.RegisterOutputType(ARecordResponseArrayOutput{})
	pulumi.RegisterOutputType(AaaaRecordOutput{})
	pulumi.RegisterOutputType(AaaaRecordArrayOutput{})
	pulumi.RegisterOutputType(AaaaRecordResponseOutput{})
	pulumi.RegisterOutputType(AaaaRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupResponseOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolResponseOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(CnameRecordOutput{})
	pulumi.RegisterOutputType(CnameRecordPtrOutput{})
	pulumi.RegisterOutputType(CnameRecordResponseOutput{})
	pulumi.RegisterOutputType(CnameRecordResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomDnsConfigPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(CustomDnsConfigPropertiesFormatResponseArrayOutput{})
	pulumi.RegisterOutputType(DdosSettingsResponseOutput{})
	pulumi.RegisterOutputType(DdosSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DelegationOutput{})
	pulumi.RegisterOutputType(DelegationArrayOutput{})
	pulumi.RegisterOutputType(DelegationResponseOutput{})
	pulumi.RegisterOutputType(DelegationResponseArrayOutput{})
	pulumi.RegisterOutputType(FlowLogFormatParametersResponseOutput{})
	pulumi.RegisterOutputType(FlowLogFormatParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(FlowLogResponseOutput{})
	pulumi.RegisterOutputType(FlowLogResponseArrayOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfileResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(InboundNatRuleResponseOutput{})
	pulumi.RegisterOutputType(InboundNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(IpTagResponseOutput{})
	pulumi.RegisterOutputType(IpTagResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(MxRecordOutput{})
	pulumi.RegisterOutputType(MxRecordArrayOutput{})
	pulumi.RegisterOutputType(MxRecordResponseOutput{})
	pulumi.RegisterOutputType(MxRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupPtrOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResponseOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResponsePtrOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterArrayOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterResponseOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(PacketCaptureStorageLocationOutput{})
	pulumi.RegisterOutputType(PacketCaptureStorageLocationResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(PtrRecordOutput{})
	pulumi.RegisterOutputType(PtrRecordArrayOutput{})
	pulumi.RegisterOutputType(PtrRecordResponseOutput{})
	pulumi.RegisterOutputType(PtrRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkResponseOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(RetentionPolicyParametersResponseOutput{})
	pulumi.RegisterOutputType(RetentionPolicyParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteOutput{})
	pulumi.RegisterOutputType(RouteArrayOutput{})
	pulumi.RegisterOutputType(RouteResponseOutput{})
	pulumi.RegisterOutputType(RouteResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteTableOutput{})
	pulumi.RegisterOutputType(RouteTablePtrOutput{})
	pulumi.RegisterOutputType(RouteTableResponseOutput{})
	pulumi.RegisterOutputType(RouteTableResponsePtrOutput{})
	pulumi.RegisterOutputType(SecurityRuleOutput{})
	pulumi.RegisterOutputType(SecurityRuleArrayOutput{})
	pulumi.RegisterOutputType(SecurityRuleResponseOutput{})
	pulumi.RegisterOutputType(SecurityRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkResponseOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatResponseArrayOutput{})
	pulumi.RegisterOutputType(SoaRecordOutput{})
	pulumi.RegisterOutputType(SoaRecordPtrOutput{})
	pulumi.RegisterOutputType(SoaRecordResponseOutput{})
	pulumi.RegisterOutputType(SoaRecordResponsePtrOutput{})
	pulumi.RegisterOutputType(SrvRecordOutput{})
	pulumi.RegisterOutputType(SrvRecordArrayOutput{})
	pulumi.RegisterOutputType(SrvRecordResponseOutput{})
	pulumi.RegisterOutputType(SrvRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(SubResourceOutput{})
	pulumi.RegisterOutputType(SubResourcePtrOutput{})
	pulumi.RegisterOutputType(SubResourceArrayOutput{})
	pulumi.RegisterOutputType(SubResourceResponseOutput{})
	pulumi.RegisterOutputType(SubResourceResponsePtrOutput{})
	pulumi.RegisterOutputType(SubResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetResponseOutput{})
	pulumi.RegisterOutputType(SubnetResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetResponseArrayOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TxtRecordOutput{})
	pulumi.RegisterOutputType(TxtRecordArrayOutput{})
	pulumi.RegisterOutputType(TxtRecordResponseOutput{})
	pulumi.RegisterOutputType(TxtRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTablePtrOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableV2Output{})
	pulumi.RegisterOutputType(VirtualHubRouteTableV2ArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableV2ResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableV2ResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteV2Output{})
	pulumi.RegisterOutputType(VirtualHubRouteV2ArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteV2ResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteV2ResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponseArrayOutput{})
}
