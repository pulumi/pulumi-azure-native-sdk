// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Lists IKE Security Associations for Vpn Site Link Connection in the specified resource group.
func GetVpnLinkConnectionIkeSas(ctx *pulumi.Context, args *GetVpnLinkConnectionIkeSasArgs, opts ...pulumi.InvokeOption) (*GetVpnLinkConnectionIkeSasResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetVpnLinkConnectionIkeSasResult
	err := ctx.Invoke("azure-native:network/v20230201:getVpnLinkConnectionIkeSas", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetVpnLinkConnectionIkeSasArgs struct {
	// The name of the vpn connection.
	ConnectionName string `pulumi:"connectionName"`
	// The name of the gateway.
	GatewayName string `pulumi:"gatewayName"`
	// The name of the vpn link connection.
	LinkConnectionName string `pulumi:"linkConnectionName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

type GetVpnLinkConnectionIkeSasResult struct {
	Value *string `pulumi:"value"`
}

func GetVpnLinkConnectionIkeSasOutput(ctx *pulumi.Context, args GetVpnLinkConnectionIkeSasOutputArgs, opts ...pulumi.InvokeOption) GetVpnLinkConnectionIkeSasResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVpnLinkConnectionIkeSasResult, error) {
			args := v.(GetVpnLinkConnectionIkeSasArgs)
			r, err := GetVpnLinkConnectionIkeSas(ctx, &args, opts...)
			var s GetVpnLinkConnectionIkeSasResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVpnLinkConnectionIkeSasResultOutput)
}

type GetVpnLinkConnectionIkeSasOutputArgs struct {
	// The name of the vpn connection.
	ConnectionName pulumi.StringInput `pulumi:"connectionName"`
	// The name of the gateway.
	GatewayName pulumi.StringInput `pulumi:"gatewayName"`
	// The name of the vpn link connection.
	LinkConnectionName pulumi.StringInput `pulumi:"linkConnectionName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetVpnLinkConnectionIkeSasOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnLinkConnectionIkeSasArgs)(nil)).Elem()
}

type GetVpnLinkConnectionIkeSasResultOutput struct{ *pulumi.OutputState }

func (GetVpnLinkConnectionIkeSasResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnLinkConnectionIkeSasResult)(nil)).Elem()
}

func (o GetVpnLinkConnectionIkeSasResultOutput) ToGetVpnLinkConnectionIkeSasResultOutput() GetVpnLinkConnectionIkeSasResultOutput {
	return o
}

func (o GetVpnLinkConnectionIkeSasResultOutput) ToGetVpnLinkConnectionIkeSasResultOutputWithContext(ctx context.Context) GetVpnLinkConnectionIkeSasResultOutput {
	return o
}

func (o GetVpnLinkConnectionIkeSasResultOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpnLinkConnectionIkeSasResult) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVpnLinkConnectionIkeSasResultOutput{})
}
