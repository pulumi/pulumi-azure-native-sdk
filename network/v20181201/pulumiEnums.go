// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20181201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The access type of the rule. Valid values are: 'Allow', 'Deny'
type Access string

const (
	AccessAllow = Access("Allow")
	AccessDeny  = Access("Deny")
)

func (Access) ElementType() reflect.Type {
	return reflect.TypeOf((*Access)(nil)).Elem()
}

func (e Access) ToAccessOutput() AccessOutput {
	return pulumi.ToOutput(e).(AccessOutput)
}

func (e Access) ToAccessOutputWithContext(ctx context.Context) AccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccessOutput)
}

func (e Access) ToAccessPtrOutput() AccessPtrOutput {
	return e.ToAccessPtrOutputWithContext(context.Background())
}

func (e Access) ToAccessPtrOutputWithContext(ctx context.Context) AccessPtrOutput {
	return Access(e).ToAccessOutputWithContext(ctx).ToAccessPtrOutputWithContext(ctx)
}

func (e Access) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Access) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Access) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Access) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccessOutput struct{ *pulumi.OutputState }

func (AccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Access)(nil)).Elem()
}

func (o AccessOutput) ToAccessOutput() AccessOutput {
	return o
}

func (o AccessOutput) ToAccessOutputWithContext(ctx context.Context) AccessOutput {
	return o
}

func (o AccessOutput) ToAccessPtrOutput() AccessPtrOutput {
	return o.ToAccessPtrOutputWithContext(context.Background())
}

func (o AccessOutput) ToAccessPtrOutputWithContext(ctx context.Context) AccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Access) *Access {
		return &v
	}).(AccessPtrOutput)
}

func (o AccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Access) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Access) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccessPtrOutput struct{ *pulumi.OutputState }

func (AccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Access)(nil)).Elem()
}

func (o AccessPtrOutput) ToAccessPtrOutput() AccessPtrOutput {
	return o
}

func (o AccessPtrOutput) ToAccessPtrOutputWithContext(ctx context.Context) AccessPtrOutput {
	return o
}

func (o AccessPtrOutput) Elem() AccessOutput {
	return o.ApplyT(func(v *Access) Access {
		if v != nil {
			return *v
		}
		var ret Access
		return ret
	}).(AccessOutput)
}

func (o AccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Access) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccessInput is an input type that accepts values of the Access enum
// A concrete instance of `AccessInput` can be one of the following:
//
//	AccessAllow
//	AccessDeny
type AccessInput interface {
	pulumi.Input

	ToAccessOutput() AccessOutput
	ToAccessOutputWithContext(context.Context) AccessOutput
}

var accessPtrType = reflect.TypeOf((**Access)(nil)).Elem()

type AccessPtrInput interface {
	pulumi.Input

	ToAccessPtrOutput() AccessPtrOutput
	ToAccessPtrOutputWithContext(context.Context) AccessPtrOutput
}

type accessPtr string

func AccessPtr(v string) AccessPtrInput {
	return (*accessPtr)(&v)
}

func (*accessPtr) ElementType() reflect.Type {
	return accessPtrType
}

func (in *accessPtr) ToAccessPtrOutput() AccessPtrOutput {
	return pulumi.ToOutput(in).(AccessPtrOutput)
}

func (in *accessPtr) ToAccessPtrOutputWithContext(ctx context.Context) AccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccessPtrOutput)
}

// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
type AuthorizationUseStatus string

const (
	AuthorizationUseStatusAvailable = AuthorizationUseStatus("Available")
	AuthorizationUseStatusInUse     = AuthorizationUseStatus("InUse")
)

func (AuthorizationUseStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationUseStatus)(nil)).Elem()
}

func (e AuthorizationUseStatus) ToAuthorizationUseStatusOutput() AuthorizationUseStatusOutput {
	return pulumi.ToOutput(e).(AuthorizationUseStatusOutput)
}

func (e AuthorizationUseStatus) ToAuthorizationUseStatusOutputWithContext(ctx context.Context) AuthorizationUseStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuthorizationUseStatusOutput)
}

func (e AuthorizationUseStatus) ToAuthorizationUseStatusPtrOutput() AuthorizationUseStatusPtrOutput {
	return e.ToAuthorizationUseStatusPtrOutputWithContext(context.Background())
}

func (e AuthorizationUseStatus) ToAuthorizationUseStatusPtrOutputWithContext(ctx context.Context) AuthorizationUseStatusPtrOutput {
	return AuthorizationUseStatus(e).ToAuthorizationUseStatusOutputWithContext(ctx).ToAuthorizationUseStatusPtrOutputWithContext(ctx)
}

func (e AuthorizationUseStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthorizationUseStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthorizationUseStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuthorizationUseStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuthorizationUseStatusOutput struct{ *pulumi.OutputState }

func (AuthorizationUseStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationUseStatus)(nil)).Elem()
}

func (o AuthorizationUseStatusOutput) ToAuthorizationUseStatusOutput() AuthorizationUseStatusOutput {
	return o
}

func (o AuthorizationUseStatusOutput) ToAuthorizationUseStatusOutputWithContext(ctx context.Context) AuthorizationUseStatusOutput {
	return o
}

func (o AuthorizationUseStatusOutput) ToAuthorizationUseStatusPtrOutput() AuthorizationUseStatusPtrOutput {
	return o.ToAuthorizationUseStatusPtrOutputWithContext(context.Background())
}

func (o AuthorizationUseStatusOutput) ToAuthorizationUseStatusPtrOutputWithContext(ctx context.Context) AuthorizationUseStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizationUseStatus) *AuthorizationUseStatus {
		return &v
	}).(AuthorizationUseStatusPtrOutput)
}

func (o AuthorizationUseStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuthorizationUseStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthorizationUseStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuthorizationUseStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthorizationUseStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthorizationUseStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuthorizationUseStatusPtrOutput struct{ *pulumi.OutputState }

func (AuthorizationUseStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationUseStatus)(nil)).Elem()
}

func (o AuthorizationUseStatusPtrOutput) ToAuthorizationUseStatusPtrOutput() AuthorizationUseStatusPtrOutput {
	return o
}

func (o AuthorizationUseStatusPtrOutput) ToAuthorizationUseStatusPtrOutputWithContext(ctx context.Context) AuthorizationUseStatusPtrOutput {
	return o
}

func (o AuthorizationUseStatusPtrOutput) Elem() AuthorizationUseStatusOutput {
	return o.ApplyT(func(v *AuthorizationUseStatus) AuthorizationUseStatus {
		if v != nil {
			return *v
		}
		var ret AuthorizationUseStatus
		return ret
	}).(AuthorizationUseStatusOutput)
}

func (o AuthorizationUseStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthorizationUseStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuthorizationUseStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuthorizationUseStatusInput is an input type that accepts values of the AuthorizationUseStatus enum
// A concrete instance of `AuthorizationUseStatusInput` can be one of the following:
//
//	AuthorizationUseStatusAvailable
//	AuthorizationUseStatusInUse
type AuthorizationUseStatusInput interface {
	pulumi.Input

	ToAuthorizationUseStatusOutput() AuthorizationUseStatusOutput
	ToAuthorizationUseStatusOutputWithContext(context.Context) AuthorizationUseStatusOutput
}

var authorizationUseStatusPtrType = reflect.TypeOf((**AuthorizationUseStatus)(nil)).Elem()

type AuthorizationUseStatusPtrInput interface {
	pulumi.Input

	ToAuthorizationUseStatusPtrOutput() AuthorizationUseStatusPtrOutput
	ToAuthorizationUseStatusPtrOutputWithContext(context.Context) AuthorizationUseStatusPtrOutput
}

type authorizationUseStatusPtr string

func AuthorizationUseStatusPtr(v string) AuthorizationUseStatusPtrInput {
	return (*authorizationUseStatusPtr)(&v)
}

func (*authorizationUseStatusPtr) ElementType() reflect.Type {
	return authorizationUseStatusPtrType
}

func (in *authorizationUseStatusPtr) ToAuthorizationUseStatusPtrOutput() AuthorizationUseStatusPtrOutput {
	return pulumi.ToOutput(in).(AuthorizationUseStatusPtrOutput)
}

func (in *authorizationUseStatusPtr) ToAuthorizationUseStatusPtrOutputWithContext(ctx context.Context) AuthorizationUseStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuthorizationUseStatusPtrOutput)
}

// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
type ExpressRouteCircuitPeeringAdvertisedPublicPrefixState string

const (
	ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateNotConfigured    = ExpressRouteCircuitPeeringAdvertisedPublicPrefixState("NotConfigured")
	ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateConfiguring      = ExpressRouteCircuitPeeringAdvertisedPublicPrefixState("Configuring")
	ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateConfigured       = ExpressRouteCircuitPeeringAdvertisedPublicPrefixState("Configured")
	ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateValidationNeeded = ExpressRouteCircuitPeeringAdvertisedPublicPrefixState("ValidationNeeded")
)

func (ExpressRouteCircuitPeeringAdvertisedPublicPrefixState) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringAdvertisedPublicPrefixState)(nil)).Elem()
}

func (e ExpressRouteCircuitPeeringAdvertisedPublicPrefixState) ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput() ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput {
	return pulumi.ToOutput(e).(ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput)
}

func (e ExpressRouteCircuitPeeringAdvertisedPublicPrefixState) ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput)
}

func (e ExpressRouteCircuitPeeringAdvertisedPublicPrefixState) ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput() ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput {
	return e.ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutputWithContext(context.Background())
}

func (e ExpressRouteCircuitPeeringAdvertisedPublicPrefixState) ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput {
	return ExpressRouteCircuitPeeringAdvertisedPublicPrefixState(e).ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutputWithContext(ctx).ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutputWithContext(ctx)
}

func (e ExpressRouteCircuitPeeringAdvertisedPublicPrefixState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExpressRouteCircuitPeeringAdvertisedPublicPrefixState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExpressRouteCircuitPeeringAdvertisedPublicPrefixState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExpressRouteCircuitPeeringAdvertisedPublicPrefixState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringAdvertisedPublicPrefixState)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput) ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput() ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput {
	return o
}

func (o ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput) ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput {
	return o
}

func (o ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput) ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput() ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput {
	return o.ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput) ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteCircuitPeeringAdvertisedPublicPrefixState) *ExpressRouteCircuitPeeringAdvertisedPublicPrefixState {
		return &v
	}).(ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput)
}

func (o ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExpressRouteCircuitPeeringAdvertisedPublicPrefixState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExpressRouteCircuitPeeringAdvertisedPublicPrefixState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringAdvertisedPublicPrefixState)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput) ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput() ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput) ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput) Elem() ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringAdvertisedPublicPrefixState) ExpressRouteCircuitPeeringAdvertisedPublicPrefixState {
		if v != nil {
			return *v
		}
		var ret ExpressRouteCircuitPeeringAdvertisedPublicPrefixState
		return ret
	}).(ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput)
}

func (o ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExpressRouteCircuitPeeringAdvertisedPublicPrefixState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateInput is an input type that accepts values of the ExpressRouteCircuitPeeringAdvertisedPublicPrefixState enum
// A concrete instance of `ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateInput` can be one of the following:
//
//	ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateNotConfigured
//	ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateConfiguring
//	ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateConfigured
//	ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateValidationNeeded
type ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput() ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput
	ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutputWithContext(context.Context) ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput
}

var expressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrType = reflect.TypeOf((**ExpressRouteCircuitPeeringAdvertisedPublicPrefixState)(nil)).Elem()

type ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput() ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput
	ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput
}

type expressRouteCircuitPeeringAdvertisedPublicPrefixStatePtr string

func ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtr(v string) ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrInput {
	return (*expressRouteCircuitPeeringAdvertisedPublicPrefixStatePtr)(&v)
}

func (*expressRouteCircuitPeeringAdvertisedPublicPrefixStatePtr) ElementType() reflect.Type {
	return expressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrType
}

func (in *expressRouteCircuitPeeringAdvertisedPublicPrefixStatePtr) ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput() ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput {
	return pulumi.ToOutput(in).(ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput)
}

func (in *expressRouteCircuitPeeringAdvertisedPublicPrefixStatePtr) ToExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput)
}

// The state of peering. Possible values are: 'Disabled' and 'Enabled'
type ExpressRouteCircuitPeeringState string

const (
	ExpressRouteCircuitPeeringStateDisabled = ExpressRouteCircuitPeeringState("Disabled")
	ExpressRouteCircuitPeeringStateEnabled  = ExpressRouteCircuitPeeringState("Enabled")
)

func (ExpressRouteCircuitPeeringState) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringState)(nil)).Elem()
}

func (e ExpressRouteCircuitPeeringState) ToExpressRouteCircuitPeeringStateOutput() ExpressRouteCircuitPeeringStateOutput {
	return pulumi.ToOutput(e).(ExpressRouteCircuitPeeringStateOutput)
}

func (e ExpressRouteCircuitPeeringState) ToExpressRouteCircuitPeeringStateOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExpressRouteCircuitPeeringStateOutput)
}

func (e ExpressRouteCircuitPeeringState) ToExpressRouteCircuitPeeringStatePtrOutput() ExpressRouteCircuitPeeringStatePtrOutput {
	return e.ToExpressRouteCircuitPeeringStatePtrOutputWithContext(context.Background())
}

func (e ExpressRouteCircuitPeeringState) ToExpressRouteCircuitPeeringStatePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringStatePtrOutput {
	return ExpressRouteCircuitPeeringState(e).ToExpressRouteCircuitPeeringStateOutputWithContext(ctx).ToExpressRouteCircuitPeeringStatePtrOutputWithContext(ctx)
}

func (e ExpressRouteCircuitPeeringState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExpressRouteCircuitPeeringState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExpressRouteCircuitPeeringState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExpressRouteCircuitPeeringState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExpressRouteCircuitPeeringStateOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringState)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringStateOutput) ToExpressRouteCircuitPeeringStateOutput() ExpressRouteCircuitPeeringStateOutput {
	return o
}

func (o ExpressRouteCircuitPeeringStateOutput) ToExpressRouteCircuitPeeringStateOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringStateOutput {
	return o
}

func (o ExpressRouteCircuitPeeringStateOutput) ToExpressRouteCircuitPeeringStatePtrOutput() ExpressRouteCircuitPeeringStatePtrOutput {
	return o.ToExpressRouteCircuitPeeringStatePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringStateOutput) ToExpressRouteCircuitPeeringStatePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteCircuitPeeringState) *ExpressRouteCircuitPeeringState {
		return &v
	}).(ExpressRouteCircuitPeeringStatePtrOutput)
}

func (o ExpressRouteCircuitPeeringStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExpressRouteCircuitPeeringState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExpressRouteCircuitPeeringStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExpressRouteCircuitPeeringState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringStatePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringState)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringStatePtrOutput) ToExpressRouteCircuitPeeringStatePtrOutput() ExpressRouteCircuitPeeringStatePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringStatePtrOutput) ToExpressRouteCircuitPeeringStatePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringStatePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringStatePtrOutput) Elem() ExpressRouteCircuitPeeringStateOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringState) ExpressRouteCircuitPeeringState {
		if v != nil {
			return *v
		}
		var ret ExpressRouteCircuitPeeringState
		return ret
	}).(ExpressRouteCircuitPeeringStateOutput)
}

func (o ExpressRouteCircuitPeeringStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExpressRouteCircuitPeeringState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExpressRouteCircuitPeeringStateInput is an input type that accepts values of the ExpressRouteCircuitPeeringState enum
// A concrete instance of `ExpressRouteCircuitPeeringStateInput` can be one of the following:
//
//	ExpressRouteCircuitPeeringStateDisabled
//	ExpressRouteCircuitPeeringStateEnabled
type ExpressRouteCircuitPeeringStateInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringStateOutput() ExpressRouteCircuitPeeringStateOutput
	ToExpressRouteCircuitPeeringStateOutputWithContext(context.Context) ExpressRouteCircuitPeeringStateOutput
}

var expressRouteCircuitPeeringStatePtrType = reflect.TypeOf((**ExpressRouteCircuitPeeringState)(nil)).Elem()

type ExpressRouteCircuitPeeringStatePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringStatePtrOutput() ExpressRouteCircuitPeeringStatePtrOutput
	ToExpressRouteCircuitPeeringStatePtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringStatePtrOutput
}

type expressRouteCircuitPeeringStatePtr string

func ExpressRouteCircuitPeeringStatePtr(v string) ExpressRouteCircuitPeeringStatePtrInput {
	return (*expressRouteCircuitPeeringStatePtr)(&v)
}

func (*expressRouteCircuitPeeringStatePtr) ElementType() reflect.Type {
	return expressRouteCircuitPeeringStatePtrType
}

func (in *expressRouteCircuitPeeringStatePtr) ToExpressRouteCircuitPeeringStatePtrOutput() ExpressRouteCircuitPeeringStatePtrOutput {
	return pulumi.ToOutput(in).(ExpressRouteCircuitPeeringStatePtrOutput)
}

func (in *expressRouteCircuitPeeringStatePtr) ToExpressRouteCircuitPeeringStatePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExpressRouteCircuitPeeringStatePtrOutput)
}

// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
type ExpressRouteCircuitSkuFamily string

const (
	ExpressRouteCircuitSkuFamilyUnlimitedData = ExpressRouteCircuitSkuFamily("UnlimitedData")
	ExpressRouteCircuitSkuFamilyMeteredData   = ExpressRouteCircuitSkuFamily("MeteredData")
)

func (ExpressRouteCircuitSkuFamily) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSkuFamily)(nil)).Elem()
}

func (e ExpressRouteCircuitSkuFamily) ToExpressRouteCircuitSkuFamilyOutput() ExpressRouteCircuitSkuFamilyOutput {
	return pulumi.ToOutput(e).(ExpressRouteCircuitSkuFamilyOutput)
}

func (e ExpressRouteCircuitSkuFamily) ToExpressRouteCircuitSkuFamilyOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuFamilyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExpressRouteCircuitSkuFamilyOutput)
}

func (e ExpressRouteCircuitSkuFamily) ToExpressRouteCircuitSkuFamilyPtrOutput() ExpressRouteCircuitSkuFamilyPtrOutput {
	return e.ToExpressRouteCircuitSkuFamilyPtrOutputWithContext(context.Background())
}

func (e ExpressRouteCircuitSkuFamily) ToExpressRouteCircuitSkuFamilyPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuFamilyPtrOutput {
	return ExpressRouteCircuitSkuFamily(e).ToExpressRouteCircuitSkuFamilyOutputWithContext(ctx).ToExpressRouteCircuitSkuFamilyPtrOutputWithContext(ctx)
}

func (e ExpressRouteCircuitSkuFamily) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExpressRouteCircuitSkuFamily) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExpressRouteCircuitSkuFamily) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExpressRouteCircuitSkuFamily) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExpressRouteCircuitSkuFamilyOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuFamilyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSkuFamily)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuFamilyOutput) ToExpressRouteCircuitSkuFamilyOutput() ExpressRouteCircuitSkuFamilyOutput {
	return o
}

func (o ExpressRouteCircuitSkuFamilyOutput) ToExpressRouteCircuitSkuFamilyOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuFamilyOutput {
	return o
}

func (o ExpressRouteCircuitSkuFamilyOutput) ToExpressRouteCircuitSkuFamilyPtrOutput() ExpressRouteCircuitSkuFamilyPtrOutput {
	return o.ToExpressRouteCircuitSkuFamilyPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuFamilyOutput) ToExpressRouteCircuitSkuFamilyPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuFamilyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteCircuitSkuFamily) *ExpressRouteCircuitSkuFamily {
		return &v
	}).(ExpressRouteCircuitSkuFamilyPtrOutput)
}

func (o ExpressRouteCircuitSkuFamilyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuFamilyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExpressRouteCircuitSkuFamily) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExpressRouteCircuitSkuFamilyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuFamilyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExpressRouteCircuitSkuFamily) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitSkuFamilyPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuFamilyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSkuFamily)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuFamilyPtrOutput) ToExpressRouteCircuitSkuFamilyPtrOutput() ExpressRouteCircuitSkuFamilyPtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuFamilyPtrOutput) ToExpressRouteCircuitSkuFamilyPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuFamilyPtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuFamilyPtrOutput) Elem() ExpressRouteCircuitSkuFamilyOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuFamily) ExpressRouteCircuitSkuFamily {
		if v != nil {
			return *v
		}
		var ret ExpressRouteCircuitSkuFamily
		return ret
	}).(ExpressRouteCircuitSkuFamilyOutput)
}

func (o ExpressRouteCircuitSkuFamilyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuFamilyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExpressRouteCircuitSkuFamily) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExpressRouteCircuitSkuFamilyInput is an input type that accepts values of the ExpressRouteCircuitSkuFamily enum
// A concrete instance of `ExpressRouteCircuitSkuFamilyInput` can be one of the following:
//
//	ExpressRouteCircuitSkuFamilyUnlimitedData
//	ExpressRouteCircuitSkuFamilyMeteredData
type ExpressRouteCircuitSkuFamilyInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuFamilyOutput() ExpressRouteCircuitSkuFamilyOutput
	ToExpressRouteCircuitSkuFamilyOutputWithContext(context.Context) ExpressRouteCircuitSkuFamilyOutput
}

var expressRouteCircuitSkuFamilyPtrType = reflect.TypeOf((**ExpressRouteCircuitSkuFamily)(nil)).Elem()

type ExpressRouteCircuitSkuFamilyPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuFamilyPtrOutput() ExpressRouteCircuitSkuFamilyPtrOutput
	ToExpressRouteCircuitSkuFamilyPtrOutputWithContext(context.Context) ExpressRouteCircuitSkuFamilyPtrOutput
}

type expressRouteCircuitSkuFamilyPtr string

func ExpressRouteCircuitSkuFamilyPtr(v string) ExpressRouteCircuitSkuFamilyPtrInput {
	return (*expressRouteCircuitSkuFamilyPtr)(&v)
}

func (*expressRouteCircuitSkuFamilyPtr) ElementType() reflect.Type {
	return expressRouteCircuitSkuFamilyPtrType
}

func (in *expressRouteCircuitSkuFamilyPtr) ToExpressRouteCircuitSkuFamilyPtrOutput() ExpressRouteCircuitSkuFamilyPtrOutput {
	return pulumi.ToOutput(in).(ExpressRouteCircuitSkuFamilyPtrOutput)
}

func (in *expressRouteCircuitSkuFamilyPtr) ToExpressRouteCircuitSkuFamilyPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuFamilyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExpressRouteCircuitSkuFamilyPtrOutput)
}

// The tier of the SKU. Possible values are 'Standard', 'Premium' or 'Local'.
type ExpressRouteCircuitSkuTier string

const (
	ExpressRouteCircuitSkuTierStandard = ExpressRouteCircuitSkuTier("Standard")
	ExpressRouteCircuitSkuTierPremium  = ExpressRouteCircuitSkuTier("Premium")
	ExpressRouteCircuitSkuTierBasic    = ExpressRouteCircuitSkuTier("Basic")
	ExpressRouteCircuitSkuTierLocal    = ExpressRouteCircuitSkuTier("Local")
)

func (ExpressRouteCircuitSkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSkuTier)(nil)).Elem()
}

func (e ExpressRouteCircuitSkuTier) ToExpressRouteCircuitSkuTierOutput() ExpressRouteCircuitSkuTierOutput {
	return pulumi.ToOutput(e).(ExpressRouteCircuitSkuTierOutput)
}

func (e ExpressRouteCircuitSkuTier) ToExpressRouteCircuitSkuTierOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExpressRouteCircuitSkuTierOutput)
}

func (e ExpressRouteCircuitSkuTier) ToExpressRouteCircuitSkuTierPtrOutput() ExpressRouteCircuitSkuTierPtrOutput {
	return e.ToExpressRouteCircuitSkuTierPtrOutputWithContext(context.Background())
}

func (e ExpressRouteCircuitSkuTier) ToExpressRouteCircuitSkuTierPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuTierPtrOutput {
	return ExpressRouteCircuitSkuTier(e).ToExpressRouteCircuitSkuTierOutputWithContext(ctx).ToExpressRouteCircuitSkuTierPtrOutputWithContext(ctx)
}

func (e ExpressRouteCircuitSkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExpressRouteCircuitSkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExpressRouteCircuitSkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExpressRouteCircuitSkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExpressRouteCircuitSkuTierOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSkuTier)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuTierOutput) ToExpressRouteCircuitSkuTierOutput() ExpressRouteCircuitSkuTierOutput {
	return o
}

func (o ExpressRouteCircuitSkuTierOutput) ToExpressRouteCircuitSkuTierOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuTierOutput {
	return o
}

func (o ExpressRouteCircuitSkuTierOutput) ToExpressRouteCircuitSkuTierPtrOutput() ExpressRouteCircuitSkuTierPtrOutput {
	return o.ToExpressRouteCircuitSkuTierPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuTierOutput) ToExpressRouteCircuitSkuTierPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteCircuitSkuTier) *ExpressRouteCircuitSkuTier {
		return &v
	}).(ExpressRouteCircuitSkuTierPtrOutput)
}

func (o ExpressRouteCircuitSkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExpressRouteCircuitSkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExpressRouteCircuitSkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExpressRouteCircuitSkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitSkuTierPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSkuTier)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuTierPtrOutput) ToExpressRouteCircuitSkuTierPtrOutput() ExpressRouteCircuitSkuTierPtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuTierPtrOutput) ToExpressRouteCircuitSkuTierPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuTierPtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuTierPtrOutput) Elem() ExpressRouteCircuitSkuTierOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuTier) ExpressRouteCircuitSkuTier {
		if v != nil {
			return *v
		}
		var ret ExpressRouteCircuitSkuTier
		return ret
	}).(ExpressRouteCircuitSkuTierOutput)
}

func (o ExpressRouteCircuitSkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExpressRouteCircuitSkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExpressRouteCircuitSkuTierInput is an input type that accepts values of the ExpressRouteCircuitSkuTier enum
// A concrete instance of `ExpressRouteCircuitSkuTierInput` can be one of the following:
//
//	ExpressRouteCircuitSkuTierStandard
//	ExpressRouteCircuitSkuTierPremium
//	ExpressRouteCircuitSkuTierBasic
//	ExpressRouteCircuitSkuTierLocal
type ExpressRouteCircuitSkuTierInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuTierOutput() ExpressRouteCircuitSkuTierOutput
	ToExpressRouteCircuitSkuTierOutputWithContext(context.Context) ExpressRouteCircuitSkuTierOutput
}

var expressRouteCircuitSkuTierPtrType = reflect.TypeOf((**ExpressRouteCircuitSkuTier)(nil)).Elem()

type ExpressRouteCircuitSkuTierPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuTierPtrOutput() ExpressRouteCircuitSkuTierPtrOutput
	ToExpressRouteCircuitSkuTierPtrOutputWithContext(context.Context) ExpressRouteCircuitSkuTierPtrOutput
}

type expressRouteCircuitSkuTierPtr string

func ExpressRouteCircuitSkuTierPtr(v string) ExpressRouteCircuitSkuTierPtrInput {
	return (*expressRouteCircuitSkuTierPtr)(&v)
}

func (*expressRouteCircuitSkuTierPtr) ElementType() reflect.Type {
	return expressRouteCircuitSkuTierPtrType
}

func (in *expressRouteCircuitSkuTierPtr) ToExpressRouteCircuitSkuTierPtrOutput() ExpressRouteCircuitSkuTierPtrOutput {
	return pulumi.ToOutput(in).(ExpressRouteCircuitSkuTierPtrOutput)
}

func (in *expressRouteCircuitSkuTierPtr) ToExpressRouteCircuitSkuTierPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExpressRouteCircuitSkuTierPtrOutput)
}

// The peering state.
type ExpressRoutePeeringState string

const (
	ExpressRoutePeeringStateDisabled = ExpressRoutePeeringState("Disabled")
	ExpressRoutePeeringStateEnabled  = ExpressRoutePeeringState("Enabled")
)

func (ExpressRoutePeeringState) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRoutePeeringState)(nil)).Elem()
}

func (e ExpressRoutePeeringState) ToExpressRoutePeeringStateOutput() ExpressRoutePeeringStateOutput {
	return pulumi.ToOutput(e).(ExpressRoutePeeringStateOutput)
}

func (e ExpressRoutePeeringState) ToExpressRoutePeeringStateOutputWithContext(ctx context.Context) ExpressRoutePeeringStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExpressRoutePeeringStateOutput)
}

func (e ExpressRoutePeeringState) ToExpressRoutePeeringStatePtrOutput() ExpressRoutePeeringStatePtrOutput {
	return e.ToExpressRoutePeeringStatePtrOutputWithContext(context.Background())
}

func (e ExpressRoutePeeringState) ToExpressRoutePeeringStatePtrOutputWithContext(ctx context.Context) ExpressRoutePeeringStatePtrOutput {
	return ExpressRoutePeeringState(e).ToExpressRoutePeeringStateOutputWithContext(ctx).ToExpressRoutePeeringStatePtrOutputWithContext(ctx)
}

func (e ExpressRoutePeeringState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExpressRoutePeeringState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExpressRoutePeeringState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExpressRoutePeeringState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExpressRoutePeeringStateOutput struct{ *pulumi.OutputState }

func (ExpressRoutePeeringStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRoutePeeringState)(nil)).Elem()
}

func (o ExpressRoutePeeringStateOutput) ToExpressRoutePeeringStateOutput() ExpressRoutePeeringStateOutput {
	return o
}

func (o ExpressRoutePeeringStateOutput) ToExpressRoutePeeringStateOutputWithContext(ctx context.Context) ExpressRoutePeeringStateOutput {
	return o
}

func (o ExpressRoutePeeringStateOutput) ToExpressRoutePeeringStatePtrOutput() ExpressRoutePeeringStatePtrOutput {
	return o.ToExpressRoutePeeringStatePtrOutputWithContext(context.Background())
}

func (o ExpressRoutePeeringStateOutput) ToExpressRoutePeeringStatePtrOutputWithContext(ctx context.Context) ExpressRoutePeeringStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRoutePeeringState) *ExpressRoutePeeringState {
		return &v
	}).(ExpressRoutePeeringStatePtrOutput)
}

func (o ExpressRoutePeeringStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExpressRoutePeeringStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExpressRoutePeeringState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExpressRoutePeeringStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExpressRoutePeeringStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExpressRoutePeeringState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExpressRoutePeeringStatePtrOutput struct{ *pulumi.OutputState }

func (ExpressRoutePeeringStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRoutePeeringState)(nil)).Elem()
}

func (o ExpressRoutePeeringStatePtrOutput) ToExpressRoutePeeringStatePtrOutput() ExpressRoutePeeringStatePtrOutput {
	return o
}

func (o ExpressRoutePeeringStatePtrOutput) ToExpressRoutePeeringStatePtrOutputWithContext(ctx context.Context) ExpressRoutePeeringStatePtrOutput {
	return o
}

func (o ExpressRoutePeeringStatePtrOutput) Elem() ExpressRoutePeeringStateOutput {
	return o.ApplyT(func(v *ExpressRoutePeeringState) ExpressRoutePeeringState {
		if v != nil {
			return *v
		}
		var ret ExpressRoutePeeringState
		return ret
	}).(ExpressRoutePeeringStateOutput)
}

func (o ExpressRoutePeeringStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExpressRoutePeeringStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExpressRoutePeeringState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExpressRoutePeeringStateInput is an input type that accepts values of the ExpressRoutePeeringState enum
// A concrete instance of `ExpressRoutePeeringStateInput` can be one of the following:
//
//	ExpressRoutePeeringStateDisabled
//	ExpressRoutePeeringStateEnabled
type ExpressRoutePeeringStateInput interface {
	pulumi.Input

	ToExpressRoutePeeringStateOutput() ExpressRoutePeeringStateOutput
	ToExpressRoutePeeringStateOutputWithContext(context.Context) ExpressRoutePeeringStateOutput
}

var expressRoutePeeringStatePtrType = reflect.TypeOf((**ExpressRoutePeeringState)(nil)).Elem()

type ExpressRoutePeeringStatePtrInput interface {
	pulumi.Input

	ToExpressRoutePeeringStatePtrOutput() ExpressRoutePeeringStatePtrOutput
	ToExpressRoutePeeringStatePtrOutputWithContext(context.Context) ExpressRoutePeeringStatePtrOutput
}

type expressRoutePeeringStatePtr string

func ExpressRoutePeeringStatePtr(v string) ExpressRoutePeeringStatePtrInput {
	return (*expressRoutePeeringStatePtr)(&v)
}

func (*expressRoutePeeringStatePtr) ElementType() reflect.Type {
	return expressRoutePeeringStatePtrType
}

func (in *expressRoutePeeringStatePtr) ToExpressRoutePeeringStatePtrOutput() ExpressRoutePeeringStatePtrOutput {
	return pulumi.ToOutput(in).(ExpressRoutePeeringStatePtrOutput)
}

func (in *expressRoutePeeringStatePtr) ToExpressRoutePeeringStatePtrOutputWithContext(ctx context.Context) ExpressRoutePeeringStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExpressRoutePeeringStatePtrOutput)
}

// The peering type.
type ExpressRoutePeeringType string

const (
	ExpressRoutePeeringTypeAzurePublicPeering  = ExpressRoutePeeringType("AzurePublicPeering")
	ExpressRoutePeeringTypeAzurePrivatePeering = ExpressRoutePeeringType("AzurePrivatePeering")
	ExpressRoutePeeringTypeMicrosoftPeering    = ExpressRoutePeeringType("MicrosoftPeering")
)

func (ExpressRoutePeeringType) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRoutePeeringType)(nil)).Elem()
}

func (e ExpressRoutePeeringType) ToExpressRoutePeeringTypeOutput() ExpressRoutePeeringTypeOutput {
	return pulumi.ToOutput(e).(ExpressRoutePeeringTypeOutput)
}

func (e ExpressRoutePeeringType) ToExpressRoutePeeringTypeOutputWithContext(ctx context.Context) ExpressRoutePeeringTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExpressRoutePeeringTypeOutput)
}

func (e ExpressRoutePeeringType) ToExpressRoutePeeringTypePtrOutput() ExpressRoutePeeringTypePtrOutput {
	return e.ToExpressRoutePeeringTypePtrOutputWithContext(context.Background())
}

func (e ExpressRoutePeeringType) ToExpressRoutePeeringTypePtrOutputWithContext(ctx context.Context) ExpressRoutePeeringTypePtrOutput {
	return ExpressRoutePeeringType(e).ToExpressRoutePeeringTypeOutputWithContext(ctx).ToExpressRoutePeeringTypePtrOutputWithContext(ctx)
}

func (e ExpressRoutePeeringType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExpressRoutePeeringType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExpressRoutePeeringType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExpressRoutePeeringType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExpressRoutePeeringTypeOutput struct{ *pulumi.OutputState }

func (ExpressRoutePeeringTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRoutePeeringType)(nil)).Elem()
}

func (o ExpressRoutePeeringTypeOutput) ToExpressRoutePeeringTypeOutput() ExpressRoutePeeringTypeOutput {
	return o
}

func (o ExpressRoutePeeringTypeOutput) ToExpressRoutePeeringTypeOutputWithContext(ctx context.Context) ExpressRoutePeeringTypeOutput {
	return o
}

func (o ExpressRoutePeeringTypeOutput) ToExpressRoutePeeringTypePtrOutput() ExpressRoutePeeringTypePtrOutput {
	return o.ToExpressRoutePeeringTypePtrOutputWithContext(context.Background())
}

func (o ExpressRoutePeeringTypeOutput) ToExpressRoutePeeringTypePtrOutputWithContext(ctx context.Context) ExpressRoutePeeringTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRoutePeeringType) *ExpressRoutePeeringType {
		return &v
	}).(ExpressRoutePeeringTypePtrOutput)
}

func (o ExpressRoutePeeringTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExpressRoutePeeringTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExpressRoutePeeringType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExpressRoutePeeringTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExpressRoutePeeringTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExpressRoutePeeringType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExpressRoutePeeringTypePtrOutput struct{ *pulumi.OutputState }

func (ExpressRoutePeeringTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRoutePeeringType)(nil)).Elem()
}

func (o ExpressRoutePeeringTypePtrOutput) ToExpressRoutePeeringTypePtrOutput() ExpressRoutePeeringTypePtrOutput {
	return o
}

func (o ExpressRoutePeeringTypePtrOutput) ToExpressRoutePeeringTypePtrOutputWithContext(ctx context.Context) ExpressRoutePeeringTypePtrOutput {
	return o
}

func (o ExpressRoutePeeringTypePtrOutput) Elem() ExpressRoutePeeringTypeOutput {
	return o.ApplyT(func(v *ExpressRoutePeeringType) ExpressRoutePeeringType {
		if v != nil {
			return *v
		}
		var ret ExpressRoutePeeringType
		return ret
	}).(ExpressRoutePeeringTypeOutput)
}

func (o ExpressRoutePeeringTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExpressRoutePeeringTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExpressRoutePeeringType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExpressRoutePeeringTypeInput is an input type that accepts values of the ExpressRoutePeeringType enum
// A concrete instance of `ExpressRoutePeeringTypeInput` can be one of the following:
//
//	ExpressRoutePeeringTypeAzurePublicPeering
//	ExpressRoutePeeringTypeAzurePrivatePeering
//	ExpressRoutePeeringTypeMicrosoftPeering
type ExpressRoutePeeringTypeInput interface {
	pulumi.Input

	ToExpressRoutePeeringTypeOutput() ExpressRoutePeeringTypeOutput
	ToExpressRoutePeeringTypeOutputWithContext(context.Context) ExpressRoutePeeringTypeOutput
}

var expressRoutePeeringTypePtrType = reflect.TypeOf((**ExpressRoutePeeringType)(nil)).Elem()

type ExpressRoutePeeringTypePtrInput interface {
	pulumi.Input

	ToExpressRoutePeeringTypePtrOutput() ExpressRoutePeeringTypePtrOutput
	ToExpressRoutePeeringTypePtrOutputWithContext(context.Context) ExpressRoutePeeringTypePtrOutput
}

type expressRoutePeeringTypePtr string

func ExpressRoutePeeringTypePtr(v string) ExpressRoutePeeringTypePtrInput {
	return (*expressRoutePeeringTypePtr)(&v)
}

func (*expressRoutePeeringTypePtr) ElementType() reflect.Type {
	return expressRoutePeeringTypePtrType
}

func (in *expressRoutePeeringTypePtr) ToExpressRoutePeeringTypePtrOutput() ExpressRoutePeeringTypePtrOutput {
	return pulumi.ToOutput(in).(ExpressRoutePeeringTypePtrOutput)
}

func (in *expressRoutePeeringTypePtr) ToExpressRoutePeeringTypePtrOutputWithContext(ctx context.Context) ExpressRoutePeeringTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExpressRoutePeeringTypePtrOutput)
}

// The rule type of the rule. Valid value is: 'Community'
type RouteFilterRuleType string

const (
	RouteFilterRuleTypeCommunity = RouteFilterRuleType("Community")
)

func (RouteFilterRuleType) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleType)(nil)).Elem()
}

func (e RouteFilterRuleType) ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput {
	return pulumi.ToOutput(e).(RouteFilterRuleTypeOutput)
}

func (e RouteFilterRuleType) ToRouteFilterRuleTypeOutputWithContext(ctx context.Context) RouteFilterRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouteFilterRuleTypeOutput)
}

func (e RouteFilterRuleType) ToRouteFilterRuleTypePtrOutput() RouteFilterRuleTypePtrOutput {
	return e.ToRouteFilterRuleTypePtrOutputWithContext(context.Background())
}

func (e RouteFilterRuleType) ToRouteFilterRuleTypePtrOutputWithContext(ctx context.Context) RouteFilterRuleTypePtrOutput {
	return RouteFilterRuleType(e).ToRouteFilterRuleTypeOutputWithContext(ctx).ToRouteFilterRuleTypePtrOutputWithContext(ctx)
}

func (e RouteFilterRuleType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouteFilterRuleType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouteFilterRuleType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouteFilterRuleType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouteFilterRuleTypeOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleType)(nil)).Elem()
}

func (o RouteFilterRuleTypeOutput) ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput {
	return o
}

func (o RouteFilterRuleTypeOutput) ToRouteFilterRuleTypeOutputWithContext(ctx context.Context) RouteFilterRuleTypeOutput {
	return o
}

func (o RouteFilterRuleTypeOutput) ToRouteFilterRuleTypePtrOutput() RouteFilterRuleTypePtrOutput {
	return o.ToRouteFilterRuleTypePtrOutputWithContext(context.Background())
}

func (o RouteFilterRuleTypeOutput) ToRouteFilterRuleTypePtrOutputWithContext(ctx context.Context) RouteFilterRuleTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteFilterRuleType) *RouteFilterRuleType {
		return &v
	}).(RouteFilterRuleTypePtrOutput)
}

func (o RouteFilterRuleTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouteFilterRuleTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouteFilterRuleType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouteFilterRuleTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouteFilterRuleTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouteFilterRuleType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouteFilterRuleTypePtrOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterRuleType)(nil)).Elem()
}

func (o RouteFilterRuleTypePtrOutput) ToRouteFilterRuleTypePtrOutput() RouteFilterRuleTypePtrOutput {
	return o
}

func (o RouteFilterRuleTypePtrOutput) ToRouteFilterRuleTypePtrOutputWithContext(ctx context.Context) RouteFilterRuleTypePtrOutput {
	return o
}

func (o RouteFilterRuleTypePtrOutput) Elem() RouteFilterRuleTypeOutput {
	return o.ApplyT(func(v *RouteFilterRuleType) RouteFilterRuleType {
		if v != nil {
			return *v
		}
		var ret RouteFilterRuleType
		return ret
	}).(RouteFilterRuleTypeOutput)
}

func (o RouteFilterRuleTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouteFilterRuleTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouteFilterRuleType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouteFilterRuleTypeInput is an input type that accepts values of the RouteFilterRuleType enum
// A concrete instance of `RouteFilterRuleTypeInput` can be one of the following:
//
//	RouteFilterRuleTypeCommunity
type RouteFilterRuleTypeInput interface {
	pulumi.Input

	ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput
	ToRouteFilterRuleTypeOutputWithContext(context.Context) RouteFilterRuleTypeOutput
}

var routeFilterRuleTypePtrType = reflect.TypeOf((**RouteFilterRuleType)(nil)).Elem()

type RouteFilterRuleTypePtrInput interface {
	pulumi.Input

	ToRouteFilterRuleTypePtrOutput() RouteFilterRuleTypePtrOutput
	ToRouteFilterRuleTypePtrOutputWithContext(context.Context) RouteFilterRuleTypePtrOutput
}

type routeFilterRuleTypePtr string

func RouteFilterRuleTypePtr(v string) RouteFilterRuleTypePtrInput {
	return (*routeFilterRuleTypePtr)(&v)
}

func (*routeFilterRuleTypePtr) ElementType() reflect.Type {
	return routeFilterRuleTypePtrType
}

func (in *routeFilterRuleTypePtr) ToRouteFilterRuleTypePtrOutput() RouteFilterRuleTypePtrOutput {
	return pulumi.ToOutput(in).(RouteFilterRuleTypePtrOutput)
}

func (in *routeFilterRuleTypePtr) ToRouteFilterRuleTypePtrOutputWithContext(ctx context.Context) RouteFilterRuleTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouteFilterRuleTypePtrOutput)
}

// The ServiceProviderProvisioningState state of the resource. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned', and 'Deprovisioning'.
type ServiceProviderProvisioningState string

const (
	ServiceProviderProvisioningStateNotProvisioned = ServiceProviderProvisioningState("NotProvisioned")
	ServiceProviderProvisioningStateProvisioning   = ServiceProviderProvisioningState("Provisioning")
	ServiceProviderProvisioningStateProvisioned    = ServiceProviderProvisioningState("Provisioned")
	ServiceProviderProvisioningStateDeprovisioning = ServiceProviderProvisioningState("Deprovisioning")
)

func (ServiceProviderProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceProviderProvisioningState)(nil)).Elem()
}

func (e ServiceProviderProvisioningState) ToServiceProviderProvisioningStateOutput() ServiceProviderProvisioningStateOutput {
	return pulumi.ToOutput(e).(ServiceProviderProvisioningStateOutput)
}

func (e ServiceProviderProvisioningState) ToServiceProviderProvisioningStateOutputWithContext(ctx context.Context) ServiceProviderProvisioningStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceProviderProvisioningStateOutput)
}

func (e ServiceProviderProvisioningState) ToServiceProviderProvisioningStatePtrOutput() ServiceProviderProvisioningStatePtrOutput {
	return e.ToServiceProviderProvisioningStatePtrOutputWithContext(context.Background())
}

func (e ServiceProviderProvisioningState) ToServiceProviderProvisioningStatePtrOutputWithContext(ctx context.Context) ServiceProviderProvisioningStatePtrOutput {
	return ServiceProviderProvisioningState(e).ToServiceProviderProvisioningStateOutputWithContext(ctx).ToServiceProviderProvisioningStatePtrOutputWithContext(ctx)
}

func (e ServiceProviderProvisioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceProviderProvisioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceProviderProvisioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceProviderProvisioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceProviderProvisioningStateOutput struct{ *pulumi.OutputState }

func (ServiceProviderProvisioningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceProviderProvisioningState)(nil)).Elem()
}

func (o ServiceProviderProvisioningStateOutput) ToServiceProviderProvisioningStateOutput() ServiceProviderProvisioningStateOutput {
	return o
}

func (o ServiceProviderProvisioningStateOutput) ToServiceProviderProvisioningStateOutputWithContext(ctx context.Context) ServiceProviderProvisioningStateOutput {
	return o
}

func (o ServiceProviderProvisioningStateOutput) ToServiceProviderProvisioningStatePtrOutput() ServiceProviderProvisioningStatePtrOutput {
	return o.ToServiceProviderProvisioningStatePtrOutputWithContext(context.Background())
}

func (o ServiceProviderProvisioningStateOutput) ToServiceProviderProvisioningStatePtrOutputWithContext(ctx context.Context) ServiceProviderProvisioningStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceProviderProvisioningState) *ServiceProviderProvisioningState {
		return &v
	}).(ServiceProviderProvisioningStatePtrOutput)
}

func (o ServiceProviderProvisioningStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceProviderProvisioningStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceProviderProvisioningState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceProviderProvisioningStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceProviderProvisioningStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceProviderProvisioningState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceProviderProvisioningStatePtrOutput struct{ *pulumi.OutputState }

func (ServiceProviderProvisioningStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceProviderProvisioningState)(nil)).Elem()
}

func (o ServiceProviderProvisioningStatePtrOutput) ToServiceProviderProvisioningStatePtrOutput() ServiceProviderProvisioningStatePtrOutput {
	return o
}

func (o ServiceProviderProvisioningStatePtrOutput) ToServiceProviderProvisioningStatePtrOutputWithContext(ctx context.Context) ServiceProviderProvisioningStatePtrOutput {
	return o
}

func (o ServiceProviderProvisioningStatePtrOutput) Elem() ServiceProviderProvisioningStateOutput {
	return o.ApplyT(func(v *ServiceProviderProvisioningState) ServiceProviderProvisioningState {
		if v != nil {
			return *v
		}
		var ret ServiceProviderProvisioningState
		return ret
	}).(ServiceProviderProvisioningStateOutput)
}

func (o ServiceProviderProvisioningStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceProviderProvisioningStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceProviderProvisioningState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceProviderProvisioningStateInput is an input type that accepts values of the ServiceProviderProvisioningState enum
// A concrete instance of `ServiceProviderProvisioningStateInput` can be one of the following:
//
//	ServiceProviderProvisioningStateNotProvisioned
//	ServiceProviderProvisioningStateProvisioning
//	ServiceProviderProvisioningStateProvisioned
//	ServiceProviderProvisioningStateDeprovisioning
type ServiceProviderProvisioningStateInput interface {
	pulumi.Input

	ToServiceProviderProvisioningStateOutput() ServiceProviderProvisioningStateOutput
	ToServiceProviderProvisioningStateOutputWithContext(context.Context) ServiceProviderProvisioningStateOutput
}

var serviceProviderProvisioningStatePtrType = reflect.TypeOf((**ServiceProviderProvisioningState)(nil)).Elem()

type ServiceProviderProvisioningStatePtrInput interface {
	pulumi.Input

	ToServiceProviderProvisioningStatePtrOutput() ServiceProviderProvisioningStatePtrOutput
	ToServiceProviderProvisioningStatePtrOutputWithContext(context.Context) ServiceProviderProvisioningStatePtrOutput
}

type serviceProviderProvisioningStatePtr string

func ServiceProviderProvisioningStatePtr(v string) ServiceProviderProvisioningStatePtrInput {
	return (*serviceProviderProvisioningStatePtr)(&v)
}

func (*serviceProviderProvisioningStatePtr) ElementType() reflect.Type {
	return serviceProviderProvisioningStatePtrType
}

func (in *serviceProviderProvisioningStatePtr) ToServiceProviderProvisioningStatePtrOutput() ServiceProviderProvisioningStatePtrOutput {
	return pulumi.ToOutput(in).(ServiceProviderProvisioningStatePtrOutput)
}

func (in *serviceProviderProvisioningStatePtr) ToServiceProviderProvisioningStatePtrOutputWithContext(ctx context.Context) ServiceProviderProvisioningStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceProviderProvisioningStatePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessOutput{})
	pulumi.RegisterOutputType(AccessPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationUseStatusOutput{})
	pulumi.RegisterOutputType(AuthorizationUseStatusPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringAdvertisedPublicPrefixStateOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringAdvertisedPublicPrefixStatePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringStateOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringStatePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuFamilyOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuFamilyPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuTierOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuTierPtrOutput{})
	pulumi.RegisterOutputType(ExpressRoutePeeringStateOutput{})
	pulumi.RegisterOutputType(ExpressRoutePeeringStatePtrOutput{})
	pulumi.RegisterOutputType(ExpressRoutePeeringTypeOutput{})
	pulumi.RegisterOutputType(ExpressRoutePeeringTypePtrOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleTypeOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleTypePtrOutput{})
	pulumi.RegisterOutputType(ServiceProviderProvisioningStateOutput{})
	pulumi.RegisterOutputType(ServiceProviderProvisioningStatePtrOutput{})
}
