// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Address prefix item.
type AddressPrefixItemResponse struct {
	// Address prefix.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// Address prefix type.
	AddressPrefixType *string `pulumi:"addressPrefixType"`
}

// Address prefix item.
type AddressPrefixItemResponseOutput struct{ *pulumi.OutputState }

func (AddressPrefixItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressPrefixItemResponse)(nil)).Elem()
}

func (o AddressPrefixItemResponseOutput) ToAddressPrefixItemResponseOutput() AddressPrefixItemResponseOutput {
	return o
}

func (o AddressPrefixItemResponseOutput) ToAddressPrefixItemResponseOutputWithContext(ctx context.Context) AddressPrefixItemResponseOutput {
	return o
}

// Address prefix.
func (o AddressPrefixItemResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressPrefixItemResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// Address prefix type.
func (o AddressPrefixItemResponseOutput) AddressPrefixType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddressPrefixItemResponse) *string { return v.AddressPrefixType }).(pulumi.StringPtrOutput)
}

type AddressPrefixItemResponseArrayOutput struct{ *pulumi.OutputState }

func (AddressPrefixItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AddressPrefixItemResponse)(nil)).Elem()
}

func (o AddressPrefixItemResponseArrayOutput) ToAddressPrefixItemResponseArrayOutput() AddressPrefixItemResponseArrayOutput {
	return o
}

func (o AddressPrefixItemResponseArrayOutput) ToAddressPrefixItemResponseArrayOutputWithContext(ctx context.Context) AddressPrefixItemResponseArrayOutput {
	return o
}

func (o AddressPrefixItemResponseArrayOutput) Index(i pulumi.IntInput) AddressPrefixItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AddressPrefixItemResponse {
		return vs[0].([]AddressPrefixItemResponse)[vs[1].(int)]
	}).(AddressPrefixItemResponseOutput)
}

// The network configuration group resource
type ConfigurationGroupResponse struct {
	// A description of the network group.
	Description *string `pulumi:"description"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Group member type.
	MemberType string `pulumi:"memberType"`
	// The provisioning state of the scope assignment resource.
	ProvisioningState string `pulumi:"provisioningState"`
}

// The network configuration group resource
type ConfigurationGroupResponseOutput struct{ *pulumi.OutputState }

func (ConfigurationGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationGroupResponse)(nil)).Elem()
}

func (o ConfigurationGroupResponseOutput) ToConfigurationGroupResponseOutput() ConfigurationGroupResponseOutput {
	return o
}

func (o ConfigurationGroupResponseOutput) ToConfigurationGroupResponseOutputWithContext(ctx context.Context) ConfigurationGroupResponseOutput {
	return o
}

// A description of the network group.
func (o ConfigurationGroupResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationGroupResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ConfigurationGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Group member type.
func (o ConfigurationGroupResponseOutput) MemberType() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationGroupResponse) string { return v.MemberType }).(pulumi.StringOutput)
}

// The provisioning state of the scope assignment resource.
func (o ConfigurationGroupResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationGroupResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ConfigurationGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationGroupResponse)(nil)).Elem()
}

func (o ConfigurationGroupResponseArrayOutput) ToConfigurationGroupResponseArrayOutput() ConfigurationGroupResponseArrayOutput {
	return o
}

func (o ConfigurationGroupResponseArrayOutput) ToConfigurationGroupResponseArrayOutputWithContext(ctx context.Context) ConfigurationGroupResponseArrayOutput {
	return o
}

func (o ConfigurationGroupResponseArrayOutput) Index(i pulumi.IntInput) ConfigurationGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationGroupResponse {
		return vs[0].([]ConfigurationGroupResponse)[vs[1].(int)]
	}).(ConfigurationGroupResponseOutput)
}

// Connectivity group item.
type ConnectivityGroupItemResponse struct {
	// Group connectivity type.
	GroupConnectivity string `pulumi:"groupConnectivity"`
	// Flag if global is supported.
	IsGlobal *string `pulumi:"isGlobal"`
	// Network group Id.
	NetworkGroupId string `pulumi:"networkGroupId"`
	// Flag if need to use hub gateway.
	UseHubGateway *string `pulumi:"useHubGateway"`
}

// Connectivity group item.
type ConnectivityGroupItemResponseOutput struct{ *pulumi.OutputState }

func (ConnectivityGroupItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityGroupItemResponse)(nil)).Elem()
}

func (o ConnectivityGroupItemResponseOutput) ToConnectivityGroupItemResponseOutput() ConnectivityGroupItemResponseOutput {
	return o
}

func (o ConnectivityGroupItemResponseOutput) ToConnectivityGroupItemResponseOutputWithContext(ctx context.Context) ConnectivityGroupItemResponseOutput {
	return o
}

// Group connectivity type.
func (o ConnectivityGroupItemResponseOutput) GroupConnectivity() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectivityGroupItemResponse) string { return v.GroupConnectivity }).(pulumi.StringOutput)
}

// Flag if global is supported.
func (o ConnectivityGroupItemResponseOutput) IsGlobal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityGroupItemResponse) *string { return v.IsGlobal }).(pulumi.StringPtrOutput)
}

// Network group Id.
func (o ConnectivityGroupItemResponseOutput) NetworkGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectivityGroupItemResponse) string { return v.NetworkGroupId }).(pulumi.StringOutput)
}

// Flag if need to use hub gateway.
func (o ConnectivityGroupItemResponseOutput) UseHubGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityGroupItemResponse) *string { return v.UseHubGateway }).(pulumi.StringPtrOutput)
}

type ConnectivityGroupItemResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectivityGroupItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectivityGroupItemResponse)(nil)).Elem()
}

func (o ConnectivityGroupItemResponseArrayOutput) ToConnectivityGroupItemResponseArrayOutput() ConnectivityGroupItemResponseArrayOutput {
	return o
}

func (o ConnectivityGroupItemResponseArrayOutput) ToConnectivityGroupItemResponseArrayOutputWithContext(ctx context.Context) ConnectivityGroupItemResponseArrayOutput {
	return o
}

func (o ConnectivityGroupItemResponseArrayOutput) Index(i pulumi.IntInput) ConnectivityGroupItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectivityGroupItemResponse {
		return vs[0].([]ConnectivityGroupItemResponse)[vs[1].(int)]
	}).(ConnectivityGroupItemResponseOutput)
}

// The network manager effective connectivity configuration
type EffectiveConnectivityConfigurationResponse struct {
	// Groups for configuration
	AppliesToGroups []ConnectivityGroupItemResponse `pulumi:"appliesToGroups"`
	// Effective configuration groups.
	ConfigurationGroups []ConfigurationGroupResponse `pulumi:"configurationGroups"`
	// Connectivity topology type.
	ConnectivityTopology string `pulumi:"connectivityTopology"`
	// Flag if need to remove current existing peerings.
	DeleteExistingPeering *string `pulumi:"deleteExistingPeering"`
	// A description of the connectivity configuration.
	Description *string `pulumi:"description"`
	// List of hubItems
	Hubs []HubResponse `pulumi:"hubs"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Flag if global mesh is supported.
	IsGlobal *string `pulumi:"isGlobal"`
	// The provisioning state of the connectivity configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
}

// The network manager effective connectivity configuration
type EffectiveConnectivityConfigurationResponseOutput struct{ *pulumi.OutputState }

func (EffectiveConnectivityConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EffectiveConnectivityConfigurationResponse)(nil)).Elem()
}

func (o EffectiveConnectivityConfigurationResponseOutput) ToEffectiveConnectivityConfigurationResponseOutput() EffectiveConnectivityConfigurationResponseOutput {
	return o
}

func (o EffectiveConnectivityConfigurationResponseOutput) ToEffectiveConnectivityConfigurationResponseOutputWithContext(ctx context.Context) EffectiveConnectivityConfigurationResponseOutput {
	return o
}

// Groups for configuration
func (o EffectiveConnectivityConfigurationResponseOutput) AppliesToGroups() ConnectivityGroupItemResponseArrayOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) []ConnectivityGroupItemResponse {
		return v.AppliesToGroups
	}).(ConnectivityGroupItemResponseArrayOutput)
}

// Effective configuration groups.
func (o EffectiveConnectivityConfigurationResponseOutput) ConfigurationGroups() ConfigurationGroupResponseArrayOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) []ConfigurationGroupResponse {
		return v.ConfigurationGroups
	}).(ConfigurationGroupResponseArrayOutput)
}

// Connectivity topology type.
func (o EffectiveConnectivityConfigurationResponseOutput) ConnectivityTopology() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) string { return v.ConnectivityTopology }).(pulumi.StringOutput)
}

// Flag if need to remove current existing peerings.
func (o EffectiveConnectivityConfigurationResponseOutput) DeleteExistingPeering() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) *string { return v.DeleteExistingPeering }).(pulumi.StringPtrOutput)
}

// A description of the connectivity configuration.
func (o EffectiveConnectivityConfigurationResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of hubItems
func (o EffectiveConnectivityConfigurationResponseOutput) Hubs() HubResponseArrayOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) []HubResponse { return v.Hubs }).(HubResponseArrayOutput)
}

// Resource ID.
func (o EffectiveConnectivityConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Flag if global mesh is supported.
func (o EffectiveConnectivityConfigurationResponseOutput) IsGlobal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) *string { return v.IsGlobal }).(pulumi.StringPtrOutput)
}

// The provisioning state of the connectivity configuration resource.
func (o EffectiveConnectivityConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveConnectivityConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type EffectiveConnectivityConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (EffectiveConnectivityConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EffectiveConnectivityConfigurationResponse)(nil)).Elem()
}

func (o EffectiveConnectivityConfigurationResponseArrayOutput) ToEffectiveConnectivityConfigurationResponseArrayOutput() EffectiveConnectivityConfigurationResponseArrayOutput {
	return o
}

func (o EffectiveConnectivityConfigurationResponseArrayOutput) ToEffectiveConnectivityConfigurationResponseArrayOutputWithContext(ctx context.Context) EffectiveConnectivityConfigurationResponseArrayOutput {
	return o
}

func (o EffectiveConnectivityConfigurationResponseArrayOutput) Index(i pulumi.IntInput) EffectiveConnectivityConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EffectiveConnectivityConfigurationResponse {
		return vs[0].([]EffectiveConnectivityConfigurationResponse)[vs[1].(int)]
	}).(EffectiveConnectivityConfigurationResponseOutput)
}

// Network default admin rule.
type EffectiveDefaultSecurityAdminRuleResponse struct {
	// Indicates the access allowed for this particular rule
	Access string `pulumi:"access"`
	// A description of the security admin configuration.
	ConfigurationDescription *string `pulumi:"configurationDescription"`
	// A description for this rule. Restricted to 140 chars.
	Description string `pulumi:"description"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The destination address prefixes. CIDR or destination IP ranges.
	Destinations []AddressPrefixItemResponse `pulumi:"destinations"`
	// Indicates if the traffic matched against the rule in inbound or outbound.
	Direction string `pulumi:"direction"`
	// Default rule flag.
	Flag *string `pulumi:"flag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Whether the rule is custom or default.
	// Expected value is 'Default'.
	Kind string `pulumi:"kind"`
	// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Groups for rule collection
	RuleCollectionAppliesToGroups []NetworkManagerSecurityGroupItemResponse `pulumi:"ruleCollectionAppliesToGroups"`
	// A description of the rule collection.
	RuleCollectionDescription *string `pulumi:"ruleCollectionDescription"`
	// Effective configuration groups.
	RuleGroups []ConfigurationGroupResponse `pulumi:"ruleGroups"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The CIDR or source IP ranges.
	Sources []AddressPrefixItemResponse `pulumi:"sources"`
}

// Network default admin rule.
type EffectiveDefaultSecurityAdminRuleResponseOutput struct{ *pulumi.OutputState }

func (EffectiveDefaultSecurityAdminRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EffectiveDefaultSecurityAdminRuleResponse)(nil)).Elem()
}

func (o EffectiveDefaultSecurityAdminRuleResponseOutput) ToEffectiveDefaultSecurityAdminRuleResponseOutput() EffectiveDefaultSecurityAdminRuleResponseOutput {
	return o
}

func (o EffectiveDefaultSecurityAdminRuleResponseOutput) ToEffectiveDefaultSecurityAdminRuleResponseOutputWithContext(ctx context.Context) EffectiveDefaultSecurityAdminRuleResponseOutput {
	return o
}

// Indicates the access allowed for this particular rule
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// A description of the security admin configuration.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) ConfigurationDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) *string { return v.ConfigurationDescription }).(pulumi.StringPtrOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The destination port ranges.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Destinations() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) []AddressPrefixItemResponse { return v.Destinations }).(AddressPrefixItemResponseArrayOutput)
}

// Indicates if the traffic matched against the rule in inbound or outbound.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// Default rule flag.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Flag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) *string { return v.Flag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether the rule is custom or default.
// Expected value is 'Default'.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Network protocol this rule applies to.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the resource.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Groups for rule collection
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) RuleCollectionAppliesToGroups() NetworkManagerSecurityGroupItemResponseArrayOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) []NetworkManagerSecurityGroupItemResponse {
		return v.RuleCollectionAppliesToGroups
	}).(NetworkManagerSecurityGroupItemResponseArrayOutput)
}

// A description of the rule collection.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) RuleCollectionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) *string { return v.RuleCollectionDescription }).(pulumi.StringPtrOutput)
}

// Effective configuration groups.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) RuleGroups() ConfigurationGroupResponseArrayOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) []ConfigurationGroupResponse { return v.RuleGroups }).(ConfigurationGroupResponseArrayOutput)
}

// The source port ranges.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The CIDR or source IP ranges.
func (o EffectiveDefaultSecurityAdminRuleResponseOutput) Sources() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v EffectiveDefaultSecurityAdminRuleResponse) []AddressPrefixItemResponse { return v.Sources }).(AddressPrefixItemResponseArrayOutput)
}

// Network admin rule.
type EffectiveSecurityAdminRuleResponse struct {
	// Indicates the access allowed for this particular rule
	Access string `pulumi:"access"`
	// A description of the security admin configuration.
	ConfigurationDescription *string `pulumi:"configurationDescription"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The destination address prefixes. CIDR or destination IP ranges.
	Destinations []AddressPrefixItemResponse `pulumi:"destinations"`
	// Indicates if the traffic matched against the rule in inbound or outbound.
	Direction string `pulumi:"direction"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Whether the rule is custom or default.
	// Expected value is 'Custom'.
	Kind string `pulumi:"kind"`
	// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Groups for rule collection
	RuleCollectionAppliesToGroups []NetworkManagerSecurityGroupItemResponse `pulumi:"ruleCollectionAppliesToGroups"`
	// A description of the rule collection.
	RuleCollectionDescription *string `pulumi:"ruleCollectionDescription"`
	// Effective configuration groups.
	RuleGroups []ConfigurationGroupResponse `pulumi:"ruleGroups"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// The CIDR or source IP ranges.
	Sources []AddressPrefixItemResponse `pulumi:"sources"`
}

// Network admin rule.
type EffectiveSecurityAdminRuleResponseOutput struct{ *pulumi.OutputState }

func (EffectiveSecurityAdminRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EffectiveSecurityAdminRuleResponse)(nil)).Elem()
}

func (o EffectiveSecurityAdminRuleResponseOutput) ToEffectiveSecurityAdminRuleResponseOutput() EffectiveSecurityAdminRuleResponseOutput {
	return o
}

func (o EffectiveSecurityAdminRuleResponseOutput) ToEffectiveSecurityAdminRuleResponseOutputWithContext(ctx context.Context) EffectiveSecurityAdminRuleResponseOutput {
	return o
}

// Indicates the access allowed for this particular rule
func (o EffectiveSecurityAdminRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// A description of the security admin configuration.
func (o EffectiveSecurityAdminRuleResponseOutput) ConfigurationDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) *string { return v.ConfigurationDescription }).(pulumi.StringPtrOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o EffectiveSecurityAdminRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o EffectiveSecurityAdminRuleResponseOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o EffectiveSecurityAdminRuleResponseOutput) Destinations() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) []AddressPrefixItemResponse { return v.Destinations }).(AddressPrefixItemResponseArrayOutput)
}

// Indicates if the traffic matched against the rule in inbound or outbound.
func (o EffectiveSecurityAdminRuleResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// Resource ID.
func (o EffectiveSecurityAdminRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether the rule is custom or default.
// Expected value is 'Custom'.
func (o EffectiveSecurityAdminRuleResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The priority of the rule. The value can be between 1 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o EffectiveSecurityAdminRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Network protocol this rule applies to.
func (o EffectiveSecurityAdminRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the resource.
func (o EffectiveSecurityAdminRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Groups for rule collection
func (o EffectiveSecurityAdminRuleResponseOutput) RuleCollectionAppliesToGroups() NetworkManagerSecurityGroupItemResponseArrayOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) []NetworkManagerSecurityGroupItemResponse {
		return v.RuleCollectionAppliesToGroups
	}).(NetworkManagerSecurityGroupItemResponseArrayOutput)
}

// A description of the rule collection.
func (o EffectiveSecurityAdminRuleResponseOutput) RuleCollectionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) *string { return v.RuleCollectionDescription }).(pulumi.StringPtrOutput)
}

// Effective configuration groups.
func (o EffectiveSecurityAdminRuleResponseOutput) RuleGroups() ConfigurationGroupResponseArrayOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) []ConfigurationGroupResponse { return v.RuleGroups }).(ConfigurationGroupResponseArrayOutput)
}

// The source port ranges.
func (o EffectiveSecurityAdminRuleResponseOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// The CIDR or source IP ranges.
func (o EffectiveSecurityAdminRuleResponseOutput) Sources() AddressPrefixItemResponseArrayOutput {
	return o.ApplyT(func(v EffectiveSecurityAdminRuleResponse) []AddressPrefixItemResponse { return v.Sources }).(AddressPrefixItemResponseArrayOutput)
}

// Hub Item.
type HubResponse struct {
	// Resource Id.
	ResourceId *string `pulumi:"resourceId"`
	// Resource Type.
	ResourceType *string `pulumi:"resourceType"`
}

// Hub Item.
type HubResponseOutput struct{ *pulumi.OutputState }

func (HubResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubResponse)(nil)).Elem()
}

func (o HubResponseOutput) ToHubResponseOutput() HubResponseOutput {
	return o
}

func (o HubResponseOutput) ToHubResponseOutputWithContext(ctx context.Context) HubResponseOutput {
	return o
}

// Resource Id.
func (o HubResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Resource Type.
func (o HubResponseOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubResponse) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type HubResponseArrayOutput struct{ *pulumi.OutputState }

func (HubResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubResponse)(nil)).Elem()
}

func (o HubResponseArrayOutput) ToHubResponseArrayOutput() HubResponseArrayOutput {
	return o
}

func (o HubResponseArrayOutput) ToHubResponseArrayOutputWithContext(ctx context.Context) HubResponseArrayOutput {
	return o
}

func (o HubResponseArrayOutput) Index(i pulumi.IntInput) HubResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HubResponse {
		return vs[0].([]HubResponse)[vs[1].(int)]
	}).(HubResponseOutput)
}

// Network manager security group item.
type NetworkManagerSecurityGroupItemResponse struct {
	// Network manager group Id.
	NetworkGroupId string `pulumi:"networkGroupId"`
}

// Network manager security group item.
type NetworkManagerSecurityGroupItemResponseOutput struct{ *pulumi.OutputState }

func (NetworkManagerSecurityGroupItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerSecurityGroupItemResponse)(nil)).Elem()
}

func (o NetworkManagerSecurityGroupItemResponseOutput) ToNetworkManagerSecurityGroupItemResponseOutput() NetworkManagerSecurityGroupItemResponseOutput {
	return o
}

func (o NetworkManagerSecurityGroupItemResponseOutput) ToNetworkManagerSecurityGroupItemResponseOutputWithContext(ctx context.Context) NetworkManagerSecurityGroupItemResponseOutput {
	return o
}

// Network manager group Id.
func (o NetworkManagerSecurityGroupItemResponseOutput) NetworkGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkManagerSecurityGroupItemResponse) string { return v.NetworkGroupId }).(pulumi.StringOutput)
}

type NetworkManagerSecurityGroupItemResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerSecurityGroupItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkManagerSecurityGroupItemResponse)(nil)).Elem()
}

func (o NetworkManagerSecurityGroupItemResponseArrayOutput) ToNetworkManagerSecurityGroupItemResponseArrayOutput() NetworkManagerSecurityGroupItemResponseArrayOutput {
	return o
}

func (o NetworkManagerSecurityGroupItemResponseArrayOutput) ToNetworkManagerSecurityGroupItemResponseArrayOutputWithContext(ctx context.Context) NetworkManagerSecurityGroupItemResponseArrayOutput {
	return o
}

func (o NetworkManagerSecurityGroupItemResponseArrayOutput) Index(i pulumi.IntInput) NetworkManagerSecurityGroupItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkManagerSecurityGroupItemResponse {
		return vs[0].([]NetworkManagerSecurityGroupItemResponse)[vs[1].(int)]
	}).(NetworkManagerSecurityGroupItemResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AddressPrefixItemResponseOutput{})
	pulumi.RegisterOutputType(AddressPrefixItemResponseArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationGroupResponseOutput{})
	pulumi.RegisterOutputType(ConfigurationGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectivityGroupItemResponseOutput{})
	pulumi.RegisterOutputType(ConnectivityGroupItemResponseArrayOutput{})
	pulumi.RegisterOutputType(EffectiveConnectivityConfigurationResponseOutput{})
	pulumi.RegisterOutputType(EffectiveConnectivityConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(EffectiveDefaultSecurityAdminRuleResponseOutput{})
	pulumi.RegisterOutputType(EffectiveSecurityAdminRuleResponseOutput{})
	pulumi.RegisterOutputType(HubResponseOutput{})
	pulumi.RegisterOutputType(HubResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerSecurityGroupItemResponseOutput{})
	pulumi.RegisterOutputType(NetworkManagerSecurityGroupItemResponseArrayOutput{})
}
