// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package impact

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Insight resource
//
// Uses Azure REST API version 2024-05-01-preview. In version 2.x of the Azure Native provider, it used API version 2024-05-01-preview.
type Insight struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource-specific properties for this resource.
	Properties InsightPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewInsight registers a new resource with the given unique name, arguments, and options.
func NewInsight(ctx *pulumi.Context,
	name string, args *InsightArgs, opts ...pulumi.ResourceOption) (*Insight, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.WorkloadImpactName == nil {
		return nil, errors.New("invalid value for required argument 'WorkloadImpactName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:impact/v20240501preview:Insight"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Insight
	err := ctx.RegisterResource("azure-native:impact:Insight", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInsight gets an existing Insight resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInsight(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InsightState, opts ...pulumi.ResourceOption) (*Insight, error) {
	var resource Insight
	err := ctx.ReadResource("azure-native:impact:Insight", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Insight resources.
type insightState struct {
}

type InsightState struct {
}

func (InsightState) ElementType() reflect.Type {
	return reflect.TypeOf((*insightState)(nil)).Elem()
}

type insightArgs struct {
	// Name of the insight
	InsightName *string `pulumi:"insightName"`
	// The resource-specific properties for this resource.
	Properties *InsightProperties `pulumi:"properties"`
	// workloadImpact resource
	WorkloadImpactName string `pulumi:"workloadImpactName"`
}

// The set of arguments for constructing a Insight resource.
type InsightArgs struct {
	// Name of the insight
	InsightName pulumi.StringPtrInput
	// The resource-specific properties for this resource.
	Properties InsightPropertiesPtrInput
	// workloadImpact resource
	WorkloadImpactName pulumi.StringInput
}

func (InsightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*insightArgs)(nil)).Elem()
}

type InsightInput interface {
	pulumi.Input

	ToInsightOutput() InsightOutput
	ToInsightOutputWithContext(ctx context.Context) InsightOutput
}

func (*Insight) ElementType() reflect.Type {
	return reflect.TypeOf((**Insight)(nil)).Elem()
}

func (i *Insight) ToInsightOutput() InsightOutput {
	return i.ToInsightOutputWithContext(context.Background())
}

func (i *Insight) ToInsightOutputWithContext(ctx context.Context) InsightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightOutput)
}

type InsightOutput struct{ *pulumi.OutputState }

func (InsightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Insight)(nil)).Elem()
}

func (o InsightOutput) ToInsightOutput() InsightOutput {
	return o
}

func (o InsightOutput) ToInsightOutputWithContext(ctx context.Context) InsightOutput {
	return o
}

// The Azure API version of the resource.
func (o InsightOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Insight) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o InsightOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Insight) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource-specific properties for this resource.
func (o InsightOutput) Properties() InsightPropertiesResponseOutput {
	return o.ApplyT(func(v *Insight) InsightPropertiesResponseOutput { return v.Properties }).(InsightPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o InsightOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Insight) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o InsightOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Insight) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(InsightOutput{})
}
