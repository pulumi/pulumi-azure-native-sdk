// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package impact

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Client incident details ex: incidentId , incident source
type ClientIncidentDetails struct {
	// Client incident id. ex : id of the incident created to investigate and address the impact if any.
	ClientIncidentId *string `pulumi:"clientIncidentId"`
	// Client incident source. ex : source system name where the incident is created
	ClientIncidentSource *string `pulumi:"clientIncidentSource"`
}

// ClientIncidentDetailsInput is an input type that accepts ClientIncidentDetailsArgs and ClientIncidentDetailsOutput values.
// You can construct a concrete instance of `ClientIncidentDetailsInput` via:
//
//	ClientIncidentDetailsArgs{...}
type ClientIncidentDetailsInput interface {
	pulumi.Input

	ToClientIncidentDetailsOutput() ClientIncidentDetailsOutput
	ToClientIncidentDetailsOutputWithContext(context.Context) ClientIncidentDetailsOutput
}

// Client incident details ex: incidentId , incident source
type ClientIncidentDetailsArgs struct {
	// Client incident id. ex : id of the incident created to investigate and address the impact if any.
	ClientIncidentId pulumi.StringPtrInput `pulumi:"clientIncidentId"`
	// Client incident source. ex : source system name where the incident is created
	ClientIncidentSource pulumi.StringPtrInput `pulumi:"clientIncidentSource"`
}

func (ClientIncidentDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientIncidentDetails)(nil)).Elem()
}

func (i ClientIncidentDetailsArgs) ToClientIncidentDetailsOutput() ClientIncidentDetailsOutput {
	return i.ToClientIncidentDetailsOutputWithContext(context.Background())
}

func (i ClientIncidentDetailsArgs) ToClientIncidentDetailsOutputWithContext(ctx context.Context) ClientIncidentDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientIncidentDetailsOutput)
}

func (i ClientIncidentDetailsArgs) ToClientIncidentDetailsPtrOutput() ClientIncidentDetailsPtrOutput {
	return i.ToClientIncidentDetailsPtrOutputWithContext(context.Background())
}

func (i ClientIncidentDetailsArgs) ToClientIncidentDetailsPtrOutputWithContext(ctx context.Context) ClientIncidentDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientIncidentDetailsOutput).ToClientIncidentDetailsPtrOutputWithContext(ctx)
}

// ClientIncidentDetailsPtrInput is an input type that accepts ClientIncidentDetailsArgs, ClientIncidentDetailsPtr and ClientIncidentDetailsPtrOutput values.
// You can construct a concrete instance of `ClientIncidentDetailsPtrInput` via:
//
//	        ClientIncidentDetailsArgs{...}
//
//	or:
//
//	        nil
type ClientIncidentDetailsPtrInput interface {
	pulumi.Input

	ToClientIncidentDetailsPtrOutput() ClientIncidentDetailsPtrOutput
	ToClientIncidentDetailsPtrOutputWithContext(context.Context) ClientIncidentDetailsPtrOutput
}

type clientIncidentDetailsPtrType ClientIncidentDetailsArgs

func ClientIncidentDetailsPtr(v *ClientIncidentDetailsArgs) ClientIncidentDetailsPtrInput {
	return (*clientIncidentDetailsPtrType)(v)
}

func (*clientIncidentDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientIncidentDetails)(nil)).Elem()
}

func (i *clientIncidentDetailsPtrType) ToClientIncidentDetailsPtrOutput() ClientIncidentDetailsPtrOutput {
	return i.ToClientIncidentDetailsPtrOutputWithContext(context.Background())
}

func (i *clientIncidentDetailsPtrType) ToClientIncidentDetailsPtrOutputWithContext(ctx context.Context) ClientIncidentDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientIncidentDetailsPtrOutput)
}

// Client incident details ex: incidentId , incident source
type ClientIncidentDetailsOutput struct{ *pulumi.OutputState }

func (ClientIncidentDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientIncidentDetails)(nil)).Elem()
}

func (o ClientIncidentDetailsOutput) ToClientIncidentDetailsOutput() ClientIncidentDetailsOutput {
	return o
}

func (o ClientIncidentDetailsOutput) ToClientIncidentDetailsOutputWithContext(ctx context.Context) ClientIncidentDetailsOutput {
	return o
}

func (o ClientIncidentDetailsOutput) ToClientIncidentDetailsPtrOutput() ClientIncidentDetailsPtrOutput {
	return o.ToClientIncidentDetailsPtrOutputWithContext(context.Background())
}

func (o ClientIncidentDetailsOutput) ToClientIncidentDetailsPtrOutputWithContext(ctx context.Context) ClientIncidentDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientIncidentDetails) *ClientIncidentDetails {
		return &v
	}).(ClientIncidentDetailsPtrOutput)
}

// Client incident id. ex : id of the incident created to investigate and address the impact if any.
func (o ClientIncidentDetailsOutput) ClientIncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientIncidentDetails) *string { return v.ClientIncidentId }).(pulumi.StringPtrOutput)
}

// Client incident source. ex : source system name where the incident is created
func (o ClientIncidentDetailsOutput) ClientIncidentSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientIncidentDetails) *string { return v.ClientIncidentSource }).(pulumi.StringPtrOutput)
}

type ClientIncidentDetailsPtrOutput struct{ *pulumi.OutputState }

func (ClientIncidentDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientIncidentDetails)(nil)).Elem()
}

func (o ClientIncidentDetailsPtrOutput) ToClientIncidentDetailsPtrOutput() ClientIncidentDetailsPtrOutput {
	return o
}

func (o ClientIncidentDetailsPtrOutput) ToClientIncidentDetailsPtrOutputWithContext(ctx context.Context) ClientIncidentDetailsPtrOutput {
	return o
}

func (o ClientIncidentDetailsPtrOutput) Elem() ClientIncidentDetailsOutput {
	return o.ApplyT(func(v *ClientIncidentDetails) ClientIncidentDetails {
		if v != nil {
			return *v
		}
		var ret ClientIncidentDetails
		return ret
	}).(ClientIncidentDetailsOutput)
}

// Client incident id. ex : id of the incident created to investigate and address the impact if any.
func (o ClientIncidentDetailsPtrOutput) ClientIncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientIncidentDetails) *string {
		if v == nil {
			return nil
		}
		return v.ClientIncidentId
	}).(pulumi.StringPtrOutput)
}

// Client incident source. ex : source system name where the incident is created
func (o ClientIncidentDetailsPtrOutput) ClientIncidentSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientIncidentDetails) *string {
		if v == nil {
			return nil
		}
		return v.ClientIncidentSource
	}).(pulumi.StringPtrOutput)
}

// Client incident details ex: incidentId , incident source
type ClientIncidentDetailsResponse struct {
	// Client incident id. ex : id of the incident created to investigate and address the impact if any.
	ClientIncidentId *string `pulumi:"clientIncidentId"`
	// Client incident source. ex : source system name where the incident is created
	ClientIncidentSource *string `pulumi:"clientIncidentSource"`
}

// Client incident details ex: incidentId , incident source
type ClientIncidentDetailsResponseOutput struct{ *pulumi.OutputState }

func (ClientIncidentDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientIncidentDetailsResponse)(nil)).Elem()
}

func (o ClientIncidentDetailsResponseOutput) ToClientIncidentDetailsResponseOutput() ClientIncidentDetailsResponseOutput {
	return o
}

func (o ClientIncidentDetailsResponseOutput) ToClientIncidentDetailsResponseOutputWithContext(ctx context.Context) ClientIncidentDetailsResponseOutput {
	return o
}

// Client incident id. ex : id of the incident created to investigate and address the impact if any.
func (o ClientIncidentDetailsResponseOutput) ClientIncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientIncidentDetailsResponse) *string { return v.ClientIncidentId }).(pulumi.StringPtrOutput)
}

// Client incident source. ex : source system name where the incident is created
func (o ClientIncidentDetailsResponseOutput) ClientIncidentSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientIncidentDetailsResponse) *string { return v.ClientIncidentSource }).(pulumi.StringPtrOutput)
}

type ClientIncidentDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ClientIncidentDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientIncidentDetailsResponse)(nil)).Elem()
}

func (o ClientIncidentDetailsResponsePtrOutput) ToClientIncidentDetailsResponsePtrOutput() ClientIncidentDetailsResponsePtrOutput {
	return o
}

func (o ClientIncidentDetailsResponsePtrOutput) ToClientIncidentDetailsResponsePtrOutputWithContext(ctx context.Context) ClientIncidentDetailsResponsePtrOutput {
	return o
}

func (o ClientIncidentDetailsResponsePtrOutput) Elem() ClientIncidentDetailsResponseOutput {
	return o.ApplyT(func(v *ClientIncidentDetailsResponse) ClientIncidentDetailsResponse {
		if v != nil {
			return *v
		}
		var ret ClientIncidentDetailsResponse
		return ret
	}).(ClientIncidentDetailsResponseOutput)
}

// Client incident id. ex : id of the incident created to investigate and address the impact if any.
func (o ClientIncidentDetailsResponsePtrOutput) ClientIncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientIncidentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientIncidentId
	}).(pulumi.StringPtrOutput)
}

// Client incident source. ex : source system name where the incident is created
func (o ClientIncidentDetailsResponsePtrOutput) ClientIncidentSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientIncidentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientIncidentSource
	}).(pulumi.StringPtrOutput)
}

// Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource could be VM or the network. In such cases, the connectivity field will have the details about both VM and network.
type Connectivity struct {
	// Port number for the connection
	Port *int `pulumi:"port"`
	// Protocol used for the connection
	Protocol *string `pulumi:"protocol"`
	// Source from which the connection was attempted
	Source *SourceOrTarget `pulumi:"source"`
	// target which connection was attempted
	Target *SourceOrTarget `pulumi:"target"`
}

// ConnectivityInput is an input type that accepts ConnectivityArgs and ConnectivityOutput values.
// You can construct a concrete instance of `ConnectivityInput` via:
//
//	ConnectivityArgs{...}
type ConnectivityInput interface {
	pulumi.Input

	ToConnectivityOutput() ConnectivityOutput
	ToConnectivityOutputWithContext(context.Context) ConnectivityOutput
}

// Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource could be VM or the network. In such cases, the connectivity field will have the details about both VM and network.
type ConnectivityArgs struct {
	// Port number for the connection
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol used for the connection
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Source from which the connection was attempted
	Source SourceOrTargetPtrInput `pulumi:"source"`
	// target which connection was attempted
	Target SourceOrTargetPtrInput `pulumi:"target"`
}

func (ConnectivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Connectivity)(nil)).Elem()
}

func (i ConnectivityArgs) ToConnectivityOutput() ConnectivityOutput {
	return i.ToConnectivityOutputWithContext(context.Background())
}

func (i ConnectivityArgs) ToConnectivityOutputWithContext(ctx context.Context) ConnectivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityOutput)
}

func (i ConnectivityArgs) ToConnectivityPtrOutput() ConnectivityPtrOutput {
	return i.ToConnectivityPtrOutputWithContext(context.Background())
}

func (i ConnectivityArgs) ToConnectivityPtrOutputWithContext(ctx context.Context) ConnectivityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityOutput).ToConnectivityPtrOutputWithContext(ctx)
}

// ConnectivityPtrInput is an input type that accepts ConnectivityArgs, ConnectivityPtr and ConnectivityPtrOutput values.
// You can construct a concrete instance of `ConnectivityPtrInput` via:
//
//	        ConnectivityArgs{...}
//
//	or:
//
//	        nil
type ConnectivityPtrInput interface {
	pulumi.Input

	ToConnectivityPtrOutput() ConnectivityPtrOutput
	ToConnectivityPtrOutputWithContext(context.Context) ConnectivityPtrOutput
}

type connectivityPtrType ConnectivityArgs

func ConnectivityPtr(v *ConnectivityArgs) ConnectivityPtrInput {
	return (*connectivityPtrType)(v)
}

func (*connectivityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Connectivity)(nil)).Elem()
}

func (i *connectivityPtrType) ToConnectivityPtrOutput() ConnectivityPtrOutput {
	return i.ToConnectivityPtrOutputWithContext(context.Background())
}

func (i *connectivityPtrType) ToConnectivityPtrOutputWithContext(ctx context.Context) ConnectivityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectivityPtrOutput)
}

// Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource could be VM or the network. In such cases, the connectivity field will have the details about both VM and network.
type ConnectivityOutput struct{ *pulumi.OutputState }

func (ConnectivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Connectivity)(nil)).Elem()
}

func (o ConnectivityOutput) ToConnectivityOutput() ConnectivityOutput {
	return o
}

func (o ConnectivityOutput) ToConnectivityOutputWithContext(ctx context.Context) ConnectivityOutput {
	return o
}

func (o ConnectivityOutput) ToConnectivityPtrOutput() ConnectivityPtrOutput {
	return o.ToConnectivityPtrOutputWithContext(context.Background())
}

func (o ConnectivityOutput) ToConnectivityPtrOutputWithContext(ctx context.Context) ConnectivityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Connectivity) *Connectivity {
		return &v
	}).(ConnectivityPtrOutput)
}

// Port number for the connection
func (o ConnectivityOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Connectivity) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol used for the connection
func (o ConnectivityOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Connectivity) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Source from which the connection was attempted
func (o ConnectivityOutput) Source() SourceOrTargetPtrOutput {
	return o.ApplyT(func(v Connectivity) *SourceOrTarget { return v.Source }).(SourceOrTargetPtrOutput)
}

// target which connection was attempted
func (o ConnectivityOutput) Target() SourceOrTargetPtrOutput {
	return o.ApplyT(func(v Connectivity) *SourceOrTarget { return v.Target }).(SourceOrTargetPtrOutput)
}

type ConnectivityPtrOutput struct{ *pulumi.OutputState }

func (ConnectivityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Connectivity)(nil)).Elem()
}

func (o ConnectivityPtrOutput) ToConnectivityPtrOutput() ConnectivityPtrOutput {
	return o
}

func (o ConnectivityPtrOutput) ToConnectivityPtrOutputWithContext(ctx context.Context) ConnectivityPtrOutput {
	return o
}

func (o ConnectivityPtrOutput) Elem() ConnectivityOutput {
	return o.ApplyT(func(v *Connectivity) Connectivity {
		if v != nil {
			return *v
		}
		var ret Connectivity
		return ret
	}).(ConnectivityOutput)
}

// Port number for the connection
func (o ConnectivityPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Connectivity) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Protocol used for the connection
func (o ConnectivityPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Connectivity) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Source from which the connection was attempted
func (o ConnectivityPtrOutput) Source() SourceOrTargetPtrOutput {
	return o.ApplyT(func(v *Connectivity) *SourceOrTarget {
		if v == nil {
			return nil
		}
		return v.Source
	}).(SourceOrTargetPtrOutput)
}

// target which connection was attempted
func (o ConnectivityPtrOutput) Target() SourceOrTargetPtrOutput {
	return o.ApplyT(func(v *Connectivity) *SourceOrTarget {
		if v == nil {
			return nil
		}
		return v.Target
	}).(SourceOrTargetPtrOutput)
}

// Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource could be VM or the network. In such cases, the connectivity field will have the details about both VM and network.
type ConnectivityResponse struct {
	// Port number for the connection
	Port *int `pulumi:"port"`
	// Protocol used for the connection
	Protocol *string `pulumi:"protocol"`
	// Source from which the connection was attempted
	Source *SourceOrTargetResponse `pulumi:"source"`
	// target which connection was attempted
	Target *SourceOrTargetResponse `pulumi:"target"`
}

// Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource could be VM or the network. In such cases, the connectivity field will have the details about both VM and network.
type ConnectivityResponseOutput struct{ *pulumi.OutputState }

func (ConnectivityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectivityResponse)(nil)).Elem()
}

func (o ConnectivityResponseOutput) ToConnectivityResponseOutput() ConnectivityResponseOutput {
	return o
}

func (o ConnectivityResponseOutput) ToConnectivityResponseOutputWithContext(ctx context.Context) ConnectivityResponseOutput {
	return o
}

// Port number for the connection
func (o ConnectivityResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectivityResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol used for the connection
func (o ConnectivityResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectivityResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Source from which the connection was attempted
func (o ConnectivityResponseOutput) Source() SourceOrTargetResponsePtrOutput {
	return o.ApplyT(func(v ConnectivityResponse) *SourceOrTargetResponse { return v.Source }).(SourceOrTargetResponsePtrOutput)
}

// target which connection was attempted
func (o ConnectivityResponseOutput) Target() SourceOrTargetResponsePtrOutput {
	return o.ApplyT(func(v ConnectivityResponse) *SourceOrTargetResponse { return v.Target }).(SourceOrTargetResponsePtrOutput)
}

type ConnectivityResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectivityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectivityResponse)(nil)).Elem()
}

func (o ConnectivityResponsePtrOutput) ToConnectivityResponsePtrOutput() ConnectivityResponsePtrOutput {
	return o
}

func (o ConnectivityResponsePtrOutput) ToConnectivityResponsePtrOutputWithContext(ctx context.Context) ConnectivityResponsePtrOutput {
	return o
}

func (o ConnectivityResponsePtrOutput) Elem() ConnectivityResponseOutput {
	return o.ApplyT(func(v *ConnectivityResponse) ConnectivityResponse {
		if v != nil {
			return *v
		}
		var ret ConnectivityResponse
		return ret
	}).(ConnectivityResponseOutput)
}

// Port number for the connection
func (o ConnectivityResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectivityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Protocol used for the connection
func (o ConnectivityResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectivityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Source from which the connection was attempted
func (o ConnectivityResponsePtrOutput) Source() SourceOrTargetResponsePtrOutput {
	return o.ApplyT(func(v *ConnectivityResponse) *SourceOrTargetResponse {
		if v == nil {
			return nil
		}
		return v.Source
	}).(SourceOrTargetResponsePtrOutput)
}

// target which connection was attempted
func (o ConnectivityResponsePtrOutput) Target() SourceOrTargetResponsePtrOutput {
	return o.ApplyT(func(v *ConnectivityResponse) *SourceOrTargetResponse {
		if v == nil {
			return nil
		}
		return v.Target
	}).(SourceOrTargetResponsePtrOutput)
}

// Details of the Connector.
type ConnectorProperties struct {
	// connector type
	ConnectorType string `pulumi:"connectorType"`
}

// ConnectorPropertiesInput is an input type that accepts ConnectorPropertiesArgs and ConnectorPropertiesOutput values.
// You can construct a concrete instance of `ConnectorPropertiesInput` via:
//
//	ConnectorPropertiesArgs{...}
type ConnectorPropertiesInput interface {
	pulumi.Input

	ToConnectorPropertiesOutput() ConnectorPropertiesOutput
	ToConnectorPropertiesOutputWithContext(context.Context) ConnectorPropertiesOutput
}

// Details of the Connector.
type ConnectorPropertiesArgs struct {
	// connector type
	ConnectorType pulumi.StringInput `pulumi:"connectorType"`
}

func (ConnectorPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProperties)(nil)).Elem()
}

func (i ConnectorPropertiesArgs) ToConnectorPropertiesOutput() ConnectorPropertiesOutput {
	return i.ToConnectorPropertiesOutputWithContext(context.Background())
}

func (i ConnectorPropertiesArgs) ToConnectorPropertiesOutputWithContext(ctx context.Context) ConnectorPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorPropertiesOutput)
}

func (i ConnectorPropertiesArgs) ToConnectorPropertiesPtrOutput() ConnectorPropertiesPtrOutput {
	return i.ToConnectorPropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectorPropertiesArgs) ToConnectorPropertiesPtrOutputWithContext(ctx context.Context) ConnectorPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorPropertiesOutput).ToConnectorPropertiesPtrOutputWithContext(ctx)
}

// ConnectorPropertiesPtrInput is an input type that accepts ConnectorPropertiesArgs, ConnectorPropertiesPtr and ConnectorPropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectorPropertiesPtrInput` via:
//
//	        ConnectorPropertiesArgs{...}
//
//	or:
//
//	        nil
type ConnectorPropertiesPtrInput interface {
	pulumi.Input

	ToConnectorPropertiesPtrOutput() ConnectorPropertiesPtrOutput
	ToConnectorPropertiesPtrOutputWithContext(context.Context) ConnectorPropertiesPtrOutput
}

type connectorPropertiesPtrType ConnectorPropertiesArgs

func ConnectorPropertiesPtr(v *ConnectorPropertiesArgs) ConnectorPropertiesPtrInput {
	return (*connectorPropertiesPtrType)(v)
}

func (*connectorPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProperties)(nil)).Elem()
}

func (i *connectorPropertiesPtrType) ToConnectorPropertiesPtrOutput() ConnectorPropertiesPtrOutput {
	return i.ToConnectorPropertiesPtrOutputWithContext(context.Background())
}

func (i *connectorPropertiesPtrType) ToConnectorPropertiesPtrOutputWithContext(ctx context.Context) ConnectorPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorPropertiesPtrOutput)
}

// Details of the Connector.
type ConnectorPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectorPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProperties)(nil)).Elem()
}

func (o ConnectorPropertiesOutput) ToConnectorPropertiesOutput() ConnectorPropertiesOutput {
	return o
}

func (o ConnectorPropertiesOutput) ToConnectorPropertiesOutputWithContext(ctx context.Context) ConnectorPropertiesOutput {
	return o
}

func (o ConnectorPropertiesOutput) ToConnectorPropertiesPtrOutput() ConnectorPropertiesPtrOutput {
	return o.ToConnectorPropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectorPropertiesOutput) ToConnectorPropertiesPtrOutputWithContext(ctx context.Context) ConnectorPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProperties) *ConnectorProperties {
		return &v
	}).(ConnectorPropertiesPtrOutput)
}

// connector type
func (o ConnectorPropertiesOutput) ConnectorType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorProperties) string { return v.ConnectorType }).(pulumi.StringOutput)
}

type ConnectorPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectorPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProperties)(nil)).Elem()
}

func (o ConnectorPropertiesPtrOutput) ToConnectorPropertiesPtrOutput() ConnectorPropertiesPtrOutput {
	return o
}

func (o ConnectorPropertiesPtrOutput) ToConnectorPropertiesPtrOutputWithContext(ctx context.Context) ConnectorPropertiesPtrOutput {
	return o
}

func (o ConnectorPropertiesPtrOutput) Elem() ConnectorPropertiesOutput {
	return o.ApplyT(func(v *ConnectorProperties) ConnectorProperties {
		if v != nil {
			return *v
		}
		var ret ConnectorProperties
		return ret
	}).(ConnectorPropertiesOutput)
}

// connector type
func (o ConnectorPropertiesPtrOutput) ConnectorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectorType
	}).(pulumi.StringPtrOutput)
}

// Details of the Connector.
type ConnectorPropertiesResponse struct {
	// unique id of the connector.
	ConnectorId string `pulumi:"connectorId"`
	// connector type
	ConnectorType string `pulumi:"connectorType"`
	// last run time stamp of this connector in UTC time zone
	LastRunTimeStamp string `pulumi:"lastRunTimeStamp"`
	// Resource provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// tenant id of this connector
	TenantId string `pulumi:"tenantId"`
}

// Details of the Connector.
type ConnectorPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectorPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorPropertiesResponse)(nil)).Elem()
}

func (o ConnectorPropertiesResponseOutput) ToConnectorPropertiesResponseOutput() ConnectorPropertiesResponseOutput {
	return o
}

func (o ConnectorPropertiesResponseOutput) ToConnectorPropertiesResponseOutputWithContext(ctx context.Context) ConnectorPropertiesResponseOutput {
	return o
}

// unique id of the connector.
func (o ConnectorPropertiesResponseOutput) ConnectorId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorPropertiesResponse) string { return v.ConnectorId }).(pulumi.StringOutput)
}

// connector type
func (o ConnectorPropertiesResponseOutput) ConnectorType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorPropertiesResponse) string { return v.ConnectorType }).(pulumi.StringOutput)
}

// last run time stamp of this connector in UTC time zone
func (o ConnectorPropertiesResponseOutput) LastRunTimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorPropertiesResponse) string { return v.LastRunTimeStamp }).(pulumi.StringOutput)
}

// Resource provisioning state.
func (o ConnectorPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// tenant id of this connector
func (o ConnectorPropertiesResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorPropertiesResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Article details of the insight like title, description etc
type Content struct {
	// Description of the insight
	Description string `pulumi:"description"`
	// Title of the insight
	Title string `pulumi:"title"`
}

// ContentInput is an input type that accepts ContentArgs and ContentOutput values.
// You can construct a concrete instance of `ContentInput` via:
//
//	ContentArgs{...}
type ContentInput interface {
	pulumi.Input

	ToContentOutput() ContentOutput
	ToContentOutputWithContext(context.Context) ContentOutput
}

// Article details of the insight like title, description etc
type ContentArgs struct {
	// Description of the insight
	Description pulumi.StringInput `pulumi:"description"`
	// Title of the insight
	Title pulumi.StringInput `pulumi:"title"`
}

func (ContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Content)(nil)).Elem()
}

func (i ContentArgs) ToContentOutput() ContentOutput {
	return i.ToContentOutputWithContext(context.Background())
}

func (i ContentArgs) ToContentOutputWithContext(ctx context.Context) ContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentOutput)
}

func (i ContentArgs) ToContentPtrOutput() ContentPtrOutput {
	return i.ToContentPtrOutputWithContext(context.Background())
}

func (i ContentArgs) ToContentPtrOutputWithContext(ctx context.Context) ContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentOutput).ToContentPtrOutputWithContext(ctx)
}

// ContentPtrInput is an input type that accepts ContentArgs, ContentPtr and ContentPtrOutput values.
// You can construct a concrete instance of `ContentPtrInput` via:
//
//	        ContentArgs{...}
//
//	or:
//
//	        nil
type ContentPtrInput interface {
	pulumi.Input

	ToContentPtrOutput() ContentPtrOutput
	ToContentPtrOutputWithContext(context.Context) ContentPtrOutput
}

type contentPtrType ContentArgs

func ContentPtr(v *ContentArgs) ContentPtrInput {
	return (*contentPtrType)(v)
}

func (*contentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Content)(nil)).Elem()
}

func (i *contentPtrType) ToContentPtrOutput() ContentPtrOutput {
	return i.ToContentPtrOutputWithContext(context.Background())
}

func (i *contentPtrType) ToContentPtrOutputWithContext(ctx context.Context) ContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentPtrOutput)
}

// Article details of the insight like title, description etc
type ContentOutput struct{ *pulumi.OutputState }

func (ContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Content)(nil)).Elem()
}

func (o ContentOutput) ToContentOutput() ContentOutput {
	return o
}

func (o ContentOutput) ToContentOutputWithContext(ctx context.Context) ContentOutput {
	return o
}

func (o ContentOutput) ToContentPtrOutput() ContentPtrOutput {
	return o.ToContentPtrOutputWithContext(context.Background())
}

func (o ContentOutput) ToContentPtrOutputWithContext(ctx context.Context) ContentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Content) *Content {
		return &v
	}).(ContentPtrOutput)
}

// Description of the insight
func (o ContentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v Content) string { return v.Description }).(pulumi.StringOutput)
}

// Title of the insight
func (o ContentOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v Content) string { return v.Title }).(pulumi.StringOutput)
}

type ContentPtrOutput struct{ *pulumi.OutputState }

func (ContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Content)(nil)).Elem()
}

func (o ContentPtrOutput) ToContentPtrOutput() ContentPtrOutput {
	return o
}

func (o ContentPtrOutput) ToContentPtrOutputWithContext(ctx context.Context) ContentPtrOutput {
	return o
}

func (o ContentPtrOutput) Elem() ContentOutput {
	return o.ApplyT(func(v *Content) Content {
		if v != nil {
			return *v
		}
		var ret Content
		return ret
	}).(ContentOutput)
}

// Description of the insight
func (o ContentPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Content) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// Title of the insight
func (o ContentPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Content) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// Article details of the insight like title, description etc
type ContentResponse struct {
	// Description of the insight
	Description string `pulumi:"description"`
	// Title of the insight
	Title string `pulumi:"title"`
}

// Article details of the insight like title, description etc
type ContentResponseOutput struct{ *pulumi.OutputState }

func (ContentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentResponse)(nil)).Elem()
}

func (o ContentResponseOutput) ToContentResponseOutput() ContentResponseOutput {
	return o
}

func (o ContentResponseOutput) ToContentResponseOutputWithContext(ctx context.Context) ContentResponseOutput {
	return o
}

// Description of the insight
func (o ContentResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ContentResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Title of the insight
func (o ContentResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ContentResponse) string { return v.Title }).(pulumi.StringOutput)
}

// ARM error code and error message associated with the impact
type ErrorDetailProperties struct {
	// ARM Error code associated with the impact.
	ErrorCode *string `pulumi:"errorCode"`
	// ARM Error Message associated with the impact
	ErrorMessage *string `pulumi:"errorMessage"`
}

// ErrorDetailPropertiesInput is an input type that accepts ErrorDetailPropertiesArgs and ErrorDetailPropertiesOutput values.
// You can construct a concrete instance of `ErrorDetailPropertiesInput` via:
//
//	ErrorDetailPropertiesArgs{...}
type ErrorDetailPropertiesInput interface {
	pulumi.Input

	ToErrorDetailPropertiesOutput() ErrorDetailPropertiesOutput
	ToErrorDetailPropertiesOutputWithContext(context.Context) ErrorDetailPropertiesOutput
}

// ARM error code and error message associated with the impact
type ErrorDetailPropertiesArgs struct {
	// ARM Error code associated with the impact.
	ErrorCode pulumi.StringPtrInput `pulumi:"errorCode"`
	// ARM Error Message associated with the impact
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
}

func (ErrorDetailPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailProperties)(nil)).Elem()
}

func (i ErrorDetailPropertiesArgs) ToErrorDetailPropertiesOutput() ErrorDetailPropertiesOutput {
	return i.ToErrorDetailPropertiesOutputWithContext(context.Background())
}

func (i ErrorDetailPropertiesArgs) ToErrorDetailPropertiesOutputWithContext(ctx context.Context) ErrorDetailPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorDetailPropertiesOutput)
}

func (i ErrorDetailPropertiesArgs) ToErrorDetailPropertiesPtrOutput() ErrorDetailPropertiesPtrOutput {
	return i.ToErrorDetailPropertiesPtrOutputWithContext(context.Background())
}

func (i ErrorDetailPropertiesArgs) ToErrorDetailPropertiesPtrOutputWithContext(ctx context.Context) ErrorDetailPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorDetailPropertiesOutput).ToErrorDetailPropertiesPtrOutputWithContext(ctx)
}

// ErrorDetailPropertiesPtrInput is an input type that accepts ErrorDetailPropertiesArgs, ErrorDetailPropertiesPtr and ErrorDetailPropertiesPtrOutput values.
// You can construct a concrete instance of `ErrorDetailPropertiesPtrInput` via:
//
//	        ErrorDetailPropertiesArgs{...}
//
//	or:
//
//	        nil
type ErrorDetailPropertiesPtrInput interface {
	pulumi.Input

	ToErrorDetailPropertiesPtrOutput() ErrorDetailPropertiesPtrOutput
	ToErrorDetailPropertiesPtrOutputWithContext(context.Context) ErrorDetailPropertiesPtrOutput
}

type errorDetailPropertiesPtrType ErrorDetailPropertiesArgs

func ErrorDetailPropertiesPtr(v *ErrorDetailPropertiesArgs) ErrorDetailPropertiesPtrInput {
	return (*errorDetailPropertiesPtrType)(v)
}

func (*errorDetailPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorDetailProperties)(nil)).Elem()
}

func (i *errorDetailPropertiesPtrType) ToErrorDetailPropertiesPtrOutput() ErrorDetailPropertiesPtrOutput {
	return i.ToErrorDetailPropertiesPtrOutputWithContext(context.Background())
}

func (i *errorDetailPropertiesPtrType) ToErrorDetailPropertiesPtrOutputWithContext(ctx context.Context) ErrorDetailPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorDetailPropertiesPtrOutput)
}

// ARM error code and error message associated with the impact
type ErrorDetailPropertiesOutput struct{ *pulumi.OutputState }

func (ErrorDetailPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailProperties)(nil)).Elem()
}

func (o ErrorDetailPropertiesOutput) ToErrorDetailPropertiesOutput() ErrorDetailPropertiesOutput {
	return o
}

func (o ErrorDetailPropertiesOutput) ToErrorDetailPropertiesOutputWithContext(ctx context.Context) ErrorDetailPropertiesOutput {
	return o
}

func (o ErrorDetailPropertiesOutput) ToErrorDetailPropertiesPtrOutput() ErrorDetailPropertiesPtrOutput {
	return o.ToErrorDetailPropertiesPtrOutputWithContext(context.Background())
}

func (o ErrorDetailPropertiesOutput) ToErrorDetailPropertiesPtrOutputWithContext(ctx context.Context) ErrorDetailPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ErrorDetailProperties) *ErrorDetailProperties {
		return &v
	}).(ErrorDetailPropertiesPtrOutput)
}

// ARM Error code associated with the impact.
func (o ErrorDetailPropertiesOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorDetailProperties) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// ARM Error Message associated with the impact
func (o ErrorDetailPropertiesOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorDetailProperties) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

type ErrorDetailPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ErrorDetailPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorDetailProperties)(nil)).Elem()
}

func (o ErrorDetailPropertiesPtrOutput) ToErrorDetailPropertiesPtrOutput() ErrorDetailPropertiesPtrOutput {
	return o
}

func (o ErrorDetailPropertiesPtrOutput) ToErrorDetailPropertiesPtrOutputWithContext(ctx context.Context) ErrorDetailPropertiesPtrOutput {
	return o
}

func (o ErrorDetailPropertiesPtrOutput) Elem() ErrorDetailPropertiesOutput {
	return o.ApplyT(func(v *ErrorDetailProperties) ErrorDetailProperties {
		if v != nil {
			return *v
		}
		var ret ErrorDetailProperties
		return ret
	}).(ErrorDetailPropertiesOutput)
}

// ARM Error code associated with the impact.
func (o ErrorDetailPropertiesPtrOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorDetailProperties) *string {
		if v == nil {
			return nil
		}
		return v.ErrorCode
	}).(pulumi.StringPtrOutput)
}

// ARM Error Message associated with the impact
func (o ErrorDetailPropertiesPtrOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorDetailProperties) *string {
		if v == nil {
			return nil
		}
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

// ARM error code and error message associated with the impact
type ErrorDetailPropertiesResponse struct {
	// ARM Error code associated with the impact.
	ErrorCode *string `pulumi:"errorCode"`
	// ARM Error Message associated with the impact
	ErrorMessage *string `pulumi:"errorMessage"`
}

// ARM error code and error message associated with the impact
type ErrorDetailPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ErrorDetailPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailPropertiesResponse)(nil)).Elem()
}

func (o ErrorDetailPropertiesResponseOutput) ToErrorDetailPropertiesResponseOutput() ErrorDetailPropertiesResponseOutput {
	return o
}

func (o ErrorDetailPropertiesResponseOutput) ToErrorDetailPropertiesResponseOutputWithContext(ctx context.Context) ErrorDetailPropertiesResponseOutput {
	return o
}

// ARM Error code associated with the impact.
func (o ErrorDetailPropertiesResponseOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorDetailPropertiesResponse) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// ARM Error Message associated with the impact
func (o ErrorDetailPropertiesResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorDetailPropertiesResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

type ErrorDetailPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ErrorDetailPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorDetailPropertiesResponse)(nil)).Elem()
}

func (o ErrorDetailPropertiesResponsePtrOutput) ToErrorDetailPropertiesResponsePtrOutput() ErrorDetailPropertiesResponsePtrOutput {
	return o
}

func (o ErrorDetailPropertiesResponsePtrOutput) ToErrorDetailPropertiesResponsePtrOutputWithContext(ctx context.Context) ErrorDetailPropertiesResponsePtrOutput {
	return o
}

func (o ErrorDetailPropertiesResponsePtrOutput) Elem() ErrorDetailPropertiesResponseOutput {
	return o.ApplyT(func(v *ErrorDetailPropertiesResponse) ErrorDetailPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ErrorDetailPropertiesResponse
		return ret
	}).(ErrorDetailPropertiesResponseOutput)
}

// ARM Error code associated with the impact.
func (o ErrorDetailPropertiesResponsePtrOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorDetailPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ErrorCode
	}).(pulumi.StringPtrOutput)
}

// ARM Error Message associated with the impact
func (o ErrorDetailPropertiesResponsePtrOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorDetailPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

// Max and Min Threshold values for the metric
type ExpectedValueRange struct {
	// Max threshold value for the metric
	Max float64 `pulumi:"max"`
	// Min threshold value for the metric
	Min float64 `pulumi:"min"`
}

// ExpectedValueRangeInput is an input type that accepts ExpectedValueRangeArgs and ExpectedValueRangeOutput values.
// You can construct a concrete instance of `ExpectedValueRangeInput` via:
//
//	ExpectedValueRangeArgs{...}
type ExpectedValueRangeInput interface {
	pulumi.Input

	ToExpectedValueRangeOutput() ExpectedValueRangeOutput
	ToExpectedValueRangeOutputWithContext(context.Context) ExpectedValueRangeOutput
}

// Max and Min Threshold values for the metric
type ExpectedValueRangeArgs struct {
	// Max threshold value for the metric
	Max pulumi.Float64Input `pulumi:"max"`
	// Min threshold value for the metric
	Min pulumi.Float64Input `pulumi:"min"`
}

func (ExpectedValueRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpectedValueRange)(nil)).Elem()
}

func (i ExpectedValueRangeArgs) ToExpectedValueRangeOutput() ExpectedValueRangeOutput {
	return i.ToExpectedValueRangeOutputWithContext(context.Background())
}

func (i ExpectedValueRangeArgs) ToExpectedValueRangeOutputWithContext(ctx context.Context) ExpectedValueRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpectedValueRangeOutput)
}

func (i ExpectedValueRangeArgs) ToExpectedValueRangePtrOutput() ExpectedValueRangePtrOutput {
	return i.ToExpectedValueRangePtrOutputWithContext(context.Background())
}

func (i ExpectedValueRangeArgs) ToExpectedValueRangePtrOutputWithContext(ctx context.Context) ExpectedValueRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpectedValueRangeOutput).ToExpectedValueRangePtrOutputWithContext(ctx)
}

// ExpectedValueRangePtrInput is an input type that accepts ExpectedValueRangeArgs, ExpectedValueRangePtr and ExpectedValueRangePtrOutput values.
// You can construct a concrete instance of `ExpectedValueRangePtrInput` via:
//
//	        ExpectedValueRangeArgs{...}
//
//	or:
//
//	        nil
type ExpectedValueRangePtrInput interface {
	pulumi.Input

	ToExpectedValueRangePtrOutput() ExpectedValueRangePtrOutput
	ToExpectedValueRangePtrOutputWithContext(context.Context) ExpectedValueRangePtrOutput
}

type expectedValueRangePtrType ExpectedValueRangeArgs

func ExpectedValueRangePtr(v *ExpectedValueRangeArgs) ExpectedValueRangePtrInput {
	return (*expectedValueRangePtrType)(v)
}

func (*expectedValueRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpectedValueRange)(nil)).Elem()
}

func (i *expectedValueRangePtrType) ToExpectedValueRangePtrOutput() ExpectedValueRangePtrOutput {
	return i.ToExpectedValueRangePtrOutputWithContext(context.Background())
}

func (i *expectedValueRangePtrType) ToExpectedValueRangePtrOutputWithContext(ctx context.Context) ExpectedValueRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpectedValueRangePtrOutput)
}

// Max and Min Threshold values for the metric
type ExpectedValueRangeOutput struct{ *pulumi.OutputState }

func (ExpectedValueRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpectedValueRange)(nil)).Elem()
}

func (o ExpectedValueRangeOutput) ToExpectedValueRangeOutput() ExpectedValueRangeOutput {
	return o
}

func (o ExpectedValueRangeOutput) ToExpectedValueRangeOutputWithContext(ctx context.Context) ExpectedValueRangeOutput {
	return o
}

func (o ExpectedValueRangeOutput) ToExpectedValueRangePtrOutput() ExpectedValueRangePtrOutput {
	return o.ToExpectedValueRangePtrOutputWithContext(context.Background())
}

func (o ExpectedValueRangeOutput) ToExpectedValueRangePtrOutputWithContext(ctx context.Context) ExpectedValueRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpectedValueRange) *ExpectedValueRange {
		return &v
	}).(ExpectedValueRangePtrOutput)
}

// Max threshold value for the metric
func (o ExpectedValueRangeOutput) Max() pulumi.Float64Output {
	return o.ApplyT(func(v ExpectedValueRange) float64 { return v.Max }).(pulumi.Float64Output)
}

// Min threshold value for the metric
func (o ExpectedValueRangeOutput) Min() pulumi.Float64Output {
	return o.ApplyT(func(v ExpectedValueRange) float64 { return v.Min }).(pulumi.Float64Output)
}

type ExpectedValueRangePtrOutput struct{ *pulumi.OutputState }

func (ExpectedValueRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpectedValueRange)(nil)).Elem()
}

func (o ExpectedValueRangePtrOutput) ToExpectedValueRangePtrOutput() ExpectedValueRangePtrOutput {
	return o
}

func (o ExpectedValueRangePtrOutput) ToExpectedValueRangePtrOutputWithContext(ctx context.Context) ExpectedValueRangePtrOutput {
	return o
}

func (o ExpectedValueRangePtrOutput) Elem() ExpectedValueRangeOutput {
	return o.ApplyT(func(v *ExpectedValueRange) ExpectedValueRange {
		if v != nil {
			return *v
		}
		var ret ExpectedValueRange
		return ret
	}).(ExpectedValueRangeOutput)
}

// Max threshold value for the metric
func (o ExpectedValueRangePtrOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ExpectedValueRange) *float64 {
		if v == nil {
			return nil
		}
		return &v.Max
	}).(pulumi.Float64PtrOutput)
}

// Min threshold value for the metric
func (o ExpectedValueRangePtrOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ExpectedValueRange) *float64 {
		if v == nil {
			return nil
		}
		return &v.Min
	}).(pulumi.Float64PtrOutput)
}

// Max and Min Threshold values for the metric
type ExpectedValueRangeResponse struct {
	// Max threshold value for the metric
	Max float64 `pulumi:"max"`
	// Min threshold value for the metric
	Min float64 `pulumi:"min"`
}

// Max and Min Threshold values for the metric
type ExpectedValueRangeResponseOutput struct{ *pulumi.OutputState }

func (ExpectedValueRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpectedValueRangeResponse)(nil)).Elem()
}

func (o ExpectedValueRangeResponseOutput) ToExpectedValueRangeResponseOutput() ExpectedValueRangeResponseOutput {
	return o
}

func (o ExpectedValueRangeResponseOutput) ToExpectedValueRangeResponseOutputWithContext(ctx context.Context) ExpectedValueRangeResponseOutput {
	return o
}

// Max threshold value for the metric
func (o ExpectedValueRangeResponseOutput) Max() pulumi.Float64Output {
	return o.ApplyT(func(v ExpectedValueRangeResponse) float64 { return v.Max }).(pulumi.Float64Output)
}

// Min threshold value for the metric
func (o ExpectedValueRangeResponseOutput) Min() pulumi.Float64Output {
	return o.ApplyT(func(v ExpectedValueRangeResponse) float64 { return v.Min }).(pulumi.Float64Output)
}

type ExpectedValueRangeResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpectedValueRangeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpectedValueRangeResponse)(nil)).Elem()
}

func (o ExpectedValueRangeResponsePtrOutput) ToExpectedValueRangeResponsePtrOutput() ExpectedValueRangeResponsePtrOutput {
	return o
}

func (o ExpectedValueRangeResponsePtrOutput) ToExpectedValueRangeResponsePtrOutputWithContext(ctx context.Context) ExpectedValueRangeResponsePtrOutput {
	return o
}

func (o ExpectedValueRangeResponsePtrOutput) Elem() ExpectedValueRangeResponseOutput {
	return o.ApplyT(func(v *ExpectedValueRangeResponse) ExpectedValueRangeResponse {
		if v != nil {
			return *v
		}
		var ret ExpectedValueRangeResponse
		return ret
	}).(ExpectedValueRangeResponseOutput)
}

// Max threshold value for the metric
func (o ExpectedValueRangeResponsePtrOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ExpectedValueRangeResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.Max
	}).(pulumi.Float64PtrOutput)
}

// Min threshold value for the metric
func (o ExpectedValueRangeResponsePtrOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ExpectedValueRangeResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.Min
	}).(pulumi.Float64PtrOutput)
}

// details of of the impact for which insight has been generated.
type ImpactDetails struct {
	// Time at which impact was ended according to reported impact.
	EndTime *string `pulumi:"endTime"`
	// Azure Id of the impact.
	ImpactId string `pulumi:"impactId"`
	// List of impacted Azure resources.
	ImpactedResourceId string `pulumi:"impactedResourceId"`
	// Time at which impact was started according to reported impact.
	StartTime string `pulumi:"startTime"`
}

// ImpactDetailsInput is an input type that accepts ImpactDetailsArgs and ImpactDetailsOutput values.
// You can construct a concrete instance of `ImpactDetailsInput` via:
//
//	ImpactDetailsArgs{...}
type ImpactDetailsInput interface {
	pulumi.Input

	ToImpactDetailsOutput() ImpactDetailsOutput
	ToImpactDetailsOutputWithContext(context.Context) ImpactDetailsOutput
}

// details of of the impact for which insight has been generated.
type ImpactDetailsArgs struct {
	// Time at which impact was ended according to reported impact.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Azure Id of the impact.
	ImpactId pulumi.StringInput `pulumi:"impactId"`
	// List of impacted Azure resources.
	ImpactedResourceId pulumi.StringInput `pulumi:"impactedResourceId"`
	// Time at which impact was started according to reported impact.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (ImpactDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImpactDetails)(nil)).Elem()
}

func (i ImpactDetailsArgs) ToImpactDetailsOutput() ImpactDetailsOutput {
	return i.ToImpactDetailsOutputWithContext(context.Background())
}

func (i ImpactDetailsArgs) ToImpactDetailsOutputWithContext(ctx context.Context) ImpactDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImpactDetailsOutput)
}

func (i ImpactDetailsArgs) ToImpactDetailsPtrOutput() ImpactDetailsPtrOutput {
	return i.ToImpactDetailsPtrOutputWithContext(context.Background())
}

func (i ImpactDetailsArgs) ToImpactDetailsPtrOutputWithContext(ctx context.Context) ImpactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImpactDetailsOutput).ToImpactDetailsPtrOutputWithContext(ctx)
}

// ImpactDetailsPtrInput is an input type that accepts ImpactDetailsArgs, ImpactDetailsPtr and ImpactDetailsPtrOutput values.
// You can construct a concrete instance of `ImpactDetailsPtrInput` via:
//
//	        ImpactDetailsArgs{...}
//
//	or:
//
//	        nil
type ImpactDetailsPtrInput interface {
	pulumi.Input

	ToImpactDetailsPtrOutput() ImpactDetailsPtrOutput
	ToImpactDetailsPtrOutputWithContext(context.Context) ImpactDetailsPtrOutput
}

type impactDetailsPtrType ImpactDetailsArgs

func ImpactDetailsPtr(v *ImpactDetailsArgs) ImpactDetailsPtrInput {
	return (*impactDetailsPtrType)(v)
}

func (*impactDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImpactDetails)(nil)).Elem()
}

func (i *impactDetailsPtrType) ToImpactDetailsPtrOutput() ImpactDetailsPtrOutput {
	return i.ToImpactDetailsPtrOutputWithContext(context.Background())
}

func (i *impactDetailsPtrType) ToImpactDetailsPtrOutputWithContext(ctx context.Context) ImpactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImpactDetailsPtrOutput)
}

// details of of the impact for which insight has been generated.
type ImpactDetailsOutput struct{ *pulumi.OutputState }

func (ImpactDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImpactDetails)(nil)).Elem()
}

func (o ImpactDetailsOutput) ToImpactDetailsOutput() ImpactDetailsOutput {
	return o
}

func (o ImpactDetailsOutput) ToImpactDetailsOutputWithContext(ctx context.Context) ImpactDetailsOutput {
	return o
}

func (o ImpactDetailsOutput) ToImpactDetailsPtrOutput() ImpactDetailsPtrOutput {
	return o.ToImpactDetailsPtrOutputWithContext(context.Background())
}

func (o ImpactDetailsOutput) ToImpactDetailsPtrOutputWithContext(ctx context.Context) ImpactDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImpactDetails) *ImpactDetails {
		return &v
	}).(ImpactDetailsPtrOutput)
}

// Time at which impact was ended according to reported impact.
func (o ImpactDetailsOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImpactDetails) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Azure Id of the impact.
func (o ImpactDetailsOutput) ImpactId() pulumi.StringOutput {
	return o.ApplyT(func(v ImpactDetails) string { return v.ImpactId }).(pulumi.StringOutput)
}

// List of impacted Azure resources.
func (o ImpactDetailsOutput) ImpactedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ImpactDetails) string { return v.ImpactedResourceId }).(pulumi.StringOutput)
}

// Time at which impact was started according to reported impact.
func (o ImpactDetailsOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ImpactDetails) string { return v.StartTime }).(pulumi.StringOutput)
}

type ImpactDetailsPtrOutput struct{ *pulumi.OutputState }

func (ImpactDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImpactDetails)(nil)).Elem()
}

func (o ImpactDetailsPtrOutput) ToImpactDetailsPtrOutput() ImpactDetailsPtrOutput {
	return o
}

func (o ImpactDetailsPtrOutput) ToImpactDetailsPtrOutputWithContext(ctx context.Context) ImpactDetailsPtrOutput {
	return o
}

func (o ImpactDetailsPtrOutput) Elem() ImpactDetailsOutput {
	return o.ApplyT(func(v *ImpactDetails) ImpactDetails {
		if v != nil {
			return *v
		}
		var ret ImpactDetails
		return ret
	}).(ImpactDetailsOutput)
}

// Time at which impact was ended according to reported impact.
func (o ImpactDetailsPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImpactDetails) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// Azure Id of the impact.
func (o ImpactDetailsPtrOutput) ImpactId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImpactDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ImpactId
	}).(pulumi.StringPtrOutput)
}

// List of impacted Azure resources.
func (o ImpactDetailsPtrOutput) ImpactedResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImpactDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ImpactedResourceId
	}).(pulumi.StringPtrOutput)
}

// Time at which impact was started according to reported impact.
func (o ImpactDetailsPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImpactDetails) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

// details of of the impact for which insight has been generated.
type ImpactDetailsResponse struct {
	// Time at which impact was ended according to reported impact.
	EndTime *string `pulumi:"endTime"`
	// Azure Id of the impact.
	ImpactId string `pulumi:"impactId"`
	// List of impacted Azure resources.
	ImpactedResourceId string `pulumi:"impactedResourceId"`
	// Time at which impact was started according to reported impact.
	StartTime string `pulumi:"startTime"`
}

// details of of the impact for which insight has been generated.
type ImpactDetailsResponseOutput struct{ *pulumi.OutputState }

func (ImpactDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImpactDetailsResponse)(nil)).Elem()
}

func (o ImpactDetailsResponseOutput) ToImpactDetailsResponseOutput() ImpactDetailsResponseOutput {
	return o
}

func (o ImpactDetailsResponseOutput) ToImpactDetailsResponseOutputWithContext(ctx context.Context) ImpactDetailsResponseOutput {
	return o
}

// Time at which impact was ended according to reported impact.
func (o ImpactDetailsResponseOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImpactDetailsResponse) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Azure Id of the impact.
func (o ImpactDetailsResponseOutput) ImpactId() pulumi.StringOutput {
	return o.ApplyT(func(v ImpactDetailsResponse) string { return v.ImpactId }).(pulumi.StringOutput)
}

// List of impacted Azure resources.
func (o ImpactDetailsResponseOutput) ImpactedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ImpactDetailsResponse) string { return v.ImpactedResourceId }).(pulumi.StringOutput)
}

// Time at which impact was started according to reported impact.
func (o ImpactDetailsResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ImpactDetailsResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Impact category properties.
type InsightProperties struct {
	// additional details of the insight.
	AdditionalDetails interface{} `pulumi:"additionalDetails"`
	// category of the insight.
	Category string `pulumi:"category"`
	// Contains title & description for the insight
	Content Content `pulumi:"content"`
	// Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event.
	EventId *string `pulumi:"eventId"`
	// Time of the event, which has been correlated the impact.
	EventTime *string `pulumi:"eventTime"`
	// Identifier that can be used to group similar insights.
	GroupId *string `pulumi:"groupId"`
	// details of of the impact for which insight has been generated.
	Impact ImpactDetails `pulumi:"impact"`
	// unique id of the insight.
	InsightUniqueId string `pulumi:"insightUniqueId"`
	// status of the insight. example resolved, repaired, other.
	Status *string `pulumi:"status"`
}

// InsightPropertiesInput is an input type that accepts InsightPropertiesArgs and InsightPropertiesOutput values.
// You can construct a concrete instance of `InsightPropertiesInput` via:
//
//	InsightPropertiesArgs{...}
type InsightPropertiesInput interface {
	pulumi.Input

	ToInsightPropertiesOutput() InsightPropertiesOutput
	ToInsightPropertiesOutputWithContext(context.Context) InsightPropertiesOutput
}

// Impact category properties.
type InsightPropertiesArgs struct {
	// additional details of the insight.
	AdditionalDetails pulumi.Input `pulumi:"additionalDetails"`
	// category of the insight.
	Category pulumi.StringInput `pulumi:"category"`
	// Contains title & description for the insight
	Content ContentInput `pulumi:"content"`
	// Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event.
	EventId pulumi.StringPtrInput `pulumi:"eventId"`
	// Time of the event, which has been correlated the impact.
	EventTime pulumi.StringPtrInput `pulumi:"eventTime"`
	// Identifier that can be used to group similar insights.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// details of of the impact for which insight has been generated.
	Impact ImpactDetailsInput `pulumi:"impact"`
	// unique id of the insight.
	InsightUniqueId pulumi.StringInput `pulumi:"insightUniqueId"`
	// status of the insight. example resolved, repaired, other.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (InsightPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightProperties)(nil)).Elem()
}

func (i InsightPropertiesArgs) ToInsightPropertiesOutput() InsightPropertiesOutput {
	return i.ToInsightPropertiesOutputWithContext(context.Background())
}

func (i InsightPropertiesArgs) ToInsightPropertiesOutputWithContext(ctx context.Context) InsightPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightPropertiesOutput)
}

func (i InsightPropertiesArgs) ToInsightPropertiesPtrOutput() InsightPropertiesPtrOutput {
	return i.ToInsightPropertiesPtrOutputWithContext(context.Background())
}

func (i InsightPropertiesArgs) ToInsightPropertiesPtrOutputWithContext(ctx context.Context) InsightPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightPropertiesOutput).ToInsightPropertiesPtrOutputWithContext(ctx)
}

// InsightPropertiesPtrInput is an input type that accepts InsightPropertiesArgs, InsightPropertiesPtr and InsightPropertiesPtrOutput values.
// You can construct a concrete instance of `InsightPropertiesPtrInput` via:
//
//	        InsightPropertiesArgs{...}
//
//	or:
//
//	        nil
type InsightPropertiesPtrInput interface {
	pulumi.Input

	ToInsightPropertiesPtrOutput() InsightPropertiesPtrOutput
	ToInsightPropertiesPtrOutputWithContext(context.Context) InsightPropertiesPtrOutput
}

type insightPropertiesPtrType InsightPropertiesArgs

func InsightPropertiesPtr(v *InsightPropertiesArgs) InsightPropertiesPtrInput {
	return (*insightPropertiesPtrType)(v)
}

func (*insightPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightProperties)(nil)).Elem()
}

func (i *insightPropertiesPtrType) ToInsightPropertiesPtrOutput() InsightPropertiesPtrOutput {
	return i.ToInsightPropertiesPtrOutputWithContext(context.Background())
}

func (i *insightPropertiesPtrType) ToInsightPropertiesPtrOutputWithContext(ctx context.Context) InsightPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightPropertiesPtrOutput)
}

// Impact category properties.
type InsightPropertiesOutput struct{ *pulumi.OutputState }

func (InsightPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightProperties)(nil)).Elem()
}

func (o InsightPropertiesOutput) ToInsightPropertiesOutput() InsightPropertiesOutput {
	return o
}

func (o InsightPropertiesOutput) ToInsightPropertiesOutputWithContext(ctx context.Context) InsightPropertiesOutput {
	return o
}

func (o InsightPropertiesOutput) ToInsightPropertiesPtrOutput() InsightPropertiesPtrOutput {
	return o.ToInsightPropertiesPtrOutputWithContext(context.Background())
}

func (o InsightPropertiesOutput) ToInsightPropertiesPtrOutputWithContext(ctx context.Context) InsightPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InsightProperties) *InsightProperties {
		return &v
	}).(InsightPropertiesPtrOutput)
}

// additional details of the insight.
func (o InsightPropertiesOutput) AdditionalDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v InsightProperties) interface{} { return v.AdditionalDetails }).(pulumi.AnyOutput)
}

// category of the insight.
func (o InsightPropertiesOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v InsightProperties) string { return v.Category }).(pulumi.StringOutput)
}

// Contains title & description for the insight
func (o InsightPropertiesOutput) Content() ContentOutput {
	return o.ApplyT(func(v InsightProperties) Content { return v.Content }).(ContentOutput)
}

// Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event.
func (o InsightPropertiesOutput) EventId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightProperties) *string { return v.EventId }).(pulumi.StringPtrOutput)
}

// Time of the event, which has been correlated the impact.
func (o InsightPropertiesOutput) EventTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightProperties) *string { return v.EventTime }).(pulumi.StringPtrOutput)
}

// Identifier that can be used to group similar insights.
func (o InsightPropertiesOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightProperties) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// details of of the impact for which insight has been generated.
func (o InsightPropertiesOutput) Impact() ImpactDetailsOutput {
	return o.ApplyT(func(v InsightProperties) ImpactDetails { return v.Impact }).(ImpactDetailsOutput)
}

// unique id of the insight.
func (o InsightPropertiesOutput) InsightUniqueId() pulumi.StringOutput {
	return o.ApplyT(func(v InsightProperties) string { return v.InsightUniqueId }).(pulumi.StringOutput)
}

// status of the insight. example resolved, repaired, other.
func (o InsightPropertiesOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightProperties) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type InsightPropertiesPtrOutput struct{ *pulumi.OutputState }

func (InsightPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightProperties)(nil)).Elem()
}

func (o InsightPropertiesPtrOutput) ToInsightPropertiesPtrOutput() InsightPropertiesPtrOutput {
	return o
}

func (o InsightPropertiesPtrOutput) ToInsightPropertiesPtrOutputWithContext(ctx context.Context) InsightPropertiesPtrOutput {
	return o
}

func (o InsightPropertiesPtrOutput) Elem() InsightPropertiesOutput {
	return o.ApplyT(func(v *InsightProperties) InsightProperties {
		if v != nil {
			return *v
		}
		var ret InsightProperties
		return ret
	}).(InsightPropertiesOutput)
}

// additional details of the insight.
func (o InsightPropertiesPtrOutput) AdditionalDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *InsightProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.AdditionalDetails
	}).(pulumi.AnyOutput)
}

// category of the insight.
func (o InsightPropertiesPtrOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InsightProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Category
	}).(pulumi.StringPtrOutput)
}

// Contains title & description for the insight
func (o InsightPropertiesPtrOutput) Content() ContentPtrOutput {
	return o.ApplyT(func(v *InsightProperties) *Content {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(ContentPtrOutput)
}

// Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event.
func (o InsightPropertiesPtrOutput) EventId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InsightProperties) *string {
		if v == nil {
			return nil
		}
		return v.EventId
	}).(pulumi.StringPtrOutput)
}

// Time of the event, which has been correlated the impact.
func (o InsightPropertiesPtrOutput) EventTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InsightProperties) *string {
		if v == nil {
			return nil
		}
		return v.EventTime
	}).(pulumi.StringPtrOutput)
}

// Identifier that can be used to group similar insights.
func (o InsightPropertiesPtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InsightProperties) *string {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.StringPtrOutput)
}

// details of of the impact for which insight has been generated.
func (o InsightPropertiesPtrOutput) Impact() ImpactDetailsPtrOutput {
	return o.ApplyT(func(v *InsightProperties) *ImpactDetails {
		if v == nil {
			return nil
		}
		return &v.Impact
	}).(ImpactDetailsPtrOutput)
}

// unique id of the insight.
func (o InsightPropertiesPtrOutput) InsightUniqueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InsightProperties) *string {
		if v == nil {
			return nil
		}
		return &v.InsightUniqueId
	}).(pulumi.StringPtrOutput)
}

// status of the insight. example resolved, repaired, other.
func (o InsightPropertiesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InsightProperties) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Impact category properties.
type InsightPropertiesResponse struct {
	// additional details of the insight.
	AdditionalDetails interface{} `pulumi:"additionalDetails"`
	// category of the insight.
	Category string `pulumi:"category"`
	// Contains title & description for the insight
	Content ContentResponse `pulumi:"content"`
	// Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event.
	EventId *string `pulumi:"eventId"`
	// Time of the event, which has been correlated the impact.
	EventTime *string `pulumi:"eventTime"`
	// Identifier that can be used to group similar insights.
	GroupId *string `pulumi:"groupId"`
	// details of of the impact for which insight has been generated.
	Impact ImpactDetailsResponse `pulumi:"impact"`
	// unique id of the insight.
	InsightUniqueId string `pulumi:"insightUniqueId"`
	// Resource provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// status of the insight. example resolved, repaired, other.
	Status *string `pulumi:"status"`
}

// Impact category properties.
type InsightPropertiesResponseOutput struct{ *pulumi.OutputState }

func (InsightPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightPropertiesResponse)(nil)).Elem()
}

func (o InsightPropertiesResponseOutput) ToInsightPropertiesResponseOutput() InsightPropertiesResponseOutput {
	return o
}

func (o InsightPropertiesResponseOutput) ToInsightPropertiesResponseOutputWithContext(ctx context.Context) InsightPropertiesResponseOutput {
	return o
}

// additional details of the insight.
func (o InsightPropertiesResponseOutput) AdditionalDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v InsightPropertiesResponse) interface{} { return v.AdditionalDetails }).(pulumi.AnyOutput)
}

// category of the insight.
func (o InsightPropertiesResponseOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v InsightPropertiesResponse) string { return v.Category }).(pulumi.StringOutput)
}

// Contains title & description for the insight
func (o InsightPropertiesResponseOutput) Content() ContentResponseOutput {
	return o.ApplyT(func(v InsightPropertiesResponse) ContentResponse { return v.Content }).(ContentResponseOutput)
}

// Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event.
func (o InsightPropertiesResponseOutput) EventId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightPropertiesResponse) *string { return v.EventId }).(pulumi.StringPtrOutput)
}

// Time of the event, which has been correlated the impact.
func (o InsightPropertiesResponseOutput) EventTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightPropertiesResponse) *string { return v.EventTime }).(pulumi.StringPtrOutput)
}

// Identifier that can be used to group similar insights.
func (o InsightPropertiesResponseOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightPropertiesResponse) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// details of of the impact for which insight has been generated.
func (o InsightPropertiesResponseOutput) Impact() ImpactDetailsResponseOutput {
	return o.ApplyT(func(v InsightPropertiesResponse) ImpactDetailsResponse { return v.Impact }).(ImpactDetailsResponseOutput)
}

// unique id of the insight.
func (o InsightPropertiesResponseOutput) InsightUniqueId() pulumi.StringOutput {
	return o.ApplyT(func(v InsightPropertiesResponse) string { return v.InsightUniqueId }).(pulumi.StringOutput)
}

// Resource provisioning state.
func (o InsightPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v InsightPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// status of the insight. example resolved, repaired, other.
func (o InsightPropertiesResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightPropertiesResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Details about impacted performance metrics. Applicable for performance related impact
type Performance struct {
	// Observed value for the metric
	Actual *float64 `pulumi:"actual"`
	// Threshold value for the metric
	Expected *float64 `pulumi:"expected"`
	// Max and Min Threshold values for the metric
	ExpectedValueRange *ExpectedValueRange `pulumi:"expectedValueRange"`
	// Name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API
	MetricName *string `pulumi:"metricName"`
	// Unit of the metric ex: Bytes, Percentage, Count, Seconds, Milliseconds, Bytes/Second, Count/Second, etc.., Other
	Unit *string `pulumi:"unit"`
}

// PerformanceInput is an input type that accepts PerformanceArgs and PerformanceOutput values.
// You can construct a concrete instance of `PerformanceInput` via:
//
//	PerformanceArgs{...}
type PerformanceInput interface {
	pulumi.Input

	ToPerformanceOutput() PerformanceOutput
	ToPerformanceOutputWithContext(context.Context) PerformanceOutput
}

// Details about impacted performance metrics. Applicable for performance related impact
type PerformanceArgs struct {
	// Observed value for the metric
	Actual pulumi.Float64PtrInput `pulumi:"actual"`
	// Threshold value for the metric
	Expected pulumi.Float64PtrInput `pulumi:"expected"`
	// Max and Min Threshold values for the metric
	ExpectedValueRange ExpectedValueRangePtrInput `pulumi:"expectedValueRange"`
	// Name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// Unit of the metric ex: Bytes, Percentage, Count, Seconds, Milliseconds, Bytes/Second, Count/Second, etc.., Other
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (PerformanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Performance)(nil)).Elem()
}

func (i PerformanceArgs) ToPerformanceOutput() PerformanceOutput {
	return i.ToPerformanceOutputWithContext(context.Background())
}

func (i PerformanceArgs) ToPerformanceOutputWithContext(ctx context.Context) PerformanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerformanceOutput)
}

// PerformanceArrayInput is an input type that accepts PerformanceArray and PerformanceArrayOutput values.
// You can construct a concrete instance of `PerformanceArrayInput` via:
//
//	PerformanceArray{ PerformanceArgs{...} }
type PerformanceArrayInput interface {
	pulumi.Input

	ToPerformanceArrayOutput() PerformanceArrayOutput
	ToPerformanceArrayOutputWithContext(context.Context) PerformanceArrayOutput
}

type PerformanceArray []PerformanceInput

func (PerformanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Performance)(nil)).Elem()
}

func (i PerformanceArray) ToPerformanceArrayOutput() PerformanceArrayOutput {
	return i.ToPerformanceArrayOutputWithContext(context.Background())
}

func (i PerformanceArray) ToPerformanceArrayOutputWithContext(ctx context.Context) PerformanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PerformanceArrayOutput)
}

// Details about impacted performance metrics. Applicable for performance related impact
type PerformanceOutput struct{ *pulumi.OutputState }

func (PerformanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Performance)(nil)).Elem()
}

func (o PerformanceOutput) ToPerformanceOutput() PerformanceOutput {
	return o
}

func (o PerformanceOutput) ToPerformanceOutputWithContext(ctx context.Context) PerformanceOutput {
	return o
}

// Observed value for the metric
func (o PerformanceOutput) Actual() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v Performance) *float64 { return v.Actual }).(pulumi.Float64PtrOutput)
}

// Threshold value for the metric
func (o PerformanceOutput) Expected() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v Performance) *float64 { return v.Expected }).(pulumi.Float64PtrOutput)
}

// Max and Min Threshold values for the metric
func (o PerformanceOutput) ExpectedValueRange() ExpectedValueRangePtrOutput {
	return o.ApplyT(func(v Performance) *ExpectedValueRange { return v.ExpectedValueRange }).(ExpectedValueRangePtrOutput)
}

// Name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API
func (o PerformanceOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Performance) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// Unit of the metric ex: Bytes, Percentage, Count, Seconds, Milliseconds, Bytes/Second, Count/Second, etc.., Other
func (o PerformanceOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Performance) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type PerformanceArrayOutput struct{ *pulumi.OutputState }

func (PerformanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Performance)(nil)).Elem()
}

func (o PerformanceArrayOutput) ToPerformanceArrayOutput() PerformanceArrayOutput {
	return o
}

func (o PerformanceArrayOutput) ToPerformanceArrayOutputWithContext(ctx context.Context) PerformanceArrayOutput {
	return o
}

func (o PerformanceArrayOutput) Index(i pulumi.IntInput) PerformanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Performance {
		return vs[0].([]Performance)[vs[1].(int)]
	}).(PerformanceOutput)
}

// Details about impacted performance metrics. Applicable for performance related impact
type PerformanceResponse struct {
	// Observed value for the metric
	Actual *float64 `pulumi:"actual"`
	// Threshold value for the metric
	Expected *float64 `pulumi:"expected"`
	// Max and Min Threshold values for the metric
	ExpectedValueRange *ExpectedValueRangeResponse `pulumi:"expectedValueRange"`
	// Name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API
	MetricName *string `pulumi:"metricName"`
	// Unit of the metric ex: Bytes, Percentage, Count, Seconds, Milliseconds, Bytes/Second, Count/Second, etc.., Other
	Unit *string `pulumi:"unit"`
}

// Details about impacted performance metrics. Applicable for performance related impact
type PerformanceResponseOutput struct{ *pulumi.OutputState }

func (PerformanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PerformanceResponse)(nil)).Elem()
}

func (o PerformanceResponseOutput) ToPerformanceResponseOutput() PerformanceResponseOutput {
	return o
}

func (o PerformanceResponseOutput) ToPerformanceResponseOutputWithContext(ctx context.Context) PerformanceResponseOutput {
	return o
}

// Observed value for the metric
func (o PerformanceResponseOutput) Actual() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PerformanceResponse) *float64 { return v.Actual }).(pulumi.Float64PtrOutput)
}

// Threshold value for the metric
func (o PerformanceResponseOutput) Expected() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PerformanceResponse) *float64 { return v.Expected }).(pulumi.Float64PtrOutput)
}

// Max and Min Threshold values for the metric
func (o PerformanceResponseOutput) ExpectedValueRange() ExpectedValueRangeResponsePtrOutput {
	return o.ApplyT(func(v PerformanceResponse) *ExpectedValueRangeResponse { return v.ExpectedValueRange }).(ExpectedValueRangeResponsePtrOutput)
}

// Name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API
func (o PerformanceResponseOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PerformanceResponse) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// Unit of the metric ex: Bytes, Percentage, Count, Seconds, Milliseconds, Bytes/Second, Count/Second, etc.., Other
func (o PerformanceResponseOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PerformanceResponse) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type PerformanceResponseArrayOutput struct{ *pulumi.OutputState }

func (PerformanceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PerformanceResponse)(nil)).Elem()
}

func (o PerformanceResponseArrayOutput) ToPerformanceResponseArrayOutput() PerformanceResponseArrayOutput {
	return o
}

func (o PerformanceResponseArrayOutput) ToPerformanceResponseArrayOutputWithContext(ctx context.Context) PerformanceResponseArrayOutput {
	return o
}

func (o PerformanceResponseArrayOutput) Index(i pulumi.IntInput) PerformanceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PerformanceResponse {
		return vs[0].([]PerformanceResponse)[vs[1].(int)]
	}).(PerformanceResponseOutput)
}

// Resource details
type SourceOrTarget struct {
	// Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}
	AzureResourceId *string `pulumi:"azureResourceId"`
}

// SourceOrTargetInput is an input type that accepts SourceOrTargetArgs and SourceOrTargetOutput values.
// You can construct a concrete instance of `SourceOrTargetInput` via:
//
//	SourceOrTargetArgs{...}
type SourceOrTargetInput interface {
	pulumi.Input

	ToSourceOrTargetOutput() SourceOrTargetOutput
	ToSourceOrTargetOutputWithContext(context.Context) SourceOrTargetOutput
}

// Resource details
type SourceOrTargetArgs struct {
	// Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}
	AzureResourceId pulumi.StringPtrInput `pulumi:"azureResourceId"`
}

func (SourceOrTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceOrTarget)(nil)).Elem()
}

func (i SourceOrTargetArgs) ToSourceOrTargetOutput() SourceOrTargetOutput {
	return i.ToSourceOrTargetOutputWithContext(context.Background())
}

func (i SourceOrTargetArgs) ToSourceOrTargetOutputWithContext(ctx context.Context) SourceOrTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceOrTargetOutput)
}

func (i SourceOrTargetArgs) ToSourceOrTargetPtrOutput() SourceOrTargetPtrOutput {
	return i.ToSourceOrTargetPtrOutputWithContext(context.Background())
}

func (i SourceOrTargetArgs) ToSourceOrTargetPtrOutputWithContext(ctx context.Context) SourceOrTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceOrTargetOutput).ToSourceOrTargetPtrOutputWithContext(ctx)
}

// SourceOrTargetPtrInput is an input type that accepts SourceOrTargetArgs, SourceOrTargetPtr and SourceOrTargetPtrOutput values.
// You can construct a concrete instance of `SourceOrTargetPtrInput` via:
//
//	        SourceOrTargetArgs{...}
//
//	or:
//
//	        nil
type SourceOrTargetPtrInput interface {
	pulumi.Input

	ToSourceOrTargetPtrOutput() SourceOrTargetPtrOutput
	ToSourceOrTargetPtrOutputWithContext(context.Context) SourceOrTargetPtrOutput
}

type sourceOrTargetPtrType SourceOrTargetArgs

func SourceOrTargetPtr(v *SourceOrTargetArgs) SourceOrTargetPtrInput {
	return (*sourceOrTargetPtrType)(v)
}

func (*sourceOrTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceOrTarget)(nil)).Elem()
}

func (i *sourceOrTargetPtrType) ToSourceOrTargetPtrOutput() SourceOrTargetPtrOutput {
	return i.ToSourceOrTargetPtrOutputWithContext(context.Background())
}

func (i *sourceOrTargetPtrType) ToSourceOrTargetPtrOutputWithContext(ctx context.Context) SourceOrTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceOrTargetPtrOutput)
}

// Resource details
type SourceOrTargetOutput struct{ *pulumi.OutputState }

func (SourceOrTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceOrTarget)(nil)).Elem()
}

func (o SourceOrTargetOutput) ToSourceOrTargetOutput() SourceOrTargetOutput {
	return o
}

func (o SourceOrTargetOutput) ToSourceOrTargetOutputWithContext(ctx context.Context) SourceOrTargetOutput {
	return o
}

func (o SourceOrTargetOutput) ToSourceOrTargetPtrOutput() SourceOrTargetPtrOutput {
	return o.ToSourceOrTargetPtrOutputWithContext(context.Background())
}

func (o SourceOrTargetOutput) ToSourceOrTargetPtrOutputWithContext(ctx context.Context) SourceOrTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceOrTarget) *SourceOrTarget {
		return &v
	}).(SourceOrTargetPtrOutput)
}

// Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}
func (o SourceOrTargetOutput) AzureResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceOrTarget) *string { return v.AzureResourceId }).(pulumi.StringPtrOutput)
}

type SourceOrTargetPtrOutput struct{ *pulumi.OutputState }

func (SourceOrTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceOrTarget)(nil)).Elem()
}

func (o SourceOrTargetPtrOutput) ToSourceOrTargetPtrOutput() SourceOrTargetPtrOutput {
	return o
}

func (o SourceOrTargetPtrOutput) ToSourceOrTargetPtrOutputWithContext(ctx context.Context) SourceOrTargetPtrOutput {
	return o
}

func (o SourceOrTargetPtrOutput) Elem() SourceOrTargetOutput {
	return o.ApplyT(func(v *SourceOrTarget) SourceOrTarget {
		if v != nil {
			return *v
		}
		var ret SourceOrTarget
		return ret
	}).(SourceOrTargetOutput)
}

// Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}
func (o SourceOrTargetPtrOutput) AzureResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceOrTarget) *string {
		if v == nil {
			return nil
		}
		return v.AzureResourceId
	}).(pulumi.StringPtrOutput)
}

// Resource details
type SourceOrTargetResponse struct {
	// Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}
	AzureResourceId *string `pulumi:"azureResourceId"`
}

// Resource details
type SourceOrTargetResponseOutput struct{ *pulumi.OutputState }

func (SourceOrTargetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceOrTargetResponse)(nil)).Elem()
}

func (o SourceOrTargetResponseOutput) ToSourceOrTargetResponseOutput() SourceOrTargetResponseOutput {
	return o
}

func (o SourceOrTargetResponseOutput) ToSourceOrTargetResponseOutputWithContext(ctx context.Context) SourceOrTargetResponseOutput {
	return o
}

// Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}
func (o SourceOrTargetResponseOutput) AzureResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceOrTargetResponse) *string { return v.AzureResourceId }).(pulumi.StringPtrOutput)
}

type SourceOrTargetResponsePtrOutput struct{ *pulumi.OutputState }

func (SourceOrTargetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceOrTargetResponse)(nil)).Elem()
}

func (o SourceOrTargetResponsePtrOutput) ToSourceOrTargetResponsePtrOutput() SourceOrTargetResponsePtrOutput {
	return o
}

func (o SourceOrTargetResponsePtrOutput) ToSourceOrTargetResponsePtrOutputWithContext(ctx context.Context) SourceOrTargetResponsePtrOutput {
	return o
}

func (o SourceOrTargetResponsePtrOutput) Elem() SourceOrTargetResponseOutput {
	return o.ApplyT(func(v *SourceOrTargetResponse) SourceOrTargetResponse {
		if v != nil {
			return *v
		}
		var ret SourceOrTargetResponse
		return ret
	}).(SourceOrTargetResponseOutput)
}

// Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}
func (o SourceOrTargetResponsePtrOutput) AzureResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceOrTargetResponse) *string {
		if v == nil {
			return nil
		}
		return v.AzureResourceId
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Information about the impacted workload
type Workload struct {
	// the scenario for the workload
	Context *string `pulumi:"context"`
	// Tool used to interact with Azure. SDK, AzPortal, etc.., Other
	Toolset *string `pulumi:"toolset"`
}

// WorkloadInput is an input type that accepts WorkloadArgs and WorkloadOutput values.
// You can construct a concrete instance of `WorkloadInput` via:
//
//	WorkloadArgs{...}
type WorkloadInput interface {
	pulumi.Input

	ToWorkloadOutput() WorkloadOutput
	ToWorkloadOutputWithContext(context.Context) WorkloadOutput
}

// Information about the impacted workload
type WorkloadArgs struct {
	// the scenario for the workload
	Context pulumi.StringPtrInput `pulumi:"context"`
	// Tool used to interact with Azure. SDK, AzPortal, etc.., Other
	Toolset pulumi.StringPtrInput `pulumi:"toolset"`
}

func (WorkloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Workload)(nil)).Elem()
}

func (i WorkloadArgs) ToWorkloadOutput() WorkloadOutput {
	return i.ToWorkloadOutputWithContext(context.Background())
}

func (i WorkloadArgs) ToWorkloadOutputWithContext(ctx context.Context) WorkloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadOutput)
}

func (i WorkloadArgs) ToWorkloadPtrOutput() WorkloadPtrOutput {
	return i.ToWorkloadPtrOutputWithContext(context.Background())
}

func (i WorkloadArgs) ToWorkloadPtrOutputWithContext(ctx context.Context) WorkloadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadOutput).ToWorkloadPtrOutputWithContext(ctx)
}

// WorkloadPtrInput is an input type that accepts WorkloadArgs, WorkloadPtr and WorkloadPtrOutput values.
// You can construct a concrete instance of `WorkloadPtrInput` via:
//
//	        WorkloadArgs{...}
//
//	or:
//
//	        nil
type WorkloadPtrInput interface {
	pulumi.Input

	ToWorkloadPtrOutput() WorkloadPtrOutput
	ToWorkloadPtrOutputWithContext(context.Context) WorkloadPtrOutput
}

type workloadPtrType WorkloadArgs

func WorkloadPtr(v *WorkloadArgs) WorkloadPtrInput {
	return (*workloadPtrType)(v)
}

func (*workloadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Workload)(nil)).Elem()
}

func (i *workloadPtrType) ToWorkloadPtrOutput() WorkloadPtrOutput {
	return i.ToWorkloadPtrOutputWithContext(context.Background())
}

func (i *workloadPtrType) ToWorkloadPtrOutputWithContext(ctx context.Context) WorkloadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadPtrOutput)
}

// Information about the impacted workload
type WorkloadOutput struct{ *pulumi.OutputState }

func (WorkloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Workload)(nil)).Elem()
}

func (o WorkloadOutput) ToWorkloadOutput() WorkloadOutput {
	return o
}

func (o WorkloadOutput) ToWorkloadOutputWithContext(ctx context.Context) WorkloadOutput {
	return o
}

func (o WorkloadOutput) ToWorkloadPtrOutput() WorkloadPtrOutput {
	return o.ToWorkloadPtrOutputWithContext(context.Background())
}

func (o WorkloadOutput) ToWorkloadPtrOutputWithContext(ctx context.Context) WorkloadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Workload) *Workload {
		return &v
	}).(WorkloadPtrOutput)
}

// the scenario for the workload
func (o WorkloadOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Workload) *string { return v.Context }).(pulumi.StringPtrOutput)
}

// Tool used to interact with Azure. SDK, AzPortal, etc.., Other
func (o WorkloadOutput) Toolset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Workload) *string { return v.Toolset }).(pulumi.StringPtrOutput)
}

type WorkloadPtrOutput struct{ *pulumi.OutputState }

func (WorkloadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Workload)(nil)).Elem()
}

func (o WorkloadPtrOutput) ToWorkloadPtrOutput() WorkloadPtrOutput {
	return o
}

func (o WorkloadPtrOutput) ToWorkloadPtrOutputWithContext(ctx context.Context) WorkloadPtrOutput {
	return o
}

func (o WorkloadPtrOutput) Elem() WorkloadOutput {
	return o.ApplyT(func(v *Workload) Workload {
		if v != nil {
			return *v
		}
		var ret Workload
		return ret
	}).(WorkloadOutput)
}

// the scenario for the workload
func (o WorkloadPtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workload) *string {
		if v == nil {
			return nil
		}
		return v.Context
	}).(pulumi.StringPtrOutput)
}

// Tool used to interact with Azure. SDK, AzPortal, etc.., Other
func (o WorkloadPtrOutput) Toolset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workload) *string {
		if v == nil {
			return nil
		}
		return v.Toolset
	}).(pulumi.StringPtrOutput)
}

// Workload impact properties
type WorkloadImpactProperties struct {
	// Additional fields related to impact, applicable fields per resource type are list under /impactCategories API
	AdditionalProperties interface{} `pulumi:"additionalProperties"`
	// The ARM correlation ids, this is important field for control plane related impacts
	ArmCorrelationIds []string `pulumi:"armCorrelationIds"`
	// Client incident details ex: incidentId , incident source
	ClientIncidentDetails *ClientIncidentDetails `pulumi:"clientIncidentDetails"`
	// Degree of confidence on the impact being a platform issue
	ConfidenceLevel *string `pulumi:"confidenceLevel"`
	// Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue
	Connectivity *Connectivity `pulumi:"connectivity"`
	// Time at which impact has ended
	EndDateTime *string `pulumi:"endDateTime"`
	// ARM error code and error message associated with the impact
	ErrorDetails *ErrorDetailProperties `pulumi:"errorDetails"`
	// Category of the impact,  details can found from /impactCategories API
	ImpactCategory string `pulumi:"impactCategory"`
	// A detailed description of the impact
	ImpactDescription *string `pulumi:"impactDescription"`
	// Use this field to group impacts
	ImpactGroupId *string `pulumi:"impactGroupId"`
	// Azure resource id of the impacted resource
	ImpactedResourceId string `pulumi:"impactedResourceId"`
	// Details about performance issue. Applicable for performance impacts.
	Performance []Performance `pulumi:"performance"`
	// Time at which impact was observed
	StartDateTime string `pulumi:"startDateTime"`
	// Information about the impacted workload
	Workload *Workload `pulumi:"workload"`
}

// WorkloadImpactPropertiesInput is an input type that accepts WorkloadImpactPropertiesArgs and WorkloadImpactPropertiesOutput values.
// You can construct a concrete instance of `WorkloadImpactPropertiesInput` via:
//
//	WorkloadImpactPropertiesArgs{...}
type WorkloadImpactPropertiesInput interface {
	pulumi.Input

	ToWorkloadImpactPropertiesOutput() WorkloadImpactPropertiesOutput
	ToWorkloadImpactPropertiesOutputWithContext(context.Context) WorkloadImpactPropertiesOutput
}

// Workload impact properties
type WorkloadImpactPropertiesArgs struct {
	// Additional fields related to impact, applicable fields per resource type are list under /impactCategories API
	AdditionalProperties pulumi.Input `pulumi:"additionalProperties"`
	// The ARM correlation ids, this is important field for control plane related impacts
	ArmCorrelationIds pulumi.StringArrayInput `pulumi:"armCorrelationIds"`
	// Client incident details ex: incidentId , incident source
	ClientIncidentDetails ClientIncidentDetailsPtrInput `pulumi:"clientIncidentDetails"`
	// Degree of confidence on the impact being a platform issue
	ConfidenceLevel pulumi.StringPtrInput `pulumi:"confidenceLevel"`
	// Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue
	Connectivity ConnectivityPtrInput `pulumi:"connectivity"`
	// Time at which impact has ended
	EndDateTime pulumi.StringPtrInput `pulumi:"endDateTime"`
	// ARM error code and error message associated with the impact
	ErrorDetails ErrorDetailPropertiesPtrInput `pulumi:"errorDetails"`
	// Category of the impact,  details can found from /impactCategories API
	ImpactCategory pulumi.StringInput `pulumi:"impactCategory"`
	// A detailed description of the impact
	ImpactDescription pulumi.StringPtrInput `pulumi:"impactDescription"`
	// Use this field to group impacts
	ImpactGroupId pulumi.StringPtrInput `pulumi:"impactGroupId"`
	// Azure resource id of the impacted resource
	ImpactedResourceId pulumi.StringInput `pulumi:"impactedResourceId"`
	// Details about performance issue. Applicable for performance impacts.
	Performance PerformanceArrayInput `pulumi:"performance"`
	// Time at which impact was observed
	StartDateTime pulumi.StringInput `pulumi:"startDateTime"`
	// Information about the impacted workload
	Workload WorkloadPtrInput `pulumi:"workload"`
}

func (WorkloadImpactPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadImpactProperties)(nil)).Elem()
}

func (i WorkloadImpactPropertiesArgs) ToWorkloadImpactPropertiesOutput() WorkloadImpactPropertiesOutput {
	return i.ToWorkloadImpactPropertiesOutputWithContext(context.Background())
}

func (i WorkloadImpactPropertiesArgs) ToWorkloadImpactPropertiesOutputWithContext(ctx context.Context) WorkloadImpactPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadImpactPropertiesOutput)
}

func (i WorkloadImpactPropertiesArgs) ToWorkloadImpactPropertiesPtrOutput() WorkloadImpactPropertiesPtrOutput {
	return i.ToWorkloadImpactPropertiesPtrOutputWithContext(context.Background())
}

func (i WorkloadImpactPropertiesArgs) ToWorkloadImpactPropertiesPtrOutputWithContext(ctx context.Context) WorkloadImpactPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadImpactPropertiesOutput).ToWorkloadImpactPropertiesPtrOutputWithContext(ctx)
}

// WorkloadImpactPropertiesPtrInput is an input type that accepts WorkloadImpactPropertiesArgs, WorkloadImpactPropertiesPtr and WorkloadImpactPropertiesPtrOutput values.
// You can construct a concrete instance of `WorkloadImpactPropertiesPtrInput` via:
//
//	        WorkloadImpactPropertiesArgs{...}
//
//	or:
//
//	        nil
type WorkloadImpactPropertiesPtrInput interface {
	pulumi.Input

	ToWorkloadImpactPropertiesPtrOutput() WorkloadImpactPropertiesPtrOutput
	ToWorkloadImpactPropertiesPtrOutputWithContext(context.Context) WorkloadImpactPropertiesPtrOutput
}

type workloadImpactPropertiesPtrType WorkloadImpactPropertiesArgs

func WorkloadImpactPropertiesPtr(v *WorkloadImpactPropertiesArgs) WorkloadImpactPropertiesPtrInput {
	return (*workloadImpactPropertiesPtrType)(v)
}

func (*workloadImpactPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadImpactProperties)(nil)).Elem()
}

func (i *workloadImpactPropertiesPtrType) ToWorkloadImpactPropertiesPtrOutput() WorkloadImpactPropertiesPtrOutput {
	return i.ToWorkloadImpactPropertiesPtrOutputWithContext(context.Background())
}

func (i *workloadImpactPropertiesPtrType) ToWorkloadImpactPropertiesPtrOutputWithContext(ctx context.Context) WorkloadImpactPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadImpactPropertiesPtrOutput)
}

// Workload impact properties
type WorkloadImpactPropertiesOutput struct{ *pulumi.OutputState }

func (WorkloadImpactPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadImpactProperties)(nil)).Elem()
}

func (o WorkloadImpactPropertiesOutput) ToWorkloadImpactPropertiesOutput() WorkloadImpactPropertiesOutput {
	return o
}

func (o WorkloadImpactPropertiesOutput) ToWorkloadImpactPropertiesOutputWithContext(ctx context.Context) WorkloadImpactPropertiesOutput {
	return o
}

func (o WorkloadImpactPropertiesOutput) ToWorkloadImpactPropertiesPtrOutput() WorkloadImpactPropertiesPtrOutput {
	return o.ToWorkloadImpactPropertiesPtrOutputWithContext(context.Background())
}

func (o WorkloadImpactPropertiesOutput) ToWorkloadImpactPropertiesPtrOutputWithContext(ctx context.Context) WorkloadImpactPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadImpactProperties) *WorkloadImpactProperties {
		return &v
	}).(WorkloadImpactPropertiesPtrOutput)
}

// Additional fields related to impact, applicable fields per resource type are list under /impactCategories API
func (o WorkloadImpactPropertiesOutput) AdditionalProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v WorkloadImpactProperties) interface{} { return v.AdditionalProperties }).(pulumi.AnyOutput)
}

// The ARM correlation ids, this is important field for control plane related impacts
func (o WorkloadImpactPropertiesOutput) ArmCorrelationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadImpactProperties) []string { return v.ArmCorrelationIds }).(pulumi.StringArrayOutput)
}

// Client incident details ex: incidentId , incident source
func (o WorkloadImpactPropertiesOutput) ClientIncidentDetails() ClientIncidentDetailsPtrOutput {
	return o.ApplyT(func(v WorkloadImpactProperties) *ClientIncidentDetails { return v.ClientIncidentDetails }).(ClientIncidentDetailsPtrOutput)
}

// Degree of confidence on the impact being a platform issue
func (o WorkloadImpactPropertiesOutput) ConfidenceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadImpactProperties) *string { return v.ConfidenceLevel }).(pulumi.StringPtrOutput)
}

// Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue
func (o WorkloadImpactPropertiesOutput) Connectivity() ConnectivityPtrOutput {
	return o.ApplyT(func(v WorkloadImpactProperties) *Connectivity { return v.Connectivity }).(ConnectivityPtrOutput)
}

// Time at which impact has ended
func (o WorkloadImpactPropertiesOutput) EndDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadImpactProperties) *string { return v.EndDateTime }).(pulumi.StringPtrOutput)
}

// ARM error code and error message associated with the impact
func (o WorkloadImpactPropertiesOutput) ErrorDetails() ErrorDetailPropertiesPtrOutput {
	return o.ApplyT(func(v WorkloadImpactProperties) *ErrorDetailProperties { return v.ErrorDetails }).(ErrorDetailPropertiesPtrOutput)
}

// Category of the impact,  details can found from /impactCategories API
func (o WorkloadImpactPropertiesOutput) ImpactCategory() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadImpactProperties) string { return v.ImpactCategory }).(pulumi.StringOutput)
}

// A detailed description of the impact
func (o WorkloadImpactPropertiesOutput) ImpactDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadImpactProperties) *string { return v.ImpactDescription }).(pulumi.StringPtrOutput)
}

// Use this field to group impacts
func (o WorkloadImpactPropertiesOutput) ImpactGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadImpactProperties) *string { return v.ImpactGroupId }).(pulumi.StringPtrOutput)
}

// Azure resource id of the impacted resource
func (o WorkloadImpactPropertiesOutput) ImpactedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadImpactProperties) string { return v.ImpactedResourceId }).(pulumi.StringOutput)
}

// Details about performance issue. Applicable for performance impacts.
func (o WorkloadImpactPropertiesOutput) Performance() PerformanceArrayOutput {
	return o.ApplyT(func(v WorkloadImpactProperties) []Performance { return v.Performance }).(PerformanceArrayOutput)
}

// Time at which impact was observed
func (o WorkloadImpactPropertiesOutput) StartDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadImpactProperties) string { return v.StartDateTime }).(pulumi.StringOutput)
}

// Information about the impacted workload
func (o WorkloadImpactPropertiesOutput) Workload() WorkloadPtrOutput {
	return o.ApplyT(func(v WorkloadImpactProperties) *Workload { return v.Workload }).(WorkloadPtrOutput)
}

type WorkloadImpactPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkloadImpactPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadImpactProperties)(nil)).Elem()
}

func (o WorkloadImpactPropertiesPtrOutput) ToWorkloadImpactPropertiesPtrOutput() WorkloadImpactPropertiesPtrOutput {
	return o
}

func (o WorkloadImpactPropertiesPtrOutput) ToWorkloadImpactPropertiesPtrOutputWithContext(ctx context.Context) WorkloadImpactPropertiesPtrOutput {
	return o
}

func (o WorkloadImpactPropertiesPtrOutput) Elem() WorkloadImpactPropertiesOutput {
	return o.ApplyT(func(v *WorkloadImpactProperties) WorkloadImpactProperties {
		if v != nil {
			return *v
		}
		var ret WorkloadImpactProperties
		return ret
	}).(WorkloadImpactPropertiesOutput)
}

// Additional fields related to impact, applicable fields per resource type are list under /impactCategories API
func (o WorkloadImpactPropertiesPtrOutput) AdditionalProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v *WorkloadImpactProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.AdditionalProperties
	}).(pulumi.AnyOutput)
}

// The ARM correlation ids, this is important field for control plane related impacts
func (o WorkloadImpactPropertiesPtrOutput) ArmCorrelationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadImpactProperties) []string {
		if v == nil {
			return nil
		}
		return v.ArmCorrelationIds
	}).(pulumi.StringArrayOutput)
}

// Client incident details ex: incidentId , incident source
func (o WorkloadImpactPropertiesPtrOutput) ClientIncidentDetails() ClientIncidentDetailsPtrOutput {
	return o.ApplyT(func(v *WorkloadImpactProperties) *ClientIncidentDetails {
		if v == nil {
			return nil
		}
		return v.ClientIncidentDetails
	}).(ClientIncidentDetailsPtrOutput)
}

// Degree of confidence on the impact being a platform issue
func (o WorkloadImpactPropertiesPtrOutput) ConfidenceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadImpactProperties) *string {
		if v == nil {
			return nil
		}
		return v.ConfidenceLevel
	}).(pulumi.StringPtrOutput)
}

// Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue
func (o WorkloadImpactPropertiesPtrOutput) Connectivity() ConnectivityPtrOutput {
	return o.ApplyT(func(v *WorkloadImpactProperties) *Connectivity {
		if v == nil {
			return nil
		}
		return v.Connectivity
	}).(ConnectivityPtrOutput)
}

// Time at which impact has ended
func (o WorkloadImpactPropertiesPtrOutput) EndDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadImpactProperties) *string {
		if v == nil {
			return nil
		}
		return v.EndDateTime
	}).(pulumi.StringPtrOutput)
}

// ARM error code and error message associated with the impact
func (o WorkloadImpactPropertiesPtrOutput) ErrorDetails() ErrorDetailPropertiesPtrOutput {
	return o.ApplyT(func(v *WorkloadImpactProperties) *ErrorDetailProperties {
		if v == nil {
			return nil
		}
		return v.ErrorDetails
	}).(ErrorDetailPropertiesPtrOutput)
}

// Category of the impact,  details can found from /impactCategories API
func (o WorkloadImpactPropertiesPtrOutput) ImpactCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadImpactProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ImpactCategory
	}).(pulumi.StringPtrOutput)
}

// A detailed description of the impact
func (o WorkloadImpactPropertiesPtrOutput) ImpactDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadImpactProperties) *string {
		if v == nil {
			return nil
		}
		return v.ImpactDescription
	}).(pulumi.StringPtrOutput)
}

// Use this field to group impacts
func (o WorkloadImpactPropertiesPtrOutput) ImpactGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadImpactProperties) *string {
		if v == nil {
			return nil
		}
		return v.ImpactGroupId
	}).(pulumi.StringPtrOutput)
}

// Azure resource id of the impacted resource
func (o WorkloadImpactPropertiesPtrOutput) ImpactedResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadImpactProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ImpactedResourceId
	}).(pulumi.StringPtrOutput)
}

// Details about performance issue. Applicable for performance impacts.
func (o WorkloadImpactPropertiesPtrOutput) Performance() PerformanceArrayOutput {
	return o.ApplyT(func(v *WorkloadImpactProperties) []Performance {
		if v == nil {
			return nil
		}
		return v.Performance
	}).(PerformanceArrayOutput)
}

// Time at which impact was observed
func (o WorkloadImpactPropertiesPtrOutput) StartDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadImpactProperties) *string {
		if v == nil {
			return nil
		}
		return &v.StartDateTime
	}).(pulumi.StringPtrOutput)
}

// Information about the impacted workload
func (o WorkloadImpactPropertiesPtrOutput) Workload() WorkloadPtrOutput {
	return o.ApplyT(func(v *WorkloadImpactProperties) *Workload {
		if v == nil {
			return nil
		}
		return v.Workload
	}).(WorkloadPtrOutput)
}

// Workload impact properties
type WorkloadImpactPropertiesResponse struct {
	// Additional fields related to impact, applicable fields per resource type are list under /impactCategories API
	AdditionalProperties interface{} `pulumi:"additionalProperties"`
	// The ARM correlation ids, this is important field for control plane related impacts
	ArmCorrelationIds []string `pulumi:"armCorrelationIds"`
	// Client incident details ex: incidentId , incident source
	ClientIncidentDetails *ClientIncidentDetailsResponse `pulumi:"clientIncidentDetails"`
	// Degree of confidence on the impact being a platform issue
	ConfidenceLevel *string `pulumi:"confidenceLevel"`
	// Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue
	Connectivity *ConnectivityResponse `pulumi:"connectivity"`
	// Time at which impact has ended
	EndDateTime *string `pulumi:"endDateTime"`
	// ARM error code and error message associated with the impact
	ErrorDetails *ErrorDetailPropertiesResponse `pulumi:"errorDetails"`
	// Category of the impact,  details can found from /impactCategories API
	ImpactCategory string `pulumi:"impactCategory"`
	// A detailed description of the impact
	ImpactDescription *string `pulumi:"impactDescription"`
	// Use this field to group impacts
	ImpactGroupId *string `pulumi:"impactGroupId"`
	// Unique ID of the impact (UUID)
	ImpactUniqueId string `pulumi:"impactUniqueId"`
	// Azure resource id of the impacted resource
	ImpactedResourceId string `pulumi:"impactedResourceId"`
	// Details about performance issue. Applicable for performance impacts.
	Performance []PerformanceResponse `pulumi:"performance"`
	// Resource provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// Time at which impact is reported
	ReportedTimeUtc string `pulumi:"reportedTimeUtc"`
	// Time at which impact was observed
	StartDateTime string `pulumi:"startDateTime"`
	// Information about the impacted workload
	Workload *WorkloadResponse `pulumi:"workload"`
}

// Workload impact properties
type WorkloadImpactPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WorkloadImpactPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadImpactPropertiesResponse)(nil)).Elem()
}

func (o WorkloadImpactPropertiesResponseOutput) ToWorkloadImpactPropertiesResponseOutput() WorkloadImpactPropertiesResponseOutput {
	return o
}

func (o WorkloadImpactPropertiesResponseOutput) ToWorkloadImpactPropertiesResponseOutputWithContext(ctx context.Context) WorkloadImpactPropertiesResponseOutput {
	return o
}

// Additional fields related to impact, applicable fields per resource type are list under /impactCategories API
func (o WorkloadImpactPropertiesResponseOutput) AdditionalProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) interface{} { return v.AdditionalProperties }).(pulumi.AnyOutput)
}

// The ARM correlation ids, this is important field for control plane related impacts
func (o WorkloadImpactPropertiesResponseOutput) ArmCorrelationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) []string { return v.ArmCorrelationIds }).(pulumi.StringArrayOutput)
}

// Client incident details ex: incidentId , incident source
func (o WorkloadImpactPropertiesResponseOutput) ClientIncidentDetails() ClientIncidentDetailsResponsePtrOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) *ClientIncidentDetailsResponse {
		return v.ClientIncidentDetails
	}).(ClientIncidentDetailsResponsePtrOutput)
}

// Degree of confidence on the impact being a platform issue
func (o WorkloadImpactPropertiesResponseOutput) ConfidenceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) *string { return v.ConfidenceLevel }).(pulumi.StringPtrOutput)
}

// Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue
func (o WorkloadImpactPropertiesResponseOutput) Connectivity() ConnectivityResponsePtrOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) *ConnectivityResponse { return v.Connectivity }).(ConnectivityResponsePtrOutput)
}

// Time at which impact has ended
func (o WorkloadImpactPropertiesResponseOutput) EndDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) *string { return v.EndDateTime }).(pulumi.StringPtrOutput)
}

// ARM error code and error message associated with the impact
func (o WorkloadImpactPropertiesResponseOutput) ErrorDetails() ErrorDetailPropertiesResponsePtrOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) *ErrorDetailPropertiesResponse { return v.ErrorDetails }).(ErrorDetailPropertiesResponsePtrOutput)
}

// Category of the impact,  details can found from /impactCategories API
func (o WorkloadImpactPropertiesResponseOutput) ImpactCategory() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) string { return v.ImpactCategory }).(pulumi.StringOutput)
}

// A detailed description of the impact
func (o WorkloadImpactPropertiesResponseOutput) ImpactDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) *string { return v.ImpactDescription }).(pulumi.StringPtrOutput)
}

// Use this field to group impacts
func (o WorkloadImpactPropertiesResponseOutput) ImpactGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) *string { return v.ImpactGroupId }).(pulumi.StringPtrOutput)
}

// Unique ID of the impact (UUID)
func (o WorkloadImpactPropertiesResponseOutput) ImpactUniqueId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) string { return v.ImpactUniqueId }).(pulumi.StringOutput)
}

// Azure resource id of the impacted resource
func (o WorkloadImpactPropertiesResponseOutput) ImpactedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) string { return v.ImpactedResourceId }).(pulumi.StringOutput)
}

// Details about performance issue. Applicable for performance impacts.
func (o WorkloadImpactPropertiesResponseOutput) Performance() PerformanceResponseArrayOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) []PerformanceResponse { return v.Performance }).(PerformanceResponseArrayOutput)
}

// Resource provisioning state.
func (o WorkloadImpactPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Time at which impact is reported
func (o WorkloadImpactPropertiesResponseOutput) ReportedTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) string { return v.ReportedTimeUtc }).(pulumi.StringOutput)
}

// Time at which impact was observed
func (o WorkloadImpactPropertiesResponseOutput) StartDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) string { return v.StartDateTime }).(pulumi.StringOutput)
}

// Information about the impacted workload
func (o WorkloadImpactPropertiesResponseOutput) Workload() WorkloadResponsePtrOutput {
	return o.ApplyT(func(v WorkloadImpactPropertiesResponse) *WorkloadResponse { return v.Workload }).(WorkloadResponsePtrOutput)
}

// Information about the impacted workload
type WorkloadResponse struct {
	// the scenario for the workload
	Context *string `pulumi:"context"`
	// Tool used to interact with Azure. SDK, AzPortal, etc.., Other
	Toolset *string `pulumi:"toolset"`
}

// Information about the impacted workload
type WorkloadResponseOutput struct{ *pulumi.OutputState }

func (WorkloadResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadResponse)(nil)).Elem()
}

func (o WorkloadResponseOutput) ToWorkloadResponseOutput() WorkloadResponseOutput {
	return o
}

func (o WorkloadResponseOutput) ToWorkloadResponseOutputWithContext(ctx context.Context) WorkloadResponseOutput {
	return o
}

// the scenario for the workload
func (o WorkloadResponseOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadResponse) *string { return v.Context }).(pulumi.StringPtrOutput)
}

// Tool used to interact with Azure. SDK, AzPortal, etc.., Other
func (o WorkloadResponseOutput) Toolset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadResponse) *string { return v.Toolset }).(pulumi.StringPtrOutput)
}

type WorkloadResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkloadResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadResponse)(nil)).Elem()
}

func (o WorkloadResponsePtrOutput) ToWorkloadResponsePtrOutput() WorkloadResponsePtrOutput {
	return o
}

func (o WorkloadResponsePtrOutput) ToWorkloadResponsePtrOutputWithContext(ctx context.Context) WorkloadResponsePtrOutput {
	return o
}

func (o WorkloadResponsePtrOutput) Elem() WorkloadResponseOutput {
	return o.ApplyT(func(v *WorkloadResponse) WorkloadResponse {
		if v != nil {
			return *v
		}
		var ret WorkloadResponse
		return ret
	}).(WorkloadResponseOutput)
}

// the scenario for the workload
func (o WorkloadResponsePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadResponse) *string {
		if v == nil {
			return nil
		}
		return v.Context
	}).(pulumi.StringPtrOutput)
}

// Tool used to interact with Azure. SDK, AzPortal, etc.., Other
func (o WorkloadResponsePtrOutput) Toolset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadResponse) *string {
		if v == nil {
			return nil
		}
		return v.Toolset
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ClientIncidentDetailsOutput{})
	pulumi.RegisterOutputType(ClientIncidentDetailsPtrOutput{})
	pulumi.RegisterOutputType(ClientIncidentDetailsResponseOutput{})
	pulumi.RegisterOutputType(ClientIncidentDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectivityOutput{})
	pulumi.RegisterOutputType(ConnectivityPtrOutput{})
	pulumi.RegisterOutputType(ConnectivityResponseOutput{})
	pulumi.RegisterOutputType(ConnectivityResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectorPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectorPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectorPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ContentOutput{})
	pulumi.RegisterOutputType(ContentPtrOutput{})
	pulumi.RegisterOutputType(ContentResponseOutput{})
	pulumi.RegisterOutputType(ErrorDetailPropertiesOutput{})
	pulumi.RegisterOutputType(ErrorDetailPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ErrorDetailPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ErrorDetailPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpectedValueRangeOutput{})
	pulumi.RegisterOutputType(ExpectedValueRangePtrOutput{})
	pulumi.RegisterOutputType(ExpectedValueRangeResponseOutput{})
	pulumi.RegisterOutputType(ExpectedValueRangeResponsePtrOutput{})
	pulumi.RegisterOutputType(ImpactDetailsOutput{})
	pulumi.RegisterOutputType(ImpactDetailsPtrOutput{})
	pulumi.RegisterOutputType(ImpactDetailsResponseOutput{})
	pulumi.RegisterOutputType(InsightPropertiesOutput{})
	pulumi.RegisterOutputType(InsightPropertiesPtrOutput{})
	pulumi.RegisterOutputType(InsightPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PerformanceOutput{})
	pulumi.RegisterOutputType(PerformanceArrayOutput{})
	pulumi.RegisterOutputType(PerformanceResponseOutput{})
	pulumi.RegisterOutputType(PerformanceResponseArrayOutput{})
	pulumi.RegisterOutputType(SourceOrTargetOutput{})
	pulumi.RegisterOutputType(SourceOrTargetPtrOutput{})
	pulumi.RegisterOutputType(SourceOrTargetResponseOutput{})
	pulumi.RegisterOutputType(SourceOrTargetResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(WorkloadOutput{})
	pulumi.RegisterOutputType(WorkloadPtrOutput{})
	pulumi.RegisterOutputType(WorkloadImpactPropertiesOutput{})
	pulumi.RegisterOutputType(WorkloadImpactPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WorkloadImpactPropertiesResponseOutput{})
	pulumi.RegisterOutputType(WorkloadResponseOutput{})
	pulumi.RegisterOutputType(WorkloadResponsePtrOutput{})
}
