// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// A2A container mapping input.
type A2AContainerMappingInput struct {
	// A value indicating whether the auto update is enabled.
	AgentAutoUpdateStatus *string `pulumi:"agentAutoUpdateStatus"`
	// The automation account arm id.
	AutomationAccountArmId *string `pulumi:"automationAccountArmId"`
	// A value indicating the type authentication to use for automation Account.
	AutomationAccountAuthenticationType *string `pulumi:"automationAccountAuthenticationType"`
	// The class type.
	// Expected value is 'A2A'.
	InstanceType string `pulumi:"instanceType"`
}

// Defaults sets the appropriate defaults for A2AContainerMappingInput
func (val *A2AContainerMappingInput) Defaults() *A2AContainerMappingInput {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutomationAccountAuthenticationType == nil {
		automationAccountAuthenticationType_ := "RunAsAccount"
		tmp.AutomationAccountAuthenticationType = &automationAccountAuthenticationType_
	}
	return &tmp
}

// A2AContainerMappingInputInput is an input type that accepts A2AContainerMappingInputArgs and A2AContainerMappingInputOutput values.
// You can construct a concrete instance of `A2AContainerMappingInputInput` via:
//
//	A2AContainerMappingInputArgs{...}
type A2AContainerMappingInputInput interface {
	pulumi.Input

	ToA2AContainerMappingInputOutput() A2AContainerMappingInputOutput
	ToA2AContainerMappingInputOutputWithContext(context.Context) A2AContainerMappingInputOutput
}

// A2A container mapping input.
type A2AContainerMappingInputArgs struct {
	// A value indicating whether the auto update is enabled.
	AgentAutoUpdateStatus pulumi.StringPtrInput `pulumi:"agentAutoUpdateStatus"`
	// The automation account arm id.
	AutomationAccountArmId pulumi.StringPtrInput `pulumi:"automationAccountArmId"`
	// A value indicating the type authentication to use for automation Account.
	AutomationAccountAuthenticationType pulumi.StringPtrInput `pulumi:"automationAccountAuthenticationType"`
	// The class type.
	// Expected value is 'A2A'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
}

// Defaults sets the appropriate defaults for A2AContainerMappingInputArgs
func (val *A2AContainerMappingInputArgs) Defaults() *A2AContainerMappingInputArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutomationAccountAuthenticationType == nil {
		tmp.AutomationAccountAuthenticationType = pulumi.StringPtr("RunAsAccount")
	}
	return &tmp
}
func (A2AContainerMappingInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AContainerMappingInput)(nil)).Elem()
}

func (i A2AContainerMappingInputArgs) ToA2AContainerMappingInputOutput() A2AContainerMappingInputOutput {
	return i.ToA2AContainerMappingInputOutputWithContext(context.Background())
}

func (i A2AContainerMappingInputArgs) ToA2AContainerMappingInputOutputWithContext(ctx context.Context) A2AContainerMappingInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AContainerMappingInputOutput)
}

func (i A2AContainerMappingInputArgs) ToA2AContainerMappingInputPtrOutput() A2AContainerMappingInputPtrOutput {
	return i.ToA2AContainerMappingInputPtrOutputWithContext(context.Background())
}

func (i A2AContainerMappingInputArgs) ToA2AContainerMappingInputPtrOutputWithContext(ctx context.Context) A2AContainerMappingInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AContainerMappingInputOutput).ToA2AContainerMappingInputPtrOutputWithContext(ctx)
}

// A2AContainerMappingInputPtrInput is an input type that accepts A2AContainerMappingInputArgs, A2AContainerMappingInputPtr and A2AContainerMappingInputPtrOutput values.
// You can construct a concrete instance of `A2AContainerMappingInputPtrInput` via:
//
//	        A2AContainerMappingInputArgs{...}
//
//	or:
//
//	        nil
type A2AContainerMappingInputPtrInput interface {
	pulumi.Input

	ToA2AContainerMappingInputPtrOutput() A2AContainerMappingInputPtrOutput
	ToA2AContainerMappingInputPtrOutputWithContext(context.Context) A2AContainerMappingInputPtrOutput
}

type a2acontainerMappingInputPtrType A2AContainerMappingInputArgs

func A2AContainerMappingInputPtr(v *A2AContainerMappingInputArgs) A2AContainerMappingInputPtrInput {
	return (*a2acontainerMappingInputPtrType)(v)
}

func (*a2acontainerMappingInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**A2AContainerMappingInput)(nil)).Elem()
}

func (i *a2acontainerMappingInputPtrType) ToA2AContainerMappingInputPtrOutput() A2AContainerMappingInputPtrOutput {
	return i.ToA2AContainerMappingInputPtrOutputWithContext(context.Background())
}

func (i *a2acontainerMappingInputPtrType) ToA2AContainerMappingInputPtrOutputWithContext(ctx context.Context) A2AContainerMappingInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AContainerMappingInputPtrOutput)
}

// A2A container mapping input.
type A2AContainerMappingInputOutput struct{ *pulumi.OutputState }

func (A2AContainerMappingInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AContainerMappingInput)(nil)).Elem()
}

func (o A2AContainerMappingInputOutput) ToA2AContainerMappingInputOutput() A2AContainerMappingInputOutput {
	return o
}

func (o A2AContainerMappingInputOutput) ToA2AContainerMappingInputOutputWithContext(ctx context.Context) A2AContainerMappingInputOutput {
	return o
}

func (o A2AContainerMappingInputOutput) ToA2AContainerMappingInputPtrOutput() A2AContainerMappingInputPtrOutput {
	return o.ToA2AContainerMappingInputPtrOutputWithContext(context.Background())
}

func (o A2AContainerMappingInputOutput) ToA2AContainerMappingInputPtrOutputWithContext(ctx context.Context) A2AContainerMappingInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v A2AContainerMappingInput) *A2AContainerMappingInput {
		return &v
	}).(A2AContainerMappingInputPtrOutput)
}

// A value indicating whether the auto update is enabled.
func (o A2AContainerMappingInputOutput) AgentAutoUpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AContainerMappingInput) *string { return v.AgentAutoUpdateStatus }).(pulumi.StringPtrOutput)
}

// The automation account arm id.
func (o A2AContainerMappingInputOutput) AutomationAccountArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AContainerMappingInput) *string { return v.AutomationAccountArmId }).(pulumi.StringPtrOutput)
}

// A value indicating the type authentication to use for automation Account.
func (o A2AContainerMappingInputOutput) AutomationAccountAuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AContainerMappingInput) *string { return v.AutomationAccountAuthenticationType }).(pulumi.StringPtrOutput)
}

// The class type.
// Expected value is 'A2A'.
func (o A2AContainerMappingInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v A2AContainerMappingInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

type A2AContainerMappingInputPtrOutput struct{ *pulumi.OutputState }

func (A2AContainerMappingInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**A2AContainerMappingInput)(nil)).Elem()
}

func (o A2AContainerMappingInputPtrOutput) ToA2AContainerMappingInputPtrOutput() A2AContainerMappingInputPtrOutput {
	return o
}

func (o A2AContainerMappingInputPtrOutput) ToA2AContainerMappingInputPtrOutputWithContext(ctx context.Context) A2AContainerMappingInputPtrOutput {
	return o
}

func (o A2AContainerMappingInputPtrOutput) Elem() A2AContainerMappingInputOutput {
	return o.ApplyT(func(v *A2AContainerMappingInput) A2AContainerMappingInput {
		if v != nil {
			return *v
		}
		var ret A2AContainerMappingInput
		return ret
	}).(A2AContainerMappingInputOutput)
}

// A value indicating whether the auto update is enabled.
func (o A2AContainerMappingInputPtrOutput) AgentAutoUpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AContainerMappingInput) *string {
		if v == nil {
			return nil
		}
		return v.AgentAutoUpdateStatus
	}).(pulumi.StringPtrOutput)
}

// The automation account arm id.
func (o A2AContainerMappingInputPtrOutput) AutomationAccountArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AContainerMappingInput) *string {
		if v == nil {
			return nil
		}
		return v.AutomationAccountArmId
	}).(pulumi.StringPtrOutput)
}

// A value indicating the type authentication to use for automation Account.
func (o A2AContainerMappingInputPtrOutput) AutomationAccountAuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AContainerMappingInput) *string {
		if v == nil {
			return nil
		}
		return v.AutomationAccountAuthenticationType
	}).(pulumi.StringPtrOutput)
}

// The class type.
// Expected value is 'A2A'.
func (o A2AContainerMappingInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AContainerMappingInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A2A Cross-Cluster Migration enable protection input.
type A2ACrossClusterMigrationEnableProtectionInput struct {
	// The fabric specific object Id of the virtual machine.
	FabricObjectId *string `pulumi:"fabricObjectId"`
	// The class type.
	// Expected value is 'A2ACrossClusterMigration'.
	InstanceType string `pulumi:"instanceType"`
	// The recovery container Id.
	RecoveryContainerId *string `pulumi:"recoveryContainerId"`
}

// A2ACrossClusterMigrationEnableProtectionInputInput is an input type that accepts A2ACrossClusterMigrationEnableProtectionInputArgs and A2ACrossClusterMigrationEnableProtectionInputOutput values.
// You can construct a concrete instance of `A2ACrossClusterMigrationEnableProtectionInputInput` via:
//
//	A2ACrossClusterMigrationEnableProtectionInputArgs{...}
type A2ACrossClusterMigrationEnableProtectionInputInput interface {
	pulumi.Input

	ToA2ACrossClusterMigrationEnableProtectionInputOutput() A2ACrossClusterMigrationEnableProtectionInputOutput
	ToA2ACrossClusterMigrationEnableProtectionInputOutputWithContext(context.Context) A2ACrossClusterMigrationEnableProtectionInputOutput
}

// A2A Cross-Cluster Migration enable protection input.
type A2ACrossClusterMigrationEnableProtectionInputArgs struct {
	// The fabric specific object Id of the virtual machine.
	FabricObjectId pulumi.StringPtrInput `pulumi:"fabricObjectId"`
	// The class type.
	// Expected value is 'A2ACrossClusterMigration'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The recovery container Id.
	RecoveryContainerId pulumi.StringPtrInput `pulumi:"recoveryContainerId"`
}

func (A2ACrossClusterMigrationEnableProtectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*A2ACrossClusterMigrationEnableProtectionInput)(nil)).Elem()
}

func (i A2ACrossClusterMigrationEnableProtectionInputArgs) ToA2ACrossClusterMigrationEnableProtectionInputOutput() A2ACrossClusterMigrationEnableProtectionInputOutput {
	return i.ToA2ACrossClusterMigrationEnableProtectionInputOutputWithContext(context.Background())
}

func (i A2ACrossClusterMigrationEnableProtectionInputArgs) ToA2ACrossClusterMigrationEnableProtectionInputOutputWithContext(ctx context.Context) A2ACrossClusterMigrationEnableProtectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2ACrossClusterMigrationEnableProtectionInputOutput)
}

func (i A2ACrossClusterMigrationEnableProtectionInputArgs) ToA2ACrossClusterMigrationEnableProtectionInputPtrOutput() A2ACrossClusterMigrationEnableProtectionInputPtrOutput {
	return i.ToA2ACrossClusterMigrationEnableProtectionInputPtrOutputWithContext(context.Background())
}

func (i A2ACrossClusterMigrationEnableProtectionInputArgs) ToA2ACrossClusterMigrationEnableProtectionInputPtrOutputWithContext(ctx context.Context) A2ACrossClusterMigrationEnableProtectionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2ACrossClusterMigrationEnableProtectionInputOutput).ToA2ACrossClusterMigrationEnableProtectionInputPtrOutputWithContext(ctx)
}

// A2ACrossClusterMigrationEnableProtectionInputPtrInput is an input type that accepts A2ACrossClusterMigrationEnableProtectionInputArgs, A2ACrossClusterMigrationEnableProtectionInputPtr and A2ACrossClusterMigrationEnableProtectionInputPtrOutput values.
// You can construct a concrete instance of `A2ACrossClusterMigrationEnableProtectionInputPtrInput` via:
//
//	        A2ACrossClusterMigrationEnableProtectionInputArgs{...}
//
//	or:
//
//	        nil
type A2ACrossClusterMigrationEnableProtectionInputPtrInput interface {
	pulumi.Input

	ToA2ACrossClusterMigrationEnableProtectionInputPtrOutput() A2ACrossClusterMigrationEnableProtectionInputPtrOutput
	ToA2ACrossClusterMigrationEnableProtectionInputPtrOutputWithContext(context.Context) A2ACrossClusterMigrationEnableProtectionInputPtrOutput
}

type a2acrossClusterMigrationEnableProtectionInputPtrType A2ACrossClusterMigrationEnableProtectionInputArgs

func A2ACrossClusterMigrationEnableProtectionInputPtr(v *A2ACrossClusterMigrationEnableProtectionInputArgs) A2ACrossClusterMigrationEnableProtectionInputPtrInput {
	return (*a2acrossClusterMigrationEnableProtectionInputPtrType)(v)
}

func (*a2acrossClusterMigrationEnableProtectionInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**A2ACrossClusterMigrationEnableProtectionInput)(nil)).Elem()
}

func (i *a2acrossClusterMigrationEnableProtectionInputPtrType) ToA2ACrossClusterMigrationEnableProtectionInputPtrOutput() A2ACrossClusterMigrationEnableProtectionInputPtrOutput {
	return i.ToA2ACrossClusterMigrationEnableProtectionInputPtrOutputWithContext(context.Background())
}

func (i *a2acrossClusterMigrationEnableProtectionInputPtrType) ToA2ACrossClusterMigrationEnableProtectionInputPtrOutputWithContext(ctx context.Context) A2ACrossClusterMigrationEnableProtectionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2ACrossClusterMigrationEnableProtectionInputPtrOutput)
}

// A2A Cross-Cluster Migration enable protection input.
type A2ACrossClusterMigrationEnableProtectionInputOutput struct{ *pulumi.OutputState }

func (A2ACrossClusterMigrationEnableProtectionInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2ACrossClusterMigrationEnableProtectionInput)(nil)).Elem()
}

func (o A2ACrossClusterMigrationEnableProtectionInputOutput) ToA2ACrossClusterMigrationEnableProtectionInputOutput() A2ACrossClusterMigrationEnableProtectionInputOutput {
	return o
}

func (o A2ACrossClusterMigrationEnableProtectionInputOutput) ToA2ACrossClusterMigrationEnableProtectionInputOutputWithContext(ctx context.Context) A2ACrossClusterMigrationEnableProtectionInputOutput {
	return o
}

func (o A2ACrossClusterMigrationEnableProtectionInputOutput) ToA2ACrossClusterMigrationEnableProtectionInputPtrOutput() A2ACrossClusterMigrationEnableProtectionInputPtrOutput {
	return o.ToA2ACrossClusterMigrationEnableProtectionInputPtrOutputWithContext(context.Background())
}

func (o A2ACrossClusterMigrationEnableProtectionInputOutput) ToA2ACrossClusterMigrationEnableProtectionInputPtrOutputWithContext(ctx context.Context) A2ACrossClusterMigrationEnableProtectionInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v A2ACrossClusterMigrationEnableProtectionInput) *A2ACrossClusterMigrationEnableProtectionInput {
		return &v
	}).(A2ACrossClusterMigrationEnableProtectionInputPtrOutput)
}

// The fabric specific object Id of the virtual machine.
func (o A2ACrossClusterMigrationEnableProtectionInputOutput) FabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2ACrossClusterMigrationEnableProtectionInput) *string { return v.FabricObjectId }).(pulumi.StringPtrOutput)
}

// The class type.
// Expected value is 'A2ACrossClusterMigration'.
func (o A2ACrossClusterMigrationEnableProtectionInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v A2ACrossClusterMigrationEnableProtectionInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The recovery container Id.
func (o A2ACrossClusterMigrationEnableProtectionInputOutput) RecoveryContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2ACrossClusterMigrationEnableProtectionInput) *string { return v.RecoveryContainerId }).(pulumi.StringPtrOutput)
}

type A2ACrossClusterMigrationEnableProtectionInputPtrOutput struct{ *pulumi.OutputState }

func (A2ACrossClusterMigrationEnableProtectionInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**A2ACrossClusterMigrationEnableProtectionInput)(nil)).Elem()
}

func (o A2ACrossClusterMigrationEnableProtectionInputPtrOutput) ToA2ACrossClusterMigrationEnableProtectionInputPtrOutput() A2ACrossClusterMigrationEnableProtectionInputPtrOutput {
	return o
}

func (o A2ACrossClusterMigrationEnableProtectionInputPtrOutput) ToA2ACrossClusterMigrationEnableProtectionInputPtrOutputWithContext(ctx context.Context) A2ACrossClusterMigrationEnableProtectionInputPtrOutput {
	return o
}

func (o A2ACrossClusterMigrationEnableProtectionInputPtrOutput) Elem() A2ACrossClusterMigrationEnableProtectionInputOutput {
	return o.ApplyT(func(v *A2ACrossClusterMigrationEnableProtectionInput) A2ACrossClusterMigrationEnableProtectionInput {
		if v != nil {
			return *v
		}
		var ret A2ACrossClusterMigrationEnableProtectionInput
		return ret
	}).(A2ACrossClusterMigrationEnableProtectionInputOutput)
}

// The fabric specific object Id of the virtual machine.
func (o A2ACrossClusterMigrationEnableProtectionInputPtrOutput) FabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2ACrossClusterMigrationEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.FabricObjectId
	}).(pulumi.StringPtrOutput)
}

// The class type.
// Expected value is 'A2ACrossClusterMigration'.
func (o A2ACrossClusterMigrationEnableProtectionInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2ACrossClusterMigrationEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The recovery container Id.
func (o A2ACrossClusterMigrationEnableProtectionInputPtrOutput) RecoveryContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2ACrossClusterMigrationEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryContainerId
	}).(pulumi.StringPtrOutput)
}

// A2A Cross-Cluster Migration Policy creation input.
type A2ACrossClusterMigrationPolicyCreationInput struct {
	// The class type.
	// Expected value is 'A2ACrossClusterMigration'.
	InstanceType string `pulumi:"instanceType"`
}

// A2ACrossClusterMigrationPolicyCreationInputInput is an input type that accepts A2ACrossClusterMigrationPolicyCreationInputArgs and A2ACrossClusterMigrationPolicyCreationInputOutput values.
// You can construct a concrete instance of `A2ACrossClusterMigrationPolicyCreationInputInput` via:
//
//	A2ACrossClusterMigrationPolicyCreationInputArgs{...}
type A2ACrossClusterMigrationPolicyCreationInputInput interface {
	pulumi.Input

	ToA2ACrossClusterMigrationPolicyCreationInputOutput() A2ACrossClusterMigrationPolicyCreationInputOutput
	ToA2ACrossClusterMigrationPolicyCreationInputOutputWithContext(context.Context) A2ACrossClusterMigrationPolicyCreationInputOutput
}

// A2A Cross-Cluster Migration Policy creation input.
type A2ACrossClusterMigrationPolicyCreationInputArgs struct {
	// The class type.
	// Expected value is 'A2ACrossClusterMigration'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
}

func (A2ACrossClusterMigrationPolicyCreationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*A2ACrossClusterMigrationPolicyCreationInput)(nil)).Elem()
}

func (i A2ACrossClusterMigrationPolicyCreationInputArgs) ToA2ACrossClusterMigrationPolicyCreationInputOutput() A2ACrossClusterMigrationPolicyCreationInputOutput {
	return i.ToA2ACrossClusterMigrationPolicyCreationInputOutputWithContext(context.Background())
}

func (i A2ACrossClusterMigrationPolicyCreationInputArgs) ToA2ACrossClusterMigrationPolicyCreationInputOutputWithContext(ctx context.Context) A2ACrossClusterMigrationPolicyCreationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2ACrossClusterMigrationPolicyCreationInputOutput)
}

func (i A2ACrossClusterMigrationPolicyCreationInputArgs) ToA2ACrossClusterMigrationPolicyCreationInputPtrOutput() A2ACrossClusterMigrationPolicyCreationInputPtrOutput {
	return i.ToA2ACrossClusterMigrationPolicyCreationInputPtrOutputWithContext(context.Background())
}

func (i A2ACrossClusterMigrationPolicyCreationInputArgs) ToA2ACrossClusterMigrationPolicyCreationInputPtrOutputWithContext(ctx context.Context) A2ACrossClusterMigrationPolicyCreationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2ACrossClusterMigrationPolicyCreationInputOutput).ToA2ACrossClusterMigrationPolicyCreationInputPtrOutputWithContext(ctx)
}

// A2ACrossClusterMigrationPolicyCreationInputPtrInput is an input type that accepts A2ACrossClusterMigrationPolicyCreationInputArgs, A2ACrossClusterMigrationPolicyCreationInputPtr and A2ACrossClusterMigrationPolicyCreationInputPtrOutput values.
// You can construct a concrete instance of `A2ACrossClusterMigrationPolicyCreationInputPtrInput` via:
//
//	        A2ACrossClusterMigrationPolicyCreationInputArgs{...}
//
//	or:
//
//	        nil
type A2ACrossClusterMigrationPolicyCreationInputPtrInput interface {
	pulumi.Input

	ToA2ACrossClusterMigrationPolicyCreationInputPtrOutput() A2ACrossClusterMigrationPolicyCreationInputPtrOutput
	ToA2ACrossClusterMigrationPolicyCreationInputPtrOutputWithContext(context.Context) A2ACrossClusterMigrationPolicyCreationInputPtrOutput
}

type a2acrossClusterMigrationPolicyCreationInputPtrType A2ACrossClusterMigrationPolicyCreationInputArgs

func A2ACrossClusterMigrationPolicyCreationInputPtr(v *A2ACrossClusterMigrationPolicyCreationInputArgs) A2ACrossClusterMigrationPolicyCreationInputPtrInput {
	return (*a2acrossClusterMigrationPolicyCreationInputPtrType)(v)
}

func (*a2acrossClusterMigrationPolicyCreationInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**A2ACrossClusterMigrationPolicyCreationInput)(nil)).Elem()
}

func (i *a2acrossClusterMigrationPolicyCreationInputPtrType) ToA2ACrossClusterMigrationPolicyCreationInputPtrOutput() A2ACrossClusterMigrationPolicyCreationInputPtrOutput {
	return i.ToA2ACrossClusterMigrationPolicyCreationInputPtrOutputWithContext(context.Background())
}

func (i *a2acrossClusterMigrationPolicyCreationInputPtrType) ToA2ACrossClusterMigrationPolicyCreationInputPtrOutputWithContext(ctx context.Context) A2ACrossClusterMigrationPolicyCreationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2ACrossClusterMigrationPolicyCreationInputPtrOutput)
}

// A2A Cross-Cluster Migration Policy creation input.
type A2ACrossClusterMigrationPolicyCreationInputOutput struct{ *pulumi.OutputState }

func (A2ACrossClusterMigrationPolicyCreationInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2ACrossClusterMigrationPolicyCreationInput)(nil)).Elem()
}

func (o A2ACrossClusterMigrationPolicyCreationInputOutput) ToA2ACrossClusterMigrationPolicyCreationInputOutput() A2ACrossClusterMigrationPolicyCreationInputOutput {
	return o
}

func (o A2ACrossClusterMigrationPolicyCreationInputOutput) ToA2ACrossClusterMigrationPolicyCreationInputOutputWithContext(ctx context.Context) A2ACrossClusterMigrationPolicyCreationInputOutput {
	return o
}

func (o A2ACrossClusterMigrationPolicyCreationInputOutput) ToA2ACrossClusterMigrationPolicyCreationInputPtrOutput() A2ACrossClusterMigrationPolicyCreationInputPtrOutput {
	return o.ToA2ACrossClusterMigrationPolicyCreationInputPtrOutputWithContext(context.Background())
}

func (o A2ACrossClusterMigrationPolicyCreationInputOutput) ToA2ACrossClusterMigrationPolicyCreationInputPtrOutputWithContext(ctx context.Context) A2ACrossClusterMigrationPolicyCreationInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v A2ACrossClusterMigrationPolicyCreationInput) *A2ACrossClusterMigrationPolicyCreationInput {
		return &v
	}).(A2ACrossClusterMigrationPolicyCreationInputPtrOutput)
}

// The class type.
// Expected value is 'A2ACrossClusterMigration'.
func (o A2ACrossClusterMigrationPolicyCreationInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v A2ACrossClusterMigrationPolicyCreationInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

type A2ACrossClusterMigrationPolicyCreationInputPtrOutput struct{ *pulumi.OutputState }

func (A2ACrossClusterMigrationPolicyCreationInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**A2ACrossClusterMigrationPolicyCreationInput)(nil)).Elem()
}

func (o A2ACrossClusterMigrationPolicyCreationInputPtrOutput) ToA2ACrossClusterMigrationPolicyCreationInputPtrOutput() A2ACrossClusterMigrationPolicyCreationInputPtrOutput {
	return o
}

func (o A2ACrossClusterMigrationPolicyCreationInputPtrOutput) ToA2ACrossClusterMigrationPolicyCreationInputPtrOutputWithContext(ctx context.Context) A2ACrossClusterMigrationPolicyCreationInputPtrOutput {
	return o
}

func (o A2ACrossClusterMigrationPolicyCreationInputPtrOutput) Elem() A2ACrossClusterMigrationPolicyCreationInputOutput {
	return o.ApplyT(func(v *A2ACrossClusterMigrationPolicyCreationInput) A2ACrossClusterMigrationPolicyCreationInput {
		if v != nil {
			return *v
		}
		var ret A2ACrossClusterMigrationPolicyCreationInput
		return ret
	}).(A2ACrossClusterMigrationPolicyCreationInputOutput)
}

// The class type.
// Expected value is 'A2ACrossClusterMigration'.
func (o A2ACrossClusterMigrationPolicyCreationInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2ACrossClusterMigrationPolicyCreationInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A2A provider specific settings.
type A2ACrossClusterMigrationReplicationDetailsResponse struct {
	// The fabric specific object Id of the virtual machine.
	FabricObjectId *string `pulumi:"fabricObjectId"`
	// Gets the Instance type.
	// Expected value is 'A2ACrossClusterMigration'.
	InstanceType string `pulumi:"instanceType"`
	// An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the "same" protected item even though other internal Ids/ARM Id might be changing.
	LifecycleId *string `pulumi:"lifecycleId"`
	// The type of operating system.
	OsType *string `pulumi:"osType"`
	// Primary fabric location.
	PrimaryFabricLocation *string `pulumi:"primaryFabricLocation"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// A2A provider specific settings.
type A2ACrossClusterMigrationReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2ACrossClusterMigrationReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2ACrossClusterMigrationReplicationDetailsResponse)(nil)).Elem()
}

func (o A2ACrossClusterMigrationReplicationDetailsResponseOutput) ToA2ACrossClusterMigrationReplicationDetailsResponseOutput() A2ACrossClusterMigrationReplicationDetailsResponseOutput {
	return o
}

func (o A2ACrossClusterMigrationReplicationDetailsResponseOutput) ToA2ACrossClusterMigrationReplicationDetailsResponseOutputWithContext(ctx context.Context) A2ACrossClusterMigrationReplicationDetailsResponseOutput {
	return o
}

// The fabric specific object Id of the virtual machine.
func (o A2ACrossClusterMigrationReplicationDetailsResponseOutput) FabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2ACrossClusterMigrationReplicationDetailsResponse) *string { return v.FabricObjectId }).(pulumi.StringPtrOutput)
}

// Gets the Instance type.
// Expected value is 'A2ACrossClusterMigration'.
func (o A2ACrossClusterMigrationReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v A2ACrossClusterMigrationReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the "same" protected item even though other internal Ids/ARM Id might be changing.
func (o A2ACrossClusterMigrationReplicationDetailsResponseOutput) LifecycleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2ACrossClusterMigrationReplicationDetailsResponse) *string { return v.LifecycleId }).(pulumi.StringPtrOutput)
}

// The type of operating system.
func (o A2ACrossClusterMigrationReplicationDetailsResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2ACrossClusterMigrationReplicationDetailsResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Primary fabric location.
func (o A2ACrossClusterMigrationReplicationDetailsResponseOutput) PrimaryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2ACrossClusterMigrationReplicationDetailsResponse) *string { return v.PrimaryFabricLocation }).(pulumi.StringPtrOutput)
}

// The protection state for the vm.
func (o A2ACrossClusterMigrationReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2ACrossClusterMigrationReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o A2ACrossClusterMigrationReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2ACrossClusterMigrationReplicationDetailsResponse) *string {
		return v.VmProtectionStateDescription
	}).(pulumi.StringPtrOutput)
}

type A2ACrossClusterMigrationReplicationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (A2ACrossClusterMigrationReplicationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**A2ACrossClusterMigrationReplicationDetailsResponse)(nil)).Elem()
}

func (o A2ACrossClusterMigrationReplicationDetailsResponsePtrOutput) ToA2ACrossClusterMigrationReplicationDetailsResponsePtrOutput() A2ACrossClusterMigrationReplicationDetailsResponsePtrOutput {
	return o
}

func (o A2ACrossClusterMigrationReplicationDetailsResponsePtrOutput) ToA2ACrossClusterMigrationReplicationDetailsResponsePtrOutputWithContext(ctx context.Context) A2ACrossClusterMigrationReplicationDetailsResponsePtrOutput {
	return o
}

func (o A2ACrossClusterMigrationReplicationDetailsResponsePtrOutput) Elem() A2ACrossClusterMigrationReplicationDetailsResponseOutput {
	return o.ApplyT(func(v *A2ACrossClusterMigrationReplicationDetailsResponse) A2ACrossClusterMigrationReplicationDetailsResponse {
		if v != nil {
			return *v
		}
		var ret A2ACrossClusterMigrationReplicationDetailsResponse
		return ret
	}).(A2ACrossClusterMigrationReplicationDetailsResponseOutput)
}

// The fabric specific object Id of the virtual machine.
func (o A2ACrossClusterMigrationReplicationDetailsResponsePtrOutput) FabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2ACrossClusterMigrationReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.FabricObjectId
	}).(pulumi.StringPtrOutput)
}

// Gets the Instance type.
// Expected value is 'A2ACrossClusterMigration'.
func (o A2ACrossClusterMigrationReplicationDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2ACrossClusterMigrationReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the "same" protected item even though other internal Ids/ARM Id might be changing.
func (o A2ACrossClusterMigrationReplicationDetailsResponsePtrOutput) LifecycleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2ACrossClusterMigrationReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LifecycleId
	}).(pulumi.StringPtrOutput)
}

// The type of operating system.
func (o A2ACrossClusterMigrationReplicationDetailsResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2ACrossClusterMigrationReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// Primary fabric location.
func (o A2ACrossClusterMigrationReplicationDetailsResponsePtrOutput) PrimaryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2ACrossClusterMigrationReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryFabricLocation
	}).(pulumi.StringPtrOutput)
}

// The protection state for the vm.
func (o A2ACrossClusterMigrationReplicationDetailsResponsePtrOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2ACrossClusterMigrationReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmProtectionState
	}).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o A2ACrossClusterMigrationReplicationDetailsResponsePtrOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2ACrossClusterMigrationReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmProtectionStateDescription
	}).(pulumi.StringPtrOutput)
}

// A2A enable protection input.
type A2AEnableProtectionInput struct {
	// The recovery disk encryption information (for two pass flows).
	DiskEncryptionInfo *DiskEncryptionInfo `pulumi:"diskEncryptionInfo"`
	// The fabric specific object Id of the virtual machine.
	FabricObjectId string `pulumi:"fabricObjectId"`
	// The class type.
	// Expected value is 'A2A'.
	InstanceType string `pulumi:"instanceType"`
	// The multi vm group id.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// The recovery availability set Id.
	RecoveryAvailabilitySetId *string `pulumi:"recoveryAvailabilitySetId"`
	// The recovery availability zone.
	RecoveryAvailabilityZone *string `pulumi:"recoveryAvailabilityZone"`
	// The recovery Azure virtual network ARM id.
	RecoveryAzureNetworkId *string `pulumi:"recoveryAzureNetworkId"`
	// The boot diagnostic storage account.
	RecoveryBootDiagStorageAccountId *string `pulumi:"recoveryBootDiagStorageAccountId"`
	// The recovery capacity reservation group Id.
	RecoveryCapacityReservationGroupId *string `pulumi:"recoveryCapacityReservationGroupId"`
	// The recovery cloud service Id. Valid for V1 scenarios.
	RecoveryCloudServiceId *string `pulumi:"recoveryCloudServiceId"`
	// The recovery container Id.
	RecoveryContainerId *string `pulumi:"recoveryContainerId"`
	// The recovery extended location.
	RecoveryExtendedLocation *ExtendedLocation `pulumi:"recoveryExtendedLocation"`
	// The recovery proximity placement group Id.
	RecoveryProximityPlacementGroupId *string `pulumi:"recoveryProximityPlacementGroupId"`
	// The recovery resource group Id. Valid for V2 scenarios.
	RecoveryResourceGroupId *string `pulumi:"recoveryResourceGroupId"`
	// The recovery subnet name.
	RecoverySubnetName *string `pulumi:"recoverySubnetName"`
	// The virtual machine scale set Id.
	RecoveryVirtualMachineScaleSetId *string `pulumi:"recoveryVirtualMachineScaleSetId"`
	// The list of vm disk details.
	VmDisks []A2AVmDiskInputDetails `pulumi:"vmDisks"`
	// The list of vm managed disk details.
	VmManagedDisks []A2AVmManagedDiskInputDetails `pulumi:"vmManagedDisks"`
}

// A2AEnableProtectionInputInput is an input type that accepts A2AEnableProtectionInputArgs and A2AEnableProtectionInputOutput values.
// You can construct a concrete instance of `A2AEnableProtectionInputInput` via:
//
//	A2AEnableProtectionInputArgs{...}
type A2AEnableProtectionInputInput interface {
	pulumi.Input

	ToA2AEnableProtectionInputOutput() A2AEnableProtectionInputOutput
	ToA2AEnableProtectionInputOutputWithContext(context.Context) A2AEnableProtectionInputOutput
}

// A2A enable protection input.
type A2AEnableProtectionInputArgs struct {
	// The recovery disk encryption information (for two pass flows).
	DiskEncryptionInfo DiskEncryptionInfoPtrInput `pulumi:"diskEncryptionInfo"`
	// The fabric specific object Id of the virtual machine.
	FabricObjectId pulumi.StringInput `pulumi:"fabricObjectId"`
	// The class type.
	// Expected value is 'A2A'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The multi vm group id.
	MultiVmGroupId pulumi.StringPtrInput `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName pulumi.StringPtrInput `pulumi:"multiVmGroupName"`
	// The recovery availability set Id.
	RecoveryAvailabilitySetId pulumi.StringPtrInput `pulumi:"recoveryAvailabilitySetId"`
	// The recovery availability zone.
	RecoveryAvailabilityZone pulumi.StringPtrInput `pulumi:"recoveryAvailabilityZone"`
	// The recovery Azure virtual network ARM id.
	RecoveryAzureNetworkId pulumi.StringPtrInput `pulumi:"recoveryAzureNetworkId"`
	// The boot diagnostic storage account.
	RecoveryBootDiagStorageAccountId pulumi.StringPtrInput `pulumi:"recoveryBootDiagStorageAccountId"`
	// The recovery capacity reservation group Id.
	RecoveryCapacityReservationGroupId pulumi.StringPtrInput `pulumi:"recoveryCapacityReservationGroupId"`
	// The recovery cloud service Id. Valid for V1 scenarios.
	RecoveryCloudServiceId pulumi.StringPtrInput `pulumi:"recoveryCloudServiceId"`
	// The recovery container Id.
	RecoveryContainerId pulumi.StringPtrInput `pulumi:"recoveryContainerId"`
	// The recovery extended location.
	RecoveryExtendedLocation ExtendedLocationPtrInput `pulumi:"recoveryExtendedLocation"`
	// The recovery proximity placement group Id.
	RecoveryProximityPlacementGroupId pulumi.StringPtrInput `pulumi:"recoveryProximityPlacementGroupId"`
	// The recovery resource group Id. Valid for V2 scenarios.
	RecoveryResourceGroupId pulumi.StringPtrInput `pulumi:"recoveryResourceGroupId"`
	// The recovery subnet name.
	RecoverySubnetName pulumi.StringPtrInput `pulumi:"recoverySubnetName"`
	// The virtual machine scale set Id.
	RecoveryVirtualMachineScaleSetId pulumi.StringPtrInput `pulumi:"recoveryVirtualMachineScaleSetId"`
	// The list of vm disk details.
	VmDisks A2AVmDiskInputDetailsArrayInput `pulumi:"vmDisks"`
	// The list of vm managed disk details.
	VmManagedDisks A2AVmManagedDiskInputDetailsArrayInput `pulumi:"vmManagedDisks"`
}

func (A2AEnableProtectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AEnableProtectionInput)(nil)).Elem()
}

func (i A2AEnableProtectionInputArgs) ToA2AEnableProtectionInputOutput() A2AEnableProtectionInputOutput {
	return i.ToA2AEnableProtectionInputOutputWithContext(context.Background())
}

func (i A2AEnableProtectionInputArgs) ToA2AEnableProtectionInputOutputWithContext(ctx context.Context) A2AEnableProtectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AEnableProtectionInputOutput)
}

func (i A2AEnableProtectionInputArgs) ToA2AEnableProtectionInputPtrOutput() A2AEnableProtectionInputPtrOutput {
	return i.ToA2AEnableProtectionInputPtrOutputWithContext(context.Background())
}

func (i A2AEnableProtectionInputArgs) ToA2AEnableProtectionInputPtrOutputWithContext(ctx context.Context) A2AEnableProtectionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AEnableProtectionInputOutput).ToA2AEnableProtectionInputPtrOutputWithContext(ctx)
}

// A2AEnableProtectionInputPtrInput is an input type that accepts A2AEnableProtectionInputArgs, A2AEnableProtectionInputPtr and A2AEnableProtectionInputPtrOutput values.
// You can construct a concrete instance of `A2AEnableProtectionInputPtrInput` via:
//
//	        A2AEnableProtectionInputArgs{...}
//
//	or:
//
//	        nil
type A2AEnableProtectionInputPtrInput interface {
	pulumi.Input

	ToA2AEnableProtectionInputPtrOutput() A2AEnableProtectionInputPtrOutput
	ToA2AEnableProtectionInputPtrOutputWithContext(context.Context) A2AEnableProtectionInputPtrOutput
}

type a2aenableProtectionInputPtrType A2AEnableProtectionInputArgs

func A2AEnableProtectionInputPtr(v *A2AEnableProtectionInputArgs) A2AEnableProtectionInputPtrInput {
	return (*a2aenableProtectionInputPtrType)(v)
}

func (*a2aenableProtectionInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**A2AEnableProtectionInput)(nil)).Elem()
}

func (i *a2aenableProtectionInputPtrType) ToA2AEnableProtectionInputPtrOutput() A2AEnableProtectionInputPtrOutput {
	return i.ToA2AEnableProtectionInputPtrOutputWithContext(context.Background())
}

func (i *a2aenableProtectionInputPtrType) ToA2AEnableProtectionInputPtrOutputWithContext(ctx context.Context) A2AEnableProtectionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AEnableProtectionInputPtrOutput)
}

// A2A enable protection input.
type A2AEnableProtectionInputOutput struct{ *pulumi.OutputState }

func (A2AEnableProtectionInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AEnableProtectionInput)(nil)).Elem()
}

func (o A2AEnableProtectionInputOutput) ToA2AEnableProtectionInputOutput() A2AEnableProtectionInputOutput {
	return o
}

func (o A2AEnableProtectionInputOutput) ToA2AEnableProtectionInputOutputWithContext(ctx context.Context) A2AEnableProtectionInputOutput {
	return o
}

func (o A2AEnableProtectionInputOutput) ToA2AEnableProtectionInputPtrOutput() A2AEnableProtectionInputPtrOutput {
	return o.ToA2AEnableProtectionInputPtrOutputWithContext(context.Background())
}

func (o A2AEnableProtectionInputOutput) ToA2AEnableProtectionInputPtrOutputWithContext(ctx context.Context) A2AEnableProtectionInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v A2AEnableProtectionInput) *A2AEnableProtectionInput {
		return &v
	}).(A2AEnableProtectionInputPtrOutput)
}

// The recovery disk encryption information (for two pass flows).
func (o A2AEnableProtectionInputOutput) DiskEncryptionInfo() DiskEncryptionInfoPtrOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) *DiskEncryptionInfo { return v.DiskEncryptionInfo }).(DiskEncryptionInfoPtrOutput)
}

// The fabric specific object Id of the virtual machine.
func (o A2AEnableProtectionInputOutput) FabricObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) string { return v.FabricObjectId }).(pulumi.StringOutput)
}

// The class type.
// Expected value is 'A2A'.
func (o A2AEnableProtectionInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The multi vm group id.
func (o A2AEnableProtectionInputOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) *string { return v.MultiVmGroupId }).(pulumi.StringPtrOutput)
}

// The multi vm group name.
func (o A2AEnableProtectionInputOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) *string { return v.MultiVmGroupName }).(pulumi.StringPtrOutput)
}

// The recovery availability set Id.
func (o A2AEnableProtectionInputOutput) RecoveryAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) *string { return v.RecoveryAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// The recovery availability zone.
func (o A2AEnableProtectionInputOutput) RecoveryAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) *string { return v.RecoveryAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The recovery Azure virtual network ARM id.
func (o A2AEnableProtectionInputOutput) RecoveryAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) *string { return v.RecoveryAzureNetworkId }).(pulumi.StringPtrOutput)
}

// The boot diagnostic storage account.
func (o A2AEnableProtectionInputOutput) RecoveryBootDiagStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) *string { return v.RecoveryBootDiagStorageAccountId }).(pulumi.StringPtrOutput)
}

// The recovery capacity reservation group Id.
func (o A2AEnableProtectionInputOutput) RecoveryCapacityReservationGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) *string { return v.RecoveryCapacityReservationGroupId }).(pulumi.StringPtrOutput)
}

// The recovery cloud service Id. Valid for V1 scenarios.
func (o A2AEnableProtectionInputOutput) RecoveryCloudServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) *string { return v.RecoveryCloudServiceId }).(pulumi.StringPtrOutput)
}

// The recovery container Id.
func (o A2AEnableProtectionInputOutput) RecoveryContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) *string { return v.RecoveryContainerId }).(pulumi.StringPtrOutput)
}

// The recovery extended location.
func (o A2AEnableProtectionInputOutput) RecoveryExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) *ExtendedLocation { return v.RecoveryExtendedLocation }).(ExtendedLocationPtrOutput)
}

// The recovery proximity placement group Id.
func (o A2AEnableProtectionInputOutput) RecoveryProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) *string { return v.RecoveryProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// The recovery resource group Id. Valid for V2 scenarios.
func (o A2AEnableProtectionInputOutput) RecoveryResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) *string { return v.RecoveryResourceGroupId }).(pulumi.StringPtrOutput)
}

// The recovery subnet name.
func (o A2AEnableProtectionInputOutput) RecoverySubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) *string { return v.RecoverySubnetName }).(pulumi.StringPtrOutput)
}

// The virtual machine scale set Id.
func (o A2AEnableProtectionInputOutput) RecoveryVirtualMachineScaleSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) *string { return v.RecoveryVirtualMachineScaleSetId }).(pulumi.StringPtrOutput)
}

// The list of vm disk details.
func (o A2AEnableProtectionInputOutput) VmDisks() A2AVmDiskInputDetailsArrayOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) []A2AVmDiskInputDetails { return v.VmDisks }).(A2AVmDiskInputDetailsArrayOutput)
}

// The list of vm managed disk details.
func (o A2AEnableProtectionInputOutput) VmManagedDisks() A2AVmManagedDiskInputDetailsArrayOutput {
	return o.ApplyT(func(v A2AEnableProtectionInput) []A2AVmManagedDiskInputDetails { return v.VmManagedDisks }).(A2AVmManagedDiskInputDetailsArrayOutput)
}

type A2AEnableProtectionInputPtrOutput struct{ *pulumi.OutputState }

func (A2AEnableProtectionInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**A2AEnableProtectionInput)(nil)).Elem()
}

func (o A2AEnableProtectionInputPtrOutput) ToA2AEnableProtectionInputPtrOutput() A2AEnableProtectionInputPtrOutput {
	return o
}

func (o A2AEnableProtectionInputPtrOutput) ToA2AEnableProtectionInputPtrOutputWithContext(ctx context.Context) A2AEnableProtectionInputPtrOutput {
	return o
}

func (o A2AEnableProtectionInputPtrOutput) Elem() A2AEnableProtectionInputOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) A2AEnableProtectionInput {
		if v != nil {
			return *v
		}
		var ret A2AEnableProtectionInput
		return ret
	}).(A2AEnableProtectionInputOutput)
}

// The recovery disk encryption information (for two pass flows).
func (o A2AEnableProtectionInputPtrOutput) DiskEncryptionInfo() DiskEncryptionInfoPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *DiskEncryptionInfo {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionInfo
	}).(DiskEncryptionInfoPtrOutput)
}

// The fabric specific object Id of the virtual machine.
func (o A2AEnableProtectionInputPtrOutput) FabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return &v.FabricObjectId
	}).(pulumi.StringPtrOutput)
}

// The class type.
// Expected value is 'A2A'.
func (o A2AEnableProtectionInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The multi vm group id.
func (o A2AEnableProtectionInputPtrOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmGroupId
	}).(pulumi.StringPtrOutput)
}

// The multi vm group name.
func (o A2AEnableProtectionInputPtrOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmGroupName
	}).(pulumi.StringPtrOutput)
}

// The recovery availability set Id.
func (o A2AEnableProtectionInputPtrOutput) RecoveryAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAvailabilitySetId
	}).(pulumi.StringPtrOutput)
}

// The recovery availability zone.
func (o A2AEnableProtectionInputPtrOutput) RecoveryAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// The recovery Azure virtual network ARM id.
func (o A2AEnableProtectionInputPtrOutput) RecoveryAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAzureNetworkId
	}).(pulumi.StringPtrOutput)
}

// The boot diagnostic storage account.
func (o A2AEnableProtectionInputPtrOutput) RecoveryBootDiagStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryBootDiagStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The recovery capacity reservation group Id.
func (o A2AEnableProtectionInputPtrOutput) RecoveryCapacityReservationGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryCapacityReservationGroupId
	}).(pulumi.StringPtrOutput)
}

// The recovery cloud service Id. Valid for V1 scenarios.
func (o A2AEnableProtectionInputPtrOutput) RecoveryCloudServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryCloudServiceId
	}).(pulumi.StringPtrOutput)
}

// The recovery container Id.
func (o A2AEnableProtectionInputPtrOutput) RecoveryContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryContainerId
	}).(pulumi.StringPtrOutput)
}

// The recovery extended location.
func (o A2AEnableProtectionInputPtrOutput) RecoveryExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *ExtendedLocation {
		if v == nil {
			return nil
		}
		return v.RecoveryExtendedLocation
	}).(ExtendedLocationPtrOutput)
}

// The recovery proximity placement group Id.
func (o A2AEnableProtectionInputPtrOutput) RecoveryProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryProximityPlacementGroupId
	}).(pulumi.StringPtrOutput)
}

// The recovery resource group Id. Valid for V2 scenarios.
func (o A2AEnableProtectionInputPtrOutput) RecoveryResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// The recovery subnet name.
func (o A2AEnableProtectionInputPtrOutput) RecoverySubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.RecoverySubnetName
	}).(pulumi.StringPtrOutput)
}

// The virtual machine scale set Id.
func (o A2AEnableProtectionInputPtrOutput) RecoveryVirtualMachineScaleSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryVirtualMachineScaleSetId
	}).(pulumi.StringPtrOutput)
}

// The list of vm disk details.
func (o A2AEnableProtectionInputPtrOutput) VmDisks() A2AVmDiskInputDetailsArrayOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) []A2AVmDiskInputDetails {
		if v == nil {
			return nil
		}
		return v.VmDisks
	}).(A2AVmDiskInputDetailsArrayOutput)
}

// The list of vm managed disk details.
func (o A2AEnableProtectionInputPtrOutput) VmManagedDisks() A2AVmManagedDiskInputDetailsArrayOutput {
	return o.ApplyT(func(v *A2AEnableProtectionInput) []A2AVmManagedDiskInputDetails {
		if v == nil {
			return nil
		}
		return v.VmManagedDisks
	}).(A2AVmManagedDiskInputDetailsArrayOutput)
}

// ExtendedLocation details data.
type A2AExtendedLocationDetailsResponse struct {
	// The primary ExtendedLocation.
	PrimaryExtendedLocation *ExtendedLocationResponse `pulumi:"primaryExtendedLocation"`
	// The recovery ExtendedLocation.
	RecoveryExtendedLocation *ExtendedLocationResponse `pulumi:"recoveryExtendedLocation"`
}

// ExtendedLocation details data.
type A2AExtendedLocationDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2AExtendedLocationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AExtendedLocationDetailsResponse)(nil)).Elem()
}

func (o A2AExtendedLocationDetailsResponseOutput) ToA2AExtendedLocationDetailsResponseOutput() A2AExtendedLocationDetailsResponseOutput {
	return o
}

func (o A2AExtendedLocationDetailsResponseOutput) ToA2AExtendedLocationDetailsResponseOutputWithContext(ctx context.Context) A2AExtendedLocationDetailsResponseOutput {
	return o
}

// The primary ExtendedLocation.
func (o A2AExtendedLocationDetailsResponseOutput) PrimaryExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v A2AExtendedLocationDetailsResponse) *ExtendedLocationResponse { return v.PrimaryExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// The recovery ExtendedLocation.
func (o A2AExtendedLocationDetailsResponseOutput) RecoveryExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v A2AExtendedLocationDetailsResponse) *ExtendedLocationResponse {
		return v.RecoveryExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

type A2AExtendedLocationDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (A2AExtendedLocationDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AExtendedLocationDetailsResponse)(nil)).Elem()
}

func (o A2AExtendedLocationDetailsResponseArrayOutput) ToA2AExtendedLocationDetailsResponseArrayOutput() A2AExtendedLocationDetailsResponseArrayOutput {
	return o
}

func (o A2AExtendedLocationDetailsResponseArrayOutput) ToA2AExtendedLocationDetailsResponseArrayOutputWithContext(ctx context.Context) A2AExtendedLocationDetailsResponseArrayOutput {
	return o
}

func (o A2AExtendedLocationDetailsResponseArrayOutput) Index(i pulumi.IntInput) A2AExtendedLocationDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) A2AExtendedLocationDetailsResponse {
		return vs[0].([]A2AExtendedLocationDetailsResponse)[vs[1].(int)]
	}).(A2AExtendedLocationDetailsResponseOutput)
}

// ExtendedLocation details data.
type A2AFabricSpecificLocationDetailsResponse struct {
	// The initial primary ExtendedLocation.
	InitialPrimaryExtendedLocation *ExtendedLocationResponse `pulumi:"initialPrimaryExtendedLocation"`
	// Initial primary fabric location info.
	InitialPrimaryFabricLocation *string `pulumi:"initialPrimaryFabricLocation"`
	// The initial source zone info.
	InitialPrimaryZone *string `pulumi:"initialPrimaryZone"`
	// The initial recovery ExtendedLocation.
	InitialRecoveryExtendedLocation *ExtendedLocationResponse `pulumi:"initialRecoveryExtendedLocation"`
	// The initial recovery fabric location info.
	InitialRecoveryFabricLocation *string `pulumi:"initialRecoveryFabricLocation"`
	// The initial target zone info.
	InitialRecoveryZone *string `pulumi:"initialRecoveryZone"`
	// The primary ExtendedLocation.
	PrimaryExtendedLocation *ExtendedLocationResponse `pulumi:"primaryExtendedLocation"`
	// Primary fabric location info.
	PrimaryFabricLocation *string `pulumi:"primaryFabricLocation"`
	// Source zone info.
	PrimaryZone *string `pulumi:"primaryZone"`
	// The recovery ExtendedLocation.
	RecoveryExtendedLocation *ExtendedLocationResponse `pulumi:"recoveryExtendedLocation"`
	// The recovery fabric location info.
	RecoveryFabricLocation *string `pulumi:"recoveryFabricLocation"`
	// The target zone info.
	RecoveryZone *string `pulumi:"recoveryZone"`
}

// ExtendedLocation details data.
type A2AFabricSpecificLocationDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2AFabricSpecificLocationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AFabricSpecificLocationDetailsResponse)(nil)).Elem()
}

func (o A2AFabricSpecificLocationDetailsResponseOutput) ToA2AFabricSpecificLocationDetailsResponseOutput() A2AFabricSpecificLocationDetailsResponseOutput {
	return o
}

func (o A2AFabricSpecificLocationDetailsResponseOutput) ToA2AFabricSpecificLocationDetailsResponseOutputWithContext(ctx context.Context) A2AFabricSpecificLocationDetailsResponseOutput {
	return o
}

// The initial primary ExtendedLocation.
func (o A2AFabricSpecificLocationDetailsResponseOutput) InitialPrimaryExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v A2AFabricSpecificLocationDetailsResponse) *ExtendedLocationResponse {
		return v.InitialPrimaryExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// Initial primary fabric location info.
func (o A2AFabricSpecificLocationDetailsResponseOutput) InitialPrimaryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AFabricSpecificLocationDetailsResponse) *string { return v.InitialPrimaryFabricLocation }).(pulumi.StringPtrOutput)
}

// The initial source zone info.
func (o A2AFabricSpecificLocationDetailsResponseOutput) InitialPrimaryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AFabricSpecificLocationDetailsResponse) *string { return v.InitialPrimaryZone }).(pulumi.StringPtrOutput)
}

// The initial recovery ExtendedLocation.
func (o A2AFabricSpecificLocationDetailsResponseOutput) InitialRecoveryExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v A2AFabricSpecificLocationDetailsResponse) *ExtendedLocationResponse {
		return v.InitialRecoveryExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// The initial recovery fabric location info.
func (o A2AFabricSpecificLocationDetailsResponseOutput) InitialRecoveryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AFabricSpecificLocationDetailsResponse) *string { return v.InitialRecoveryFabricLocation }).(pulumi.StringPtrOutput)
}

// The initial target zone info.
func (o A2AFabricSpecificLocationDetailsResponseOutput) InitialRecoveryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AFabricSpecificLocationDetailsResponse) *string { return v.InitialRecoveryZone }).(pulumi.StringPtrOutput)
}

// The primary ExtendedLocation.
func (o A2AFabricSpecificLocationDetailsResponseOutput) PrimaryExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v A2AFabricSpecificLocationDetailsResponse) *ExtendedLocationResponse {
		return v.PrimaryExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// Primary fabric location info.
func (o A2AFabricSpecificLocationDetailsResponseOutput) PrimaryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AFabricSpecificLocationDetailsResponse) *string { return v.PrimaryFabricLocation }).(pulumi.StringPtrOutput)
}

// Source zone info.
func (o A2AFabricSpecificLocationDetailsResponseOutput) PrimaryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AFabricSpecificLocationDetailsResponse) *string { return v.PrimaryZone }).(pulumi.StringPtrOutput)
}

// The recovery ExtendedLocation.
func (o A2AFabricSpecificLocationDetailsResponseOutput) RecoveryExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v A2AFabricSpecificLocationDetailsResponse) *ExtendedLocationResponse {
		return v.RecoveryExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// The recovery fabric location info.
func (o A2AFabricSpecificLocationDetailsResponseOutput) RecoveryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AFabricSpecificLocationDetailsResponse) *string { return v.RecoveryFabricLocation }).(pulumi.StringPtrOutput)
}

// The target zone info.
func (o A2AFabricSpecificLocationDetailsResponseOutput) RecoveryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AFabricSpecificLocationDetailsResponse) *string { return v.RecoveryZone }).(pulumi.StringPtrOutput)
}

type A2AFabricSpecificLocationDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (A2AFabricSpecificLocationDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AFabricSpecificLocationDetailsResponse)(nil)).Elem()
}

func (o A2AFabricSpecificLocationDetailsResponseArrayOutput) ToA2AFabricSpecificLocationDetailsResponseArrayOutput() A2AFabricSpecificLocationDetailsResponseArrayOutput {
	return o
}

func (o A2AFabricSpecificLocationDetailsResponseArrayOutput) ToA2AFabricSpecificLocationDetailsResponseArrayOutputWithContext(ctx context.Context) A2AFabricSpecificLocationDetailsResponseArrayOutput {
	return o
}

func (o A2AFabricSpecificLocationDetailsResponseArrayOutput) Index(i pulumi.IntInput) A2AFabricSpecificLocationDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) A2AFabricSpecificLocationDetailsResponse {
		return vs[0].([]A2AFabricSpecificLocationDetailsResponse)[vs[1].(int)]
	}).(A2AFabricSpecificLocationDetailsResponseOutput)
}

// A2A Policy creation input.
type A2APolicyCreationInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	// Expected value is 'A2A'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
}

// A2APolicyCreationInputInput is an input type that accepts A2APolicyCreationInputArgs and A2APolicyCreationInputOutput values.
// You can construct a concrete instance of `A2APolicyCreationInputInput` via:
//
//	A2APolicyCreationInputArgs{...}
type A2APolicyCreationInputInput interface {
	pulumi.Input

	ToA2APolicyCreationInputOutput() A2APolicyCreationInputOutput
	ToA2APolicyCreationInputOutputWithContext(context.Context) A2APolicyCreationInputOutput
}

// A2A Policy creation input.
type A2APolicyCreationInputArgs struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	// Expected value is 'A2A'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus pulumi.StringInput `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory pulumi.IntPtrInput `pulumi:"recoveryPointHistory"`
}

func (A2APolicyCreationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*A2APolicyCreationInput)(nil)).Elem()
}

func (i A2APolicyCreationInputArgs) ToA2APolicyCreationInputOutput() A2APolicyCreationInputOutput {
	return i.ToA2APolicyCreationInputOutputWithContext(context.Background())
}

func (i A2APolicyCreationInputArgs) ToA2APolicyCreationInputOutputWithContext(ctx context.Context) A2APolicyCreationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2APolicyCreationInputOutput)
}

func (i A2APolicyCreationInputArgs) ToA2APolicyCreationInputPtrOutput() A2APolicyCreationInputPtrOutput {
	return i.ToA2APolicyCreationInputPtrOutputWithContext(context.Background())
}

func (i A2APolicyCreationInputArgs) ToA2APolicyCreationInputPtrOutputWithContext(ctx context.Context) A2APolicyCreationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2APolicyCreationInputOutput).ToA2APolicyCreationInputPtrOutputWithContext(ctx)
}

// A2APolicyCreationInputPtrInput is an input type that accepts A2APolicyCreationInputArgs, A2APolicyCreationInputPtr and A2APolicyCreationInputPtrOutput values.
// You can construct a concrete instance of `A2APolicyCreationInputPtrInput` via:
//
//	        A2APolicyCreationInputArgs{...}
//
//	or:
//
//	        nil
type A2APolicyCreationInputPtrInput interface {
	pulumi.Input

	ToA2APolicyCreationInputPtrOutput() A2APolicyCreationInputPtrOutput
	ToA2APolicyCreationInputPtrOutputWithContext(context.Context) A2APolicyCreationInputPtrOutput
}

type a2apolicyCreationInputPtrType A2APolicyCreationInputArgs

func A2APolicyCreationInputPtr(v *A2APolicyCreationInputArgs) A2APolicyCreationInputPtrInput {
	return (*a2apolicyCreationInputPtrType)(v)
}

func (*a2apolicyCreationInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**A2APolicyCreationInput)(nil)).Elem()
}

func (i *a2apolicyCreationInputPtrType) ToA2APolicyCreationInputPtrOutput() A2APolicyCreationInputPtrOutput {
	return i.ToA2APolicyCreationInputPtrOutputWithContext(context.Background())
}

func (i *a2apolicyCreationInputPtrType) ToA2APolicyCreationInputPtrOutputWithContext(ctx context.Context) A2APolicyCreationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2APolicyCreationInputPtrOutput)
}

// A2A Policy creation input.
type A2APolicyCreationInputOutput struct{ *pulumi.OutputState }

func (A2APolicyCreationInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2APolicyCreationInput)(nil)).Elem()
}

func (o A2APolicyCreationInputOutput) ToA2APolicyCreationInputOutput() A2APolicyCreationInputOutput {
	return o
}

func (o A2APolicyCreationInputOutput) ToA2APolicyCreationInputOutputWithContext(ctx context.Context) A2APolicyCreationInputOutput {
	return o
}

func (o A2APolicyCreationInputOutput) ToA2APolicyCreationInputPtrOutput() A2APolicyCreationInputPtrOutput {
	return o.ToA2APolicyCreationInputPtrOutputWithContext(context.Background())
}

func (o A2APolicyCreationInputOutput) ToA2APolicyCreationInputPtrOutputWithContext(ctx context.Context) A2APolicyCreationInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v A2APolicyCreationInput) *A2APolicyCreationInput {
		return &v
	}).(A2APolicyCreationInputPtrOutput)
}

// The app consistent snapshot frequency (in minutes).
func (o A2APolicyCreationInputOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2APolicyCreationInput) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency (in minutes).
func (o A2APolicyCreationInputOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2APolicyCreationInput) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The class type.
// Expected value is 'A2A'.
func (o A2APolicyCreationInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v A2APolicyCreationInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
func (o A2APolicyCreationInputOutput) MultiVmSyncStatus() pulumi.StringOutput {
	return o.ApplyT(func(v A2APolicyCreationInput) string { return v.MultiVmSyncStatus }).(pulumi.StringOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o A2APolicyCreationInputOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2APolicyCreationInput) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

type A2APolicyCreationInputPtrOutput struct{ *pulumi.OutputState }

func (A2APolicyCreationInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**A2APolicyCreationInput)(nil)).Elem()
}

func (o A2APolicyCreationInputPtrOutput) ToA2APolicyCreationInputPtrOutput() A2APolicyCreationInputPtrOutput {
	return o
}

func (o A2APolicyCreationInputPtrOutput) ToA2APolicyCreationInputPtrOutputWithContext(ctx context.Context) A2APolicyCreationInputPtrOutput {
	return o
}

func (o A2APolicyCreationInputPtrOutput) Elem() A2APolicyCreationInputOutput {
	return o.ApplyT(func(v *A2APolicyCreationInput) A2APolicyCreationInput {
		if v != nil {
			return *v
		}
		var ret A2APolicyCreationInput
		return ret
	}).(A2APolicyCreationInputOutput)
}

// The app consistent snapshot frequency (in minutes).
func (o A2APolicyCreationInputPtrOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *A2APolicyCreationInput) *int {
		if v == nil {
			return nil
		}
		return v.AppConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency (in minutes).
func (o A2APolicyCreationInputPtrOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *A2APolicyCreationInput) *int {
		if v == nil {
			return nil
		}
		return v.CrashConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// The class type.
// Expected value is 'A2A'.
func (o A2APolicyCreationInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2APolicyCreationInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
func (o A2APolicyCreationInputPtrOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2APolicyCreationInput) *string {
		if v == nil {
			return nil
		}
		return &v.MultiVmSyncStatus
	}).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o A2APolicyCreationInputPtrOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *A2APolicyCreationInput) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointHistory
	}).(pulumi.IntPtrOutput)
}

// A2A specific policy details.
type A2APolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'A2A'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// A2A specific policy details.
type A2APolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2APolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2APolicyDetailsResponse)(nil)).Elem()
}

func (o A2APolicyDetailsResponseOutput) ToA2APolicyDetailsResponseOutput() A2APolicyDetailsResponseOutput {
	return o
}

func (o A2APolicyDetailsResponseOutput) ToA2APolicyDetailsResponseOutputWithContext(ctx context.Context) A2APolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o A2APolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o A2APolicyDetailsResponseOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'A2A'.
func (o A2APolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o A2APolicyDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o A2APolicyDetailsResponseOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o A2APolicyDetailsResponseOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2APolicyDetailsResponse) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

type A2APolicyDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (A2APolicyDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**A2APolicyDetailsResponse)(nil)).Elem()
}

func (o A2APolicyDetailsResponsePtrOutput) ToA2APolicyDetailsResponsePtrOutput() A2APolicyDetailsResponsePtrOutput {
	return o
}

func (o A2APolicyDetailsResponsePtrOutput) ToA2APolicyDetailsResponsePtrOutputWithContext(ctx context.Context) A2APolicyDetailsResponsePtrOutput {
	return o
}

func (o A2APolicyDetailsResponsePtrOutput) Elem() A2APolicyDetailsResponseOutput {
	return o.ApplyT(func(v *A2APolicyDetailsResponse) A2APolicyDetailsResponse {
		if v != nil {
			return *v
		}
		var ret A2APolicyDetailsResponse
		return ret
	}).(A2APolicyDetailsResponseOutput)
}

// The app consistent snapshot frequency in minutes.
func (o A2APolicyDetailsResponsePtrOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *A2APolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.AppConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o A2APolicyDetailsResponsePtrOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *A2APolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.CrashConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'A2A'.
func (o A2APolicyDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2APolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o A2APolicyDetailsResponsePtrOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2APolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmSyncStatus
	}).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o A2APolicyDetailsResponsePtrOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *A2APolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointHistory
	}).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o A2APolicyDetailsResponsePtrOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *A2APolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointThresholdInMinutes
	}).(pulumi.IntPtrOutput)
}

// A2A protected disk details.
type A2AProtectedDiskDetailsResponse struct {
	// The disk level operations list.
	AllowedDiskLevelOperation []string `pulumi:"allowedDiskLevelOperation"`
	// The data pending at source virtual machine in MB.
	DataPendingAtSourceAgentInMB *float64 `pulumi:"dataPendingAtSourceAgentInMB"`
	// The data pending for replication in MB at staging account.
	DataPendingInStagingStorageAccountInMB *float64 `pulumi:"dataPendingInStagingStorageAccountInMB"`
	// The KeyVault resource id for secret (BEK).
	DekKeyVaultArmId *string `pulumi:"dekKeyVaultArmId"`
	// The disk capacity in bytes.
	DiskCapacityInBytes *float64 `pulumi:"diskCapacityInBytes"`
	// The disk name.
	DiskName *string `pulumi:"diskName"`
	// The disk state.
	DiskState *string `pulumi:"diskState"`
	// The type of disk.
	DiskType *string `pulumi:"diskType"`
	// The disk uri.
	DiskUri *string `pulumi:"diskUri"`
	// The failover name for the managed disk.
	FailoverDiskName *string `pulumi:"failoverDiskName"`
	// A value indicating whether vm has encrypted os disk or not.
	IsDiskEncrypted *bool `pulumi:"isDiskEncrypted"`
	// A value indicating whether disk key got encrypted or not.
	IsDiskKeyEncrypted *bool `pulumi:"isDiskKeyEncrypted"`
	// The KeyVault resource id for key (KEK).
	KekKeyVaultArmId *string `pulumi:"kekKeyVaultArmId"`
	// The key URL / identifier (KEK).
	KeyIdentifier *string `pulumi:"keyIdentifier"`
	// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
	MonitoringJobType *string `pulumi:"monitoringJobType"`
	// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
	MonitoringPercentageCompletion *int `pulumi:"monitoringPercentageCompletion"`
	// The primary disk storage account.
	PrimaryDiskAzureStorageAccountId *string `pulumi:"primaryDiskAzureStorageAccountId"`
	// The primary staging storage account.
	PrimaryStagingAzureStorageAccountId *string `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery disk storage account.
	RecoveryAzureStorageAccountId *string `pulumi:"recoveryAzureStorageAccountId"`
	// Recovery disk uri.
	RecoveryDiskUri *string `pulumi:"recoveryDiskUri"`
	// A value indicating whether resync is required for this disk.
	ResyncRequired *bool `pulumi:"resyncRequired"`
	// The secret URL / identifier (BEK).
	SecretIdentifier *string `pulumi:"secretIdentifier"`
	// The test failover name for the managed disk.
	TfoDiskName *string `pulumi:"tfoDiskName"`
}

// A2A protected disk details.
type A2AProtectedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2AProtectedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o A2AProtectedDiskDetailsResponseOutput) ToA2AProtectedDiskDetailsResponseOutput() A2AProtectedDiskDetailsResponseOutput {
	return o
}

func (o A2AProtectedDiskDetailsResponseOutput) ToA2AProtectedDiskDetailsResponseOutputWithContext(ctx context.Context) A2AProtectedDiskDetailsResponseOutput {
	return o
}

// The disk level operations list.
func (o A2AProtectedDiskDetailsResponseOutput) AllowedDiskLevelOperation() pulumi.StringArrayOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) []string { return v.AllowedDiskLevelOperation }).(pulumi.StringArrayOutput)
}

// The data pending at source virtual machine in MB.
func (o A2AProtectedDiskDetailsResponseOutput) DataPendingAtSourceAgentInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *float64 { return v.DataPendingAtSourceAgentInMB }).(pulumi.Float64PtrOutput)
}

// The data pending for replication in MB at staging account.
func (o A2AProtectedDiskDetailsResponseOutput) DataPendingInStagingStorageAccountInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *float64 { return v.DataPendingInStagingStorageAccountInMB }).(pulumi.Float64PtrOutput)
}

// The KeyVault resource id for secret (BEK).
func (o A2AProtectedDiskDetailsResponseOutput) DekKeyVaultArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.DekKeyVaultArmId }).(pulumi.StringPtrOutput)
}

// The disk capacity in bytes.
func (o A2AProtectedDiskDetailsResponseOutput) DiskCapacityInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *float64 { return v.DiskCapacityInBytes }).(pulumi.Float64PtrOutput)
}

// The disk name.
func (o A2AProtectedDiskDetailsResponseOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.DiskName }).(pulumi.StringPtrOutput)
}

// The disk state.
func (o A2AProtectedDiskDetailsResponseOutput) DiskState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.DiskState }).(pulumi.StringPtrOutput)
}

// The type of disk.
func (o A2AProtectedDiskDetailsResponseOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// The disk uri.
func (o A2AProtectedDiskDetailsResponseOutput) DiskUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.DiskUri }).(pulumi.StringPtrOutput)
}

// The failover name for the managed disk.
func (o A2AProtectedDiskDetailsResponseOutput) FailoverDiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.FailoverDiskName }).(pulumi.StringPtrOutput)
}

// A value indicating whether vm has encrypted os disk or not.
func (o A2AProtectedDiskDetailsResponseOutput) IsDiskEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *bool { return v.IsDiskEncrypted }).(pulumi.BoolPtrOutput)
}

// A value indicating whether disk key got encrypted or not.
func (o A2AProtectedDiskDetailsResponseOutput) IsDiskKeyEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *bool { return v.IsDiskKeyEncrypted }).(pulumi.BoolPtrOutput)
}

// The KeyVault resource id for key (KEK).
func (o A2AProtectedDiskDetailsResponseOutput) KekKeyVaultArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.KekKeyVaultArmId }).(pulumi.StringPtrOutput)
}

// The key URL / identifier (KEK).
func (o A2AProtectedDiskDetailsResponseOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.KeyIdentifier }).(pulumi.StringPtrOutput)
}

// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
func (o A2AProtectedDiskDetailsResponseOutput) MonitoringJobType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.MonitoringJobType }).(pulumi.StringPtrOutput)
}

// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
func (o A2AProtectedDiskDetailsResponseOutput) MonitoringPercentageCompletion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *int { return v.MonitoringPercentageCompletion }).(pulumi.IntPtrOutput)
}

// The primary disk storage account.
func (o A2AProtectedDiskDetailsResponseOutput) PrimaryDiskAzureStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.PrimaryDiskAzureStorageAccountId }).(pulumi.StringPtrOutput)
}

// The primary staging storage account.
func (o A2AProtectedDiskDetailsResponseOutput) PrimaryStagingAzureStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.PrimaryStagingAzureStorageAccountId }).(pulumi.StringPtrOutput)
}

// The recovery disk storage account.
func (o A2AProtectedDiskDetailsResponseOutput) RecoveryAzureStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.RecoveryAzureStorageAccountId }).(pulumi.StringPtrOutput)
}

// Recovery disk uri.
func (o A2AProtectedDiskDetailsResponseOutput) RecoveryDiskUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.RecoveryDiskUri }).(pulumi.StringPtrOutput)
}

// A value indicating whether resync is required for this disk.
func (o A2AProtectedDiskDetailsResponseOutput) ResyncRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *bool { return v.ResyncRequired }).(pulumi.BoolPtrOutput)
}

// The secret URL / identifier (BEK).
func (o A2AProtectedDiskDetailsResponseOutput) SecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.SecretIdentifier }).(pulumi.StringPtrOutput)
}

// The test failover name for the managed disk.
func (o A2AProtectedDiskDetailsResponseOutput) TfoDiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedDiskDetailsResponse) *string { return v.TfoDiskName }).(pulumi.StringPtrOutput)
}

type A2AProtectedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (A2AProtectedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o A2AProtectedDiskDetailsResponseArrayOutput) ToA2AProtectedDiskDetailsResponseArrayOutput() A2AProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o A2AProtectedDiskDetailsResponseArrayOutput) ToA2AProtectedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) A2AProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o A2AProtectedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) A2AProtectedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) A2AProtectedDiskDetailsResponse {
		return vs[0].([]A2AProtectedDiskDetailsResponse)[vs[1].(int)]
	}).(A2AProtectedDiskDetailsResponseOutput)
}

// A2A protected managed disk details.
type A2AProtectedManagedDiskDetailsResponse struct {
	// The disk level operations list.
	AllowedDiskLevelOperation []string `pulumi:"allowedDiskLevelOperation"`
	// The data pending at source virtual machine in MB.
	DataPendingAtSourceAgentInMB *float64 `pulumi:"dataPendingAtSourceAgentInMB"`
	// The data pending for replication in MB at staging account.
	DataPendingInStagingStorageAccountInMB *float64 `pulumi:"dataPendingInStagingStorageAccountInMB"`
	// The KeyVault resource id for secret (BEK).
	DekKeyVaultArmId *string `pulumi:"dekKeyVaultArmId"`
	// The disk capacity in bytes.
	DiskCapacityInBytes *float64 `pulumi:"diskCapacityInBytes"`
	// The managed disk Arm id.
	DiskId *string `pulumi:"diskId"`
	// The disk name.
	DiskName *string `pulumi:"diskName"`
	// The disk state.
	DiskState *string `pulumi:"diskState"`
	// The type of disk.
	DiskType *string `pulumi:"diskType"`
	// The failover name for the managed disk.
	FailoverDiskName *string `pulumi:"failoverDiskName"`
	// A value indicating whether vm has encrypted os disk or not.
	IsDiskEncrypted *bool `pulumi:"isDiskEncrypted"`
	// A value indicating whether disk key got encrypted or not.
	IsDiskKeyEncrypted *bool `pulumi:"isDiskKeyEncrypted"`
	// The KeyVault resource id for key (KEK).
	KekKeyVaultArmId *string `pulumi:"kekKeyVaultArmId"`
	// The key URL / identifier (KEK).
	KeyIdentifier *string `pulumi:"keyIdentifier"`
	// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
	MonitoringJobType *string `pulumi:"monitoringJobType"`
	// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
	MonitoringPercentageCompletion *int `pulumi:"monitoringPercentageCompletion"`
	// The primary disk encryption set Id.
	PrimaryDiskEncryptionSetId *string `pulumi:"primaryDiskEncryptionSetId"`
	// The primary staging storage account.
	PrimaryStagingAzureStorageAccountId *string `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery disk encryption set Id.
	RecoveryDiskEncryptionSetId *string `pulumi:"recoveryDiskEncryptionSetId"`
	// Recovery original target disk Arm Id.
	RecoveryOrignalTargetDiskId *string `pulumi:"recoveryOrignalTargetDiskId"`
	// The replica disk type. Its an optional value and will be same as source disk type if not user provided.
	RecoveryReplicaDiskAccountType *string `pulumi:"recoveryReplicaDiskAccountType"`
	// Recovery replica disk Arm Id.
	RecoveryReplicaDiskId *string `pulumi:"recoveryReplicaDiskId"`
	// The recovery disk resource group Arm Id.
	RecoveryResourceGroupId *string `pulumi:"recoveryResourceGroupId"`
	// The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
	RecoveryTargetDiskAccountType *string `pulumi:"recoveryTargetDiskAccountType"`
	// Recovery target disk Arm Id.
	RecoveryTargetDiskId *string `pulumi:"recoveryTargetDiskId"`
	// A value indicating whether resync is required for this disk.
	ResyncRequired *bool `pulumi:"resyncRequired"`
	// The secret URL / identifier (BEK).
	SecretIdentifier *string `pulumi:"secretIdentifier"`
	// The test failover name for the managed disk.
	TfoDiskName *string `pulumi:"tfoDiskName"`
}

// A2A protected managed disk details.
type A2AProtectedManagedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2AProtectedManagedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AProtectedManagedDiskDetailsResponse)(nil)).Elem()
}

func (o A2AProtectedManagedDiskDetailsResponseOutput) ToA2AProtectedManagedDiskDetailsResponseOutput() A2AProtectedManagedDiskDetailsResponseOutput {
	return o
}

func (o A2AProtectedManagedDiskDetailsResponseOutput) ToA2AProtectedManagedDiskDetailsResponseOutputWithContext(ctx context.Context) A2AProtectedManagedDiskDetailsResponseOutput {
	return o
}

// The disk level operations list.
func (o A2AProtectedManagedDiskDetailsResponseOutput) AllowedDiskLevelOperation() pulumi.StringArrayOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) []string { return v.AllowedDiskLevelOperation }).(pulumi.StringArrayOutput)
}

// The data pending at source virtual machine in MB.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DataPendingAtSourceAgentInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *float64 { return v.DataPendingAtSourceAgentInMB }).(pulumi.Float64PtrOutput)
}

// The data pending for replication in MB at staging account.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DataPendingInStagingStorageAccountInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *float64 {
		return v.DataPendingInStagingStorageAccountInMB
	}).(pulumi.Float64PtrOutput)
}

// The KeyVault resource id for secret (BEK).
func (o A2AProtectedManagedDiskDetailsResponseOutput) DekKeyVaultArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.DekKeyVaultArmId }).(pulumi.StringPtrOutput)
}

// The disk capacity in bytes.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DiskCapacityInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *float64 { return v.DiskCapacityInBytes }).(pulumi.Float64PtrOutput)
}

// The managed disk Arm id.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// The disk name.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.DiskName }).(pulumi.StringPtrOutput)
}

// The disk state.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DiskState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.DiskState }).(pulumi.StringPtrOutput)
}

// The type of disk.
func (o A2AProtectedManagedDiskDetailsResponseOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// The failover name for the managed disk.
func (o A2AProtectedManagedDiskDetailsResponseOutput) FailoverDiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.FailoverDiskName }).(pulumi.StringPtrOutput)
}

// A value indicating whether vm has encrypted os disk or not.
func (o A2AProtectedManagedDiskDetailsResponseOutput) IsDiskEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *bool { return v.IsDiskEncrypted }).(pulumi.BoolPtrOutput)
}

// A value indicating whether disk key got encrypted or not.
func (o A2AProtectedManagedDiskDetailsResponseOutput) IsDiskKeyEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *bool { return v.IsDiskKeyEncrypted }).(pulumi.BoolPtrOutput)
}

// The KeyVault resource id for key (KEK).
func (o A2AProtectedManagedDiskDetailsResponseOutput) KekKeyVaultArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.KekKeyVaultArmId }).(pulumi.StringPtrOutput)
}

// The key URL / identifier (KEK).
func (o A2AProtectedManagedDiskDetailsResponseOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.KeyIdentifier }).(pulumi.StringPtrOutput)
}

// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
func (o A2AProtectedManagedDiskDetailsResponseOutput) MonitoringJobType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.MonitoringJobType }).(pulumi.StringPtrOutput)
}

// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
func (o A2AProtectedManagedDiskDetailsResponseOutput) MonitoringPercentageCompletion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *int { return v.MonitoringPercentageCompletion }).(pulumi.IntPtrOutput)
}

// The primary disk encryption set Id.
func (o A2AProtectedManagedDiskDetailsResponseOutput) PrimaryDiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.PrimaryDiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The primary staging storage account.
func (o A2AProtectedManagedDiskDetailsResponseOutput) PrimaryStagingAzureStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.PrimaryStagingAzureStorageAccountId }).(pulumi.StringPtrOutput)
}

// The recovery disk encryption set Id.
func (o A2AProtectedManagedDiskDetailsResponseOutput) RecoveryDiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.RecoveryDiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// Recovery original target disk Arm Id.
func (o A2AProtectedManagedDiskDetailsResponseOutput) RecoveryOrignalTargetDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.RecoveryOrignalTargetDiskId }).(pulumi.StringPtrOutput)
}

// The replica disk type. Its an optional value and will be same as source disk type if not user provided.
func (o A2AProtectedManagedDiskDetailsResponseOutput) RecoveryReplicaDiskAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.RecoveryReplicaDiskAccountType }).(pulumi.StringPtrOutput)
}

// Recovery replica disk Arm Id.
func (o A2AProtectedManagedDiskDetailsResponseOutput) RecoveryReplicaDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.RecoveryReplicaDiskId }).(pulumi.StringPtrOutput)
}

// The recovery disk resource group Arm Id.
func (o A2AProtectedManagedDiskDetailsResponseOutput) RecoveryResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.RecoveryResourceGroupId }).(pulumi.StringPtrOutput)
}

// The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
func (o A2AProtectedManagedDiskDetailsResponseOutput) RecoveryTargetDiskAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.RecoveryTargetDiskAccountType }).(pulumi.StringPtrOutput)
}

// Recovery target disk Arm Id.
func (o A2AProtectedManagedDiskDetailsResponseOutput) RecoveryTargetDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.RecoveryTargetDiskId }).(pulumi.StringPtrOutput)
}

// A value indicating whether resync is required for this disk.
func (o A2AProtectedManagedDiskDetailsResponseOutput) ResyncRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *bool { return v.ResyncRequired }).(pulumi.BoolPtrOutput)
}

// The secret URL / identifier (BEK).
func (o A2AProtectedManagedDiskDetailsResponseOutput) SecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.SecretIdentifier }).(pulumi.StringPtrOutput)
}

// The test failover name for the managed disk.
func (o A2AProtectedManagedDiskDetailsResponseOutput) TfoDiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectedManagedDiskDetailsResponse) *string { return v.TfoDiskName }).(pulumi.StringPtrOutput)
}

type A2AProtectedManagedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (A2AProtectedManagedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AProtectedManagedDiskDetailsResponse)(nil)).Elem()
}

func (o A2AProtectedManagedDiskDetailsResponseArrayOutput) ToA2AProtectedManagedDiskDetailsResponseArrayOutput() A2AProtectedManagedDiskDetailsResponseArrayOutput {
	return o
}

func (o A2AProtectedManagedDiskDetailsResponseArrayOutput) ToA2AProtectedManagedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) A2AProtectedManagedDiskDetailsResponseArrayOutput {
	return o
}

func (o A2AProtectedManagedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) A2AProtectedManagedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) A2AProtectedManagedDiskDetailsResponse {
		return vs[0].([]A2AProtectedManagedDiskDetailsResponse)[vs[1].(int)]
	}).(A2AProtectedManagedDiskDetailsResponseOutput)
}

// A2A provider specific settings.
type A2AProtectionContainerMappingDetailsResponse struct {
	// A value indicating whether the auto update is enabled.
	AgentAutoUpdateStatus *string `pulumi:"agentAutoUpdateStatus"`
	// The automation account arm id.
	AutomationAccountArmId *string `pulumi:"automationAccountArmId"`
	// A value indicating the type authentication to use for automation Account.
	AutomationAccountAuthenticationType *string `pulumi:"automationAccountAuthenticationType"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'A2A'.
	InstanceType string `pulumi:"instanceType"`
	// The job schedule arm name.
	JobScheduleName *string `pulumi:"jobScheduleName"`
	// The schedule arm name.
	ScheduleName *string `pulumi:"scheduleName"`
}

// Defaults sets the appropriate defaults for A2AProtectionContainerMappingDetailsResponse
func (val *A2AProtectionContainerMappingDetailsResponse) Defaults() *A2AProtectionContainerMappingDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutomationAccountAuthenticationType == nil {
		automationAccountAuthenticationType_ := "RunAsAccount"
		tmp.AutomationAccountAuthenticationType = &automationAccountAuthenticationType_
	}
	return &tmp
}

// A2A provider specific settings.
type A2AProtectionContainerMappingDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2AProtectionContainerMappingDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AProtectionContainerMappingDetailsResponse)(nil)).Elem()
}

func (o A2AProtectionContainerMappingDetailsResponseOutput) ToA2AProtectionContainerMappingDetailsResponseOutput() A2AProtectionContainerMappingDetailsResponseOutput {
	return o
}

func (o A2AProtectionContainerMappingDetailsResponseOutput) ToA2AProtectionContainerMappingDetailsResponseOutputWithContext(ctx context.Context) A2AProtectionContainerMappingDetailsResponseOutput {
	return o
}

// A value indicating whether the auto update is enabled.
func (o A2AProtectionContainerMappingDetailsResponseOutput) AgentAutoUpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectionContainerMappingDetailsResponse) *string { return v.AgentAutoUpdateStatus }).(pulumi.StringPtrOutput)
}

// The automation account arm id.
func (o A2AProtectionContainerMappingDetailsResponseOutput) AutomationAccountArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectionContainerMappingDetailsResponse) *string { return v.AutomationAccountArmId }).(pulumi.StringPtrOutput)
}

// A value indicating the type authentication to use for automation Account.
func (o A2AProtectionContainerMappingDetailsResponseOutput) AutomationAccountAuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectionContainerMappingDetailsResponse) *string {
		return v.AutomationAccountAuthenticationType
	}).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'A2A'.
func (o A2AProtectionContainerMappingDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v A2AProtectionContainerMappingDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The job schedule arm name.
func (o A2AProtectionContainerMappingDetailsResponseOutput) JobScheduleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectionContainerMappingDetailsResponse) *string { return v.JobScheduleName }).(pulumi.StringPtrOutput)
}

// The schedule arm name.
func (o A2AProtectionContainerMappingDetailsResponseOutput) ScheduleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AProtectionContainerMappingDetailsResponse) *string { return v.ScheduleName }).(pulumi.StringPtrOutput)
}

type A2AProtectionContainerMappingDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (A2AProtectionContainerMappingDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**A2AProtectionContainerMappingDetailsResponse)(nil)).Elem()
}

func (o A2AProtectionContainerMappingDetailsResponsePtrOutput) ToA2AProtectionContainerMappingDetailsResponsePtrOutput() A2AProtectionContainerMappingDetailsResponsePtrOutput {
	return o
}

func (o A2AProtectionContainerMappingDetailsResponsePtrOutput) ToA2AProtectionContainerMappingDetailsResponsePtrOutputWithContext(ctx context.Context) A2AProtectionContainerMappingDetailsResponsePtrOutput {
	return o
}

func (o A2AProtectionContainerMappingDetailsResponsePtrOutput) Elem() A2AProtectionContainerMappingDetailsResponseOutput {
	return o.ApplyT(func(v *A2AProtectionContainerMappingDetailsResponse) A2AProtectionContainerMappingDetailsResponse {
		if v != nil {
			return *v
		}
		var ret A2AProtectionContainerMappingDetailsResponse
		return ret
	}).(A2AProtectionContainerMappingDetailsResponseOutput)
}

// A value indicating whether the auto update is enabled.
func (o A2AProtectionContainerMappingDetailsResponsePtrOutput) AgentAutoUpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AProtectionContainerMappingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentAutoUpdateStatus
	}).(pulumi.StringPtrOutput)
}

// The automation account arm id.
func (o A2AProtectionContainerMappingDetailsResponsePtrOutput) AutomationAccountArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AProtectionContainerMappingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AutomationAccountArmId
	}).(pulumi.StringPtrOutput)
}

// A value indicating the type authentication to use for automation Account.
func (o A2AProtectionContainerMappingDetailsResponsePtrOutput) AutomationAccountAuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AProtectionContainerMappingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AutomationAccountAuthenticationType
	}).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'A2A'.
func (o A2AProtectionContainerMappingDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AProtectionContainerMappingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The job schedule arm name.
func (o A2AProtectionContainerMappingDetailsResponsePtrOutput) JobScheduleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AProtectionContainerMappingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.JobScheduleName
	}).(pulumi.StringPtrOutput)
}

// The schedule arm name.
func (o A2AProtectionContainerMappingDetailsResponsePtrOutput) ScheduleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AProtectionContainerMappingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleName
	}).(pulumi.StringPtrOutput)
}

// A2A provider specific settings.
type A2AReplicationDetailsResponse struct {
	// Agent certificate expiry date.
	AgentCertificateExpiryDate string `pulumi:"agentCertificateExpiryDate"`
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// The agent version.
	AgentVersion *string `pulumi:"agentVersion"`
	// A value indicating whether the auto protection is enabled.
	AutoProtectionOfDataDisk *string `pulumi:"autoProtectionOfDataDisk"`
	// A value indicating the churn option selected by user.
	ChurnOptionSelected string `pulumi:"churnOptionSelected"`
	// The fabric specific object Id of the virtual machine.
	FabricObjectId *string `pulumi:"fabricObjectId"`
	// The initial primary extended location.
	InitialPrimaryExtendedLocation *ExtendedLocationResponse `pulumi:"initialPrimaryExtendedLocation"`
	// The initial primary fabric location.
	InitialPrimaryFabricLocation string `pulumi:"initialPrimaryFabricLocation"`
	// The initial primary availability zone.
	InitialPrimaryZone string `pulumi:"initialPrimaryZone"`
	// The initial recovery extended location.
	InitialRecoveryExtendedLocation *ExtendedLocationResponse `pulumi:"initialRecoveryExtendedLocation"`
	// The initial recovery fabric location.
	InitialRecoveryFabricLocation string `pulumi:"initialRecoveryFabricLocation"`
	// The initial recovery availability zone.
	InitialRecoveryZone string `pulumi:"initialRecoveryZone"`
	// Gets the Instance type.
	// Expected value is 'A2A'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether agent certificate update is required.
	IsReplicationAgentCertificateUpdateRequired *bool `pulumi:"isReplicationAgentCertificateUpdateRequired"`
	// A value indicating whether replication agent update is required.
	IsReplicationAgentUpdateRequired *bool `pulumi:"isReplicationAgentUpdateRequired"`
	// The last heartbeat received from the source server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The time (in UTC) when the last RPO value was calculated by Protection Service.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the "same" protected item even though other internal Ids/ARM Id might be changing.
	LifecycleId *string `pulumi:"lifecycleId"`
	// The management Id.
	ManagementId *string `pulumi:"managementId"`
	// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
	MonitoringJobType *string `pulumi:"monitoringJobType"`
	// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
	MonitoringPercentageCompletion *int `pulumi:"monitoringPercentageCompletion"`
	// Whether Multi VM group is auto created or specified by user.
	MultiVmGroupCreateOption *string `pulumi:"multiVmGroupCreateOption"`
	// The multi vm group Id.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// The type of operating system.
	OsType *string `pulumi:"osType"`
	// The primary availability zone.
	PrimaryAvailabilityZone *string `pulumi:"primaryAvailabilityZone"`
	// The primary Extended Location.
	PrimaryExtendedLocation *ExtendedLocationResponse `pulumi:"primaryExtendedLocation"`
	// Primary fabric location.
	PrimaryFabricLocation *string `pulumi:"primaryFabricLocation"`
	// The list of protected disks.
	ProtectedDisks []A2AProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The list of protected managed disks.
	ProtectedManagedDisks []A2AProtectedManagedDiskDetailsResponse `pulumi:"protectedManagedDisks"`
	// The recovery availability set.
	RecoveryAvailabilitySet *string `pulumi:"recoveryAvailabilitySet"`
	// The recovery availability zone.
	RecoveryAvailabilityZone *string `pulumi:"recoveryAvailabilityZone"`
	// The recovery azure generation.
	RecoveryAzureGeneration string `pulumi:"recoveryAzureGeneration"`
	// The recovery resource group.
	RecoveryAzureResourceGroupId *string `pulumi:"recoveryAzureResourceGroupId"`
	// The name of recovery virtual machine.
	RecoveryAzureVMName *string `pulumi:"recoveryAzureVMName"`
	// The size of recovery virtual machine.
	RecoveryAzureVMSize *string `pulumi:"recoveryAzureVMSize"`
	// The recovery boot diagnostic storage account Arm Id.
	RecoveryBootDiagStorageAccountId *string `pulumi:"recoveryBootDiagStorageAccountId"`
	// The recovery capacity reservation group Id.
	RecoveryCapacityReservationGroupId *string `pulumi:"recoveryCapacityReservationGroupId"`
	// The recovery cloud service.
	RecoveryCloudService *string `pulumi:"recoveryCloudService"`
	// The recovery Extended Location.
	RecoveryExtendedLocation *ExtendedLocationResponse `pulumi:"recoveryExtendedLocation"`
	// The recovery fabric location.
	RecoveryFabricLocation *string `pulumi:"recoveryFabricLocation"`
	// The recovery fabric object Id.
	RecoveryFabricObjectId *string `pulumi:"recoveryFabricObjectId"`
	// The recovery proximity placement group Id.
	RecoveryProximityPlacementGroupId *string `pulumi:"recoveryProximityPlacementGroupId"`
	// The recovery virtual machine scale set id.
	RecoveryVirtualMachineScaleSetId *string `pulumi:"recoveryVirtualMachineScaleSetId"`
	// The last RPO value in seconds.
	RpoInSeconds *float64 `pulumi:"rpoInSeconds"`
	// The recovery virtual network.
	SelectedRecoveryAzureNetworkId *string `pulumi:"selectedRecoveryAzureNetworkId"`
	// The test failover virtual network.
	SelectedTfoAzureNetworkId *string `pulumi:"selectedTfoAzureNetworkId"`
	// The test failover fabric object Id.
	TestFailoverRecoveryFabricObjectId *string `pulumi:"testFailoverRecoveryFabricObjectId"`
	// The test failover vm name.
	TfoAzureVMName *string `pulumi:"tfoAzureVMName"`
	// The list of unprotected disks.
	UnprotectedDisks []A2AUnprotectedDiskDetailsResponse `pulumi:"unprotectedDisks"`
	// The encryption type of the VM.
	VmEncryptionType string `pulumi:"vmEncryptionType"`
	// The virtual machine nic details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
	// The synced configuration details.
	VmSyncedConfigDetails *AzureToAzureVmSyncedConfigDetailsResponse `pulumi:"vmSyncedConfigDetails"`
}

// A2A provider specific settings.
type A2AReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2AReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AReplicationDetailsResponse)(nil)).Elem()
}

func (o A2AReplicationDetailsResponseOutput) ToA2AReplicationDetailsResponseOutput() A2AReplicationDetailsResponseOutput {
	return o
}

func (o A2AReplicationDetailsResponseOutput) ToA2AReplicationDetailsResponseOutputWithContext(ctx context.Context) A2AReplicationDetailsResponseOutput {
	return o
}

// Agent certificate expiry date.
func (o A2AReplicationDetailsResponseOutput) AgentCertificateExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) string { return v.AgentCertificateExpiryDate }).(pulumi.StringOutput)
}

// Agent expiry date.
func (o A2AReplicationDetailsResponseOutput) AgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.AgentExpiryDate }).(pulumi.StringPtrOutput)
}

// The agent version.
func (o A2AReplicationDetailsResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// A value indicating whether the auto protection is enabled.
func (o A2AReplicationDetailsResponseOutput) AutoProtectionOfDataDisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.AutoProtectionOfDataDisk }).(pulumi.StringPtrOutput)
}

// A value indicating the churn option selected by user.
func (o A2AReplicationDetailsResponseOutput) ChurnOptionSelected() pulumi.StringOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) string { return v.ChurnOptionSelected }).(pulumi.StringOutput)
}

// The fabric specific object Id of the virtual machine.
func (o A2AReplicationDetailsResponseOutput) FabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.FabricObjectId }).(pulumi.StringPtrOutput)
}

// The initial primary extended location.
func (o A2AReplicationDetailsResponseOutput) InitialPrimaryExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *ExtendedLocationResponse {
		return v.InitialPrimaryExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// The initial primary fabric location.
func (o A2AReplicationDetailsResponseOutput) InitialPrimaryFabricLocation() pulumi.StringOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) string { return v.InitialPrimaryFabricLocation }).(pulumi.StringOutput)
}

// The initial primary availability zone.
func (o A2AReplicationDetailsResponseOutput) InitialPrimaryZone() pulumi.StringOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) string { return v.InitialPrimaryZone }).(pulumi.StringOutput)
}

// The initial recovery extended location.
func (o A2AReplicationDetailsResponseOutput) InitialRecoveryExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *ExtendedLocationResponse {
		return v.InitialRecoveryExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// The initial recovery fabric location.
func (o A2AReplicationDetailsResponseOutput) InitialRecoveryFabricLocation() pulumi.StringOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) string { return v.InitialRecoveryFabricLocation }).(pulumi.StringOutput)
}

// The initial recovery availability zone.
func (o A2AReplicationDetailsResponseOutput) InitialRecoveryZone() pulumi.StringOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) string { return v.InitialRecoveryZone }).(pulumi.StringOutput)
}

// Gets the Instance type.
// Expected value is 'A2A'.
func (o A2AReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether agent certificate update is required.
func (o A2AReplicationDetailsResponseOutput) IsReplicationAgentCertificateUpdateRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *bool { return v.IsReplicationAgentCertificateUpdateRequired }).(pulumi.BoolPtrOutput)
}

// A value indicating whether replication agent update is required.
func (o A2AReplicationDetailsResponseOutput) IsReplicationAgentUpdateRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *bool { return v.IsReplicationAgentUpdateRequired }).(pulumi.BoolPtrOutput)
}

// The last heartbeat received from the source server.
func (o A2AReplicationDetailsResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The time (in UTC) when the last RPO value was calculated by Protection Service.
func (o A2AReplicationDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the "same" protected item even though other internal Ids/ARM Id might be changing.
func (o A2AReplicationDetailsResponseOutput) LifecycleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.LifecycleId }).(pulumi.StringPtrOutput)
}

// The management Id.
func (o A2AReplicationDetailsResponseOutput) ManagementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.ManagementId }).(pulumi.StringPtrOutput)
}

// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
func (o A2AReplicationDetailsResponseOutput) MonitoringJobType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.MonitoringJobType }).(pulumi.StringPtrOutput)
}

// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
func (o A2AReplicationDetailsResponseOutput) MonitoringPercentageCompletion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *int { return v.MonitoringPercentageCompletion }).(pulumi.IntPtrOutput)
}

// Whether Multi VM group is auto created or specified by user.
func (o A2AReplicationDetailsResponseOutput) MultiVmGroupCreateOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.MultiVmGroupCreateOption }).(pulumi.StringPtrOutput)
}

// The multi vm group Id.
func (o A2AReplicationDetailsResponseOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.MultiVmGroupId }).(pulumi.StringPtrOutput)
}

// The multi vm group name.
func (o A2AReplicationDetailsResponseOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.MultiVmGroupName }).(pulumi.StringPtrOutput)
}

// The type of operating system.
func (o A2AReplicationDetailsResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The primary availability zone.
func (o A2AReplicationDetailsResponseOutput) PrimaryAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.PrimaryAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The primary Extended Location.
func (o A2AReplicationDetailsResponseOutput) PrimaryExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *ExtendedLocationResponse { return v.PrimaryExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// Primary fabric location.
func (o A2AReplicationDetailsResponseOutput) PrimaryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.PrimaryFabricLocation }).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o A2AReplicationDetailsResponseOutput) ProtectedDisks() A2AProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) []A2AProtectedDiskDetailsResponse { return v.ProtectedDisks }).(A2AProtectedDiskDetailsResponseArrayOutput)
}

// The list of protected managed disks.
func (o A2AReplicationDetailsResponseOutput) ProtectedManagedDisks() A2AProtectedManagedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) []A2AProtectedManagedDiskDetailsResponse {
		return v.ProtectedManagedDisks
	}).(A2AProtectedManagedDiskDetailsResponseArrayOutput)
}

// The recovery availability set.
func (o A2AReplicationDetailsResponseOutput) RecoveryAvailabilitySet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryAvailabilitySet }).(pulumi.StringPtrOutput)
}

// The recovery availability zone.
func (o A2AReplicationDetailsResponseOutput) RecoveryAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The recovery azure generation.
func (o A2AReplicationDetailsResponseOutput) RecoveryAzureGeneration() pulumi.StringOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) string { return v.RecoveryAzureGeneration }).(pulumi.StringOutput)
}

// The recovery resource group.
func (o A2AReplicationDetailsResponseOutput) RecoveryAzureResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryAzureResourceGroupId }).(pulumi.StringPtrOutput)
}

// The name of recovery virtual machine.
func (o A2AReplicationDetailsResponseOutput) RecoveryAzureVMName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryAzureVMName }).(pulumi.StringPtrOutput)
}

// The size of recovery virtual machine.
func (o A2AReplicationDetailsResponseOutput) RecoveryAzureVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryAzureVMSize }).(pulumi.StringPtrOutput)
}

// The recovery boot diagnostic storage account Arm Id.
func (o A2AReplicationDetailsResponseOutput) RecoveryBootDiagStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryBootDiagStorageAccountId }).(pulumi.StringPtrOutput)
}

// The recovery capacity reservation group Id.
func (o A2AReplicationDetailsResponseOutput) RecoveryCapacityReservationGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryCapacityReservationGroupId }).(pulumi.StringPtrOutput)
}

// The recovery cloud service.
func (o A2AReplicationDetailsResponseOutput) RecoveryCloudService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryCloudService }).(pulumi.StringPtrOutput)
}

// The recovery Extended Location.
func (o A2AReplicationDetailsResponseOutput) RecoveryExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *ExtendedLocationResponse { return v.RecoveryExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// The recovery fabric location.
func (o A2AReplicationDetailsResponseOutput) RecoveryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryFabricLocation }).(pulumi.StringPtrOutput)
}

// The recovery fabric object Id.
func (o A2AReplicationDetailsResponseOutput) RecoveryFabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryFabricObjectId }).(pulumi.StringPtrOutput)
}

// The recovery proximity placement group Id.
func (o A2AReplicationDetailsResponseOutput) RecoveryProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// The recovery virtual machine scale set id.
func (o A2AReplicationDetailsResponseOutput) RecoveryVirtualMachineScaleSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.RecoveryVirtualMachineScaleSetId }).(pulumi.StringPtrOutput)
}

// The last RPO value in seconds.
func (o A2AReplicationDetailsResponseOutput) RpoInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *float64 { return v.RpoInSeconds }).(pulumi.Float64PtrOutput)
}

// The recovery virtual network.
func (o A2AReplicationDetailsResponseOutput) SelectedRecoveryAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.SelectedRecoveryAzureNetworkId }).(pulumi.StringPtrOutput)
}

// The test failover virtual network.
func (o A2AReplicationDetailsResponseOutput) SelectedTfoAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.SelectedTfoAzureNetworkId }).(pulumi.StringPtrOutput)
}

// The test failover fabric object Id.
func (o A2AReplicationDetailsResponseOutput) TestFailoverRecoveryFabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.TestFailoverRecoveryFabricObjectId }).(pulumi.StringPtrOutput)
}

// The test failover vm name.
func (o A2AReplicationDetailsResponseOutput) TfoAzureVMName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.TfoAzureVMName }).(pulumi.StringPtrOutput)
}

// The list of unprotected disks.
func (o A2AReplicationDetailsResponseOutput) UnprotectedDisks() A2AUnprotectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) []A2AUnprotectedDiskDetailsResponse { return v.UnprotectedDisks }).(A2AUnprotectedDiskDetailsResponseArrayOutput)
}

// The encryption type of the VM.
func (o A2AReplicationDetailsResponseOutput) VmEncryptionType() pulumi.StringOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) string { return v.VmEncryptionType }).(pulumi.StringOutput)
}

// The virtual machine nic details.
func (o A2AReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o A2AReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o A2AReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// The synced configuration details.
func (o A2AReplicationDetailsResponseOutput) VmSyncedConfigDetails() AzureToAzureVmSyncedConfigDetailsResponsePtrOutput {
	return o.ApplyT(func(v A2AReplicationDetailsResponse) *AzureToAzureVmSyncedConfigDetailsResponse {
		return v.VmSyncedConfigDetails
	}).(AzureToAzureVmSyncedConfigDetailsResponsePtrOutput)
}

type A2AReplicationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (A2AReplicationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**A2AReplicationDetailsResponse)(nil)).Elem()
}

func (o A2AReplicationDetailsResponsePtrOutput) ToA2AReplicationDetailsResponsePtrOutput() A2AReplicationDetailsResponsePtrOutput {
	return o
}

func (o A2AReplicationDetailsResponsePtrOutput) ToA2AReplicationDetailsResponsePtrOutputWithContext(ctx context.Context) A2AReplicationDetailsResponsePtrOutput {
	return o
}

func (o A2AReplicationDetailsResponsePtrOutput) Elem() A2AReplicationDetailsResponseOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) A2AReplicationDetailsResponse {
		if v != nil {
			return *v
		}
		var ret A2AReplicationDetailsResponse
		return ret
	}).(A2AReplicationDetailsResponseOutput)
}

// Agent certificate expiry date.
func (o A2AReplicationDetailsResponsePtrOutput) AgentCertificateExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AgentCertificateExpiryDate
	}).(pulumi.StringPtrOutput)
}

// Agent expiry date.
func (o A2AReplicationDetailsResponsePtrOutput) AgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentExpiryDate
	}).(pulumi.StringPtrOutput)
}

// The agent version.
func (o A2AReplicationDetailsResponsePtrOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentVersion
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether the auto protection is enabled.
func (o A2AReplicationDetailsResponsePtrOutput) AutoProtectionOfDataDisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AutoProtectionOfDataDisk
	}).(pulumi.StringPtrOutput)
}

// A value indicating the churn option selected by user.
func (o A2AReplicationDetailsResponsePtrOutput) ChurnOptionSelected() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ChurnOptionSelected
	}).(pulumi.StringPtrOutput)
}

// The fabric specific object Id of the virtual machine.
func (o A2AReplicationDetailsResponsePtrOutput) FabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.FabricObjectId
	}).(pulumi.StringPtrOutput)
}

// The initial primary extended location.
func (o A2AReplicationDetailsResponsePtrOutput) InitialPrimaryExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *ExtendedLocationResponse {
		if v == nil {
			return nil
		}
		return v.InitialPrimaryExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// The initial primary fabric location.
func (o A2AReplicationDetailsResponsePtrOutput) InitialPrimaryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InitialPrimaryFabricLocation
	}).(pulumi.StringPtrOutput)
}

// The initial primary availability zone.
func (o A2AReplicationDetailsResponsePtrOutput) InitialPrimaryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InitialPrimaryZone
	}).(pulumi.StringPtrOutput)
}

// The initial recovery extended location.
func (o A2AReplicationDetailsResponsePtrOutput) InitialRecoveryExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *ExtendedLocationResponse {
		if v == nil {
			return nil
		}
		return v.InitialRecoveryExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// The initial recovery fabric location.
func (o A2AReplicationDetailsResponsePtrOutput) InitialRecoveryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InitialRecoveryFabricLocation
	}).(pulumi.StringPtrOutput)
}

// The initial recovery availability zone.
func (o A2AReplicationDetailsResponsePtrOutput) InitialRecoveryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InitialRecoveryZone
	}).(pulumi.StringPtrOutput)
}

// Gets the Instance type.
// Expected value is 'A2A'.
func (o A2AReplicationDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether agent certificate update is required.
func (o A2AReplicationDetailsResponsePtrOutput) IsReplicationAgentCertificateUpdateRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsReplicationAgentCertificateUpdateRequired
	}).(pulumi.BoolPtrOutput)
}

// A value indicating whether replication agent update is required.
func (o A2AReplicationDetailsResponsePtrOutput) IsReplicationAgentUpdateRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsReplicationAgentUpdateRequired
	}).(pulumi.BoolPtrOutput)
}

// The last heartbeat received from the source server.
func (o A2AReplicationDetailsResponsePtrOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastHeartbeat
	}).(pulumi.StringPtrOutput)
}

// The time (in UTC) when the last RPO value was calculated by Protection Service.
func (o A2AReplicationDetailsResponsePtrOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRpoCalculatedTime
	}).(pulumi.StringPtrOutput)
}

// An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the "same" protected item even though other internal Ids/ARM Id might be changing.
func (o A2AReplicationDetailsResponsePtrOutput) LifecycleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LifecycleId
	}).(pulumi.StringPtrOutput)
}

// The management Id.
func (o A2AReplicationDetailsResponsePtrOutput) ManagementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ManagementId
	}).(pulumi.StringPtrOutput)
}

// The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.
func (o A2AReplicationDetailsResponsePtrOutput) MonitoringJobType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MonitoringJobType
	}).(pulumi.StringPtrOutput)
}

// The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.
func (o A2AReplicationDetailsResponsePtrOutput) MonitoringPercentageCompletion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MonitoringPercentageCompletion
	}).(pulumi.IntPtrOutput)
}

// Whether Multi VM group is auto created or specified by user.
func (o A2AReplicationDetailsResponsePtrOutput) MultiVmGroupCreateOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmGroupCreateOption
	}).(pulumi.StringPtrOutput)
}

// The multi vm group Id.
func (o A2AReplicationDetailsResponsePtrOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmGroupId
	}).(pulumi.StringPtrOutput)
}

// The multi vm group name.
func (o A2AReplicationDetailsResponsePtrOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmGroupName
	}).(pulumi.StringPtrOutput)
}

// The type of operating system.
func (o A2AReplicationDetailsResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The primary availability zone.
func (o A2AReplicationDetailsResponsePtrOutput) PrimaryAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryAvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// The primary Extended Location.
func (o A2AReplicationDetailsResponsePtrOutput) PrimaryExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *ExtendedLocationResponse {
		if v == nil {
			return nil
		}
		return v.PrimaryExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// Primary fabric location.
func (o A2AReplicationDetailsResponsePtrOutput) PrimaryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryFabricLocation
	}).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o A2AReplicationDetailsResponsePtrOutput) ProtectedDisks() A2AProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) []A2AProtectedDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProtectedDisks
	}).(A2AProtectedDiskDetailsResponseArrayOutput)
}

// The list of protected managed disks.
func (o A2AReplicationDetailsResponsePtrOutput) ProtectedManagedDisks() A2AProtectedManagedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) []A2AProtectedManagedDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProtectedManagedDisks
	}).(A2AProtectedManagedDiskDetailsResponseArrayOutput)
}

// The recovery availability set.
func (o A2AReplicationDetailsResponsePtrOutput) RecoveryAvailabilitySet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAvailabilitySet
	}).(pulumi.StringPtrOutput)
}

// The recovery availability zone.
func (o A2AReplicationDetailsResponsePtrOutput) RecoveryAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// The recovery azure generation.
func (o A2AReplicationDetailsResponsePtrOutput) RecoveryAzureGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RecoveryAzureGeneration
	}).(pulumi.StringPtrOutput)
}

// The recovery resource group.
func (o A2AReplicationDetailsResponsePtrOutput) RecoveryAzureResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAzureResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// The name of recovery virtual machine.
func (o A2AReplicationDetailsResponsePtrOutput) RecoveryAzureVMName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAzureVMName
	}).(pulumi.StringPtrOutput)
}

// The size of recovery virtual machine.
func (o A2AReplicationDetailsResponsePtrOutput) RecoveryAzureVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAzureVMSize
	}).(pulumi.StringPtrOutput)
}

// The recovery boot diagnostic storage account Arm Id.
func (o A2AReplicationDetailsResponsePtrOutput) RecoveryBootDiagStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryBootDiagStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The recovery capacity reservation group Id.
func (o A2AReplicationDetailsResponsePtrOutput) RecoveryCapacityReservationGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryCapacityReservationGroupId
	}).(pulumi.StringPtrOutput)
}

// The recovery cloud service.
func (o A2AReplicationDetailsResponsePtrOutput) RecoveryCloudService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryCloudService
	}).(pulumi.StringPtrOutput)
}

// The recovery Extended Location.
func (o A2AReplicationDetailsResponsePtrOutput) RecoveryExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *ExtendedLocationResponse {
		if v == nil {
			return nil
		}
		return v.RecoveryExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// The recovery fabric location.
func (o A2AReplicationDetailsResponsePtrOutput) RecoveryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryFabricLocation
	}).(pulumi.StringPtrOutput)
}

// The recovery fabric object Id.
func (o A2AReplicationDetailsResponsePtrOutput) RecoveryFabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryFabricObjectId
	}).(pulumi.StringPtrOutput)
}

// The recovery proximity placement group Id.
func (o A2AReplicationDetailsResponsePtrOutput) RecoveryProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryProximityPlacementGroupId
	}).(pulumi.StringPtrOutput)
}

// The recovery virtual machine scale set id.
func (o A2AReplicationDetailsResponsePtrOutput) RecoveryVirtualMachineScaleSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryVirtualMachineScaleSetId
	}).(pulumi.StringPtrOutput)
}

// The last RPO value in seconds.
func (o A2AReplicationDetailsResponsePtrOutput) RpoInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.RpoInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The recovery virtual network.
func (o A2AReplicationDetailsResponsePtrOutput) SelectedRecoveryAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SelectedRecoveryAzureNetworkId
	}).(pulumi.StringPtrOutput)
}

// The test failover virtual network.
func (o A2AReplicationDetailsResponsePtrOutput) SelectedTfoAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SelectedTfoAzureNetworkId
	}).(pulumi.StringPtrOutput)
}

// The test failover fabric object Id.
func (o A2AReplicationDetailsResponsePtrOutput) TestFailoverRecoveryFabricObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TestFailoverRecoveryFabricObjectId
	}).(pulumi.StringPtrOutput)
}

// The test failover vm name.
func (o A2AReplicationDetailsResponsePtrOutput) TfoAzureVMName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TfoAzureVMName
	}).(pulumi.StringPtrOutput)
}

// The list of unprotected disks.
func (o A2AReplicationDetailsResponsePtrOutput) UnprotectedDisks() A2AUnprotectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) []A2AUnprotectedDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.UnprotectedDisks
	}).(A2AUnprotectedDiskDetailsResponseArrayOutput)
}

// The encryption type of the VM.
func (o A2AReplicationDetailsResponsePtrOutput) VmEncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmEncryptionType
	}).(pulumi.StringPtrOutput)
}

// The virtual machine nic details.
func (o A2AReplicationDetailsResponsePtrOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) []VMNicDetailsResponse {
		if v == nil {
			return nil
		}
		return v.VmNics
	}).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o A2AReplicationDetailsResponsePtrOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmProtectionState
	}).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o A2AReplicationDetailsResponsePtrOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmProtectionStateDescription
	}).(pulumi.StringPtrOutput)
}

// The synced configuration details.
func (o A2AReplicationDetailsResponsePtrOutput) VmSyncedConfigDetails() AzureToAzureVmSyncedConfigDetailsResponsePtrOutput {
	return o.ApplyT(func(v *A2AReplicationDetailsResponse) *AzureToAzureVmSyncedConfigDetailsResponse {
		if v == nil {
			return nil
		}
		return v.VmSyncedConfigDetails
	}).(AzureToAzureVmSyncedConfigDetailsResponsePtrOutput)
}

// A2A unprotected disk details.
type A2AUnprotectedDiskDetailsResponse struct {
	// A value indicating whether the disk auto protection is enabled.
	DiskAutoProtectionStatus *string `pulumi:"diskAutoProtectionStatus"`
	// The source lun Id for the data disk.
	DiskLunId *int `pulumi:"diskLunId"`
}

// A2A unprotected disk details.
type A2AUnprotectedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2AUnprotectedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AUnprotectedDiskDetailsResponse)(nil)).Elem()
}

func (o A2AUnprotectedDiskDetailsResponseOutput) ToA2AUnprotectedDiskDetailsResponseOutput() A2AUnprotectedDiskDetailsResponseOutput {
	return o
}

func (o A2AUnprotectedDiskDetailsResponseOutput) ToA2AUnprotectedDiskDetailsResponseOutputWithContext(ctx context.Context) A2AUnprotectedDiskDetailsResponseOutput {
	return o
}

// A value indicating whether the disk auto protection is enabled.
func (o A2AUnprotectedDiskDetailsResponseOutput) DiskAutoProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AUnprotectedDiskDetailsResponse) *string { return v.DiskAutoProtectionStatus }).(pulumi.StringPtrOutput)
}

// The source lun Id for the data disk.
func (o A2AUnprotectedDiskDetailsResponseOutput) DiskLunId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v A2AUnprotectedDiskDetailsResponse) *int { return v.DiskLunId }).(pulumi.IntPtrOutput)
}

type A2AUnprotectedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (A2AUnprotectedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AUnprotectedDiskDetailsResponse)(nil)).Elem()
}

func (o A2AUnprotectedDiskDetailsResponseArrayOutput) ToA2AUnprotectedDiskDetailsResponseArrayOutput() A2AUnprotectedDiskDetailsResponseArrayOutput {
	return o
}

func (o A2AUnprotectedDiskDetailsResponseArrayOutput) ToA2AUnprotectedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) A2AUnprotectedDiskDetailsResponseArrayOutput {
	return o
}

func (o A2AUnprotectedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) A2AUnprotectedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) A2AUnprotectedDiskDetailsResponse {
		return vs[0].([]A2AUnprotectedDiskDetailsResponse)[vs[1].(int)]
	}).(A2AUnprotectedDiskDetailsResponseOutput)
}

// A2A disk input details.
type A2AVmDiskInputDetails struct {
	// The disk Uri.
	DiskUri string `pulumi:"diskUri"`
	// The primary staging storage account Id.
	PrimaryStagingAzureStorageAccountId string `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery VHD storage account Id.
	RecoveryAzureStorageAccountId string `pulumi:"recoveryAzureStorageAccountId"`
}

// A2AVmDiskInputDetailsInput is an input type that accepts A2AVmDiskInputDetailsArgs and A2AVmDiskInputDetailsOutput values.
// You can construct a concrete instance of `A2AVmDiskInputDetailsInput` via:
//
//	A2AVmDiskInputDetailsArgs{...}
type A2AVmDiskInputDetailsInput interface {
	pulumi.Input

	ToA2AVmDiskInputDetailsOutput() A2AVmDiskInputDetailsOutput
	ToA2AVmDiskInputDetailsOutputWithContext(context.Context) A2AVmDiskInputDetailsOutput
}

// A2A disk input details.
type A2AVmDiskInputDetailsArgs struct {
	// The disk Uri.
	DiskUri pulumi.StringInput `pulumi:"diskUri"`
	// The primary staging storage account Id.
	PrimaryStagingAzureStorageAccountId pulumi.StringInput `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery VHD storage account Id.
	RecoveryAzureStorageAccountId pulumi.StringInput `pulumi:"recoveryAzureStorageAccountId"`
}

func (A2AVmDiskInputDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AVmDiskInputDetails)(nil)).Elem()
}

func (i A2AVmDiskInputDetailsArgs) ToA2AVmDiskInputDetailsOutput() A2AVmDiskInputDetailsOutput {
	return i.ToA2AVmDiskInputDetailsOutputWithContext(context.Background())
}

func (i A2AVmDiskInputDetailsArgs) ToA2AVmDiskInputDetailsOutputWithContext(ctx context.Context) A2AVmDiskInputDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AVmDiskInputDetailsOutput)
}

// A2AVmDiskInputDetailsArrayInput is an input type that accepts A2AVmDiskInputDetailsArray and A2AVmDiskInputDetailsArrayOutput values.
// You can construct a concrete instance of `A2AVmDiskInputDetailsArrayInput` via:
//
//	A2AVmDiskInputDetailsArray{ A2AVmDiskInputDetailsArgs{...} }
type A2AVmDiskInputDetailsArrayInput interface {
	pulumi.Input

	ToA2AVmDiskInputDetailsArrayOutput() A2AVmDiskInputDetailsArrayOutput
	ToA2AVmDiskInputDetailsArrayOutputWithContext(context.Context) A2AVmDiskInputDetailsArrayOutput
}

type A2AVmDiskInputDetailsArray []A2AVmDiskInputDetailsInput

func (A2AVmDiskInputDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AVmDiskInputDetails)(nil)).Elem()
}

func (i A2AVmDiskInputDetailsArray) ToA2AVmDiskInputDetailsArrayOutput() A2AVmDiskInputDetailsArrayOutput {
	return i.ToA2AVmDiskInputDetailsArrayOutputWithContext(context.Background())
}

func (i A2AVmDiskInputDetailsArray) ToA2AVmDiskInputDetailsArrayOutputWithContext(ctx context.Context) A2AVmDiskInputDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AVmDiskInputDetailsArrayOutput)
}

// A2A disk input details.
type A2AVmDiskInputDetailsOutput struct{ *pulumi.OutputState }

func (A2AVmDiskInputDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AVmDiskInputDetails)(nil)).Elem()
}

func (o A2AVmDiskInputDetailsOutput) ToA2AVmDiskInputDetailsOutput() A2AVmDiskInputDetailsOutput {
	return o
}

func (o A2AVmDiskInputDetailsOutput) ToA2AVmDiskInputDetailsOutputWithContext(ctx context.Context) A2AVmDiskInputDetailsOutput {
	return o
}

// The disk Uri.
func (o A2AVmDiskInputDetailsOutput) DiskUri() pulumi.StringOutput {
	return o.ApplyT(func(v A2AVmDiskInputDetails) string { return v.DiskUri }).(pulumi.StringOutput)
}

// The primary staging storage account Id.
func (o A2AVmDiskInputDetailsOutput) PrimaryStagingAzureStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v A2AVmDiskInputDetails) string { return v.PrimaryStagingAzureStorageAccountId }).(pulumi.StringOutput)
}

// The recovery VHD storage account Id.
func (o A2AVmDiskInputDetailsOutput) RecoveryAzureStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v A2AVmDiskInputDetails) string { return v.RecoveryAzureStorageAccountId }).(pulumi.StringOutput)
}

type A2AVmDiskInputDetailsArrayOutput struct{ *pulumi.OutputState }

func (A2AVmDiskInputDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AVmDiskInputDetails)(nil)).Elem()
}

func (o A2AVmDiskInputDetailsArrayOutput) ToA2AVmDiskInputDetailsArrayOutput() A2AVmDiskInputDetailsArrayOutput {
	return o
}

func (o A2AVmDiskInputDetailsArrayOutput) ToA2AVmDiskInputDetailsArrayOutputWithContext(ctx context.Context) A2AVmDiskInputDetailsArrayOutput {
	return o
}

func (o A2AVmDiskInputDetailsArrayOutput) Index(i pulumi.IntInput) A2AVmDiskInputDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) A2AVmDiskInputDetails {
		return vs[0].([]A2AVmDiskInputDetails)[vs[1].(int)]
	}).(A2AVmDiskInputDetailsOutput)
}

// A2A managed disk input details.
type A2AVmManagedDiskInputDetails struct {
	// The recovery disk encryption information (for one / single pass flows).
	DiskEncryptionInfo *DiskEncryptionInfo `pulumi:"diskEncryptionInfo"`
	// The disk Id.
	DiskId string `pulumi:"diskId"`
	// The primary staging storage account Arm Id.
	PrimaryStagingAzureStorageAccountId string `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery disk encryption set Id.
	RecoveryDiskEncryptionSetId *string `pulumi:"recoveryDiskEncryptionSetId"`
	// The replica disk type. Its an optional value and will be same as source disk type if not user provided.
	RecoveryReplicaDiskAccountType *string `pulumi:"recoveryReplicaDiskAccountType"`
	// The target resource group Arm Id.
	RecoveryResourceGroupId string `pulumi:"recoveryResourceGroupId"`
	// The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
	RecoveryTargetDiskAccountType *string `pulumi:"recoveryTargetDiskAccountType"`
}

// A2AVmManagedDiskInputDetailsInput is an input type that accepts A2AVmManagedDiskInputDetailsArgs and A2AVmManagedDiskInputDetailsOutput values.
// You can construct a concrete instance of `A2AVmManagedDiskInputDetailsInput` via:
//
//	A2AVmManagedDiskInputDetailsArgs{...}
type A2AVmManagedDiskInputDetailsInput interface {
	pulumi.Input

	ToA2AVmManagedDiskInputDetailsOutput() A2AVmManagedDiskInputDetailsOutput
	ToA2AVmManagedDiskInputDetailsOutputWithContext(context.Context) A2AVmManagedDiskInputDetailsOutput
}

// A2A managed disk input details.
type A2AVmManagedDiskInputDetailsArgs struct {
	// The recovery disk encryption information (for one / single pass flows).
	DiskEncryptionInfo DiskEncryptionInfoPtrInput `pulumi:"diskEncryptionInfo"`
	// The disk Id.
	DiskId pulumi.StringInput `pulumi:"diskId"`
	// The primary staging storage account Arm Id.
	PrimaryStagingAzureStorageAccountId pulumi.StringInput `pulumi:"primaryStagingAzureStorageAccountId"`
	// The recovery disk encryption set Id.
	RecoveryDiskEncryptionSetId pulumi.StringPtrInput `pulumi:"recoveryDiskEncryptionSetId"`
	// The replica disk type. Its an optional value and will be same as source disk type if not user provided.
	RecoveryReplicaDiskAccountType pulumi.StringPtrInput `pulumi:"recoveryReplicaDiskAccountType"`
	// The target resource group Arm Id.
	RecoveryResourceGroupId pulumi.StringInput `pulumi:"recoveryResourceGroupId"`
	// The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
	RecoveryTargetDiskAccountType pulumi.StringPtrInput `pulumi:"recoveryTargetDiskAccountType"`
}

func (A2AVmManagedDiskInputDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AVmManagedDiskInputDetails)(nil)).Elem()
}

func (i A2AVmManagedDiskInputDetailsArgs) ToA2AVmManagedDiskInputDetailsOutput() A2AVmManagedDiskInputDetailsOutput {
	return i.ToA2AVmManagedDiskInputDetailsOutputWithContext(context.Background())
}

func (i A2AVmManagedDiskInputDetailsArgs) ToA2AVmManagedDiskInputDetailsOutputWithContext(ctx context.Context) A2AVmManagedDiskInputDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AVmManagedDiskInputDetailsOutput)
}

// A2AVmManagedDiskInputDetailsArrayInput is an input type that accepts A2AVmManagedDiskInputDetailsArray and A2AVmManagedDiskInputDetailsArrayOutput values.
// You can construct a concrete instance of `A2AVmManagedDiskInputDetailsArrayInput` via:
//
//	A2AVmManagedDiskInputDetailsArray{ A2AVmManagedDiskInputDetailsArgs{...} }
type A2AVmManagedDiskInputDetailsArrayInput interface {
	pulumi.Input

	ToA2AVmManagedDiskInputDetailsArrayOutput() A2AVmManagedDiskInputDetailsArrayOutput
	ToA2AVmManagedDiskInputDetailsArrayOutputWithContext(context.Context) A2AVmManagedDiskInputDetailsArrayOutput
}

type A2AVmManagedDiskInputDetailsArray []A2AVmManagedDiskInputDetailsInput

func (A2AVmManagedDiskInputDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AVmManagedDiskInputDetails)(nil)).Elem()
}

func (i A2AVmManagedDiskInputDetailsArray) ToA2AVmManagedDiskInputDetailsArrayOutput() A2AVmManagedDiskInputDetailsArrayOutput {
	return i.ToA2AVmManagedDiskInputDetailsArrayOutputWithContext(context.Background())
}

func (i A2AVmManagedDiskInputDetailsArray) ToA2AVmManagedDiskInputDetailsArrayOutputWithContext(ctx context.Context) A2AVmManagedDiskInputDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(A2AVmManagedDiskInputDetailsArrayOutput)
}

// A2A managed disk input details.
type A2AVmManagedDiskInputDetailsOutput struct{ *pulumi.OutputState }

func (A2AVmManagedDiskInputDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AVmManagedDiskInputDetails)(nil)).Elem()
}

func (o A2AVmManagedDiskInputDetailsOutput) ToA2AVmManagedDiskInputDetailsOutput() A2AVmManagedDiskInputDetailsOutput {
	return o
}

func (o A2AVmManagedDiskInputDetailsOutput) ToA2AVmManagedDiskInputDetailsOutputWithContext(ctx context.Context) A2AVmManagedDiskInputDetailsOutput {
	return o
}

// The recovery disk encryption information (for one / single pass flows).
func (o A2AVmManagedDiskInputDetailsOutput) DiskEncryptionInfo() DiskEncryptionInfoPtrOutput {
	return o.ApplyT(func(v A2AVmManagedDiskInputDetails) *DiskEncryptionInfo { return v.DiskEncryptionInfo }).(DiskEncryptionInfoPtrOutput)
}

// The disk Id.
func (o A2AVmManagedDiskInputDetailsOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v A2AVmManagedDiskInputDetails) string { return v.DiskId }).(pulumi.StringOutput)
}

// The primary staging storage account Arm Id.
func (o A2AVmManagedDiskInputDetailsOutput) PrimaryStagingAzureStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v A2AVmManagedDiskInputDetails) string { return v.PrimaryStagingAzureStorageAccountId }).(pulumi.StringOutput)
}

// The recovery disk encryption set Id.
func (o A2AVmManagedDiskInputDetailsOutput) RecoveryDiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AVmManagedDiskInputDetails) *string { return v.RecoveryDiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The replica disk type. Its an optional value and will be same as source disk type if not user provided.
func (o A2AVmManagedDiskInputDetailsOutput) RecoveryReplicaDiskAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AVmManagedDiskInputDetails) *string { return v.RecoveryReplicaDiskAccountType }).(pulumi.StringPtrOutput)
}

// The target resource group Arm Id.
func (o A2AVmManagedDiskInputDetailsOutput) RecoveryResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v A2AVmManagedDiskInputDetails) string { return v.RecoveryResourceGroupId }).(pulumi.StringOutput)
}

// The target disk type after failover. Its an optional value and will be same as source disk type if not user provided.
func (o A2AVmManagedDiskInputDetailsOutput) RecoveryTargetDiskAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AVmManagedDiskInputDetails) *string { return v.RecoveryTargetDiskAccountType }).(pulumi.StringPtrOutput)
}

type A2AVmManagedDiskInputDetailsArrayOutput struct{ *pulumi.OutputState }

func (A2AVmManagedDiskInputDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AVmManagedDiskInputDetails)(nil)).Elem()
}

func (o A2AVmManagedDiskInputDetailsArrayOutput) ToA2AVmManagedDiskInputDetailsArrayOutput() A2AVmManagedDiskInputDetailsArrayOutput {
	return o
}

func (o A2AVmManagedDiskInputDetailsArrayOutput) ToA2AVmManagedDiskInputDetailsArrayOutputWithContext(ctx context.Context) A2AVmManagedDiskInputDetailsArrayOutput {
	return o
}

func (o A2AVmManagedDiskInputDetailsArrayOutput) Index(i pulumi.IntInput) A2AVmManagedDiskInputDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) A2AVmManagedDiskInputDetails {
		return vs[0].([]A2AVmManagedDiskInputDetails)[vs[1].(int)]
	}).(A2AVmManagedDiskInputDetailsOutput)
}

// Zone details data.
type A2AZoneDetailsResponse struct {
	// Source zone info.
	Source *string `pulumi:"source"`
	// The target zone info.
	Target *string `pulumi:"target"`
}

// Zone details data.
type A2AZoneDetailsResponseOutput struct{ *pulumi.OutputState }

func (A2AZoneDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*A2AZoneDetailsResponse)(nil)).Elem()
}

func (o A2AZoneDetailsResponseOutput) ToA2AZoneDetailsResponseOutput() A2AZoneDetailsResponseOutput {
	return o
}

func (o A2AZoneDetailsResponseOutput) ToA2AZoneDetailsResponseOutputWithContext(ctx context.Context) A2AZoneDetailsResponseOutput {
	return o
}

// Source zone info.
func (o A2AZoneDetailsResponseOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AZoneDetailsResponse) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The target zone info.
func (o A2AZoneDetailsResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v A2AZoneDetailsResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type A2AZoneDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (A2AZoneDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]A2AZoneDetailsResponse)(nil)).Elem()
}

func (o A2AZoneDetailsResponseArrayOutput) ToA2AZoneDetailsResponseArrayOutput() A2AZoneDetailsResponseArrayOutput {
	return o
}

func (o A2AZoneDetailsResponseArrayOutput) ToA2AZoneDetailsResponseArrayOutputWithContext(ctx context.Context) A2AZoneDetailsResponseArrayOutput {
	return o
}

func (o A2AZoneDetailsResponseArrayOutput) Index(i pulumi.IntInput) A2AZoneDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) A2AZoneDetailsResponse {
		return vs[0].([]A2AZoneDetailsResponse)[vs[1].(int)]
	}).(A2AZoneDetailsResponseOutput)
}

// The properties of an add provider request.
type AddRecoveryServicesProviderInputProperties struct {
	// The identity provider input for DRA authentication.
	AuthenticationIdentityInput IdentityProviderInput `pulumi:"authenticationIdentityInput"`
	// The Bios Id of the machine.
	BiosId *string `pulumi:"biosId"`
	// The identity provider input for data plane authentication.
	DataPlaneAuthenticationIdentityInput *IdentityProviderInput `pulumi:"dataPlaneAuthenticationIdentityInput"`
	// The Id of the machine where the provider is getting added.
	MachineId *string `pulumi:"machineId"`
	// The name of the machine where the provider is getting added.
	MachineName string `pulumi:"machineName"`
	// The identity provider input for resource access.
	ResourceAccessIdentityInput IdentityProviderInput `pulumi:"resourceAccessIdentityInput"`
}

// AddRecoveryServicesProviderInputPropertiesInput is an input type that accepts AddRecoveryServicesProviderInputPropertiesArgs and AddRecoveryServicesProviderInputPropertiesOutput values.
// You can construct a concrete instance of `AddRecoveryServicesProviderInputPropertiesInput` via:
//
//	AddRecoveryServicesProviderInputPropertiesArgs{...}
type AddRecoveryServicesProviderInputPropertiesInput interface {
	pulumi.Input

	ToAddRecoveryServicesProviderInputPropertiesOutput() AddRecoveryServicesProviderInputPropertiesOutput
	ToAddRecoveryServicesProviderInputPropertiesOutputWithContext(context.Context) AddRecoveryServicesProviderInputPropertiesOutput
}

// The properties of an add provider request.
type AddRecoveryServicesProviderInputPropertiesArgs struct {
	// The identity provider input for DRA authentication.
	AuthenticationIdentityInput IdentityProviderInputInput `pulumi:"authenticationIdentityInput"`
	// The Bios Id of the machine.
	BiosId pulumi.StringPtrInput `pulumi:"biosId"`
	// The identity provider input for data plane authentication.
	DataPlaneAuthenticationIdentityInput IdentityProviderInputPtrInput `pulumi:"dataPlaneAuthenticationIdentityInput"`
	// The Id of the machine where the provider is getting added.
	MachineId pulumi.StringPtrInput `pulumi:"machineId"`
	// The name of the machine where the provider is getting added.
	MachineName pulumi.StringInput `pulumi:"machineName"`
	// The identity provider input for resource access.
	ResourceAccessIdentityInput IdentityProviderInputInput `pulumi:"resourceAccessIdentityInput"`
}

func (AddRecoveryServicesProviderInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddRecoveryServicesProviderInputProperties)(nil)).Elem()
}

func (i AddRecoveryServicesProviderInputPropertiesArgs) ToAddRecoveryServicesProviderInputPropertiesOutput() AddRecoveryServicesProviderInputPropertiesOutput {
	return i.ToAddRecoveryServicesProviderInputPropertiesOutputWithContext(context.Background())
}

func (i AddRecoveryServicesProviderInputPropertiesArgs) ToAddRecoveryServicesProviderInputPropertiesOutputWithContext(ctx context.Context) AddRecoveryServicesProviderInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddRecoveryServicesProviderInputPropertiesOutput)
}

// The properties of an add provider request.
type AddRecoveryServicesProviderInputPropertiesOutput struct{ *pulumi.OutputState }

func (AddRecoveryServicesProviderInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddRecoveryServicesProviderInputProperties)(nil)).Elem()
}

func (o AddRecoveryServicesProviderInputPropertiesOutput) ToAddRecoveryServicesProviderInputPropertiesOutput() AddRecoveryServicesProviderInputPropertiesOutput {
	return o
}

func (o AddRecoveryServicesProviderInputPropertiesOutput) ToAddRecoveryServicesProviderInputPropertiesOutputWithContext(ctx context.Context) AddRecoveryServicesProviderInputPropertiesOutput {
	return o
}

// The identity provider input for DRA authentication.
func (o AddRecoveryServicesProviderInputPropertiesOutput) AuthenticationIdentityInput() IdentityProviderInputOutput {
	return o.ApplyT(func(v AddRecoveryServicesProviderInputProperties) IdentityProviderInput {
		return v.AuthenticationIdentityInput
	}).(IdentityProviderInputOutput)
}

// The Bios Id of the machine.
func (o AddRecoveryServicesProviderInputPropertiesOutput) BiosId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddRecoveryServicesProviderInputProperties) *string { return v.BiosId }).(pulumi.StringPtrOutput)
}

// The identity provider input for data plane authentication.
func (o AddRecoveryServicesProviderInputPropertiesOutput) DataPlaneAuthenticationIdentityInput() IdentityProviderInputPtrOutput {
	return o.ApplyT(func(v AddRecoveryServicesProviderInputProperties) *IdentityProviderInput {
		return v.DataPlaneAuthenticationIdentityInput
	}).(IdentityProviderInputPtrOutput)
}

// The Id of the machine where the provider is getting added.
func (o AddRecoveryServicesProviderInputPropertiesOutput) MachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddRecoveryServicesProviderInputProperties) *string { return v.MachineId }).(pulumi.StringPtrOutput)
}

// The name of the machine where the provider is getting added.
func (o AddRecoveryServicesProviderInputPropertiesOutput) MachineName() pulumi.StringOutput {
	return o.ApplyT(func(v AddRecoveryServicesProviderInputProperties) string { return v.MachineName }).(pulumi.StringOutput)
}

// The identity provider input for resource access.
func (o AddRecoveryServicesProviderInputPropertiesOutput) ResourceAccessIdentityInput() IdentityProviderInputOutput {
	return o.ApplyT(func(v AddRecoveryServicesProviderInputProperties) IdentityProviderInput {
		return v.ResourceAccessIdentityInput
	}).(IdentityProviderInputOutput)
}

// The properties of an add vCenter request.
type AddVCenterRequestProperties struct {
	// The friendly name of the vCenter.
	FriendlyName *string `pulumi:"friendlyName"`
	// The IP address of the vCenter to be discovered.
	IpAddress *string `pulumi:"ipAddress"`
	// The port number for discovery.
	Port *string `pulumi:"port"`
	// The process server Id from where the discovery is orchestrated.
	ProcessServerId *string `pulumi:"processServerId"`
	// The account Id which has privileges to discover the vCenter.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
}

// AddVCenterRequestPropertiesInput is an input type that accepts AddVCenterRequestPropertiesArgs and AddVCenterRequestPropertiesOutput values.
// You can construct a concrete instance of `AddVCenterRequestPropertiesInput` via:
//
//	AddVCenterRequestPropertiesArgs{...}
type AddVCenterRequestPropertiesInput interface {
	pulumi.Input

	ToAddVCenterRequestPropertiesOutput() AddVCenterRequestPropertiesOutput
	ToAddVCenterRequestPropertiesOutputWithContext(context.Context) AddVCenterRequestPropertiesOutput
}

// The properties of an add vCenter request.
type AddVCenterRequestPropertiesArgs struct {
	// The friendly name of the vCenter.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// The IP address of the vCenter to be discovered.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The port number for discovery.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The process server Id from where the discovery is orchestrated.
	ProcessServerId pulumi.StringPtrInput `pulumi:"processServerId"`
	// The account Id which has privileges to discover the vCenter.
	RunAsAccountId pulumi.StringPtrInput `pulumi:"runAsAccountId"`
}

func (AddVCenterRequestPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddVCenterRequestProperties)(nil)).Elem()
}

func (i AddVCenterRequestPropertiesArgs) ToAddVCenterRequestPropertiesOutput() AddVCenterRequestPropertiesOutput {
	return i.ToAddVCenterRequestPropertiesOutputWithContext(context.Background())
}

func (i AddVCenterRequestPropertiesArgs) ToAddVCenterRequestPropertiesOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddVCenterRequestPropertiesOutput)
}

func (i AddVCenterRequestPropertiesArgs) ToAddVCenterRequestPropertiesPtrOutput() AddVCenterRequestPropertiesPtrOutput {
	return i.ToAddVCenterRequestPropertiesPtrOutputWithContext(context.Background())
}

func (i AddVCenterRequestPropertiesArgs) ToAddVCenterRequestPropertiesPtrOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddVCenterRequestPropertiesOutput).ToAddVCenterRequestPropertiesPtrOutputWithContext(ctx)
}

// AddVCenterRequestPropertiesPtrInput is an input type that accepts AddVCenterRequestPropertiesArgs, AddVCenterRequestPropertiesPtr and AddVCenterRequestPropertiesPtrOutput values.
// You can construct a concrete instance of `AddVCenterRequestPropertiesPtrInput` via:
//
//	        AddVCenterRequestPropertiesArgs{...}
//
//	or:
//
//	        nil
type AddVCenterRequestPropertiesPtrInput interface {
	pulumi.Input

	ToAddVCenterRequestPropertiesPtrOutput() AddVCenterRequestPropertiesPtrOutput
	ToAddVCenterRequestPropertiesPtrOutputWithContext(context.Context) AddVCenterRequestPropertiesPtrOutput
}

type addVCenterRequestPropertiesPtrType AddVCenterRequestPropertiesArgs

func AddVCenterRequestPropertiesPtr(v *AddVCenterRequestPropertiesArgs) AddVCenterRequestPropertiesPtrInput {
	return (*addVCenterRequestPropertiesPtrType)(v)
}

func (*addVCenterRequestPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddVCenterRequestProperties)(nil)).Elem()
}

func (i *addVCenterRequestPropertiesPtrType) ToAddVCenterRequestPropertiesPtrOutput() AddVCenterRequestPropertiesPtrOutput {
	return i.ToAddVCenterRequestPropertiesPtrOutputWithContext(context.Background())
}

func (i *addVCenterRequestPropertiesPtrType) ToAddVCenterRequestPropertiesPtrOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddVCenterRequestPropertiesPtrOutput)
}

// The properties of an add vCenter request.
type AddVCenterRequestPropertiesOutput struct{ *pulumi.OutputState }

func (AddVCenterRequestPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddVCenterRequestProperties)(nil)).Elem()
}

func (o AddVCenterRequestPropertiesOutput) ToAddVCenterRequestPropertiesOutput() AddVCenterRequestPropertiesOutput {
	return o
}

func (o AddVCenterRequestPropertiesOutput) ToAddVCenterRequestPropertiesOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesOutput {
	return o
}

func (o AddVCenterRequestPropertiesOutput) ToAddVCenterRequestPropertiesPtrOutput() AddVCenterRequestPropertiesPtrOutput {
	return o.ToAddVCenterRequestPropertiesPtrOutputWithContext(context.Background())
}

func (o AddVCenterRequestPropertiesOutput) ToAddVCenterRequestPropertiesPtrOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddVCenterRequestProperties) *AddVCenterRequestProperties {
		return &v
	}).(AddVCenterRequestPropertiesPtrOutput)
}

// The friendly name of the vCenter.
func (o AddVCenterRequestPropertiesOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddVCenterRequestProperties) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The IP address of the vCenter to be discovered.
func (o AddVCenterRequestPropertiesOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddVCenterRequestProperties) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The port number for discovery.
func (o AddVCenterRequestPropertiesOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddVCenterRequestProperties) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The process server Id from where the discovery is orchestrated.
func (o AddVCenterRequestPropertiesOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddVCenterRequestProperties) *string { return v.ProcessServerId }).(pulumi.StringPtrOutput)
}

// The account Id which has privileges to discover the vCenter.
func (o AddVCenterRequestPropertiesOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AddVCenterRequestProperties) *string { return v.RunAsAccountId }).(pulumi.StringPtrOutput)
}

type AddVCenterRequestPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AddVCenterRequestPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddVCenterRequestProperties)(nil)).Elem()
}

func (o AddVCenterRequestPropertiesPtrOutput) ToAddVCenterRequestPropertiesPtrOutput() AddVCenterRequestPropertiesPtrOutput {
	return o
}

func (o AddVCenterRequestPropertiesPtrOutput) ToAddVCenterRequestPropertiesPtrOutputWithContext(ctx context.Context) AddVCenterRequestPropertiesPtrOutput {
	return o
}

func (o AddVCenterRequestPropertiesPtrOutput) Elem() AddVCenterRequestPropertiesOutput {
	return o.ApplyT(func(v *AddVCenterRequestProperties) AddVCenterRequestProperties {
		if v != nil {
			return *v
		}
		var ret AddVCenterRequestProperties
		return ret
	}).(AddVCenterRequestPropertiesOutput)
}

// The friendly name of the vCenter.
func (o AddVCenterRequestPropertiesPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddVCenterRequestProperties) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// The IP address of the vCenter to be discovered.
func (o AddVCenterRequestPropertiesPtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddVCenterRequestProperties) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The port number for discovery.
func (o AddVCenterRequestPropertiesPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddVCenterRequestProperties) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// The process server Id from where the discovery is orchestrated.
func (o AddVCenterRequestPropertiesPtrOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddVCenterRequestProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProcessServerId
	}).(pulumi.StringPtrOutput)
}

// The account Id which has privileges to discover the vCenter.
func (o AddVCenterRequestPropertiesPtrOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddVCenterRequestProperties) *string {
		if v == nil {
			return nil
		}
		return v.RunAsAccountId
	}).(pulumi.StringPtrOutput)
}

// Agent details.
type AgentDetailsResponse struct {
	// The Id of the agent running on the server.
	AgentId string `pulumi:"agentId"`
	// The machine BIOS Id.
	BiosId string `pulumi:"biosId"`
	// The disks.
	Disks []AgentDiskDetailsResponse `pulumi:"disks"`
	// The machine FQDN.
	Fqdn string `pulumi:"fqdn"`
	// The Id of the machine to which the agent is registered.
	MachineId string `pulumi:"machineId"`
}

// Agent details.
type AgentDetailsResponseOutput struct{ *pulumi.OutputState }

func (AgentDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentDetailsResponse)(nil)).Elem()
}

func (o AgentDetailsResponseOutput) ToAgentDetailsResponseOutput() AgentDetailsResponseOutput {
	return o
}

func (o AgentDetailsResponseOutput) ToAgentDetailsResponseOutputWithContext(ctx context.Context) AgentDetailsResponseOutput {
	return o
}

// The Id of the agent running on the server.
func (o AgentDetailsResponseOutput) AgentId() pulumi.StringOutput {
	return o.ApplyT(func(v AgentDetailsResponse) string { return v.AgentId }).(pulumi.StringOutput)
}

// The machine BIOS Id.
func (o AgentDetailsResponseOutput) BiosId() pulumi.StringOutput {
	return o.ApplyT(func(v AgentDetailsResponse) string { return v.BiosId }).(pulumi.StringOutput)
}

// The disks.
func (o AgentDetailsResponseOutput) Disks() AgentDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v AgentDetailsResponse) []AgentDiskDetailsResponse { return v.Disks }).(AgentDiskDetailsResponseArrayOutput)
}

// The machine FQDN.
func (o AgentDetailsResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v AgentDetailsResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The Id of the machine to which the agent is registered.
func (o AgentDetailsResponseOutput) MachineId() pulumi.StringOutput {
	return o.ApplyT(func(v AgentDetailsResponse) string { return v.MachineId }).(pulumi.StringOutput)
}

type AgentDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (AgentDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentDetailsResponse)(nil)).Elem()
}

func (o AgentDetailsResponseArrayOutput) ToAgentDetailsResponseArrayOutput() AgentDetailsResponseArrayOutput {
	return o
}

func (o AgentDetailsResponseArrayOutput) ToAgentDetailsResponseArrayOutputWithContext(ctx context.Context) AgentDetailsResponseArrayOutput {
	return o
}

func (o AgentDetailsResponseArrayOutput) Index(i pulumi.IntInput) AgentDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentDetailsResponse {
		return vs[0].([]AgentDetailsResponse)[vs[1].(int)]
	}).(AgentDetailsResponseOutput)
}

// Agent disk details.
type AgentDiskDetailsResponse struct {
	// The disk capacity in bytes.
	CapacityInBytes float64 `pulumi:"capacityInBytes"`
	// The disk Id.
	DiskId string `pulumi:"diskId"`
	// The disk name.
	DiskName string `pulumi:"diskName"`
	// A value indicating whether the disk is the OS disk.
	IsOSDisk string `pulumi:"isOSDisk"`
	// The lun of disk.
	LunId int `pulumi:"lunId"`
}

// Agent disk details.
type AgentDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (AgentDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentDiskDetailsResponse)(nil)).Elem()
}

func (o AgentDiskDetailsResponseOutput) ToAgentDiskDetailsResponseOutput() AgentDiskDetailsResponseOutput {
	return o
}

func (o AgentDiskDetailsResponseOutput) ToAgentDiskDetailsResponseOutputWithContext(ctx context.Context) AgentDiskDetailsResponseOutput {
	return o
}

// The disk capacity in bytes.
func (o AgentDiskDetailsResponseOutput) CapacityInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v AgentDiskDetailsResponse) float64 { return v.CapacityInBytes }).(pulumi.Float64Output)
}

// The disk Id.
func (o AgentDiskDetailsResponseOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v AgentDiskDetailsResponse) string { return v.DiskId }).(pulumi.StringOutput)
}

// The disk name.
func (o AgentDiskDetailsResponseOutput) DiskName() pulumi.StringOutput {
	return o.ApplyT(func(v AgentDiskDetailsResponse) string { return v.DiskName }).(pulumi.StringOutput)
}

// A value indicating whether the disk is the OS disk.
func (o AgentDiskDetailsResponseOutput) IsOSDisk() pulumi.StringOutput {
	return o.ApplyT(func(v AgentDiskDetailsResponse) string { return v.IsOSDisk }).(pulumi.StringOutput)
}

// The lun of disk.
func (o AgentDiskDetailsResponseOutput) LunId() pulumi.IntOutput {
	return o.ApplyT(func(v AgentDiskDetailsResponse) int { return v.LunId }).(pulumi.IntOutput)
}

type AgentDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (AgentDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentDiskDetailsResponse)(nil)).Elem()
}

func (o AgentDiskDetailsResponseArrayOutput) ToAgentDiskDetailsResponseArrayOutput() AgentDiskDetailsResponseArrayOutput {
	return o
}

func (o AgentDiskDetailsResponseArrayOutput) ToAgentDiskDetailsResponseArrayOutputWithContext(ctx context.Context) AgentDiskDetailsResponseArrayOutput {
	return o
}

func (o AgentDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) AgentDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentDiskDetailsResponse {
		return vs[0].([]AgentDiskDetailsResponse)[vs[1].(int)]
	}).(AgentDiskDetailsResponseOutput)
}

// Appliance details of the migration item.
type ApplianceMonitoringDetailsResponse struct {
	// The appliance CPU details.
	CpuDetails ApplianceResourceDetailsResponse `pulumi:"cpuDetails"`
	// The appliance datastore snapshot details.
	DatastoreSnapshot []DataStoreUtilizationDetailsResponse `pulumi:"datastoreSnapshot"`
	// The disk replication details.
	DisksReplicationDetails ApplianceResourceDetailsResponse `pulumi:"disksReplicationDetails"`
	// The ESXi NFC buffer details.
	EsxiNfcBuffer ApplianceResourceDetailsResponse `pulumi:"esxiNfcBuffer"`
	// The appliance network bandwidth details.
	NetworkBandwidth ApplianceResourceDetailsResponse `pulumi:"networkBandwidth"`
	// The appliance RAM details.
	RamDetails ApplianceResourceDetailsResponse `pulumi:"ramDetails"`
}

// Appliance details of the migration item.
type ApplianceMonitoringDetailsResponseOutput struct{ *pulumi.OutputState }

func (ApplianceMonitoringDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceMonitoringDetailsResponse)(nil)).Elem()
}

func (o ApplianceMonitoringDetailsResponseOutput) ToApplianceMonitoringDetailsResponseOutput() ApplianceMonitoringDetailsResponseOutput {
	return o
}

func (o ApplianceMonitoringDetailsResponseOutput) ToApplianceMonitoringDetailsResponseOutputWithContext(ctx context.Context) ApplianceMonitoringDetailsResponseOutput {
	return o
}

// The appliance CPU details.
func (o ApplianceMonitoringDetailsResponseOutput) CpuDetails() ApplianceResourceDetailsResponseOutput {
	return o.ApplyT(func(v ApplianceMonitoringDetailsResponse) ApplianceResourceDetailsResponse { return v.CpuDetails }).(ApplianceResourceDetailsResponseOutput)
}

// The appliance datastore snapshot details.
func (o ApplianceMonitoringDetailsResponseOutput) DatastoreSnapshot() DataStoreUtilizationDetailsResponseArrayOutput {
	return o.ApplyT(func(v ApplianceMonitoringDetailsResponse) []DataStoreUtilizationDetailsResponse {
		return v.DatastoreSnapshot
	}).(DataStoreUtilizationDetailsResponseArrayOutput)
}

// The disk replication details.
func (o ApplianceMonitoringDetailsResponseOutput) DisksReplicationDetails() ApplianceResourceDetailsResponseOutput {
	return o.ApplyT(func(v ApplianceMonitoringDetailsResponse) ApplianceResourceDetailsResponse {
		return v.DisksReplicationDetails
	}).(ApplianceResourceDetailsResponseOutput)
}

// The ESXi NFC buffer details.
func (o ApplianceMonitoringDetailsResponseOutput) EsxiNfcBuffer() ApplianceResourceDetailsResponseOutput {
	return o.ApplyT(func(v ApplianceMonitoringDetailsResponse) ApplianceResourceDetailsResponse { return v.EsxiNfcBuffer }).(ApplianceResourceDetailsResponseOutput)
}

// The appliance network bandwidth details.
func (o ApplianceMonitoringDetailsResponseOutput) NetworkBandwidth() ApplianceResourceDetailsResponseOutput {
	return o.ApplyT(func(v ApplianceMonitoringDetailsResponse) ApplianceResourceDetailsResponse { return v.NetworkBandwidth }).(ApplianceResourceDetailsResponseOutput)
}

// The appliance RAM details.
func (o ApplianceMonitoringDetailsResponseOutput) RamDetails() ApplianceResourceDetailsResponseOutput {
	return o.ApplyT(func(v ApplianceMonitoringDetailsResponse) ApplianceResourceDetailsResponse { return v.RamDetails }).(ApplianceResourceDetailsResponseOutput)
}

type ApplianceMonitoringDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplianceMonitoringDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceMonitoringDetailsResponse)(nil)).Elem()
}

func (o ApplianceMonitoringDetailsResponsePtrOutput) ToApplianceMonitoringDetailsResponsePtrOutput() ApplianceMonitoringDetailsResponsePtrOutput {
	return o
}

func (o ApplianceMonitoringDetailsResponsePtrOutput) ToApplianceMonitoringDetailsResponsePtrOutputWithContext(ctx context.Context) ApplianceMonitoringDetailsResponsePtrOutput {
	return o
}

func (o ApplianceMonitoringDetailsResponsePtrOutput) Elem() ApplianceMonitoringDetailsResponseOutput {
	return o.ApplyT(func(v *ApplianceMonitoringDetailsResponse) ApplianceMonitoringDetailsResponse {
		if v != nil {
			return *v
		}
		var ret ApplianceMonitoringDetailsResponse
		return ret
	}).(ApplianceMonitoringDetailsResponseOutput)
}

// The appliance CPU details.
func (o ApplianceMonitoringDetailsResponsePtrOutput) CpuDetails() ApplianceResourceDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ApplianceMonitoringDetailsResponse) *ApplianceResourceDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.CpuDetails
	}).(ApplianceResourceDetailsResponsePtrOutput)
}

// The appliance datastore snapshot details.
func (o ApplianceMonitoringDetailsResponsePtrOutput) DatastoreSnapshot() DataStoreUtilizationDetailsResponseArrayOutput {
	return o.ApplyT(func(v *ApplianceMonitoringDetailsResponse) []DataStoreUtilizationDetailsResponse {
		if v == nil {
			return nil
		}
		return v.DatastoreSnapshot
	}).(DataStoreUtilizationDetailsResponseArrayOutput)
}

// The disk replication details.
func (o ApplianceMonitoringDetailsResponsePtrOutput) DisksReplicationDetails() ApplianceResourceDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ApplianceMonitoringDetailsResponse) *ApplianceResourceDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.DisksReplicationDetails
	}).(ApplianceResourceDetailsResponsePtrOutput)
}

// The ESXi NFC buffer details.
func (o ApplianceMonitoringDetailsResponsePtrOutput) EsxiNfcBuffer() ApplianceResourceDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ApplianceMonitoringDetailsResponse) *ApplianceResourceDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.EsxiNfcBuffer
	}).(ApplianceResourceDetailsResponsePtrOutput)
}

// The appliance network bandwidth details.
func (o ApplianceMonitoringDetailsResponsePtrOutput) NetworkBandwidth() ApplianceResourceDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ApplianceMonitoringDetailsResponse) *ApplianceResourceDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.NetworkBandwidth
	}).(ApplianceResourceDetailsResponsePtrOutput)
}

// The appliance RAM details.
func (o ApplianceMonitoringDetailsResponsePtrOutput) RamDetails() ApplianceResourceDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ApplianceMonitoringDetailsResponse) *ApplianceResourceDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.RamDetails
	}).(ApplianceResourceDetailsResponsePtrOutput)
}

// Details of the appliance resource.
type ApplianceResourceDetailsResponse struct {
	// A value indicating the total capacity of appliance resource.
	Capacity float64 `pulumi:"capacity"`
	// A value indicating the utilization percentage by gateway agent on appliance.
	ProcessUtilization float64 `pulumi:"processUtilization"`
	// A value indicating the status of appliance resource.
	Status string `pulumi:"status"`
	// A value indicating the total utilization percentage for all processes on the appliance.
	TotalUtilization float64 `pulumi:"totalUtilization"`
}

// Details of the appliance resource.
type ApplianceResourceDetailsResponseOutput struct{ *pulumi.OutputState }

func (ApplianceResourceDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceResourceDetailsResponse)(nil)).Elem()
}

func (o ApplianceResourceDetailsResponseOutput) ToApplianceResourceDetailsResponseOutput() ApplianceResourceDetailsResponseOutput {
	return o
}

func (o ApplianceResourceDetailsResponseOutput) ToApplianceResourceDetailsResponseOutputWithContext(ctx context.Context) ApplianceResourceDetailsResponseOutput {
	return o
}

// A value indicating the total capacity of appliance resource.
func (o ApplianceResourceDetailsResponseOutput) Capacity() pulumi.Float64Output {
	return o.ApplyT(func(v ApplianceResourceDetailsResponse) float64 { return v.Capacity }).(pulumi.Float64Output)
}

// A value indicating the utilization percentage by gateway agent on appliance.
func (o ApplianceResourceDetailsResponseOutput) ProcessUtilization() pulumi.Float64Output {
	return o.ApplyT(func(v ApplianceResourceDetailsResponse) float64 { return v.ProcessUtilization }).(pulumi.Float64Output)
}

// A value indicating the status of appliance resource.
func (o ApplianceResourceDetailsResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ApplianceResourceDetailsResponse) string { return v.Status }).(pulumi.StringOutput)
}

// A value indicating the total utilization percentage for all processes on the appliance.
func (o ApplianceResourceDetailsResponseOutput) TotalUtilization() pulumi.Float64Output {
	return o.ApplyT(func(v ApplianceResourceDetailsResponse) float64 { return v.TotalUtilization }).(pulumi.Float64Output)
}

type ApplianceResourceDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplianceResourceDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceResourceDetailsResponse)(nil)).Elem()
}

func (o ApplianceResourceDetailsResponsePtrOutput) ToApplianceResourceDetailsResponsePtrOutput() ApplianceResourceDetailsResponsePtrOutput {
	return o
}

func (o ApplianceResourceDetailsResponsePtrOutput) ToApplianceResourceDetailsResponsePtrOutputWithContext(ctx context.Context) ApplianceResourceDetailsResponsePtrOutput {
	return o
}

func (o ApplianceResourceDetailsResponsePtrOutput) Elem() ApplianceResourceDetailsResponseOutput {
	return o.ApplyT(func(v *ApplianceResourceDetailsResponse) ApplianceResourceDetailsResponse {
		if v != nil {
			return *v
		}
		var ret ApplianceResourceDetailsResponse
		return ret
	}).(ApplianceResourceDetailsResponseOutput)
}

// A value indicating the total capacity of appliance resource.
func (o ApplianceResourceDetailsResponsePtrOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ApplianceResourceDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.Float64PtrOutput)
}

// A value indicating the utilization percentage by gateway agent on appliance.
func (o ApplianceResourceDetailsResponsePtrOutput) ProcessUtilization() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ApplianceResourceDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.ProcessUtilization
	}).(pulumi.Float64PtrOutput)
}

// A value indicating the status of appliance resource.
func (o ApplianceResourceDetailsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceResourceDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// A value indicating the total utilization percentage for all processes on the appliance.
func (o ApplianceResourceDetailsResponsePtrOutput) TotalUtilization() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ApplianceResourceDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.TotalUtilization
	}).(pulumi.Float64PtrOutput)
}

// AzureBackupServer (DPMVenus) workload-specific protection container.
type AzureBackupServerContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister *bool `pulumi:"canReRegister"`
	// ID of container.
	ContainerId *string `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureBackupServerContainer'.
	ContainerType string `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion *string `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers []string `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo *DPMContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable *bool `pulumi:"upgradeAvailable"`
}

// AzureBackupServerContainerInput is an input type that accepts AzureBackupServerContainerArgs and AzureBackupServerContainerOutput values.
// You can construct a concrete instance of `AzureBackupServerContainerInput` via:
//
//	AzureBackupServerContainerArgs{...}
type AzureBackupServerContainerInput interface {
	pulumi.Input

	ToAzureBackupServerContainerOutput() AzureBackupServerContainerOutput
	ToAzureBackupServerContainerOutputWithContext(context.Context) AzureBackupServerContainerOutput
}

// AzureBackupServer (DPMVenus) workload-specific protection container.
type AzureBackupServerContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister pulumi.BoolPtrInput `pulumi:"canReRegister"`
	// ID of container.
	ContainerId pulumi.StringPtrInput `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureBackupServerContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion pulumi.StringPtrInput `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers pulumi.StringArrayInput `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo DPMContainerExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount pulumi.Float64PtrInput `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus pulumi.StringPtrInput `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable pulumi.BoolPtrInput `pulumi:"upgradeAvailable"`
}

func (AzureBackupServerContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBackupServerContainer)(nil)).Elem()
}

func (i AzureBackupServerContainerArgs) ToAzureBackupServerContainerOutput() AzureBackupServerContainerOutput {
	return i.ToAzureBackupServerContainerOutputWithContext(context.Background())
}

func (i AzureBackupServerContainerArgs) ToAzureBackupServerContainerOutputWithContext(ctx context.Context) AzureBackupServerContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBackupServerContainerOutput)
}

func (i AzureBackupServerContainerArgs) ToAzureBackupServerContainerPtrOutput() AzureBackupServerContainerPtrOutput {
	return i.ToAzureBackupServerContainerPtrOutputWithContext(context.Background())
}

func (i AzureBackupServerContainerArgs) ToAzureBackupServerContainerPtrOutputWithContext(ctx context.Context) AzureBackupServerContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBackupServerContainerOutput).ToAzureBackupServerContainerPtrOutputWithContext(ctx)
}

// AzureBackupServerContainerPtrInput is an input type that accepts AzureBackupServerContainerArgs, AzureBackupServerContainerPtr and AzureBackupServerContainerPtrOutput values.
// You can construct a concrete instance of `AzureBackupServerContainerPtrInput` via:
//
//	        AzureBackupServerContainerArgs{...}
//
//	or:
//
//	        nil
type AzureBackupServerContainerPtrInput interface {
	pulumi.Input

	ToAzureBackupServerContainerPtrOutput() AzureBackupServerContainerPtrOutput
	ToAzureBackupServerContainerPtrOutputWithContext(context.Context) AzureBackupServerContainerPtrOutput
}

type azureBackupServerContainerPtrType AzureBackupServerContainerArgs

func AzureBackupServerContainerPtr(v *AzureBackupServerContainerArgs) AzureBackupServerContainerPtrInput {
	return (*azureBackupServerContainerPtrType)(v)
}

func (*azureBackupServerContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBackupServerContainer)(nil)).Elem()
}

func (i *azureBackupServerContainerPtrType) ToAzureBackupServerContainerPtrOutput() AzureBackupServerContainerPtrOutput {
	return i.ToAzureBackupServerContainerPtrOutputWithContext(context.Background())
}

func (i *azureBackupServerContainerPtrType) ToAzureBackupServerContainerPtrOutputWithContext(ctx context.Context) AzureBackupServerContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBackupServerContainerPtrOutput)
}

// AzureBackupServer (DPMVenus) workload-specific protection container.
type AzureBackupServerContainerOutput struct{ *pulumi.OutputState }

func (AzureBackupServerContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBackupServerContainer)(nil)).Elem()
}

func (o AzureBackupServerContainerOutput) ToAzureBackupServerContainerOutput() AzureBackupServerContainerOutput {
	return o
}

func (o AzureBackupServerContainerOutput) ToAzureBackupServerContainerOutputWithContext(ctx context.Context) AzureBackupServerContainerOutput {
	return o
}

func (o AzureBackupServerContainerOutput) ToAzureBackupServerContainerPtrOutput() AzureBackupServerContainerPtrOutput {
	return o.ToAzureBackupServerContainerPtrOutputWithContext(context.Background())
}

func (o AzureBackupServerContainerOutput) ToAzureBackupServerContainerPtrOutputWithContext(ctx context.Context) AzureBackupServerContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureBackupServerContainer) *AzureBackupServerContainer {
		return &v
	}).(AzureBackupServerContainerPtrOutput)
}

// Type of backup management for the container.
func (o AzureBackupServerContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Specifies whether the container is re-registrable.
func (o AzureBackupServerContainerOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *bool { return v.CanReRegister }).(pulumi.BoolPtrOutput)
}

// ID of container.
func (o AzureBackupServerContainerOutput) ContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *string { return v.ContainerId }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureBackupServerContainer'.
func (o AzureBackupServerContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Backup engine Agent version
func (o AzureBackupServerContainerOutput) DpmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *string { return v.DpmAgentVersion }).(pulumi.StringPtrOutput)
}

// List of BackupEngines protecting the container
func (o AzureBackupServerContainerOutput) DpmServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) []string { return v.DpmServers }).(pulumi.StringArrayOutput)
}

// Extended Info of the container.
func (o AzureBackupServerContainerOutput) ExtendedInfo() DPMContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *DPMContainerExtendedInfo { return v.ExtendedInfo }).(DPMContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o AzureBackupServerContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureBackupServerContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureBackupServerContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Number of protected items in the BackupEngine
func (o AzureBackupServerContainerOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *float64 { return v.ProtectedItemCount }).(pulumi.Float64PtrOutput)
}

// Protection status of the container.
func (o AzureBackupServerContainerOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureBackupServerContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// To check if upgrade available
func (o AzureBackupServerContainerOutput) UpgradeAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *bool { return v.UpgradeAvailable }).(pulumi.BoolPtrOutput)
}

type AzureBackupServerContainerPtrOutput struct{ *pulumi.OutputState }

func (AzureBackupServerContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBackupServerContainer)(nil)).Elem()
}

func (o AzureBackupServerContainerPtrOutput) ToAzureBackupServerContainerPtrOutput() AzureBackupServerContainerPtrOutput {
	return o
}

func (o AzureBackupServerContainerPtrOutput) ToAzureBackupServerContainerPtrOutputWithContext(ctx context.Context) AzureBackupServerContainerPtrOutput {
	return o
}

func (o AzureBackupServerContainerPtrOutput) Elem() AzureBackupServerContainerOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) AzureBackupServerContainer {
		if v != nil {
			return *v
		}
		var ret AzureBackupServerContainer
		return ret
	}).(AzureBackupServerContainerOutput)
}

// Type of backup management for the container.
func (o AzureBackupServerContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the container is re-registrable.
func (o AzureBackupServerContainerPtrOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *bool {
		if v == nil {
			return nil
		}
		return v.CanReRegister
	}).(pulumi.BoolPtrOutput)
}

// ID of container.
func (o AzureBackupServerContainerPtrOutput) ContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return v.ContainerId
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureBackupServerContainer'.
func (o AzureBackupServerContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Backup engine Agent version
func (o AzureBackupServerContainerPtrOutput) DpmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return v.DpmAgentVersion
	}).(pulumi.StringPtrOutput)
}

// List of BackupEngines protecting the container
func (o AzureBackupServerContainerPtrOutput) DpmServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) []string {
		if v == nil {
			return nil
		}
		return v.DpmServers
	}).(pulumi.StringArrayOutput)
}

// Extended Info of the container.
func (o AzureBackupServerContainerPtrOutput) ExtendedInfo() DPMContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *DPMContainerExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(DPMContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o AzureBackupServerContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureBackupServerContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureBackupServerContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Number of protected items in the BackupEngine
func (o AzureBackupServerContainerPtrOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *float64 {
		if v == nil {
			return nil
		}
		return v.ProtectedItemCount
	}).(pulumi.Float64PtrOutput)
}

// Protection status of the container.
func (o AzureBackupServerContainerPtrOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionStatus
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureBackupServerContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// To check if upgrade available
func (o AzureBackupServerContainerPtrOutput) UpgradeAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *bool {
		if v == nil {
			return nil
		}
		return v.UpgradeAvailable
	}).(pulumi.BoolPtrOutput)
}

// AzureBackupServer (DPMVenus) workload-specific protection container.
type AzureBackupServerContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister *bool `pulumi:"canReRegister"`
	// ID of container.
	ContainerId *string `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureBackupServerContainer'.
	ContainerType string `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion *string `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers []string `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo *DPMContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable *bool `pulumi:"upgradeAvailable"`
}

// AzureBackupServer (DPMVenus) workload-specific protection container.
type AzureBackupServerContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureBackupServerContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBackupServerContainerResponse)(nil)).Elem()
}

func (o AzureBackupServerContainerResponseOutput) ToAzureBackupServerContainerResponseOutput() AzureBackupServerContainerResponseOutput {
	return o
}

func (o AzureBackupServerContainerResponseOutput) ToAzureBackupServerContainerResponseOutputWithContext(ctx context.Context) AzureBackupServerContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureBackupServerContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Specifies whether the container is re-registrable.
func (o AzureBackupServerContainerResponseOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *bool { return v.CanReRegister }).(pulumi.BoolPtrOutput)
}

// ID of container.
func (o AzureBackupServerContainerResponseOutput) ContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *string { return v.ContainerId }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureBackupServerContainer'.
func (o AzureBackupServerContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Backup engine Agent version
func (o AzureBackupServerContainerResponseOutput) DpmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *string { return v.DpmAgentVersion }).(pulumi.StringPtrOutput)
}

// List of BackupEngines protecting the container
func (o AzureBackupServerContainerResponseOutput) DpmServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) []string { return v.DpmServers }).(pulumi.StringArrayOutput)
}

// Extended Info of the container.
func (o AzureBackupServerContainerResponseOutput) ExtendedInfo() DPMContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *DPMContainerExtendedInfoResponse { return v.ExtendedInfo }).(DPMContainerExtendedInfoResponsePtrOutput)
}

// Friendly name of the container.
func (o AzureBackupServerContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureBackupServerContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureBackupServerContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Number of protected items in the BackupEngine
func (o AzureBackupServerContainerResponseOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *float64 { return v.ProtectedItemCount }).(pulumi.Float64PtrOutput)
}

// Protection status of the container.
func (o AzureBackupServerContainerResponseOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureBackupServerContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// To check if upgrade available
func (o AzureBackupServerContainerResponseOutput) UpgradeAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *bool { return v.UpgradeAvailable }).(pulumi.BoolPtrOutput)
}

// Fabric provider specific settings.
type AzureFabricCreationInput struct {
	// Gets the class type.
	// Expected value is 'Azure'.
	InstanceType string `pulumi:"instanceType"`
	// The Location.
	Location *string `pulumi:"location"`
}

// AzureFabricCreationInputInput is an input type that accepts AzureFabricCreationInputArgs and AzureFabricCreationInputOutput values.
// You can construct a concrete instance of `AzureFabricCreationInputInput` via:
//
//	AzureFabricCreationInputArgs{...}
type AzureFabricCreationInputInput interface {
	pulumi.Input

	ToAzureFabricCreationInputOutput() AzureFabricCreationInputOutput
	ToAzureFabricCreationInputOutputWithContext(context.Context) AzureFabricCreationInputOutput
}

// Fabric provider specific settings.
type AzureFabricCreationInputArgs struct {
	// Gets the class type.
	// Expected value is 'Azure'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The Location.
	Location pulumi.StringPtrInput `pulumi:"location"`
}

func (AzureFabricCreationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFabricCreationInput)(nil)).Elem()
}

func (i AzureFabricCreationInputArgs) ToAzureFabricCreationInputOutput() AzureFabricCreationInputOutput {
	return i.ToAzureFabricCreationInputOutputWithContext(context.Background())
}

func (i AzureFabricCreationInputArgs) ToAzureFabricCreationInputOutputWithContext(ctx context.Context) AzureFabricCreationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFabricCreationInputOutput)
}

func (i AzureFabricCreationInputArgs) ToAzureFabricCreationInputPtrOutput() AzureFabricCreationInputPtrOutput {
	return i.ToAzureFabricCreationInputPtrOutputWithContext(context.Background())
}

func (i AzureFabricCreationInputArgs) ToAzureFabricCreationInputPtrOutputWithContext(ctx context.Context) AzureFabricCreationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFabricCreationInputOutput).ToAzureFabricCreationInputPtrOutputWithContext(ctx)
}

// AzureFabricCreationInputPtrInput is an input type that accepts AzureFabricCreationInputArgs, AzureFabricCreationInputPtr and AzureFabricCreationInputPtrOutput values.
// You can construct a concrete instance of `AzureFabricCreationInputPtrInput` via:
//
//	        AzureFabricCreationInputArgs{...}
//
//	or:
//
//	        nil
type AzureFabricCreationInputPtrInput interface {
	pulumi.Input

	ToAzureFabricCreationInputPtrOutput() AzureFabricCreationInputPtrOutput
	ToAzureFabricCreationInputPtrOutputWithContext(context.Context) AzureFabricCreationInputPtrOutput
}

type azureFabricCreationInputPtrType AzureFabricCreationInputArgs

func AzureFabricCreationInputPtr(v *AzureFabricCreationInputArgs) AzureFabricCreationInputPtrInput {
	return (*azureFabricCreationInputPtrType)(v)
}

func (*azureFabricCreationInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFabricCreationInput)(nil)).Elem()
}

func (i *azureFabricCreationInputPtrType) ToAzureFabricCreationInputPtrOutput() AzureFabricCreationInputPtrOutput {
	return i.ToAzureFabricCreationInputPtrOutputWithContext(context.Background())
}

func (i *azureFabricCreationInputPtrType) ToAzureFabricCreationInputPtrOutputWithContext(ctx context.Context) AzureFabricCreationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFabricCreationInputPtrOutput)
}

// Fabric provider specific settings.
type AzureFabricCreationInputOutput struct{ *pulumi.OutputState }

func (AzureFabricCreationInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFabricCreationInput)(nil)).Elem()
}

func (o AzureFabricCreationInputOutput) ToAzureFabricCreationInputOutput() AzureFabricCreationInputOutput {
	return o
}

func (o AzureFabricCreationInputOutput) ToAzureFabricCreationInputOutputWithContext(ctx context.Context) AzureFabricCreationInputOutput {
	return o
}

func (o AzureFabricCreationInputOutput) ToAzureFabricCreationInputPtrOutput() AzureFabricCreationInputPtrOutput {
	return o.ToAzureFabricCreationInputPtrOutputWithContext(context.Background())
}

func (o AzureFabricCreationInputOutput) ToAzureFabricCreationInputPtrOutputWithContext(ctx context.Context) AzureFabricCreationInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureFabricCreationInput) *AzureFabricCreationInput {
		return &v
	}).(AzureFabricCreationInputPtrOutput)
}

// Gets the class type.
// Expected value is 'Azure'.
func (o AzureFabricCreationInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFabricCreationInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Location.
func (o AzureFabricCreationInputOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFabricCreationInput) *string { return v.Location }).(pulumi.StringPtrOutput)
}

type AzureFabricCreationInputPtrOutput struct{ *pulumi.OutputState }

func (AzureFabricCreationInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFabricCreationInput)(nil)).Elem()
}

func (o AzureFabricCreationInputPtrOutput) ToAzureFabricCreationInputPtrOutput() AzureFabricCreationInputPtrOutput {
	return o
}

func (o AzureFabricCreationInputPtrOutput) ToAzureFabricCreationInputPtrOutputWithContext(ctx context.Context) AzureFabricCreationInputPtrOutput {
	return o
}

func (o AzureFabricCreationInputPtrOutput) Elem() AzureFabricCreationInputOutput {
	return o.ApplyT(func(v *AzureFabricCreationInput) AzureFabricCreationInput {
		if v != nil {
			return *v
		}
		var ret AzureFabricCreationInput
		return ret
	}).(AzureFabricCreationInputOutput)
}

// Gets the class type.
// Expected value is 'Azure'.
func (o AzureFabricCreationInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFabricCreationInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The Location.
func (o AzureFabricCreationInputPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFabricCreationInput) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Azure Fabric Specific Details.
type AzureFabricSpecificDetailsResponse struct {
	// The container Ids for the Azure fabric.
	ContainerIds []string `pulumi:"containerIds"`
	// The ExtendedLocations.
	ExtendedLocations []A2AExtendedLocationDetailsResponse `pulumi:"extendedLocations"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'Azure'.
	InstanceType string `pulumi:"instanceType"`
	// The Location for the Azure fabric.
	Location *string `pulumi:"location"`
	// The location details.
	LocationDetails []A2AFabricSpecificLocationDetailsResponse `pulumi:"locationDetails"`
	// The zones.
	Zones []A2AZoneDetailsResponse `pulumi:"zones"`
}

// Azure Fabric Specific Details.
type AzureFabricSpecificDetailsResponseOutput struct{ *pulumi.OutputState }

func (AzureFabricSpecificDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFabricSpecificDetailsResponse)(nil)).Elem()
}

func (o AzureFabricSpecificDetailsResponseOutput) ToAzureFabricSpecificDetailsResponseOutput() AzureFabricSpecificDetailsResponseOutput {
	return o
}

func (o AzureFabricSpecificDetailsResponseOutput) ToAzureFabricSpecificDetailsResponseOutputWithContext(ctx context.Context) AzureFabricSpecificDetailsResponseOutput {
	return o
}

// The container Ids for the Azure fabric.
func (o AzureFabricSpecificDetailsResponseOutput) ContainerIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFabricSpecificDetailsResponse) []string { return v.ContainerIds }).(pulumi.StringArrayOutput)
}

// The ExtendedLocations.
func (o AzureFabricSpecificDetailsResponseOutput) ExtendedLocations() A2AExtendedLocationDetailsResponseArrayOutput {
	return o.ApplyT(func(v AzureFabricSpecificDetailsResponse) []A2AExtendedLocationDetailsResponse {
		return v.ExtendedLocations
	}).(A2AExtendedLocationDetailsResponseArrayOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'Azure'.
func (o AzureFabricSpecificDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFabricSpecificDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Location for the Azure fabric.
func (o AzureFabricSpecificDetailsResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFabricSpecificDetailsResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The location details.
func (o AzureFabricSpecificDetailsResponseOutput) LocationDetails() A2AFabricSpecificLocationDetailsResponseArrayOutput {
	return o.ApplyT(func(v AzureFabricSpecificDetailsResponse) []A2AFabricSpecificLocationDetailsResponse {
		return v.LocationDetails
	}).(A2AFabricSpecificLocationDetailsResponseArrayOutput)
}

// The zones.
func (o AzureFabricSpecificDetailsResponseOutput) Zones() A2AZoneDetailsResponseArrayOutput {
	return o.ApplyT(func(v AzureFabricSpecificDetailsResponse) []A2AZoneDetailsResponse { return v.Zones }).(A2AZoneDetailsResponseArrayOutput)
}

type AzureFabricSpecificDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFabricSpecificDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFabricSpecificDetailsResponse)(nil)).Elem()
}

func (o AzureFabricSpecificDetailsResponsePtrOutput) ToAzureFabricSpecificDetailsResponsePtrOutput() AzureFabricSpecificDetailsResponsePtrOutput {
	return o
}

func (o AzureFabricSpecificDetailsResponsePtrOutput) ToAzureFabricSpecificDetailsResponsePtrOutputWithContext(ctx context.Context) AzureFabricSpecificDetailsResponsePtrOutput {
	return o
}

func (o AzureFabricSpecificDetailsResponsePtrOutput) Elem() AzureFabricSpecificDetailsResponseOutput {
	return o.ApplyT(func(v *AzureFabricSpecificDetailsResponse) AzureFabricSpecificDetailsResponse {
		if v != nil {
			return *v
		}
		var ret AzureFabricSpecificDetailsResponse
		return ret
	}).(AzureFabricSpecificDetailsResponseOutput)
}

// The container Ids for the Azure fabric.
func (o AzureFabricSpecificDetailsResponsePtrOutput) ContainerIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFabricSpecificDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.ContainerIds
	}).(pulumi.StringArrayOutput)
}

// The ExtendedLocations.
func (o AzureFabricSpecificDetailsResponsePtrOutput) ExtendedLocations() A2AExtendedLocationDetailsResponseArrayOutput {
	return o.ApplyT(func(v *AzureFabricSpecificDetailsResponse) []A2AExtendedLocationDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ExtendedLocations
	}).(A2AExtendedLocationDetailsResponseArrayOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'Azure'.
func (o AzureFabricSpecificDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The Location for the Azure fabric.
func (o AzureFabricSpecificDetailsResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The location details.
func (o AzureFabricSpecificDetailsResponsePtrOutput) LocationDetails() A2AFabricSpecificLocationDetailsResponseArrayOutput {
	return o.ApplyT(func(v *AzureFabricSpecificDetailsResponse) []A2AFabricSpecificLocationDetailsResponse {
		if v == nil {
			return nil
		}
		return v.LocationDetails
	}).(A2AFabricSpecificLocationDetailsResponseArrayOutput)
}

// The zones.
func (o AzureFabricSpecificDetailsResponsePtrOutput) Zones() A2AZoneDetailsResponseArrayOutput {
	return o.ApplyT(func(v *AzureFabricSpecificDetailsResponse) []A2AZoneDetailsResponse {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(A2AZoneDetailsResponseArrayOutput)
}

// AzureStorage backup policy.
type AzureFileShareProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureStorage'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
	// Retention policy with the details on hardened backup copy retention ranges.
	VaultRetentionPolicy *VaultRetentionPolicy `pulumi:"vaultRetentionPolicy"`
	// Type of workload for the backup management
	WorkLoadType *string `pulumi:"workLoadType"`
}

// AzureFileShareProtectionPolicyInput is an input type that accepts AzureFileShareProtectionPolicyArgs and AzureFileShareProtectionPolicyOutput values.
// You can construct a concrete instance of `AzureFileShareProtectionPolicyInput` via:
//
//	AzureFileShareProtectionPolicyArgs{...}
type AzureFileShareProtectionPolicyInput interface {
	pulumi.Input

	ToAzureFileShareProtectionPolicyOutput() AzureFileShareProtectionPolicyOutput
	ToAzureFileShareProtectionPolicyOutputWithContext(context.Context) AzureFileShareProtectionPolicyOutput
}

// AzureStorage backup policy.
type AzureFileShareProtectionPolicyArgs struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureStorage'.
	BackupManagementType pulumi.StringInput `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount pulumi.IntPtrInput `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy pulumi.Input `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy pulumi.Input `pulumi:"schedulePolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
	// Retention policy with the details on hardened backup copy retention ranges.
	VaultRetentionPolicy VaultRetentionPolicyPtrInput `pulumi:"vaultRetentionPolicy"`
	// Type of workload for the backup management
	WorkLoadType pulumi.StringPtrInput `pulumi:"workLoadType"`
}

func (AzureFileShareProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileShareProtectionPolicy)(nil)).Elem()
}

func (i AzureFileShareProtectionPolicyArgs) ToAzureFileShareProtectionPolicyOutput() AzureFileShareProtectionPolicyOutput {
	return i.ToAzureFileShareProtectionPolicyOutputWithContext(context.Background())
}

func (i AzureFileShareProtectionPolicyArgs) ToAzureFileShareProtectionPolicyOutputWithContext(ctx context.Context) AzureFileShareProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileShareProtectionPolicyOutput)
}

func (i AzureFileShareProtectionPolicyArgs) ToAzureFileShareProtectionPolicyPtrOutput() AzureFileShareProtectionPolicyPtrOutput {
	return i.ToAzureFileShareProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i AzureFileShareProtectionPolicyArgs) ToAzureFileShareProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureFileShareProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileShareProtectionPolicyOutput).ToAzureFileShareProtectionPolicyPtrOutputWithContext(ctx)
}

// AzureFileShareProtectionPolicyPtrInput is an input type that accepts AzureFileShareProtectionPolicyArgs, AzureFileShareProtectionPolicyPtr and AzureFileShareProtectionPolicyPtrOutput values.
// You can construct a concrete instance of `AzureFileShareProtectionPolicyPtrInput` via:
//
//	        AzureFileShareProtectionPolicyArgs{...}
//
//	or:
//
//	        nil
type AzureFileShareProtectionPolicyPtrInput interface {
	pulumi.Input

	ToAzureFileShareProtectionPolicyPtrOutput() AzureFileShareProtectionPolicyPtrOutput
	ToAzureFileShareProtectionPolicyPtrOutputWithContext(context.Context) AzureFileShareProtectionPolicyPtrOutput
}

type azureFileShareProtectionPolicyPtrType AzureFileShareProtectionPolicyArgs

func AzureFileShareProtectionPolicyPtr(v *AzureFileShareProtectionPolicyArgs) AzureFileShareProtectionPolicyPtrInput {
	return (*azureFileShareProtectionPolicyPtrType)(v)
}

func (*azureFileShareProtectionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileShareProtectionPolicy)(nil)).Elem()
}

func (i *azureFileShareProtectionPolicyPtrType) ToAzureFileShareProtectionPolicyPtrOutput() AzureFileShareProtectionPolicyPtrOutput {
	return i.ToAzureFileShareProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i *azureFileShareProtectionPolicyPtrType) ToAzureFileShareProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureFileShareProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileShareProtectionPolicyPtrOutput)
}

// AzureStorage backup policy.
type AzureFileShareProtectionPolicyOutput struct{ *pulumi.OutputState }

func (AzureFileShareProtectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileShareProtectionPolicy)(nil)).Elem()
}

func (o AzureFileShareProtectionPolicyOutput) ToAzureFileShareProtectionPolicyOutput() AzureFileShareProtectionPolicyOutput {
	return o
}

func (o AzureFileShareProtectionPolicyOutput) ToAzureFileShareProtectionPolicyOutputWithContext(ctx context.Context) AzureFileShareProtectionPolicyOutput {
	return o
}

func (o AzureFileShareProtectionPolicyOutput) ToAzureFileShareProtectionPolicyPtrOutput() AzureFileShareProtectionPolicyPtrOutput {
	return o.ToAzureFileShareProtectionPolicyPtrOutputWithContext(context.Background())
}

func (o AzureFileShareProtectionPolicyOutput) ToAzureFileShareProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureFileShareProtectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureFileShareProtectionPolicy) *AzureFileShareProtectionPolicy {
		return &v
	}).(AzureFileShareProtectionPolicyPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureStorage'.
func (o AzureFileShareProtectionPolicyOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicy) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Number of items associated with this policy.
func (o AzureFileShareProtectionPolicyOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicy) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureFileShareProtectionPolicyOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicy) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Retention policy with the details on backup copy retention ranges.
func (o AzureFileShareProtectionPolicyOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicy) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Backup schedule specified as part of backup policy.
func (o AzureFileShareProtectionPolicyOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicy) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o AzureFileShareProtectionPolicyOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicy) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Retention policy with the details on hardened backup copy retention ranges.
func (o AzureFileShareProtectionPolicyOutput) VaultRetentionPolicy() VaultRetentionPolicyPtrOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicy) *VaultRetentionPolicy { return v.VaultRetentionPolicy }).(VaultRetentionPolicyPtrOutput)
}

// Type of workload for the backup management
func (o AzureFileShareProtectionPolicyOutput) WorkLoadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicy) *string { return v.WorkLoadType }).(pulumi.StringPtrOutput)
}

type AzureFileShareProtectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (AzureFileShareProtectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileShareProtectionPolicy)(nil)).Elem()
}

func (o AzureFileShareProtectionPolicyPtrOutput) ToAzureFileShareProtectionPolicyPtrOutput() AzureFileShareProtectionPolicyPtrOutput {
	return o
}

func (o AzureFileShareProtectionPolicyPtrOutput) ToAzureFileShareProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureFileShareProtectionPolicyPtrOutput {
	return o
}

func (o AzureFileShareProtectionPolicyPtrOutput) Elem() AzureFileShareProtectionPolicyOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) AzureFileShareProtectionPolicy {
		if v != nil {
			return *v
		}
		var ret AzureFileShareProtectionPolicy
		return ret
	}).(AzureFileShareProtectionPolicyOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureStorage'.
func (o AzureFileShareProtectionPolicyPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o AzureFileShareProtectionPolicyPtrOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.ProtectedItemsCount
	}).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureFileShareProtectionPolicyPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Retention policy with the details on backup copy retention ranges.
func (o AzureFileShareProtectionPolicyPtrOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.RetentionPolicy
	}).(pulumi.AnyOutput)
}

// Backup schedule specified as part of backup policy.
func (o AzureFileShareProtectionPolicyPtrOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.SchedulePolicy
	}).(pulumi.AnyOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o AzureFileShareProtectionPolicyPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Retention policy with the details on hardened backup copy retention ranges.
func (o AzureFileShareProtectionPolicyPtrOutput) VaultRetentionPolicy() VaultRetentionPolicyPtrOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) *VaultRetentionPolicy {
		if v == nil {
			return nil
		}
		return v.VaultRetentionPolicy
	}).(VaultRetentionPolicyPtrOutput)
}

// Type of workload for the backup management
func (o AzureFileShareProtectionPolicyPtrOutput) WorkLoadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.WorkLoadType
	}).(pulumi.StringPtrOutput)
}

// AzureStorage backup policy.
type AzureFileShareProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureStorage'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
	// Retention policy with the details on hardened backup copy retention ranges.
	VaultRetentionPolicy *VaultRetentionPolicyResponse `pulumi:"vaultRetentionPolicy"`
	// Type of workload for the backup management
	WorkLoadType *string `pulumi:"workLoadType"`
}

// AzureStorage backup policy.
type AzureFileShareProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (AzureFileShareProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileShareProtectionPolicyResponse)(nil)).Elem()
}

func (o AzureFileShareProtectionPolicyResponseOutput) ToAzureFileShareProtectionPolicyResponseOutput() AzureFileShareProtectionPolicyResponseOutput {
	return o
}

func (o AzureFileShareProtectionPolicyResponseOutput) ToAzureFileShareProtectionPolicyResponseOutputWithContext(ctx context.Context) AzureFileShareProtectionPolicyResponseOutput {
	return o
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureStorage'.
func (o AzureFileShareProtectionPolicyResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicyResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Number of items associated with this policy.
func (o AzureFileShareProtectionPolicyResponseOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicyResponse) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureFileShareProtectionPolicyResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicyResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Retention policy with the details on backup copy retention ranges.
func (o AzureFileShareProtectionPolicyResponseOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicyResponse) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Backup schedule specified as part of backup policy.
func (o AzureFileShareProtectionPolicyResponseOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicyResponse) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o AzureFileShareProtectionPolicyResponseOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicyResponse) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Retention policy with the details on hardened backup copy retention ranges.
func (o AzureFileShareProtectionPolicyResponseOutput) VaultRetentionPolicy() VaultRetentionPolicyResponsePtrOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicyResponse) *VaultRetentionPolicyResponse {
		return v.VaultRetentionPolicy
	}).(VaultRetentionPolicyResponsePtrOutput)
}

// Type of workload for the backup management
func (o AzureFileShareProtectionPolicyResponseOutput) WorkLoadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicyResponse) *string { return v.WorkLoadType }).(pulumi.StringPtrOutput)
}

// Azure File Share workload-specific backup item.
type AzureFileshareProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo *AzureFileshareProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the fileshare represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'AzureFileShareProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureFileshareProtectedItemInput is an input type that accepts AzureFileshareProtectedItemArgs and AzureFileshareProtectedItemOutput values.
// You can construct a concrete instance of `AzureFileshareProtectedItemInput` via:
//
//	AzureFileshareProtectedItemArgs{...}
type AzureFileshareProtectedItemInput interface {
	pulumi.Input

	ToAzureFileshareProtectedItemOutput() AzureFileshareProtectedItemOutput
	ToAzureFileshareProtectedItemOutputWithContext(context.Context) AzureFileshareProtectedItemOutput
}

// Azure File Share workload-specific backup item.
type AzureFileshareProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo AzureFileshareProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the fileshare represented by this backup item.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'AzureFileShareProtectedItem'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus pulumi.StringPtrInput `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureFileshareProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileshareProtectedItem)(nil)).Elem()
}

func (i AzureFileshareProtectedItemArgs) ToAzureFileshareProtectedItemOutput() AzureFileshareProtectedItemOutput {
	return i.ToAzureFileshareProtectedItemOutputWithContext(context.Background())
}

func (i AzureFileshareProtectedItemArgs) ToAzureFileshareProtectedItemOutputWithContext(ctx context.Context) AzureFileshareProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileshareProtectedItemOutput)
}

func (i AzureFileshareProtectedItemArgs) ToAzureFileshareProtectedItemPtrOutput() AzureFileshareProtectedItemPtrOutput {
	return i.ToAzureFileshareProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureFileshareProtectedItemArgs) ToAzureFileshareProtectedItemPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileshareProtectedItemOutput).ToAzureFileshareProtectedItemPtrOutputWithContext(ctx)
}

// AzureFileshareProtectedItemPtrInput is an input type that accepts AzureFileshareProtectedItemArgs, AzureFileshareProtectedItemPtr and AzureFileshareProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureFileshareProtectedItemPtrInput` via:
//
//	        AzureFileshareProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureFileshareProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureFileshareProtectedItemPtrOutput() AzureFileshareProtectedItemPtrOutput
	ToAzureFileshareProtectedItemPtrOutputWithContext(context.Context) AzureFileshareProtectedItemPtrOutput
}

type azureFileshareProtectedItemPtrType AzureFileshareProtectedItemArgs

func AzureFileshareProtectedItemPtr(v *AzureFileshareProtectedItemArgs) AzureFileshareProtectedItemPtrInput {
	return (*azureFileshareProtectedItemPtrType)(v)
}

func (*azureFileshareProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileshareProtectedItem)(nil)).Elem()
}

func (i *azureFileshareProtectedItemPtrType) ToAzureFileshareProtectedItemPtrOutput() AzureFileshareProtectedItemPtrOutput {
	return i.ToAzureFileshareProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureFileshareProtectedItemPtrType) ToAzureFileshareProtectedItemPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileshareProtectedItemPtrOutput)
}

// Azure File Share workload-specific backup item.
type AzureFileshareProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileshareProtectedItem)(nil)).Elem()
}

func (o AzureFileshareProtectedItemOutput) ToAzureFileshareProtectedItemOutput() AzureFileshareProtectedItemOutput {
	return o
}

func (o AzureFileshareProtectedItemOutput) ToAzureFileshareProtectedItemOutputWithContext(ctx context.Context) AzureFileshareProtectedItemOutput {
	return o
}

func (o AzureFileshareProtectedItemOutput) ToAzureFileshareProtectedItemPtrOutput() AzureFileshareProtectedItemPtrOutput {
	return o.ToAzureFileshareProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureFileshareProtectedItemOutput) ToAzureFileshareProtectedItemPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureFileshareProtectedItem) *AzureFileshareProtectedItem {
		return &v
	}).(AzureFileshareProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureFileshareProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureFileshareProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureFileshareProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureFileshareProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureFileshareProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information with this backup item.
func (o AzureFileshareProtectedItemOutput) ExtendedInfo() AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *AzureFileshareProtectedItemExtendedInfo { return v.ExtendedInfo }).(AzureFileshareProtectedItemExtendedInfoPtrOutput)
}

// Friendly name of the fileshare represented by this backup item.
func (o AzureFileshareProtectedItemOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureFileshareProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureFileshareProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureFileshareProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureFileshareProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureFileshareProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) map[string]KPIResourceHealthDetails { return v.KpisHealths }).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureFileshareProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureFileshareProtectedItemOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureFileshareProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureFileshareProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureFileshareProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureFileShareProtectedItem'.
func (o AzureFileshareProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureFileshareProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureFileshareProtectedItemOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureFileshareProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureFileshareProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureFileshareProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureFileshareProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileshareProtectedItem)(nil)).Elem()
}

func (o AzureFileshareProtectedItemPtrOutput) ToAzureFileshareProtectedItemPtrOutput() AzureFileshareProtectedItemPtrOutput {
	return o
}

func (o AzureFileshareProtectedItemPtrOutput) ToAzureFileshareProtectedItemPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemPtrOutput {
	return o
}

func (o AzureFileshareProtectedItemPtrOutput) Elem() AzureFileshareProtectedItemOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) AzureFileshareProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureFileshareProtectedItem
		return ret
	}).(AzureFileshareProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureFileshareProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureFileshareProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureFileshareProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureFileshareProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureFileshareProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information with this backup item.
func (o AzureFileshareProtectedItemPtrOutput) ExtendedInfo() AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *AzureFileshareProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureFileshareProtectedItemExtendedInfoPtrOutput)
}

// Friendly name of the fileshare represented by this backup item.
func (o AzureFileshareProtectedItemPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureFileshareProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureFileshareProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureFileshareProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureFileshareProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureFileshareProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureFileshareProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureFileshareProtectedItemPtrOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureFileshareProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureFileshareProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureFileshareProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureFileShareProtectedItem'.
func (o AzureFileshareProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureFileshareProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureFileshareProtectedItemPtrOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionStatus
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureFileshareProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureFileshareProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureFileshareProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Additional information about Azure File Share backup item.
type AzureFileshareProtectedItemExtendedInfo struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// AzureFileshareProtectedItemExtendedInfoInput is an input type that accepts AzureFileshareProtectedItemExtendedInfoArgs and AzureFileshareProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `AzureFileshareProtectedItemExtendedInfoInput` via:
//
//	AzureFileshareProtectedItemExtendedInfoArgs{...}
type AzureFileshareProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToAzureFileshareProtectedItemExtendedInfoOutput() AzureFileshareProtectedItemExtendedInfoOutput
	ToAzureFileshareProtectedItemExtendedInfoOutputWithContext(context.Context) AzureFileshareProtectedItemExtendedInfoOutput
}

// Additional information about Azure File Share backup item.
type AzureFileshareProtectedItemExtendedInfoArgs struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState pulumi.StringPtrInput `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
}

func (AzureFileshareProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileshareProtectedItemExtendedInfo)(nil)).Elem()
}

func (i AzureFileshareProtectedItemExtendedInfoArgs) ToAzureFileshareProtectedItemExtendedInfoOutput() AzureFileshareProtectedItemExtendedInfoOutput {
	return i.ToAzureFileshareProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i AzureFileshareProtectedItemExtendedInfoArgs) ToAzureFileshareProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileshareProtectedItemExtendedInfoOutput)
}

func (i AzureFileshareProtectedItemExtendedInfoArgs) ToAzureFileshareProtectedItemExtendedInfoPtrOutput() AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i AzureFileshareProtectedItemExtendedInfoArgs) ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileshareProtectedItemExtendedInfoOutput).ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// AzureFileshareProtectedItemExtendedInfoPtrInput is an input type that accepts AzureFileshareProtectedItemExtendedInfoArgs, AzureFileshareProtectedItemExtendedInfoPtr and AzureFileshareProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `AzureFileshareProtectedItemExtendedInfoPtrInput` via:
//
//	        AzureFileshareProtectedItemExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type AzureFileshareProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToAzureFileshareProtectedItemExtendedInfoPtrOutput() AzureFileshareProtectedItemExtendedInfoPtrOutput
	ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(context.Context) AzureFileshareProtectedItemExtendedInfoPtrOutput
}

type azureFileshareProtectedItemExtendedInfoPtrType AzureFileshareProtectedItemExtendedInfoArgs

func AzureFileshareProtectedItemExtendedInfoPtr(v *AzureFileshareProtectedItemExtendedInfoArgs) AzureFileshareProtectedItemExtendedInfoPtrInput {
	return (*azureFileshareProtectedItemExtendedInfoPtrType)(v)
}

func (*azureFileshareProtectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileshareProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *azureFileshareProtectedItemExtendedInfoPtrType) ToAzureFileshareProtectedItemExtendedInfoPtrOutput() AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *azureFileshareProtectedItemExtendedInfoPtrType) ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileshareProtectedItemExtendedInfoPtrOutput)
}

// Additional information about Azure File Share backup item.
type AzureFileshareProtectedItemExtendedInfoOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileshareProtectedItemExtendedInfo)(nil)).Elem()
}

func (o AzureFileshareProtectedItemExtendedInfoOutput) ToAzureFileshareProtectedItemExtendedInfoOutput() AzureFileshareProtectedItemExtendedInfoOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoOutput) ToAzureFileshareProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoOutput) ToAzureFileshareProtectedItemExtendedInfoPtrOutput() AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return o.ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (o AzureFileshareProtectedItemExtendedInfoOutput) ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureFileshareProtectedItemExtendedInfo) *AzureFileshareProtectedItemExtendedInfo {
		return &v
	}).(AzureFileshareProtectedItemExtendedInfoPtrOutput)
}

// The oldest backup copy available for this item in the service.
func (o AzureFileshareProtectedItemExtendedInfoOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfo) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureFileshareProtectedItemExtendedInfoOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfo) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureFileshareProtectedItemExtendedInfoOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfo) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureFileshareProtectedItemExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileshareProtectedItemExtendedInfo)(nil)).Elem()
}

func (o AzureFileshareProtectedItemExtendedInfoPtrOutput) ToAzureFileshareProtectedItemExtendedInfoPtrOutput() AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoPtrOutput) ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoPtrOutput) Elem() AzureFileshareProtectedItemExtendedInfoOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfo) AzureFileshareProtectedItemExtendedInfo {
		if v != nil {
			return *v
		}
		var ret AzureFileshareProtectedItemExtendedInfo
		return ret
	}).(AzureFileshareProtectedItemExtendedInfoOutput)
}

// The oldest backup copy available for this item in the service.
func (o AzureFileshareProtectedItemExtendedInfoPtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureFileshareProtectedItemExtendedInfoPtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureFileshareProtectedItemExtendedInfoPtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfo) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Additional information about Azure File Share backup item.
type AzureFileshareProtectedItemExtendedInfoResponse struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
	// Indicates the state of this resource. Possible values are from enum ResourceState {Invalid, Active, SoftDeleted, Deleted}
	ResourceState string `pulumi:"resourceState"`
	// The resource state sync time for this backup item.
	ResourceStateSyncTime string `pulumi:"resourceStateSyncTime"`
}

// Additional information about Azure File Share backup item.
type AzureFileshareProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileshareProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) ToAzureFileshareProtectedItemExtendedInfoResponseOutput() AzureFileshareProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) ToAzureFileshareProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoResponseOutput {
	return o
}

// The oldest backup copy available for this item in the service.
func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfoResponse) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

// Indicates the state of this resource. Possible values are from enum ResourceState {Invalid, Active, SoftDeleted, Deleted}
func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfoResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// The resource state sync time for this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) ResourceStateSyncTime() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfoResponse) string { return v.ResourceStateSyncTime }).(pulumi.StringOutput)
}

type AzureFileshareProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileshareProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) ToAzureFileshareProtectedItemExtendedInfoResponsePtrOutput() AzureFileshareProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) ToAzureFileshareProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) Elem() AzureFileshareProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) AzureFileshareProtectedItemExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret AzureFileshareProtectedItemExtendedInfoResponse
		return ret
	}).(AzureFileshareProtectedItemExtendedInfoResponseOutput)
}

// The oldest backup copy available for this item in the service.
func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Indicates the state of this resource. Possible values are from enum ResourceState {Invalid, Active, SoftDeleted, Deleted}
func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) ResourceState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceState
	}).(pulumi.StringPtrOutput)
}

// The resource state sync time for this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) ResourceStateSyncTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceStateSyncTime
	}).(pulumi.StringPtrOutput)
}

// Azure File Share workload-specific backup item.
type AzureFileshareProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo *AzureFileshareProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the fileshare represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'AzureFileShareProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Azure File Share workload-specific backup item.
type AzureFileshareProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileshareProtectedItemResponse)(nil)).Elem()
}

func (o AzureFileshareProtectedItemResponseOutput) ToAzureFileshareProtectedItemResponseOutput() AzureFileshareProtectedItemResponseOutput {
	return o
}

func (o AzureFileshareProtectedItemResponseOutput) ToAzureFileshareProtectedItemResponseOutputWithContext(ctx context.Context) AzureFileshareProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureFileshareProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureFileshareProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureFileshareProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureFileshareProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureFileshareProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureFileshareProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information with this backup item.
func (o AzureFileshareProtectedItemResponseOutput) ExtendedInfo() AzureFileshareProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *AzureFileshareProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureFileshareProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the fileshare represented by this backup item.
func (o AzureFileshareProtectedItemResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureFileshareProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureFileshareProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureFileshareProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureFileshareProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureFileshareProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureFileshareProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureFileshareProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureFileshareProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureFileshareProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureFileshareProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureFileShareProtectedItem'.
func (o AzureFileshareProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureFileshareProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureFileshareProtectedItemResponseOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureFileshareProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureFileshareProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureFileshareProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureFileshareProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureFileshareProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// IaaS VM workload-specific backup item representing a classic virtual machine.
type AzureIaaSClassicComputeVMContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// AzureIaaSClassicComputeVMContainerInput is an input type that accepts AzureIaaSClassicComputeVMContainerArgs and AzureIaaSClassicComputeVMContainerOutput values.
// You can construct a concrete instance of `AzureIaaSClassicComputeVMContainerInput` via:
//
//	AzureIaaSClassicComputeVMContainerArgs{...}
type AzureIaaSClassicComputeVMContainerInput interface {
	pulumi.Input

	ToAzureIaaSClassicComputeVMContainerOutput() AzureIaaSClassicComputeVMContainerOutput
	ToAzureIaaSClassicComputeVMContainerOutputWithContext(context.Context) AzureIaaSClassicComputeVMContainerOutput
}

// IaaS VM workload-specific backup item representing a classic virtual machine.
type AzureIaaSClassicComputeVMContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId pulumi.StringPtrInput `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion pulumi.StringPtrInput `pulumi:"virtualMachineVersion"`
}

func (AzureIaaSClassicComputeVMContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSClassicComputeVMContainer)(nil)).Elem()
}

func (i AzureIaaSClassicComputeVMContainerArgs) ToAzureIaaSClassicComputeVMContainerOutput() AzureIaaSClassicComputeVMContainerOutput {
	return i.ToAzureIaaSClassicComputeVMContainerOutputWithContext(context.Background())
}

func (i AzureIaaSClassicComputeVMContainerArgs) ToAzureIaaSClassicComputeVMContainerOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSClassicComputeVMContainerOutput)
}

func (i AzureIaaSClassicComputeVMContainerArgs) ToAzureIaaSClassicComputeVMContainerPtrOutput() AzureIaaSClassicComputeVMContainerPtrOutput {
	return i.ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(context.Background())
}

func (i AzureIaaSClassicComputeVMContainerArgs) ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSClassicComputeVMContainerOutput).ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(ctx)
}

// AzureIaaSClassicComputeVMContainerPtrInput is an input type that accepts AzureIaaSClassicComputeVMContainerArgs, AzureIaaSClassicComputeVMContainerPtr and AzureIaaSClassicComputeVMContainerPtrOutput values.
// You can construct a concrete instance of `AzureIaaSClassicComputeVMContainerPtrInput` via:
//
//	        AzureIaaSClassicComputeVMContainerArgs{...}
//
//	or:
//
//	        nil
type AzureIaaSClassicComputeVMContainerPtrInput interface {
	pulumi.Input

	ToAzureIaaSClassicComputeVMContainerPtrOutput() AzureIaaSClassicComputeVMContainerPtrOutput
	ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(context.Context) AzureIaaSClassicComputeVMContainerPtrOutput
}

type azureIaaSClassicComputeVMContainerPtrType AzureIaaSClassicComputeVMContainerArgs

func AzureIaaSClassicComputeVMContainerPtr(v *AzureIaaSClassicComputeVMContainerArgs) AzureIaaSClassicComputeVMContainerPtrInput {
	return (*azureIaaSClassicComputeVMContainerPtrType)(v)
}

func (*azureIaaSClassicComputeVMContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSClassicComputeVMContainer)(nil)).Elem()
}

func (i *azureIaaSClassicComputeVMContainerPtrType) ToAzureIaaSClassicComputeVMContainerPtrOutput() AzureIaaSClassicComputeVMContainerPtrOutput {
	return i.ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(context.Background())
}

func (i *azureIaaSClassicComputeVMContainerPtrType) ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSClassicComputeVMContainerPtrOutput)
}

// IaaS VM workload-specific backup item representing a classic virtual machine.
type AzureIaaSClassicComputeVMContainerOutput struct{ *pulumi.OutputState }

func (AzureIaaSClassicComputeVMContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSClassicComputeVMContainer)(nil)).Elem()
}

func (o AzureIaaSClassicComputeVMContainerOutput) ToAzureIaaSClassicComputeVMContainerOutput() AzureIaaSClassicComputeVMContainerOutput {
	return o
}

func (o AzureIaaSClassicComputeVMContainerOutput) ToAzureIaaSClassicComputeVMContainerOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMContainerOutput {
	return o
}

func (o AzureIaaSClassicComputeVMContainerOutput) ToAzureIaaSClassicComputeVMContainerPtrOutput() AzureIaaSClassicComputeVMContainerPtrOutput {
	return o.ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(context.Background())
}

func (o AzureIaaSClassicComputeVMContainerOutput) ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureIaaSClassicComputeVMContainer) *AzureIaaSClassicComputeVMContainer {
		return &v
	}).(AzureIaaSClassicComputeVMContainerPtrOutput)
}

// Type of backup management for the container.
func (o AzureIaaSClassicComputeVMContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
func (o AzureIaaSClassicComputeVMContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o AzureIaaSClassicComputeVMContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureIaaSClassicComputeVMContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureIaaSClassicComputeVMContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureIaaSClassicComputeVMContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureIaaSClassicComputeVMContainerOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o AzureIaaSClassicComputeVMContainerOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o AzureIaaSClassicComputeVMContainerOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) *string { return v.VirtualMachineVersion }).(pulumi.StringPtrOutput)
}

type AzureIaaSClassicComputeVMContainerPtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSClassicComputeVMContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSClassicComputeVMContainer)(nil)).Elem()
}

func (o AzureIaaSClassicComputeVMContainerPtrOutput) ToAzureIaaSClassicComputeVMContainerPtrOutput() AzureIaaSClassicComputeVMContainerPtrOutput {
	return o
}

func (o AzureIaaSClassicComputeVMContainerPtrOutput) ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMContainerPtrOutput {
	return o
}

func (o AzureIaaSClassicComputeVMContainerPtrOutput) Elem() AzureIaaSClassicComputeVMContainerOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) AzureIaaSClassicComputeVMContainer {
		if v != nil {
			return *v
		}
		var ret AzureIaaSClassicComputeVMContainer
		return ret
	}).(AzureIaaSClassicComputeVMContainerOutput)
}

// Type of backup management for the container.
func (o AzureIaaSClassicComputeVMContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
func (o AzureIaaSClassicComputeVMContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o AzureIaaSClassicComputeVMContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureIaaSClassicComputeVMContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureIaaSClassicComputeVMContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureIaaSClassicComputeVMContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureIaaSClassicComputeVMContainerPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o AzureIaaSClassicComputeVMContainerPtrOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineId
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o AzureIaaSClassicComputeVMContainerPtrOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineVersion
	}).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific backup item representing a classic virtual machine.
type AzureIaaSClassicComputeVMContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// IaaS VM workload-specific backup item representing a classic virtual machine.
type AzureIaaSClassicComputeVMContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSClassicComputeVMContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSClassicComputeVMContainerResponse)(nil)).Elem()
}

func (o AzureIaaSClassicComputeVMContainerResponseOutput) ToAzureIaaSClassicComputeVMContainerResponseOutput() AzureIaaSClassicComputeVMContainerResponseOutput {
	return o
}

func (o AzureIaaSClassicComputeVMContainerResponseOutput) ToAzureIaaSClassicComputeVMContainerResponseOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureIaaSClassicComputeVMContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
func (o AzureIaaSClassicComputeVMContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o AzureIaaSClassicComputeVMContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureIaaSClassicComputeVMContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureIaaSClassicComputeVMContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureIaaSClassicComputeVMContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureIaaSClassicComputeVMContainerResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o AzureIaaSClassicComputeVMContainerResponseOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o AzureIaaSClassicComputeVMContainerResponseOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) *string { return v.VirtualMachineVersion }).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific backup item representing the Classic Compute VM.
type AzureIaaSClassicComputeVMProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedProperties `pulumi:"extendedProperties"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureIaaSClassicComputeVMProtectedItemInput is an input type that accepts AzureIaaSClassicComputeVMProtectedItemArgs and AzureIaaSClassicComputeVMProtectedItemOutput values.
// You can construct a concrete instance of `AzureIaaSClassicComputeVMProtectedItemInput` via:
//
//	AzureIaaSClassicComputeVMProtectedItemArgs{...}
type AzureIaaSClassicComputeVMProtectedItemInput interface {
	pulumi.Input

	ToAzureIaaSClassicComputeVMProtectedItemOutput() AzureIaaSClassicComputeVMProtectedItemOutput
	ToAzureIaaSClassicComputeVMProtectedItemOutputWithContext(context.Context) AzureIaaSClassicComputeVMProtectedItemOutput
}

// IaaS VM workload-specific backup item representing the Classic Compute VM.
type AzureIaaSClassicComputeVMProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureIaaSVMProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties ExtendedPropertiesPtrInput `pulumi:"extendedProperties"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus pulumi.StringPtrInput `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureIaaSClassicComputeVMProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSClassicComputeVMProtectedItem)(nil)).Elem()
}

func (i AzureIaaSClassicComputeVMProtectedItemArgs) ToAzureIaaSClassicComputeVMProtectedItemOutput() AzureIaaSClassicComputeVMProtectedItemOutput {
	return i.ToAzureIaaSClassicComputeVMProtectedItemOutputWithContext(context.Background())
}

func (i AzureIaaSClassicComputeVMProtectedItemArgs) ToAzureIaaSClassicComputeVMProtectedItemOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSClassicComputeVMProtectedItemOutput)
}

func (i AzureIaaSClassicComputeVMProtectedItemArgs) ToAzureIaaSClassicComputeVMProtectedItemPtrOutput() AzureIaaSClassicComputeVMProtectedItemPtrOutput {
	return i.ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureIaaSClassicComputeVMProtectedItemArgs) ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSClassicComputeVMProtectedItemOutput).ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(ctx)
}

// AzureIaaSClassicComputeVMProtectedItemPtrInput is an input type that accepts AzureIaaSClassicComputeVMProtectedItemArgs, AzureIaaSClassicComputeVMProtectedItemPtr and AzureIaaSClassicComputeVMProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureIaaSClassicComputeVMProtectedItemPtrInput` via:
//
//	        AzureIaaSClassicComputeVMProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureIaaSClassicComputeVMProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureIaaSClassicComputeVMProtectedItemPtrOutput() AzureIaaSClassicComputeVMProtectedItemPtrOutput
	ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(context.Context) AzureIaaSClassicComputeVMProtectedItemPtrOutput
}

type azureIaaSClassicComputeVMProtectedItemPtrType AzureIaaSClassicComputeVMProtectedItemArgs

func AzureIaaSClassicComputeVMProtectedItemPtr(v *AzureIaaSClassicComputeVMProtectedItemArgs) AzureIaaSClassicComputeVMProtectedItemPtrInput {
	return (*azureIaaSClassicComputeVMProtectedItemPtrType)(v)
}

func (*azureIaaSClassicComputeVMProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSClassicComputeVMProtectedItem)(nil)).Elem()
}

func (i *azureIaaSClassicComputeVMProtectedItemPtrType) ToAzureIaaSClassicComputeVMProtectedItemPtrOutput() AzureIaaSClassicComputeVMProtectedItemPtrOutput {
	return i.ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureIaaSClassicComputeVMProtectedItemPtrType) ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSClassicComputeVMProtectedItemPtrOutput)
}

// IaaS VM workload-specific backup item representing the Classic Compute VM.
type AzureIaaSClassicComputeVMProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureIaaSClassicComputeVMProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSClassicComputeVMProtectedItem)(nil)).Elem()
}

func (o AzureIaaSClassicComputeVMProtectedItemOutput) ToAzureIaaSClassicComputeVMProtectedItemOutput() AzureIaaSClassicComputeVMProtectedItemOutput {
	return o
}

func (o AzureIaaSClassicComputeVMProtectedItemOutput) ToAzureIaaSClassicComputeVMProtectedItemOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMProtectedItemOutput {
	return o
}

func (o AzureIaaSClassicComputeVMProtectedItemOutput) ToAzureIaaSClassicComputeVMProtectedItemPtrOutput() AzureIaaSClassicComputeVMProtectedItemPtrOutput {
	return o.ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureIaaSClassicComputeVMProtectedItemOutput) ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureIaaSClassicComputeVMProtectedItem) *AzureIaaSClassicComputeVMProtectedItem {
		return &v
	}).(AzureIaaSClassicComputeVMProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSClassicComputeVMProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSClassicComputeVMProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSClassicComputeVMProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSClassicComputeVMProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *AzureIaaSVMProtectedItemExtendedInfo {
		return v.ExtendedInfo
	}).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) ExtendedProperties() ExtendedPropertiesPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *ExtendedProperties { return v.ExtendedProperties }).(ExtendedPropertiesPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSClassicComputeVMProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSClassicComputeVMProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSClassicComputeVMProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSClassicComputeVMProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSClassicComputeVMProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) map[string]KPIResourceHealthDetails {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSClassicComputeVMProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSClassicComputeVMProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSClassicComputeVMProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureIaaSClassicComputeVMProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSClassicComputeVMProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSClassicComputeVMProtectedItem)(nil)).Elem()
}

func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ToAzureIaaSClassicComputeVMProtectedItemPtrOutput() AzureIaaSClassicComputeVMProtectedItemPtrOutput {
	return o
}

func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMProtectedItemPtrOutput {
	return o
}

func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) Elem() AzureIaaSClassicComputeVMProtectedItemOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) AzureIaaSClassicComputeVMProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureIaaSClassicComputeVMProtectedItem
		return ret
	}).(AzureIaaSClassicComputeVMProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *AzureIaaSVMProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ExtendedProperties() ExtendedPropertiesPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *ExtendedProperties {
		if v == nil {
			return nil
		}
		return v.ExtendedProperties
	}).(ExtendedPropertiesPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionStatus
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific backup item representing the Classic Compute VM.
type AzureIaaSClassicComputeVMProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedPropertiesResponse `pulumi:"extendedProperties"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName string `pulumi:"friendlyName"`
	// Health details on this backup item.
	HealthDetails []AzureIaaSVMHealthDetailsResponse `pulumi:"healthDetails"`
	// Health status of protected item.
	HealthStatus string `pulumi:"healthStatus"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataId string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Fully qualified ARM ID of the virtual machine represented by this item.
	VirtualMachineId string `pulumi:"virtualMachineId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// IaaS VM workload-specific backup item representing the Classic Compute VM.
type AzureIaaSClassicComputeVMProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSClassicComputeVMProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSClassicComputeVMProtectedItemResponse)(nil)).Elem()
}

func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ToAzureIaaSClassicComputeVMProtectedItemResponseOutput() AzureIaaSClassicComputeVMProtectedItemResponseOutput {
	return o
}

func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ToAzureIaaSClassicComputeVMProtectedItemResponseOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *AzureIaaSVMProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ExtendedProperties() ExtendedPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *ExtendedPropertiesResponse {
		return v.ExtendedProperties
	}).(ExtendedPropertiesResponsePtrOutput)
}

// Friendly name of the VM represented by this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Health details on this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) HealthDetails() AzureIaaSVMHealthDetailsResponseArrayOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) []AzureIaaSVMHealthDetailsResponse {
		return v.HealthDetails
	}).(AzureIaaSVMHealthDetailsResponseArrayOutput)
}

// Health status of protected item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) HealthStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.HealthStatus }).(pulumi.StringOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *bool {
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Last backup operation status.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) LastBackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.LastBackupTime }).(pulumi.StringOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ProtectedItemDataId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.ProtectedItemDataId }).(pulumi.StringOutput)
}

// backup item type.
// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) []string {
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Fully qualified ARM ID of the virtual machine represented by this item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) VirtualMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.VirtualMachineId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.
type AzureIaaSComputeVMContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// AzureIaaSComputeVMContainerInput is an input type that accepts AzureIaaSComputeVMContainerArgs and AzureIaaSComputeVMContainerOutput values.
// You can construct a concrete instance of `AzureIaaSComputeVMContainerInput` via:
//
//	AzureIaaSComputeVMContainerArgs{...}
type AzureIaaSComputeVMContainerInput interface {
	pulumi.Input

	ToAzureIaaSComputeVMContainerOutput() AzureIaaSComputeVMContainerOutput
	ToAzureIaaSComputeVMContainerOutputWithContext(context.Context) AzureIaaSComputeVMContainerOutput
}

// IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.
type AzureIaaSComputeVMContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId pulumi.StringPtrInput `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion pulumi.StringPtrInput `pulumi:"virtualMachineVersion"`
}

func (AzureIaaSComputeVMContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSComputeVMContainer)(nil)).Elem()
}

func (i AzureIaaSComputeVMContainerArgs) ToAzureIaaSComputeVMContainerOutput() AzureIaaSComputeVMContainerOutput {
	return i.ToAzureIaaSComputeVMContainerOutputWithContext(context.Background())
}

func (i AzureIaaSComputeVMContainerArgs) ToAzureIaaSComputeVMContainerOutputWithContext(ctx context.Context) AzureIaaSComputeVMContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSComputeVMContainerOutput)
}

func (i AzureIaaSComputeVMContainerArgs) ToAzureIaaSComputeVMContainerPtrOutput() AzureIaaSComputeVMContainerPtrOutput {
	return i.ToAzureIaaSComputeVMContainerPtrOutputWithContext(context.Background())
}

func (i AzureIaaSComputeVMContainerArgs) ToAzureIaaSComputeVMContainerPtrOutputWithContext(ctx context.Context) AzureIaaSComputeVMContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSComputeVMContainerOutput).ToAzureIaaSComputeVMContainerPtrOutputWithContext(ctx)
}

// AzureIaaSComputeVMContainerPtrInput is an input type that accepts AzureIaaSComputeVMContainerArgs, AzureIaaSComputeVMContainerPtr and AzureIaaSComputeVMContainerPtrOutput values.
// You can construct a concrete instance of `AzureIaaSComputeVMContainerPtrInput` via:
//
//	        AzureIaaSComputeVMContainerArgs{...}
//
//	or:
//
//	        nil
type AzureIaaSComputeVMContainerPtrInput interface {
	pulumi.Input

	ToAzureIaaSComputeVMContainerPtrOutput() AzureIaaSComputeVMContainerPtrOutput
	ToAzureIaaSComputeVMContainerPtrOutputWithContext(context.Context) AzureIaaSComputeVMContainerPtrOutput
}

type azureIaaSComputeVMContainerPtrType AzureIaaSComputeVMContainerArgs

func AzureIaaSComputeVMContainerPtr(v *AzureIaaSComputeVMContainerArgs) AzureIaaSComputeVMContainerPtrInput {
	return (*azureIaaSComputeVMContainerPtrType)(v)
}

func (*azureIaaSComputeVMContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSComputeVMContainer)(nil)).Elem()
}

func (i *azureIaaSComputeVMContainerPtrType) ToAzureIaaSComputeVMContainerPtrOutput() AzureIaaSComputeVMContainerPtrOutput {
	return i.ToAzureIaaSComputeVMContainerPtrOutputWithContext(context.Background())
}

func (i *azureIaaSComputeVMContainerPtrType) ToAzureIaaSComputeVMContainerPtrOutputWithContext(ctx context.Context) AzureIaaSComputeVMContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSComputeVMContainerPtrOutput)
}

// IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.
type AzureIaaSComputeVMContainerOutput struct{ *pulumi.OutputState }

func (AzureIaaSComputeVMContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSComputeVMContainer)(nil)).Elem()
}

func (o AzureIaaSComputeVMContainerOutput) ToAzureIaaSComputeVMContainerOutput() AzureIaaSComputeVMContainerOutput {
	return o
}

func (o AzureIaaSComputeVMContainerOutput) ToAzureIaaSComputeVMContainerOutputWithContext(ctx context.Context) AzureIaaSComputeVMContainerOutput {
	return o
}

func (o AzureIaaSComputeVMContainerOutput) ToAzureIaaSComputeVMContainerPtrOutput() AzureIaaSComputeVMContainerPtrOutput {
	return o.ToAzureIaaSComputeVMContainerPtrOutputWithContext(context.Background())
}

func (o AzureIaaSComputeVMContainerOutput) ToAzureIaaSComputeVMContainerPtrOutputWithContext(ctx context.Context) AzureIaaSComputeVMContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureIaaSComputeVMContainer) *AzureIaaSComputeVMContainer {
		return &v
	}).(AzureIaaSComputeVMContainerPtrOutput)
}

// Type of backup management for the container.
func (o AzureIaaSComputeVMContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Microsoft.Compute/virtualMachines'.
func (o AzureIaaSComputeVMContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o AzureIaaSComputeVMContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureIaaSComputeVMContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureIaaSComputeVMContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureIaaSComputeVMContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureIaaSComputeVMContainerOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o AzureIaaSComputeVMContainerOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o AzureIaaSComputeVMContainerOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) *string { return v.VirtualMachineVersion }).(pulumi.StringPtrOutput)
}

type AzureIaaSComputeVMContainerPtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSComputeVMContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSComputeVMContainer)(nil)).Elem()
}

func (o AzureIaaSComputeVMContainerPtrOutput) ToAzureIaaSComputeVMContainerPtrOutput() AzureIaaSComputeVMContainerPtrOutput {
	return o
}

func (o AzureIaaSComputeVMContainerPtrOutput) ToAzureIaaSComputeVMContainerPtrOutputWithContext(ctx context.Context) AzureIaaSComputeVMContainerPtrOutput {
	return o
}

func (o AzureIaaSComputeVMContainerPtrOutput) Elem() AzureIaaSComputeVMContainerOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) AzureIaaSComputeVMContainer {
		if v != nil {
			return *v
		}
		var ret AzureIaaSComputeVMContainer
		return ret
	}).(AzureIaaSComputeVMContainerOutput)
}

// Type of backup management for the container.
func (o AzureIaaSComputeVMContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Microsoft.Compute/virtualMachines'.
func (o AzureIaaSComputeVMContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o AzureIaaSComputeVMContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureIaaSComputeVMContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureIaaSComputeVMContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureIaaSComputeVMContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureIaaSComputeVMContainerPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o AzureIaaSComputeVMContainerPtrOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineId
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o AzureIaaSComputeVMContainerPtrOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineVersion
	}).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.
type AzureIaaSComputeVMContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.
type AzureIaaSComputeVMContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSComputeVMContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSComputeVMContainerResponse)(nil)).Elem()
}

func (o AzureIaaSComputeVMContainerResponseOutput) ToAzureIaaSComputeVMContainerResponseOutput() AzureIaaSComputeVMContainerResponseOutput {
	return o
}

func (o AzureIaaSComputeVMContainerResponseOutput) ToAzureIaaSComputeVMContainerResponseOutputWithContext(ctx context.Context) AzureIaaSComputeVMContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureIaaSComputeVMContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Microsoft.Compute/virtualMachines'.
func (o AzureIaaSComputeVMContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o AzureIaaSComputeVMContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureIaaSComputeVMContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureIaaSComputeVMContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureIaaSComputeVMContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureIaaSComputeVMContainerResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o AzureIaaSComputeVMContainerResponseOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o AzureIaaSComputeVMContainerResponseOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) *string { return v.VirtualMachineVersion }).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
type AzureIaaSComputeVMProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedProperties `pulumi:"extendedProperties"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureIaaSComputeVMProtectedItemInput is an input type that accepts AzureIaaSComputeVMProtectedItemArgs and AzureIaaSComputeVMProtectedItemOutput values.
// You can construct a concrete instance of `AzureIaaSComputeVMProtectedItemInput` via:
//
//	AzureIaaSComputeVMProtectedItemArgs{...}
type AzureIaaSComputeVMProtectedItemInput interface {
	pulumi.Input

	ToAzureIaaSComputeVMProtectedItemOutput() AzureIaaSComputeVMProtectedItemOutput
	ToAzureIaaSComputeVMProtectedItemOutputWithContext(context.Context) AzureIaaSComputeVMProtectedItemOutput
}

// IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
type AzureIaaSComputeVMProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureIaaSVMProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties ExtendedPropertiesPtrInput `pulumi:"extendedProperties"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus pulumi.StringPtrInput `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureIaaSComputeVMProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSComputeVMProtectedItem)(nil)).Elem()
}

func (i AzureIaaSComputeVMProtectedItemArgs) ToAzureIaaSComputeVMProtectedItemOutput() AzureIaaSComputeVMProtectedItemOutput {
	return i.ToAzureIaaSComputeVMProtectedItemOutputWithContext(context.Background())
}

func (i AzureIaaSComputeVMProtectedItemArgs) ToAzureIaaSComputeVMProtectedItemOutputWithContext(ctx context.Context) AzureIaaSComputeVMProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSComputeVMProtectedItemOutput)
}

func (i AzureIaaSComputeVMProtectedItemArgs) ToAzureIaaSComputeVMProtectedItemPtrOutput() AzureIaaSComputeVMProtectedItemPtrOutput {
	return i.ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureIaaSComputeVMProtectedItemArgs) ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSComputeVMProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSComputeVMProtectedItemOutput).ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(ctx)
}

// AzureIaaSComputeVMProtectedItemPtrInput is an input type that accepts AzureIaaSComputeVMProtectedItemArgs, AzureIaaSComputeVMProtectedItemPtr and AzureIaaSComputeVMProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureIaaSComputeVMProtectedItemPtrInput` via:
//
//	        AzureIaaSComputeVMProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureIaaSComputeVMProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureIaaSComputeVMProtectedItemPtrOutput() AzureIaaSComputeVMProtectedItemPtrOutput
	ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(context.Context) AzureIaaSComputeVMProtectedItemPtrOutput
}

type azureIaaSComputeVMProtectedItemPtrType AzureIaaSComputeVMProtectedItemArgs

func AzureIaaSComputeVMProtectedItemPtr(v *AzureIaaSComputeVMProtectedItemArgs) AzureIaaSComputeVMProtectedItemPtrInput {
	return (*azureIaaSComputeVMProtectedItemPtrType)(v)
}

func (*azureIaaSComputeVMProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSComputeVMProtectedItem)(nil)).Elem()
}

func (i *azureIaaSComputeVMProtectedItemPtrType) ToAzureIaaSComputeVMProtectedItemPtrOutput() AzureIaaSComputeVMProtectedItemPtrOutput {
	return i.ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureIaaSComputeVMProtectedItemPtrType) ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSComputeVMProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSComputeVMProtectedItemPtrOutput)
}

// IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
type AzureIaaSComputeVMProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureIaaSComputeVMProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSComputeVMProtectedItem)(nil)).Elem()
}

func (o AzureIaaSComputeVMProtectedItemOutput) ToAzureIaaSComputeVMProtectedItemOutput() AzureIaaSComputeVMProtectedItemOutput {
	return o
}

func (o AzureIaaSComputeVMProtectedItemOutput) ToAzureIaaSComputeVMProtectedItemOutputWithContext(ctx context.Context) AzureIaaSComputeVMProtectedItemOutput {
	return o
}

func (o AzureIaaSComputeVMProtectedItemOutput) ToAzureIaaSComputeVMProtectedItemPtrOutput() AzureIaaSComputeVMProtectedItemPtrOutput {
	return o.ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureIaaSComputeVMProtectedItemOutput) ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSComputeVMProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureIaaSComputeVMProtectedItem) *AzureIaaSComputeVMProtectedItem {
		return &v
	}).(AzureIaaSComputeVMProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSComputeVMProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSComputeVMProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSComputeVMProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSComputeVMProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSComputeVMProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSComputeVMProtectedItemOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *AzureIaaSVMProtectedItemExtendedInfo { return v.ExtendedInfo }).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSComputeVMProtectedItemOutput) ExtendedProperties() ExtendedPropertiesPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *ExtendedProperties { return v.ExtendedProperties }).(ExtendedPropertiesPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSComputeVMProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSComputeVMProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSComputeVMProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSComputeVMProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSComputeVMProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) map[string]KPIResourceHealthDetails { return v.KpisHealths }).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status.
func (o AzureIaaSComputeVMProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSComputeVMProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSComputeVMProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSComputeVMProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'Microsoft.Compute/virtualMachines'.
func (o AzureIaaSComputeVMProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureIaaSComputeVMProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSComputeVMProtectedItemOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSComputeVMProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSComputeVMProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSComputeVMProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureIaaSComputeVMProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSComputeVMProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSComputeVMProtectedItem)(nil)).Elem()
}

func (o AzureIaaSComputeVMProtectedItemPtrOutput) ToAzureIaaSComputeVMProtectedItemPtrOutput() AzureIaaSComputeVMProtectedItemPtrOutput {
	return o
}

func (o AzureIaaSComputeVMProtectedItemPtrOutput) ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSComputeVMProtectedItemPtrOutput {
	return o
}

func (o AzureIaaSComputeVMProtectedItemPtrOutput) Elem() AzureIaaSComputeVMProtectedItemOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) AzureIaaSComputeVMProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureIaaSComputeVMProtectedItem
		return ret
	}).(AzureIaaSComputeVMProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSComputeVMProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSComputeVMProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSComputeVMProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSComputeVMProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *AzureIaaSVMProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) ExtendedProperties() ExtendedPropertiesPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *ExtendedProperties {
		if v == nil {
			return nil
		}
		return v.ExtendedProperties
	}).(ExtendedPropertiesPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSComputeVMProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSComputeVMProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSComputeVMProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSComputeVMProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSComputeVMProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSComputeVMProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'Microsoft.Compute/virtualMachines'.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionStatus
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSComputeVMProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSComputeVMProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
type AzureIaaSComputeVMProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedPropertiesResponse `pulumi:"extendedProperties"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName string `pulumi:"friendlyName"`
	// Health details on this backup item.
	HealthDetails []AzureIaaSVMHealthDetailsResponse `pulumi:"healthDetails"`
	// Health status of protected item.
	HealthStatus string `pulumi:"healthStatus"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataId string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Fully qualified ARM ID of the virtual machine represented by this item.
	VirtualMachineId string `pulumi:"virtualMachineId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
type AzureIaaSComputeVMProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSComputeVMProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSComputeVMProtectedItemResponse)(nil)).Elem()
}

func (o AzureIaaSComputeVMProtectedItemResponseOutput) ToAzureIaaSComputeVMProtectedItemResponseOutput() AzureIaaSComputeVMProtectedItemResponseOutput {
	return o
}

func (o AzureIaaSComputeVMProtectedItemResponseOutput) ToAzureIaaSComputeVMProtectedItemResponseOutputWithContext(ctx context.Context) AzureIaaSComputeVMProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSComputeVMProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSComputeVMProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSComputeVMProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSComputeVMProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *AzureIaaSVMProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) ExtendedProperties() ExtendedPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *ExtendedPropertiesResponse {
		return v.ExtendedProperties
	}).(ExtendedPropertiesResponsePtrOutput)
}

// Friendly name of the VM represented by this backup item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Health details on this backup item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) HealthDetails() AzureIaaSVMHealthDetailsResponseArrayOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) []AzureIaaSVMHealthDetailsResponse {
		return v.HealthDetails
	}).(AzureIaaSVMHealthDetailsResponseArrayOutput)
}

// Health status of protected item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) HealthStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.HealthStatus }).(pulumi.StringOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSComputeVMProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSComputeVMProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSComputeVMProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSComputeVMProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSComputeVMProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Last backup operation status.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) LastBackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.LastBackupTime }).(pulumi.StringOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSComputeVMProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) ProtectedItemDataId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.ProtectedItemDataId }).(pulumi.StringOutput)
}

// backup item type.
// Expected value is 'Microsoft.Compute/virtualMachines'.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSComputeVMProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSComputeVMProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureIaaSComputeVMProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Fully qualified ARM ID of the virtual machine represented by this item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) VirtualMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.VirtualMachineId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Azure IaaS VM workload-specific Health Details.
type AzureIaaSVMHealthDetailsResponse struct {
	// Health Code
	Code int `pulumi:"code"`
	// Health Message
	Message string `pulumi:"message"`
	// Health Recommended Actions
	Recommendations []string `pulumi:"recommendations"`
	// Health Title
	Title string `pulumi:"title"`
}

// Azure IaaS VM workload-specific Health Details.
type AzureIaaSVMHealthDetailsResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMHealthDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMHealthDetailsResponse)(nil)).Elem()
}

func (o AzureIaaSVMHealthDetailsResponseOutput) ToAzureIaaSVMHealthDetailsResponseOutput() AzureIaaSVMHealthDetailsResponseOutput {
	return o
}

func (o AzureIaaSVMHealthDetailsResponseOutput) ToAzureIaaSVMHealthDetailsResponseOutputWithContext(ctx context.Context) AzureIaaSVMHealthDetailsResponseOutput {
	return o
}

// Health Code
func (o AzureIaaSVMHealthDetailsResponseOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v AzureIaaSVMHealthDetailsResponse) int { return v.Code }).(pulumi.IntOutput)
}

// Health Message
func (o AzureIaaSVMHealthDetailsResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMHealthDetailsResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Health Recommended Actions
func (o AzureIaaSVMHealthDetailsResponseOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSVMHealthDetailsResponse) []string { return v.Recommendations }).(pulumi.StringArrayOutput)
}

// Health Title
func (o AzureIaaSVMHealthDetailsResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMHealthDetailsResponse) string { return v.Title }).(pulumi.StringOutput)
}

type AzureIaaSVMHealthDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMHealthDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureIaaSVMHealthDetailsResponse)(nil)).Elem()
}

func (o AzureIaaSVMHealthDetailsResponseArrayOutput) ToAzureIaaSVMHealthDetailsResponseArrayOutput() AzureIaaSVMHealthDetailsResponseArrayOutput {
	return o
}

func (o AzureIaaSVMHealthDetailsResponseArrayOutput) ToAzureIaaSVMHealthDetailsResponseArrayOutputWithContext(ctx context.Context) AzureIaaSVMHealthDetailsResponseArrayOutput {
	return o
}

func (o AzureIaaSVMHealthDetailsResponseArrayOutput) Index(i pulumi.IntInput) AzureIaaSVMHealthDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureIaaSVMHealthDetailsResponse {
		return vs[0].([]AzureIaaSVMHealthDetailsResponse)[vs[1].(int)]
	}).(AzureIaaSVMHealthDetailsResponseOutput)
}

// IaaS VM workload-specific backup item.
type AzureIaaSVMProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedProperties `pulumi:"extendedProperties"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'AzureIaaSVMProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureIaaSVMProtectedItemInput is an input type that accepts AzureIaaSVMProtectedItemArgs and AzureIaaSVMProtectedItemOutput values.
// You can construct a concrete instance of `AzureIaaSVMProtectedItemInput` via:
//
//	AzureIaaSVMProtectedItemArgs{...}
type AzureIaaSVMProtectedItemInput interface {
	pulumi.Input

	ToAzureIaaSVMProtectedItemOutput() AzureIaaSVMProtectedItemOutput
	ToAzureIaaSVMProtectedItemOutputWithContext(context.Context) AzureIaaSVMProtectedItemOutput
}

// IaaS VM workload-specific backup item.
type AzureIaaSVMProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureIaaSVMProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties ExtendedPropertiesPtrInput `pulumi:"extendedProperties"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'AzureIaaSVMProtectedItem'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus pulumi.StringPtrInput `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureIaaSVMProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectedItem)(nil)).Elem()
}

func (i AzureIaaSVMProtectedItemArgs) ToAzureIaaSVMProtectedItemOutput() AzureIaaSVMProtectedItemOutput {
	return i.ToAzureIaaSVMProtectedItemOutputWithContext(context.Background())
}

func (i AzureIaaSVMProtectedItemArgs) ToAzureIaaSVMProtectedItemOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectedItemOutput)
}

func (i AzureIaaSVMProtectedItemArgs) ToAzureIaaSVMProtectedItemPtrOutput() AzureIaaSVMProtectedItemPtrOutput {
	return i.ToAzureIaaSVMProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureIaaSVMProtectedItemArgs) ToAzureIaaSVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectedItemOutput).ToAzureIaaSVMProtectedItemPtrOutputWithContext(ctx)
}

// AzureIaaSVMProtectedItemPtrInput is an input type that accepts AzureIaaSVMProtectedItemArgs, AzureIaaSVMProtectedItemPtr and AzureIaaSVMProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureIaaSVMProtectedItemPtrInput` via:
//
//	        AzureIaaSVMProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureIaaSVMProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureIaaSVMProtectedItemPtrOutput() AzureIaaSVMProtectedItemPtrOutput
	ToAzureIaaSVMProtectedItemPtrOutputWithContext(context.Context) AzureIaaSVMProtectedItemPtrOutput
}

type azureIaaSVMProtectedItemPtrType AzureIaaSVMProtectedItemArgs

func AzureIaaSVMProtectedItemPtr(v *AzureIaaSVMProtectedItemArgs) AzureIaaSVMProtectedItemPtrInput {
	return (*azureIaaSVMProtectedItemPtrType)(v)
}

func (*azureIaaSVMProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSVMProtectedItem)(nil)).Elem()
}

func (i *azureIaaSVMProtectedItemPtrType) ToAzureIaaSVMProtectedItemPtrOutput() AzureIaaSVMProtectedItemPtrOutput {
	return i.ToAzureIaaSVMProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureIaaSVMProtectedItemPtrType) ToAzureIaaSVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectedItemPtrOutput)
}

// IaaS VM workload-specific backup item.
type AzureIaaSVMProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectedItem)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemOutput) ToAzureIaaSVMProtectedItemOutput() AzureIaaSVMProtectedItemOutput {
	return o
}

func (o AzureIaaSVMProtectedItemOutput) ToAzureIaaSVMProtectedItemOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemOutput {
	return o
}

func (o AzureIaaSVMProtectedItemOutput) ToAzureIaaSVMProtectedItemPtrOutput() AzureIaaSVMProtectedItemPtrOutput {
	return o.ToAzureIaaSVMProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureIaaSVMProtectedItemOutput) ToAzureIaaSVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureIaaSVMProtectedItem) *AzureIaaSVMProtectedItem {
		return &v
	}).(AzureIaaSVMProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSVMProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSVMProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSVMProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSVMProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSVMProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSVMProtectedItemOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *AzureIaaSVMProtectedItemExtendedInfo { return v.ExtendedInfo }).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSVMProtectedItemOutput) ExtendedProperties() ExtendedPropertiesPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *ExtendedProperties { return v.ExtendedProperties }).(ExtendedPropertiesPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSVMProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSVMProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSVMProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSVMProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSVMProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) map[string]KPIResourceHealthDetails { return v.KpisHealths }).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status.
func (o AzureIaaSVMProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSVMProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSVMProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSVMProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureIaaSVMProtectedItem'.
func (o AzureIaaSVMProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureIaaSVMProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSVMProtectedItemOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSVMProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSVMProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSVMProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureIaaSVMProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSVMProtectedItem)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemPtrOutput) ToAzureIaaSVMProtectedItemPtrOutput() AzureIaaSVMProtectedItemPtrOutput {
	return o
}

func (o AzureIaaSVMProtectedItemPtrOutput) ToAzureIaaSVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemPtrOutput {
	return o
}

func (o AzureIaaSVMProtectedItemPtrOutput) Elem() AzureIaaSVMProtectedItemOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) AzureIaaSVMProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureIaaSVMProtectedItem
		return ret
	}).(AzureIaaSVMProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSVMProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSVMProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSVMProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSVMProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSVMProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSVMProtectedItemPtrOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *AzureIaaSVMProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSVMProtectedItemPtrOutput) ExtendedProperties() ExtendedPropertiesPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *ExtendedProperties {
		if v == nil {
			return nil
		}
		return v.ExtendedProperties
	}).(ExtendedPropertiesPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSVMProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSVMProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSVMProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSVMProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSVMProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status.
func (o AzureIaaSVMProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSVMProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSVMProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSVMProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureIaaSVMProtectedItem'.
func (o AzureIaaSVMProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureIaaSVMProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSVMProtectedItemPtrOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionStatus
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSVMProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSVMProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSVMProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Additional information on Azure IaaS VM specific backup item.
type AzureIaaSVMProtectedItemExtendedInfo struct {
	// The latest backup copy available for this backup item in archive tier
	NewestRecoveryPointInArchive *string `pulumi:"newestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item across all tiers.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// The oldest backup copy available for this backup item in archive tier
	OldestRecoveryPointInArchive *string `pulumi:"oldestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item in vault tier
	OldestRecoveryPointInVault *string `pulumi:"oldestRecoveryPointInVault"`
	// Specifies if backup policy associated with the backup item is inconsistent.
	PolicyInconsistent *bool `pulumi:"policyInconsistent"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// AzureIaaSVMProtectedItemExtendedInfoInput is an input type that accepts AzureIaaSVMProtectedItemExtendedInfoArgs and AzureIaaSVMProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `AzureIaaSVMProtectedItemExtendedInfoInput` via:
//
//	AzureIaaSVMProtectedItemExtendedInfoArgs{...}
type AzureIaaSVMProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToAzureIaaSVMProtectedItemExtendedInfoOutput() AzureIaaSVMProtectedItemExtendedInfoOutput
	ToAzureIaaSVMProtectedItemExtendedInfoOutputWithContext(context.Context) AzureIaaSVMProtectedItemExtendedInfoOutput
}

// Additional information on Azure IaaS VM specific backup item.
type AzureIaaSVMProtectedItemExtendedInfoArgs struct {
	// The latest backup copy available for this backup item in archive tier
	NewestRecoveryPointInArchive pulumi.StringPtrInput `pulumi:"newestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item across all tiers.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// The oldest backup copy available for this backup item in archive tier
	OldestRecoveryPointInArchive pulumi.StringPtrInput `pulumi:"oldestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item in vault tier
	OldestRecoveryPointInVault pulumi.StringPtrInput `pulumi:"oldestRecoveryPointInVault"`
	// Specifies if backup policy associated with the backup item is inconsistent.
	PolicyInconsistent pulumi.BoolPtrInput `pulumi:"policyInconsistent"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
}

func (AzureIaaSVMProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectedItemExtendedInfo)(nil)).Elem()
}

func (i AzureIaaSVMProtectedItemExtendedInfoArgs) ToAzureIaaSVMProtectedItemExtendedInfoOutput() AzureIaaSVMProtectedItemExtendedInfoOutput {
	return i.ToAzureIaaSVMProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i AzureIaaSVMProtectedItemExtendedInfoArgs) ToAzureIaaSVMProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectedItemExtendedInfoOutput)
}

func (i AzureIaaSVMProtectedItemExtendedInfoArgs) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutput() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i AzureIaaSVMProtectedItemExtendedInfoArgs) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectedItemExtendedInfoOutput).ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// AzureIaaSVMProtectedItemExtendedInfoPtrInput is an input type that accepts AzureIaaSVMProtectedItemExtendedInfoArgs, AzureIaaSVMProtectedItemExtendedInfoPtr and AzureIaaSVMProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `AzureIaaSVMProtectedItemExtendedInfoPtrInput` via:
//
//	        AzureIaaSVMProtectedItemExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type AzureIaaSVMProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToAzureIaaSVMProtectedItemExtendedInfoPtrOutput() AzureIaaSVMProtectedItemExtendedInfoPtrOutput
	ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(context.Context) AzureIaaSVMProtectedItemExtendedInfoPtrOutput
}

type azureIaaSVMProtectedItemExtendedInfoPtrType AzureIaaSVMProtectedItemExtendedInfoArgs

func AzureIaaSVMProtectedItemExtendedInfoPtr(v *AzureIaaSVMProtectedItemExtendedInfoArgs) AzureIaaSVMProtectedItemExtendedInfoPtrInput {
	return (*azureIaaSVMProtectedItemExtendedInfoPtrType)(v)
}

func (*azureIaaSVMProtectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSVMProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *azureIaaSVMProtectedItemExtendedInfoPtrType) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutput() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *azureIaaSVMProtectedItemExtendedInfoPtrType) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// Additional information on Azure IaaS VM specific backup item.
type AzureIaaSVMProtectedItemExtendedInfoOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectedItemExtendedInfo)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemExtendedInfoOutput) ToAzureIaaSVMProtectedItemExtendedInfoOutput() AzureIaaSVMProtectedItemExtendedInfoOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoOutput) ToAzureIaaSVMProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoOutput) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutput() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o.ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (o AzureIaaSVMProtectedItemExtendedInfoOutput) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureIaaSVMProtectedItemExtendedInfo) *AzureIaaSVMProtectedItemExtendedInfo {
		return &v
	}).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// The latest backup copy available for this backup item in archive tier
func (o AzureIaaSVMProtectedItemExtendedInfoOutput) NewestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfo) *string { return v.NewestRecoveryPointInArchive }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item across all tiers.
func (o AzureIaaSVMProtectedItemExtendedInfoOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfo) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in archive tier
func (o AzureIaaSVMProtectedItemExtendedInfoOutput) OldestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfo) *string { return v.OldestRecoveryPointInArchive }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in vault tier
func (o AzureIaaSVMProtectedItemExtendedInfoOutput) OldestRecoveryPointInVault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfo) *string { return v.OldestRecoveryPointInVault }).(pulumi.StringPtrOutput)
}

// Specifies if backup policy associated with the backup item is inconsistent.
func (o AzureIaaSVMProtectedItemExtendedInfoOutput) PolicyInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfo) *bool { return v.PolicyInconsistent }).(pulumi.BoolPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureIaaSVMProtectedItemExtendedInfoOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfo) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureIaaSVMProtectedItemExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSVMProtectedItemExtendedInfo)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutput() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) Elem() AzureIaaSVMProtectedItemExtendedInfoOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfo) AzureIaaSVMProtectedItemExtendedInfo {
		if v != nil {
			return *v
		}
		var ret AzureIaaSVMProtectedItemExtendedInfo
		return ret
	}).(AzureIaaSVMProtectedItemExtendedInfoOutput)
}

// The latest backup copy available for this backup item in archive tier
func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) NewestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.NewestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item across all tiers.
func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in archive tier
func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) OldestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in vault tier
func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) OldestRecoveryPointInVault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPointInVault
	}).(pulumi.StringPtrOutput)
}

// Specifies if backup policy associated with the backup item is inconsistent.
func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) PolicyInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfo) *bool {
		if v == nil {
			return nil
		}
		return v.PolicyInconsistent
	}).(pulumi.BoolPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfo) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Additional information on Azure IaaS VM specific backup item.
type AzureIaaSVMProtectedItemExtendedInfoResponse struct {
	// The latest backup copy available for this backup item in archive tier
	NewestRecoveryPointInArchive *string `pulumi:"newestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item across all tiers.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// The oldest backup copy available for this backup item in archive tier
	OldestRecoveryPointInArchive *string `pulumi:"oldestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item in vault tier
	OldestRecoveryPointInVault *string `pulumi:"oldestRecoveryPointInVault"`
	// Specifies if backup policy associated with the backup item is inconsistent.
	PolicyInconsistent *bool `pulumi:"policyInconsistent"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information on Azure IaaS VM specific backup item.
type AzureIaaSVMProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) ToAzureIaaSVMProtectedItemExtendedInfoResponseOutput() AzureIaaSVMProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) ToAzureIaaSVMProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoResponseOutput {
	return o
}

// The latest backup copy available for this backup item in archive tier
func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) NewestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfoResponse) *string { return v.NewestRecoveryPointInArchive }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item across all tiers.
func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in archive tier
func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) OldestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPointInArchive }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in vault tier
func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) OldestRecoveryPointInVault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPointInVault }).(pulumi.StringPtrOutput)
}

// Specifies if backup policy associated with the backup item is inconsistent.
func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) PolicyInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfoResponse) *bool { return v.PolicyInconsistent }).(pulumi.BoolPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSVMProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) ToAzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput() AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) ToAzureIaaSVMProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) Elem() AzureIaaSVMProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) AzureIaaSVMProtectedItemExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret AzureIaaSVMProtectedItemExtendedInfoResponse
		return ret
	}).(AzureIaaSVMProtectedItemExtendedInfoResponseOutput)
}

// The latest backup copy available for this backup item in archive tier
func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) NewestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.NewestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item across all tiers.
func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in archive tier
func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in vault tier
func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPointInVault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPointInVault
	}).(pulumi.StringPtrOutput)
}

// Specifies if backup policy associated with the backup item is inconsistent.
func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) PolicyInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PolicyInconsistent
	}).(pulumi.BoolPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// IaaS VM workload-specific backup item.
type AzureIaaSVMProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedPropertiesResponse `pulumi:"extendedProperties"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName string `pulumi:"friendlyName"`
	// Health details on this backup item.
	HealthDetails []AzureIaaSVMHealthDetailsResponse `pulumi:"healthDetails"`
	// Health status of protected item.
	HealthStatus string `pulumi:"healthStatus"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataId string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'AzureIaaSVMProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Fully qualified ARM ID of the virtual machine represented by this item.
	VirtualMachineId string `pulumi:"virtualMachineId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// IaaS VM workload-specific backup item.
type AzureIaaSVMProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectedItemResponse)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemResponseOutput) ToAzureIaaSVMProtectedItemResponseOutput() AzureIaaSVMProtectedItemResponseOutput {
	return o
}

func (o AzureIaaSVMProtectedItemResponseOutput) ToAzureIaaSVMProtectedItemResponseOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureIaaSVMProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSVMProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSVMProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSVMProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSVMProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSVMProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *AzureIaaSVMProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSVMProtectedItemResponseOutput) ExtendedProperties() ExtendedPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *ExtendedPropertiesResponse { return v.ExtendedProperties }).(ExtendedPropertiesResponsePtrOutput)
}

// Friendly name of the VM represented by this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Health details on this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) HealthDetails() AzureIaaSVMHealthDetailsResponseArrayOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) []AzureIaaSVMHealthDetailsResponse { return v.HealthDetails }).(AzureIaaSVMHealthDetailsResponseArrayOutput)
}

// Health status of protected item.
func (o AzureIaaSVMProtectedItemResponseOutput) HealthStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.HealthStatus }).(pulumi.StringOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSVMProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSVMProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSVMProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSVMProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSVMProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Last backup operation status.
func (o AzureIaaSVMProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) LastBackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.LastBackupTime }).(pulumi.StringOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSVMProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSVMProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureIaaSVMProtectedItemResponseOutput) ProtectedItemDataId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.ProtectedItemDataId }).(pulumi.StringOutput)
}

// backup item type.
// Expected value is 'AzureIaaSVMProtectedItem'.
func (o AzureIaaSVMProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSVMProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSVMProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSVMProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureIaaSVMProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Fully qualified ARM ID of the virtual machine represented by this item.
func (o AzureIaaSVMProtectedItemResponseOutput) VirtualMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.VirtualMachineId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureIaaSVMProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// IaaS VM workload-specific backup policy.
type AzureIaaSVMProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureIaasVM'.
	BackupManagementType string                      `pulumi:"backupManagementType"`
	InstantRPDetails     *InstantRPAdditionalDetails `pulumi:"instantRPDetails"`
	// Instant RP retention policy range in days
	InstantRpRetentionRangeInDays *int    `pulumi:"instantRpRetentionRangeInDays"`
	PolicyType                    *string `pulumi:"policyType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
	// Tiering policy to automatically move RPs to another tier
	// Key is Target Tier, defined in RecoveryPointTierType enum.
	// Tiering policy specifies the criteria to move RP to the target tier.
	TieringPolicy map[string]TieringPolicy `pulumi:"tieringPolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// AzureIaaSVMProtectionPolicyInput is an input type that accepts AzureIaaSVMProtectionPolicyArgs and AzureIaaSVMProtectionPolicyOutput values.
// You can construct a concrete instance of `AzureIaaSVMProtectionPolicyInput` via:
//
//	AzureIaaSVMProtectionPolicyArgs{...}
type AzureIaaSVMProtectionPolicyInput interface {
	pulumi.Input

	ToAzureIaaSVMProtectionPolicyOutput() AzureIaaSVMProtectionPolicyOutput
	ToAzureIaaSVMProtectionPolicyOutputWithContext(context.Context) AzureIaaSVMProtectionPolicyOutput
}

// IaaS VM workload-specific backup policy.
type AzureIaaSVMProtectionPolicyArgs struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureIaasVM'.
	BackupManagementType pulumi.StringInput                 `pulumi:"backupManagementType"`
	InstantRPDetails     InstantRPAdditionalDetailsPtrInput `pulumi:"instantRPDetails"`
	// Instant RP retention policy range in days
	InstantRpRetentionRangeInDays pulumi.IntPtrInput    `pulumi:"instantRpRetentionRangeInDays"`
	PolicyType                    pulumi.StringPtrInput `pulumi:"policyType"`
	// Number of items associated with this policy.
	ProtectedItemsCount pulumi.IntPtrInput `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy pulumi.Input `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy pulumi.Input `pulumi:"schedulePolicy"`
	// Tiering policy to automatically move RPs to another tier
	// Key is Target Tier, defined in RecoveryPointTierType enum.
	// Tiering policy specifies the criteria to move RP to the target tier.
	TieringPolicy TieringPolicyMapInput `pulumi:"tieringPolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (AzureIaaSVMProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectionPolicy)(nil)).Elem()
}

func (i AzureIaaSVMProtectionPolicyArgs) ToAzureIaaSVMProtectionPolicyOutput() AzureIaaSVMProtectionPolicyOutput {
	return i.ToAzureIaaSVMProtectionPolicyOutputWithContext(context.Background())
}

func (i AzureIaaSVMProtectionPolicyArgs) ToAzureIaaSVMProtectionPolicyOutputWithContext(ctx context.Context) AzureIaaSVMProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectionPolicyOutput)
}

func (i AzureIaaSVMProtectionPolicyArgs) ToAzureIaaSVMProtectionPolicyPtrOutput() AzureIaaSVMProtectionPolicyPtrOutput {
	return i.ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i AzureIaaSVMProtectionPolicyArgs) ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectionPolicyOutput).ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(ctx)
}

// AzureIaaSVMProtectionPolicyPtrInput is an input type that accepts AzureIaaSVMProtectionPolicyArgs, AzureIaaSVMProtectionPolicyPtr and AzureIaaSVMProtectionPolicyPtrOutput values.
// You can construct a concrete instance of `AzureIaaSVMProtectionPolicyPtrInput` via:
//
//	        AzureIaaSVMProtectionPolicyArgs{...}
//
//	or:
//
//	        nil
type AzureIaaSVMProtectionPolicyPtrInput interface {
	pulumi.Input

	ToAzureIaaSVMProtectionPolicyPtrOutput() AzureIaaSVMProtectionPolicyPtrOutput
	ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(context.Context) AzureIaaSVMProtectionPolicyPtrOutput
}

type azureIaaSVMProtectionPolicyPtrType AzureIaaSVMProtectionPolicyArgs

func AzureIaaSVMProtectionPolicyPtr(v *AzureIaaSVMProtectionPolicyArgs) AzureIaaSVMProtectionPolicyPtrInput {
	return (*azureIaaSVMProtectionPolicyPtrType)(v)
}

func (*azureIaaSVMProtectionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSVMProtectionPolicy)(nil)).Elem()
}

func (i *azureIaaSVMProtectionPolicyPtrType) ToAzureIaaSVMProtectionPolicyPtrOutput() AzureIaaSVMProtectionPolicyPtrOutput {
	return i.ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i *azureIaaSVMProtectionPolicyPtrType) ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectionPolicyPtrOutput)
}

// IaaS VM workload-specific backup policy.
type AzureIaaSVMProtectionPolicyOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectionPolicy)(nil)).Elem()
}

func (o AzureIaaSVMProtectionPolicyOutput) ToAzureIaaSVMProtectionPolicyOutput() AzureIaaSVMProtectionPolicyOutput {
	return o
}

func (o AzureIaaSVMProtectionPolicyOutput) ToAzureIaaSVMProtectionPolicyOutputWithContext(ctx context.Context) AzureIaaSVMProtectionPolicyOutput {
	return o
}

func (o AzureIaaSVMProtectionPolicyOutput) ToAzureIaaSVMProtectionPolicyPtrOutput() AzureIaaSVMProtectionPolicyPtrOutput {
	return o.ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(context.Background())
}

func (o AzureIaaSVMProtectionPolicyOutput) ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureIaaSVMProtectionPolicy) *AzureIaaSVMProtectionPolicy {
		return &v
	}).(AzureIaaSVMProtectionPolicyPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureIaasVM'.
func (o AzureIaaSVMProtectionPolicyOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

func (o AzureIaaSVMProtectionPolicyOutput) InstantRPDetails() InstantRPAdditionalDetailsPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) *InstantRPAdditionalDetails { return v.InstantRPDetails }).(InstantRPAdditionalDetailsPtrOutput)
}

// Instant RP retention policy range in days
func (o AzureIaaSVMProtectionPolicyOutput) InstantRpRetentionRangeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) *int { return v.InstantRpRetentionRangeInDays }).(pulumi.IntPtrOutput)
}

func (o AzureIaaSVMProtectionPolicyOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o AzureIaaSVMProtectionPolicyOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureIaaSVMProtectionPolicyOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Retention policy with the details on backup copy retention ranges.
func (o AzureIaaSVMProtectionPolicyOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Backup schedule specified as part of backup policy.
func (o AzureIaaSVMProtectionPolicyOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

// Tiering policy to automatically move RPs to another tier
// Key is Target Tier, defined in RecoveryPointTierType enum.
// Tiering policy specifies the criteria to move RP to the target tier.
func (o AzureIaaSVMProtectionPolicyOutput) TieringPolicy() TieringPolicyMapOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) map[string]TieringPolicy { return v.TieringPolicy }).(TieringPolicyMapOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o AzureIaaSVMProtectionPolicyOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type AzureIaaSVMProtectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSVMProtectionPolicy)(nil)).Elem()
}

func (o AzureIaaSVMProtectionPolicyPtrOutput) ToAzureIaaSVMProtectionPolicyPtrOutput() AzureIaaSVMProtectionPolicyPtrOutput {
	return o
}

func (o AzureIaaSVMProtectionPolicyPtrOutput) ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectionPolicyPtrOutput {
	return o
}

func (o AzureIaaSVMProtectionPolicyPtrOutput) Elem() AzureIaaSVMProtectionPolicyOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) AzureIaaSVMProtectionPolicy {
		if v != nil {
			return *v
		}
		var ret AzureIaaSVMProtectionPolicy
		return ret
	}).(AzureIaaSVMProtectionPolicyOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureIaasVM'.
func (o AzureIaaSVMProtectionPolicyPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

func (o AzureIaaSVMProtectionPolicyPtrOutput) InstantRPDetails() InstantRPAdditionalDetailsPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) *InstantRPAdditionalDetails {
		if v == nil {
			return nil
		}
		return v.InstantRPDetails
	}).(InstantRPAdditionalDetailsPtrOutput)
}

// Instant RP retention policy range in days
func (o AzureIaaSVMProtectionPolicyPtrOutput) InstantRpRetentionRangeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.InstantRpRetentionRangeInDays
	}).(pulumi.IntPtrOutput)
}

func (o AzureIaaSVMProtectionPolicyPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o AzureIaaSVMProtectionPolicyPtrOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.ProtectedItemsCount
	}).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureIaaSVMProtectionPolicyPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Retention policy with the details on backup copy retention ranges.
func (o AzureIaaSVMProtectionPolicyPtrOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.RetentionPolicy
	}).(pulumi.AnyOutput)
}

// Backup schedule specified as part of backup policy.
func (o AzureIaaSVMProtectionPolicyPtrOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.SchedulePolicy
	}).(pulumi.AnyOutput)
}

// Tiering policy to automatically move RPs to another tier
// Key is Target Tier, defined in RecoveryPointTierType enum.
// Tiering policy specifies the criteria to move RP to the target tier.
func (o AzureIaaSVMProtectionPolicyPtrOutput) TieringPolicy() TieringPolicyMapOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) map[string]TieringPolicy {
		if v == nil {
			return nil
		}
		return v.TieringPolicy
	}).(TieringPolicyMapOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o AzureIaaSVMProtectionPolicyPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific backup policy.
type AzureIaaSVMProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureIaasVM'.
	BackupManagementType string                              `pulumi:"backupManagementType"`
	InstantRPDetails     *InstantRPAdditionalDetailsResponse `pulumi:"instantRPDetails"`
	// Instant RP retention policy range in days
	InstantRpRetentionRangeInDays *int    `pulumi:"instantRpRetentionRangeInDays"`
	PolicyType                    *string `pulumi:"policyType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
	// Tiering policy to automatically move RPs to another tier
	// Key is Target Tier, defined in RecoveryPointTierType enum.
	// Tiering policy specifies the criteria to move RP to the target tier.
	TieringPolicy map[string]TieringPolicyResponse `pulumi:"tieringPolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// IaaS VM workload-specific backup policy.
type AzureIaaSVMProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectionPolicyResponse)(nil)).Elem()
}

func (o AzureIaaSVMProtectionPolicyResponseOutput) ToAzureIaaSVMProtectionPolicyResponseOutput() AzureIaaSVMProtectionPolicyResponseOutput {
	return o
}

func (o AzureIaaSVMProtectionPolicyResponseOutput) ToAzureIaaSVMProtectionPolicyResponseOutputWithContext(ctx context.Context) AzureIaaSVMProtectionPolicyResponseOutput {
	return o
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureIaasVM'.
func (o AzureIaaSVMProtectionPolicyResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

func (o AzureIaaSVMProtectionPolicyResponseOutput) InstantRPDetails() InstantRPAdditionalDetailsResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) *InstantRPAdditionalDetailsResponse {
		return v.InstantRPDetails
	}).(InstantRPAdditionalDetailsResponsePtrOutput)
}

// Instant RP retention policy range in days
func (o AzureIaaSVMProtectionPolicyResponseOutput) InstantRpRetentionRangeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) *int { return v.InstantRpRetentionRangeInDays }).(pulumi.IntPtrOutput)
}

func (o AzureIaaSVMProtectionPolicyResponseOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o AzureIaaSVMProtectionPolicyResponseOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureIaaSVMProtectionPolicyResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Retention policy with the details on backup copy retention ranges.
func (o AzureIaaSVMProtectionPolicyResponseOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Backup schedule specified as part of backup policy.
func (o AzureIaaSVMProtectionPolicyResponseOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

// Tiering policy to automatically move RPs to another tier
// Key is Target Tier, defined in RecoveryPointTierType enum.
// Tiering policy specifies the criteria to move RP to the target tier.
func (o AzureIaaSVMProtectionPolicyResponseOutput) TieringPolicy() TieringPolicyResponseMapOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) map[string]TieringPolicyResponse { return v.TieringPolicy }).(TieringPolicyResponseMapOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o AzureIaaSVMProtectionPolicyResponseOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Settings for Azure Monitor based alerts
type AzureMonitorAlertSettings struct {
	AlertsForAllJobFailures *string `pulumi:"alertsForAllJobFailures"`
}

// AzureMonitorAlertSettingsInput is an input type that accepts AzureMonitorAlertSettingsArgs and AzureMonitorAlertSettingsOutput values.
// You can construct a concrete instance of `AzureMonitorAlertSettingsInput` via:
//
//	AzureMonitorAlertSettingsArgs{...}
type AzureMonitorAlertSettingsInput interface {
	pulumi.Input

	ToAzureMonitorAlertSettingsOutput() AzureMonitorAlertSettingsOutput
	ToAzureMonitorAlertSettingsOutputWithContext(context.Context) AzureMonitorAlertSettingsOutput
}

// Settings for Azure Monitor based alerts
type AzureMonitorAlertSettingsArgs struct {
	AlertsForAllJobFailures pulumi.StringPtrInput `pulumi:"alertsForAllJobFailures"`
}

func (AzureMonitorAlertSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMonitorAlertSettings)(nil)).Elem()
}

func (i AzureMonitorAlertSettingsArgs) ToAzureMonitorAlertSettingsOutput() AzureMonitorAlertSettingsOutput {
	return i.ToAzureMonitorAlertSettingsOutputWithContext(context.Background())
}

func (i AzureMonitorAlertSettingsArgs) ToAzureMonitorAlertSettingsOutputWithContext(ctx context.Context) AzureMonitorAlertSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMonitorAlertSettingsOutput)
}

func (i AzureMonitorAlertSettingsArgs) ToAzureMonitorAlertSettingsPtrOutput() AzureMonitorAlertSettingsPtrOutput {
	return i.ToAzureMonitorAlertSettingsPtrOutputWithContext(context.Background())
}

func (i AzureMonitorAlertSettingsArgs) ToAzureMonitorAlertSettingsPtrOutputWithContext(ctx context.Context) AzureMonitorAlertSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMonitorAlertSettingsOutput).ToAzureMonitorAlertSettingsPtrOutputWithContext(ctx)
}

// AzureMonitorAlertSettingsPtrInput is an input type that accepts AzureMonitorAlertSettingsArgs, AzureMonitorAlertSettingsPtr and AzureMonitorAlertSettingsPtrOutput values.
// You can construct a concrete instance of `AzureMonitorAlertSettingsPtrInput` via:
//
//	        AzureMonitorAlertSettingsArgs{...}
//
//	or:
//
//	        nil
type AzureMonitorAlertSettingsPtrInput interface {
	pulumi.Input

	ToAzureMonitorAlertSettingsPtrOutput() AzureMonitorAlertSettingsPtrOutput
	ToAzureMonitorAlertSettingsPtrOutputWithContext(context.Context) AzureMonitorAlertSettingsPtrOutput
}

type azureMonitorAlertSettingsPtrType AzureMonitorAlertSettingsArgs

func AzureMonitorAlertSettingsPtr(v *AzureMonitorAlertSettingsArgs) AzureMonitorAlertSettingsPtrInput {
	return (*azureMonitorAlertSettingsPtrType)(v)
}

func (*azureMonitorAlertSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMonitorAlertSettings)(nil)).Elem()
}

func (i *azureMonitorAlertSettingsPtrType) ToAzureMonitorAlertSettingsPtrOutput() AzureMonitorAlertSettingsPtrOutput {
	return i.ToAzureMonitorAlertSettingsPtrOutputWithContext(context.Background())
}

func (i *azureMonitorAlertSettingsPtrType) ToAzureMonitorAlertSettingsPtrOutputWithContext(ctx context.Context) AzureMonitorAlertSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMonitorAlertSettingsPtrOutput)
}

// Settings for Azure Monitor based alerts
type AzureMonitorAlertSettingsOutput struct{ *pulumi.OutputState }

func (AzureMonitorAlertSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMonitorAlertSettings)(nil)).Elem()
}

func (o AzureMonitorAlertSettingsOutput) ToAzureMonitorAlertSettingsOutput() AzureMonitorAlertSettingsOutput {
	return o
}

func (o AzureMonitorAlertSettingsOutput) ToAzureMonitorAlertSettingsOutputWithContext(ctx context.Context) AzureMonitorAlertSettingsOutput {
	return o
}

func (o AzureMonitorAlertSettingsOutput) ToAzureMonitorAlertSettingsPtrOutput() AzureMonitorAlertSettingsPtrOutput {
	return o.ToAzureMonitorAlertSettingsPtrOutputWithContext(context.Background())
}

func (o AzureMonitorAlertSettingsOutput) ToAzureMonitorAlertSettingsPtrOutputWithContext(ctx context.Context) AzureMonitorAlertSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureMonitorAlertSettings) *AzureMonitorAlertSettings {
		return &v
	}).(AzureMonitorAlertSettingsPtrOutput)
}

func (o AzureMonitorAlertSettingsOutput) AlertsForAllJobFailures() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMonitorAlertSettings) *string { return v.AlertsForAllJobFailures }).(pulumi.StringPtrOutput)
}

type AzureMonitorAlertSettingsPtrOutput struct{ *pulumi.OutputState }

func (AzureMonitorAlertSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMonitorAlertSettings)(nil)).Elem()
}

func (o AzureMonitorAlertSettingsPtrOutput) ToAzureMonitorAlertSettingsPtrOutput() AzureMonitorAlertSettingsPtrOutput {
	return o
}

func (o AzureMonitorAlertSettingsPtrOutput) ToAzureMonitorAlertSettingsPtrOutputWithContext(ctx context.Context) AzureMonitorAlertSettingsPtrOutput {
	return o
}

func (o AzureMonitorAlertSettingsPtrOutput) Elem() AzureMonitorAlertSettingsOutput {
	return o.ApplyT(func(v *AzureMonitorAlertSettings) AzureMonitorAlertSettings {
		if v != nil {
			return *v
		}
		var ret AzureMonitorAlertSettings
		return ret
	}).(AzureMonitorAlertSettingsOutput)
}

func (o AzureMonitorAlertSettingsPtrOutput) AlertsForAllJobFailures() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMonitorAlertSettings) *string {
		if v == nil {
			return nil
		}
		return v.AlertsForAllJobFailures
	}).(pulumi.StringPtrOutput)
}

// Settings for Azure Monitor based alerts
type AzureMonitorAlertSettingsResponse struct {
	AlertsForAllJobFailures *string `pulumi:"alertsForAllJobFailures"`
}

// Settings for Azure Monitor based alerts
type AzureMonitorAlertSettingsResponseOutput struct{ *pulumi.OutputState }

func (AzureMonitorAlertSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMonitorAlertSettingsResponse)(nil)).Elem()
}

func (o AzureMonitorAlertSettingsResponseOutput) ToAzureMonitorAlertSettingsResponseOutput() AzureMonitorAlertSettingsResponseOutput {
	return o
}

func (o AzureMonitorAlertSettingsResponseOutput) ToAzureMonitorAlertSettingsResponseOutputWithContext(ctx context.Context) AzureMonitorAlertSettingsResponseOutput {
	return o
}

func (o AzureMonitorAlertSettingsResponseOutput) AlertsForAllJobFailures() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMonitorAlertSettingsResponse) *string { return v.AlertsForAllJobFailures }).(pulumi.StringPtrOutput)
}

type AzureMonitorAlertSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureMonitorAlertSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMonitorAlertSettingsResponse)(nil)).Elem()
}

func (o AzureMonitorAlertSettingsResponsePtrOutput) ToAzureMonitorAlertSettingsResponsePtrOutput() AzureMonitorAlertSettingsResponsePtrOutput {
	return o
}

func (o AzureMonitorAlertSettingsResponsePtrOutput) ToAzureMonitorAlertSettingsResponsePtrOutputWithContext(ctx context.Context) AzureMonitorAlertSettingsResponsePtrOutput {
	return o
}

func (o AzureMonitorAlertSettingsResponsePtrOutput) Elem() AzureMonitorAlertSettingsResponseOutput {
	return o.ApplyT(func(v *AzureMonitorAlertSettingsResponse) AzureMonitorAlertSettingsResponse {
		if v != nil {
			return *v
		}
		var ret AzureMonitorAlertSettingsResponse
		return ret
	}).(AzureMonitorAlertSettingsResponseOutput)
}

func (o AzureMonitorAlertSettingsResponsePtrOutput) AlertsForAllJobFailures() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMonitorAlertSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlertsForAllJobFailures
	}).(pulumi.StringPtrOutput)
}

// Azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'RecoveryServiceVaultItem'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureRecoveryServiceVaultProtectionIntentInput is an input type that accepts AzureRecoveryServiceVaultProtectionIntentArgs and AzureRecoveryServiceVaultProtectionIntentOutput values.
// You can construct a concrete instance of `AzureRecoveryServiceVaultProtectionIntentInput` via:
//
//	AzureRecoveryServiceVaultProtectionIntentArgs{...}
type AzureRecoveryServiceVaultProtectionIntentInput interface {
	pulumi.Input

	ToAzureRecoveryServiceVaultProtectionIntentOutput() AzureRecoveryServiceVaultProtectionIntentOutput
	ToAzureRecoveryServiceVaultProtectionIntentOutputWithContext(context.Context) AzureRecoveryServiceVaultProtectionIntentOutput
}

// Azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntentArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId pulumi.StringPtrInput `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'RecoveryServiceVaultItem'.
	ProtectionIntentItemType pulumi.StringInput `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureRecoveryServiceVaultProtectionIntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureRecoveryServiceVaultProtectionIntent)(nil)).Elem()
}

func (i AzureRecoveryServiceVaultProtectionIntentArgs) ToAzureRecoveryServiceVaultProtectionIntentOutput() AzureRecoveryServiceVaultProtectionIntentOutput {
	return i.ToAzureRecoveryServiceVaultProtectionIntentOutputWithContext(context.Background())
}

func (i AzureRecoveryServiceVaultProtectionIntentArgs) ToAzureRecoveryServiceVaultProtectionIntentOutputWithContext(ctx context.Context) AzureRecoveryServiceVaultProtectionIntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureRecoveryServiceVaultProtectionIntentOutput)
}

func (i AzureRecoveryServiceVaultProtectionIntentArgs) ToAzureRecoveryServiceVaultProtectionIntentPtrOutput() AzureRecoveryServiceVaultProtectionIntentPtrOutput {
	return i.ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(context.Background())
}

func (i AzureRecoveryServiceVaultProtectionIntentArgs) ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(ctx context.Context) AzureRecoveryServiceVaultProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureRecoveryServiceVaultProtectionIntentOutput).ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(ctx)
}

// AzureRecoveryServiceVaultProtectionIntentPtrInput is an input type that accepts AzureRecoveryServiceVaultProtectionIntentArgs, AzureRecoveryServiceVaultProtectionIntentPtr and AzureRecoveryServiceVaultProtectionIntentPtrOutput values.
// You can construct a concrete instance of `AzureRecoveryServiceVaultProtectionIntentPtrInput` via:
//
//	        AzureRecoveryServiceVaultProtectionIntentArgs{...}
//
//	or:
//
//	        nil
type AzureRecoveryServiceVaultProtectionIntentPtrInput interface {
	pulumi.Input

	ToAzureRecoveryServiceVaultProtectionIntentPtrOutput() AzureRecoveryServiceVaultProtectionIntentPtrOutput
	ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(context.Context) AzureRecoveryServiceVaultProtectionIntentPtrOutput
}

type azureRecoveryServiceVaultProtectionIntentPtrType AzureRecoveryServiceVaultProtectionIntentArgs

func AzureRecoveryServiceVaultProtectionIntentPtr(v *AzureRecoveryServiceVaultProtectionIntentArgs) AzureRecoveryServiceVaultProtectionIntentPtrInput {
	return (*azureRecoveryServiceVaultProtectionIntentPtrType)(v)
}

func (*azureRecoveryServiceVaultProtectionIntentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureRecoveryServiceVaultProtectionIntent)(nil)).Elem()
}

func (i *azureRecoveryServiceVaultProtectionIntentPtrType) ToAzureRecoveryServiceVaultProtectionIntentPtrOutput() AzureRecoveryServiceVaultProtectionIntentPtrOutput {
	return i.ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(context.Background())
}

func (i *azureRecoveryServiceVaultProtectionIntentPtrType) ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(ctx context.Context) AzureRecoveryServiceVaultProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureRecoveryServiceVaultProtectionIntentPtrOutput)
}

// Azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntentOutput struct{ *pulumi.OutputState }

func (AzureRecoveryServiceVaultProtectionIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureRecoveryServiceVaultProtectionIntent)(nil)).Elem()
}

func (o AzureRecoveryServiceVaultProtectionIntentOutput) ToAzureRecoveryServiceVaultProtectionIntentOutput() AzureRecoveryServiceVaultProtectionIntentOutput {
	return o
}

func (o AzureRecoveryServiceVaultProtectionIntentOutput) ToAzureRecoveryServiceVaultProtectionIntentOutputWithContext(ctx context.Context) AzureRecoveryServiceVaultProtectionIntentOutput {
	return o
}

func (o AzureRecoveryServiceVaultProtectionIntentOutput) ToAzureRecoveryServiceVaultProtectionIntentPtrOutput() AzureRecoveryServiceVaultProtectionIntentPtrOutput {
	return o.ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(context.Background())
}

func (o AzureRecoveryServiceVaultProtectionIntentOutput) ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(ctx context.Context) AzureRecoveryServiceVaultProtectionIntentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureRecoveryServiceVaultProtectionIntent) *AzureRecoveryServiceVaultProtectionIntent {
		return &v
	}).(AzureRecoveryServiceVaultProtectionIntentPtrOutput)
}

// Type of backup management for the backed up item.
func (o AzureRecoveryServiceVaultProtectionIntentOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntent) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureRecoveryServiceVaultProtectionIntentOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntent) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureRecoveryServiceVaultProtectionIntentOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntent) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'RecoveryServiceVaultItem'.
func (o AzureRecoveryServiceVaultProtectionIntentOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntent) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureRecoveryServiceVaultProtectionIntentOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntent) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureRecoveryServiceVaultProtectionIntentOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntent) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureRecoveryServiceVaultProtectionIntentPtrOutput struct{ *pulumi.OutputState }

func (AzureRecoveryServiceVaultProtectionIntentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureRecoveryServiceVaultProtectionIntent)(nil)).Elem()
}

func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) ToAzureRecoveryServiceVaultProtectionIntentPtrOutput() AzureRecoveryServiceVaultProtectionIntentPtrOutput {
	return o
}

func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(ctx context.Context) AzureRecoveryServiceVaultProtectionIntentPtrOutput {
	return o
}

func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) Elem() AzureRecoveryServiceVaultProtectionIntentOutput {
	return o.ApplyT(func(v *AzureRecoveryServiceVaultProtectionIntent) AzureRecoveryServiceVaultProtectionIntent {
		if v != nil {
			return *v
		}
		var ret AzureRecoveryServiceVaultProtectionIntent
		return ret
	}).(AzureRecoveryServiceVaultProtectionIntentOutput)
}

// Type of backup management for the backed up item.
func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureRecoveryServiceVaultProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureRecoveryServiceVaultProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ItemId
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureRecoveryServiceVaultProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'RecoveryServiceVaultItem'.
func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) ProtectionIntentItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureRecoveryServiceVaultProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectionIntentItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureRecoveryServiceVaultProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureRecoveryServiceVaultProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'RecoveryServiceVaultItem'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// Azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntentResponseOutput struct{ *pulumi.OutputState }

func (AzureRecoveryServiceVaultProtectionIntentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureRecoveryServiceVaultProtectionIntentResponse)(nil)).Elem()
}

func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) ToAzureRecoveryServiceVaultProtectionIntentResponseOutput() AzureRecoveryServiceVaultProtectionIntentResponseOutput {
	return o
}

func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) ToAzureRecoveryServiceVaultProtectionIntentResponseOutputWithContext(ctx context.Context) AzureRecoveryServiceVaultProtectionIntentResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'RecoveryServiceVaultItem'.
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// IaaS VM specific backup protection intent item.
type AzureResourceProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureResourceItem'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureResourceProtectionIntentInput is an input type that accepts AzureResourceProtectionIntentArgs and AzureResourceProtectionIntentOutput values.
// You can construct a concrete instance of `AzureResourceProtectionIntentInput` via:
//
//	AzureResourceProtectionIntentArgs{...}
type AzureResourceProtectionIntentInput interface {
	pulumi.Input

	ToAzureResourceProtectionIntentOutput() AzureResourceProtectionIntentOutput
	ToAzureResourceProtectionIntentOutputWithContext(context.Context) AzureResourceProtectionIntentOutput
}

// IaaS VM specific backup protection intent item.
type AzureResourceProtectionIntentArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId pulumi.StringPtrInput `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureResourceItem'.
	ProtectionIntentItemType pulumi.StringInput `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureResourceProtectionIntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceProtectionIntent)(nil)).Elem()
}

func (i AzureResourceProtectionIntentArgs) ToAzureResourceProtectionIntentOutput() AzureResourceProtectionIntentOutput {
	return i.ToAzureResourceProtectionIntentOutputWithContext(context.Background())
}

func (i AzureResourceProtectionIntentArgs) ToAzureResourceProtectionIntentOutputWithContext(ctx context.Context) AzureResourceProtectionIntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureResourceProtectionIntentOutput)
}

func (i AzureResourceProtectionIntentArgs) ToAzureResourceProtectionIntentPtrOutput() AzureResourceProtectionIntentPtrOutput {
	return i.ToAzureResourceProtectionIntentPtrOutputWithContext(context.Background())
}

func (i AzureResourceProtectionIntentArgs) ToAzureResourceProtectionIntentPtrOutputWithContext(ctx context.Context) AzureResourceProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureResourceProtectionIntentOutput).ToAzureResourceProtectionIntentPtrOutputWithContext(ctx)
}

// AzureResourceProtectionIntentPtrInput is an input type that accepts AzureResourceProtectionIntentArgs, AzureResourceProtectionIntentPtr and AzureResourceProtectionIntentPtrOutput values.
// You can construct a concrete instance of `AzureResourceProtectionIntentPtrInput` via:
//
//	        AzureResourceProtectionIntentArgs{...}
//
//	or:
//
//	        nil
type AzureResourceProtectionIntentPtrInput interface {
	pulumi.Input

	ToAzureResourceProtectionIntentPtrOutput() AzureResourceProtectionIntentPtrOutput
	ToAzureResourceProtectionIntentPtrOutputWithContext(context.Context) AzureResourceProtectionIntentPtrOutput
}

type azureResourceProtectionIntentPtrType AzureResourceProtectionIntentArgs

func AzureResourceProtectionIntentPtr(v *AzureResourceProtectionIntentArgs) AzureResourceProtectionIntentPtrInput {
	return (*azureResourceProtectionIntentPtrType)(v)
}

func (*azureResourceProtectionIntentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureResourceProtectionIntent)(nil)).Elem()
}

func (i *azureResourceProtectionIntentPtrType) ToAzureResourceProtectionIntentPtrOutput() AzureResourceProtectionIntentPtrOutput {
	return i.ToAzureResourceProtectionIntentPtrOutputWithContext(context.Background())
}

func (i *azureResourceProtectionIntentPtrType) ToAzureResourceProtectionIntentPtrOutputWithContext(ctx context.Context) AzureResourceProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureResourceProtectionIntentPtrOutput)
}

// IaaS VM specific backup protection intent item.
type AzureResourceProtectionIntentOutput struct{ *pulumi.OutputState }

func (AzureResourceProtectionIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceProtectionIntent)(nil)).Elem()
}

func (o AzureResourceProtectionIntentOutput) ToAzureResourceProtectionIntentOutput() AzureResourceProtectionIntentOutput {
	return o
}

func (o AzureResourceProtectionIntentOutput) ToAzureResourceProtectionIntentOutputWithContext(ctx context.Context) AzureResourceProtectionIntentOutput {
	return o
}

func (o AzureResourceProtectionIntentOutput) ToAzureResourceProtectionIntentPtrOutput() AzureResourceProtectionIntentPtrOutput {
	return o.ToAzureResourceProtectionIntentPtrOutputWithContext(context.Background())
}

func (o AzureResourceProtectionIntentOutput) ToAzureResourceProtectionIntentPtrOutputWithContext(ctx context.Context) AzureResourceProtectionIntentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureResourceProtectionIntent) *AzureResourceProtectionIntent {
		return &v
	}).(AzureResourceProtectionIntentPtrOutput)
}

// Type of backup management for the backed up item.
func (o AzureResourceProtectionIntentOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntent) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Friendly name of the VM represented by this backup item.
func (o AzureResourceProtectionIntentOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntent) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureResourceProtectionIntentOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntent) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureResourceProtectionIntentOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntent) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureResourceItem'.
func (o AzureResourceProtectionIntentOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntent) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureResourceProtectionIntentOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntent) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureResourceProtectionIntentOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntent) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureResourceProtectionIntentPtrOutput struct{ *pulumi.OutputState }

func (AzureResourceProtectionIntentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureResourceProtectionIntent)(nil)).Elem()
}

func (o AzureResourceProtectionIntentPtrOutput) ToAzureResourceProtectionIntentPtrOutput() AzureResourceProtectionIntentPtrOutput {
	return o
}

func (o AzureResourceProtectionIntentPtrOutput) ToAzureResourceProtectionIntentPtrOutputWithContext(ctx context.Context) AzureResourceProtectionIntentPtrOutput {
	return o
}

func (o AzureResourceProtectionIntentPtrOutput) Elem() AzureResourceProtectionIntentOutput {
	return o.ApplyT(func(v *AzureResourceProtectionIntent) AzureResourceProtectionIntent {
		if v != nil {
			return *v
		}
		var ret AzureResourceProtectionIntent
		return ret
	}).(AzureResourceProtectionIntentOutput)
}

// Type of backup management for the backed up item.
func (o AzureResourceProtectionIntentPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the VM represented by this backup item.
func (o AzureResourceProtectionIntentPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureResourceProtectionIntentPtrOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ItemId
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureResourceProtectionIntentPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureResourceItem'.
func (o AzureResourceProtectionIntentPtrOutput) ProtectionIntentItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectionIntentItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureResourceProtectionIntentPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureResourceProtectionIntentPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// IaaS VM specific backup protection intent item.
type AzureResourceProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureResourceItem'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// IaaS VM specific backup protection intent item.
type AzureResourceProtectionIntentResponseOutput struct{ *pulumi.OutputState }

func (AzureResourceProtectionIntentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceProtectionIntentResponse)(nil)).Elem()
}

func (o AzureResourceProtectionIntentResponseOutput) ToAzureResourceProtectionIntentResponseOutput() AzureResourceProtectionIntentResponseOutput {
	return o
}

func (o AzureResourceProtectionIntentResponseOutput) ToAzureResourceProtectionIntentResponseOutputWithContext(ctx context.Context) AzureResourceProtectionIntentResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureResourceProtectionIntentResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Friendly name of the VM represented by this backup item.
func (o AzureResourceProtectionIntentResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureResourceProtectionIntentResponseOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureResourceProtectionIntentResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureResourceItem'.
func (o AzureResourceProtectionIntentResponseOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureResourceProtectionIntentResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureResourceProtectionIntentResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Container for SQL workloads under SQL Availability Group.
type AzureSQLAGWorkloadContainerProtectionContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'SQLAGWorkLoadContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// AzureSQLAGWorkloadContainerProtectionContainerInput is an input type that accepts AzureSQLAGWorkloadContainerProtectionContainerArgs and AzureSQLAGWorkloadContainerProtectionContainerOutput values.
// You can construct a concrete instance of `AzureSQLAGWorkloadContainerProtectionContainerInput` via:
//
//	AzureSQLAGWorkloadContainerProtectionContainerArgs{...}
type AzureSQLAGWorkloadContainerProtectionContainerInput interface {
	pulumi.Input

	ToAzureSQLAGWorkloadContainerProtectionContainerOutput() AzureSQLAGWorkloadContainerProtectionContainerOutput
	ToAzureSQLAGWorkloadContainerProtectionContainerOutputWithContext(context.Context) AzureSQLAGWorkloadContainerProtectionContainerOutput
}

// Container for SQL workloads under SQL Availability Group.
type AzureSQLAGWorkloadContainerProtectionContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'SQLAGWorkLoadContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo AzureWorkloadContainerExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime pulumi.StringPtrInput `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType pulumi.StringPtrInput `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (AzureSQLAGWorkloadContainerProtectionContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSQLAGWorkloadContainerProtectionContainer)(nil)).Elem()
}

func (i AzureSQLAGWorkloadContainerProtectionContainerArgs) ToAzureSQLAGWorkloadContainerProtectionContainerOutput() AzureSQLAGWorkloadContainerProtectionContainerOutput {
	return i.ToAzureSQLAGWorkloadContainerProtectionContainerOutputWithContext(context.Background())
}

func (i AzureSQLAGWorkloadContainerProtectionContainerArgs) ToAzureSQLAGWorkloadContainerProtectionContainerOutputWithContext(ctx context.Context) AzureSQLAGWorkloadContainerProtectionContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSQLAGWorkloadContainerProtectionContainerOutput)
}

func (i AzureSQLAGWorkloadContainerProtectionContainerArgs) ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutput() AzureSQLAGWorkloadContainerProtectionContainerPtrOutput {
	return i.ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(context.Background())
}

func (i AzureSQLAGWorkloadContainerProtectionContainerArgs) ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(ctx context.Context) AzureSQLAGWorkloadContainerProtectionContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSQLAGWorkloadContainerProtectionContainerOutput).ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(ctx)
}

// AzureSQLAGWorkloadContainerProtectionContainerPtrInput is an input type that accepts AzureSQLAGWorkloadContainerProtectionContainerArgs, AzureSQLAGWorkloadContainerProtectionContainerPtr and AzureSQLAGWorkloadContainerProtectionContainerPtrOutput values.
// You can construct a concrete instance of `AzureSQLAGWorkloadContainerProtectionContainerPtrInput` via:
//
//	        AzureSQLAGWorkloadContainerProtectionContainerArgs{...}
//
//	or:
//
//	        nil
type AzureSQLAGWorkloadContainerProtectionContainerPtrInput interface {
	pulumi.Input

	ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutput() AzureSQLAGWorkloadContainerProtectionContainerPtrOutput
	ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(context.Context) AzureSQLAGWorkloadContainerProtectionContainerPtrOutput
}

type azureSQLAGWorkloadContainerProtectionContainerPtrType AzureSQLAGWorkloadContainerProtectionContainerArgs

func AzureSQLAGWorkloadContainerProtectionContainerPtr(v *AzureSQLAGWorkloadContainerProtectionContainerArgs) AzureSQLAGWorkloadContainerProtectionContainerPtrInput {
	return (*azureSQLAGWorkloadContainerProtectionContainerPtrType)(v)
}

func (*azureSQLAGWorkloadContainerProtectionContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSQLAGWorkloadContainerProtectionContainer)(nil)).Elem()
}

func (i *azureSQLAGWorkloadContainerProtectionContainerPtrType) ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutput() AzureSQLAGWorkloadContainerProtectionContainerPtrOutput {
	return i.ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(context.Background())
}

func (i *azureSQLAGWorkloadContainerProtectionContainerPtrType) ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(ctx context.Context) AzureSQLAGWorkloadContainerProtectionContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSQLAGWorkloadContainerProtectionContainerPtrOutput)
}

// Container for SQL workloads under SQL Availability Group.
type AzureSQLAGWorkloadContainerProtectionContainerOutput struct{ *pulumi.OutputState }

func (AzureSQLAGWorkloadContainerProtectionContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSQLAGWorkloadContainerProtectionContainer)(nil)).Elem()
}

func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) ToAzureSQLAGWorkloadContainerProtectionContainerOutput() AzureSQLAGWorkloadContainerProtectionContainerOutput {
	return o
}

func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) ToAzureSQLAGWorkloadContainerProtectionContainerOutputWithContext(ctx context.Context) AzureSQLAGWorkloadContainerProtectionContainerOutput {
	return o
}

func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutput() AzureSQLAGWorkloadContainerProtectionContainerPtrOutput {
	return o.ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(context.Background())
}

func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(ctx context.Context) AzureSQLAGWorkloadContainerProtectionContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSQLAGWorkloadContainerProtectionContainer) *AzureSQLAGWorkloadContainerProtectionContainer {
		return &v
	}).(AzureSQLAGWorkloadContainerProtectionContainerPtrOutput)
}

// Type of backup management for the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'SQLAGWorkLoadContainer'.
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Additional details of a workload container.
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *AzureWorkloadContainerExtendedInfo {
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.OperationType }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

type AzureSQLAGWorkloadContainerProtectionContainerPtrOutput struct{ *pulumi.OutputState }

func (AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSQLAGWorkloadContainerProtectionContainer)(nil)).Elem()
}

func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutput() AzureSQLAGWorkloadContainerProtectionContainerPtrOutput {
	return o
}

func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(ctx context.Context) AzureSQLAGWorkloadContainerProtectionContainerPtrOutput {
	return o
}

func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) Elem() AzureSQLAGWorkloadContainerProtectionContainerOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) AzureSQLAGWorkloadContainerProtectionContainer {
		if v != nil {
			return *v
		}
		var ret AzureSQLAGWorkloadContainerProtectionContainer
		return ret
	}).(AzureSQLAGWorkloadContainerProtectionContainerOutput)
}

// Type of backup management for the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'SQLAGWorkLoadContainer'.
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Additional details of a workload container.
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *AzureWorkloadContainerExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdatedTime
	}).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.OperationType
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadType
	}).(pulumi.StringPtrOutput)
}

// Container for SQL workloads under SQL Availability Group.
type AzureSQLAGWorkloadContainerProtectionContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'SQLAGWorkLoadContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// Container for SQL workloads under SQL Availability Group.
type AzureSQLAGWorkloadContainerProtectionContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSQLAGWorkloadContainerProtectionContainerResponse)(nil)).Elem()
}

func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) ToAzureSQLAGWorkloadContainerProtectionContainerResponseOutput() AzureSQLAGWorkloadContainerProtectionContainerResponseOutput {
	return o
}

func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) ToAzureSQLAGWorkloadContainerProtectionContainerResponseOutputWithContext(ctx context.Context) AzureSQLAGWorkloadContainerProtectionContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'SQLAGWorkLoadContainer'.
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Additional details of a workload container.
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *AzureWorkloadContainerExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoResponsePtrOutput)
}

// Friendly name of the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.OperationType }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

// Azure Sql workload-specific container.
type AzureSqlContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureSqlContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// AzureSqlContainerInput is an input type that accepts AzureSqlContainerArgs and AzureSqlContainerOutput values.
// You can construct a concrete instance of `AzureSqlContainerInput` via:
//
//	AzureSqlContainerArgs{...}
type AzureSqlContainerInput interface {
	pulumi.Input

	ToAzureSqlContainerOutput() AzureSqlContainerOutput
	ToAzureSqlContainerOutputWithContext(context.Context) AzureSqlContainerOutput
}

// Azure Sql workload-specific container.
type AzureSqlContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureSqlContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
}

func (AzureSqlContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlContainer)(nil)).Elem()
}

func (i AzureSqlContainerArgs) ToAzureSqlContainerOutput() AzureSqlContainerOutput {
	return i.ToAzureSqlContainerOutputWithContext(context.Background())
}

func (i AzureSqlContainerArgs) ToAzureSqlContainerOutputWithContext(ctx context.Context) AzureSqlContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlContainerOutput)
}

func (i AzureSqlContainerArgs) ToAzureSqlContainerPtrOutput() AzureSqlContainerPtrOutput {
	return i.ToAzureSqlContainerPtrOutputWithContext(context.Background())
}

func (i AzureSqlContainerArgs) ToAzureSqlContainerPtrOutputWithContext(ctx context.Context) AzureSqlContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlContainerOutput).ToAzureSqlContainerPtrOutputWithContext(ctx)
}

// AzureSqlContainerPtrInput is an input type that accepts AzureSqlContainerArgs, AzureSqlContainerPtr and AzureSqlContainerPtrOutput values.
// You can construct a concrete instance of `AzureSqlContainerPtrInput` via:
//
//	        AzureSqlContainerArgs{...}
//
//	or:
//
//	        nil
type AzureSqlContainerPtrInput interface {
	pulumi.Input

	ToAzureSqlContainerPtrOutput() AzureSqlContainerPtrOutput
	ToAzureSqlContainerPtrOutputWithContext(context.Context) AzureSqlContainerPtrOutput
}

type azureSqlContainerPtrType AzureSqlContainerArgs

func AzureSqlContainerPtr(v *AzureSqlContainerArgs) AzureSqlContainerPtrInput {
	return (*azureSqlContainerPtrType)(v)
}

func (*azureSqlContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlContainer)(nil)).Elem()
}

func (i *azureSqlContainerPtrType) ToAzureSqlContainerPtrOutput() AzureSqlContainerPtrOutput {
	return i.ToAzureSqlContainerPtrOutputWithContext(context.Background())
}

func (i *azureSqlContainerPtrType) ToAzureSqlContainerPtrOutputWithContext(ctx context.Context) AzureSqlContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlContainerPtrOutput)
}

// Azure Sql workload-specific container.
type AzureSqlContainerOutput struct{ *pulumi.OutputState }

func (AzureSqlContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlContainer)(nil)).Elem()
}

func (o AzureSqlContainerOutput) ToAzureSqlContainerOutput() AzureSqlContainerOutput {
	return o
}

func (o AzureSqlContainerOutput) ToAzureSqlContainerOutputWithContext(ctx context.Context) AzureSqlContainerOutput {
	return o
}

func (o AzureSqlContainerOutput) ToAzureSqlContainerPtrOutput() AzureSqlContainerPtrOutput {
	return o.ToAzureSqlContainerPtrOutputWithContext(context.Background())
}

func (o AzureSqlContainerOutput) ToAzureSqlContainerPtrOutputWithContext(ctx context.Context) AzureSqlContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSqlContainer) *AzureSqlContainer {
		return &v
	}).(AzureSqlContainerPtrOutput)
}

// Type of backup management for the container.
func (o AzureSqlContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureSqlContainer'.
func (o AzureSqlContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o AzureSqlContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureSqlContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureSqlContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureSqlContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

type AzureSqlContainerPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlContainer)(nil)).Elem()
}

func (o AzureSqlContainerPtrOutput) ToAzureSqlContainerPtrOutput() AzureSqlContainerPtrOutput {
	return o
}

func (o AzureSqlContainerPtrOutput) ToAzureSqlContainerPtrOutputWithContext(ctx context.Context) AzureSqlContainerPtrOutput {
	return o
}

func (o AzureSqlContainerPtrOutput) Elem() AzureSqlContainerOutput {
	return o.ApplyT(func(v *AzureSqlContainer) AzureSqlContainer {
		if v != nil {
			return *v
		}
		var ret AzureSqlContainer
		return ret
	}).(AzureSqlContainerOutput)
}

// Type of backup management for the container.
func (o AzureSqlContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureSqlContainer'.
func (o AzureSqlContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o AzureSqlContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureSqlContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureSqlContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureSqlContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// Azure Sql workload-specific container.
type AzureSqlContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureSqlContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// Azure Sql workload-specific container.
type AzureSqlContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlContainerResponse)(nil)).Elem()
}

func (o AzureSqlContainerResponseOutput) ToAzureSqlContainerResponseOutput() AzureSqlContainerResponseOutput {
	return o
}

func (o AzureSqlContainerResponseOutput) ToAzureSqlContainerResponseOutputWithContext(ctx context.Context) AzureSqlContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureSqlContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureSqlContainer'.
func (o AzureSqlContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o AzureSqlContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureSqlContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureSqlContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureSqlContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Azure SQL workload-specific backup item.
type AzureSqlProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureSqlProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
	ProtectedItemDataId *string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'Microsoft.Sql/servers/databases'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of the backed up item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureSqlProtectedItemInput is an input type that accepts AzureSqlProtectedItemArgs and AzureSqlProtectedItemOutput values.
// You can construct a concrete instance of `AzureSqlProtectedItemInput` via:
//
//	AzureSqlProtectedItemArgs{...}
type AzureSqlProtectedItemInput interface {
	pulumi.Input

	ToAzureSqlProtectedItemOutput() AzureSqlProtectedItemOutput
	ToAzureSqlProtectedItemOutputWithContext(context.Context) AzureSqlProtectedItemOutput
}

// Azure SQL workload-specific backup item.
type AzureSqlProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureSqlProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
	ProtectedItemDataId pulumi.StringPtrInput `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'Microsoft.Sql/servers/databases'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of the backed up item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureSqlProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectedItem)(nil)).Elem()
}

func (i AzureSqlProtectedItemArgs) ToAzureSqlProtectedItemOutput() AzureSqlProtectedItemOutput {
	return i.ToAzureSqlProtectedItemOutputWithContext(context.Background())
}

func (i AzureSqlProtectedItemArgs) ToAzureSqlProtectedItemOutputWithContext(ctx context.Context) AzureSqlProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectedItemOutput)
}

func (i AzureSqlProtectedItemArgs) ToAzureSqlProtectedItemPtrOutput() AzureSqlProtectedItemPtrOutput {
	return i.ToAzureSqlProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureSqlProtectedItemArgs) ToAzureSqlProtectedItemPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectedItemOutput).ToAzureSqlProtectedItemPtrOutputWithContext(ctx)
}

// AzureSqlProtectedItemPtrInput is an input type that accepts AzureSqlProtectedItemArgs, AzureSqlProtectedItemPtr and AzureSqlProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureSqlProtectedItemPtrInput` via:
//
//	        AzureSqlProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureSqlProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureSqlProtectedItemPtrOutput() AzureSqlProtectedItemPtrOutput
	ToAzureSqlProtectedItemPtrOutputWithContext(context.Context) AzureSqlProtectedItemPtrOutput
}

type azureSqlProtectedItemPtrType AzureSqlProtectedItemArgs

func AzureSqlProtectedItemPtr(v *AzureSqlProtectedItemArgs) AzureSqlProtectedItemPtrInput {
	return (*azureSqlProtectedItemPtrType)(v)
}

func (*azureSqlProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlProtectedItem)(nil)).Elem()
}

func (i *azureSqlProtectedItemPtrType) ToAzureSqlProtectedItemPtrOutput() AzureSqlProtectedItemPtrOutput {
	return i.ToAzureSqlProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureSqlProtectedItemPtrType) ToAzureSqlProtectedItemPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectedItemPtrOutput)
}

// Azure SQL workload-specific backup item.
type AzureSqlProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectedItem)(nil)).Elem()
}

func (o AzureSqlProtectedItemOutput) ToAzureSqlProtectedItemOutput() AzureSqlProtectedItemOutput {
	return o
}

func (o AzureSqlProtectedItemOutput) ToAzureSqlProtectedItemOutputWithContext(ctx context.Context) AzureSqlProtectedItemOutput {
	return o
}

func (o AzureSqlProtectedItemOutput) ToAzureSqlProtectedItemPtrOutput() AzureSqlProtectedItemPtrOutput {
	return o.ToAzureSqlProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureSqlProtectedItemOutput) ToAzureSqlProtectedItemPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSqlProtectedItem) *AzureSqlProtectedItem {
		return &v
	}).(AzureSqlProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureSqlProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureSqlProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureSqlProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureSqlProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureSqlProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureSqlProtectedItemOutput) ExtendedInfo() AzureSqlProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *AzureSqlProtectedItemExtendedInfo { return v.ExtendedInfo }).(AzureSqlProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureSqlProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureSqlProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureSqlProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureSqlProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureSqlProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureSqlProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureSqlProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
func (o AzureSqlProtectedItemOutput) ProtectedItemDataId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.ProtectedItemDataId }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'Microsoft.Sql/servers/databases'.
func (o AzureSqlProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of the backed up item.
func (o AzureSqlProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureSqlProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureSqlProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureSqlProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureSqlProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlProtectedItem)(nil)).Elem()
}

func (o AzureSqlProtectedItemPtrOutput) ToAzureSqlProtectedItemPtrOutput() AzureSqlProtectedItemPtrOutput {
	return o
}

func (o AzureSqlProtectedItemPtrOutput) ToAzureSqlProtectedItemPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemPtrOutput {
	return o
}

func (o AzureSqlProtectedItemPtrOutput) Elem() AzureSqlProtectedItemOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) AzureSqlProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureSqlProtectedItem
		return ret
	}).(AzureSqlProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureSqlProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureSqlProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureSqlProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureSqlProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureSqlProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureSqlProtectedItemPtrOutput) ExtendedInfo() AzureSqlProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *AzureSqlProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureSqlProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureSqlProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureSqlProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureSqlProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureSqlProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureSqlProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureSqlProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureSqlProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
func (o AzureSqlProtectedItemPtrOutput) ProtectedItemDataId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemDataId
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'Microsoft.Sql/servers/databases'.
func (o AzureSqlProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of the backed up item.
func (o AzureSqlProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureSqlProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureSqlProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureSqlProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Additional information on Azure Sql specific protected item.
type AzureSqlProtectedItemExtendedInfo struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// State of the backup policy associated with this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// AzureSqlProtectedItemExtendedInfoInput is an input type that accepts AzureSqlProtectedItemExtendedInfoArgs and AzureSqlProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `AzureSqlProtectedItemExtendedInfoInput` via:
//
//	AzureSqlProtectedItemExtendedInfoArgs{...}
type AzureSqlProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToAzureSqlProtectedItemExtendedInfoOutput() AzureSqlProtectedItemExtendedInfoOutput
	ToAzureSqlProtectedItemExtendedInfoOutputWithContext(context.Context) AzureSqlProtectedItemExtendedInfoOutput
}

// Additional information on Azure Sql specific protected item.
type AzureSqlProtectedItemExtendedInfoArgs struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// State of the backup policy associated with this backup item.
	PolicyState pulumi.StringPtrInput `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
}

func (AzureSqlProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectedItemExtendedInfo)(nil)).Elem()
}

func (i AzureSqlProtectedItemExtendedInfoArgs) ToAzureSqlProtectedItemExtendedInfoOutput() AzureSqlProtectedItemExtendedInfoOutput {
	return i.ToAzureSqlProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i AzureSqlProtectedItemExtendedInfoArgs) ToAzureSqlProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectedItemExtendedInfoOutput)
}

func (i AzureSqlProtectedItemExtendedInfoArgs) ToAzureSqlProtectedItemExtendedInfoPtrOutput() AzureSqlProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i AzureSqlProtectedItemExtendedInfoArgs) ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectedItemExtendedInfoOutput).ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// AzureSqlProtectedItemExtendedInfoPtrInput is an input type that accepts AzureSqlProtectedItemExtendedInfoArgs, AzureSqlProtectedItemExtendedInfoPtr and AzureSqlProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `AzureSqlProtectedItemExtendedInfoPtrInput` via:
//
//	        AzureSqlProtectedItemExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type AzureSqlProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToAzureSqlProtectedItemExtendedInfoPtrOutput() AzureSqlProtectedItemExtendedInfoPtrOutput
	ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(context.Context) AzureSqlProtectedItemExtendedInfoPtrOutput
}

type azureSqlProtectedItemExtendedInfoPtrType AzureSqlProtectedItemExtendedInfoArgs

func AzureSqlProtectedItemExtendedInfoPtr(v *AzureSqlProtectedItemExtendedInfoArgs) AzureSqlProtectedItemExtendedInfoPtrInput {
	return (*azureSqlProtectedItemExtendedInfoPtrType)(v)
}

func (*azureSqlProtectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *azureSqlProtectedItemExtendedInfoPtrType) ToAzureSqlProtectedItemExtendedInfoPtrOutput() AzureSqlProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *azureSqlProtectedItemExtendedInfoPtrType) ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectedItemExtendedInfoPtrOutput)
}

// Additional information on Azure Sql specific protected item.
type AzureSqlProtectedItemExtendedInfoOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectedItemExtendedInfo)(nil)).Elem()
}

func (o AzureSqlProtectedItemExtendedInfoOutput) ToAzureSqlProtectedItemExtendedInfoOutput() AzureSqlProtectedItemExtendedInfoOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoOutput) ToAzureSqlProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoOutput) ToAzureSqlProtectedItemExtendedInfoPtrOutput() AzureSqlProtectedItemExtendedInfoPtrOutput {
	return o.ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (o AzureSqlProtectedItemExtendedInfoOutput) ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSqlProtectedItemExtendedInfo) *AzureSqlProtectedItemExtendedInfo {
		return &v
	}).(AzureSqlProtectedItemExtendedInfoPtrOutput)
}

// The oldest backup copy available for this item in the service.
func (o AzureSqlProtectedItemExtendedInfoOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemExtendedInfo) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// State of the backup policy associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemExtendedInfo) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemExtendedInfo) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureSqlProtectedItemExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlProtectedItemExtendedInfo)(nil)).Elem()
}

func (o AzureSqlProtectedItemExtendedInfoPtrOutput) ToAzureSqlProtectedItemExtendedInfoPtrOutput() AzureSqlProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoPtrOutput) ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoPtrOutput) Elem() AzureSqlProtectedItemExtendedInfoOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfo) AzureSqlProtectedItemExtendedInfo {
		if v != nil {
			return *v
		}
		var ret AzureSqlProtectedItemExtendedInfo
		return ret
	}).(AzureSqlProtectedItemExtendedInfoOutput)
}

// The oldest backup copy available for this item in the service.
func (o AzureSqlProtectedItemExtendedInfoPtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// State of the backup policy associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoPtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoPtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfo) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Additional information on Azure Sql specific protected item.
type AzureSqlProtectedItemExtendedInfoResponse struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// State of the backup policy associated with this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information on Azure Sql specific protected item.
type AzureSqlProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureSqlProtectedItemExtendedInfoResponseOutput) ToAzureSqlProtectedItemExtendedInfoResponseOutput() AzureSqlProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoResponseOutput) ToAzureSqlProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoResponseOutput {
	return o
}

// The oldest backup copy available for this item in the service.
func (o AzureSqlProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// State of the backup policy associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoResponseOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemExtendedInfoResponse) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureSqlProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) ToAzureSqlProtectedItemExtendedInfoResponsePtrOutput() AzureSqlProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) ToAzureSqlProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) Elem() AzureSqlProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfoResponse) AzureSqlProtectedItemExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret AzureSqlProtectedItemExtendedInfoResponse
		return ret
	}).(AzureSqlProtectedItemExtendedInfoResponseOutput)
}

// The oldest backup copy available for this item in the service.
func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// State of the backup policy associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Azure SQL workload-specific backup item.
type AzureSqlProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureSqlProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
	ProtectedItemDataId *string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'Microsoft.Sql/servers/databases'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of the backed up item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Azure SQL workload-specific backup item.
type AzureSqlProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectedItemResponse)(nil)).Elem()
}

func (o AzureSqlProtectedItemResponseOutput) ToAzureSqlProtectedItemResponseOutput() AzureSqlProtectedItemResponseOutput {
	return o
}

func (o AzureSqlProtectedItemResponseOutput) ToAzureSqlProtectedItemResponseOutputWithContext(ctx context.Context) AzureSqlProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureSqlProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureSqlProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureSqlProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureSqlProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureSqlProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureSqlProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureSqlProtectedItemResponseOutput) ExtendedInfo() AzureSqlProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *AzureSqlProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureSqlProtectedItemExtendedInfoResponsePtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureSqlProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureSqlProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureSqlProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureSqlProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureSqlProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureSqlProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureSqlProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
func (o AzureSqlProtectedItemResponseOutput) ProtectedItemDataId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.ProtectedItemDataId }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'Microsoft.Sql/servers/databases'.
func (o AzureSqlProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of the backed up item.
func (o AzureSqlProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureSqlProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureSqlProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureSqlProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureSqlProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureSqlProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureSql'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy details.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
}

// AzureSqlProtectionPolicyInput is an input type that accepts AzureSqlProtectionPolicyArgs and AzureSqlProtectionPolicyOutput values.
// You can construct a concrete instance of `AzureSqlProtectionPolicyInput` via:
//
//	AzureSqlProtectionPolicyArgs{...}
type AzureSqlProtectionPolicyInput interface {
	pulumi.Input

	ToAzureSqlProtectionPolicyOutput() AzureSqlProtectionPolicyOutput
	ToAzureSqlProtectionPolicyOutputWithContext(context.Context) AzureSqlProtectionPolicyOutput
}

// Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicyArgs struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureSql'.
	BackupManagementType pulumi.StringInput `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount pulumi.IntPtrInput `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Retention policy details.
	RetentionPolicy pulumi.Input `pulumi:"retentionPolicy"`
}

func (AzureSqlProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectionPolicy)(nil)).Elem()
}

func (i AzureSqlProtectionPolicyArgs) ToAzureSqlProtectionPolicyOutput() AzureSqlProtectionPolicyOutput {
	return i.ToAzureSqlProtectionPolicyOutputWithContext(context.Background())
}

func (i AzureSqlProtectionPolicyArgs) ToAzureSqlProtectionPolicyOutputWithContext(ctx context.Context) AzureSqlProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectionPolicyOutput)
}

func (i AzureSqlProtectionPolicyArgs) ToAzureSqlProtectionPolicyPtrOutput() AzureSqlProtectionPolicyPtrOutput {
	return i.ToAzureSqlProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i AzureSqlProtectionPolicyArgs) ToAzureSqlProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureSqlProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectionPolicyOutput).ToAzureSqlProtectionPolicyPtrOutputWithContext(ctx)
}

// AzureSqlProtectionPolicyPtrInput is an input type that accepts AzureSqlProtectionPolicyArgs, AzureSqlProtectionPolicyPtr and AzureSqlProtectionPolicyPtrOutput values.
// You can construct a concrete instance of `AzureSqlProtectionPolicyPtrInput` via:
//
//	        AzureSqlProtectionPolicyArgs{...}
//
//	or:
//
//	        nil
type AzureSqlProtectionPolicyPtrInput interface {
	pulumi.Input

	ToAzureSqlProtectionPolicyPtrOutput() AzureSqlProtectionPolicyPtrOutput
	ToAzureSqlProtectionPolicyPtrOutputWithContext(context.Context) AzureSqlProtectionPolicyPtrOutput
}

type azureSqlProtectionPolicyPtrType AzureSqlProtectionPolicyArgs

func AzureSqlProtectionPolicyPtr(v *AzureSqlProtectionPolicyArgs) AzureSqlProtectionPolicyPtrInput {
	return (*azureSqlProtectionPolicyPtrType)(v)
}

func (*azureSqlProtectionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlProtectionPolicy)(nil)).Elem()
}

func (i *azureSqlProtectionPolicyPtrType) ToAzureSqlProtectionPolicyPtrOutput() AzureSqlProtectionPolicyPtrOutput {
	return i.ToAzureSqlProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i *azureSqlProtectionPolicyPtrType) ToAzureSqlProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureSqlProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectionPolicyPtrOutput)
}

// Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicyOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectionPolicy)(nil)).Elem()
}

func (o AzureSqlProtectionPolicyOutput) ToAzureSqlProtectionPolicyOutput() AzureSqlProtectionPolicyOutput {
	return o
}

func (o AzureSqlProtectionPolicyOutput) ToAzureSqlProtectionPolicyOutputWithContext(ctx context.Context) AzureSqlProtectionPolicyOutput {
	return o
}

func (o AzureSqlProtectionPolicyOutput) ToAzureSqlProtectionPolicyPtrOutput() AzureSqlProtectionPolicyPtrOutput {
	return o.ToAzureSqlProtectionPolicyPtrOutputWithContext(context.Background())
}

func (o AzureSqlProtectionPolicyOutput) ToAzureSqlProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureSqlProtectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSqlProtectionPolicy) *AzureSqlProtectionPolicy {
		return &v
	}).(AzureSqlProtectionPolicyPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureSql'.
func (o AzureSqlProtectionPolicyOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicy) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Number of items associated with this policy.
func (o AzureSqlProtectionPolicyOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicy) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureSqlProtectionPolicyOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicy) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Retention policy details.
func (o AzureSqlProtectionPolicyOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicy) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

type AzureSqlProtectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlProtectionPolicy)(nil)).Elem()
}

func (o AzureSqlProtectionPolicyPtrOutput) ToAzureSqlProtectionPolicyPtrOutput() AzureSqlProtectionPolicyPtrOutput {
	return o
}

func (o AzureSqlProtectionPolicyPtrOutput) ToAzureSqlProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureSqlProtectionPolicyPtrOutput {
	return o
}

func (o AzureSqlProtectionPolicyPtrOutput) Elem() AzureSqlProtectionPolicyOutput {
	return o.ApplyT(func(v *AzureSqlProtectionPolicy) AzureSqlProtectionPolicy {
		if v != nil {
			return *v
		}
		var ret AzureSqlProtectionPolicy
		return ret
	}).(AzureSqlProtectionPolicyOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureSql'.
func (o AzureSqlProtectionPolicyPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o AzureSqlProtectionPolicyPtrOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.ProtectedItemsCount
	}).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureSqlProtectionPolicyPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureSqlProtectionPolicy) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Retention policy details.
func (o AzureSqlProtectionPolicyPtrOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v *AzureSqlProtectionPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.RetentionPolicy
	}).(pulumi.AnyOutput)
}

// Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureSql'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy details.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
}

// Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectionPolicyResponse)(nil)).Elem()
}

func (o AzureSqlProtectionPolicyResponseOutput) ToAzureSqlProtectionPolicyResponseOutput() AzureSqlProtectionPolicyResponseOutput {
	return o
}

func (o AzureSqlProtectionPolicyResponseOutput) ToAzureSqlProtectionPolicyResponseOutputWithContext(ctx context.Context) AzureSqlProtectionPolicyResponseOutput {
	return o
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureSql'.
func (o AzureSqlProtectionPolicyResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicyResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Number of items associated with this policy.
func (o AzureSqlProtectionPolicyResponseOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicyResponse) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureSqlProtectionPolicyResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicyResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Retention policy details.
func (o AzureSqlProtectionPolicyResponseOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicyResponse) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Azure Storage Account workload-specific container.
type AzureStorageContainer struct {
	// Whether storage account lock is to be acquired for this container or not.
	AcquireStorageAccountLock *string `pulumi:"acquireStorageAccountLock"`
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'StorageContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of items backed up in this container.
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Storage account version.
	StorageAccountVersion *string `pulumi:"storageAccountVersion"`
}

// AzureStorageContainerInput is an input type that accepts AzureStorageContainerArgs and AzureStorageContainerOutput values.
// You can construct a concrete instance of `AzureStorageContainerInput` via:
//
//	AzureStorageContainerArgs{...}
type AzureStorageContainerInput interface {
	pulumi.Input

	ToAzureStorageContainerOutput() AzureStorageContainerOutput
	ToAzureStorageContainerOutputWithContext(context.Context) AzureStorageContainerOutput
}

// Azure Storage Account workload-specific container.
type AzureStorageContainerArgs struct {
	// Whether storage account lock is to be acquired for this container or not.
	AcquireStorageAccountLock pulumi.StringPtrInput `pulumi:"acquireStorageAccountLock"`
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'StorageContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Number of items backed up in this container.
	ProtectedItemCount pulumi.Float64PtrInput `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Fully qualified ARM url.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Storage account version.
	StorageAccountVersion pulumi.StringPtrInput `pulumi:"storageAccountVersion"`
}

func (AzureStorageContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageContainer)(nil)).Elem()
}

func (i AzureStorageContainerArgs) ToAzureStorageContainerOutput() AzureStorageContainerOutput {
	return i.ToAzureStorageContainerOutputWithContext(context.Background())
}

func (i AzureStorageContainerArgs) ToAzureStorageContainerOutputWithContext(ctx context.Context) AzureStorageContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageContainerOutput)
}

func (i AzureStorageContainerArgs) ToAzureStorageContainerPtrOutput() AzureStorageContainerPtrOutput {
	return i.ToAzureStorageContainerPtrOutputWithContext(context.Background())
}

func (i AzureStorageContainerArgs) ToAzureStorageContainerPtrOutputWithContext(ctx context.Context) AzureStorageContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageContainerOutput).ToAzureStorageContainerPtrOutputWithContext(ctx)
}

// AzureStorageContainerPtrInput is an input type that accepts AzureStorageContainerArgs, AzureStorageContainerPtr and AzureStorageContainerPtrOutput values.
// You can construct a concrete instance of `AzureStorageContainerPtrInput` via:
//
//	        AzureStorageContainerArgs{...}
//
//	or:
//
//	        nil
type AzureStorageContainerPtrInput interface {
	pulumi.Input

	ToAzureStorageContainerPtrOutput() AzureStorageContainerPtrOutput
	ToAzureStorageContainerPtrOutputWithContext(context.Context) AzureStorageContainerPtrOutput
}

type azureStorageContainerPtrType AzureStorageContainerArgs

func AzureStorageContainerPtr(v *AzureStorageContainerArgs) AzureStorageContainerPtrInput {
	return (*azureStorageContainerPtrType)(v)
}

func (*azureStorageContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStorageContainer)(nil)).Elem()
}

func (i *azureStorageContainerPtrType) ToAzureStorageContainerPtrOutput() AzureStorageContainerPtrOutput {
	return i.ToAzureStorageContainerPtrOutputWithContext(context.Background())
}

func (i *azureStorageContainerPtrType) ToAzureStorageContainerPtrOutputWithContext(ctx context.Context) AzureStorageContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageContainerPtrOutput)
}

// Azure Storage Account workload-specific container.
type AzureStorageContainerOutput struct{ *pulumi.OutputState }

func (AzureStorageContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageContainer)(nil)).Elem()
}

func (o AzureStorageContainerOutput) ToAzureStorageContainerOutput() AzureStorageContainerOutput {
	return o
}

func (o AzureStorageContainerOutput) ToAzureStorageContainerOutputWithContext(ctx context.Context) AzureStorageContainerOutput {
	return o
}

func (o AzureStorageContainerOutput) ToAzureStorageContainerPtrOutput() AzureStorageContainerPtrOutput {
	return o.ToAzureStorageContainerPtrOutputWithContext(context.Background())
}

func (o AzureStorageContainerOutput) ToAzureStorageContainerPtrOutputWithContext(ctx context.Context) AzureStorageContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureStorageContainer) *AzureStorageContainer {
		return &v
	}).(AzureStorageContainerPtrOutput)
}

// Whether storage account lock is to be acquired for this container or not.
func (o AzureStorageContainerOutput) AcquireStorageAccountLock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.AcquireStorageAccountLock }).(pulumi.StringPtrOutput)
}

// Type of backup management for the container.
func (o AzureStorageContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'StorageContainer'.
func (o AzureStorageContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o AzureStorageContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureStorageContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureStorageContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Number of items backed up in this container.
func (o AzureStorageContainerOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *float64 { return v.ProtectedItemCount }).(pulumi.Float64PtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureStorageContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureStorageContainerOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url.
func (o AzureStorageContainerOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Storage account version.
func (o AzureStorageContainerOutput) StorageAccountVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.StorageAccountVersion }).(pulumi.StringPtrOutput)
}

type AzureStorageContainerPtrOutput struct{ *pulumi.OutputState }

func (AzureStorageContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStorageContainer)(nil)).Elem()
}

func (o AzureStorageContainerPtrOutput) ToAzureStorageContainerPtrOutput() AzureStorageContainerPtrOutput {
	return o
}

func (o AzureStorageContainerPtrOutput) ToAzureStorageContainerPtrOutputWithContext(ctx context.Context) AzureStorageContainerPtrOutput {
	return o
}

func (o AzureStorageContainerPtrOutput) Elem() AzureStorageContainerOutput {
	return o.ApplyT(func(v *AzureStorageContainer) AzureStorageContainer {
		if v != nil {
			return *v
		}
		var ret AzureStorageContainer
		return ret
	}).(AzureStorageContainerOutput)
}

// Whether storage account lock is to be acquired for this container or not.
func (o AzureStorageContainerPtrOutput) AcquireStorageAccountLock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.AcquireStorageAccountLock
	}).(pulumi.StringPtrOutput)
}

// Type of backup management for the container.
func (o AzureStorageContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'StorageContainer'.
func (o AzureStorageContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o AzureStorageContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureStorageContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureStorageContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Number of items backed up in this container.
func (o AzureStorageContainerPtrOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *float64 {
		if v == nil {
			return nil
		}
		return v.ProtectedItemCount
	}).(pulumi.Float64PtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureStorageContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureStorageContainerPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url.
func (o AzureStorageContainerPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Storage account version.
func (o AzureStorageContainerPtrOutput) StorageAccountVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountVersion
	}).(pulumi.StringPtrOutput)
}

// Azure Storage Account workload-specific container.
type AzureStorageContainerResponse struct {
	// Whether storage account lock is to be acquired for this container or not.
	AcquireStorageAccountLock *string `pulumi:"acquireStorageAccountLock"`
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'StorageContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of items backed up in this container.
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Storage account version.
	StorageAccountVersion *string `pulumi:"storageAccountVersion"`
}

// Azure Storage Account workload-specific container.
type AzureStorageContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureStorageContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageContainerResponse)(nil)).Elem()
}

func (o AzureStorageContainerResponseOutput) ToAzureStorageContainerResponseOutput() AzureStorageContainerResponseOutput {
	return o
}

func (o AzureStorageContainerResponseOutput) ToAzureStorageContainerResponseOutputWithContext(ctx context.Context) AzureStorageContainerResponseOutput {
	return o
}

// Whether storage account lock is to be acquired for this container or not.
func (o AzureStorageContainerResponseOutput) AcquireStorageAccountLock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.AcquireStorageAccountLock }).(pulumi.StringPtrOutput)
}

// Type of backup management for the container.
func (o AzureStorageContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'StorageContainer'.
func (o AzureStorageContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o AzureStorageContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureStorageContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureStorageContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Number of items backed up in this container.
func (o AzureStorageContainerResponseOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *float64 { return v.ProtectedItemCount }).(pulumi.Float64PtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureStorageContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureStorageContainerResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url.
func (o AzureStorageContainerResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Storage account version.
func (o AzureStorageContainerResponseOutput) StorageAccountVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.StorageAccountVersion }).(pulumi.StringPtrOutput)
}

// Create network mappings input properties/behavior specific to Azure to Azure Network mapping.
type AzureToAzureCreateNetworkMappingInput struct {
	// The instance type.
	// Expected value is 'AzureToAzure'.
	InstanceType string `pulumi:"instanceType"`
	// The primary azure vnet Id.
	PrimaryNetworkId string `pulumi:"primaryNetworkId"`
}

// AzureToAzureCreateNetworkMappingInputInput is an input type that accepts AzureToAzureCreateNetworkMappingInputArgs and AzureToAzureCreateNetworkMappingInputOutput values.
// You can construct a concrete instance of `AzureToAzureCreateNetworkMappingInputInput` via:
//
//	AzureToAzureCreateNetworkMappingInputArgs{...}
type AzureToAzureCreateNetworkMappingInputInput interface {
	pulumi.Input

	ToAzureToAzureCreateNetworkMappingInputOutput() AzureToAzureCreateNetworkMappingInputOutput
	ToAzureToAzureCreateNetworkMappingInputOutputWithContext(context.Context) AzureToAzureCreateNetworkMappingInputOutput
}

// Create network mappings input properties/behavior specific to Azure to Azure Network mapping.
type AzureToAzureCreateNetworkMappingInputArgs struct {
	// The instance type.
	// Expected value is 'AzureToAzure'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The primary azure vnet Id.
	PrimaryNetworkId pulumi.StringInput `pulumi:"primaryNetworkId"`
}

func (AzureToAzureCreateNetworkMappingInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureToAzureCreateNetworkMappingInput)(nil)).Elem()
}

func (i AzureToAzureCreateNetworkMappingInputArgs) ToAzureToAzureCreateNetworkMappingInputOutput() AzureToAzureCreateNetworkMappingInputOutput {
	return i.ToAzureToAzureCreateNetworkMappingInputOutputWithContext(context.Background())
}

func (i AzureToAzureCreateNetworkMappingInputArgs) ToAzureToAzureCreateNetworkMappingInputOutputWithContext(ctx context.Context) AzureToAzureCreateNetworkMappingInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureToAzureCreateNetworkMappingInputOutput)
}

func (i AzureToAzureCreateNetworkMappingInputArgs) ToAzureToAzureCreateNetworkMappingInputPtrOutput() AzureToAzureCreateNetworkMappingInputPtrOutput {
	return i.ToAzureToAzureCreateNetworkMappingInputPtrOutputWithContext(context.Background())
}

func (i AzureToAzureCreateNetworkMappingInputArgs) ToAzureToAzureCreateNetworkMappingInputPtrOutputWithContext(ctx context.Context) AzureToAzureCreateNetworkMappingInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureToAzureCreateNetworkMappingInputOutput).ToAzureToAzureCreateNetworkMappingInputPtrOutputWithContext(ctx)
}

// AzureToAzureCreateNetworkMappingInputPtrInput is an input type that accepts AzureToAzureCreateNetworkMappingInputArgs, AzureToAzureCreateNetworkMappingInputPtr and AzureToAzureCreateNetworkMappingInputPtrOutput values.
// You can construct a concrete instance of `AzureToAzureCreateNetworkMappingInputPtrInput` via:
//
//	        AzureToAzureCreateNetworkMappingInputArgs{...}
//
//	or:
//
//	        nil
type AzureToAzureCreateNetworkMappingInputPtrInput interface {
	pulumi.Input

	ToAzureToAzureCreateNetworkMappingInputPtrOutput() AzureToAzureCreateNetworkMappingInputPtrOutput
	ToAzureToAzureCreateNetworkMappingInputPtrOutputWithContext(context.Context) AzureToAzureCreateNetworkMappingInputPtrOutput
}

type azureToAzureCreateNetworkMappingInputPtrType AzureToAzureCreateNetworkMappingInputArgs

func AzureToAzureCreateNetworkMappingInputPtr(v *AzureToAzureCreateNetworkMappingInputArgs) AzureToAzureCreateNetworkMappingInputPtrInput {
	return (*azureToAzureCreateNetworkMappingInputPtrType)(v)
}

func (*azureToAzureCreateNetworkMappingInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureToAzureCreateNetworkMappingInput)(nil)).Elem()
}

func (i *azureToAzureCreateNetworkMappingInputPtrType) ToAzureToAzureCreateNetworkMappingInputPtrOutput() AzureToAzureCreateNetworkMappingInputPtrOutput {
	return i.ToAzureToAzureCreateNetworkMappingInputPtrOutputWithContext(context.Background())
}

func (i *azureToAzureCreateNetworkMappingInputPtrType) ToAzureToAzureCreateNetworkMappingInputPtrOutputWithContext(ctx context.Context) AzureToAzureCreateNetworkMappingInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureToAzureCreateNetworkMappingInputPtrOutput)
}

// Create network mappings input properties/behavior specific to Azure to Azure Network mapping.
type AzureToAzureCreateNetworkMappingInputOutput struct{ *pulumi.OutputState }

func (AzureToAzureCreateNetworkMappingInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureToAzureCreateNetworkMappingInput)(nil)).Elem()
}

func (o AzureToAzureCreateNetworkMappingInputOutput) ToAzureToAzureCreateNetworkMappingInputOutput() AzureToAzureCreateNetworkMappingInputOutput {
	return o
}

func (o AzureToAzureCreateNetworkMappingInputOutput) ToAzureToAzureCreateNetworkMappingInputOutputWithContext(ctx context.Context) AzureToAzureCreateNetworkMappingInputOutput {
	return o
}

func (o AzureToAzureCreateNetworkMappingInputOutput) ToAzureToAzureCreateNetworkMappingInputPtrOutput() AzureToAzureCreateNetworkMappingInputPtrOutput {
	return o.ToAzureToAzureCreateNetworkMappingInputPtrOutputWithContext(context.Background())
}

func (o AzureToAzureCreateNetworkMappingInputOutput) ToAzureToAzureCreateNetworkMappingInputPtrOutputWithContext(ctx context.Context) AzureToAzureCreateNetworkMappingInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureToAzureCreateNetworkMappingInput) *AzureToAzureCreateNetworkMappingInput {
		return &v
	}).(AzureToAzureCreateNetworkMappingInputPtrOutput)
}

// The instance type.
// Expected value is 'AzureToAzure'.
func (o AzureToAzureCreateNetworkMappingInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureToAzureCreateNetworkMappingInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The primary azure vnet Id.
func (o AzureToAzureCreateNetworkMappingInputOutput) PrimaryNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureToAzureCreateNetworkMappingInput) string { return v.PrimaryNetworkId }).(pulumi.StringOutput)
}

type AzureToAzureCreateNetworkMappingInputPtrOutput struct{ *pulumi.OutputState }

func (AzureToAzureCreateNetworkMappingInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureToAzureCreateNetworkMappingInput)(nil)).Elem()
}

func (o AzureToAzureCreateNetworkMappingInputPtrOutput) ToAzureToAzureCreateNetworkMappingInputPtrOutput() AzureToAzureCreateNetworkMappingInputPtrOutput {
	return o
}

func (o AzureToAzureCreateNetworkMappingInputPtrOutput) ToAzureToAzureCreateNetworkMappingInputPtrOutputWithContext(ctx context.Context) AzureToAzureCreateNetworkMappingInputPtrOutput {
	return o
}

func (o AzureToAzureCreateNetworkMappingInputPtrOutput) Elem() AzureToAzureCreateNetworkMappingInputOutput {
	return o.ApplyT(func(v *AzureToAzureCreateNetworkMappingInput) AzureToAzureCreateNetworkMappingInput {
		if v != nil {
			return *v
		}
		var ret AzureToAzureCreateNetworkMappingInput
		return ret
	}).(AzureToAzureCreateNetworkMappingInputOutput)
}

// The instance type.
// Expected value is 'AzureToAzure'.
func (o AzureToAzureCreateNetworkMappingInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureToAzureCreateNetworkMappingInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The primary azure vnet Id.
func (o AzureToAzureCreateNetworkMappingInputPtrOutput) PrimaryNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureToAzureCreateNetworkMappingInput) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryNetworkId
	}).(pulumi.StringPtrOutput)
}

// A2A Network Mapping fabric specific settings.
type AzureToAzureNetworkMappingSettingsResponse struct {
	// Gets the Instance type.
	// Expected value is 'AzureToAzure'.
	InstanceType string `pulumi:"instanceType"`
	// The primary fabric location.
	PrimaryFabricLocation *string `pulumi:"primaryFabricLocation"`
	// The recovery fabric location.
	RecoveryFabricLocation *string `pulumi:"recoveryFabricLocation"`
}

// A2A Network Mapping fabric specific settings.
type AzureToAzureNetworkMappingSettingsResponseOutput struct{ *pulumi.OutputState }

func (AzureToAzureNetworkMappingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureToAzureNetworkMappingSettingsResponse)(nil)).Elem()
}

func (o AzureToAzureNetworkMappingSettingsResponseOutput) ToAzureToAzureNetworkMappingSettingsResponseOutput() AzureToAzureNetworkMappingSettingsResponseOutput {
	return o
}

func (o AzureToAzureNetworkMappingSettingsResponseOutput) ToAzureToAzureNetworkMappingSettingsResponseOutputWithContext(ctx context.Context) AzureToAzureNetworkMappingSettingsResponseOutput {
	return o
}

// Gets the Instance type.
// Expected value is 'AzureToAzure'.
func (o AzureToAzureNetworkMappingSettingsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureToAzureNetworkMappingSettingsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The primary fabric location.
func (o AzureToAzureNetworkMappingSettingsResponseOutput) PrimaryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureToAzureNetworkMappingSettingsResponse) *string { return v.PrimaryFabricLocation }).(pulumi.StringPtrOutput)
}

// The recovery fabric location.
func (o AzureToAzureNetworkMappingSettingsResponseOutput) RecoveryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureToAzureNetworkMappingSettingsResponse) *string { return v.RecoveryFabricLocation }).(pulumi.StringPtrOutput)
}

type AzureToAzureNetworkMappingSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureToAzureNetworkMappingSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureToAzureNetworkMappingSettingsResponse)(nil)).Elem()
}

func (o AzureToAzureNetworkMappingSettingsResponsePtrOutput) ToAzureToAzureNetworkMappingSettingsResponsePtrOutput() AzureToAzureNetworkMappingSettingsResponsePtrOutput {
	return o
}

func (o AzureToAzureNetworkMappingSettingsResponsePtrOutput) ToAzureToAzureNetworkMappingSettingsResponsePtrOutputWithContext(ctx context.Context) AzureToAzureNetworkMappingSettingsResponsePtrOutput {
	return o
}

func (o AzureToAzureNetworkMappingSettingsResponsePtrOutput) Elem() AzureToAzureNetworkMappingSettingsResponseOutput {
	return o.ApplyT(func(v *AzureToAzureNetworkMappingSettingsResponse) AzureToAzureNetworkMappingSettingsResponse {
		if v != nil {
			return *v
		}
		var ret AzureToAzureNetworkMappingSettingsResponse
		return ret
	}).(AzureToAzureNetworkMappingSettingsResponseOutput)
}

// Gets the Instance type.
// Expected value is 'AzureToAzure'.
func (o AzureToAzureNetworkMappingSettingsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureToAzureNetworkMappingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The primary fabric location.
func (o AzureToAzureNetworkMappingSettingsResponsePtrOutput) PrimaryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureToAzureNetworkMappingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryFabricLocation
	}).(pulumi.StringPtrOutput)
}

// The recovery fabric location.
func (o AzureToAzureNetworkMappingSettingsResponsePtrOutput) RecoveryFabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureToAzureNetworkMappingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryFabricLocation
	}).(pulumi.StringPtrOutput)
}

// Azure to Azure VM synced configuration details.
type AzureToAzureVmSyncedConfigDetailsResponse struct {
	// The Azure VM input endpoints.
	InputEndpoints []InputEndpointResponse `pulumi:"inputEndpoints"`
	// The Azure VM tags.
	Tags map[string]string `pulumi:"tags"`
}

// Azure to Azure VM synced configuration details.
type AzureToAzureVmSyncedConfigDetailsResponseOutput struct{ *pulumi.OutputState }

func (AzureToAzureVmSyncedConfigDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureToAzureVmSyncedConfigDetailsResponse)(nil)).Elem()
}

func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) ToAzureToAzureVmSyncedConfigDetailsResponseOutput() AzureToAzureVmSyncedConfigDetailsResponseOutput {
	return o
}

func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) ToAzureToAzureVmSyncedConfigDetailsResponseOutputWithContext(ctx context.Context) AzureToAzureVmSyncedConfigDetailsResponseOutput {
	return o
}

// The Azure VM input endpoints.
func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) InputEndpoints() InputEndpointResponseArrayOutput {
	return o.ApplyT(func(v AzureToAzureVmSyncedConfigDetailsResponse) []InputEndpointResponse { return v.InputEndpoints }).(InputEndpointResponseArrayOutput)
}

// The Azure VM tags.
func (o AzureToAzureVmSyncedConfigDetailsResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AzureToAzureVmSyncedConfigDetailsResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type AzureToAzureVmSyncedConfigDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureToAzureVmSyncedConfigDetailsResponse)(nil)).Elem()
}

func (o AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) ToAzureToAzureVmSyncedConfigDetailsResponsePtrOutput() AzureToAzureVmSyncedConfigDetailsResponsePtrOutput {
	return o
}

func (o AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) ToAzureToAzureVmSyncedConfigDetailsResponsePtrOutputWithContext(ctx context.Context) AzureToAzureVmSyncedConfigDetailsResponsePtrOutput {
	return o
}

func (o AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) Elem() AzureToAzureVmSyncedConfigDetailsResponseOutput {
	return o.ApplyT(func(v *AzureToAzureVmSyncedConfigDetailsResponse) AzureToAzureVmSyncedConfigDetailsResponse {
		if v != nil {
			return *v
		}
		var ret AzureToAzureVmSyncedConfigDetailsResponse
		return ret
	}).(AzureToAzureVmSyncedConfigDetailsResponseOutput)
}

// The Azure VM input endpoints.
func (o AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) InputEndpoints() InputEndpointResponseArrayOutput {
	return o.ApplyT(func(v *AzureToAzureVmSyncedConfigDetailsResponse) []InputEndpointResponse {
		if v == nil {
			return nil
		}
		return v.InputEndpoints
	}).(InputEndpointResponseArrayOutput)
}

// The Azure VM tags.
func (o AzureToAzureVmSyncedConfigDetailsResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AzureToAzureVmSyncedConfigDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Container for SQL workloads under Azure Virtual Machines.
type AzureVMAppContainerProtectionContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'VMAppContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// AzureVMAppContainerProtectionContainerInput is an input type that accepts AzureVMAppContainerProtectionContainerArgs and AzureVMAppContainerProtectionContainerOutput values.
// You can construct a concrete instance of `AzureVMAppContainerProtectionContainerInput` via:
//
//	AzureVMAppContainerProtectionContainerArgs{...}
type AzureVMAppContainerProtectionContainerInput interface {
	pulumi.Input

	ToAzureVMAppContainerProtectionContainerOutput() AzureVMAppContainerProtectionContainerOutput
	ToAzureVMAppContainerProtectionContainerOutputWithContext(context.Context) AzureVMAppContainerProtectionContainerOutput
}

// Container for SQL workloads under Azure Virtual Machines.
type AzureVMAppContainerProtectionContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'VMAppContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo AzureWorkloadContainerExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime pulumi.StringPtrInput `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType pulumi.StringPtrInput `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (AzureVMAppContainerProtectionContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVMAppContainerProtectionContainer)(nil)).Elem()
}

func (i AzureVMAppContainerProtectionContainerArgs) ToAzureVMAppContainerProtectionContainerOutput() AzureVMAppContainerProtectionContainerOutput {
	return i.ToAzureVMAppContainerProtectionContainerOutputWithContext(context.Background())
}

func (i AzureVMAppContainerProtectionContainerArgs) ToAzureVMAppContainerProtectionContainerOutputWithContext(ctx context.Context) AzureVMAppContainerProtectionContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVMAppContainerProtectionContainerOutput)
}

func (i AzureVMAppContainerProtectionContainerArgs) ToAzureVMAppContainerProtectionContainerPtrOutput() AzureVMAppContainerProtectionContainerPtrOutput {
	return i.ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(context.Background())
}

func (i AzureVMAppContainerProtectionContainerArgs) ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(ctx context.Context) AzureVMAppContainerProtectionContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVMAppContainerProtectionContainerOutput).ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(ctx)
}

// AzureVMAppContainerProtectionContainerPtrInput is an input type that accepts AzureVMAppContainerProtectionContainerArgs, AzureVMAppContainerProtectionContainerPtr and AzureVMAppContainerProtectionContainerPtrOutput values.
// You can construct a concrete instance of `AzureVMAppContainerProtectionContainerPtrInput` via:
//
//	        AzureVMAppContainerProtectionContainerArgs{...}
//
//	or:
//
//	        nil
type AzureVMAppContainerProtectionContainerPtrInput interface {
	pulumi.Input

	ToAzureVMAppContainerProtectionContainerPtrOutput() AzureVMAppContainerProtectionContainerPtrOutput
	ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(context.Context) AzureVMAppContainerProtectionContainerPtrOutput
}

type azureVMAppContainerProtectionContainerPtrType AzureVMAppContainerProtectionContainerArgs

func AzureVMAppContainerProtectionContainerPtr(v *AzureVMAppContainerProtectionContainerArgs) AzureVMAppContainerProtectionContainerPtrInput {
	return (*azureVMAppContainerProtectionContainerPtrType)(v)
}

func (*azureVMAppContainerProtectionContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVMAppContainerProtectionContainer)(nil)).Elem()
}

func (i *azureVMAppContainerProtectionContainerPtrType) ToAzureVMAppContainerProtectionContainerPtrOutput() AzureVMAppContainerProtectionContainerPtrOutput {
	return i.ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(context.Background())
}

func (i *azureVMAppContainerProtectionContainerPtrType) ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(ctx context.Context) AzureVMAppContainerProtectionContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVMAppContainerProtectionContainerPtrOutput)
}

// Container for SQL workloads under Azure Virtual Machines.
type AzureVMAppContainerProtectionContainerOutput struct{ *pulumi.OutputState }

func (AzureVMAppContainerProtectionContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVMAppContainerProtectionContainer)(nil)).Elem()
}

func (o AzureVMAppContainerProtectionContainerOutput) ToAzureVMAppContainerProtectionContainerOutput() AzureVMAppContainerProtectionContainerOutput {
	return o
}

func (o AzureVMAppContainerProtectionContainerOutput) ToAzureVMAppContainerProtectionContainerOutputWithContext(ctx context.Context) AzureVMAppContainerProtectionContainerOutput {
	return o
}

func (o AzureVMAppContainerProtectionContainerOutput) ToAzureVMAppContainerProtectionContainerPtrOutput() AzureVMAppContainerProtectionContainerPtrOutput {
	return o.ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(context.Background())
}

func (o AzureVMAppContainerProtectionContainerOutput) ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(ctx context.Context) AzureVMAppContainerProtectionContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVMAppContainerProtectionContainer) *AzureVMAppContainerProtectionContainer {
		return &v
	}).(AzureVMAppContainerProtectionContainerPtrOutput)
}

// Type of backup management for the container.
func (o AzureVMAppContainerProtectionContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'VMAppContainer'.
func (o AzureVMAppContainerProtectionContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Additional details of a workload container.
func (o AzureVMAppContainerProtectionContainerOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *AzureWorkloadContainerExtendedInfo {
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o AzureVMAppContainerProtectionContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureVMAppContainerProtectionContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureVMAppContainerProtectionContainerOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureVMAppContainerProtectionContainerOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.OperationType }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureVMAppContainerProtectionContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureVMAppContainerProtectionContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureVMAppContainerProtectionContainerOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureVMAppContainerProtectionContainerOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

type AzureVMAppContainerProtectionContainerPtrOutput struct{ *pulumi.OutputState }

func (AzureVMAppContainerProtectionContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVMAppContainerProtectionContainer)(nil)).Elem()
}

func (o AzureVMAppContainerProtectionContainerPtrOutput) ToAzureVMAppContainerProtectionContainerPtrOutput() AzureVMAppContainerProtectionContainerPtrOutput {
	return o
}

func (o AzureVMAppContainerProtectionContainerPtrOutput) ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(ctx context.Context) AzureVMAppContainerProtectionContainerPtrOutput {
	return o
}

func (o AzureVMAppContainerProtectionContainerPtrOutput) Elem() AzureVMAppContainerProtectionContainerOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) AzureVMAppContainerProtectionContainer {
		if v != nil {
			return *v
		}
		var ret AzureVMAppContainerProtectionContainer
		return ret
	}).(AzureVMAppContainerProtectionContainerOutput)
}

// Type of backup management for the container.
func (o AzureVMAppContainerProtectionContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'VMAppContainer'.
func (o AzureVMAppContainerProtectionContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Additional details of a workload container.
func (o AzureVMAppContainerProtectionContainerPtrOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *AzureWorkloadContainerExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o AzureVMAppContainerProtectionContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureVMAppContainerProtectionContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureVMAppContainerProtectionContainerPtrOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdatedTime
	}).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureVMAppContainerProtectionContainerPtrOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.OperationType
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureVMAppContainerProtectionContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureVMAppContainerProtectionContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureVMAppContainerProtectionContainerPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureVMAppContainerProtectionContainerPtrOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadType
	}).(pulumi.StringPtrOutput)
}

// Container for SQL workloads under Azure Virtual Machines.
type AzureVMAppContainerProtectionContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'VMAppContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// Container for SQL workloads under Azure Virtual Machines.
type AzureVMAppContainerProtectionContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureVMAppContainerProtectionContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVMAppContainerProtectionContainerResponse)(nil)).Elem()
}

func (o AzureVMAppContainerProtectionContainerResponseOutput) ToAzureVMAppContainerProtectionContainerResponseOutput() AzureVMAppContainerProtectionContainerResponseOutput {
	return o
}

func (o AzureVMAppContainerProtectionContainerResponseOutput) ToAzureVMAppContainerProtectionContainerResponseOutputWithContext(ctx context.Context) AzureVMAppContainerProtectionContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureVMAppContainerProtectionContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'VMAppContainer'.
func (o AzureVMAppContainerProtectionContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Additional details of a workload container.
func (o AzureVMAppContainerProtectionContainerResponseOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *AzureWorkloadContainerExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoResponsePtrOutput)
}

// Friendly name of the container.
func (o AzureVMAppContainerProtectionContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureVMAppContainerProtectionContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureVMAppContainerProtectionContainerResponseOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureVMAppContainerProtectionContainerResponseOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.OperationType }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureVMAppContainerProtectionContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureVMAppContainerProtectionContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureVMAppContainerProtectionContainerResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureVMAppContainerProtectionContainerResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

// Disk details for E2A provider.
type AzureVmDiskDetailsResponse struct {
	// The custom target Azure disk name.
	CustomTargetDiskName *string `pulumi:"customTargetDiskName"`
	// The DiskEncryptionSet ARM ID.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The disk resource id.
	DiskId *string `pulumi:"diskId"`
	// Ordinal\LunId of the disk for the Azure VM.
	LunId *string `pulumi:"lunId"`
	// Max side in MB.
	MaxSizeMB *string `pulumi:"maxSizeMB"`
	// Blob uri of the Azure disk.
	TargetDiskLocation *string `pulumi:"targetDiskLocation"`
	// The target Azure disk name.
	TargetDiskName *string `pulumi:"targetDiskName"`
	// The VHD id.
	VhdId *string `pulumi:"vhdId"`
	// VHD name.
	VhdName *string `pulumi:"vhdName"`
	// VHD type.
	VhdType *string `pulumi:"vhdType"`
}

// Disk details for E2A provider.
type AzureVmDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (AzureVmDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmDiskDetailsResponse)(nil)).Elem()
}

func (o AzureVmDiskDetailsResponseOutput) ToAzureVmDiskDetailsResponseOutput() AzureVmDiskDetailsResponseOutput {
	return o
}

func (o AzureVmDiskDetailsResponseOutput) ToAzureVmDiskDetailsResponseOutputWithContext(ctx context.Context) AzureVmDiskDetailsResponseOutput {
	return o
}

// The custom target Azure disk name.
func (o AzureVmDiskDetailsResponseOutput) CustomTargetDiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.CustomTargetDiskName }).(pulumi.StringPtrOutput)
}

// The DiskEncryptionSet ARM ID.
func (o AzureVmDiskDetailsResponseOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The disk resource id.
func (o AzureVmDiskDetailsResponseOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// Ordinal\LunId of the disk for the Azure VM.
func (o AzureVmDiskDetailsResponseOutput) LunId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.LunId }).(pulumi.StringPtrOutput)
}

// Max side in MB.
func (o AzureVmDiskDetailsResponseOutput) MaxSizeMB() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.MaxSizeMB }).(pulumi.StringPtrOutput)
}

// Blob uri of the Azure disk.
func (o AzureVmDiskDetailsResponseOutput) TargetDiskLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.TargetDiskLocation }).(pulumi.StringPtrOutput)
}

// The target Azure disk name.
func (o AzureVmDiskDetailsResponseOutput) TargetDiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.TargetDiskName }).(pulumi.StringPtrOutput)
}

// The VHD id.
func (o AzureVmDiskDetailsResponseOutput) VhdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.VhdId }).(pulumi.StringPtrOutput)
}

// VHD name.
func (o AzureVmDiskDetailsResponseOutput) VhdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.VhdName }).(pulumi.StringPtrOutput)
}

// VHD type.
func (o AzureVmDiskDetailsResponseOutput) VhdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmDiskDetailsResponse) *string { return v.VhdType }).(pulumi.StringPtrOutput)
}

type AzureVmDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureVmDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureVmDiskDetailsResponse)(nil)).Elem()
}

func (o AzureVmDiskDetailsResponseArrayOutput) ToAzureVmDiskDetailsResponseArrayOutput() AzureVmDiskDetailsResponseArrayOutput {
	return o
}

func (o AzureVmDiskDetailsResponseArrayOutput) ToAzureVmDiskDetailsResponseArrayOutputWithContext(ctx context.Context) AzureVmDiskDetailsResponseArrayOutput {
	return o
}

func (o AzureVmDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) AzureVmDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureVmDiskDetailsResponse {
		return vs[0].([]AzureVmDiskDetailsResponse)[vs[1].(int)]
	}).(AzureVmDiskDetailsResponseOutput)
}

// Azure VM workload-specific protected item.
type AzureVmWorkloadProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfo `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureVmWorkloadProtectedItemInput is an input type that accepts AzureVmWorkloadProtectedItemArgs and AzureVmWorkloadProtectedItemOutput values.
// You can construct a concrete instance of `AzureVmWorkloadProtectedItemInput` via:
//
//	AzureVmWorkloadProtectedItemArgs{...}
type AzureVmWorkloadProtectedItemInput interface {
	pulumi.Input

	ToAzureVmWorkloadProtectedItemOutput() AzureVmWorkloadProtectedItemOutput
	ToAzureVmWorkloadProtectedItemOutputWithContext(context.Context) AzureVmWorkloadProtectedItemOutput
}

// Azure VM workload-specific protected item.
type AzureVmWorkloadProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureVmWorkloadProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList DistributedNodesInfoArrayInput `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName pulumi.StringPtrInput `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType pulumi.StringPtrInput `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId pulumi.StringPtrInput `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus pulumi.StringPtrInput `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadProtectedItem'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureVmWorkloadProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectedItem)(nil)).Elem()
}

func (i AzureVmWorkloadProtectedItemArgs) ToAzureVmWorkloadProtectedItemOutput() AzureVmWorkloadProtectedItemOutput {
	return i.ToAzureVmWorkloadProtectedItemOutputWithContext(context.Background())
}

func (i AzureVmWorkloadProtectedItemArgs) ToAzureVmWorkloadProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectedItemOutput)
}

func (i AzureVmWorkloadProtectedItemArgs) ToAzureVmWorkloadProtectedItemPtrOutput() AzureVmWorkloadProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureVmWorkloadProtectedItemArgs) ToAzureVmWorkloadProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectedItemOutput).ToAzureVmWorkloadProtectedItemPtrOutputWithContext(ctx)
}

// AzureVmWorkloadProtectedItemPtrInput is an input type that accepts AzureVmWorkloadProtectedItemArgs, AzureVmWorkloadProtectedItemPtr and AzureVmWorkloadProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureVmWorkloadProtectedItemPtrInput` via:
//
//	        AzureVmWorkloadProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureVmWorkloadProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureVmWorkloadProtectedItemPtrOutput() AzureVmWorkloadProtectedItemPtrOutput
	ToAzureVmWorkloadProtectedItemPtrOutputWithContext(context.Context) AzureVmWorkloadProtectedItemPtrOutput
}

type azureVmWorkloadProtectedItemPtrType AzureVmWorkloadProtectedItemArgs

func AzureVmWorkloadProtectedItemPtr(v *AzureVmWorkloadProtectedItemArgs) AzureVmWorkloadProtectedItemPtrInput {
	return (*azureVmWorkloadProtectedItemPtrType)(v)
}

func (*azureVmWorkloadProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadProtectedItem)(nil)).Elem()
}

func (i *azureVmWorkloadProtectedItemPtrType) ToAzureVmWorkloadProtectedItemPtrOutput() AzureVmWorkloadProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureVmWorkloadProtectedItemPtrType) ToAzureVmWorkloadProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectedItemPtrOutput)
}

// Azure VM workload-specific protected item.
type AzureVmWorkloadProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemOutput) ToAzureVmWorkloadProtectedItemOutput() AzureVmWorkloadProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemOutput) ToAzureVmWorkloadProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemOutput) ToAzureVmWorkloadProtectedItemPtrOutput() AzureVmWorkloadProtectedItemPtrOutput {
	return o.ToAzureVmWorkloadProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureVmWorkloadProtectedItemOutput) ToAzureVmWorkloadProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVmWorkloadProtectedItem) *AzureVmWorkloadProtectedItem {
		return &v
	}).(AzureVmWorkloadProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadProtectedItemOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo { return v.ExtendedInfo }).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) map[string]KPIResourceHealthDetails { return v.KpisHealths }).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadProtectedItemOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadProtectedItemOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) []DistributedNodesInfo { return v.NodesList }).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadProtectedItemOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadProtectedItemOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadProtectedItemOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadProtectedItemOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadProtectedItem'.
func (o AzureVmWorkloadProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadProtectedItemOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureVmWorkloadProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemPtrOutput) ToAzureVmWorkloadProtectedItemPtrOutput() AzureVmWorkloadProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemPtrOutput) ToAzureVmWorkloadProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemPtrOutput) Elem() AzureVmWorkloadProtectedItemOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) AzureVmWorkloadProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureVmWorkloadProtectedItem
		return ret
	}).(AzureVmWorkloadProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadProtectedItemPtrOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadProtectedItemPtrOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadProtectedItemPtrOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) []DistributedNodesInfo {
		if v == nil {
			return nil
		}
		return v.NodesList
	}).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadProtectedItemPtrOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentName
	}).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadProtectedItemPtrOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentType
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadProtectedItemPtrOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemDataSourceId
	}).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadProtectedItemPtrOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemHealthStatus
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadProtectedItem'.
func (o AzureVmWorkloadProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadProtectedItemPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Additional information on Azure Workload for SQL specific backup item.
type AzureVmWorkloadProtectedItemExtendedInfo struct {
	// The latest backup copy available for this backup item in archive tier
	NewestRecoveryPointInArchive *string `pulumi:"newestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item across all tiers.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// The oldest backup copy available for this backup item in archive tier
	OldestRecoveryPointInArchive *string `pulumi:"oldestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item in vault tier
	OldestRecoveryPointInVault *string `pulumi:"oldestRecoveryPointInVault"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Indicates consistency of policy object and policy applied to this backup item.
	RecoveryModel *string `pulumi:"recoveryModel"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// AzureVmWorkloadProtectedItemExtendedInfoInput is an input type that accepts AzureVmWorkloadProtectedItemExtendedInfoArgs and AzureVmWorkloadProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `AzureVmWorkloadProtectedItemExtendedInfoInput` via:
//
//	AzureVmWorkloadProtectedItemExtendedInfoArgs{...}
type AzureVmWorkloadProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToAzureVmWorkloadProtectedItemExtendedInfoOutput() AzureVmWorkloadProtectedItemExtendedInfoOutput
	ToAzureVmWorkloadProtectedItemExtendedInfoOutputWithContext(context.Context) AzureVmWorkloadProtectedItemExtendedInfoOutput
}

// Additional information on Azure Workload for SQL specific backup item.
type AzureVmWorkloadProtectedItemExtendedInfoArgs struct {
	// The latest backup copy available for this backup item in archive tier
	NewestRecoveryPointInArchive pulumi.StringPtrInput `pulumi:"newestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item across all tiers.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// The oldest backup copy available for this backup item in archive tier
	OldestRecoveryPointInArchive pulumi.StringPtrInput `pulumi:"oldestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item in vault tier
	OldestRecoveryPointInVault pulumi.StringPtrInput `pulumi:"oldestRecoveryPointInVault"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState pulumi.StringPtrInput `pulumi:"policyState"`
	// Indicates consistency of policy object and policy applied to this backup item.
	RecoveryModel pulumi.StringPtrInput `pulumi:"recoveryModel"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
}

func (AzureVmWorkloadProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectedItemExtendedInfo)(nil)).Elem()
}

func (i AzureVmWorkloadProtectedItemExtendedInfoArgs) ToAzureVmWorkloadProtectedItemExtendedInfoOutput() AzureVmWorkloadProtectedItemExtendedInfoOutput {
	return i.ToAzureVmWorkloadProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i AzureVmWorkloadProtectedItemExtendedInfoArgs) ToAzureVmWorkloadProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectedItemExtendedInfoOutput)
}

func (i AzureVmWorkloadProtectedItemExtendedInfoArgs) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutput() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i AzureVmWorkloadProtectedItemExtendedInfoArgs) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectedItemExtendedInfoOutput).ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// AzureVmWorkloadProtectedItemExtendedInfoPtrInput is an input type that accepts AzureVmWorkloadProtectedItemExtendedInfoArgs, AzureVmWorkloadProtectedItemExtendedInfoPtr and AzureVmWorkloadProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `AzureVmWorkloadProtectedItemExtendedInfoPtrInput` via:
//
//	        AzureVmWorkloadProtectedItemExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type AzureVmWorkloadProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutput() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput
	ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(context.Context) AzureVmWorkloadProtectedItemExtendedInfoPtrOutput
}

type azureVmWorkloadProtectedItemExtendedInfoPtrType AzureVmWorkloadProtectedItemExtendedInfoArgs

func AzureVmWorkloadProtectedItemExtendedInfoPtr(v *AzureVmWorkloadProtectedItemExtendedInfoArgs) AzureVmWorkloadProtectedItemExtendedInfoPtrInput {
	return (*azureVmWorkloadProtectedItemExtendedInfoPtrType)(v)
}

func (*azureVmWorkloadProtectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *azureVmWorkloadProtectedItemExtendedInfoPtrType) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutput() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *azureVmWorkloadProtectedItemExtendedInfoPtrType) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Additional information on Azure Workload for SQL specific backup item.
type AzureVmWorkloadProtectedItemExtendedInfoOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectedItemExtendedInfo)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) ToAzureVmWorkloadProtectedItemExtendedInfoOutput() AzureVmWorkloadProtectedItemExtendedInfoOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) ToAzureVmWorkloadProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutput() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVmWorkloadProtectedItemExtendedInfo) *AzureVmWorkloadProtectedItemExtendedInfo {
		return &v
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// The latest backup copy available for this backup item in archive tier
func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) NewestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfo) *string { return v.NewestRecoveryPointInArchive }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item across all tiers.
func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfo) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in archive tier
func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) OldestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfo) *string { return v.OldestRecoveryPointInArchive }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in vault tier
func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) OldestRecoveryPointInVault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfo) *string { return v.OldestRecoveryPointInVault }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfo) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) RecoveryModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfo) *string { return v.RecoveryModel }).(pulumi.StringPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfo) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureVmWorkloadProtectedItemExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadProtectedItemExtendedInfo)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutput() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) Elem() AzureVmWorkloadProtectedItemExtendedInfoOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfo) AzureVmWorkloadProtectedItemExtendedInfo {
		if v != nil {
			return *v
		}
		var ret AzureVmWorkloadProtectedItemExtendedInfo
		return ret
	}).(AzureVmWorkloadProtectedItemExtendedInfoOutput)
}

// The latest backup copy available for this backup item in archive tier
func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) NewestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.NewestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item across all tiers.
func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in archive tier
func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) OldestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in vault tier
func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) OldestRecoveryPointInVault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPointInVault
	}).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) RecoveryModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryModel
	}).(pulumi.StringPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfo) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Additional information on Azure Workload for SQL specific backup item.
type AzureVmWorkloadProtectedItemExtendedInfoResponse struct {
	// The latest backup copy available for this backup item in archive tier
	NewestRecoveryPointInArchive *string `pulumi:"newestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item across all tiers.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// The oldest backup copy available for this backup item in archive tier
	OldestRecoveryPointInArchive *string `pulumi:"oldestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item in vault tier
	OldestRecoveryPointInVault *string `pulumi:"oldestRecoveryPointInVault"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Indicates consistency of policy object and policy applied to this backup item.
	RecoveryModel *string `pulumi:"recoveryModel"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information on Azure Workload for SQL specific backup item.
type AzureVmWorkloadProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) ToAzureVmWorkloadProtectedItemExtendedInfoResponseOutput() AzureVmWorkloadProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) ToAzureVmWorkloadProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoResponseOutput {
	return o
}

// The latest backup copy available for this backup item in archive tier
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) NewestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		return v.NewestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item across all tiers.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in archive tier
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) OldestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		return v.OldestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in vault tier
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) OldestRecoveryPointInVault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPointInVault }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) RecoveryModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *string { return v.RecoveryModel }).(pulumi.StringPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) ToAzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput() AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) ToAzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) Elem() AzureVmWorkloadProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) AzureVmWorkloadProtectedItemExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret AzureVmWorkloadProtectedItemExtendedInfoResponse
		return ret
	}).(AzureVmWorkloadProtectedItemExtendedInfoResponseOutput)
}

// The latest backup copy available for this backup item in archive tier
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) NewestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.NewestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item across all tiers.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in archive tier
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in vault tier
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPointInVault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPointInVault
	}).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) RecoveryModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryModel
	}).(pulumi.StringPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Azure VM workload-specific protected item.
type AzureVmWorkloadProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Error details in last backup
	LastBackupErrorDetail *ErrorDetailResponse `pulumi:"lastBackupErrorDetail"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfoResponse `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Azure VM workload-specific protected item.
type AzureVmWorkloadProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectedItemResponse)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemResponseOutput) ToAzureVmWorkloadProtectedItemResponseOutput() AzureVmWorkloadProtectedItemResponseOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemResponseOutput) ToAzureVmWorkloadProtectedItemResponseOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureVmWorkloadProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *AzureVmWorkloadProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the DB represented by this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Error details in last backup
func (o AzureVmWorkloadProtectedItemResponseOutput) LastBackupErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *ErrorDetailResponse { return v.LastBackupErrorDetail }).(ErrorDetailResponsePtrOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadProtectedItemResponseOutput) NodesList() DistributedNodesInfoResponseArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) []DistributedNodesInfoResponse { return v.NodesList }).(DistributedNodesInfoResponseArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadProtectedItemResponseOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadProtectedItemResponseOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadProtectedItemResponseOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadProtectedItemResponseOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadProtectedItem'.
func (o AzureVmWorkloadProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) ProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) string { return v.ProtectionStatus }).(pulumi.StringOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadProtectedItemResponseOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureVmWorkloadProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureVmWorkloadProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Azure VM (Mercury) workload-specific backup policy.
type AzureVmWorkloadProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureWorkload'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Fix the policy inconsistency
	MakePolicyConsistent *bool `pulumi:"makePolicyConsistent"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Common settings for the backup management
	Settings *Settings `pulumi:"settings"`
	// List of sub-protection policies which includes schedule and retention
	SubProtectionPolicy []SubProtectionPolicy `pulumi:"subProtectionPolicy"`
	// Type of workload for the backup management
	WorkLoadType *string `pulumi:"workLoadType"`
}

// AzureVmWorkloadProtectionPolicyInput is an input type that accepts AzureVmWorkloadProtectionPolicyArgs and AzureVmWorkloadProtectionPolicyOutput values.
// You can construct a concrete instance of `AzureVmWorkloadProtectionPolicyInput` via:
//
//	AzureVmWorkloadProtectionPolicyArgs{...}
type AzureVmWorkloadProtectionPolicyInput interface {
	pulumi.Input

	ToAzureVmWorkloadProtectionPolicyOutput() AzureVmWorkloadProtectionPolicyOutput
	ToAzureVmWorkloadProtectionPolicyOutputWithContext(context.Context) AzureVmWorkloadProtectionPolicyOutput
}

// Azure VM (Mercury) workload-specific backup policy.
type AzureVmWorkloadProtectionPolicyArgs struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureWorkload'.
	BackupManagementType pulumi.StringInput `pulumi:"backupManagementType"`
	// Fix the policy inconsistency
	MakePolicyConsistent pulumi.BoolPtrInput `pulumi:"makePolicyConsistent"`
	// Number of items associated with this policy.
	ProtectedItemsCount pulumi.IntPtrInput `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Common settings for the backup management
	Settings SettingsPtrInput `pulumi:"settings"`
	// List of sub-protection policies which includes schedule and retention
	SubProtectionPolicy SubProtectionPolicyArrayInput `pulumi:"subProtectionPolicy"`
	// Type of workload for the backup management
	WorkLoadType pulumi.StringPtrInput `pulumi:"workLoadType"`
}

func (AzureVmWorkloadProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectionPolicy)(nil)).Elem()
}

func (i AzureVmWorkloadProtectionPolicyArgs) ToAzureVmWorkloadProtectionPolicyOutput() AzureVmWorkloadProtectionPolicyOutput {
	return i.ToAzureVmWorkloadProtectionPolicyOutputWithContext(context.Background())
}

func (i AzureVmWorkloadProtectionPolicyArgs) ToAzureVmWorkloadProtectionPolicyOutputWithContext(ctx context.Context) AzureVmWorkloadProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectionPolicyOutput)
}

func (i AzureVmWorkloadProtectionPolicyArgs) ToAzureVmWorkloadProtectionPolicyPtrOutput() AzureVmWorkloadProtectionPolicyPtrOutput {
	return i.ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i AzureVmWorkloadProtectionPolicyArgs) ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectionPolicyOutput).ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(ctx)
}

// AzureVmWorkloadProtectionPolicyPtrInput is an input type that accepts AzureVmWorkloadProtectionPolicyArgs, AzureVmWorkloadProtectionPolicyPtr and AzureVmWorkloadProtectionPolicyPtrOutput values.
// You can construct a concrete instance of `AzureVmWorkloadProtectionPolicyPtrInput` via:
//
//	        AzureVmWorkloadProtectionPolicyArgs{...}
//
//	or:
//
//	        nil
type AzureVmWorkloadProtectionPolicyPtrInput interface {
	pulumi.Input

	ToAzureVmWorkloadProtectionPolicyPtrOutput() AzureVmWorkloadProtectionPolicyPtrOutput
	ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(context.Context) AzureVmWorkloadProtectionPolicyPtrOutput
}

type azureVmWorkloadProtectionPolicyPtrType AzureVmWorkloadProtectionPolicyArgs

func AzureVmWorkloadProtectionPolicyPtr(v *AzureVmWorkloadProtectionPolicyArgs) AzureVmWorkloadProtectionPolicyPtrInput {
	return (*azureVmWorkloadProtectionPolicyPtrType)(v)
}

func (*azureVmWorkloadProtectionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadProtectionPolicy)(nil)).Elem()
}

func (i *azureVmWorkloadProtectionPolicyPtrType) ToAzureVmWorkloadProtectionPolicyPtrOutput() AzureVmWorkloadProtectionPolicyPtrOutput {
	return i.ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i *azureVmWorkloadProtectionPolicyPtrType) ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectionPolicyPtrOutput)
}

// Azure VM (Mercury) workload-specific backup policy.
type AzureVmWorkloadProtectionPolicyOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectionPolicy)(nil)).Elem()
}

func (o AzureVmWorkloadProtectionPolicyOutput) ToAzureVmWorkloadProtectionPolicyOutput() AzureVmWorkloadProtectionPolicyOutput {
	return o
}

func (o AzureVmWorkloadProtectionPolicyOutput) ToAzureVmWorkloadProtectionPolicyOutputWithContext(ctx context.Context) AzureVmWorkloadProtectionPolicyOutput {
	return o
}

func (o AzureVmWorkloadProtectionPolicyOutput) ToAzureVmWorkloadProtectionPolicyPtrOutput() AzureVmWorkloadProtectionPolicyPtrOutput {
	return o.ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(context.Background())
}

func (o AzureVmWorkloadProtectionPolicyOutput) ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVmWorkloadProtectionPolicy) *AzureVmWorkloadProtectionPolicy {
		return &v
	}).(AzureVmWorkloadProtectionPolicyPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureWorkload'.
func (o AzureVmWorkloadProtectionPolicyOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicy) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Fix the policy inconsistency
func (o AzureVmWorkloadProtectionPolicyOutput) MakePolicyConsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicy) *bool { return v.MakePolicyConsistent }).(pulumi.BoolPtrOutput)
}

// Number of items associated with this policy.
func (o AzureVmWorkloadProtectionPolicyOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicy) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureVmWorkloadProtectionPolicyOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicy) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Common settings for the backup management
func (o AzureVmWorkloadProtectionPolicyOutput) Settings() SettingsPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicy) *Settings { return v.Settings }).(SettingsPtrOutput)
}

// List of sub-protection policies which includes schedule and retention
func (o AzureVmWorkloadProtectionPolicyOutput) SubProtectionPolicy() SubProtectionPolicyArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicy) []SubProtectionPolicy { return v.SubProtectionPolicy }).(SubProtectionPolicyArrayOutput)
}

// Type of workload for the backup management
func (o AzureVmWorkloadProtectionPolicyOutput) WorkLoadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicy) *string { return v.WorkLoadType }).(pulumi.StringPtrOutput)
}

type AzureVmWorkloadProtectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadProtectionPolicy)(nil)).Elem()
}

func (o AzureVmWorkloadProtectionPolicyPtrOutput) ToAzureVmWorkloadProtectionPolicyPtrOutput() AzureVmWorkloadProtectionPolicyPtrOutput {
	return o
}

func (o AzureVmWorkloadProtectionPolicyPtrOutput) ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectionPolicyPtrOutput {
	return o
}

func (o AzureVmWorkloadProtectionPolicyPtrOutput) Elem() AzureVmWorkloadProtectionPolicyOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectionPolicy) AzureVmWorkloadProtectionPolicy {
		if v != nil {
			return *v
		}
		var ret AzureVmWorkloadProtectionPolicy
		return ret
	}).(AzureVmWorkloadProtectionPolicyOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureWorkload'.
func (o AzureVmWorkloadProtectionPolicyPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Fix the policy inconsistency
func (o AzureVmWorkloadProtectionPolicyPtrOutput) MakePolicyConsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectionPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.MakePolicyConsistent
	}).(pulumi.BoolPtrOutput)
}

// Number of items associated with this policy.
func (o AzureVmWorkloadProtectionPolicyPtrOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.ProtectedItemsCount
	}).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureVmWorkloadProtectionPolicyPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectionPolicy) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Common settings for the backup management
func (o AzureVmWorkloadProtectionPolicyPtrOutput) Settings() SettingsPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectionPolicy) *Settings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(SettingsPtrOutput)
}

// List of sub-protection policies which includes schedule and retention
func (o AzureVmWorkloadProtectionPolicyPtrOutput) SubProtectionPolicy() SubProtectionPolicyArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectionPolicy) []SubProtectionPolicy {
		if v == nil {
			return nil
		}
		return v.SubProtectionPolicy
	}).(SubProtectionPolicyArrayOutput)
}

// Type of workload for the backup management
func (o AzureVmWorkloadProtectionPolicyPtrOutput) WorkLoadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.WorkLoadType
	}).(pulumi.StringPtrOutput)
}

// Azure VM (Mercury) workload-specific backup policy.
type AzureVmWorkloadProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureWorkload'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Fix the policy inconsistency
	MakePolicyConsistent *bool `pulumi:"makePolicyConsistent"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Common settings for the backup management
	Settings *SettingsResponse `pulumi:"settings"`
	// List of sub-protection policies which includes schedule and retention
	SubProtectionPolicy []SubProtectionPolicyResponse `pulumi:"subProtectionPolicy"`
	// Type of workload for the backup management
	WorkLoadType *string `pulumi:"workLoadType"`
}

// Azure VM (Mercury) workload-specific backup policy.
type AzureVmWorkloadProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectionPolicyResponse)(nil)).Elem()
}

func (o AzureVmWorkloadProtectionPolicyResponseOutput) ToAzureVmWorkloadProtectionPolicyResponseOutput() AzureVmWorkloadProtectionPolicyResponseOutput {
	return o
}

func (o AzureVmWorkloadProtectionPolicyResponseOutput) ToAzureVmWorkloadProtectionPolicyResponseOutputWithContext(ctx context.Context) AzureVmWorkloadProtectionPolicyResponseOutput {
	return o
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureWorkload'.
func (o AzureVmWorkloadProtectionPolicyResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicyResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Fix the policy inconsistency
func (o AzureVmWorkloadProtectionPolicyResponseOutput) MakePolicyConsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicyResponse) *bool { return v.MakePolicyConsistent }).(pulumi.BoolPtrOutput)
}

// Number of items associated with this policy.
func (o AzureVmWorkloadProtectionPolicyResponseOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicyResponse) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureVmWorkloadProtectionPolicyResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicyResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Common settings for the backup management
func (o AzureVmWorkloadProtectionPolicyResponseOutput) Settings() SettingsResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicyResponse) *SettingsResponse { return v.Settings }).(SettingsResponsePtrOutput)
}

// List of sub-protection policies which includes schedule and retention
func (o AzureVmWorkloadProtectionPolicyResponseOutput) SubProtectionPolicy() SubProtectionPolicyResponseArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicyResponse) []SubProtectionPolicyResponse {
		return v.SubProtectionPolicy
	}).(SubProtectionPolicyResponseArrayOutput)
}

// Type of workload for the backup management
func (o AzureVmWorkloadProtectionPolicyResponseOutput) WorkLoadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicyResponse) *string { return v.WorkLoadType }).(pulumi.StringPtrOutput)
}

// Azure VM workload-specific protected item representing SAP ASE Database.
type AzureVmWorkloadSAPAseDatabaseProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfo `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPAseDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureVmWorkloadSAPAseDatabaseProtectedItemInput is an input type that accepts AzureVmWorkloadSAPAseDatabaseProtectedItemArgs and AzureVmWorkloadSAPAseDatabaseProtectedItemOutput values.
// You can construct a concrete instance of `AzureVmWorkloadSAPAseDatabaseProtectedItemInput` via:
//
//	AzureVmWorkloadSAPAseDatabaseProtectedItemArgs{...}
type AzureVmWorkloadSAPAseDatabaseProtectedItemInput interface {
	pulumi.Input

	ToAzureVmWorkloadSAPAseDatabaseProtectedItemOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemOutput
	ToAzureVmWorkloadSAPAseDatabaseProtectedItemOutputWithContext(context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemOutput
}

// Azure VM workload-specific protected item representing SAP ASE Database.
type AzureVmWorkloadSAPAseDatabaseProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureVmWorkloadProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList DistributedNodesInfoArrayInput `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName pulumi.StringPtrInput `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType pulumi.StringPtrInput `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId pulumi.StringPtrInput `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus pulumi.StringPtrInput `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPAseDatabase'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureVmWorkloadSAPAseDatabaseProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPAseDatabaseProtectedItem)(nil)).Elem()
}

func (i AzureVmWorkloadSAPAseDatabaseProtectedItemArgs) ToAzureVmWorkloadSAPAseDatabaseProtectedItemOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemOutput {
	return i.ToAzureVmWorkloadSAPAseDatabaseProtectedItemOutputWithContext(context.Background())
}

func (i AzureVmWorkloadSAPAseDatabaseProtectedItemArgs) ToAzureVmWorkloadSAPAseDatabaseProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPAseDatabaseProtectedItemOutput)
}

func (i AzureVmWorkloadSAPAseDatabaseProtectedItemArgs) ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureVmWorkloadSAPAseDatabaseProtectedItemArgs) ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPAseDatabaseProtectedItemOutput).ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(ctx)
}

// AzureVmWorkloadSAPAseDatabaseProtectedItemPtrInput is an input type that accepts AzureVmWorkloadSAPAseDatabaseProtectedItemArgs, AzureVmWorkloadSAPAseDatabaseProtectedItemPtr and AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureVmWorkloadSAPAseDatabaseProtectedItemPtrInput` via:
//
//	        AzureVmWorkloadSAPAseDatabaseProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureVmWorkloadSAPAseDatabaseProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput
	ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput
}

type azureVmWorkloadSAPAseDatabaseProtectedItemPtrType AzureVmWorkloadSAPAseDatabaseProtectedItemArgs

func AzureVmWorkloadSAPAseDatabaseProtectedItemPtr(v *AzureVmWorkloadSAPAseDatabaseProtectedItemArgs) AzureVmWorkloadSAPAseDatabaseProtectedItemPtrInput {
	return (*azureVmWorkloadSAPAseDatabaseProtectedItemPtrType)(v)
}

func (*azureVmWorkloadSAPAseDatabaseProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadSAPAseDatabaseProtectedItem)(nil)).Elem()
}

func (i *azureVmWorkloadSAPAseDatabaseProtectedItemPtrType) ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureVmWorkloadSAPAseDatabaseProtectedItemPtrType) ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput)
}

// Azure VM workload-specific protected item representing SAP ASE Database.
type AzureVmWorkloadSAPAseDatabaseProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPAseDatabaseProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ToAzureVmWorkloadSAPAseDatabaseProtectedItemOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ToAzureVmWorkloadSAPAseDatabaseProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput {
	return o.ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVmWorkloadSAPAseDatabaseProtectedItem) *AzureVmWorkloadSAPAseDatabaseProtectedItem {
		return &v
	}).(AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) map[string]KPIResourceHealthDetails {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) []DistributedNodesInfo { return v.NodesList }).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPAseDatabase'.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadSAPAseDatabaseProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) Elem() AzureVmWorkloadSAPAseDatabaseProtectedItemOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) AzureVmWorkloadSAPAseDatabaseProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureVmWorkloadSAPAseDatabaseProtectedItem
		return ret
	}).(AzureVmWorkloadSAPAseDatabaseProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) []DistributedNodesInfo {
		if v == nil {
			return nil
		}
		return v.NodesList
	}).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentName
	}).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentType
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemDataSourceId
	}).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemHealthStatus
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPAseDatabase'.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure VM workload-specific protected item representing SAP ASE Database.
type AzureVmWorkloadSAPAseDatabaseProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Error details in last backup
	LastBackupErrorDetail *ErrorDetailResponse `pulumi:"lastBackupErrorDetail"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfoResponse `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPAseDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Azure VM workload-specific protected item representing SAP ASE Database.
type AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPAseDatabaseProtectedItemResponse)(nil)).Elem()
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ToAzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput {
	return o
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ToAzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutputWithContext(ctx context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string {
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *AzureVmWorkloadProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the DB represented by this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *bool {
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *bool {
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Error details in last backup
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) LastBackupErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *ErrorDetailResponse {
		return v.LastBackupErrorDetail
	}).(ErrorDetailResponsePtrOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) NodesList() DistributedNodesInfoResponseArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) []DistributedNodesInfoResponse {
		return v.NodesList
	}).(DistributedNodesInfoResponseArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPAseDatabase'.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) string { return v.ProtectionStatus }).(pulumi.StringOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) []string {
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *int {
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Azure VM workload-specific protected item representing SAP HANA DBInstance.
type AzureVmWorkloadSAPHanaDBInstanceProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfo `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPHanaDBInstance'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureVmWorkloadSAPHanaDBInstanceProtectedItemInput is an input type that accepts AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs and AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput values.
// You can construct a concrete instance of `AzureVmWorkloadSAPHanaDBInstanceProtectedItemInput` via:
//
//	AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs{...}
type AzureVmWorkloadSAPHanaDBInstanceProtectedItemInput interface {
	pulumi.Input

	ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput
	ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemOutputWithContext(context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput
}

// Azure VM workload-specific protected item representing SAP HANA DBInstance.
type AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureVmWorkloadProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList DistributedNodesInfoArrayInput `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName pulumi.StringPtrInput `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType pulumi.StringPtrInput `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId pulumi.StringPtrInput `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus pulumi.StringPtrInput `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPHanaDBInstance'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPHanaDBInstanceProtectedItem)(nil)).Elem()
}

func (i AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput {
	return i.ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemOutputWithContext(context.Background())
}

func (i AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput)
}

func (i AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput).ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(ctx)
}

// AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrInput is an input type that accepts AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs, AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtr and AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrInput` via:
//
//	        AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput
	ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput
}

type azureVmWorkloadSAPHanaDBInstanceProtectedItemPtrType AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs

func AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtr(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs) AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrInput {
	return (*azureVmWorkloadSAPHanaDBInstanceProtectedItemPtrType)(v)
}

func (*azureVmWorkloadSAPHanaDBInstanceProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadSAPHanaDBInstanceProtectedItem)(nil)).Elem()
}

func (i *azureVmWorkloadSAPHanaDBInstanceProtectedItemPtrType) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureVmWorkloadSAPHanaDBInstanceProtectedItemPtrType) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput)
}

// Azure VM workload-specific protected item representing SAP HANA DBInstance.
type AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPHanaDBInstanceProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput {
	return o.ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *AzureVmWorkloadSAPHanaDBInstanceProtectedItem {
		return &v
	}).(AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) map[string]KPIResourceHealthDetails {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) []DistributedNodesInfo { return v.NodesList }).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPHanaDBInstance'.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) []string {
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadSAPHanaDBInstanceProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) Elem() AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) AzureVmWorkloadSAPHanaDBInstanceProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureVmWorkloadSAPHanaDBInstanceProtectedItem
		return ret
	}).(AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) []DistributedNodesInfo {
		if v == nil {
			return nil
		}
		return v.NodesList
	}).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentName
	}).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentType
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemDataSourceId
	}).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemHealthStatus
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPHanaDBInstance'.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure VM workload-specific protected item representing SAP HANA DBInstance.
type AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Error details in last backup
	LastBackupErrorDetail *ErrorDetailResponse `pulumi:"lastBackupErrorDetail"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfoResponse `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPHanaDBInstance'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Azure VM workload-specific protected item representing SAP HANA DBInstance.
type AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse)(nil)).Elem()
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string {
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string {
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *AzureVmWorkloadProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the DB represented by this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *bool {
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *bool {
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Error details in last backup
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) LastBackupErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *ErrorDetailResponse {
		return v.LastBackupErrorDetail
	}).(ErrorDetailResponsePtrOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) NodesList() DistributedNodesInfoResponseArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) []DistributedNodesInfoResponse {
		return v.NodesList
	}).(DistributedNodesInfoResponseArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string {
		return v.ProtectedItemDataSourceId
	}).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string {
		return v.ProtectedItemHealthStatus
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPHanaDBInstance'.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) string { return v.ProtectionStatus }).(pulumi.StringOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) []string {
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *int {
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Azure VM workload-specific protected item representing SAP HANA Database.
type AzureVmWorkloadSAPHanaDatabaseProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfo `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPHanaDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureVmWorkloadSAPHanaDatabaseProtectedItemInput is an input type that accepts AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs and AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput values.
// You can construct a concrete instance of `AzureVmWorkloadSAPHanaDatabaseProtectedItemInput` via:
//
//	AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs{...}
type AzureVmWorkloadSAPHanaDatabaseProtectedItemInput interface {
	pulumi.Input

	ToAzureVmWorkloadSAPHanaDatabaseProtectedItemOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput
	ToAzureVmWorkloadSAPHanaDatabaseProtectedItemOutputWithContext(context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput
}

// Azure VM workload-specific protected item representing SAP HANA Database.
type AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureVmWorkloadProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList DistributedNodesInfoArrayInput `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName pulumi.StringPtrInput `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType pulumi.StringPtrInput `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId pulumi.StringPtrInput `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus pulumi.StringPtrInput `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPHanaDatabase'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPHanaDatabaseProtectedItem)(nil)).Elem()
}

func (i AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput {
	return i.ToAzureVmWorkloadSAPHanaDatabaseProtectedItemOutputWithContext(context.Background())
}

func (i AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput)
}

func (i AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput).ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(ctx)
}

// AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrInput is an input type that accepts AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs, AzureVmWorkloadSAPHanaDatabaseProtectedItemPtr and AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrInput` via:
//
//	        AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput
	ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput
}

type azureVmWorkloadSAPHanaDatabaseProtectedItemPtrType AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs

func AzureVmWorkloadSAPHanaDatabaseProtectedItemPtr(v *AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs) AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrInput {
	return (*azureVmWorkloadSAPHanaDatabaseProtectedItemPtrType)(v)
}

func (*azureVmWorkloadSAPHanaDatabaseProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadSAPHanaDatabaseProtectedItem)(nil)).Elem()
}

func (i *azureVmWorkloadSAPHanaDatabaseProtectedItemPtrType) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureVmWorkloadSAPHanaDatabaseProtectedItemPtrType) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput)
}

// Azure VM workload-specific protected item representing SAP HANA Database.
type AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPHanaDatabaseProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput {
	return o.ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *AzureVmWorkloadSAPHanaDatabaseProtectedItem {
		return &v
	}).(AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) map[string]KPIResourceHealthDetails {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) []DistributedNodesInfo { return v.NodesList }).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPHanaDatabase'.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadSAPHanaDatabaseProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) Elem() AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) AzureVmWorkloadSAPHanaDatabaseProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureVmWorkloadSAPHanaDatabaseProtectedItem
		return ret
	}).(AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) []DistributedNodesInfo {
		if v == nil {
			return nil
		}
		return v.NodesList
	}).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentName
	}).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentType
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemDataSourceId
	}).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemHealthStatus
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPHanaDatabase'.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure VM workload-specific protected item representing SAP HANA Database.
type AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Error details in last backup
	LastBackupErrorDetail *ErrorDetailResponse `pulumi:"lastBackupErrorDetail"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfoResponse `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPHanaDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Azure VM workload-specific protected item representing SAP HANA Database.
type AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse)(nil)).Elem()
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string {
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *AzureVmWorkloadProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the DB represented by this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *bool {
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *bool {
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Error details in last backup
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) LastBackupErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *ErrorDetailResponse {
		return v.LastBackupErrorDetail
	}).(ErrorDetailResponsePtrOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) NodesList() DistributedNodesInfoResponseArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) []DistributedNodesInfoResponse {
		return v.NodesList
	}).(DistributedNodesInfoResponseArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string {
		return v.ProtectedItemDataSourceId
	}).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string {
		return v.ProtectedItemHealthStatus
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPHanaDatabase'.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) string { return v.ProtectionStatus }).(pulumi.StringOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) []string {
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *int {
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Azure VM workload-specific protected item representing SQL Database.
type AzureVmWorkloadSQLDatabaseProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfo `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSQLDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureVmWorkloadSQLDatabaseProtectedItemInput is an input type that accepts AzureVmWorkloadSQLDatabaseProtectedItemArgs and AzureVmWorkloadSQLDatabaseProtectedItemOutput values.
// You can construct a concrete instance of `AzureVmWorkloadSQLDatabaseProtectedItemInput` via:
//
//	AzureVmWorkloadSQLDatabaseProtectedItemArgs{...}
type AzureVmWorkloadSQLDatabaseProtectedItemInput interface {
	pulumi.Input

	ToAzureVmWorkloadSQLDatabaseProtectedItemOutput() AzureVmWorkloadSQLDatabaseProtectedItemOutput
	ToAzureVmWorkloadSQLDatabaseProtectedItemOutputWithContext(context.Context) AzureVmWorkloadSQLDatabaseProtectedItemOutput
}

// Azure VM workload-specific protected item representing SQL Database.
type AzureVmWorkloadSQLDatabaseProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureVmWorkloadProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList DistributedNodesInfoArrayInput `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName pulumi.StringPtrInput `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType pulumi.StringPtrInput `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId pulumi.StringPtrInput `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus pulumi.StringPtrInput `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSQLDatabase'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureVmWorkloadSQLDatabaseProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSQLDatabaseProtectedItem)(nil)).Elem()
}

func (i AzureVmWorkloadSQLDatabaseProtectedItemArgs) ToAzureVmWorkloadSQLDatabaseProtectedItemOutput() AzureVmWorkloadSQLDatabaseProtectedItemOutput {
	return i.ToAzureVmWorkloadSQLDatabaseProtectedItemOutputWithContext(context.Background())
}

func (i AzureVmWorkloadSQLDatabaseProtectedItemArgs) ToAzureVmWorkloadSQLDatabaseProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadSQLDatabaseProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSQLDatabaseProtectedItemOutput)
}

func (i AzureVmWorkloadSQLDatabaseProtectedItemArgs) ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutput() AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureVmWorkloadSQLDatabaseProtectedItemArgs) ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSQLDatabaseProtectedItemOutput).ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(ctx)
}

// AzureVmWorkloadSQLDatabaseProtectedItemPtrInput is an input type that accepts AzureVmWorkloadSQLDatabaseProtectedItemArgs, AzureVmWorkloadSQLDatabaseProtectedItemPtr and AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureVmWorkloadSQLDatabaseProtectedItemPtrInput` via:
//
//	        AzureVmWorkloadSQLDatabaseProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureVmWorkloadSQLDatabaseProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutput() AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput
	ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(context.Context) AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput
}

type azureVmWorkloadSQLDatabaseProtectedItemPtrType AzureVmWorkloadSQLDatabaseProtectedItemArgs

func AzureVmWorkloadSQLDatabaseProtectedItemPtr(v *AzureVmWorkloadSQLDatabaseProtectedItemArgs) AzureVmWorkloadSQLDatabaseProtectedItemPtrInput {
	return (*azureVmWorkloadSQLDatabaseProtectedItemPtrType)(v)
}

func (*azureVmWorkloadSQLDatabaseProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadSQLDatabaseProtectedItem)(nil)).Elem()
}

func (i *azureVmWorkloadSQLDatabaseProtectedItemPtrType) ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutput() AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureVmWorkloadSQLDatabaseProtectedItemPtrType) ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput)
}

// Azure VM workload-specific protected item representing SQL Database.
type AzureVmWorkloadSQLDatabaseProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSQLDatabaseProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSQLDatabaseProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ToAzureVmWorkloadSQLDatabaseProtectedItemOutput() AzureVmWorkloadSQLDatabaseProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ToAzureVmWorkloadSQLDatabaseProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadSQLDatabaseProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutput() AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput {
	return o.ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVmWorkloadSQLDatabaseProtectedItem) *AzureVmWorkloadSQLDatabaseProtectedItem {
		return &v
	}).(AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) map[string]KPIResourceHealthDetails {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) []DistributedNodesInfo { return v.NodesList }).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSQLDatabase'.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadSQLDatabaseProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutput() AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) Elem() AzureVmWorkloadSQLDatabaseProtectedItemOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) AzureVmWorkloadSQLDatabaseProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureVmWorkloadSQLDatabaseProtectedItem
		return ret
	}).(AzureVmWorkloadSQLDatabaseProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) []DistributedNodesInfo {
		if v == nil {
			return nil
		}
		return v.NodesList
	}).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentName
	}).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentType
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemDataSourceId
	}).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemHealthStatus
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSQLDatabase'.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure VM workload-specific protected item representing SQL Database.
type AzureVmWorkloadSQLDatabaseProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Error details in last backup
	LastBackupErrorDetail *ErrorDetailResponse `pulumi:"lastBackupErrorDetail"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfoResponse `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSQLDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Azure VM workload-specific protected item representing SQL Database.
type AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSQLDatabaseProtectedItemResponse)(nil)).Elem()
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ToAzureVmWorkloadSQLDatabaseProtectedItemResponseOutput() AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput {
	return o
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ToAzureVmWorkloadSQLDatabaseProtectedItemResponseOutputWithContext(ctx context.Context) AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *AzureVmWorkloadProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the DB represented by this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *bool {
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Error details in last backup
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) LastBackupErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *ErrorDetailResponse {
		return v.LastBackupErrorDetail
	}).(ErrorDetailResponsePtrOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) NodesList() DistributedNodesInfoResponseArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) []DistributedNodesInfoResponse {
		return v.NodesList
	}).(DistributedNodesInfoResponseArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSQLDatabase'.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) string { return v.ProtectionStatus }).(pulumi.StringOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) []string {
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Azure Recovery Services Vault specific protection intent item.
type AzureWorkloadAutoProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureWorkloadAutoProtectionIntentInput is an input type that accepts AzureWorkloadAutoProtectionIntentArgs and AzureWorkloadAutoProtectionIntentOutput values.
// You can construct a concrete instance of `AzureWorkloadAutoProtectionIntentInput` via:
//
//	AzureWorkloadAutoProtectionIntentArgs{...}
type AzureWorkloadAutoProtectionIntentInput interface {
	pulumi.Input

	ToAzureWorkloadAutoProtectionIntentOutput() AzureWorkloadAutoProtectionIntentOutput
	ToAzureWorkloadAutoProtectionIntentOutputWithContext(context.Context) AzureWorkloadAutoProtectionIntentOutput
}

// Azure Recovery Services Vault specific protection intent item.
type AzureWorkloadAutoProtectionIntentArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId pulumi.StringPtrInput `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadAutoProtectionIntent'.
	ProtectionIntentItemType pulumi.StringInput `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureWorkloadAutoProtectionIntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadAutoProtectionIntent)(nil)).Elem()
}

func (i AzureWorkloadAutoProtectionIntentArgs) ToAzureWorkloadAutoProtectionIntentOutput() AzureWorkloadAutoProtectionIntentOutput {
	return i.ToAzureWorkloadAutoProtectionIntentOutputWithContext(context.Background())
}

func (i AzureWorkloadAutoProtectionIntentArgs) ToAzureWorkloadAutoProtectionIntentOutputWithContext(ctx context.Context) AzureWorkloadAutoProtectionIntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadAutoProtectionIntentOutput)
}

func (i AzureWorkloadAutoProtectionIntentArgs) ToAzureWorkloadAutoProtectionIntentPtrOutput() AzureWorkloadAutoProtectionIntentPtrOutput {
	return i.ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (i AzureWorkloadAutoProtectionIntentArgs) ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadAutoProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadAutoProtectionIntentOutput).ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(ctx)
}

// AzureWorkloadAutoProtectionIntentPtrInput is an input type that accepts AzureWorkloadAutoProtectionIntentArgs, AzureWorkloadAutoProtectionIntentPtr and AzureWorkloadAutoProtectionIntentPtrOutput values.
// You can construct a concrete instance of `AzureWorkloadAutoProtectionIntentPtrInput` via:
//
//	        AzureWorkloadAutoProtectionIntentArgs{...}
//
//	or:
//
//	        nil
type AzureWorkloadAutoProtectionIntentPtrInput interface {
	pulumi.Input

	ToAzureWorkloadAutoProtectionIntentPtrOutput() AzureWorkloadAutoProtectionIntentPtrOutput
	ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(context.Context) AzureWorkloadAutoProtectionIntentPtrOutput
}

type azureWorkloadAutoProtectionIntentPtrType AzureWorkloadAutoProtectionIntentArgs

func AzureWorkloadAutoProtectionIntentPtr(v *AzureWorkloadAutoProtectionIntentArgs) AzureWorkloadAutoProtectionIntentPtrInput {
	return (*azureWorkloadAutoProtectionIntentPtrType)(v)
}

func (*azureWorkloadAutoProtectionIntentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadAutoProtectionIntent)(nil)).Elem()
}

func (i *azureWorkloadAutoProtectionIntentPtrType) ToAzureWorkloadAutoProtectionIntentPtrOutput() AzureWorkloadAutoProtectionIntentPtrOutput {
	return i.ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (i *azureWorkloadAutoProtectionIntentPtrType) ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadAutoProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadAutoProtectionIntentPtrOutput)
}

// Azure Recovery Services Vault specific protection intent item.
type AzureWorkloadAutoProtectionIntentOutput struct{ *pulumi.OutputState }

func (AzureWorkloadAutoProtectionIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadAutoProtectionIntent)(nil)).Elem()
}

func (o AzureWorkloadAutoProtectionIntentOutput) ToAzureWorkloadAutoProtectionIntentOutput() AzureWorkloadAutoProtectionIntentOutput {
	return o
}

func (o AzureWorkloadAutoProtectionIntentOutput) ToAzureWorkloadAutoProtectionIntentOutputWithContext(ctx context.Context) AzureWorkloadAutoProtectionIntentOutput {
	return o
}

func (o AzureWorkloadAutoProtectionIntentOutput) ToAzureWorkloadAutoProtectionIntentPtrOutput() AzureWorkloadAutoProtectionIntentPtrOutput {
	return o.ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (o AzureWorkloadAutoProtectionIntentOutput) ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadAutoProtectionIntentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureWorkloadAutoProtectionIntent) *AzureWorkloadAutoProtectionIntent {
		return &v
	}).(AzureWorkloadAutoProtectionIntentPtrOutput)
}

// Type of backup management for the backed up item.
func (o AzureWorkloadAutoProtectionIntentOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntent) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadAutoProtectionIntentOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntent) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadAutoProtectionIntentOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntent) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadAutoProtectionIntent'.
func (o AzureWorkloadAutoProtectionIntentOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntent) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadAutoProtectionIntentOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntent) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadAutoProtectionIntentOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntent) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureWorkloadAutoProtectionIntentPtrOutput struct{ *pulumi.OutputState }

func (AzureWorkloadAutoProtectionIntentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadAutoProtectionIntent)(nil)).Elem()
}

func (o AzureWorkloadAutoProtectionIntentPtrOutput) ToAzureWorkloadAutoProtectionIntentPtrOutput() AzureWorkloadAutoProtectionIntentPtrOutput {
	return o
}

func (o AzureWorkloadAutoProtectionIntentPtrOutput) ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadAutoProtectionIntentPtrOutput {
	return o
}

func (o AzureWorkloadAutoProtectionIntentPtrOutput) Elem() AzureWorkloadAutoProtectionIntentOutput {
	return o.ApplyT(func(v *AzureWorkloadAutoProtectionIntent) AzureWorkloadAutoProtectionIntent {
		if v != nil {
			return *v
		}
		var ret AzureWorkloadAutoProtectionIntent
		return ret
	}).(AzureWorkloadAutoProtectionIntentOutput)
}

// Type of backup management for the backed up item.
func (o AzureWorkloadAutoProtectionIntentPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadAutoProtectionIntentPtrOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ItemId
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadAutoProtectionIntentPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadAutoProtectionIntent'.
func (o AzureWorkloadAutoProtectionIntentPtrOutput) ProtectionIntentItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectionIntentItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadAutoProtectionIntentPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadAutoProtectionIntentPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure Recovery Services Vault specific protection intent item.
type AzureWorkloadAutoProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// Azure Recovery Services Vault specific protection intent item.
type AzureWorkloadAutoProtectionIntentResponseOutput struct{ *pulumi.OutputState }

func (AzureWorkloadAutoProtectionIntentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadAutoProtectionIntentResponse)(nil)).Elem()
}

func (o AzureWorkloadAutoProtectionIntentResponseOutput) ToAzureWorkloadAutoProtectionIntentResponseOutput() AzureWorkloadAutoProtectionIntentResponseOutput {
	return o
}

func (o AzureWorkloadAutoProtectionIntentResponseOutput) ToAzureWorkloadAutoProtectionIntentResponseOutputWithContext(ctx context.Context) AzureWorkloadAutoProtectionIntentResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureWorkloadAutoProtectionIntentResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntentResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadAutoProtectionIntentResponseOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntentResponse) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadAutoProtectionIntentResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntentResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadAutoProtectionIntent'.
func (o AzureWorkloadAutoProtectionIntentResponseOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntentResponse) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadAutoProtectionIntentResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntentResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadAutoProtectionIntentResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntentResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Container for the workloads running inside Azure Compute or Classic Compute.
type AzureWorkloadContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureWorkloadContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// AzureWorkloadContainerInput is an input type that accepts AzureWorkloadContainerArgs and AzureWorkloadContainerOutput values.
// You can construct a concrete instance of `AzureWorkloadContainerInput` via:
//
//	AzureWorkloadContainerArgs{...}
type AzureWorkloadContainerInput interface {
	pulumi.Input

	ToAzureWorkloadContainerOutput() AzureWorkloadContainerOutput
	ToAzureWorkloadContainerOutputWithContext(context.Context) AzureWorkloadContainerOutput
}

// Container for the workloads running inside Azure Compute or Classic Compute.
type AzureWorkloadContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureWorkloadContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo AzureWorkloadContainerExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime pulumi.StringPtrInput `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType pulumi.StringPtrInput `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (AzureWorkloadContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainer)(nil)).Elem()
}

func (i AzureWorkloadContainerArgs) ToAzureWorkloadContainerOutput() AzureWorkloadContainerOutput {
	return i.ToAzureWorkloadContainerOutputWithContext(context.Background())
}

func (i AzureWorkloadContainerArgs) ToAzureWorkloadContainerOutputWithContext(ctx context.Context) AzureWorkloadContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerOutput)
}

func (i AzureWorkloadContainerArgs) ToAzureWorkloadContainerPtrOutput() AzureWorkloadContainerPtrOutput {
	return i.ToAzureWorkloadContainerPtrOutputWithContext(context.Background())
}

func (i AzureWorkloadContainerArgs) ToAzureWorkloadContainerPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerOutput).ToAzureWorkloadContainerPtrOutputWithContext(ctx)
}

// AzureWorkloadContainerPtrInput is an input type that accepts AzureWorkloadContainerArgs, AzureWorkloadContainerPtr and AzureWorkloadContainerPtrOutput values.
// You can construct a concrete instance of `AzureWorkloadContainerPtrInput` via:
//
//	        AzureWorkloadContainerArgs{...}
//
//	or:
//
//	        nil
type AzureWorkloadContainerPtrInput interface {
	pulumi.Input

	ToAzureWorkloadContainerPtrOutput() AzureWorkloadContainerPtrOutput
	ToAzureWorkloadContainerPtrOutputWithContext(context.Context) AzureWorkloadContainerPtrOutput
}

type azureWorkloadContainerPtrType AzureWorkloadContainerArgs

func AzureWorkloadContainerPtr(v *AzureWorkloadContainerArgs) AzureWorkloadContainerPtrInput {
	return (*azureWorkloadContainerPtrType)(v)
}

func (*azureWorkloadContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadContainer)(nil)).Elem()
}

func (i *azureWorkloadContainerPtrType) ToAzureWorkloadContainerPtrOutput() AzureWorkloadContainerPtrOutput {
	return i.ToAzureWorkloadContainerPtrOutputWithContext(context.Background())
}

func (i *azureWorkloadContainerPtrType) ToAzureWorkloadContainerPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerPtrOutput)
}

// Container for the workloads running inside Azure Compute or Classic Compute.
type AzureWorkloadContainerOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainer)(nil)).Elem()
}

func (o AzureWorkloadContainerOutput) ToAzureWorkloadContainerOutput() AzureWorkloadContainerOutput {
	return o
}

func (o AzureWorkloadContainerOutput) ToAzureWorkloadContainerOutputWithContext(ctx context.Context) AzureWorkloadContainerOutput {
	return o
}

func (o AzureWorkloadContainerOutput) ToAzureWorkloadContainerPtrOutput() AzureWorkloadContainerPtrOutput {
	return o.ToAzureWorkloadContainerPtrOutputWithContext(context.Background())
}

func (o AzureWorkloadContainerOutput) ToAzureWorkloadContainerPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureWorkloadContainer) *AzureWorkloadContainer {
		return &v
	}).(AzureWorkloadContainerPtrOutput)
}

// Type of backup management for the container.
func (o AzureWorkloadContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureWorkloadContainer'.
func (o AzureWorkloadContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Additional details of a workload container.
func (o AzureWorkloadContainerOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *AzureWorkloadContainerExtendedInfo { return v.ExtendedInfo }).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o AzureWorkloadContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureWorkloadContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureWorkloadContainerOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureWorkloadContainerOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.OperationType }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureWorkloadContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureWorkloadContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureWorkloadContainerOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureWorkloadContainerOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

type AzureWorkloadContainerPtrOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadContainer)(nil)).Elem()
}

func (o AzureWorkloadContainerPtrOutput) ToAzureWorkloadContainerPtrOutput() AzureWorkloadContainerPtrOutput {
	return o
}

func (o AzureWorkloadContainerPtrOutput) ToAzureWorkloadContainerPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerPtrOutput {
	return o
}

func (o AzureWorkloadContainerPtrOutput) Elem() AzureWorkloadContainerOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) AzureWorkloadContainer {
		if v != nil {
			return *v
		}
		var ret AzureWorkloadContainer
		return ret
	}).(AzureWorkloadContainerOutput)
}

// Type of backup management for the container.
func (o AzureWorkloadContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureWorkloadContainer'.
func (o AzureWorkloadContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Additional details of a workload container.
func (o AzureWorkloadContainerPtrOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *AzureWorkloadContainerExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o AzureWorkloadContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureWorkloadContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureWorkloadContainerPtrOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdatedTime
	}).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureWorkloadContainerPtrOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.OperationType
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureWorkloadContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureWorkloadContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureWorkloadContainerPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureWorkloadContainerPtrOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadType
	}).(pulumi.StringPtrOutput)
}

// Azure workload specific protection intent item.
type AzureWorkloadContainerAutoProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadContainerAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureWorkloadContainerAutoProtectionIntentInput is an input type that accepts AzureWorkloadContainerAutoProtectionIntentArgs and AzureWorkloadContainerAutoProtectionIntentOutput values.
// You can construct a concrete instance of `AzureWorkloadContainerAutoProtectionIntentInput` via:
//
//	AzureWorkloadContainerAutoProtectionIntentArgs{...}
type AzureWorkloadContainerAutoProtectionIntentInput interface {
	pulumi.Input

	ToAzureWorkloadContainerAutoProtectionIntentOutput() AzureWorkloadContainerAutoProtectionIntentOutput
	ToAzureWorkloadContainerAutoProtectionIntentOutputWithContext(context.Context) AzureWorkloadContainerAutoProtectionIntentOutput
}

// Azure workload specific protection intent item.
type AzureWorkloadContainerAutoProtectionIntentArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId pulumi.StringPtrInput `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadContainerAutoProtectionIntent'.
	ProtectionIntentItemType pulumi.StringInput `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureWorkloadContainerAutoProtectionIntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerAutoProtectionIntent)(nil)).Elem()
}

func (i AzureWorkloadContainerAutoProtectionIntentArgs) ToAzureWorkloadContainerAutoProtectionIntentOutput() AzureWorkloadContainerAutoProtectionIntentOutput {
	return i.ToAzureWorkloadContainerAutoProtectionIntentOutputWithContext(context.Background())
}

func (i AzureWorkloadContainerAutoProtectionIntentArgs) ToAzureWorkloadContainerAutoProtectionIntentOutputWithContext(ctx context.Context) AzureWorkloadContainerAutoProtectionIntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerAutoProtectionIntentOutput)
}

func (i AzureWorkloadContainerAutoProtectionIntentArgs) ToAzureWorkloadContainerAutoProtectionIntentPtrOutput() AzureWorkloadContainerAutoProtectionIntentPtrOutput {
	return i.ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (i AzureWorkloadContainerAutoProtectionIntentArgs) ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerAutoProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerAutoProtectionIntentOutput).ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(ctx)
}

// AzureWorkloadContainerAutoProtectionIntentPtrInput is an input type that accepts AzureWorkloadContainerAutoProtectionIntentArgs, AzureWorkloadContainerAutoProtectionIntentPtr and AzureWorkloadContainerAutoProtectionIntentPtrOutput values.
// You can construct a concrete instance of `AzureWorkloadContainerAutoProtectionIntentPtrInput` via:
//
//	        AzureWorkloadContainerAutoProtectionIntentArgs{...}
//
//	or:
//
//	        nil
type AzureWorkloadContainerAutoProtectionIntentPtrInput interface {
	pulumi.Input

	ToAzureWorkloadContainerAutoProtectionIntentPtrOutput() AzureWorkloadContainerAutoProtectionIntentPtrOutput
	ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(context.Context) AzureWorkloadContainerAutoProtectionIntentPtrOutput
}

type azureWorkloadContainerAutoProtectionIntentPtrType AzureWorkloadContainerAutoProtectionIntentArgs

func AzureWorkloadContainerAutoProtectionIntentPtr(v *AzureWorkloadContainerAutoProtectionIntentArgs) AzureWorkloadContainerAutoProtectionIntentPtrInput {
	return (*azureWorkloadContainerAutoProtectionIntentPtrType)(v)
}

func (*azureWorkloadContainerAutoProtectionIntentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadContainerAutoProtectionIntent)(nil)).Elem()
}

func (i *azureWorkloadContainerAutoProtectionIntentPtrType) ToAzureWorkloadContainerAutoProtectionIntentPtrOutput() AzureWorkloadContainerAutoProtectionIntentPtrOutput {
	return i.ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (i *azureWorkloadContainerAutoProtectionIntentPtrType) ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerAutoProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerAutoProtectionIntentPtrOutput)
}

// Azure workload specific protection intent item.
type AzureWorkloadContainerAutoProtectionIntentOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerAutoProtectionIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerAutoProtectionIntent)(nil)).Elem()
}

func (o AzureWorkloadContainerAutoProtectionIntentOutput) ToAzureWorkloadContainerAutoProtectionIntentOutput() AzureWorkloadContainerAutoProtectionIntentOutput {
	return o
}

func (o AzureWorkloadContainerAutoProtectionIntentOutput) ToAzureWorkloadContainerAutoProtectionIntentOutputWithContext(ctx context.Context) AzureWorkloadContainerAutoProtectionIntentOutput {
	return o
}

func (o AzureWorkloadContainerAutoProtectionIntentOutput) ToAzureWorkloadContainerAutoProtectionIntentPtrOutput() AzureWorkloadContainerAutoProtectionIntentPtrOutput {
	return o.ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (o AzureWorkloadContainerAutoProtectionIntentOutput) ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerAutoProtectionIntentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureWorkloadContainerAutoProtectionIntent) *AzureWorkloadContainerAutoProtectionIntent {
		return &v
	}).(AzureWorkloadContainerAutoProtectionIntentPtrOutput)
}

// Type of backup management for the backed up item.
func (o AzureWorkloadContainerAutoProtectionIntentOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntent) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadContainerAutoProtectionIntentOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntent) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadContainerAutoProtectionIntentOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntent) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadContainerAutoProtectionIntent'.
func (o AzureWorkloadContainerAutoProtectionIntentOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntent) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadContainerAutoProtectionIntentOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntent) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadContainerAutoProtectionIntentOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntent) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureWorkloadContainerAutoProtectionIntentPtrOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerAutoProtectionIntentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadContainerAutoProtectionIntent)(nil)).Elem()
}

func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) ToAzureWorkloadContainerAutoProtectionIntentPtrOutput() AzureWorkloadContainerAutoProtectionIntentPtrOutput {
	return o
}

func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerAutoProtectionIntentPtrOutput {
	return o
}

func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) Elem() AzureWorkloadContainerAutoProtectionIntentOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerAutoProtectionIntent) AzureWorkloadContainerAutoProtectionIntent {
		if v != nil {
			return *v
		}
		var ret AzureWorkloadContainerAutoProtectionIntent
		return ret
	}).(AzureWorkloadContainerAutoProtectionIntentOutput)
}

// Type of backup management for the backed up item.
func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ItemId
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadContainerAutoProtectionIntent'.
func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) ProtectionIntentItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectionIntentItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure workload specific protection intent item.
type AzureWorkloadContainerAutoProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadContainerAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// Azure workload specific protection intent item.
type AzureWorkloadContainerAutoProtectionIntentResponseOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerAutoProtectionIntentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerAutoProtectionIntentResponse)(nil)).Elem()
}

func (o AzureWorkloadContainerAutoProtectionIntentResponseOutput) ToAzureWorkloadContainerAutoProtectionIntentResponseOutput() AzureWorkloadContainerAutoProtectionIntentResponseOutput {
	return o
}

func (o AzureWorkloadContainerAutoProtectionIntentResponseOutput) ToAzureWorkloadContainerAutoProtectionIntentResponseOutputWithContext(ctx context.Context) AzureWorkloadContainerAutoProtectionIntentResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureWorkloadContainerAutoProtectionIntentResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntentResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadContainerAutoProtectionIntentResponseOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntentResponse) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadContainerAutoProtectionIntentResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntentResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadContainerAutoProtectionIntent'.
func (o AzureWorkloadContainerAutoProtectionIntentResponseOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntentResponse) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadContainerAutoProtectionIntentResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntentResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadContainerAutoProtectionIntentResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntentResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Extended information of the container.
type AzureWorkloadContainerExtendedInfo struct {
	// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
	HostServerName *string `pulumi:"hostServerName"`
	// Inquiry Status for the container.
	InquiryInfo *InquiryInfo `pulumi:"inquiryInfo"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfo `pulumi:"nodesList"`
}

// AzureWorkloadContainerExtendedInfoInput is an input type that accepts AzureWorkloadContainerExtendedInfoArgs and AzureWorkloadContainerExtendedInfoOutput values.
// You can construct a concrete instance of `AzureWorkloadContainerExtendedInfoInput` via:
//
//	AzureWorkloadContainerExtendedInfoArgs{...}
type AzureWorkloadContainerExtendedInfoInput interface {
	pulumi.Input

	ToAzureWorkloadContainerExtendedInfoOutput() AzureWorkloadContainerExtendedInfoOutput
	ToAzureWorkloadContainerExtendedInfoOutputWithContext(context.Context) AzureWorkloadContainerExtendedInfoOutput
}

// Extended information of the container.
type AzureWorkloadContainerExtendedInfoArgs struct {
	// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
	HostServerName pulumi.StringPtrInput `pulumi:"hostServerName"`
	// Inquiry Status for the container.
	InquiryInfo InquiryInfoPtrInput `pulumi:"inquiryInfo"`
	// List of the nodes in case of distributed container.
	NodesList DistributedNodesInfoArrayInput `pulumi:"nodesList"`
}

func (AzureWorkloadContainerExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerExtendedInfo)(nil)).Elem()
}

func (i AzureWorkloadContainerExtendedInfoArgs) ToAzureWorkloadContainerExtendedInfoOutput() AzureWorkloadContainerExtendedInfoOutput {
	return i.ToAzureWorkloadContainerExtendedInfoOutputWithContext(context.Background())
}

func (i AzureWorkloadContainerExtendedInfoArgs) ToAzureWorkloadContainerExtendedInfoOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerExtendedInfoOutput)
}

func (i AzureWorkloadContainerExtendedInfoArgs) ToAzureWorkloadContainerExtendedInfoPtrOutput() AzureWorkloadContainerExtendedInfoPtrOutput {
	return i.ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i AzureWorkloadContainerExtendedInfoArgs) ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerExtendedInfoOutput).ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(ctx)
}

// AzureWorkloadContainerExtendedInfoPtrInput is an input type that accepts AzureWorkloadContainerExtendedInfoArgs, AzureWorkloadContainerExtendedInfoPtr and AzureWorkloadContainerExtendedInfoPtrOutput values.
// You can construct a concrete instance of `AzureWorkloadContainerExtendedInfoPtrInput` via:
//
//	        AzureWorkloadContainerExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type AzureWorkloadContainerExtendedInfoPtrInput interface {
	pulumi.Input

	ToAzureWorkloadContainerExtendedInfoPtrOutput() AzureWorkloadContainerExtendedInfoPtrOutput
	ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(context.Context) AzureWorkloadContainerExtendedInfoPtrOutput
}

type azureWorkloadContainerExtendedInfoPtrType AzureWorkloadContainerExtendedInfoArgs

func AzureWorkloadContainerExtendedInfoPtr(v *AzureWorkloadContainerExtendedInfoArgs) AzureWorkloadContainerExtendedInfoPtrInput {
	return (*azureWorkloadContainerExtendedInfoPtrType)(v)
}

func (*azureWorkloadContainerExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadContainerExtendedInfo)(nil)).Elem()
}

func (i *azureWorkloadContainerExtendedInfoPtrType) ToAzureWorkloadContainerExtendedInfoPtrOutput() AzureWorkloadContainerExtendedInfoPtrOutput {
	return i.ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *azureWorkloadContainerExtendedInfoPtrType) ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Extended information of the container.
type AzureWorkloadContainerExtendedInfoOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerExtendedInfo)(nil)).Elem()
}

func (o AzureWorkloadContainerExtendedInfoOutput) ToAzureWorkloadContainerExtendedInfoOutput() AzureWorkloadContainerExtendedInfoOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoOutput) ToAzureWorkloadContainerExtendedInfoOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoOutput) ToAzureWorkloadContainerExtendedInfoPtrOutput() AzureWorkloadContainerExtendedInfoPtrOutput {
	return o.ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (o AzureWorkloadContainerExtendedInfoOutput) ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureWorkloadContainerExtendedInfo) *AzureWorkloadContainerExtendedInfo {
		return &v
	}).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoOutput) HostServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerExtendedInfo) *string { return v.HostServerName }).(pulumi.StringPtrOutput)
}

// Inquiry Status for the container.
func (o AzureWorkloadContainerExtendedInfoOutput) InquiryInfo() InquiryInfoPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerExtendedInfo) *InquiryInfo { return v.InquiryInfo }).(InquiryInfoPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v AzureWorkloadContainerExtendedInfo) []DistributedNodesInfo { return v.NodesList }).(DistributedNodesInfoArrayOutput)
}

type AzureWorkloadContainerExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadContainerExtendedInfo)(nil)).Elem()
}

func (o AzureWorkloadContainerExtendedInfoPtrOutput) ToAzureWorkloadContainerExtendedInfoPtrOutput() AzureWorkloadContainerExtendedInfoPtrOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoPtrOutput) ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoPtrOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoPtrOutput) Elem() AzureWorkloadContainerExtendedInfoOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfo) AzureWorkloadContainerExtendedInfo {
		if v != nil {
			return *v
		}
		var ret AzureWorkloadContainerExtendedInfo
		return ret
	}).(AzureWorkloadContainerExtendedInfoOutput)
}

// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoPtrOutput) HostServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.HostServerName
	}).(pulumi.StringPtrOutput)
}

// Inquiry Status for the container.
func (o AzureWorkloadContainerExtendedInfoPtrOutput) InquiryInfo() InquiryInfoPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfo) *InquiryInfo {
		if v == nil {
			return nil
		}
		return v.InquiryInfo
	}).(InquiryInfoPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoPtrOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfo) []DistributedNodesInfo {
		if v == nil {
			return nil
		}
		return v.NodesList
	}).(DistributedNodesInfoArrayOutput)
}

// Extended information of the container.
type AzureWorkloadContainerExtendedInfoResponse struct {
	// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
	HostServerName *string `pulumi:"hostServerName"`
	// Inquiry Status for the container.
	InquiryInfo *InquiryInfoResponse `pulumi:"inquiryInfo"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfoResponse `pulumi:"nodesList"`
}

// Extended information of the container.
type AzureWorkloadContainerExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerExtendedInfoResponse)(nil)).Elem()
}

func (o AzureWorkloadContainerExtendedInfoResponseOutput) ToAzureWorkloadContainerExtendedInfoResponseOutput() AzureWorkloadContainerExtendedInfoResponseOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoResponseOutput) ToAzureWorkloadContainerExtendedInfoResponseOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoResponseOutput {
	return o
}

// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoResponseOutput) HostServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerExtendedInfoResponse) *string { return v.HostServerName }).(pulumi.StringPtrOutput)
}

// Inquiry Status for the container.
func (o AzureWorkloadContainerExtendedInfoResponseOutput) InquiryInfo() InquiryInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerExtendedInfoResponse) *InquiryInfoResponse { return v.InquiryInfo }).(InquiryInfoResponsePtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoResponseOutput) NodesList() DistributedNodesInfoResponseArrayOutput {
	return o.ApplyT(func(v AzureWorkloadContainerExtendedInfoResponse) []DistributedNodesInfoResponse { return v.NodesList }).(DistributedNodesInfoResponseArrayOutput)
}

type AzureWorkloadContainerExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadContainerExtendedInfoResponse)(nil)).Elem()
}

func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) ToAzureWorkloadContainerExtendedInfoResponsePtrOutput() AzureWorkloadContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) ToAzureWorkloadContainerExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) Elem() AzureWorkloadContainerExtendedInfoResponseOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfoResponse) AzureWorkloadContainerExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret AzureWorkloadContainerExtendedInfoResponse
		return ret
	}).(AzureWorkloadContainerExtendedInfoResponseOutput)
}

// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) HostServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostServerName
	}).(pulumi.StringPtrOutput)
}

// Inquiry Status for the container.
func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) InquiryInfo() InquiryInfoResponsePtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfoResponse) *InquiryInfoResponse {
		if v == nil {
			return nil
		}
		return v.InquiryInfo
	}).(InquiryInfoResponsePtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) NodesList() DistributedNodesInfoResponseArrayOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfoResponse) []DistributedNodesInfoResponse {
		if v == nil {
			return nil
		}
		return v.NodesList
	}).(DistributedNodesInfoResponseArrayOutput)
}

// Container for the workloads running inside Azure Compute or Classic Compute.
type AzureWorkloadContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureWorkloadContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// Container for the workloads running inside Azure Compute or Classic Compute.
type AzureWorkloadContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerResponse)(nil)).Elem()
}

func (o AzureWorkloadContainerResponseOutput) ToAzureWorkloadContainerResponseOutput() AzureWorkloadContainerResponseOutput {
	return o
}

func (o AzureWorkloadContainerResponseOutput) ToAzureWorkloadContainerResponseOutputWithContext(ctx context.Context) AzureWorkloadContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureWorkloadContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureWorkloadContainer'.
func (o AzureWorkloadContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Additional details of a workload container.
func (o AzureWorkloadContainerResponseOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *AzureWorkloadContainerExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoResponsePtrOutput)
}

// Friendly name of the container.
func (o AzureWorkloadContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureWorkloadContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureWorkloadContainerResponseOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureWorkloadContainerResponseOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.OperationType }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureWorkloadContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureWorkloadContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureWorkloadContainerResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureWorkloadContainerResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

// Azure Workload SQL Auto Protection intent item.
type AzureWorkloadSQLAutoProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadSQLAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload item type of the item for which intent is to be set
	WorkloadItemType *string `pulumi:"workloadItemType"`
}

// AzureWorkloadSQLAutoProtectionIntentInput is an input type that accepts AzureWorkloadSQLAutoProtectionIntentArgs and AzureWorkloadSQLAutoProtectionIntentOutput values.
// You can construct a concrete instance of `AzureWorkloadSQLAutoProtectionIntentInput` via:
//
//	AzureWorkloadSQLAutoProtectionIntentArgs{...}
type AzureWorkloadSQLAutoProtectionIntentInput interface {
	pulumi.Input

	ToAzureWorkloadSQLAutoProtectionIntentOutput() AzureWorkloadSQLAutoProtectionIntentOutput
	ToAzureWorkloadSQLAutoProtectionIntentOutputWithContext(context.Context) AzureWorkloadSQLAutoProtectionIntentOutput
}

// Azure Workload SQL Auto Protection intent item.
type AzureWorkloadSQLAutoProtectionIntentArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId pulumi.StringPtrInput `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadSQLAutoProtectionIntent'.
	ProtectionIntentItemType pulumi.StringInput `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Workload item type of the item for which intent is to be set
	WorkloadItemType pulumi.StringPtrInput `pulumi:"workloadItemType"`
}

func (AzureWorkloadSQLAutoProtectionIntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadSQLAutoProtectionIntent)(nil)).Elem()
}

func (i AzureWorkloadSQLAutoProtectionIntentArgs) ToAzureWorkloadSQLAutoProtectionIntentOutput() AzureWorkloadSQLAutoProtectionIntentOutput {
	return i.ToAzureWorkloadSQLAutoProtectionIntentOutputWithContext(context.Background())
}

func (i AzureWorkloadSQLAutoProtectionIntentArgs) ToAzureWorkloadSQLAutoProtectionIntentOutputWithContext(ctx context.Context) AzureWorkloadSQLAutoProtectionIntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadSQLAutoProtectionIntentOutput)
}

func (i AzureWorkloadSQLAutoProtectionIntentArgs) ToAzureWorkloadSQLAutoProtectionIntentPtrOutput() AzureWorkloadSQLAutoProtectionIntentPtrOutput {
	return i.ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (i AzureWorkloadSQLAutoProtectionIntentArgs) ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadSQLAutoProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadSQLAutoProtectionIntentOutput).ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(ctx)
}

// AzureWorkloadSQLAutoProtectionIntentPtrInput is an input type that accepts AzureWorkloadSQLAutoProtectionIntentArgs, AzureWorkloadSQLAutoProtectionIntentPtr and AzureWorkloadSQLAutoProtectionIntentPtrOutput values.
// You can construct a concrete instance of `AzureWorkloadSQLAutoProtectionIntentPtrInput` via:
//
//	        AzureWorkloadSQLAutoProtectionIntentArgs{...}
//
//	or:
//
//	        nil
type AzureWorkloadSQLAutoProtectionIntentPtrInput interface {
	pulumi.Input

	ToAzureWorkloadSQLAutoProtectionIntentPtrOutput() AzureWorkloadSQLAutoProtectionIntentPtrOutput
	ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(context.Context) AzureWorkloadSQLAutoProtectionIntentPtrOutput
}

type azureWorkloadSQLAutoProtectionIntentPtrType AzureWorkloadSQLAutoProtectionIntentArgs

func AzureWorkloadSQLAutoProtectionIntentPtr(v *AzureWorkloadSQLAutoProtectionIntentArgs) AzureWorkloadSQLAutoProtectionIntentPtrInput {
	return (*azureWorkloadSQLAutoProtectionIntentPtrType)(v)
}

func (*azureWorkloadSQLAutoProtectionIntentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadSQLAutoProtectionIntent)(nil)).Elem()
}

func (i *azureWorkloadSQLAutoProtectionIntentPtrType) ToAzureWorkloadSQLAutoProtectionIntentPtrOutput() AzureWorkloadSQLAutoProtectionIntentPtrOutput {
	return i.ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (i *azureWorkloadSQLAutoProtectionIntentPtrType) ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadSQLAutoProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadSQLAutoProtectionIntentPtrOutput)
}

// Azure Workload SQL Auto Protection intent item.
type AzureWorkloadSQLAutoProtectionIntentOutput struct{ *pulumi.OutputState }

func (AzureWorkloadSQLAutoProtectionIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadSQLAutoProtectionIntent)(nil)).Elem()
}

func (o AzureWorkloadSQLAutoProtectionIntentOutput) ToAzureWorkloadSQLAutoProtectionIntentOutput() AzureWorkloadSQLAutoProtectionIntentOutput {
	return o
}

func (o AzureWorkloadSQLAutoProtectionIntentOutput) ToAzureWorkloadSQLAutoProtectionIntentOutputWithContext(ctx context.Context) AzureWorkloadSQLAutoProtectionIntentOutput {
	return o
}

func (o AzureWorkloadSQLAutoProtectionIntentOutput) ToAzureWorkloadSQLAutoProtectionIntentPtrOutput() AzureWorkloadSQLAutoProtectionIntentPtrOutput {
	return o.ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (o AzureWorkloadSQLAutoProtectionIntentOutput) ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadSQLAutoProtectionIntentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureWorkloadSQLAutoProtectionIntent) *AzureWorkloadSQLAutoProtectionIntent {
		return &v
	}).(AzureWorkloadSQLAutoProtectionIntentPtrOutput)
}

// Type of backup management for the backed up item.
func (o AzureWorkloadSQLAutoProtectionIntentOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntent) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadSQLAutoProtectionIntentOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntent) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadSQLAutoProtectionIntentOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntent) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadSQLAutoProtectionIntent'.
func (o AzureWorkloadSQLAutoProtectionIntentOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntent) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadSQLAutoProtectionIntentOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntent) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadSQLAutoProtectionIntentOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntent) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload item type of the item for which intent is to be set
func (o AzureWorkloadSQLAutoProtectionIntentOutput) WorkloadItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntent) *string { return v.WorkloadItemType }).(pulumi.StringPtrOutput)
}

type AzureWorkloadSQLAutoProtectionIntentPtrOutput struct{ *pulumi.OutputState }

func (AzureWorkloadSQLAutoProtectionIntentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadSQLAutoProtectionIntent)(nil)).Elem()
}

func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) ToAzureWorkloadSQLAutoProtectionIntentPtrOutput() AzureWorkloadSQLAutoProtectionIntentPtrOutput {
	return o
}

func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadSQLAutoProtectionIntentPtrOutput {
	return o
}

func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) Elem() AzureWorkloadSQLAutoProtectionIntentOutput {
	return o.ApplyT(func(v *AzureWorkloadSQLAutoProtectionIntent) AzureWorkloadSQLAutoProtectionIntent {
		if v != nil {
			return *v
		}
		var ret AzureWorkloadSQLAutoProtectionIntent
		return ret
	}).(AzureWorkloadSQLAutoProtectionIntentOutput)
}

// Type of backup management for the backed up item.
func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadSQLAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadSQLAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ItemId
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadSQLAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadSQLAutoProtectionIntent'.
func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) ProtectionIntentItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadSQLAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectionIntentItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadSQLAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadSQLAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Workload item type of the item for which intent is to be set
func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) WorkloadItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadSQLAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadItemType
	}).(pulumi.StringPtrOutput)
}

// Azure Workload SQL Auto Protection intent item.
type AzureWorkloadSQLAutoProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadSQLAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload item type of the item for which intent is to be set
	WorkloadItemType *string `pulumi:"workloadItemType"`
}

// Azure Workload SQL Auto Protection intent item.
type AzureWorkloadSQLAutoProtectionIntentResponseOutput struct{ *pulumi.OutputState }

func (AzureWorkloadSQLAutoProtectionIntentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadSQLAutoProtectionIntentResponse)(nil)).Elem()
}

func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) ToAzureWorkloadSQLAutoProtectionIntentResponseOutput() AzureWorkloadSQLAutoProtectionIntentResponseOutput {
	return o
}

func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) ToAzureWorkloadSQLAutoProtectionIntentResponseOutputWithContext(ctx context.Context) AzureWorkloadSQLAutoProtectionIntentResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntentResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntentResponse) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntentResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadSQLAutoProtectionIntent'.
func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntentResponse) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntentResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntentResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload item type of the item for which intent is to be set
func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) WorkloadItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntentResponse) *string { return v.WorkloadItemType }).(pulumi.StringPtrOutput)
}

// Settings for classic alerts
type ClassicAlertSettings struct {
	AlertsForCriticalOperations *string `pulumi:"alertsForCriticalOperations"`
}

// ClassicAlertSettingsInput is an input type that accepts ClassicAlertSettingsArgs and ClassicAlertSettingsOutput values.
// You can construct a concrete instance of `ClassicAlertSettingsInput` via:
//
//	ClassicAlertSettingsArgs{...}
type ClassicAlertSettingsInput interface {
	pulumi.Input

	ToClassicAlertSettingsOutput() ClassicAlertSettingsOutput
	ToClassicAlertSettingsOutputWithContext(context.Context) ClassicAlertSettingsOutput
}

// Settings for classic alerts
type ClassicAlertSettingsArgs struct {
	AlertsForCriticalOperations pulumi.StringPtrInput `pulumi:"alertsForCriticalOperations"`
}

func (ClassicAlertSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassicAlertSettings)(nil)).Elem()
}

func (i ClassicAlertSettingsArgs) ToClassicAlertSettingsOutput() ClassicAlertSettingsOutput {
	return i.ToClassicAlertSettingsOutputWithContext(context.Background())
}

func (i ClassicAlertSettingsArgs) ToClassicAlertSettingsOutputWithContext(ctx context.Context) ClassicAlertSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassicAlertSettingsOutput)
}

func (i ClassicAlertSettingsArgs) ToClassicAlertSettingsPtrOutput() ClassicAlertSettingsPtrOutput {
	return i.ToClassicAlertSettingsPtrOutputWithContext(context.Background())
}

func (i ClassicAlertSettingsArgs) ToClassicAlertSettingsPtrOutputWithContext(ctx context.Context) ClassicAlertSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassicAlertSettingsOutput).ToClassicAlertSettingsPtrOutputWithContext(ctx)
}

// ClassicAlertSettingsPtrInput is an input type that accepts ClassicAlertSettingsArgs, ClassicAlertSettingsPtr and ClassicAlertSettingsPtrOutput values.
// You can construct a concrete instance of `ClassicAlertSettingsPtrInput` via:
//
//	        ClassicAlertSettingsArgs{...}
//
//	or:
//
//	        nil
type ClassicAlertSettingsPtrInput interface {
	pulumi.Input

	ToClassicAlertSettingsPtrOutput() ClassicAlertSettingsPtrOutput
	ToClassicAlertSettingsPtrOutputWithContext(context.Context) ClassicAlertSettingsPtrOutput
}

type classicAlertSettingsPtrType ClassicAlertSettingsArgs

func ClassicAlertSettingsPtr(v *ClassicAlertSettingsArgs) ClassicAlertSettingsPtrInput {
	return (*classicAlertSettingsPtrType)(v)
}

func (*classicAlertSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassicAlertSettings)(nil)).Elem()
}

func (i *classicAlertSettingsPtrType) ToClassicAlertSettingsPtrOutput() ClassicAlertSettingsPtrOutput {
	return i.ToClassicAlertSettingsPtrOutputWithContext(context.Background())
}

func (i *classicAlertSettingsPtrType) ToClassicAlertSettingsPtrOutputWithContext(ctx context.Context) ClassicAlertSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassicAlertSettingsPtrOutput)
}

// Settings for classic alerts
type ClassicAlertSettingsOutput struct{ *pulumi.OutputState }

func (ClassicAlertSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassicAlertSettings)(nil)).Elem()
}

func (o ClassicAlertSettingsOutput) ToClassicAlertSettingsOutput() ClassicAlertSettingsOutput {
	return o
}

func (o ClassicAlertSettingsOutput) ToClassicAlertSettingsOutputWithContext(ctx context.Context) ClassicAlertSettingsOutput {
	return o
}

func (o ClassicAlertSettingsOutput) ToClassicAlertSettingsPtrOutput() ClassicAlertSettingsPtrOutput {
	return o.ToClassicAlertSettingsPtrOutputWithContext(context.Background())
}

func (o ClassicAlertSettingsOutput) ToClassicAlertSettingsPtrOutputWithContext(ctx context.Context) ClassicAlertSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClassicAlertSettings) *ClassicAlertSettings {
		return &v
	}).(ClassicAlertSettingsPtrOutput)
}

func (o ClassicAlertSettingsOutput) AlertsForCriticalOperations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClassicAlertSettings) *string { return v.AlertsForCriticalOperations }).(pulumi.StringPtrOutput)
}

type ClassicAlertSettingsPtrOutput struct{ *pulumi.OutputState }

func (ClassicAlertSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassicAlertSettings)(nil)).Elem()
}

func (o ClassicAlertSettingsPtrOutput) ToClassicAlertSettingsPtrOutput() ClassicAlertSettingsPtrOutput {
	return o
}

func (o ClassicAlertSettingsPtrOutput) ToClassicAlertSettingsPtrOutputWithContext(ctx context.Context) ClassicAlertSettingsPtrOutput {
	return o
}

func (o ClassicAlertSettingsPtrOutput) Elem() ClassicAlertSettingsOutput {
	return o.ApplyT(func(v *ClassicAlertSettings) ClassicAlertSettings {
		if v != nil {
			return *v
		}
		var ret ClassicAlertSettings
		return ret
	}).(ClassicAlertSettingsOutput)
}

func (o ClassicAlertSettingsPtrOutput) AlertsForCriticalOperations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClassicAlertSettings) *string {
		if v == nil {
			return nil
		}
		return v.AlertsForCriticalOperations
	}).(pulumi.StringPtrOutput)
}

// Settings for classic alerts
type ClassicAlertSettingsResponse struct {
	AlertsForCriticalOperations *string `pulumi:"alertsForCriticalOperations"`
}

// Settings for classic alerts
type ClassicAlertSettingsResponseOutput struct{ *pulumi.OutputState }

func (ClassicAlertSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassicAlertSettingsResponse)(nil)).Elem()
}

func (o ClassicAlertSettingsResponseOutput) ToClassicAlertSettingsResponseOutput() ClassicAlertSettingsResponseOutput {
	return o
}

func (o ClassicAlertSettingsResponseOutput) ToClassicAlertSettingsResponseOutputWithContext(ctx context.Context) ClassicAlertSettingsResponseOutput {
	return o
}

func (o ClassicAlertSettingsResponseOutput) AlertsForCriticalOperations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClassicAlertSettingsResponse) *string { return v.AlertsForCriticalOperations }).(pulumi.StringPtrOutput)
}

type ClassicAlertSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ClassicAlertSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassicAlertSettingsResponse)(nil)).Elem()
}

func (o ClassicAlertSettingsResponsePtrOutput) ToClassicAlertSettingsResponsePtrOutput() ClassicAlertSettingsResponsePtrOutput {
	return o
}

func (o ClassicAlertSettingsResponsePtrOutput) ToClassicAlertSettingsResponsePtrOutputWithContext(ctx context.Context) ClassicAlertSettingsResponsePtrOutput {
	return o
}

func (o ClassicAlertSettingsResponsePtrOutput) Elem() ClassicAlertSettingsResponseOutput {
	return o.ApplyT(func(v *ClassicAlertSettingsResponse) ClassicAlertSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ClassicAlertSettingsResponse
		return ret
	}).(ClassicAlertSettingsResponseOutput)
}

func (o ClassicAlertSettingsResponsePtrOutput) AlertsForCriticalOperations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClassicAlertSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlertsForCriticalOperations
	}).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
type CmkKekIdentity struct {
	// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
	UseSystemAssignedIdentity *bool `pulumi:"useSystemAssignedIdentity"`
	// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
	UserAssignedIdentity *string `pulumi:"userAssignedIdentity"`
}

// CmkKekIdentityInput is an input type that accepts CmkKekIdentityArgs and CmkKekIdentityOutput values.
// You can construct a concrete instance of `CmkKekIdentityInput` via:
//
//	CmkKekIdentityArgs{...}
type CmkKekIdentityInput interface {
	pulumi.Input

	ToCmkKekIdentityOutput() CmkKekIdentityOutput
	ToCmkKekIdentityOutputWithContext(context.Context) CmkKekIdentityOutput
}

// The details of the identity used for CMK
type CmkKekIdentityArgs struct {
	// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
	UseSystemAssignedIdentity pulumi.BoolPtrInput `pulumi:"useSystemAssignedIdentity"`
	// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
	UserAssignedIdentity pulumi.StringPtrInput `pulumi:"userAssignedIdentity"`
}

func (CmkKekIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKekIdentity)(nil)).Elem()
}

func (i CmkKekIdentityArgs) ToCmkKekIdentityOutput() CmkKekIdentityOutput {
	return i.ToCmkKekIdentityOutputWithContext(context.Background())
}

func (i CmkKekIdentityArgs) ToCmkKekIdentityOutputWithContext(ctx context.Context) CmkKekIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKekIdentityOutput)
}

func (i CmkKekIdentityArgs) ToCmkKekIdentityPtrOutput() CmkKekIdentityPtrOutput {
	return i.ToCmkKekIdentityPtrOutputWithContext(context.Background())
}

func (i CmkKekIdentityArgs) ToCmkKekIdentityPtrOutputWithContext(ctx context.Context) CmkKekIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKekIdentityOutput).ToCmkKekIdentityPtrOutputWithContext(ctx)
}

// CmkKekIdentityPtrInput is an input type that accepts CmkKekIdentityArgs, CmkKekIdentityPtr and CmkKekIdentityPtrOutput values.
// You can construct a concrete instance of `CmkKekIdentityPtrInput` via:
//
//	        CmkKekIdentityArgs{...}
//
//	or:
//
//	        nil
type CmkKekIdentityPtrInput interface {
	pulumi.Input

	ToCmkKekIdentityPtrOutput() CmkKekIdentityPtrOutput
	ToCmkKekIdentityPtrOutputWithContext(context.Context) CmkKekIdentityPtrOutput
}

type cmkKekIdentityPtrType CmkKekIdentityArgs

func CmkKekIdentityPtr(v *CmkKekIdentityArgs) CmkKekIdentityPtrInput {
	return (*cmkKekIdentityPtrType)(v)
}

func (*cmkKekIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKekIdentity)(nil)).Elem()
}

func (i *cmkKekIdentityPtrType) ToCmkKekIdentityPtrOutput() CmkKekIdentityPtrOutput {
	return i.ToCmkKekIdentityPtrOutputWithContext(context.Background())
}

func (i *cmkKekIdentityPtrType) ToCmkKekIdentityPtrOutputWithContext(ctx context.Context) CmkKekIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKekIdentityPtrOutput)
}

// The details of the identity used for CMK
type CmkKekIdentityOutput struct{ *pulumi.OutputState }

func (CmkKekIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKekIdentity)(nil)).Elem()
}

func (o CmkKekIdentityOutput) ToCmkKekIdentityOutput() CmkKekIdentityOutput {
	return o
}

func (o CmkKekIdentityOutput) ToCmkKekIdentityOutputWithContext(ctx context.Context) CmkKekIdentityOutput {
	return o
}

func (o CmkKekIdentityOutput) ToCmkKekIdentityPtrOutput() CmkKekIdentityPtrOutput {
	return o.ToCmkKekIdentityPtrOutputWithContext(context.Background())
}

func (o CmkKekIdentityOutput) ToCmkKekIdentityPtrOutputWithContext(ctx context.Context) CmkKekIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CmkKekIdentity) *CmkKekIdentity {
		return &v
	}).(CmkKekIdentityPtrOutput)
}

// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
func (o CmkKekIdentityOutput) UseSystemAssignedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CmkKekIdentity) *bool { return v.UseSystemAssignedIdentity }).(pulumi.BoolPtrOutput)
}

// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
func (o CmkKekIdentityOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CmkKekIdentity) *string { return v.UserAssignedIdentity }).(pulumi.StringPtrOutput)
}

type CmkKekIdentityPtrOutput struct{ *pulumi.OutputState }

func (CmkKekIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKekIdentity)(nil)).Elem()
}

func (o CmkKekIdentityPtrOutput) ToCmkKekIdentityPtrOutput() CmkKekIdentityPtrOutput {
	return o
}

func (o CmkKekIdentityPtrOutput) ToCmkKekIdentityPtrOutputWithContext(ctx context.Context) CmkKekIdentityPtrOutput {
	return o
}

func (o CmkKekIdentityPtrOutput) Elem() CmkKekIdentityOutput {
	return o.ApplyT(func(v *CmkKekIdentity) CmkKekIdentity {
		if v != nil {
			return *v
		}
		var ret CmkKekIdentity
		return ret
	}).(CmkKekIdentityOutput)
}

// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
func (o CmkKekIdentityPtrOutput) UseSystemAssignedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CmkKekIdentity) *bool {
		if v == nil {
			return nil
		}
		return v.UseSystemAssignedIdentity
	}).(pulumi.BoolPtrOutput)
}

// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
func (o CmkKekIdentityPtrOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CmkKekIdentity) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
type CmkKekIdentityResponse struct {
	// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
	UseSystemAssignedIdentity *bool `pulumi:"useSystemAssignedIdentity"`
	// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
	UserAssignedIdentity *string `pulumi:"userAssignedIdentity"`
}

// The details of the identity used for CMK
type CmkKekIdentityResponseOutput struct{ *pulumi.OutputState }

func (CmkKekIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKekIdentityResponse)(nil)).Elem()
}

func (o CmkKekIdentityResponseOutput) ToCmkKekIdentityResponseOutput() CmkKekIdentityResponseOutput {
	return o
}

func (o CmkKekIdentityResponseOutput) ToCmkKekIdentityResponseOutputWithContext(ctx context.Context) CmkKekIdentityResponseOutput {
	return o
}

// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
func (o CmkKekIdentityResponseOutput) UseSystemAssignedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CmkKekIdentityResponse) *bool { return v.UseSystemAssignedIdentity }).(pulumi.BoolPtrOutput)
}

// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
func (o CmkKekIdentityResponseOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CmkKekIdentityResponse) *string { return v.UserAssignedIdentity }).(pulumi.StringPtrOutput)
}

type CmkKekIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (CmkKekIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKekIdentityResponse)(nil)).Elem()
}

func (o CmkKekIdentityResponsePtrOutput) ToCmkKekIdentityResponsePtrOutput() CmkKekIdentityResponsePtrOutput {
	return o
}

func (o CmkKekIdentityResponsePtrOutput) ToCmkKekIdentityResponsePtrOutputWithContext(ctx context.Context) CmkKekIdentityResponsePtrOutput {
	return o
}

func (o CmkKekIdentityResponsePtrOutput) Elem() CmkKekIdentityResponseOutput {
	return o.ApplyT(func(v *CmkKekIdentityResponse) CmkKekIdentityResponse {
		if v != nil {
			return *v
		}
		var ret CmkKekIdentityResponse
		return ret
	}).(CmkKekIdentityResponseOutput)
}

// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
func (o CmkKekIdentityResponsePtrOutput) UseSystemAssignedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CmkKekIdentityResponse) *bool {
		if v == nil {
			return nil
		}
		return v.UseSystemAssignedIdentity
	}).(pulumi.BoolPtrOutput)
}

// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
func (o CmkKekIdentityResponsePtrOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CmkKekIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

// The properties of the Key Vault which hosts CMK
type CmkKeyVaultProperties struct {
	// The key uri of the Customer Managed Key
	KeyUri *string `pulumi:"keyUri"`
}

// CmkKeyVaultPropertiesInput is an input type that accepts CmkKeyVaultPropertiesArgs and CmkKeyVaultPropertiesOutput values.
// You can construct a concrete instance of `CmkKeyVaultPropertiesInput` via:
//
//	CmkKeyVaultPropertiesArgs{...}
type CmkKeyVaultPropertiesInput interface {
	pulumi.Input

	ToCmkKeyVaultPropertiesOutput() CmkKeyVaultPropertiesOutput
	ToCmkKeyVaultPropertiesOutputWithContext(context.Context) CmkKeyVaultPropertiesOutput
}

// The properties of the Key Vault which hosts CMK
type CmkKeyVaultPropertiesArgs struct {
	// The key uri of the Customer Managed Key
	KeyUri pulumi.StringPtrInput `pulumi:"keyUri"`
}

func (CmkKeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKeyVaultProperties)(nil)).Elem()
}

func (i CmkKeyVaultPropertiesArgs) ToCmkKeyVaultPropertiesOutput() CmkKeyVaultPropertiesOutput {
	return i.ToCmkKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i CmkKeyVaultPropertiesArgs) ToCmkKeyVaultPropertiesOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKeyVaultPropertiesOutput)
}

func (i CmkKeyVaultPropertiesArgs) ToCmkKeyVaultPropertiesPtrOutput() CmkKeyVaultPropertiesPtrOutput {
	return i.ToCmkKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i CmkKeyVaultPropertiesArgs) ToCmkKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKeyVaultPropertiesOutput).ToCmkKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// CmkKeyVaultPropertiesPtrInput is an input type that accepts CmkKeyVaultPropertiesArgs, CmkKeyVaultPropertiesPtr and CmkKeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `CmkKeyVaultPropertiesPtrInput` via:
//
//	        CmkKeyVaultPropertiesArgs{...}
//
//	or:
//
//	        nil
type CmkKeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToCmkKeyVaultPropertiesPtrOutput() CmkKeyVaultPropertiesPtrOutput
	ToCmkKeyVaultPropertiesPtrOutputWithContext(context.Context) CmkKeyVaultPropertiesPtrOutput
}

type cmkKeyVaultPropertiesPtrType CmkKeyVaultPropertiesArgs

func CmkKeyVaultPropertiesPtr(v *CmkKeyVaultPropertiesArgs) CmkKeyVaultPropertiesPtrInput {
	return (*cmkKeyVaultPropertiesPtrType)(v)
}

func (*cmkKeyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKeyVaultProperties)(nil)).Elem()
}

func (i *cmkKeyVaultPropertiesPtrType) ToCmkKeyVaultPropertiesPtrOutput() CmkKeyVaultPropertiesPtrOutput {
	return i.ToCmkKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *cmkKeyVaultPropertiesPtrType) ToCmkKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKeyVaultPropertiesPtrOutput)
}

// The properties of the Key Vault which hosts CMK
type CmkKeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (CmkKeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKeyVaultProperties)(nil)).Elem()
}

func (o CmkKeyVaultPropertiesOutput) ToCmkKeyVaultPropertiesOutput() CmkKeyVaultPropertiesOutput {
	return o
}

func (o CmkKeyVaultPropertiesOutput) ToCmkKeyVaultPropertiesOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesOutput {
	return o
}

func (o CmkKeyVaultPropertiesOutput) ToCmkKeyVaultPropertiesPtrOutput() CmkKeyVaultPropertiesPtrOutput {
	return o.ToCmkKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o CmkKeyVaultPropertiesOutput) ToCmkKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CmkKeyVaultProperties) *CmkKeyVaultProperties {
		return &v
	}).(CmkKeyVaultPropertiesPtrOutput)
}

// The key uri of the Customer Managed Key
func (o CmkKeyVaultPropertiesOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CmkKeyVaultProperties) *string { return v.KeyUri }).(pulumi.StringPtrOutput)
}

type CmkKeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CmkKeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKeyVaultProperties)(nil)).Elem()
}

func (o CmkKeyVaultPropertiesPtrOutput) ToCmkKeyVaultPropertiesPtrOutput() CmkKeyVaultPropertiesPtrOutput {
	return o
}

func (o CmkKeyVaultPropertiesPtrOutput) ToCmkKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesPtrOutput {
	return o
}

func (o CmkKeyVaultPropertiesPtrOutput) Elem() CmkKeyVaultPropertiesOutput {
	return o.ApplyT(func(v *CmkKeyVaultProperties) CmkKeyVaultProperties {
		if v != nil {
			return *v
		}
		var ret CmkKeyVaultProperties
		return ret
	}).(CmkKeyVaultPropertiesOutput)
}

// The key uri of the Customer Managed Key
func (o CmkKeyVaultPropertiesPtrOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CmkKeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyUri
	}).(pulumi.StringPtrOutput)
}

// The properties of the Key Vault which hosts CMK
type CmkKeyVaultPropertiesResponse struct {
	// The key uri of the Customer Managed Key
	KeyUri *string `pulumi:"keyUri"`
}

// The properties of the Key Vault which hosts CMK
type CmkKeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CmkKeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKeyVaultPropertiesResponse)(nil)).Elem()
}

func (o CmkKeyVaultPropertiesResponseOutput) ToCmkKeyVaultPropertiesResponseOutput() CmkKeyVaultPropertiesResponseOutput {
	return o
}

func (o CmkKeyVaultPropertiesResponseOutput) ToCmkKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesResponseOutput {
	return o
}

// The key uri of the Customer Managed Key
func (o CmkKeyVaultPropertiesResponseOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CmkKeyVaultPropertiesResponse) *string { return v.KeyUri }).(pulumi.StringPtrOutput)
}

type CmkKeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CmkKeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKeyVaultPropertiesResponse)(nil)).Elem()
}

func (o CmkKeyVaultPropertiesResponsePtrOutput) ToCmkKeyVaultPropertiesResponsePtrOutput() CmkKeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o CmkKeyVaultPropertiesResponsePtrOutput) ToCmkKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o CmkKeyVaultPropertiesResponsePtrOutput) Elem() CmkKeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *CmkKeyVaultPropertiesResponse) CmkKeyVaultPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CmkKeyVaultPropertiesResponse
		return ret
	}).(CmkKeyVaultPropertiesResponseOutput)
}

// The key uri of the Customer Managed Key
func (o CmkKeyVaultPropertiesResponsePtrOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CmkKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyUri
	}).(pulumi.StringPtrOutput)
}

// Container identity information
type ContainerIdentityInfo struct {
	// Protection container identity - AAD Tenant
	AadTenantId *string `pulumi:"aadTenantId"`
	// Protection container identity - Audience
	Audience *string `pulumi:"audience"`
	// Protection container identity - AAD Service Principal
	ServicePrincipalClientId *string `pulumi:"servicePrincipalClientId"`
	// Unique name of the container
	UniqueName *string `pulumi:"uniqueName"`
}

// ContainerIdentityInfoInput is an input type that accepts ContainerIdentityInfoArgs and ContainerIdentityInfoOutput values.
// You can construct a concrete instance of `ContainerIdentityInfoInput` via:
//
//	ContainerIdentityInfoArgs{...}
type ContainerIdentityInfoInput interface {
	pulumi.Input

	ToContainerIdentityInfoOutput() ContainerIdentityInfoOutput
	ToContainerIdentityInfoOutputWithContext(context.Context) ContainerIdentityInfoOutput
}

// Container identity information
type ContainerIdentityInfoArgs struct {
	// Protection container identity - AAD Tenant
	AadTenantId pulumi.StringPtrInput `pulumi:"aadTenantId"`
	// Protection container identity - Audience
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// Protection container identity - AAD Service Principal
	ServicePrincipalClientId pulumi.StringPtrInput `pulumi:"servicePrincipalClientId"`
	// Unique name of the container
	UniqueName pulumi.StringPtrInput `pulumi:"uniqueName"`
}

func (ContainerIdentityInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerIdentityInfo)(nil)).Elem()
}

func (i ContainerIdentityInfoArgs) ToContainerIdentityInfoOutput() ContainerIdentityInfoOutput {
	return i.ToContainerIdentityInfoOutputWithContext(context.Background())
}

func (i ContainerIdentityInfoArgs) ToContainerIdentityInfoOutputWithContext(ctx context.Context) ContainerIdentityInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerIdentityInfoOutput)
}

func (i ContainerIdentityInfoArgs) ToContainerIdentityInfoPtrOutput() ContainerIdentityInfoPtrOutput {
	return i.ToContainerIdentityInfoPtrOutputWithContext(context.Background())
}

func (i ContainerIdentityInfoArgs) ToContainerIdentityInfoPtrOutputWithContext(ctx context.Context) ContainerIdentityInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerIdentityInfoOutput).ToContainerIdentityInfoPtrOutputWithContext(ctx)
}

// ContainerIdentityInfoPtrInput is an input type that accepts ContainerIdentityInfoArgs, ContainerIdentityInfoPtr and ContainerIdentityInfoPtrOutput values.
// You can construct a concrete instance of `ContainerIdentityInfoPtrInput` via:
//
//	        ContainerIdentityInfoArgs{...}
//
//	or:
//
//	        nil
type ContainerIdentityInfoPtrInput interface {
	pulumi.Input

	ToContainerIdentityInfoPtrOutput() ContainerIdentityInfoPtrOutput
	ToContainerIdentityInfoPtrOutputWithContext(context.Context) ContainerIdentityInfoPtrOutput
}

type containerIdentityInfoPtrType ContainerIdentityInfoArgs

func ContainerIdentityInfoPtr(v *ContainerIdentityInfoArgs) ContainerIdentityInfoPtrInput {
	return (*containerIdentityInfoPtrType)(v)
}

func (*containerIdentityInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerIdentityInfo)(nil)).Elem()
}

func (i *containerIdentityInfoPtrType) ToContainerIdentityInfoPtrOutput() ContainerIdentityInfoPtrOutput {
	return i.ToContainerIdentityInfoPtrOutputWithContext(context.Background())
}

func (i *containerIdentityInfoPtrType) ToContainerIdentityInfoPtrOutputWithContext(ctx context.Context) ContainerIdentityInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerIdentityInfoPtrOutput)
}

// Container identity information
type ContainerIdentityInfoOutput struct{ *pulumi.OutputState }

func (ContainerIdentityInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerIdentityInfo)(nil)).Elem()
}

func (o ContainerIdentityInfoOutput) ToContainerIdentityInfoOutput() ContainerIdentityInfoOutput {
	return o
}

func (o ContainerIdentityInfoOutput) ToContainerIdentityInfoOutputWithContext(ctx context.Context) ContainerIdentityInfoOutput {
	return o
}

func (o ContainerIdentityInfoOutput) ToContainerIdentityInfoPtrOutput() ContainerIdentityInfoPtrOutput {
	return o.ToContainerIdentityInfoPtrOutputWithContext(context.Background())
}

func (o ContainerIdentityInfoOutput) ToContainerIdentityInfoPtrOutputWithContext(ctx context.Context) ContainerIdentityInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerIdentityInfo) *ContainerIdentityInfo {
		return &v
	}).(ContainerIdentityInfoPtrOutput)
}

// Protection container identity - AAD Tenant
func (o ContainerIdentityInfoOutput) AadTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfo) *string { return v.AadTenantId }).(pulumi.StringPtrOutput)
}

// Protection container identity - Audience
func (o ContainerIdentityInfoOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfo) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// Protection container identity - AAD Service Principal
func (o ContainerIdentityInfoOutput) ServicePrincipalClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfo) *string { return v.ServicePrincipalClientId }).(pulumi.StringPtrOutput)
}

// Unique name of the container
func (o ContainerIdentityInfoOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfo) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

type ContainerIdentityInfoPtrOutput struct{ *pulumi.OutputState }

func (ContainerIdentityInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerIdentityInfo)(nil)).Elem()
}

func (o ContainerIdentityInfoPtrOutput) ToContainerIdentityInfoPtrOutput() ContainerIdentityInfoPtrOutput {
	return o
}

func (o ContainerIdentityInfoPtrOutput) ToContainerIdentityInfoPtrOutputWithContext(ctx context.Context) ContainerIdentityInfoPtrOutput {
	return o
}

func (o ContainerIdentityInfoPtrOutput) Elem() ContainerIdentityInfoOutput {
	return o.ApplyT(func(v *ContainerIdentityInfo) ContainerIdentityInfo {
		if v != nil {
			return *v
		}
		var ret ContainerIdentityInfo
		return ret
	}).(ContainerIdentityInfoOutput)
}

// Protection container identity - AAD Tenant
func (o ContainerIdentityInfoPtrOutput) AadTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.AadTenantId
	}).(pulumi.StringPtrOutput)
}

// Protection container identity - Audience
func (o ContainerIdentityInfoPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// Protection container identity - AAD Service Principal
func (o ContainerIdentityInfoPtrOutput) ServicePrincipalClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.ServicePrincipalClientId
	}).(pulumi.StringPtrOutput)
}

// Unique name of the container
func (o ContainerIdentityInfoPtrOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.UniqueName
	}).(pulumi.StringPtrOutput)
}

// Container identity information
type ContainerIdentityInfoResponse struct {
	// Protection container identity - AAD Tenant
	AadTenantId *string `pulumi:"aadTenantId"`
	// Protection container identity - Audience
	Audience *string `pulumi:"audience"`
	// Protection container identity - AAD Service Principal
	ServicePrincipalClientId *string `pulumi:"servicePrincipalClientId"`
	// Unique name of the container
	UniqueName *string `pulumi:"uniqueName"`
}

// Container identity information
type ContainerIdentityInfoResponseOutput struct{ *pulumi.OutputState }

func (ContainerIdentityInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerIdentityInfoResponse)(nil)).Elem()
}

func (o ContainerIdentityInfoResponseOutput) ToContainerIdentityInfoResponseOutput() ContainerIdentityInfoResponseOutput {
	return o
}

func (o ContainerIdentityInfoResponseOutput) ToContainerIdentityInfoResponseOutputWithContext(ctx context.Context) ContainerIdentityInfoResponseOutput {
	return o
}

// Protection container identity - AAD Tenant
func (o ContainerIdentityInfoResponseOutput) AadTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfoResponse) *string { return v.AadTenantId }).(pulumi.StringPtrOutput)
}

// Protection container identity - Audience
func (o ContainerIdentityInfoResponseOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfoResponse) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// Protection container identity - AAD Service Principal
func (o ContainerIdentityInfoResponseOutput) ServicePrincipalClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfoResponse) *string { return v.ServicePrincipalClientId }).(pulumi.StringPtrOutput)
}

// Unique name of the container
func (o ContainerIdentityInfoResponseOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfoResponse) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

type ContainerIdentityInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerIdentityInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerIdentityInfoResponse)(nil)).Elem()
}

func (o ContainerIdentityInfoResponsePtrOutput) ToContainerIdentityInfoResponsePtrOutput() ContainerIdentityInfoResponsePtrOutput {
	return o
}

func (o ContainerIdentityInfoResponsePtrOutput) ToContainerIdentityInfoResponsePtrOutputWithContext(ctx context.Context) ContainerIdentityInfoResponsePtrOutput {
	return o
}

func (o ContainerIdentityInfoResponsePtrOutput) Elem() ContainerIdentityInfoResponseOutput {
	return o.ApplyT(func(v *ContainerIdentityInfoResponse) ContainerIdentityInfoResponse {
		if v != nil {
			return *v
		}
		var ret ContainerIdentityInfoResponse
		return ret
	}).(ContainerIdentityInfoResponseOutput)
}

// Protection container identity - AAD Tenant
func (o ContainerIdentityInfoResponsePtrOutput) AadTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadTenantId
	}).(pulumi.StringPtrOutput)
}

// Protection container identity - Audience
func (o ContainerIdentityInfoResponsePtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// Protection container identity - AAD Service Principal
func (o ContainerIdentityInfoResponsePtrOutput) ServicePrincipalClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServicePrincipalClientId
	}).(pulumi.StringPtrOutput)
}

// Unique name of the container
func (o ContainerIdentityInfoResponsePtrOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UniqueName
	}).(pulumi.StringPtrOutput)
}

// Common input details for network mapping operation.
type CreateNetworkMappingInputProperties struct {
	// Fabric specific input properties.
	FabricSpecificDetails interface{} `pulumi:"fabricSpecificDetails"`
	// Recovery fabric Name.
	RecoveryFabricName *string `pulumi:"recoveryFabricName"`
	// Recovery network Id.
	RecoveryNetworkId string `pulumi:"recoveryNetworkId"`
}

// CreateNetworkMappingInputPropertiesInput is an input type that accepts CreateNetworkMappingInputPropertiesArgs and CreateNetworkMappingInputPropertiesOutput values.
// You can construct a concrete instance of `CreateNetworkMappingInputPropertiesInput` via:
//
//	CreateNetworkMappingInputPropertiesArgs{...}
type CreateNetworkMappingInputPropertiesInput interface {
	pulumi.Input

	ToCreateNetworkMappingInputPropertiesOutput() CreateNetworkMappingInputPropertiesOutput
	ToCreateNetworkMappingInputPropertiesOutputWithContext(context.Context) CreateNetworkMappingInputPropertiesOutput
}

// Common input details for network mapping operation.
type CreateNetworkMappingInputPropertiesArgs struct {
	// Fabric specific input properties.
	FabricSpecificDetails pulumi.Input `pulumi:"fabricSpecificDetails"`
	// Recovery fabric Name.
	RecoveryFabricName pulumi.StringPtrInput `pulumi:"recoveryFabricName"`
	// Recovery network Id.
	RecoveryNetworkId pulumi.StringInput `pulumi:"recoveryNetworkId"`
}

func (CreateNetworkMappingInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateNetworkMappingInputProperties)(nil)).Elem()
}

func (i CreateNetworkMappingInputPropertiesArgs) ToCreateNetworkMappingInputPropertiesOutput() CreateNetworkMappingInputPropertiesOutput {
	return i.ToCreateNetworkMappingInputPropertiesOutputWithContext(context.Background())
}

func (i CreateNetworkMappingInputPropertiesArgs) ToCreateNetworkMappingInputPropertiesOutputWithContext(ctx context.Context) CreateNetworkMappingInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateNetworkMappingInputPropertiesOutput)
}

// Common input details for network mapping operation.
type CreateNetworkMappingInputPropertiesOutput struct{ *pulumi.OutputState }

func (CreateNetworkMappingInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateNetworkMappingInputProperties)(nil)).Elem()
}

func (o CreateNetworkMappingInputPropertiesOutput) ToCreateNetworkMappingInputPropertiesOutput() CreateNetworkMappingInputPropertiesOutput {
	return o
}

func (o CreateNetworkMappingInputPropertiesOutput) ToCreateNetworkMappingInputPropertiesOutputWithContext(ctx context.Context) CreateNetworkMappingInputPropertiesOutput {
	return o
}

// Fabric specific input properties.
func (o CreateNetworkMappingInputPropertiesOutput) FabricSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v CreateNetworkMappingInputProperties) interface{} { return v.FabricSpecificDetails }).(pulumi.AnyOutput)
}

// Recovery fabric Name.
func (o CreateNetworkMappingInputPropertiesOutput) RecoveryFabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreateNetworkMappingInputProperties) *string { return v.RecoveryFabricName }).(pulumi.StringPtrOutput)
}

// Recovery network Id.
func (o CreateNetworkMappingInputPropertiesOutput) RecoveryNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v CreateNetworkMappingInputProperties) string { return v.RecoveryNetworkId }).(pulumi.StringOutput)
}

// Policy creation properties.
type CreatePolicyInputProperties struct {
	// The ReplicationProviderSettings.
	ProviderSpecificInput interface{} `pulumi:"providerSpecificInput"`
}

// CreatePolicyInputPropertiesInput is an input type that accepts CreatePolicyInputPropertiesArgs and CreatePolicyInputPropertiesOutput values.
// You can construct a concrete instance of `CreatePolicyInputPropertiesInput` via:
//
//	CreatePolicyInputPropertiesArgs{...}
type CreatePolicyInputPropertiesInput interface {
	pulumi.Input

	ToCreatePolicyInputPropertiesOutput() CreatePolicyInputPropertiesOutput
	ToCreatePolicyInputPropertiesOutputWithContext(context.Context) CreatePolicyInputPropertiesOutput
}

// Policy creation properties.
type CreatePolicyInputPropertiesArgs struct {
	// The ReplicationProviderSettings.
	ProviderSpecificInput pulumi.Input `pulumi:"providerSpecificInput"`
}

func (CreatePolicyInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreatePolicyInputProperties)(nil)).Elem()
}

func (i CreatePolicyInputPropertiesArgs) ToCreatePolicyInputPropertiesOutput() CreatePolicyInputPropertiesOutput {
	return i.ToCreatePolicyInputPropertiesOutputWithContext(context.Background())
}

func (i CreatePolicyInputPropertiesArgs) ToCreatePolicyInputPropertiesOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreatePolicyInputPropertiesOutput)
}

func (i CreatePolicyInputPropertiesArgs) ToCreatePolicyInputPropertiesPtrOutput() CreatePolicyInputPropertiesPtrOutput {
	return i.ToCreatePolicyInputPropertiesPtrOutputWithContext(context.Background())
}

func (i CreatePolicyInputPropertiesArgs) ToCreatePolicyInputPropertiesPtrOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreatePolicyInputPropertiesOutput).ToCreatePolicyInputPropertiesPtrOutputWithContext(ctx)
}

// CreatePolicyInputPropertiesPtrInput is an input type that accepts CreatePolicyInputPropertiesArgs, CreatePolicyInputPropertiesPtr and CreatePolicyInputPropertiesPtrOutput values.
// You can construct a concrete instance of `CreatePolicyInputPropertiesPtrInput` via:
//
//	        CreatePolicyInputPropertiesArgs{...}
//
//	or:
//
//	        nil
type CreatePolicyInputPropertiesPtrInput interface {
	pulumi.Input

	ToCreatePolicyInputPropertiesPtrOutput() CreatePolicyInputPropertiesPtrOutput
	ToCreatePolicyInputPropertiesPtrOutputWithContext(context.Context) CreatePolicyInputPropertiesPtrOutput
}

type createPolicyInputPropertiesPtrType CreatePolicyInputPropertiesArgs

func CreatePolicyInputPropertiesPtr(v *CreatePolicyInputPropertiesArgs) CreatePolicyInputPropertiesPtrInput {
	return (*createPolicyInputPropertiesPtrType)(v)
}

func (*createPolicyInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreatePolicyInputProperties)(nil)).Elem()
}

func (i *createPolicyInputPropertiesPtrType) ToCreatePolicyInputPropertiesPtrOutput() CreatePolicyInputPropertiesPtrOutput {
	return i.ToCreatePolicyInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *createPolicyInputPropertiesPtrType) ToCreatePolicyInputPropertiesPtrOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreatePolicyInputPropertiesPtrOutput)
}

// Policy creation properties.
type CreatePolicyInputPropertiesOutput struct{ *pulumi.OutputState }

func (CreatePolicyInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreatePolicyInputProperties)(nil)).Elem()
}

func (o CreatePolicyInputPropertiesOutput) ToCreatePolicyInputPropertiesOutput() CreatePolicyInputPropertiesOutput {
	return o
}

func (o CreatePolicyInputPropertiesOutput) ToCreatePolicyInputPropertiesOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesOutput {
	return o
}

func (o CreatePolicyInputPropertiesOutput) ToCreatePolicyInputPropertiesPtrOutput() CreatePolicyInputPropertiesPtrOutput {
	return o.ToCreatePolicyInputPropertiesPtrOutputWithContext(context.Background())
}

func (o CreatePolicyInputPropertiesOutput) ToCreatePolicyInputPropertiesPtrOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CreatePolicyInputProperties) *CreatePolicyInputProperties {
		return &v
	}).(CreatePolicyInputPropertiesPtrOutput)
}

// The ReplicationProviderSettings.
func (o CreatePolicyInputPropertiesOutput) ProviderSpecificInput() pulumi.AnyOutput {
	return o.ApplyT(func(v CreatePolicyInputProperties) interface{} { return v.ProviderSpecificInput }).(pulumi.AnyOutput)
}

type CreatePolicyInputPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CreatePolicyInputPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreatePolicyInputProperties)(nil)).Elem()
}

func (o CreatePolicyInputPropertiesPtrOutput) ToCreatePolicyInputPropertiesPtrOutput() CreatePolicyInputPropertiesPtrOutput {
	return o
}

func (o CreatePolicyInputPropertiesPtrOutput) ToCreatePolicyInputPropertiesPtrOutputWithContext(ctx context.Context) CreatePolicyInputPropertiesPtrOutput {
	return o
}

func (o CreatePolicyInputPropertiesPtrOutput) Elem() CreatePolicyInputPropertiesOutput {
	return o.ApplyT(func(v *CreatePolicyInputProperties) CreatePolicyInputProperties {
		if v != nil {
			return *v
		}
		var ret CreatePolicyInputProperties
		return ret
	}).(CreatePolicyInputPropertiesOutput)
}

// The ReplicationProviderSettings.
func (o CreatePolicyInputPropertiesPtrOutput) ProviderSpecificInput() pulumi.AnyOutput {
	return o.ApplyT(func(v *CreatePolicyInputProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.ProviderSpecificInput
	}).(pulumi.AnyOutput)
}

// Configure pairing input properties.
type CreateProtectionContainerMappingInputProperties struct {
	// Applicable policy.
	PolicyId *string `pulumi:"policyId"`
	// Provider specific input for pairing.
	ProviderSpecificInput interface{} `pulumi:"providerSpecificInput"`
	// The target unique protection container name.
	TargetProtectionContainerId *string `pulumi:"targetProtectionContainerId"`
}

// CreateProtectionContainerMappingInputPropertiesInput is an input type that accepts CreateProtectionContainerMappingInputPropertiesArgs and CreateProtectionContainerMappingInputPropertiesOutput values.
// You can construct a concrete instance of `CreateProtectionContainerMappingInputPropertiesInput` via:
//
//	CreateProtectionContainerMappingInputPropertiesArgs{...}
type CreateProtectionContainerMappingInputPropertiesInput interface {
	pulumi.Input

	ToCreateProtectionContainerMappingInputPropertiesOutput() CreateProtectionContainerMappingInputPropertiesOutput
	ToCreateProtectionContainerMappingInputPropertiesOutputWithContext(context.Context) CreateProtectionContainerMappingInputPropertiesOutput
}

// Configure pairing input properties.
type CreateProtectionContainerMappingInputPropertiesArgs struct {
	// Applicable policy.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Provider specific input for pairing.
	ProviderSpecificInput pulumi.Input `pulumi:"providerSpecificInput"`
	// The target unique protection container name.
	TargetProtectionContainerId pulumi.StringPtrInput `pulumi:"targetProtectionContainerId"`
}

func (CreateProtectionContainerMappingInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateProtectionContainerMappingInputProperties)(nil)).Elem()
}

func (i CreateProtectionContainerMappingInputPropertiesArgs) ToCreateProtectionContainerMappingInputPropertiesOutput() CreateProtectionContainerMappingInputPropertiesOutput {
	return i.ToCreateProtectionContainerMappingInputPropertiesOutputWithContext(context.Background())
}

func (i CreateProtectionContainerMappingInputPropertiesArgs) ToCreateProtectionContainerMappingInputPropertiesOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateProtectionContainerMappingInputPropertiesOutput)
}

func (i CreateProtectionContainerMappingInputPropertiesArgs) ToCreateProtectionContainerMappingInputPropertiesPtrOutput() CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return i.ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i CreateProtectionContainerMappingInputPropertiesArgs) ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateProtectionContainerMappingInputPropertiesOutput).ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(ctx)
}

// CreateProtectionContainerMappingInputPropertiesPtrInput is an input type that accepts CreateProtectionContainerMappingInputPropertiesArgs, CreateProtectionContainerMappingInputPropertiesPtr and CreateProtectionContainerMappingInputPropertiesPtrOutput values.
// You can construct a concrete instance of `CreateProtectionContainerMappingInputPropertiesPtrInput` via:
//
//	        CreateProtectionContainerMappingInputPropertiesArgs{...}
//
//	or:
//
//	        nil
type CreateProtectionContainerMappingInputPropertiesPtrInput interface {
	pulumi.Input

	ToCreateProtectionContainerMappingInputPropertiesPtrOutput() CreateProtectionContainerMappingInputPropertiesPtrOutput
	ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(context.Context) CreateProtectionContainerMappingInputPropertiesPtrOutput
}

type createProtectionContainerMappingInputPropertiesPtrType CreateProtectionContainerMappingInputPropertiesArgs

func CreateProtectionContainerMappingInputPropertiesPtr(v *CreateProtectionContainerMappingInputPropertiesArgs) CreateProtectionContainerMappingInputPropertiesPtrInput {
	return (*createProtectionContainerMappingInputPropertiesPtrType)(v)
}

func (*createProtectionContainerMappingInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateProtectionContainerMappingInputProperties)(nil)).Elem()
}

func (i *createProtectionContainerMappingInputPropertiesPtrType) ToCreateProtectionContainerMappingInputPropertiesPtrOutput() CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return i.ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *createProtectionContainerMappingInputPropertiesPtrType) ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateProtectionContainerMappingInputPropertiesPtrOutput)
}

// Configure pairing input properties.
type CreateProtectionContainerMappingInputPropertiesOutput struct{ *pulumi.OutputState }

func (CreateProtectionContainerMappingInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateProtectionContainerMappingInputProperties)(nil)).Elem()
}

func (o CreateProtectionContainerMappingInputPropertiesOutput) ToCreateProtectionContainerMappingInputPropertiesOutput() CreateProtectionContainerMappingInputPropertiesOutput {
	return o
}

func (o CreateProtectionContainerMappingInputPropertiesOutput) ToCreateProtectionContainerMappingInputPropertiesOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesOutput {
	return o
}

func (o CreateProtectionContainerMappingInputPropertiesOutput) ToCreateProtectionContainerMappingInputPropertiesPtrOutput() CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return o.ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (o CreateProtectionContainerMappingInputPropertiesOutput) ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CreateProtectionContainerMappingInputProperties) *CreateProtectionContainerMappingInputProperties {
		return &v
	}).(CreateProtectionContainerMappingInputPropertiesPtrOutput)
}

// Applicable policy.
func (o CreateProtectionContainerMappingInputPropertiesOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreateProtectionContainerMappingInputProperties) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Provider specific input for pairing.
func (o CreateProtectionContainerMappingInputPropertiesOutput) ProviderSpecificInput() pulumi.AnyOutput {
	return o.ApplyT(func(v CreateProtectionContainerMappingInputProperties) interface{} { return v.ProviderSpecificInput }).(pulumi.AnyOutput)
}

// The target unique protection container name.
func (o CreateProtectionContainerMappingInputPropertiesOutput) TargetProtectionContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreateProtectionContainerMappingInputProperties) *string { return v.TargetProtectionContainerId }).(pulumi.StringPtrOutput)
}

type CreateProtectionContainerMappingInputPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CreateProtectionContainerMappingInputPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateProtectionContainerMappingInputProperties)(nil)).Elem()
}

func (o CreateProtectionContainerMappingInputPropertiesPtrOutput) ToCreateProtectionContainerMappingInputPropertiesPtrOutput() CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return o
}

func (o CreateProtectionContainerMappingInputPropertiesPtrOutput) ToCreateProtectionContainerMappingInputPropertiesPtrOutputWithContext(ctx context.Context) CreateProtectionContainerMappingInputPropertiesPtrOutput {
	return o
}

func (o CreateProtectionContainerMappingInputPropertiesPtrOutput) Elem() CreateProtectionContainerMappingInputPropertiesOutput {
	return o.ApplyT(func(v *CreateProtectionContainerMappingInputProperties) CreateProtectionContainerMappingInputProperties {
		if v != nil {
			return *v
		}
		var ret CreateProtectionContainerMappingInputProperties
		return ret
	}).(CreateProtectionContainerMappingInputPropertiesOutput)
}

// Applicable policy.
func (o CreateProtectionContainerMappingInputPropertiesPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CreateProtectionContainerMappingInputProperties) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Provider specific input for pairing.
func (o CreateProtectionContainerMappingInputPropertiesPtrOutput) ProviderSpecificInput() pulumi.AnyOutput {
	return o.ApplyT(func(v *CreateProtectionContainerMappingInputProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.ProviderSpecificInput
	}).(pulumi.AnyOutput)
}

// The target unique protection container name.
func (o CreateProtectionContainerMappingInputPropertiesPtrOutput) TargetProtectionContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CreateProtectionContainerMappingInputProperties) *string {
		if v == nil {
			return nil
		}
		return v.TargetProtectionContainerId
	}).(pulumi.StringPtrOutput)
}

// Recovery plan creation properties.
type CreateRecoveryPlanInputProperties struct {
	// The failover deployment model.
	FailoverDeploymentModel *string `pulumi:"failoverDeploymentModel"`
	// The recovery plan groups.
	Groups []RecoveryPlanGroup `pulumi:"groups"`
	// The primary fabric Id.
	PrimaryFabricId string `pulumi:"primaryFabricId"`
	// The provider specific input.
	ProviderSpecificInput []RecoveryPlanA2AInput `pulumi:"providerSpecificInput"`
	// The recovery fabric Id.
	RecoveryFabricId string `pulumi:"recoveryFabricId"`
}

// CreateRecoveryPlanInputPropertiesInput is an input type that accepts CreateRecoveryPlanInputPropertiesArgs and CreateRecoveryPlanInputPropertiesOutput values.
// You can construct a concrete instance of `CreateRecoveryPlanInputPropertiesInput` via:
//
//	CreateRecoveryPlanInputPropertiesArgs{...}
type CreateRecoveryPlanInputPropertiesInput interface {
	pulumi.Input

	ToCreateRecoveryPlanInputPropertiesOutput() CreateRecoveryPlanInputPropertiesOutput
	ToCreateRecoveryPlanInputPropertiesOutputWithContext(context.Context) CreateRecoveryPlanInputPropertiesOutput
}

// Recovery plan creation properties.
type CreateRecoveryPlanInputPropertiesArgs struct {
	// The failover deployment model.
	FailoverDeploymentModel pulumi.StringPtrInput `pulumi:"failoverDeploymentModel"`
	// The recovery plan groups.
	Groups RecoveryPlanGroupArrayInput `pulumi:"groups"`
	// The primary fabric Id.
	PrimaryFabricId pulumi.StringInput `pulumi:"primaryFabricId"`
	// The provider specific input.
	ProviderSpecificInput RecoveryPlanA2AInputArrayInput `pulumi:"providerSpecificInput"`
	// The recovery fabric Id.
	RecoveryFabricId pulumi.StringInput `pulumi:"recoveryFabricId"`
}

func (CreateRecoveryPlanInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateRecoveryPlanInputProperties)(nil)).Elem()
}

func (i CreateRecoveryPlanInputPropertiesArgs) ToCreateRecoveryPlanInputPropertiesOutput() CreateRecoveryPlanInputPropertiesOutput {
	return i.ToCreateRecoveryPlanInputPropertiesOutputWithContext(context.Background())
}

func (i CreateRecoveryPlanInputPropertiesArgs) ToCreateRecoveryPlanInputPropertiesOutputWithContext(ctx context.Context) CreateRecoveryPlanInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateRecoveryPlanInputPropertiesOutput)
}

// Recovery plan creation properties.
type CreateRecoveryPlanInputPropertiesOutput struct{ *pulumi.OutputState }

func (CreateRecoveryPlanInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateRecoveryPlanInputProperties)(nil)).Elem()
}

func (o CreateRecoveryPlanInputPropertiesOutput) ToCreateRecoveryPlanInputPropertiesOutput() CreateRecoveryPlanInputPropertiesOutput {
	return o
}

func (o CreateRecoveryPlanInputPropertiesOutput) ToCreateRecoveryPlanInputPropertiesOutputWithContext(ctx context.Context) CreateRecoveryPlanInputPropertiesOutput {
	return o
}

// The failover deployment model.
func (o CreateRecoveryPlanInputPropertiesOutput) FailoverDeploymentModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreateRecoveryPlanInputProperties) *string { return v.FailoverDeploymentModel }).(pulumi.StringPtrOutput)
}

// The recovery plan groups.
func (o CreateRecoveryPlanInputPropertiesOutput) Groups() RecoveryPlanGroupArrayOutput {
	return o.ApplyT(func(v CreateRecoveryPlanInputProperties) []RecoveryPlanGroup { return v.Groups }).(RecoveryPlanGroupArrayOutput)
}

// The primary fabric Id.
func (o CreateRecoveryPlanInputPropertiesOutput) PrimaryFabricId() pulumi.StringOutput {
	return o.ApplyT(func(v CreateRecoveryPlanInputProperties) string { return v.PrimaryFabricId }).(pulumi.StringOutput)
}

// The provider specific input.
func (o CreateRecoveryPlanInputPropertiesOutput) ProviderSpecificInput() RecoveryPlanA2AInputArrayOutput {
	return o.ApplyT(func(v CreateRecoveryPlanInputProperties) []RecoveryPlanA2AInput { return v.ProviderSpecificInput }).(RecoveryPlanA2AInputArrayOutput)
}

// The recovery fabric Id.
func (o CreateRecoveryPlanInputPropertiesOutput) RecoveryFabricId() pulumi.StringOutput {
	return o.ApplyT(func(v CreateRecoveryPlanInputProperties) string { return v.RecoveryFabricId }).(pulumi.StringOutput)
}

// Critical past job details of the migration item.
type CriticalJobHistoryDetailsResponse struct {
	// The ARM Id of the job being executed.
	JobId string `pulumi:"jobId"`
	// The job name.
	JobName string `pulumi:"jobName"`
	// The job state.
	JobStatus string `pulumi:"jobStatus"`
	// The start time of the job.
	StartTime string `pulumi:"startTime"`
}

// Critical past job details of the migration item.
type CriticalJobHistoryDetailsResponseOutput struct{ *pulumi.OutputState }

func (CriticalJobHistoryDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CriticalJobHistoryDetailsResponse)(nil)).Elem()
}

func (o CriticalJobHistoryDetailsResponseOutput) ToCriticalJobHistoryDetailsResponseOutput() CriticalJobHistoryDetailsResponseOutput {
	return o
}

func (o CriticalJobHistoryDetailsResponseOutput) ToCriticalJobHistoryDetailsResponseOutputWithContext(ctx context.Context) CriticalJobHistoryDetailsResponseOutput {
	return o
}

// The ARM Id of the job being executed.
func (o CriticalJobHistoryDetailsResponseOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v CriticalJobHistoryDetailsResponse) string { return v.JobId }).(pulumi.StringOutput)
}

// The job name.
func (o CriticalJobHistoryDetailsResponseOutput) JobName() pulumi.StringOutput {
	return o.ApplyT(func(v CriticalJobHistoryDetailsResponse) string { return v.JobName }).(pulumi.StringOutput)
}

// The job state.
func (o CriticalJobHistoryDetailsResponseOutput) JobStatus() pulumi.StringOutput {
	return o.ApplyT(func(v CriticalJobHistoryDetailsResponse) string { return v.JobStatus }).(pulumi.StringOutput)
}

// The start time of the job.
func (o CriticalJobHistoryDetailsResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v CriticalJobHistoryDetailsResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

type CriticalJobHistoryDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (CriticalJobHistoryDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CriticalJobHistoryDetailsResponse)(nil)).Elem()
}

func (o CriticalJobHistoryDetailsResponseArrayOutput) ToCriticalJobHistoryDetailsResponseArrayOutput() CriticalJobHistoryDetailsResponseArrayOutput {
	return o
}

func (o CriticalJobHistoryDetailsResponseArrayOutput) ToCriticalJobHistoryDetailsResponseArrayOutputWithContext(ctx context.Context) CriticalJobHistoryDetailsResponseArrayOutput {
	return o
}

func (o CriticalJobHistoryDetailsResponseArrayOutput) Index(i pulumi.IntInput) CriticalJobHistoryDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CriticalJobHistoryDetailsResponse {
		return vs[0].([]CriticalJobHistoryDetailsResponse)[vs[1].(int)]
	}).(CriticalJobHistoryDetailsResponseOutput)
}

// Settings for Cross Subscription Restore Settings
type CrossSubscriptionRestoreSettings struct {
	CrossSubscriptionRestoreState *string `pulumi:"crossSubscriptionRestoreState"`
}

// CrossSubscriptionRestoreSettingsInput is an input type that accepts CrossSubscriptionRestoreSettingsArgs and CrossSubscriptionRestoreSettingsOutput values.
// You can construct a concrete instance of `CrossSubscriptionRestoreSettingsInput` via:
//
//	CrossSubscriptionRestoreSettingsArgs{...}
type CrossSubscriptionRestoreSettingsInput interface {
	pulumi.Input

	ToCrossSubscriptionRestoreSettingsOutput() CrossSubscriptionRestoreSettingsOutput
	ToCrossSubscriptionRestoreSettingsOutputWithContext(context.Context) CrossSubscriptionRestoreSettingsOutput
}

// Settings for Cross Subscription Restore Settings
type CrossSubscriptionRestoreSettingsArgs struct {
	CrossSubscriptionRestoreState pulumi.StringPtrInput `pulumi:"crossSubscriptionRestoreState"`
}

func (CrossSubscriptionRestoreSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CrossSubscriptionRestoreSettings)(nil)).Elem()
}

func (i CrossSubscriptionRestoreSettingsArgs) ToCrossSubscriptionRestoreSettingsOutput() CrossSubscriptionRestoreSettingsOutput {
	return i.ToCrossSubscriptionRestoreSettingsOutputWithContext(context.Background())
}

func (i CrossSubscriptionRestoreSettingsArgs) ToCrossSubscriptionRestoreSettingsOutputWithContext(ctx context.Context) CrossSubscriptionRestoreSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrossSubscriptionRestoreSettingsOutput)
}

func (i CrossSubscriptionRestoreSettingsArgs) ToCrossSubscriptionRestoreSettingsPtrOutput() CrossSubscriptionRestoreSettingsPtrOutput {
	return i.ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(context.Background())
}

func (i CrossSubscriptionRestoreSettingsArgs) ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(ctx context.Context) CrossSubscriptionRestoreSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrossSubscriptionRestoreSettingsOutput).ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(ctx)
}

// CrossSubscriptionRestoreSettingsPtrInput is an input type that accepts CrossSubscriptionRestoreSettingsArgs, CrossSubscriptionRestoreSettingsPtr and CrossSubscriptionRestoreSettingsPtrOutput values.
// You can construct a concrete instance of `CrossSubscriptionRestoreSettingsPtrInput` via:
//
//	        CrossSubscriptionRestoreSettingsArgs{...}
//
//	or:
//
//	        nil
type CrossSubscriptionRestoreSettingsPtrInput interface {
	pulumi.Input

	ToCrossSubscriptionRestoreSettingsPtrOutput() CrossSubscriptionRestoreSettingsPtrOutput
	ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(context.Context) CrossSubscriptionRestoreSettingsPtrOutput
}

type crossSubscriptionRestoreSettingsPtrType CrossSubscriptionRestoreSettingsArgs

func CrossSubscriptionRestoreSettingsPtr(v *CrossSubscriptionRestoreSettingsArgs) CrossSubscriptionRestoreSettingsPtrInput {
	return (*crossSubscriptionRestoreSettingsPtrType)(v)
}

func (*crossSubscriptionRestoreSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CrossSubscriptionRestoreSettings)(nil)).Elem()
}

func (i *crossSubscriptionRestoreSettingsPtrType) ToCrossSubscriptionRestoreSettingsPtrOutput() CrossSubscriptionRestoreSettingsPtrOutput {
	return i.ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(context.Background())
}

func (i *crossSubscriptionRestoreSettingsPtrType) ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(ctx context.Context) CrossSubscriptionRestoreSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrossSubscriptionRestoreSettingsPtrOutput)
}

// Settings for Cross Subscription Restore Settings
type CrossSubscriptionRestoreSettingsOutput struct{ *pulumi.OutputState }

func (CrossSubscriptionRestoreSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CrossSubscriptionRestoreSettings)(nil)).Elem()
}

func (o CrossSubscriptionRestoreSettingsOutput) ToCrossSubscriptionRestoreSettingsOutput() CrossSubscriptionRestoreSettingsOutput {
	return o
}

func (o CrossSubscriptionRestoreSettingsOutput) ToCrossSubscriptionRestoreSettingsOutputWithContext(ctx context.Context) CrossSubscriptionRestoreSettingsOutput {
	return o
}

func (o CrossSubscriptionRestoreSettingsOutput) ToCrossSubscriptionRestoreSettingsPtrOutput() CrossSubscriptionRestoreSettingsPtrOutput {
	return o.ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(context.Background())
}

func (o CrossSubscriptionRestoreSettingsOutput) ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(ctx context.Context) CrossSubscriptionRestoreSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CrossSubscriptionRestoreSettings) *CrossSubscriptionRestoreSettings {
		return &v
	}).(CrossSubscriptionRestoreSettingsPtrOutput)
}

func (o CrossSubscriptionRestoreSettingsOutput) CrossSubscriptionRestoreState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CrossSubscriptionRestoreSettings) *string { return v.CrossSubscriptionRestoreState }).(pulumi.StringPtrOutput)
}

type CrossSubscriptionRestoreSettingsPtrOutput struct{ *pulumi.OutputState }

func (CrossSubscriptionRestoreSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CrossSubscriptionRestoreSettings)(nil)).Elem()
}

func (o CrossSubscriptionRestoreSettingsPtrOutput) ToCrossSubscriptionRestoreSettingsPtrOutput() CrossSubscriptionRestoreSettingsPtrOutput {
	return o
}

func (o CrossSubscriptionRestoreSettingsPtrOutput) ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(ctx context.Context) CrossSubscriptionRestoreSettingsPtrOutput {
	return o
}

func (o CrossSubscriptionRestoreSettingsPtrOutput) Elem() CrossSubscriptionRestoreSettingsOutput {
	return o.ApplyT(func(v *CrossSubscriptionRestoreSettings) CrossSubscriptionRestoreSettings {
		if v != nil {
			return *v
		}
		var ret CrossSubscriptionRestoreSettings
		return ret
	}).(CrossSubscriptionRestoreSettingsOutput)
}

func (o CrossSubscriptionRestoreSettingsPtrOutput) CrossSubscriptionRestoreState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CrossSubscriptionRestoreSettings) *string {
		if v == nil {
			return nil
		}
		return v.CrossSubscriptionRestoreState
	}).(pulumi.StringPtrOutput)
}

// Settings for Cross Subscription Restore Settings
type CrossSubscriptionRestoreSettingsResponse struct {
	CrossSubscriptionRestoreState *string `pulumi:"crossSubscriptionRestoreState"`
}

// Settings for Cross Subscription Restore Settings
type CrossSubscriptionRestoreSettingsResponseOutput struct{ *pulumi.OutputState }

func (CrossSubscriptionRestoreSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CrossSubscriptionRestoreSettingsResponse)(nil)).Elem()
}

func (o CrossSubscriptionRestoreSettingsResponseOutput) ToCrossSubscriptionRestoreSettingsResponseOutput() CrossSubscriptionRestoreSettingsResponseOutput {
	return o
}

func (o CrossSubscriptionRestoreSettingsResponseOutput) ToCrossSubscriptionRestoreSettingsResponseOutputWithContext(ctx context.Context) CrossSubscriptionRestoreSettingsResponseOutput {
	return o
}

func (o CrossSubscriptionRestoreSettingsResponseOutput) CrossSubscriptionRestoreState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CrossSubscriptionRestoreSettingsResponse) *string { return v.CrossSubscriptionRestoreState }).(pulumi.StringPtrOutput)
}

type CrossSubscriptionRestoreSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (CrossSubscriptionRestoreSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CrossSubscriptionRestoreSettingsResponse)(nil)).Elem()
}

func (o CrossSubscriptionRestoreSettingsResponsePtrOutput) ToCrossSubscriptionRestoreSettingsResponsePtrOutput() CrossSubscriptionRestoreSettingsResponsePtrOutput {
	return o
}

func (o CrossSubscriptionRestoreSettingsResponsePtrOutput) ToCrossSubscriptionRestoreSettingsResponsePtrOutputWithContext(ctx context.Context) CrossSubscriptionRestoreSettingsResponsePtrOutput {
	return o
}

func (o CrossSubscriptionRestoreSettingsResponsePtrOutput) Elem() CrossSubscriptionRestoreSettingsResponseOutput {
	return o.ApplyT(func(v *CrossSubscriptionRestoreSettingsResponse) CrossSubscriptionRestoreSettingsResponse {
		if v != nil {
			return *v
		}
		var ret CrossSubscriptionRestoreSettingsResponse
		return ret
	}).(CrossSubscriptionRestoreSettingsResponseOutput)
}

func (o CrossSubscriptionRestoreSettingsResponsePtrOutput) CrossSubscriptionRestoreState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CrossSubscriptionRestoreSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CrossSubscriptionRestoreState
	}).(pulumi.StringPtrOutput)
}

// Current job details of the migration item.
type CurrentJobDetailsResponse struct {
	// The ARM Id of the job being executed.
	JobId string `pulumi:"jobId"`
	// The job name.
	JobName string `pulumi:"jobName"`
	// The start time of the job.
	StartTime string `pulumi:"startTime"`
}

// Current job details of the migration item.
type CurrentJobDetailsResponseOutput struct{ *pulumi.OutputState }

func (CurrentJobDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CurrentJobDetailsResponse)(nil)).Elem()
}

func (o CurrentJobDetailsResponseOutput) ToCurrentJobDetailsResponseOutput() CurrentJobDetailsResponseOutput {
	return o
}

func (o CurrentJobDetailsResponseOutput) ToCurrentJobDetailsResponseOutputWithContext(ctx context.Context) CurrentJobDetailsResponseOutput {
	return o
}

// The ARM Id of the job being executed.
func (o CurrentJobDetailsResponseOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v CurrentJobDetailsResponse) string { return v.JobId }).(pulumi.StringOutput)
}

// The job name.
func (o CurrentJobDetailsResponseOutput) JobName() pulumi.StringOutput {
	return o.ApplyT(func(v CurrentJobDetailsResponse) string { return v.JobName }).(pulumi.StringOutput)
}

// The start time of the job.
func (o CurrentJobDetailsResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v CurrentJobDetailsResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Current scenario details of the protected entity.
type CurrentScenarioDetailsResponse struct {
	// ARM Id of the job being executed.
	JobId *string `pulumi:"jobId"`
	// Scenario name.
	ScenarioName *string `pulumi:"scenarioName"`
	// Start time of the workflow.
	StartTime *string `pulumi:"startTime"`
}

// Current scenario details of the protected entity.
type CurrentScenarioDetailsResponseOutput struct{ *pulumi.OutputState }

func (CurrentScenarioDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CurrentScenarioDetailsResponse)(nil)).Elem()
}

func (o CurrentScenarioDetailsResponseOutput) ToCurrentScenarioDetailsResponseOutput() CurrentScenarioDetailsResponseOutput {
	return o
}

func (o CurrentScenarioDetailsResponseOutput) ToCurrentScenarioDetailsResponseOutputWithContext(ctx context.Context) CurrentScenarioDetailsResponseOutput {
	return o
}

// ARM Id of the job being executed.
func (o CurrentScenarioDetailsResponseOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurrentScenarioDetailsResponse) *string { return v.JobId }).(pulumi.StringPtrOutput)
}

// Scenario name.
func (o CurrentScenarioDetailsResponseOutput) ScenarioName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurrentScenarioDetailsResponse) *string { return v.ScenarioName }).(pulumi.StringPtrOutput)
}

// Start time of the workflow.
func (o CurrentScenarioDetailsResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CurrentScenarioDetailsResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type CurrentScenarioDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (CurrentScenarioDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CurrentScenarioDetailsResponse)(nil)).Elem()
}

func (o CurrentScenarioDetailsResponsePtrOutput) ToCurrentScenarioDetailsResponsePtrOutput() CurrentScenarioDetailsResponsePtrOutput {
	return o
}

func (o CurrentScenarioDetailsResponsePtrOutput) ToCurrentScenarioDetailsResponsePtrOutputWithContext(ctx context.Context) CurrentScenarioDetailsResponsePtrOutput {
	return o
}

func (o CurrentScenarioDetailsResponsePtrOutput) Elem() CurrentScenarioDetailsResponseOutput {
	return o.ApplyT(func(v *CurrentScenarioDetailsResponse) CurrentScenarioDetailsResponse {
		if v != nil {
			return *v
		}
		var ret CurrentScenarioDetailsResponse
		return ret
	}).(CurrentScenarioDetailsResponseOutput)
}

// ARM Id of the job being executed.
func (o CurrentScenarioDetailsResponsePtrOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurrentScenarioDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.JobId
	}).(pulumi.StringPtrOutput)
}

// Scenario name.
func (o CurrentScenarioDetailsResponsePtrOutput) ScenarioName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurrentScenarioDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScenarioName
	}).(pulumi.StringPtrOutput)
}

// Start time of the workflow.
func (o CurrentScenarioDetailsResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CurrentScenarioDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Additional information of the DPMContainer.
type DPMContainerExtendedInfo struct {
	// Last refresh time of the DPMContainer.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
}

// DPMContainerExtendedInfoInput is an input type that accepts DPMContainerExtendedInfoArgs and DPMContainerExtendedInfoOutput values.
// You can construct a concrete instance of `DPMContainerExtendedInfoInput` via:
//
//	DPMContainerExtendedInfoArgs{...}
type DPMContainerExtendedInfoInput interface {
	pulumi.Input

	ToDPMContainerExtendedInfoOutput() DPMContainerExtendedInfoOutput
	ToDPMContainerExtendedInfoOutputWithContext(context.Context) DPMContainerExtendedInfoOutput
}

// Additional information of the DPMContainer.
type DPMContainerExtendedInfoArgs struct {
	// Last refresh time of the DPMContainer.
	LastRefreshedAt pulumi.StringPtrInput `pulumi:"lastRefreshedAt"`
}

func (DPMContainerExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMContainerExtendedInfo)(nil)).Elem()
}

func (i DPMContainerExtendedInfoArgs) ToDPMContainerExtendedInfoOutput() DPMContainerExtendedInfoOutput {
	return i.ToDPMContainerExtendedInfoOutputWithContext(context.Background())
}

func (i DPMContainerExtendedInfoArgs) ToDPMContainerExtendedInfoOutputWithContext(ctx context.Context) DPMContainerExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMContainerExtendedInfoOutput)
}

func (i DPMContainerExtendedInfoArgs) ToDPMContainerExtendedInfoPtrOutput() DPMContainerExtendedInfoPtrOutput {
	return i.ToDPMContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i DPMContainerExtendedInfoArgs) ToDPMContainerExtendedInfoPtrOutputWithContext(ctx context.Context) DPMContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMContainerExtendedInfoOutput).ToDPMContainerExtendedInfoPtrOutputWithContext(ctx)
}

// DPMContainerExtendedInfoPtrInput is an input type that accepts DPMContainerExtendedInfoArgs, DPMContainerExtendedInfoPtr and DPMContainerExtendedInfoPtrOutput values.
// You can construct a concrete instance of `DPMContainerExtendedInfoPtrInput` via:
//
//	        DPMContainerExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type DPMContainerExtendedInfoPtrInput interface {
	pulumi.Input

	ToDPMContainerExtendedInfoPtrOutput() DPMContainerExtendedInfoPtrOutput
	ToDPMContainerExtendedInfoPtrOutputWithContext(context.Context) DPMContainerExtendedInfoPtrOutput
}

type dpmcontainerExtendedInfoPtrType DPMContainerExtendedInfoArgs

func DPMContainerExtendedInfoPtr(v *DPMContainerExtendedInfoArgs) DPMContainerExtendedInfoPtrInput {
	return (*dpmcontainerExtendedInfoPtrType)(v)
}

func (*dpmcontainerExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMContainerExtendedInfo)(nil)).Elem()
}

func (i *dpmcontainerExtendedInfoPtrType) ToDPMContainerExtendedInfoPtrOutput() DPMContainerExtendedInfoPtrOutput {
	return i.ToDPMContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *dpmcontainerExtendedInfoPtrType) ToDPMContainerExtendedInfoPtrOutputWithContext(ctx context.Context) DPMContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMContainerExtendedInfoPtrOutput)
}

// Additional information of the DPMContainer.
type DPMContainerExtendedInfoOutput struct{ *pulumi.OutputState }

func (DPMContainerExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMContainerExtendedInfo)(nil)).Elem()
}

func (o DPMContainerExtendedInfoOutput) ToDPMContainerExtendedInfoOutput() DPMContainerExtendedInfoOutput {
	return o
}

func (o DPMContainerExtendedInfoOutput) ToDPMContainerExtendedInfoOutputWithContext(ctx context.Context) DPMContainerExtendedInfoOutput {
	return o
}

func (o DPMContainerExtendedInfoOutput) ToDPMContainerExtendedInfoPtrOutput() DPMContainerExtendedInfoPtrOutput {
	return o.ToDPMContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (o DPMContainerExtendedInfoOutput) ToDPMContainerExtendedInfoPtrOutputWithContext(ctx context.Context) DPMContainerExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DPMContainerExtendedInfo) *DPMContainerExtendedInfo {
		return &v
	}).(DPMContainerExtendedInfoPtrOutput)
}

// Last refresh time of the DPMContainer.
func (o DPMContainerExtendedInfoOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMContainerExtendedInfo) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

type DPMContainerExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (DPMContainerExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMContainerExtendedInfo)(nil)).Elem()
}

func (o DPMContainerExtendedInfoPtrOutput) ToDPMContainerExtendedInfoPtrOutput() DPMContainerExtendedInfoPtrOutput {
	return o
}

func (o DPMContainerExtendedInfoPtrOutput) ToDPMContainerExtendedInfoPtrOutputWithContext(ctx context.Context) DPMContainerExtendedInfoPtrOutput {
	return o
}

func (o DPMContainerExtendedInfoPtrOutput) Elem() DPMContainerExtendedInfoOutput {
	return o.ApplyT(func(v *DPMContainerExtendedInfo) DPMContainerExtendedInfo {
		if v != nil {
			return *v
		}
		var ret DPMContainerExtendedInfo
		return ret
	}).(DPMContainerExtendedInfoOutput)
}

// Last refresh time of the DPMContainer.
func (o DPMContainerExtendedInfoPtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMContainerExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// Additional information of the DPMContainer.
type DPMContainerExtendedInfoResponse struct {
	// Last refresh time of the DPMContainer.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
}

// Additional information of the DPMContainer.
type DPMContainerExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (DPMContainerExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMContainerExtendedInfoResponse)(nil)).Elem()
}

func (o DPMContainerExtendedInfoResponseOutput) ToDPMContainerExtendedInfoResponseOutput() DPMContainerExtendedInfoResponseOutput {
	return o
}

func (o DPMContainerExtendedInfoResponseOutput) ToDPMContainerExtendedInfoResponseOutputWithContext(ctx context.Context) DPMContainerExtendedInfoResponseOutput {
	return o
}

// Last refresh time of the DPMContainer.
func (o DPMContainerExtendedInfoResponseOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMContainerExtendedInfoResponse) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

type DPMContainerExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (DPMContainerExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMContainerExtendedInfoResponse)(nil)).Elem()
}

func (o DPMContainerExtendedInfoResponsePtrOutput) ToDPMContainerExtendedInfoResponsePtrOutput() DPMContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o DPMContainerExtendedInfoResponsePtrOutput) ToDPMContainerExtendedInfoResponsePtrOutputWithContext(ctx context.Context) DPMContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o DPMContainerExtendedInfoResponsePtrOutput) Elem() DPMContainerExtendedInfoResponseOutput {
	return o.ApplyT(func(v *DPMContainerExtendedInfoResponse) DPMContainerExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret DPMContainerExtendedInfoResponse
		return ret
	}).(DPMContainerExtendedInfoResponseOutput)
}

// Last refresh time of the DPMContainer.
func (o DPMContainerExtendedInfoResponsePtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// Additional information on Backup engine specific backup item.
type DPMProtectedItem struct {
	// Backup Management server protecting this backup item
	BackupEngineName *string `pulumi:"backupEngineName"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Extended info of the backup item.
	ExtendedInfo *DPMProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the managed item
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'DPMProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Protection state of the backup engine
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// DPMProtectedItemInput is an input type that accepts DPMProtectedItemArgs and DPMProtectedItemOutput values.
// You can construct a concrete instance of `DPMProtectedItemInput` via:
//
//	DPMProtectedItemArgs{...}
type DPMProtectedItemInput interface {
	pulumi.Input

	ToDPMProtectedItemOutput() DPMProtectedItemOutput
	ToDPMProtectedItemOutputWithContext(context.Context) DPMProtectedItemOutput
}

// Additional information on Backup engine specific backup item.
type DPMProtectedItemArgs struct {
	// Backup Management server protecting this backup item
	BackupEngineName pulumi.StringPtrInput `pulumi:"backupEngineName"`
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Extended info of the backup item.
	ExtendedInfo DPMProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the managed item
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'DPMProtectedItem'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Protection state of the backup engine
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (DPMProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMProtectedItem)(nil)).Elem()
}

func (i DPMProtectedItemArgs) ToDPMProtectedItemOutput() DPMProtectedItemOutput {
	return i.ToDPMProtectedItemOutputWithContext(context.Background())
}

func (i DPMProtectedItemArgs) ToDPMProtectedItemOutputWithContext(ctx context.Context) DPMProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMProtectedItemOutput)
}

func (i DPMProtectedItemArgs) ToDPMProtectedItemPtrOutput() DPMProtectedItemPtrOutput {
	return i.ToDPMProtectedItemPtrOutputWithContext(context.Background())
}

func (i DPMProtectedItemArgs) ToDPMProtectedItemPtrOutputWithContext(ctx context.Context) DPMProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMProtectedItemOutput).ToDPMProtectedItemPtrOutputWithContext(ctx)
}

// DPMProtectedItemPtrInput is an input type that accepts DPMProtectedItemArgs, DPMProtectedItemPtr and DPMProtectedItemPtrOutput values.
// You can construct a concrete instance of `DPMProtectedItemPtrInput` via:
//
//	        DPMProtectedItemArgs{...}
//
//	or:
//
//	        nil
type DPMProtectedItemPtrInput interface {
	pulumi.Input

	ToDPMProtectedItemPtrOutput() DPMProtectedItemPtrOutput
	ToDPMProtectedItemPtrOutputWithContext(context.Context) DPMProtectedItemPtrOutput
}

type dpmprotectedItemPtrType DPMProtectedItemArgs

func DPMProtectedItemPtr(v *DPMProtectedItemArgs) DPMProtectedItemPtrInput {
	return (*dpmprotectedItemPtrType)(v)
}

func (*dpmprotectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMProtectedItem)(nil)).Elem()
}

func (i *dpmprotectedItemPtrType) ToDPMProtectedItemPtrOutput() DPMProtectedItemPtrOutput {
	return i.ToDPMProtectedItemPtrOutputWithContext(context.Background())
}

func (i *dpmprotectedItemPtrType) ToDPMProtectedItemPtrOutputWithContext(ctx context.Context) DPMProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMProtectedItemPtrOutput)
}

// Additional information on Backup engine specific backup item.
type DPMProtectedItemOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMProtectedItem)(nil)).Elem()
}

func (o DPMProtectedItemOutput) ToDPMProtectedItemOutput() DPMProtectedItemOutput {
	return o
}

func (o DPMProtectedItemOutput) ToDPMProtectedItemOutputWithContext(ctx context.Context) DPMProtectedItemOutput {
	return o
}

func (o DPMProtectedItemOutput) ToDPMProtectedItemPtrOutput() DPMProtectedItemPtrOutput {
	return o.ToDPMProtectedItemPtrOutputWithContext(context.Background())
}

func (o DPMProtectedItemOutput) ToDPMProtectedItemPtrOutputWithContext(ctx context.Context) DPMProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DPMProtectedItem) *DPMProtectedItem {
		return &v
	}).(DPMProtectedItemPtrOutput)
}

// Backup Management server protecting this backup item
func (o DPMProtectedItemOutput) BackupEngineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.BackupEngineName }).(pulumi.StringPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o DPMProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o DPMProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o DPMProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o DPMProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o DPMProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Extended info of the backup item.
func (o DPMProtectedItemOutput) ExtendedInfo() DPMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *DPMProtectedItemExtendedInfo { return v.ExtendedInfo }).(DPMProtectedItemExtendedInfoPtrOutput)
}

// Friendly name of the managed item
func (o DPMProtectedItemOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o DPMProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o DPMProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o DPMProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o DPMProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o DPMProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o DPMProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o DPMProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'DPMProtectedItem'.
func (o DPMProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v DPMProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Protection state of the backup engine
func (o DPMProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o DPMProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DPMProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o DPMProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o DPMProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type DPMProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMProtectedItem)(nil)).Elem()
}

func (o DPMProtectedItemPtrOutput) ToDPMProtectedItemPtrOutput() DPMProtectedItemPtrOutput {
	return o
}

func (o DPMProtectedItemPtrOutput) ToDPMProtectedItemPtrOutputWithContext(ctx context.Context) DPMProtectedItemPtrOutput {
	return o
}

func (o DPMProtectedItemPtrOutput) Elem() DPMProtectedItemOutput {
	return o.ApplyT(func(v *DPMProtectedItem) DPMProtectedItem {
		if v != nil {
			return *v
		}
		var ret DPMProtectedItem
		return ret
	}).(DPMProtectedItemOutput)
}

// Backup Management server protecting this backup item
func (o DPMProtectedItemPtrOutput) BackupEngineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupEngineName
	}).(pulumi.StringPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o DPMProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o DPMProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o DPMProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o DPMProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o DPMProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Extended info of the backup item.
func (o DPMProtectedItemPtrOutput) ExtendedInfo() DPMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *DPMProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(DPMProtectedItemExtendedInfoPtrOutput)
}

// Friendly name of the managed item
func (o DPMProtectedItemPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o DPMProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o DPMProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o DPMProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o DPMProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o DPMProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o DPMProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o DPMProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'DPMProtectedItem'.
func (o DPMProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Protection state of the backup engine
func (o DPMProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o DPMProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DPMProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o DPMProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o DPMProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Additional information of DPM Protected item.
type DPMProtectedItemExtendedInfo struct {
	// Used Disk storage in bytes.
	DiskStorageUsedInBytes *string `pulumi:"diskStorageUsedInBytes"`
	// To check if backup item is collocated.
	IsCollocated *bool `pulumi:"isCollocated"`
	// To check if backup item is cloud protected.
	IsPresentOnCloud *bool `pulumi:"isPresentOnCloud"`
	// Last backup status information on backup item.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Last refresh time on backup item.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// Oldest cloud recovery point time.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// latest disk recovery point time.
	OnPremiseLatestRecoveryPoint *string `pulumi:"onPremiseLatestRecoveryPoint"`
	// Oldest disk recovery point time.
	OnPremiseOldestRecoveryPoint *string `pulumi:"onPremiseOldestRecoveryPoint"`
	// disk recovery point count.
	OnPremiseRecoveryPointCount *int `pulumi:"onPremiseRecoveryPointCount"`
	// Attribute to provide information on various DBs.
	ProtectableObjectLoadPath map[string]string `pulumi:"protectableObjectLoadPath"`
	// To check if backup item is disk protected.
	Protected *bool `pulumi:"protected"`
	// Protection group name of the backup item.
	ProtectionGroupName *string `pulumi:"protectionGroupName"`
	// cloud recovery point count.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
	// total Disk storage in bytes.
	TotalDiskStorageSizeInBytes *string `pulumi:"totalDiskStorageSizeInBytes"`
}

// DPMProtectedItemExtendedInfoInput is an input type that accepts DPMProtectedItemExtendedInfoArgs and DPMProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `DPMProtectedItemExtendedInfoInput` via:
//
//	DPMProtectedItemExtendedInfoArgs{...}
type DPMProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToDPMProtectedItemExtendedInfoOutput() DPMProtectedItemExtendedInfoOutput
	ToDPMProtectedItemExtendedInfoOutputWithContext(context.Context) DPMProtectedItemExtendedInfoOutput
}

// Additional information of DPM Protected item.
type DPMProtectedItemExtendedInfoArgs struct {
	// Used Disk storage in bytes.
	DiskStorageUsedInBytes pulumi.StringPtrInput `pulumi:"diskStorageUsedInBytes"`
	// To check if backup item is collocated.
	IsCollocated pulumi.BoolPtrInput `pulumi:"isCollocated"`
	// To check if backup item is cloud protected.
	IsPresentOnCloud pulumi.BoolPtrInput `pulumi:"isPresentOnCloud"`
	// Last backup status information on backup item.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Last refresh time on backup item.
	LastRefreshedAt pulumi.StringPtrInput `pulumi:"lastRefreshedAt"`
	// Oldest cloud recovery point time.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// latest disk recovery point time.
	OnPremiseLatestRecoveryPoint pulumi.StringPtrInput `pulumi:"onPremiseLatestRecoveryPoint"`
	// Oldest disk recovery point time.
	OnPremiseOldestRecoveryPoint pulumi.StringPtrInput `pulumi:"onPremiseOldestRecoveryPoint"`
	// disk recovery point count.
	OnPremiseRecoveryPointCount pulumi.IntPtrInput `pulumi:"onPremiseRecoveryPointCount"`
	// Attribute to provide information on various DBs.
	ProtectableObjectLoadPath pulumi.StringMapInput `pulumi:"protectableObjectLoadPath"`
	// To check if backup item is disk protected.
	Protected pulumi.BoolPtrInput `pulumi:"protected"`
	// Protection group name of the backup item.
	ProtectionGroupName pulumi.StringPtrInput `pulumi:"protectionGroupName"`
	// cloud recovery point count.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
	// total Disk storage in bytes.
	TotalDiskStorageSizeInBytes pulumi.StringPtrInput `pulumi:"totalDiskStorageSizeInBytes"`
}

func (DPMProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMProtectedItemExtendedInfo)(nil)).Elem()
}

func (i DPMProtectedItemExtendedInfoArgs) ToDPMProtectedItemExtendedInfoOutput() DPMProtectedItemExtendedInfoOutput {
	return i.ToDPMProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i DPMProtectedItemExtendedInfoArgs) ToDPMProtectedItemExtendedInfoOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMProtectedItemExtendedInfoOutput)
}

func (i DPMProtectedItemExtendedInfoArgs) ToDPMProtectedItemExtendedInfoPtrOutput() DPMProtectedItemExtendedInfoPtrOutput {
	return i.ToDPMProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i DPMProtectedItemExtendedInfoArgs) ToDPMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMProtectedItemExtendedInfoOutput).ToDPMProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// DPMProtectedItemExtendedInfoPtrInput is an input type that accepts DPMProtectedItemExtendedInfoArgs, DPMProtectedItemExtendedInfoPtr and DPMProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `DPMProtectedItemExtendedInfoPtrInput` via:
//
//	        DPMProtectedItemExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type DPMProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToDPMProtectedItemExtendedInfoPtrOutput() DPMProtectedItemExtendedInfoPtrOutput
	ToDPMProtectedItemExtendedInfoPtrOutputWithContext(context.Context) DPMProtectedItemExtendedInfoPtrOutput
}

type dpmprotectedItemExtendedInfoPtrType DPMProtectedItemExtendedInfoArgs

func DPMProtectedItemExtendedInfoPtr(v *DPMProtectedItemExtendedInfoArgs) DPMProtectedItemExtendedInfoPtrInput {
	return (*dpmprotectedItemExtendedInfoPtrType)(v)
}

func (*dpmprotectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *dpmprotectedItemExtendedInfoPtrType) ToDPMProtectedItemExtendedInfoPtrOutput() DPMProtectedItemExtendedInfoPtrOutput {
	return i.ToDPMProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *dpmprotectedItemExtendedInfoPtrType) ToDPMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMProtectedItemExtendedInfoPtrOutput)
}

// Additional information of DPM Protected item.
type DPMProtectedItemExtendedInfoOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMProtectedItemExtendedInfo)(nil)).Elem()
}

func (o DPMProtectedItemExtendedInfoOutput) ToDPMProtectedItemExtendedInfoOutput() DPMProtectedItemExtendedInfoOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoOutput) ToDPMProtectedItemExtendedInfoOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoOutput) ToDPMProtectedItemExtendedInfoPtrOutput() DPMProtectedItemExtendedInfoPtrOutput {
	return o.ToDPMProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (o DPMProtectedItemExtendedInfoOutput) ToDPMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DPMProtectedItemExtendedInfo) *DPMProtectedItemExtendedInfo {
		return &v
	}).(DPMProtectedItemExtendedInfoPtrOutput)
}

// Used Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoOutput) DiskStorageUsedInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *string { return v.DiskStorageUsedInBytes }).(pulumi.StringPtrOutput)
}

// To check if backup item is collocated.
func (o DPMProtectedItemExtendedInfoOutput) IsCollocated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *bool { return v.IsCollocated }).(pulumi.BoolPtrOutput)
}

// To check if backup item is cloud protected.
func (o DPMProtectedItemExtendedInfoOutput) IsPresentOnCloud() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *bool { return v.IsPresentOnCloud }).(pulumi.BoolPtrOutput)
}

// Last backup status information on backup item.
func (o DPMProtectedItemExtendedInfoOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Last refresh time on backup item.
func (o DPMProtectedItemExtendedInfoOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

// Oldest cloud recovery point time.
func (o DPMProtectedItemExtendedInfoOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// latest disk recovery point time.
func (o DPMProtectedItemExtendedInfoOutput) OnPremiseLatestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *string { return v.OnPremiseLatestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Oldest disk recovery point time.
func (o DPMProtectedItemExtendedInfoOutput) OnPremiseOldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *string { return v.OnPremiseOldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// disk recovery point count.
func (o DPMProtectedItemExtendedInfoOutput) OnPremiseRecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *int { return v.OnPremiseRecoveryPointCount }).(pulumi.IntPtrOutput)
}

// Attribute to provide information on various DBs.
func (o DPMProtectedItemExtendedInfoOutput) ProtectableObjectLoadPath() pulumi.StringMapOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) map[string]string { return v.ProtectableObjectLoadPath }).(pulumi.StringMapOutput)
}

// To check if backup item is disk protected.
func (o DPMProtectedItemExtendedInfoOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *bool { return v.Protected }).(pulumi.BoolPtrOutput)
}

// Protection group name of the backup item.
func (o DPMProtectedItemExtendedInfoOutput) ProtectionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *string { return v.ProtectionGroupName }).(pulumi.StringPtrOutput)
}

// cloud recovery point count.
func (o DPMProtectedItemExtendedInfoOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

// total Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoOutput) TotalDiskStorageSizeInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *string { return v.TotalDiskStorageSizeInBytes }).(pulumi.StringPtrOutput)
}

type DPMProtectedItemExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMProtectedItemExtendedInfo)(nil)).Elem()
}

func (o DPMProtectedItemExtendedInfoPtrOutput) ToDPMProtectedItemExtendedInfoPtrOutput() DPMProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoPtrOutput) ToDPMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoPtrOutput) Elem() DPMProtectedItemExtendedInfoOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) DPMProtectedItemExtendedInfo {
		if v != nil {
			return *v
		}
		var ret DPMProtectedItemExtendedInfo
		return ret
	}).(DPMProtectedItemExtendedInfoOutput)
}

// Used Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoPtrOutput) DiskStorageUsedInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.DiskStorageUsedInBytes
	}).(pulumi.StringPtrOutput)
}

// To check if backup item is collocated.
func (o DPMProtectedItemExtendedInfoPtrOutput) IsCollocated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *bool {
		if v == nil {
			return nil
		}
		return v.IsCollocated
	}).(pulumi.BoolPtrOutput)
}

// To check if backup item is cloud protected.
func (o DPMProtectedItemExtendedInfoPtrOutput) IsPresentOnCloud() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *bool {
		if v == nil {
			return nil
		}
		return v.IsPresentOnCloud
	}).(pulumi.BoolPtrOutput)
}

// Last backup status information on backup item.
func (o DPMProtectedItemExtendedInfoPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Last refresh time on backup item.
func (o DPMProtectedItemExtendedInfoPtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// Oldest cloud recovery point time.
func (o DPMProtectedItemExtendedInfoPtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// latest disk recovery point time.
func (o DPMProtectedItemExtendedInfoPtrOutput) OnPremiseLatestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OnPremiseLatestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Oldest disk recovery point time.
func (o DPMProtectedItemExtendedInfoPtrOutput) OnPremiseOldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OnPremiseOldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// disk recovery point count.
func (o DPMProtectedItemExtendedInfoPtrOutput) OnPremiseRecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *int {
		if v == nil {
			return nil
		}
		return v.OnPremiseRecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Attribute to provide information on various DBs.
func (o DPMProtectedItemExtendedInfoPtrOutput) ProtectableObjectLoadPath() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) map[string]string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectLoadPath
	}).(pulumi.StringMapOutput)
}

// To check if backup item is disk protected.
func (o DPMProtectedItemExtendedInfoPtrOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Protected
	}).(pulumi.BoolPtrOutput)
}

// Protection group name of the backup item.
func (o DPMProtectedItemExtendedInfoPtrOutput) ProtectionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionGroupName
	}).(pulumi.StringPtrOutput)
}

// cloud recovery point count.
func (o DPMProtectedItemExtendedInfoPtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// total Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoPtrOutput) TotalDiskStorageSizeInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.TotalDiskStorageSizeInBytes
	}).(pulumi.StringPtrOutput)
}

// Additional information of DPM Protected item.
type DPMProtectedItemExtendedInfoResponse struct {
	// Used Disk storage in bytes.
	DiskStorageUsedInBytes *string `pulumi:"diskStorageUsedInBytes"`
	// To check if backup item is collocated.
	IsCollocated *bool `pulumi:"isCollocated"`
	// To check if backup item is cloud protected.
	IsPresentOnCloud *bool `pulumi:"isPresentOnCloud"`
	// Last backup status information on backup item.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Last refresh time on backup item.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// Oldest cloud recovery point time.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// latest disk recovery point time.
	OnPremiseLatestRecoveryPoint *string `pulumi:"onPremiseLatestRecoveryPoint"`
	// Oldest disk recovery point time.
	OnPremiseOldestRecoveryPoint *string `pulumi:"onPremiseOldestRecoveryPoint"`
	// disk recovery point count.
	OnPremiseRecoveryPointCount *int `pulumi:"onPremiseRecoveryPointCount"`
	// Attribute to provide information on various DBs.
	ProtectableObjectLoadPath map[string]string `pulumi:"protectableObjectLoadPath"`
	// To check if backup item is disk protected.
	Protected *bool `pulumi:"protected"`
	// Protection group name of the backup item.
	ProtectionGroupName *string `pulumi:"protectionGroupName"`
	// cloud recovery point count.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
	// total Disk storage in bytes.
	TotalDiskStorageSizeInBytes *string `pulumi:"totalDiskStorageSizeInBytes"`
}

// Additional information of DPM Protected item.
type DPMProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o DPMProtectedItemExtendedInfoResponseOutput) ToDPMProtectedItemExtendedInfoResponseOutput() DPMProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoResponseOutput) ToDPMProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoResponseOutput {
	return o
}

// Used Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoResponseOutput) DiskStorageUsedInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.DiskStorageUsedInBytes }).(pulumi.StringPtrOutput)
}

// To check if backup item is collocated.
func (o DPMProtectedItemExtendedInfoResponseOutput) IsCollocated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *bool { return v.IsCollocated }).(pulumi.BoolPtrOutput)
}

// To check if backup item is cloud protected.
func (o DPMProtectedItemExtendedInfoResponseOutput) IsPresentOnCloud() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *bool { return v.IsPresentOnCloud }).(pulumi.BoolPtrOutput)
}

// Last backup status information on backup item.
func (o DPMProtectedItemExtendedInfoResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Last refresh time on backup item.
func (o DPMProtectedItemExtendedInfoResponseOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

// Oldest cloud recovery point time.
func (o DPMProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// latest disk recovery point time.
func (o DPMProtectedItemExtendedInfoResponseOutput) OnPremiseLatestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.OnPremiseLatestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Oldest disk recovery point time.
func (o DPMProtectedItemExtendedInfoResponseOutput) OnPremiseOldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.OnPremiseOldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// disk recovery point count.
func (o DPMProtectedItemExtendedInfoResponseOutput) OnPremiseRecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *int { return v.OnPremiseRecoveryPointCount }).(pulumi.IntPtrOutput)
}

// Attribute to provide information on various DBs.
func (o DPMProtectedItemExtendedInfoResponseOutput) ProtectableObjectLoadPath() pulumi.StringMapOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) map[string]string { return v.ProtectableObjectLoadPath }).(pulumi.StringMapOutput)
}

// To check if backup item is disk protected.
func (o DPMProtectedItemExtendedInfoResponseOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *bool { return v.Protected }).(pulumi.BoolPtrOutput)
}

// Protection group name of the backup item.
func (o DPMProtectedItemExtendedInfoResponseOutput) ProtectionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.ProtectionGroupName }).(pulumi.StringPtrOutput)
}

// cloud recovery point count.
func (o DPMProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

// total Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoResponseOutput) TotalDiskStorageSizeInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.TotalDiskStorageSizeInBytes }).(pulumi.StringPtrOutput)
}

type DPMProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o DPMProtectedItemExtendedInfoResponsePtrOutput) ToDPMProtectedItemExtendedInfoResponsePtrOutput() DPMProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoResponsePtrOutput) ToDPMProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoResponsePtrOutput) Elem() DPMProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) DPMProtectedItemExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret DPMProtectedItemExtendedInfoResponse
		return ret
	}).(DPMProtectedItemExtendedInfoResponseOutput)
}

// Used Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) DiskStorageUsedInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiskStorageUsedInBytes
	}).(pulumi.StringPtrOutput)
}

// To check if backup item is collocated.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) IsCollocated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCollocated
	}).(pulumi.BoolPtrOutput)
}

// To check if backup item is cloud protected.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) IsPresentOnCloud() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsPresentOnCloud
	}).(pulumi.BoolPtrOutput)
}

// Last backup status information on backup item.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Last refresh time on backup item.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// Oldest cloud recovery point time.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// latest disk recovery point time.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) OnPremiseLatestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OnPremiseLatestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Oldest disk recovery point time.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) OnPremiseOldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OnPremiseOldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// disk recovery point count.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) OnPremiseRecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.OnPremiseRecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Attribute to provide information on various DBs.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) ProtectableObjectLoadPath() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectLoadPath
	}).(pulumi.StringMapOutput)
}

// To check if backup item is disk protected.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Protected
	}).(pulumi.BoolPtrOutput)
}

// Protection group name of the backup item.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) ProtectionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionGroupName
	}).(pulumi.StringPtrOutput)
}

// cloud recovery point count.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// total Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) TotalDiskStorageSizeInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.TotalDiskStorageSizeInBytes
	}).(pulumi.StringPtrOutput)
}

// Additional information on Backup engine specific backup item.
type DPMProtectedItemResponse struct {
	// Backup Management server protecting this backup item
	BackupEngineName *string `pulumi:"backupEngineName"`
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Extended info of the backup item.
	ExtendedInfo *DPMProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the managed item
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'DPMProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Protection state of the backup engine
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Additional information on Backup engine specific backup item.
type DPMProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMProtectedItemResponse)(nil)).Elem()
}

func (o DPMProtectedItemResponseOutput) ToDPMProtectedItemResponseOutput() DPMProtectedItemResponseOutput {
	return o
}

func (o DPMProtectedItemResponseOutput) ToDPMProtectedItemResponseOutputWithContext(ctx context.Context) DPMProtectedItemResponseOutput {
	return o
}

// Backup Management server protecting this backup item
func (o DPMProtectedItemResponseOutput) BackupEngineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.BackupEngineName }).(pulumi.StringPtrOutput)
}

// Type of backup management for the backed up item.
func (o DPMProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o DPMProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o DPMProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o DPMProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o DPMProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o DPMProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Extended info of the backup item.
func (o DPMProtectedItemResponseOutput) ExtendedInfo() DPMProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *DPMProtectedItemExtendedInfoResponse { return v.ExtendedInfo }).(DPMProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the managed item
func (o DPMProtectedItemResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o DPMProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o DPMProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o DPMProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o DPMProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o DPMProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o DPMProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o DPMProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'DPMProtectedItem'.
func (o DPMProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Protection state of the backup engine
func (o DPMProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o DPMProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o DPMProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o DPMProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o DPMProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o DPMProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Daily retention format.
type DailyRetentionFormat struct {
	// List of days of the month.
	DaysOfTheMonth []Day `pulumi:"daysOfTheMonth"`
}

// DailyRetentionFormatInput is an input type that accepts DailyRetentionFormatArgs and DailyRetentionFormatOutput values.
// You can construct a concrete instance of `DailyRetentionFormatInput` via:
//
//	DailyRetentionFormatArgs{...}
type DailyRetentionFormatInput interface {
	pulumi.Input

	ToDailyRetentionFormatOutput() DailyRetentionFormatOutput
	ToDailyRetentionFormatOutputWithContext(context.Context) DailyRetentionFormatOutput
}

// Daily retention format.
type DailyRetentionFormatArgs struct {
	// List of days of the month.
	DaysOfTheMonth DayArrayInput `pulumi:"daysOfTheMonth"`
}

func (DailyRetentionFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyRetentionFormat)(nil)).Elem()
}

func (i DailyRetentionFormatArgs) ToDailyRetentionFormatOutput() DailyRetentionFormatOutput {
	return i.ToDailyRetentionFormatOutputWithContext(context.Background())
}

func (i DailyRetentionFormatArgs) ToDailyRetentionFormatOutputWithContext(ctx context.Context) DailyRetentionFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionFormatOutput)
}

func (i DailyRetentionFormatArgs) ToDailyRetentionFormatPtrOutput() DailyRetentionFormatPtrOutput {
	return i.ToDailyRetentionFormatPtrOutputWithContext(context.Background())
}

func (i DailyRetentionFormatArgs) ToDailyRetentionFormatPtrOutputWithContext(ctx context.Context) DailyRetentionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionFormatOutput).ToDailyRetentionFormatPtrOutputWithContext(ctx)
}

// DailyRetentionFormatPtrInput is an input type that accepts DailyRetentionFormatArgs, DailyRetentionFormatPtr and DailyRetentionFormatPtrOutput values.
// You can construct a concrete instance of `DailyRetentionFormatPtrInput` via:
//
//	        DailyRetentionFormatArgs{...}
//
//	or:
//
//	        nil
type DailyRetentionFormatPtrInput interface {
	pulumi.Input

	ToDailyRetentionFormatPtrOutput() DailyRetentionFormatPtrOutput
	ToDailyRetentionFormatPtrOutputWithContext(context.Context) DailyRetentionFormatPtrOutput
}

type dailyRetentionFormatPtrType DailyRetentionFormatArgs

func DailyRetentionFormatPtr(v *DailyRetentionFormatArgs) DailyRetentionFormatPtrInput {
	return (*dailyRetentionFormatPtrType)(v)
}

func (*dailyRetentionFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyRetentionFormat)(nil)).Elem()
}

func (i *dailyRetentionFormatPtrType) ToDailyRetentionFormatPtrOutput() DailyRetentionFormatPtrOutput {
	return i.ToDailyRetentionFormatPtrOutputWithContext(context.Background())
}

func (i *dailyRetentionFormatPtrType) ToDailyRetentionFormatPtrOutputWithContext(ctx context.Context) DailyRetentionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionFormatPtrOutput)
}

// Daily retention format.
type DailyRetentionFormatOutput struct{ *pulumi.OutputState }

func (DailyRetentionFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyRetentionFormat)(nil)).Elem()
}

func (o DailyRetentionFormatOutput) ToDailyRetentionFormatOutput() DailyRetentionFormatOutput {
	return o
}

func (o DailyRetentionFormatOutput) ToDailyRetentionFormatOutputWithContext(ctx context.Context) DailyRetentionFormatOutput {
	return o
}

func (o DailyRetentionFormatOutput) ToDailyRetentionFormatPtrOutput() DailyRetentionFormatPtrOutput {
	return o.ToDailyRetentionFormatPtrOutputWithContext(context.Background())
}

func (o DailyRetentionFormatOutput) ToDailyRetentionFormatPtrOutputWithContext(ctx context.Context) DailyRetentionFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DailyRetentionFormat) *DailyRetentionFormat {
		return &v
	}).(DailyRetentionFormatPtrOutput)
}

// List of days of the month.
func (o DailyRetentionFormatOutput) DaysOfTheMonth() DayArrayOutput {
	return o.ApplyT(func(v DailyRetentionFormat) []Day { return v.DaysOfTheMonth }).(DayArrayOutput)
}

type DailyRetentionFormatPtrOutput struct{ *pulumi.OutputState }

func (DailyRetentionFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyRetentionFormat)(nil)).Elem()
}

func (o DailyRetentionFormatPtrOutput) ToDailyRetentionFormatPtrOutput() DailyRetentionFormatPtrOutput {
	return o
}

func (o DailyRetentionFormatPtrOutput) ToDailyRetentionFormatPtrOutputWithContext(ctx context.Context) DailyRetentionFormatPtrOutput {
	return o
}

func (o DailyRetentionFormatPtrOutput) Elem() DailyRetentionFormatOutput {
	return o.ApplyT(func(v *DailyRetentionFormat) DailyRetentionFormat {
		if v != nil {
			return *v
		}
		var ret DailyRetentionFormat
		return ret
	}).(DailyRetentionFormatOutput)
}

// List of days of the month.
func (o DailyRetentionFormatPtrOutput) DaysOfTheMonth() DayArrayOutput {
	return o.ApplyT(func(v *DailyRetentionFormat) []Day {
		if v == nil {
			return nil
		}
		return v.DaysOfTheMonth
	}).(DayArrayOutput)
}

// Daily retention format.
type DailyRetentionFormatResponse struct {
	// List of days of the month.
	DaysOfTheMonth []DayResponse `pulumi:"daysOfTheMonth"`
}

// Daily retention format.
type DailyRetentionFormatResponseOutput struct{ *pulumi.OutputState }

func (DailyRetentionFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyRetentionFormatResponse)(nil)).Elem()
}

func (o DailyRetentionFormatResponseOutput) ToDailyRetentionFormatResponseOutput() DailyRetentionFormatResponseOutput {
	return o
}

func (o DailyRetentionFormatResponseOutput) ToDailyRetentionFormatResponseOutputWithContext(ctx context.Context) DailyRetentionFormatResponseOutput {
	return o
}

// List of days of the month.
func (o DailyRetentionFormatResponseOutput) DaysOfTheMonth() DayResponseArrayOutput {
	return o.ApplyT(func(v DailyRetentionFormatResponse) []DayResponse { return v.DaysOfTheMonth }).(DayResponseArrayOutput)
}

type DailyRetentionFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (DailyRetentionFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyRetentionFormatResponse)(nil)).Elem()
}

func (o DailyRetentionFormatResponsePtrOutput) ToDailyRetentionFormatResponsePtrOutput() DailyRetentionFormatResponsePtrOutput {
	return o
}

func (o DailyRetentionFormatResponsePtrOutput) ToDailyRetentionFormatResponsePtrOutputWithContext(ctx context.Context) DailyRetentionFormatResponsePtrOutput {
	return o
}

func (o DailyRetentionFormatResponsePtrOutput) Elem() DailyRetentionFormatResponseOutput {
	return o.ApplyT(func(v *DailyRetentionFormatResponse) DailyRetentionFormatResponse {
		if v != nil {
			return *v
		}
		var ret DailyRetentionFormatResponse
		return ret
	}).(DailyRetentionFormatResponseOutput)
}

// List of days of the month.
func (o DailyRetentionFormatResponsePtrOutput) DaysOfTheMonth() DayResponseArrayOutput {
	return o.ApplyT(func(v *DailyRetentionFormatResponse) []DayResponse {
		if v == nil {
			return nil
		}
		return v.DaysOfTheMonth
	}).(DayResponseArrayOutput)
}

// Daily retention schedule.
type DailyRetentionSchedule struct {
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// DailyRetentionScheduleInput is an input type that accepts DailyRetentionScheduleArgs and DailyRetentionScheduleOutput values.
// You can construct a concrete instance of `DailyRetentionScheduleInput` via:
//
//	DailyRetentionScheduleArgs{...}
type DailyRetentionScheduleInput interface {
	pulumi.Input

	ToDailyRetentionScheduleOutput() DailyRetentionScheduleOutput
	ToDailyRetentionScheduleOutputWithContext(context.Context) DailyRetentionScheduleOutput
}

// Daily retention schedule.
type DailyRetentionScheduleArgs struct {
	// Retention duration of retention Policy.
	RetentionDuration RetentionDurationPtrInput `pulumi:"retentionDuration"`
	// Retention times of retention policy.
	RetentionTimes pulumi.StringArrayInput `pulumi:"retentionTimes"`
}

func (DailyRetentionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyRetentionSchedule)(nil)).Elem()
}

func (i DailyRetentionScheduleArgs) ToDailyRetentionScheduleOutput() DailyRetentionScheduleOutput {
	return i.ToDailyRetentionScheduleOutputWithContext(context.Background())
}

func (i DailyRetentionScheduleArgs) ToDailyRetentionScheduleOutputWithContext(ctx context.Context) DailyRetentionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionScheduleOutput)
}

func (i DailyRetentionScheduleArgs) ToDailyRetentionSchedulePtrOutput() DailyRetentionSchedulePtrOutput {
	return i.ToDailyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i DailyRetentionScheduleArgs) ToDailyRetentionSchedulePtrOutputWithContext(ctx context.Context) DailyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionScheduleOutput).ToDailyRetentionSchedulePtrOutputWithContext(ctx)
}

// DailyRetentionSchedulePtrInput is an input type that accepts DailyRetentionScheduleArgs, DailyRetentionSchedulePtr and DailyRetentionSchedulePtrOutput values.
// You can construct a concrete instance of `DailyRetentionSchedulePtrInput` via:
//
//	        DailyRetentionScheduleArgs{...}
//
//	or:
//
//	        nil
type DailyRetentionSchedulePtrInput interface {
	pulumi.Input

	ToDailyRetentionSchedulePtrOutput() DailyRetentionSchedulePtrOutput
	ToDailyRetentionSchedulePtrOutputWithContext(context.Context) DailyRetentionSchedulePtrOutput
}

type dailyRetentionSchedulePtrType DailyRetentionScheduleArgs

func DailyRetentionSchedulePtr(v *DailyRetentionScheduleArgs) DailyRetentionSchedulePtrInput {
	return (*dailyRetentionSchedulePtrType)(v)
}

func (*dailyRetentionSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyRetentionSchedule)(nil)).Elem()
}

func (i *dailyRetentionSchedulePtrType) ToDailyRetentionSchedulePtrOutput() DailyRetentionSchedulePtrOutput {
	return i.ToDailyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i *dailyRetentionSchedulePtrType) ToDailyRetentionSchedulePtrOutputWithContext(ctx context.Context) DailyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionSchedulePtrOutput)
}

// Daily retention schedule.
type DailyRetentionScheduleOutput struct{ *pulumi.OutputState }

func (DailyRetentionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyRetentionSchedule)(nil)).Elem()
}

func (o DailyRetentionScheduleOutput) ToDailyRetentionScheduleOutput() DailyRetentionScheduleOutput {
	return o
}

func (o DailyRetentionScheduleOutput) ToDailyRetentionScheduleOutputWithContext(ctx context.Context) DailyRetentionScheduleOutput {
	return o
}

func (o DailyRetentionScheduleOutput) ToDailyRetentionSchedulePtrOutput() DailyRetentionSchedulePtrOutput {
	return o.ToDailyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (o DailyRetentionScheduleOutput) ToDailyRetentionSchedulePtrOutputWithContext(ctx context.Context) DailyRetentionSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DailyRetentionSchedule) *DailyRetentionSchedule {
		return &v
	}).(DailyRetentionSchedulePtrOutput)
}

// Retention duration of retention Policy.
func (o DailyRetentionScheduleOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v DailyRetentionSchedule) *RetentionDuration { return v.RetentionDuration }).(RetentionDurationPtrOutput)
}

// Retention times of retention policy.
func (o DailyRetentionScheduleOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DailyRetentionSchedule) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type DailyRetentionSchedulePtrOutput struct{ *pulumi.OutputState }

func (DailyRetentionSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyRetentionSchedule)(nil)).Elem()
}

func (o DailyRetentionSchedulePtrOutput) ToDailyRetentionSchedulePtrOutput() DailyRetentionSchedulePtrOutput {
	return o
}

func (o DailyRetentionSchedulePtrOutput) ToDailyRetentionSchedulePtrOutputWithContext(ctx context.Context) DailyRetentionSchedulePtrOutput {
	return o
}

func (o DailyRetentionSchedulePtrOutput) Elem() DailyRetentionScheduleOutput {
	return o.ApplyT(func(v *DailyRetentionSchedule) DailyRetentionSchedule {
		if v != nil {
			return *v
		}
		var ret DailyRetentionSchedule
		return ret
	}).(DailyRetentionScheduleOutput)
}

// Retention duration of retention Policy.
func (o DailyRetentionSchedulePtrOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v *DailyRetentionSchedule) *RetentionDuration {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationPtrOutput)
}

// Retention times of retention policy.
func (o DailyRetentionSchedulePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DailyRetentionSchedule) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

// Daily retention schedule.
type DailyRetentionScheduleResponse struct {
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Daily retention schedule.
type DailyRetentionScheduleResponseOutput struct{ *pulumi.OutputState }

func (DailyRetentionScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyRetentionScheduleResponse)(nil)).Elem()
}

func (o DailyRetentionScheduleResponseOutput) ToDailyRetentionScheduleResponseOutput() DailyRetentionScheduleResponseOutput {
	return o
}

func (o DailyRetentionScheduleResponseOutput) ToDailyRetentionScheduleResponseOutputWithContext(ctx context.Context) DailyRetentionScheduleResponseOutput {
	return o
}

// Retention duration of retention Policy.
func (o DailyRetentionScheduleResponseOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v DailyRetentionScheduleResponse) *RetentionDurationResponse { return v.RetentionDuration }).(RetentionDurationResponsePtrOutput)
}

// Retention times of retention policy.
func (o DailyRetentionScheduleResponseOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DailyRetentionScheduleResponse) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type DailyRetentionScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (DailyRetentionScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyRetentionScheduleResponse)(nil)).Elem()
}

func (o DailyRetentionScheduleResponsePtrOutput) ToDailyRetentionScheduleResponsePtrOutput() DailyRetentionScheduleResponsePtrOutput {
	return o
}

func (o DailyRetentionScheduleResponsePtrOutput) ToDailyRetentionScheduleResponsePtrOutputWithContext(ctx context.Context) DailyRetentionScheduleResponsePtrOutput {
	return o
}

func (o DailyRetentionScheduleResponsePtrOutput) Elem() DailyRetentionScheduleResponseOutput {
	return o.ApplyT(func(v *DailyRetentionScheduleResponse) DailyRetentionScheduleResponse {
		if v != nil {
			return *v
		}
		var ret DailyRetentionScheduleResponse
		return ret
	}).(DailyRetentionScheduleResponseOutput)
}

// Retention duration of retention Policy.
func (o DailyRetentionScheduleResponsePtrOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v *DailyRetentionScheduleResponse) *RetentionDurationResponse {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationResponsePtrOutput)
}

// Retention times of retention policy.
func (o DailyRetentionScheduleResponsePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DailyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

type DailySchedule struct {
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
}

// DailyScheduleInput is an input type that accepts DailyScheduleArgs and DailyScheduleOutput values.
// You can construct a concrete instance of `DailyScheduleInput` via:
//
//	DailyScheduleArgs{...}
type DailyScheduleInput interface {
	pulumi.Input

	ToDailyScheduleOutput() DailyScheduleOutput
	ToDailyScheduleOutputWithContext(context.Context) DailyScheduleOutput
}

type DailyScheduleArgs struct {
	// List of times of day this schedule has to be run.
	ScheduleRunTimes pulumi.StringArrayInput `pulumi:"scheduleRunTimes"`
}

func (DailyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DailySchedule)(nil)).Elem()
}

func (i DailyScheduleArgs) ToDailyScheduleOutput() DailyScheduleOutput {
	return i.ToDailyScheduleOutputWithContext(context.Background())
}

func (i DailyScheduleArgs) ToDailyScheduleOutputWithContext(ctx context.Context) DailyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyScheduleOutput)
}

func (i DailyScheduleArgs) ToDailySchedulePtrOutput() DailySchedulePtrOutput {
	return i.ToDailySchedulePtrOutputWithContext(context.Background())
}

func (i DailyScheduleArgs) ToDailySchedulePtrOutputWithContext(ctx context.Context) DailySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyScheduleOutput).ToDailySchedulePtrOutputWithContext(ctx)
}

// DailySchedulePtrInput is an input type that accepts DailyScheduleArgs, DailySchedulePtr and DailySchedulePtrOutput values.
// You can construct a concrete instance of `DailySchedulePtrInput` via:
//
//	        DailyScheduleArgs{...}
//
//	or:
//
//	        nil
type DailySchedulePtrInput interface {
	pulumi.Input

	ToDailySchedulePtrOutput() DailySchedulePtrOutput
	ToDailySchedulePtrOutputWithContext(context.Context) DailySchedulePtrOutput
}

type dailySchedulePtrType DailyScheduleArgs

func DailySchedulePtr(v *DailyScheduleArgs) DailySchedulePtrInput {
	return (*dailySchedulePtrType)(v)
}

func (*dailySchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DailySchedule)(nil)).Elem()
}

func (i *dailySchedulePtrType) ToDailySchedulePtrOutput() DailySchedulePtrOutput {
	return i.ToDailySchedulePtrOutputWithContext(context.Background())
}

func (i *dailySchedulePtrType) ToDailySchedulePtrOutputWithContext(ctx context.Context) DailySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailySchedulePtrOutput)
}

type DailyScheduleOutput struct{ *pulumi.OutputState }

func (DailyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DailySchedule)(nil)).Elem()
}

func (o DailyScheduleOutput) ToDailyScheduleOutput() DailyScheduleOutput {
	return o
}

func (o DailyScheduleOutput) ToDailyScheduleOutputWithContext(ctx context.Context) DailyScheduleOutput {
	return o
}

func (o DailyScheduleOutput) ToDailySchedulePtrOutput() DailySchedulePtrOutput {
	return o.ToDailySchedulePtrOutputWithContext(context.Background())
}

func (o DailyScheduleOutput) ToDailySchedulePtrOutputWithContext(ctx context.Context) DailySchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DailySchedule) *DailySchedule {
		return &v
	}).(DailySchedulePtrOutput)
}

// List of times of day this schedule has to be run.
func (o DailyScheduleOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DailySchedule) []string { return v.ScheduleRunTimes }).(pulumi.StringArrayOutput)
}

type DailySchedulePtrOutput struct{ *pulumi.OutputState }

func (DailySchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DailySchedule)(nil)).Elem()
}

func (o DailySchedulePtrOutput) ToDailySchedulePtrOutput() DailySchedulePtrOutput {
	return o
}

func (o DailySchedulePtrOutput) ToDailySchedulePtrOutputWithContext(ctx context.Context) DailySchedulePtrOutput {
	return o
}

func (o DailySchedulePtrOutput) Elem() DailyScheduleOutput {
	return o.ApplyT(func(v *DailySchedule) DailySchedule {
		if v != nil {
			return *v
		}
		var ret DailySchedule
		return ret
	}).(DailyScheduleOutput)
}

// List of times of day this schedule has to be run.
func (o DailySchedulePtrOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DailySchedule) []string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunTimes
	}).(pulumi.StringArrayOutput)
}

type DailyScheduleResponse struct {
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
}

type DailyScheduleResponseOutput struct{ *pulumi.OutputState }

func (DailyScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyScheduleResponse)(nil)).Elem()
}

func (o DailyScheduleResponseOutput) ToDailyScheduleResponseOutput() DailyScheduleResponseOutput {
	return o
}

func (o DailyScheduleResponseOutput) ToDailyScheduleResponseOutputWithContext(ctx context.Context) DailyScheduleResponseOutput {
	return o
}

// List of times of day this schedule has to be run.
func (o DailyScheduleResponseOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DailyScheduleResponse) []string { return v.ScheduleRunTimes }).(pulumi.StringArrayOutput)
}

type DailyScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (DailyScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyScheduleResponse)(nil)).Elem()
}

func (o DailyScheduleResponsePtrOutput) ToDailyScheduleResponsePtrOutput() DailyScheduleResponsePtrOutput {
	return o
}

func (o DailyScheduleResponsePtrOutput) ToDailyScheduleResponsePtrOutputWithContext(ctx context.Context) DailyScheduleResponsePtrOutput {
	return o
}

func (o DailyScheduleResponsePtrOutput) Elem() DailyScheduleResponseOutput {
	return o.ApplyT(func(v *DailyScheduleResponse) DailyScheduleResponse {
		if v != nil {
			return *v
		}
		var ret DailyScheduleResponse
		return ret
	}).(DailyScheduleResponseOutput)
}

// List of times of day this schedule has to be run.
func (o DailyScheduleResponsePtrOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DailyScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunTimes
	}).(pulumi.StringArrayOutput)
}

// The datastore details of the MT.
type DataStoreResponse struct {
	// The capacity of data store in GBs.
	Capacity *string `pulumi:"capacity"`
	// The free space of data store in GBs.
	FreeSpace *string `pulumi:"freeSpace"`
	// The symbolic name of data store.
	SymbolicName *string `pulumi:"symbolicName"`
	// The type of data store.
	Type *string `pulumi:"type"`
	// The uuid of data store.
	Uuid *string `pulumi:"uuid"`
}

// The datastore details of the MT.
type DataStoreResponseOutput struct{ *pulumi.OutputState }

func (DataStoreResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataStoreResponse)(nil)).Elem()
}

func (o DataStoreResponseOutput) ToDataStoreResponseOutput() DataStoreResponseOutput {
	return o
}

func (o DataStoreResponseOutput) ToDataStoreResponseOutputWithContext(ctx context.Context) DataStoreResponseOutput {
	return o
}

// The capacity of data store in GBs.
func (o DataStoreResponseOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataStoreResponse) *string { return v.Capacity }).(pulumi.StringPtrOutput)
}

// The free space of data store in GBs.
func (o DataStoreResponseOutput) FreeSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataStoreResponse) *string { return v.FreeSpace }).(pulumi.StringPtrOutput)
}

// The symbolic name of data store.
func (o DataStoreResponseOutput) SymbolicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataStoreResponse) *string { return v.SymbolicName }).(pulumi.StringPtrOutput)
}

// The type of data store.
func (o DataStoreResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataStoreResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The uuid of data store.
func (o DataStoreResponseOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataStoreResponse) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type DataStoreResponseArrayOutput struct{ *pulumi.OutputState }

func (DataStoreResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataStoreResponse)(nil)).Elem()
}

func (o DataStoreResponseArrayOutput) ToDataStoreResponseArrayOutput() DataStoreResponseArrayOutput {
	return o
}

func (o DataStoreResponseArrayOutput) ToDataStoreResponseArrayOutputWithContext(ctx context.Context) DataStoreResponseArrayOutput {
	return o
}

func (o DataStoreResponseArrayOutput) Index(i pulumi.IntInput) DataStoreResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataStoreResponse {
		return vs[0].([]DataStoreResponse)[vs[1].(int)]
	}).(DataStoreResponseOutput)
}

// Details of the appliance resource.
type DataStoreUtilizationDetailsResponse struct {
	// The datastore name.
	DataStoreName string `pulumi:"dataStoreName"`
	// The total snapshots created for server migration in the datastore.
	TotalSnapshotsCreated float64 `pulumi:"totalSnapshotsCreated"`
	// The total count of snapshots supported by the datastore.
	TotalSnapshotsSupported float64 `pulumi:"totalSnapshotsSupported"`
}

// Details of the appliance resource.
type DataStoreUtilizationDetailsResponseOutput struct{ *pulumi.OutputState }

func (DataStoreUtilizationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataStoreUtilizationDetailsResponse)(nil)).Elem()
}

func (o DataStoreUtilizationDetailsResponseOutput) ToDataStoreUtilizationDetailsResponseOutput() DataStoreUtilizationDetailsResponseOutput {
	return o
}

func (o DataStoreUtilizationDetailsResponseOutput) ToDataStoreUtilizationDetailsResponseOutputWithContext(ctx context.Context) DataStoreUtilizationDetailsResponseOutput {
	return o
}

// The datastore name.
func (o DataStoreUtilizationDetailsResponseOutput) DataStoreName() pulumi.StringOutput {
	return o.ApplyT(func(v DataStoreUtilizationDetailsResponse) string { return v.DataStoreName }).(pulumi.StringOutput)
}

// The total snapshots created for server migration in the datastore.
func (o DataStoreUtilizationDetailsResponseOutput) TotalSnapshotsCreated() pulumi.Float64Output {
	return o.ApplyT(func(v DataStoreUtilizationDetailsResponse) float64 { return v.TotalSnapshotsCreated }).(pulumi.Float64Output)
}

// The total count of snapshots supported by the datastore.
func (o DataStoreUtilizationDetailsResponseOutput) TotalSnapshotsSupported() pulumi.Float64Output {
	return o.ApplyT(func(v DataStoreUtilizationDetailsResponse) float64 { return v.TotalSnapshotsSupported }).(pulumi.Float64Output)
}

type DataStoreUtilizationDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (DataStoreUtilizationDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataStoreUtilizationDetailsResponse)(nil)).Elem()
}

func (o DataStoreUtilizationDetailsResponseArrayOutput) ToDataStoreUtilizationDetailsResponseArrayOutput() DataStoreUtilizationDetailsResponseArrayOutput {
	return o
}

func (o DataStoreUtilizationDetailsResponseArrayOutput) ToDataStoreUtilizationDetailsResponseArrayOutputWithContext(ctx context.Context) DataStoreUtilizationDetailsResponseArrayOutput {
	return o
}

func (o DataStoreUtilizationDetailsResponseArrayOutput) Index(i pulumi.IntInput) DataStoreUtilizationDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataStoreUtilizationDetailsResponse {
		return vs[0].([]DataStoreUtilizationDetailsResponse)[vs[1].(int)]
	}).(DataStoreUtilizationDetailsResponseOutput)
}

// Day of the week.
type Day struct {
	// Date of the month
	Date *int `pulumi:"date"`
	// Whether Date is last date of month
	IsLast *bool `pulumi:"isLast"`
}

// DayInput is an input type that accepts DayArgs and DayOutput values.
// You can construct a concrete instance of `DayInput` via:
//
//	DayArgs{...}
type DayInput interface {
	pulumi.Input

	ToDayOutput() DayOutput
	ToDayOutputWithContext(context.Context) DayOutput
}

// Day of the week.
type DayArgs struct {
	// Date of the month
	Date pulumi.IntPtrInput `pulumi:"date"`
	// Whether Date is last date of month
	IsLast pulumi.BoolPtrInput `pulumi:"isLast"`
}

func (DayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Day)(nil)).Elem()
}

func (i DayArgs) ToDayOutput() DayOutput {
	return i.ToDayOutputWithContext(context.Background())
}

func (i DayArgs) ToDayOutputWithContext(ctx context.Context) DayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayOutput)
}

// DayArrayInput is an input type that accepts DayArray and DayArrayOutput values.
// You can construct a concrete instance of `DayArrayInput` via:
//
//	DayArray{ DayArgs{...} }
type DayArrayInput interface {
	pulumi.Input

	ToDayArrayOutput() DayArrayOutput
	ToDayArrayOutputWithContext(context.Context) DayArrayOutput
}

type DayArray []DayInput

func (DayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Day)(nil)).Elem()
}

func (i DayArray) ToDayArrayOutput() DayArrayOutput {
	return i.ToDayArrayOutputWithContext(context.Background())
}

func (i DayArray) ToDayArrayOutputWithContext(ctx context.Context) DayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayArrayOutput)
}

// Day of the week.
type DayOutput struct{ *pulumi.OutputState }

func (DayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Day)(nil)).Elem()
}

func (o DayOutput) ToDayOutput() DayOutput {
	return o
}

func (o DayOutput) ToDayOutputWithContext(ctx context.Context) DayOutput {
	return o
}

// Date of the month
func (o DayOutput) Date() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Day) *int { return v.Date }).(pulumi.IntPtrOutput)
}

// Whether Date is last date of month
func (o DayOutput) IsLast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Day) *bool { return v.IsLast }).(pulumi.BoolPtrOutput)
}

type DayArrayOutput struct{ *pulumi.OutputState }

func (DayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Day)(nil)).Elem()
}

func (o DayArrayOutput) ToDayArrayOutput() DayArrayOutput {
	return o
}

func (o DayArrayOutput) ToDayArrayOutputWithContext(ctx context.Context) DayArrayOutput {
	return o
}

func (o DayArrayOutput) Index(i pulumi.IntInput) DayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Day {
		return vs[0].([]Day)[vs[1].(int)]
	}).(DayOutput)
}

// Day of the week.
type DayResponse struct {
	// Date of the month
	Date *int `pulumi:"date"`
	// Whether Date is last date of month
	IsLast *bool `pulumi:"isLast"`
}

// Day of the week.
type DayResponseOutput struct{ *pulumi.OutputState }

func (DayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DayResponse)(nil)).Elem()
}

func (o DayResponseOutput) ToDayResponseOutput() DayResponseOutput {
	return o
}

func (o DayResponseOutput) ToDayResponseOutputWithContext(ctx context.Context) DayResponseOutput {
	return o
}

// Date of the month
func (o DayResponseOutput) Date() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DayResponse) *int { return v.Date }).(pulumi.IntPtrOutput)
}

// Whether Date is last date of month
func (o DayResponseOutput) IsLast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DayResponse) *bool { return v.IsLast }).(pulumi.BoolPtrOutput)
}

type DayResponseArrayOutput struct{ *pulumi.OutputState }

func (DayResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DayResponse)(nil)).Elem()
}

func (o DayResponseArrayOutput) ToDayResponseArrayOutput() DayResponseArrayOutput {
	return o
}

func (o DayResponseArrayOutput) ToDayResponseArrayOutputWithContext(ctx context.Context) DayResponseArrayOutput {
	return o
}

func (o DayResponseArrayOutput) Index(i pulumi.IntInput) DayResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DayResponse {
		return vs[0].([]DayResponse)[vs[1].(int)]
	}).(DayResponseOutput)
}

// Onprem disk details data.
type DiskDetailsResponse struct {
	// The hard disk max size in MB.
	MaxSizeMB *float64 `pulumi:"maxSizeMB"`
	// The VHD Id.
	VhdId *string `pulumi:"vhdId"`
	// The VHD name.
	VhdName *string `pulumi:"vhdName"`
	// The type of the volume.
	VhdType *string `pulumi:"vhdType"`
}

// Onprem disk details data.
type DiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (DiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskDetailsResponse)(nil)).Elem()
}

func (o DiskDetailsResponseOutput) ToDiskDetailsResponseOutput() DiskDetailsResponseOutput {
	return o
}

func (o DiskDetailsResponseOutput) ToDiskDetailsResponseOutputWithContext(ctx context.Context) DiskDetailsResponseOutput {
	return o
}

// The hard disk max size in MB.
func (o DiskDetailsResponseOutput) MaxSizeMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DiskDetailsResponse) *float64 { return v.MaxSizeMB }).(pulumi.Float64PtrOutput)
}

// The VHD Id.
func (o DiskDetailsResponseOutput) VhdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskDetailsResponse) *string { return v.VhdId }).(pulumi.StringPtrOutput)
}

// The VHD name.
func (o DiskDetailsResponseOutput) VhdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskDetailsResponse) *string { return v.VhdName }).(pulumi.StringPtrOutput)
}

// The type of the volume.
func (o DiskDetailsResponseOutput) VhdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskDetailsResponse) *string { return v.VhdType }).(pulumi.StringPtrOutput)
}

type DiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (DiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiskDetailsResponse)(nil)).Elem()
}

func (o DiskDetailsResponseArrayOutput) ToDiskDetailsResponseArrayOutput() DiskDetailsResponseArrayOutput {
	return o
}

func (o DiskDetailsResponseArrayOutput) ToDiskDetailsResponseArrayOutputWithContext(ctx context.Context) DiskDetailsResponseArrayOutput {
	return o
}

func (o DiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) DiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiskDetailsResponse {
		return vs[0].([]DiskDetailsResponse)[vs[1].(int)]
	}).(DiskDetailsResponseOutput)
}

// Recovery disk encryption info (BEK and KEK).
type DiskEncryptionInfo struct {
	// The recovery KeyVault reference for secret.
	DiskEncryptionKeyInfo *DiskEncryptionKeyInfo `pulumi:"diskEncryptionKeyInfo"`
	// The recovery KeyVault reference for key.
	KeyEncryptionKeyInfo *KeyEncryptionKeyInfo `pulumi:"keyEncryptionKeyInfo"`
}

// DiskEncryptionInfoInput is an input type that accepts DiskEncryptionInfoArgs and DiskEncryptionInfoOutput values.
// You can construct a concrete instance of `DiskEncryptionInfoInput` via:
//
//	DiskEncryptionInfoArgs{...}
type DiskEncryptionInfoInput interface {
	pulumi.Input

	ToDiskEncryptionInfoOutput() DiskEncryptionInfoOutput
	ToDiskEncryptionInfoOutputWithContext(context.Context) DiskEncryptionInfoOutput
}

// Recovery disk encryption info (BEK and KEK).
type DiskEncryptionInfoArgs struct {
	// The recovery KeyVault reference for secret.
	DiskEncryptionKeyInfo DiskEncryptionKeyInfoPtrInput `pulumi:"diskEncryptionKeyInfo"`
	// The recovery KeyVault reference for key.
	KeyEncryptionKeyInfo KeyEncryptionKeyInfoPtrInput `pulumi:"keyEncryptionKeyInfo"`
}

func (DiskEncryptionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionInfo)(nil)).Elem()
}

func (i DiskEncryptionInfoArgs) ToDiskEncryptionInfoOutput() DiskEncryptionInfoOutput {
	return i.ToDiskEncryptionInfoOutputWithContext(context.Background())
}

func (i DiskEncryptionInfoArgs) ToDiskEncryptionInfoOutputWithContext(ctx context.Context) DiskEncryptionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionInfoOutput)
}

func (i DiskEncryptionInfoArgs) ToDiskEncryptionInfoPtrOutput() DiskEncryptionInfoPtrOutput {
	return i.ToDiskEncryptionInfoPtrOutputWithContext(context.Background())
}

func (i DiskEncryptionInfoArgs) ToDiskEncryptionInfoPtrOutputWithContext(ctx context.Context) DiskEncryptionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionInfoOutput).ToDiskEncryptionInfoPtrOutputWithContext(ctx)
}

// DiskEncryptionInfoPtrInput is an input type that accepts DiskEncryptionInfoArgs, DiskEncryptionInfoPtr and DiskEncryptionInfoPtrOutput values.
// You can construct a concrete instance of `DiskEncryptionInfoPtrInput` via:
//
//	        DiskEncryptionInfoArgs{...}
//
//	or:
//
//	        nil
type DiskEncryptionInfoPtrInput interface {
	pulumi.Input

	ToDiskEncryptionInfoPtrOutput() DiskEncryptionInfoPtrOutput
	ToDiskEncryptionInfoPtrOutputWithContext(context.Context) DiskEncryptionInfoPtrOutput
}

type diskEncryptionInfoPtrType DiskEncryptionInfoArgs

func DiskEncryptionInfoPtr(v *DiskEncryptionInfoArgs) DiskEncryptionInfoPtrInput {
	return (*diskEncryptionInfoPtrType)(v)
}

func (*diskEncryptionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionInfo)(nil)).Elem()
}

func (i *diskEncryptionInfoPtrType) ToDiskEncryptionInfoPtrOutput() DiskEncryptionInfoPtrOutput {
	return i.ToDiskEncryptionInfoPtrOutputWithContext(context.Background())
}

func (i *diskEncryptionInfoPtrType) ToDiskEncryptionInfoPtrOutputWithContext(ctx context.Context) DiskEncryptionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionInfoPtrOutput)
}

// Recovery disk encryption info (BEK and KEK).
type DiskEncryptionInfoOutput struct{ *pulumi.OutputState }

func (DiskEncryptionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionInfo)(nil)).Elem()
}

func (o DiskEncryptionInfoOutput) ToDiskEncryptionInfoOutput() DiskEncryptionInfoOutput {
	return o
}

func (o DiskEncryptionInfoOutput) ToDiskEncryptionInfoOutputWithContext(ctx context.Context) DiskEncryptionInfoOutput {
	return o
}

func (o DiskEncryptionInfoOutput) ToDiskEncryptionInfoPtrOutput() DiskEncryptionInfoPtrOutput {
	return o.ToDiskEncryptionInfoPtrOutputWithContext(context.Background())
}

func (o DiskEncryptionInfoOutput) ToDiskEncryptionInfoPtrOutputWithContext(ctx context.Context) DiskEncryptionInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskEncryptionInfo) *DiskEncryptionInfo {
		return &v
	}).(DiskEncryptionInfoPtrOutput)
}

// The recovery KeyVault reference for secret.
func (o DiskEncryptionInfoOutput) DiskEncryptionKeyInfo() DiskEncryptionKeyInfoPtrOutput {
	return o.ApplyT(func(v DiskEncryptionInfo) *DiskEncryptionKeyInfo { return v.DiskEncryptionKeyInfo }).(DiskEncryptionKeyInfoPtrOutput)
}

// The recovery KeyVault reference for key.
func (o DiskEncryptionInfoOutput) KeyEncryptionKeyInfo() KeyEncryptionKeyInfoPtrOutput {
	return o.ApplyT(func(v DiskEncryptionInfo) *KeyEncryptionKeyInfo { return v.KeyEncryptionKeyInfo }).(KeyEncryptionKeyInfoPtrOutput)
}

type DiskEncryptionInfoPtrOutput struct{ *pulumi.OutputState }

func (DiskEncryptionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionInfo)(nil)).Elem()
}

func (o DiskEncryptionInfoPtrOutput) ToDiskEncryptionInfoPtrOutput() DiskEncryptionInfoPtrOutput {
	return o
}

func (o DiskEncryptionInfoPtrOutput) ToDiskEncryptionInfoPtrOutputWithContext(ctx context.Context) DiskEncryptionInfoPtrOutput {
	return o
}

func (o DiskEncryptionInfoPtrOutput) Elem() DiskEncryptionInfoOutput {
	return o.ApplyT(func(v *DiskEncryptionInfo) DiskEncryptionInfo {
		if v != nil {
			return *v
		}
		var ret DiskEncryptionInfo
		return ret
	}).(DiskEncryptionInfoOutput)
}

// The recovery KeyVault reference for secret.
func (o DiskEncryptionInfoPtrOutput) DiskEncryptionKeyInfo() DiskEncryptionKeyInfoPtrOutput {
	return o.ApplyT(func(v *DiskEncryptionInfo) *DiskEncryptionKeyInfo {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionKeyInfo
	}).(DiskEncryptionKeyInfoPtrOutput)
}

// The recovery KeyVault reference for key.
func (o DiskEncryptionInfoPtrOutput) KeyEncryptionKeyInfo() KeyEncryptionKeyInfoPtrOutput {
	return o.ApplyT(func(v *DiskEncryptionInfo) *KeyEncryptionKeyInfo {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKeyInfo
	}).(KeyEncryptionKeyInfoPtrOutput)
}

// Disk Encryption Key Information (BitLocker Encryption Key (BEK) on Windows).
type DiskEncryptionKeyInfo struct {
	// The KeyVault resource ARM id for secret.
	KeyVaultResourceArmId *string `pulumi:"keyVaultResourceArmId"`
	// The secret url / identifier.
	SecretIdentifier *string `pulumi:"secretIdentifier"`
}

// DiskEncryptionKeyInfoInput is an input type that accepts DiskEncryptionKeyInfoArgs and DiskEncryptionKeyInfoOutput values.
// You can construct a concrete instance of `DiskEncryptionKeyInfoInput` via:
//
//	DiskEncryptionKeyInfoArgs{...}
type DiskEncryptionKeyInfoInput interface {
	pulumi.Input

	ToDiskEncryptionKeyInfoOutput() DiskEncryptionKeyInfoOutput
	ToDiskEncryptionKeyInfoOutputWithContext(context.Context) DiskEncryptionKeyInfoOutput
}

// Disk Encryption Key Information (BitLocker Encryption Key (BEK) on Windows).
type DiskEncryptionKeyInfoArgs struct {
	// The KeyVault resource ARM id for secret.
	KeyVaultResourceArmId pulumi.StringPtrInput `pulumi:"keyVaultResourceArmId"`
	// The secret url / identifier.
	SecretIdentifier pulumi.StringPtrInput `pulumi:"secretIdentifier"`
}

func (DiskEncryptionKeyInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionKeyInfo)(nil)).Elem()
}

func (i DiskEncryptionKeyInfoArgs) ToDiskEncryptionKeyInfoOutput() DiskEncryptionKeyInfoOutput {
	return i.ToDiskEncryptionKeyInfoOutputWithContext(context.Background())
}

func (i DiskEncryptionKeyInfoArgs) ToDiskEncryptionKeyInfoOutputWithContext(ctx context.Context) DiskEncryptionKeyInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionKeyInfoOutput)
}

func (i DiskEncryptionKeyInfoArgs) ToDiskEncryptionKeyInfoPtrOutput() DiskEncryptionKeyInfoPtrOutput {
	return i.ToDiskEncryptionKeyInfoPtrOutputWithContext(context.Background())
}

func (i DiskEncryptionKeyInfoArgs) ToDiskEncryptionKeyInfoPtrOutputWithContext(ctx context.Context) DiskEncryptionKeyInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionKeyInfoOutput).ToDiskEncryptionKeyInfoPtrOutputWithContext(ctx)
}

// DiskEncryptionKeyInfoPtrInput is an input type that accepts DiskEncryptionKeyInfoArgs, DiskEncryptionKeyInfoPtr and DiskEncryptionKeyInfoPtrOutput values.
// You can construct a concrete instance of `DiskEncryptionKeyInfoPtrInput` via:
//
//	        DiskEncryptionKeyInfoArgs{...}
//
//	or:
//
//	        nil
type DiskEncryptionKeyInfoPtrInput interface {
	pulumi.Input

	ToDiskEncryptionKeyInfoPtrOutput() DiskEncryptionKeyInfoPtrOutput
	ToDiskEncryptionKeyInfoPtrOutputWithContext(context.Context) DiskEncryptionKeyInfoPtrOutput
}

type diskEncryptionKeyInfoPtrType DiskEncryptionKeyInfoArgs

func DiskEncryptionKeyInfoPtr(v *DiskEncryptionKeyInfoArgs) DiskEncryptionKeyInfoPtrInput {
	return (*diskEncryptionKeyInfoPtrType)(v)
}

func (*diskEncryptionKeyInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionKeyInfo)(nil)).Elem()
}

func (i *diskEncryptionKeyInfoPtrType) ToDiskEncryptionKeyInfoPtrOutput() DiskEncryptionKeyInfoPtrOutput {
	return i.ToDiskEncryptionKeyInfoPtrOutputWithContext(context.Background())
}

func (i *diskEncryptionKeyInfoPtrType) ToDiskEncryptionKeyInfoPtrOutputWithContext(ctx context.Context) DiskEncryptionKeyInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionKeyInfoPtrOutput)
}

// Disk Encryption Key Information (BitLocker Encryption Key (BEK) on Windows).
type DiskEncryptionKeyInfoOutput struct{ *pulumi.OutputState }

func (DiskEncryptionKeyInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionKeyInfo)(nil)).Elem()
}

func (o DiskEncryptionKeyInfoOutput) ToDiskEncryptionKeyInfoOutput() DiskEncryptionKeyInfoOutput {
	return o
}

func (o DiskEncryptionKeyInfoOutput) ToDiskEncryptionKeyInfoOutputWithContext(ctx context.Context) DiskEncryptionKeyInfoOutput {
	return o
}

func (o DiskEncryptionKeyInfoOutput) ToDiskEncryptionKeyInfoPtrOutput() DiskEncryptionKeyInfoPtrOutput {
	return o.ToDiskEncryptionKeyInfoPtrOutputWithContext(context.Background())
}

func (o DiskEncryptionKeyInfoOutput) ToDiskEncryptionKeyInfoPtrOutputWithContext(ctx context.Context) DiskEncryptionKeyInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskEncryptionKeyInfo) *DiskEncryptionKeyInfo {
		return &v
	}).(DiskEncryptionKeyInfoPtrOutput)
}

// The KeyVault resource ARM id for secret.
func (o DiskEncryptionKeyInfoOutput) KeyVaultResourceArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskEncryptionKeyInfo) *string { return v.KeyVaultResourceArmId }).(pulumi.StringPtrOutput)
}

// The secret url / identifier.
func (o DiskEncryptionKeyInfoOutput) SecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskEncryptionKeyInfo) *string { return v.SecretIdentifier }).(pulumi.StringPtrOutput)
}

type DiskEncryptionKeyInfoPtrOutput struct{ *pulumi.OutputState }

func (DiskEncryptionKeyInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionKeyInfo)(nil)).Elem()
}

func (o DiskEncryptionKeyInfoPtrOutput) ToDiskEncryptionKeyInfoPtrOutput() DiskEncryptionKeyInfoPtrOutput {
	return o
}

func (o DiskEncryptionKeyInfoPtrOutput) ToDiskEncryptionKeyInfoPtrOutputWithContext(ctx context.Context) DiskEncryptionKeyInfoPtrOutput {
	return o
}

func (o DiskEncryptionKeyInfoPtrOutput) Elem() DiskEncryptionKeyInfoOutput {
	return o.ApplyT(func(v *DiskEncryptionKeyInfo) DiskEncryptionKeyInfo {
		if v != nil {
			return *v
		}
		var ret DiskEncryptionKeyInfo
		return ret
	}).(DiskEncryptionKeyInfoOutput)
}

// The KeyVault resource ARM id for secret.
func (o DiskEncryptionKeyInfoPtrOutput) KeyVaultResourceArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskEncryptionKeyInfo) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultResourceArmId
	}).(pulumi.StringPtrOutput)
}

// The secret url / identifier.
func (o DiskEncryptionKeyInfoPtrOutput) SecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskEncryptionKeyInfo) *string {
		if v == nil {
			return nil
		}
		return v.SecretIdentifier
	}).(pulumi.StringPtrOutput)
}

type DiskExclusionProperties struct {
	// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
	DiskLunList []int `pulumi:"diskLunList"`
	// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
	IsInclusionList *bool `pulumi:"isInclusionList"`
}

// DiskExclusionPropertiesInput is an input type that accepts DiskExclusionPropertiesArgs and DiskExclusionPropertiesOutput values.
// You can construct a concrete instance of `DiskExclusionPropertiesInput` via:
//
//	DiskExclusionPropertiesArgs{...}
type DiskExclusionPropertiesInput interface {
	pulumi.Input

	ToDiskExclusionPropertiesOutput() DiskExclusionPropertiesOutput
	ToDiskExclusionPropertiesOutputWithContext(context.Context) DiskExclusionPropertiesOutput
}

type DiskExclusionPropertiesArgs struct {
	// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
	DiskLunList pulumi.IntArrayInput `pulumi:"diskLunList"`
	// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
	IsInclusionList pulumi.BoolPtrInput `pulumi:"isInclusionList"`
}

func (DiskExclusionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskExclusionProperties)(nil)).Elem()
}

func (i DiskExclusionPropertiesArgs) ToDiskExclusionPropertiesOutput() DiskExclusionPropertiesOutput {
	return i.ToDiskExclusionPropertiesOutputWithContext(context.Background())
}

func (i DiskExclusionPropertiesArgs) ToDiskExclusionPropertiesOutputWithContext(ctx context.Context) DiskExclusionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskExclusionPropertiesOutput)
}

func (i DiskExclusionPropertiesArgs) ToDiskExclusionPropertiesPtrOutput() DiskExclusionPropertiesPtrOutput {
	return i.ToDiskExclusionPropertiesPtrOutputWithContext(context.Background())
}

func (i DiskExclusionPropertiesArgs) ToDiskExclusionPropertiesPtrOutputWithContext(ctx context.Context) DiskExclusionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskExclusionPropertiesOutput).ToDiskExclusionPropertiesPtrOutputWithContext(ctx)
}

// DiskExclusionPropertiesPtrInput is an input type that accepts DiskExclusionPropertiesArgs, DiskExclusionPropertiesPtr and DiskExclusionPropertiesPtrOutput values.
// You can construct a concrete instance of `DiskExclusionPropertiesPtrInput` via:
//
//	        DiskExclusionPropertiesArgs{...}
//
//	or:
//
//	        nil
type DiskExclusionPropertiesPtrInput interface {
	pulumi.Input

	ToDiskExclusionPropertiesPtrOutput() DiskExclusionPropertiesPtrOutput
	ToDiskExclusionPropertiesPtrOutputWithContext(context.Context) DiskExclusionPropertiesPtrOutput
}

type diskExclusionPropertiesPtrType DiskExclusionPropertiesArgs

func DiskExclusionPropertiesPtr(v *DiskExclusionPropertiesArgs) DiskExclusionPropertiesPtrInput {
	return (*diskExclusionPropertiesPtrType)(v)
}

func (*diskExclusionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskExclusionProperties)(nil)).Elem()
}

func (i *diskExclusionPropertiesPtrType) ToDiskExclusionPropertiesPtrOutput() DiskExclusionPropertiesPtrOutput {
	return i.ToDiskExclusionPropertiesPtrOutputWithContext(context.Background())
}

func (i *diskExclusionPropertiesPtrType) ToDiskExclusionPropertiesPtrOutputWithContext(ctx context.Context) DiskExclusionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskExclusionPropertiesPtrOutput)
}

type DiskExclusionPropertiesOutput struct{ *pulumi.OutputState }

func (DiskExclusionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskExclusionProperties)(nil)).Elem()
}

func (o DiskExclusionPropertiesOutput) ToDiskExclusionPropertiesOutput() DiskExclusionPropertiesOutput {
	return o
}

func (o DiskExclusionPropertiesOutput) ToDiskExclusionPropertiesOutputWithContext(ctx context.Context) DiskExclusionPropertiesOutput {
	return o
}

func (o DiskExclusionPropertiesOutput) ToDiskExclusionPropertiesPtrOutput() DiskExclusionPropertiesPtrOutput {
	return o.ToDiskExclusionPropertiesPtrOutputWithContext(context.Background())
}

func (o DiskExclusionPropertiesOutput) ToDiskExclusionPropertiesPtrOutputWithContext(ctx context.Context) DiskExclusionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskExclusionProperties) *DiskExclusionProperties {
		return &v
	}).(DiskExclusionPropertiesPtrOutput)
}

// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
func (o DiskExclusionPropertiesOutput) DiskLunList() pulumi.IntArrayOutput {
	return o.ApplyT(func(v DiskExclusionProperties) []int { return v.DiskLunList }).(pulumi.IntArrayOutput)
}

// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
func (o DiskExclusionPropertiesOutput) IsInclusionList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DiskExclusionProperties) *bool { return v.IsInclusionList }).(pulumi.BoolPtrOutput)
}

type DiskExclusionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DiskExclusionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskExclusionProperties)(nil)).Elem()
}

func (o DiskExclusionPropertiesPtrOutput) ToDiskExclusionPropertiesPtrOutput() DiskExclusionPropertiesPtrOutput {
	return o
}

func (o DiskExclusionPropertiesPtrOutput) ToDiskExclusionPropertiesPtrOutputWithContext(ctx context.Context) DiskExclusionPropertiesPtrOutput {
	return o
}

func (o DiskExclusionPropertiesPtrOutput) Elem() DiskExclusionPropertiesOutput {
	return o.ApplyT(func(v *DiskExclusionProperties) DiskExclusionProperties {
		if v != nil {
			return *v
		}
		var ret DiskExclusionProperties
		return ret
	}).(DiskExclusionPropertiesOutput)
}

// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
func (o DiskExclusionPropertiesPtrOutput) DiskLunList() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *DiskExclusionProperties) []int {
		if v == nil {
			return nil
		}
		return v.DiskLunList
	}).(pulumi.IntArrayOutput)
}

// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
func (o DiskExclusionPropertiesPtrOutput) IsInclusionList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DiskExclusionProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsInclusionList
	}).(pulumi.BoolPtrOutput)
}

type DiskExclusionPropertiesResponse struct {
	// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
	DiskLunList []int `pulumi:"diskLunList"`
	// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
	IsInclusionList *bool `pulumi:"isInclusionList"`
}

type DiskExclusionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DiskExclusionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskExclusionPropertiesResponse)(nil)).Elem()
}

func (o DiskExclusionPropertiesResponseOutput) ToDiskExclusionPropertiesResponseOutput() DiskExclusionPropertiesResponseOutput {
	return o
}

func (o DiskExclusionPropertiesResponseOutput) ToDiskExclusionPropertiesResponseOutputWithContext(ctx context.Context) DiskExclusionPropertiesResponseOutput {
	return o
}

// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
func (o DiskExclusionPropertiesResponseOutput) DiskLunList() pulumi.IntArrayOutput {
	return o.ApplyT(func(v DiskExclusionPropertiesResponse) []int { return v.DiskLunList }).(pulumi.IntArrayOutput)
}

// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
func (o DiskExclusionPropertiesResponseOutput) IsInclusionList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DiskExclusionPropertiesResponse) *bool { return v.IsInclusionList }).(pulumi.BoolPtrOutput)
}

type DiskExclusionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DiskExclusionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskExclusionPropertiesResponse)(nil)).Elem()
}

func (o DiskExclusionPropertiesResponsePtrOutput) ToDiskExclusionPropertiesResponsePtrOutput() DiskExclusionPropertiesResponsePtrOutput {
	return o
}

func (o DiskExclusionPropertiesResponsePtrOutput) ToDiskExclusionPropertiesResponsePtrOutputWithContext(ctx context.Context) DiskExclusionPropertiesResponsePtrOutput {
	return o
}

func (o DiskExclusionPropertiesResponsePtrOutput) Elem() DiskExclusionPropertiesResponseOutput {
	return o.ApplyT(func(v *DiskExclusionPropertiesResponse) DiskExclusionPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret DiskExclusionPropertiesResponse
		return ret
	}).(DiskExclusionPropertiesResponseOutput)
}

// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
func (o DiskExclusionPropertiesResponsePtrOutput) DiskLunList() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *DiskExclusionPropertiesResponse) []int {
		if v == nil {
			return nil
		}
		return v.DiskLunList
	}).(pulumi.IntArrayOutput)
}

// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
func (o DiskExclusionPropertiesResponsePtrOutput) IsInclusionList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DiskExclusionPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsInclusionList
	}).(pulumi.BoolPtrOutput)
}

// This is used to represent the various nodes of the distributed container.
type DistributedNodesInfo struct {
	// Name of the node under a distributed container.
	NodeName *string `pulumi:"nodeName"`
	// ARM resource id of the node
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Status of this Node.
	// Failed | Succeeded
	Status *string `pulumi:"status"`
}

// DistributedNodesInfoInput is an input type that accepts DistributedNodesInfoArgs and DistributedNodesInfoOutput values.
// You can construct a concrete instance of `DistributedNodesInfoInput` via:
//
//	DistributedNodesInfoArgs{...}
type DistributedNodesInfoInput interface {
	pulumi.Input

	ToDistributedNodesInfoOutput() DistributedNodesInfoOutput
	ToDistributedNodesInfoOutputWithContext(context.Context) DistributedNodesInfoOutput
}

// This is used to represent the various nodes of the distributed container.
type DistributedNodesInfoArgs struct {
	// Name of the node under a distributed container.
	NodeName pulumi.StringPtrInput `pulumi:"nodeName"`
	// ARM resource id of the node
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Status of this Node.
	// Failed | Succeeded
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (DistributedNodesInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributedNodesInfo)(nil)).Elem()
}

func (i DistributedNodesInfoArgs) ToDistributedNodesInfoOutput() DistributedNodesInfoOutput {
	return i.ToDistributedNodesInfoOutputWithContext(context.Background())
}

func (i DistributedNodesInfoArgs) ToDistributedNodesInfoOutputWithContext(ctx context.Context) DistributedNodesInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedNodesInfoOutput)
}

// DistributedNodesInfoArrayInput is an input type that accepts DistributedNodesInfoArray and DistributedNodesInfoArrayOutput values.
// You can construct a concrete instance of `DistributedNodesInfoArrayInput` via:
//
//	DistributedNodesInfoArray{ DistributedNodesInfoArgs{...} }
type DistributedNodesInfoArrayInput interface {
	pulumi.Input

	ToDistributedNodesInfoArrayOutput() DistributedNodesInfoArrayOutput
	ToDistributedNodesInfoArrayOutputWithContext(context.Context) DistributedNodesInfoArrayOutput
}

type DistributedNodesInfoArray []DistributedNodesInfoInput

func (DistributedNodesInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributedNodesInfo)(nil)).Elem()
}

func (i DistributedNodesInfoArray) ToDistributedNodesInfoArrayOutput() DistributedNodesInfoArrayOutput {
	return i.ToDistributedNodesInfoArrayOutputWithContext(context.Background())
}

func (i DistributedNodesInfoArray) ToDistributedNodesInfoArrayOutputWithContext(ctx context.Context) DistributedNodesInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedNodesInfoArrayOutput)
}

// This is used to represent the various nodes of the distributed container.
type DistributedNodesInfoOutput struct{ *pulumi.OutputState }

func (DistributedNodesInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributedNodesInfo)(nil)).Elem()
}

func (o DistributedNodesInfoOutput) ToDistributedNodesInfoOutput() DistributedNodesInfoOutput {
	return o
}

func (o DistributedNodesInfoOutput) ToDistributedNodesInfoOutputWithContext(ctx context.Context) DistributedNodesInfoOutput {
	return o
}

// Name of the node under a distributed container.
func (o DistributedNodesInfoOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributedNodesInfo) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

// ARM resource id of the node
func (o DistributedNodesInfoOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributedNodesInfo) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Status of this Node.
// Failed | Succeeded
func (o DistributedNodesInfoOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributedNodesInfo) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type DistributedNodesInfoArrayOutput struct{ *pulumi.OutputState }

func (DistributedNodesInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributedNodesInfo)(nil)).Elem()
}

func (o DistributedNodesInfoArrayOutput) ToDistributedNodesInfoArrayOutput() DistributedNodesInfoArrayOutput {
	return o
}

func (o DistributedNodesInfoArrayOutput) ToDistributedNodesInfoArrayOutputWithContext(ctx context.Context) DistributedNodesInfoArrayOutput {
	return o
}

func (o DistributedNodesInfoArrayOutput) Index(i pulumi.IntInput) DistributedNodesInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributedNodesInfo {
		return vs[0].([]DistributedNodesInfo)[vs[1].(int)]
	}).(DistributedNodesInfoOutput)
}

// This is used to represent the various nodes of the distributed container.
type DistributedNodesInfoResponse struct {
	// Error Details if the Status is non-success.
	ErrorDetail *ErrorDetailResponse `pulumi:"errorDetail"`
	// Name of the node under a distributed container.
	NodeName *string `pulumi:"nodeName"`
	// ARM resource id of the node
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Status of this Node.
	// Failed | Succeeded
	Status *string `pulumi:"status"`
}

// This is used to represent the various nodes of the distributed container.
type DistributedNodesInfoResponseOutput struct{ *pulumi.OutputState }

func (DistributedNodesInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributedNodesInfoResponse)(nil)).Elem()
}

func (o DistributedNodesInfoResponseOutput) ToDistributedNodesInfoResponseOutput() DistributedNodesInfoResponseOutput {
	return o
}

func (o DistributedNodesInfoResponseOutput) ToDistributedNodesInfoResponseOutputWithContext(ctx context.Context) DistributedNodesInfoResponseOutput {
	return o
}

// Error Details if the Status is non-success.
func (o DistributedNodesInfoResponseOutput) ErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v DistributedNodesInfoResponse) *ErrorDetailResponse { return v.ErrorDetail }).(ErrorDetailResponsePtrOutput)
}

// Name of the node under a distributed container.
func (o DistributedNodesInfoResponseOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributedNodesInfoResponse) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

// ARM resource id of the node
func (o DistributedNodesInfoResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributedNodesInfoResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Status of this Node.
// Failed | Succeeded
func (o DistributedNodesInfoResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributedNodesInfoResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type DistributedNodesInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (DistributedNodesInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributedNodesInfoResponse)(nil)).Elem()
}

func (o DistributedNodesInfoResponseArrayOutput) ToDistributedNodesInfoResponseArrayOutput() DistributedNodesInfoResponseArrayOutput {
	return o
}

func (o DistributedNodesInfoResponseArrayOutput) ToDistributedNodesInfoResponseArrayOutputWithContext(ctx context.Context) DistributedNodesInfoResponseArrayOutput {
	return o
}

func (o DistributedNodesInfoResponseArrayOutput) Index(i pulumi.IntInput) DistributedNodesInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributedNodesInfoResponse {
		return vs[0].([]DistributedNodesInfoResponse)[vs[1].(int)]
	}).(DistributedNodesInfoResponseOutput)
}

// DPM workload-specific protection container.
type DpmContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister *bool `pulumi:"canReRegister"`
	// ID of container.
	ContainerId *string `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'DPMContainer'.
	ContainerType string `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion *string `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers []string `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo *DPMContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable *bool `pulumi:"upgradeAvailable"`
}

// DpmContainerInput is an input type that accepts DpmContainerArgs and DpmContainerOutput values.
// You can construct a concrete instance of `DpmContainerInput` via:
//
//	DpmContainerArgs{...}
type DpmContainerInput interface {
	pulumi.Input

	ToDpmContainerOutput() DpmContainerOutput
	ToDpmContainerOutputWithContext(context.Context) DpmContainerOutput
}

// DPM workload-specific protection container.
type DpmContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister pulumi.BoolPtrInput `pulumi:"canReRegister"`
	// ID of container.
	ContainerId pulumi.StringPtrInput `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'DPMContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion pulumi.StringPtrInput `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers pulumi.StringArrayInput `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo DPMContainerExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount pulumi.Float64PtrInput `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus pulumi.StringPtrInput `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable pulumi.BoolPtrInput `pulumi:"upgradeAvailable"`
}

func (DpmContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DpmContainer)(nil)).Elem()
}

func (i DpmContainerArgs) ToDpmContainerOutput() DpmContainerOutput {
	return i.ToDpmContainerOutputWithContext(context.Background())
}

func (i DpmContainerArgs) ToDpmContainerOutputWithContext(ctx context.Context) DpmContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DpmContainerOutput)
}

func (i DpmContainerArgs) ToDpmContainerPtrOutput() DpmContainerPtrOutput {
	return i.ToDpmContainerPtrOutputWithContext(context.Background())
}

func (i DpmContainerArgs) ToDpmContainerPtrOutputWithContext(ctx context.Context) DpmContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DpmContainerOutput).ToDpmContainerPtrOutputWithContext(ctx)
}

// DpmContainerPtrInput is an input type that accepts DpmContainerArgs, DpmContainerPtr and DpmContainerPtrOutput values.
// You can construct a concrete instance of `DpmContainerPtrInput` via:
//
//	        DpmContainerArgs{...}
//
//	or:
//
//	        nil
type DpmContainerPtrInput interface {
	pulumi.Input

	ToDpmContainerPtrOutput() DpmContainerPtrOutput
	ToDpmContainerPtrOutputWithContext(context.Context) DpmContainerPtrOutput
}

type dpmContainerPtrType DpmContainerArgs

func DpmContainerPtr(v *DpmContainerArgs) DpmContainerPtrInput {
	return (*dpmContainerPtrType)(v)
}

func (*dpmContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DpmContainer)(nil)).Elem()
}

func (i *dpmContainerPtrType) ToDpmContainerPtrOutput() DpmContainerPtrOutput {
	return i.ToDpmContainerPtrOutputWithContext(context.Background())
}

func (i *dpmContainerPtrType) ToDpmContainerPtrOutputWithContext(ctx context.Context) DpmContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DpmContainerPtrOutput)
}

// DPM workload-specific protection container.
type DpmContainerOutput struct{ *pulumi.OutputState }

func (DpmContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DpmContainer)(nil)).Elem()
}

func (o DpmContainerOutput) ToDpmContainerOutput() DpmContainerOutput {
	return o
}

func (o DpmContainerOutput) ToDpmContainerOutputWithContext(ctx context.Context) DpmContainerOutput {
	return o
}

func (o DpmContainerOutput) ToDpmContainerPtrOutput() DpmContainerPtrOutput {
	return o.ToDpmContainerPtrOutputWithContext(context.Background())
}

func (o DpmContainerOutput) ToDpmContainerPtrOutputWithContext(ctx context.Context) DpmContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DpmContainer) *DpmContainer {
		return &v
	}).(DpmContainerPtrOutput)
}

// Type of backup management for the container.
func (o DpmContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Specifies whether the container is re-registrable.
func (o DpmContainerOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DpmContainer) *bool { return v.CanReRegister }).(pulumi.BoolPtrOutput)
}

// ID of container.
func (o DpmContainerOutput) ContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainer) *string { return v.ContainerId }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'DPMContainer'.
func (o DpmContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v DpmContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Backup engine Agent version
func (o DpmContainerOutput) DpmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainer) *string { return v.DpmAgentVersion }).(pulumi.StringPtrOutput)
}

// List of BackupEngines protecting the container
func (o DpmContainerOutput) DpmServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DpmContainer) []string { return v.DpmServers }).(pulumi.StringArrayOutput)
}

// Extended Info of the container.
func (o DpmContainerOutput) ExtendedInfo() DPMContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v DpmContainer) *DPMContainerExtendedInfo { return v.ExtendedInfo }).(DPMContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o DpmContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o DpmContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o DpmContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Number of protected items in the BackupEngine
func (o DpmContainerOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DpmContainer) *float64 { return v.ProtectedItemCount }).(pulumi.Float64PtrOutput)
}

// Protection status of the container.
func (o DpmContainerOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainer) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o DpmContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// To check if upgrade available
func (o DpmContainerOutput) UpgradeAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DpmContainer) *bool { return v.UpgradeAvailable }).(pulumi.BoolPtrOutput)
}

type DpmContainerPtrOutput struct{ *pulumi.OutputState }

func (DpmContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DpmContainer)(nil)).Elem()
}

func (o DpmContainerPtrOutput) ToDpmContainerPtrOutput() DpmContainerPtrOutput {
	return o
}

func (o DpmContainerPtrOutput) ToDpmContainerPtrOutputWithContext(ctx context.Context) DpmContainerPtrOutput {
	return o
}

func (o DpmContainerPtrOutput) Elem() DpmContainerOutput {
	return o.ApplyT(func(v *DpmContainer) DpmContainer {
		if v != nil {
			return *v
		}
		var ret DpmContainer
		return ret
	}).(DpmContainerOutput)
}

// Type of backup management for the container.
func (o DpmContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the container is re-registrable.
func (o DpmContainerPtrOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *bool {
		if v == nil {
			return nil
		}
		return v.CanReRegister
	}).(pulumi.BoolPtrOutput)
}

// ID of container.
func (o DpmContainerPtrOutput) ContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return v.ContainerId
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'DPMContainer'.
func (o DpmContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Backup engine Agent version
func (o DpmContainerPtrOutput) DpmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return v.DpmAgentVersion
	}).(pulumi.StringPtrOutput)
}

// List of BackupEngines protecting the container
func (o DpmContainerPtrOutput) DpmServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DpmContainer) []string {
		if v == nil {
			return nil
		}
		return v.DpmServers
	}).(pulumi.StringArrayOutput)
}

// Extended Info of the container.
func (o DpmContainerPtrOutput) ExtendedInfo() DPMContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *DPMContainerExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(DPMContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o DpmContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o DpmContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o DpmContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Number of protected items in the BackupEngine
func (o DpmContainerPtrOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DpmContainer) *float64 {
		if v == nil {
			return nil
		}
		return v.ProtectedItemCount
	}).(pulumi.Float64PtrOutput)
}

// Protection status of the container.
func (o DpmContainerPtrOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionStatus
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o DpmContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// To check if upgrade available
func (o DpmContainerPtrOutput) UpgradeAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *bool {
		if v == nil {
			return nil
		}
		return v.UpgradeAvailable
	}).(pulumi.BoolPtrOutput)
}

// DPM workload-specific protection container.
type DpmContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister *bool `pulumi:"canReRegister"`
	// ID of container.
	ContainerId *string `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'DPMContainer'.
	ContainerType string `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion *string `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers []string `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo *DPMContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable *bool `pulumi:"upgradeAvailable"`
}

// DPM workload-specific protection container.
type DpmContainerResponseOutput struct{ *pulumi.OutputState }

func (DpmContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DpmContainerResponse)(nil)).Elem()
}

func (o DpmContainerResponseOutput) ToDpmContainerResponseOutput() DpmContainerResponseOutput {
	return o
}

func (o DpmContainerResponseOutput) ToDpmContainerResponseOutputWithContext(ctx context.Context) DpmContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o DpmContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Specifies whether the container is re-registrable.
func (o DpmContainerResponseOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *bool { return v.CanReRegister }).(pulumi.BoolPtrOutput)
}

// ID of container.
func (o DpmContainerResponseOutput) ContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.ContainerId }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'DPMContainer'.
func (o DpmContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v DpmContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Backup engine Agent version
func (o DpmContainerResponseOutput) DpmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.DpmAgentVersion }).(pulumi.StringPtrOutput)
}

// List of BackupEngines protecting the container
func (o DpmContainerResponseOutput) DpmServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DpmContainerResponse) []string { return v.DpmServers }).(pulumi.StringArrayOutput)
}

// Extended Info of the container.
func (o DpmContainerResponseOutput) ExtendedInfo() DPMContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *DPMContainerExtendedInfoResponse { return v.ExtendedInfo }).(DPMContainerExtendedInfoResponsePtrOutput)
}

// Friendly name of the container.
func (o DpmContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o DpmContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o DpmContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Number of protected items in the BackupEngine
func (o DpmContainerResponseOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *float64 { return v.ProtectedItemCount }).(pulumi.Float64PtrOutput)
}

// Protection status of the container.
func (o DpmContainerResponseOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o DpmContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// To check if upgrade available
func (o DpmContainerResponseOutput) UpgradeAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *bool { return v.UpgradeAvailable }).(pulumi.BoolPtrOutput)
}

// DRA details.
type DraDetailsResponse struct {
	// The DRA Bios Id.
	BiosId string `pulumi:"biosId"`
	// The count of protected items which are protected in forward direction.
	ForwardProtectedItemCount int `pulumi:"forwardProtectedItemCount"`
	// The health.
	Health string `pulumi:"health"`
	// The health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The DRA Id.
	Id string `pulumi:"id"`
	// The last heartbeat received from the DRA.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The DRA name.
	Name string `pulumi:"name"`
	// The count of protected items which are protected in reverse direction.
	ReverseProtectedItemCount int `pulumi:"reverseProtectedItemCount"`
	// The version.
	Version string `pulumi:"version"`
}

// DRA details.
type DraDetailsResponseOutput struct{ *pulumi.OutputState }

func (DraDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DraDetailsResponse)(nil)).Elem()
}

func (o DraDetailsResponseOutput) ToDraDetailsResponseOutput() DraDetailsResponseOutput {
	return o
}

func (o DraDetailsResponseOutput) ToDraDetailsResponseOutputWithContext(ctx context.Context) DraDetailsResponseOutput {
	return o
}

// The DRA Bios Id.
func (o DraDetailsResponseOutput) BiosId() pulumi.StringOutput {
	return o.ApplyT(func(v DraDetailsResponse) string { return v.BiosId }).(pulumi.StringOutput)
}

// The count of protected items which are protected in forward direction.
func (o DraDetailsResponseOutput) ForwardProtectedItemCount() pulumi.IntOutput {
	return o.ApplyT(func(v DraDetailsResponse) int { return v.ForwardProtectedItemCount }).(pulumi.IntOutput)
}

// The health.
func (o DraDetailsResponseOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v DraDetailsResponse) string { return v.Health }).(pulumi.StringOutput)
}

// The health errors.
func (o DraDetailsResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v DraDetailsResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The DRA Id.
func (o DraDetailsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DraDetailsResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The last heartbeat received from the DRA.
func (o DraDetailsResponseOutput) LastHeartbeatUtc() pulumi.StringOutput {
	return o.ApplyT(func(v DraDetailsResponse) string { return v.LastHeartbeatUtc }).(pulumi.StringOutput)
}

// The DRA name.
func (o DraDetailsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DraDetailsResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The count of protected items which are protected in reverse direction.
func (o DraDetailsResponseOutput) ReverseProtectedItemCount() pulumi.IntOutput {
	return o.ApplyT(func(v DraDetailsResponse) int { return v.ReverseProtectedItemCount }).(pulumi.IntOutput)
}

// The version.
func (o DraDetailsResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v DraDetailsResponse) string { return v.Version }).(pulumi.StringOutput)
}

type DraDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (DraDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DraDetailsResponse)(nil)).Elem()
}

func (o DraDetailsResponseArrayOutput) ToDraDetailsResponseArrayOutput() DraDetailsResponseArrayOutput {
	return o
}

func (o DraDetailsResponseArrayOutput) ToDraDetailsResponseArrayOutputWithContext(ctx context.Context) DraDetailsResponseArrayOutput {
	return o
}

func (o DraDetailsResponseArrayOutput) Index(i pulumi.IntInput) DraDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DraDetailsResponse {
		return vs[0].([]DraDetailsResponse)[vs[1].(int)]
	}).(DraDetailsResponseOutput)
}

// Enable migration input properties.
type EnableMigrationInputProperties struct {
	// The policy Id.
	PolicyId string `pulumi:"policyId"`
	// The provider specific details.
	ProviderSpecificDetails VMwareCbtEnableMigrationInput `pulumi:"providerSpecificDetails"`
}

// EnableMigrationInputPropertiesInput is an input type that accepts EnableMigrationInputPropertiesArgs and EnableMigrationInputPropertiesOutput values.
// You can construct a concrete instance of `EnableMigrationInputPropertiesInput` via:
//
//	EnableMigrationInputPropertiesArgs{...}
type EnableMigrationInputPropertiesInput interface {
	pulumi.Input

	ToEnableMigrationInputPropertiesOutput() EnableMigrationInputPropertiesOutput
	ToEnableMigrationInputPropertiesOutputWithContext(context.Context) EnableMigrationInputPropertiesOutput
}

// Enable migration input properties.
type EnableMigrationInputPropertiesArgs struct {
	// The policy Id.
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// The provider specific details.
	ProviderSpecificDetails VMwareCbtEnableMigrationInputInput `pulumi:"providerSpecificDetails"`
}

func (EnableMigrationInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableMigrationInputProperties)(nil)).Elem()
}

func (i EnableMigrationInputPropertiesArgs) ToEnableMigrationInputPropertiesOutput() EnableMigrationInputPropertiesOutput {
	return i.ToEnableMigrationInputPropertiesOutputWithContext(context.Background())
}

func (i EnableMigrationInputPropertiesArgs) ToEnableMigrationInputPropertiesOutputWithContext(ctx context.Context) EnableMigrationInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableMigrationInputPropertiesOutput)
}

// Enable migration input properties.
type EnableMigrationInputPropertiesOutput struct{ *pulumi.OutputState }

func (EnableMigrationInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableMigrationInputProperties)(nil)).Elem()
}

func (o EnableMigrationInputPropertiesOutput) ToEnableMigrationInputPropertiesOutput() EnableMigrationInputPropertiesOutput {
	return o
}

func (o EnableMigrationInputPropertiesOutput) ToEnableMigrationInputPropertiesOutputWithContext(ctx context.Context) EnableMigrationInputPropertiesOutput {
	return o
}

// The policy Id.
func (o EnableMigrationInputPropertiesOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v EnableMigrationInputProperties) string { return v.PolicyId }).(pulumi.StringOutput)
}

// The provider specific details.
func (o EnableMigrationInputPropertiesOutput) ProviderSpecificDetails() VMwareCbtEnableMigrationInputOutput {
	return o.ApplyT(func(v EnableMigrationInputProperties) VMwareCbtEnableMigrationInput { return v.ProviderSpecificDetails }).(VMwareCbtEnableMigrationInputOutput)
}

// Enable protection input properties.
type EnableProtectionInputProperties struct {
	// The Policy Id.
	PolicyId *string `pulumi:"policyId"`
	// The protectable item Id.
	ProtectableItemId *string `pulumi:"protectableItemId"`
	// The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null.
	ProviderSpecificDetails interface{} `pulumi:"providerSpecificDetails"`
}

// EnableProtectionInputPropertiesInput is an input type that accepts EnableProtectionInputPropertiesArgs and EnableProtectionInputPropertiesOutput values.
// You can construct a concrete instance of `EnableProtectionInputPropertiesInput` via:
//
//	EnableProtectionInputPropertiesArgs{...}
type EnableProtectionInputPropertiesInput interface {
	pulumi.Input

	ToEnableProtectionInputPropertiesOutput() EnableProtectionInputPropertiesOutput
	ToEnableProtectionInputPropertiesOutputWithContext(context.Context) EnableProtectionInputPropertiesOutput
}

// Enable protection input properties.
type EnableProtectionInputPropertiesArgs struct {
	// The Policy Id.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// The protectable item Id.
	ProtectableItemId pulumi.StringPtrInput `pulumi:"protectableItemId"`
	// The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null.
	ProviderSpecificDetails pulumi.Input `pulumi:"providerSpecificDetails"`
}

func (EnableProtectionInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableProtectionInputProperties)(nil)).Elem()
}

func (i EnableProtectionInputPropertiesArgs) ToEnableProtectionInputPropertiesOutput() EnableProtectionInputPropertiesOutput {
	return i.ToEnableProtectionInputPropertiesOutputWithContext(context.Background())
}

func (i EnableProtectionInputPropertiesArgs) ToEnableProtectionInputPropertiesOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableProtectionInputPropertiesOutput)
}

func (i EnableProtectionInputPropertiesArgs) ToEnableProtectionInputPropertiesPtrOutput() EnableProtectionInputPropertiesPtrOutput {
	return i.ToEnableProtectionInputPropertiesPtrOutputWithContext(context.Background())
}

func (i EnableProtectionInputPropertiesArgs) ToEnableProtectionInputPropertiesPtrOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableProtectionInputPropertiesOutput).ToEnableProtectionInputPropertiesPtrOutputWithContext(ctx)
}

// EnableProtectionInputPropertiesPtrInput is an input type that accepts EnableProtectionInputPropertiesArgs, EnableProtectionInputPropertiesPtr and EnableProtectionInputPropertiesPtrOutput values.
// You can construct a concrete instance of `EnableProtectionInputPropertiesPtrInput` via:
//
//	        EnableProtectionInputPropertiesArgs{...}
//
//	or:
//
//	        nil
type EnableProtectionInputPropertiesPtrInput interface {
	pulumi.Input

	ToEnableProtectionInputPropertiesPtrOutput() EnableProtectionInputPropertiesPtrOutput
	ToEnableProtectionInputPropertiesPtrOutputWithContext(context.Context) EnableProtectionInputPropertiesPtrOutput
}

type enableProtectionInputPropertiesPtrType EnableProtectionInputPropertiesArgs

func EnableProtectionInputPropertiesPtr(v *EnableProtectionInputPropertiesArgs) EnableProtectionInputPropertiesPtrInput {
	return (*enableProtectionInputPropertiesPtrType)(v)
}

func (*enableProtectionInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnableProtectionInputProperties)(nil)).Elem()
}

func (i *enableProtectionInputPropertiesPtrType) ToEnableProtectionInputPropertiesPtrOutput() EnableProtectionInputPropertiesPtrOutput {
	return i.ToEnableProtectionInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *enableProtectionInputPropertiesPtrType) ToEnableProtectionInputPropertiesPtrOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableProtectionInputPropertiesPtrOutput)
}

// Enable protection input properties.
type EnableProtectionInputPropertiesOutput struct{ *pulumi.OutputState }

func (EnableProtectionInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableProtectionInputProperties)(nil)).Elem()
}

func (o EnableProtectionInputPropertiesOutput) ToEnableProtectionInputPropertiesOutput() EnableProtectionInputPropertiesOutput {
	return o
}

func (o EnableProtectionInputPropertiesOutput) ToEnableProtectionInputPropertiesOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesOutput {
	return o
}

func (o EnableProtectionInputPropertiesOutput) ToEnableProtectionInputPropertiesPtrOutput() EnableProtectionInputPropertiesPtrOutput {
	return o.ToEnableProtectionInputPropertiesPtrOutputWithContext(context.Background())
}

func (o EnableProtectionInputPropertiesOutput) ToEnableProtectionInputPropertiesPtrOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnableProtectionInputProperties) *EnableProtectionInputProperties {
		return &v
	}).(EnableProtectionInputPropertiesPtrOutput)
}

// The Policy Id.
func (o EnableProtectionInputPropertiesOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnableProtectionInputProperties) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// The protectable item Id.
func (o EnableProtectionInputPropertiesOutput) ProtectableItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnableProtectionInputProperties) *string { return v.ProtectableItemId }).(pulumi.StringPtrOutput)
}

// The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null.
func (o EnableProtectionInputPropertiesOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v EnableProtectionInputProperties) interface{} { return v.ProviderSpecificDetails }).(pulumi.AnyOutput)
}

type EnableProtectionInputPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EnableProtectionInputPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnableProtectionInputProperties)(nil)).Elem()
}

func (o EnableProtectionInputPropertiesPtrOutput) ToEnableProtectionInputPropertiesPtrOutput() EnableProtectionInputPropertiesPtrOutput {
	return o
}

func (o EnableProtectionInputPropertiesPtrOutput) ToEnableProtectionInputPropertiesPtrOutputWithContext(ctx context.Context) EnableProtectionInputPropertiesPtrOutput {
	return o
}

func (o EnableProtectionInputPropertiesPtrOutput) Elem() EnableProtectionInputPropertiesOutput {
	return o.ApplyT(func(v *EnableProtectionInputProperties) EnableProtectionInputProperties {
		if v != nil {
			return *v
		}
		var ret EnableProtectionInputProperties
		return ret
	}).(EnableProtectionInputPropertiesOutput)
}

// The Policy Id.
func (o EnableProtectionInputPropertiesPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnableProtectionInputProperties) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// The protectable item Id.
func (o EnableProtectionInputPropertiesPtrOutput) ProtectableItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnableProtectionInputProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableItemId
	}).(pulumi.StringPtrOutput)
}

// The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null.
func (o EnableProtectionInputPropertiesPtrOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *EnableProtectionInputProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.ProviderSpecificDetails
	}).(pulumi.AnyOutput)
}

// Encryption details for the fabric.
type EncryptionDetailsResponse struct {
	// The key encryption key certificate expiry date.
	KekCertExpiryDate *string `pulumi:"kekCertExpiryDate"`
	// The key encryption key certificate thumbprint.
	KekCertThumbprint *string `pulumi:"kekCertThumbprint"`
	// The key encryption key state for the Vmm.
	KekState *string `pulumi:"kekState"`
}

// Encryption details for the fabric.
type EncryptionDetailsResponseOutput struct{ *pulumi.OutputState }

func (EncryptionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionDetailsResponse)(nil)).Elem()
}

func (o EncryptionDetailsResponseOutput) ToEncryptionDetailsResponseOutput() EncryptionDetailsResponseOutput {
	return o
}

func (o EncryptionDetailsResponseOutput) ToEncryptionDetailsResponseOutputWithContext(ctx context.Context) EncryptionDetailsResponseOutput {
	return o
}

// The key encryption key certificate expiry date.
func (o EncryptionDetailsResponseOutput) KekCertExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionDetailsResponse) *string { return v.KekCertExpiryDate }).(pulumi.StringPtrOutput)
}

// The key encryption key certificate thumbprint.
func (o EncryptionDetailsResponseOutput) KekCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionDetailsResponse) *string { return v.KekCertThumbprint }).(pulumi.StringPtrOutput)
}

// The key encryption key state for the Vmm.
func (o EncryptionDetailsResponseOutput) KekState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionDetailsResponse) *string { return v.KekState }).(pulumi.StringPtrOutput)
}

type EncryptionDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionDetailsResponse)(nil)).Elem()
}

func (o EncryptionDetailsResponsePtrOutput) ToEncryptionDetailsResponsePtrOutput() EncryptionDetailsResponsePtrOutput {
	return o
}

func (o EncryptionDetailsResponsePtrOutput) ToEncryptionDetailsResponsePtrOutputWithContext(ctx context.Context) EncryptionDetailsResponsePtrOutput {
	return o
}

func (o EncryptionDetailsResponsePtrOutput) Elem() EncryptionDetailsResponseOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) EncryptionDetailsResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionDetailsResponse
		return ret
	}).(EncryptionDetailsResponseOutput)
}

// The key encryption key certificate expiry date.
func (o EncryptionDetailsResponsePtrOutput) KekCertExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekCertExpiryDate
	}).(pulumi.StringPtrOutput)
}

// The key encryption key certificate thumbprint.
func (o EncryptionDetailsResponsePtrOutput) KekCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekCertThumbprint
	}).(pulumi.StringPtrOutput)
}

// The key encryption key state for the Vmm.
func (o EncryptionDetailsResponsePtrOutput) KekState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KekState
	}).(pulumi.StringPtrOutput)
}

// Error Detail class which encapsulates Code, Message and Recommendations.
type ErrorDetailResponse struct {
	// Error code.
	Code string `pulumi:"code"`
	// Error Message related to the Code.
	Message string `pulumi:"message"`
	// List of recommendation strings.
	Recommendations []string `pulumi:"recommendations"`
}

// Error Detail class which encapsulates Code, Message and Recommendations.
type ErrorDetailResponseOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutput() ErrorDetailResponseOutput {
	return o
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutputWithContext(ctx context.Context) ErrorDetailResponseOutput {
	return o
}

// Error code.
func (o ErrorDetailResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Error Message related to the Code.
func (o ErrorDetailResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Message }).(pulumi.StringOutput)
}

// List of recommendation strings.
func (o ErrorDetailResponseOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ErrorDetailResponse) []string { return v.Recommendations }).(pulumi.StringArrayOutput)
}

type ErrorDetailResponsePtrOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponsePtrOutput) ToErrorDetailResponsePtrOutput() ErrorDetailResponsePtrOutput {
	return o
}

func (o ErrorDetailResponsePtrOutput) ToErrorDetailResponsePtrOutputWithContext(ctx context.Context) ErrorDetailResponsePtrOutput {
	return o
}

func (o ErrorDetailResponsePtrOutput) Elem() ErrorDetailResponseOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) ErrorDetailResponse {
		if v != nil {
			return *v
		}
		var ret ErrorDetailResponse
		return ret
	}).(ErrorDetailResponseOutput)
}

// Error code.
func (o ErrorDetailResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// Error Message related to the Code.
func (o ErrorDetailResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// List of recommendation strings.
func (o ErrorDetailResponsePtrOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) []string {
		if v == nil {
			return nil
		}
		return v.Recommendations
	}).(pulumi.StringArrayOutput)
}

// Extended location of the resource.
type ExtendedLocation struct {
	// The name of the extended location.
	Name string `pulumi:"name"`
	// The extended location type.
	Type string `pulumi:"type"`
}

// ExtendedLocationInput is an input type that accepts ExtendedLocationArgs and ExtendedLocationOutput values.
// You can construct a concrete instance of `ExtendedLocationInput` via:
//
//	ExtendedLocationArgs{...}
type ExtendedLocationInput interface {
	pulumi.Input

	ToExtendedLocationOutput() ExtendedLocationOutput
	ToExtendedLocationOutputWithContext(context.Context) ExtendedLocationOutput
}

// Extended location of the resource.
type ExtendedLocationArgs struct {
	// The name of the extended location.
	Name pulumi.StringInput `pulumi:"name"`
	// The extended location type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (i ExtendedLocationArgs) ToExtendedLocationOutput() ExtendedLocationOutput {
	return i.ToExtendedLocationOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput)
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput).ToExtendedLocationPtrOutputWithContext(ctx)
}

// ExtendedLocationPtrInput is an input type that accepts ExtendedLocationArgs, ExtendedLocationPtr and ExtendedLocationPtrOutput values.
// You can construct a concrete instance of `ExtendedLocationPtrInput` via:
//
//	        ExtendedLocationArgs{...}
//
//	or:
//
//	        nil
type ExtendedLocationPtrInput interface {
	pulumi.Input

	ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput
	ToExtendedLocationPtrOutputWithContext(context.Context) ExtendedLocationPtrOutput
}

type extendedLocationPtrType ExtendedLocationArgs

func ExtendedLocationPtr(v *ExtendedLocationArgs) ExtendedLocationPtrInput {
	return (*extendedLocationPtrType)(v)
}

func (*extendedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationPtrOutput)
}

// Extended location of the resource.
type ExtendedLocationOutput struct{ *pulumi.OutputState }

func (ExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationOutput) ToExtendedLocationOutput() ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocation) *ExtendedLocation {
		return &v
	}).(ExtendedLocationPtrOutput)
}

// The name of the extended location.
func (o ExtendedLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocation) string { return v.Name }).(pulumi.StringOutput)
}

// The extended location type.
func (o ExtendedLocationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocation) string { return v.Type }).(pulumi.StringOutput)
}

type ExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) Elem() ExtendedLocationOutput {
	return o.ApplyT(func(v *ExtendedLocation) ExtendedLocation {
		if v != nil {
			return *v
		}
		var ret ExtendedLocation
		return ret
	}).(ExtendedLocationOutput)
}

// The name of the extended location.
func (o ExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o ExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Extended location of the resource.
type ExtendedLocationResponse struct {
	// The name of the extended location.
	Name string `pulumi:"name"`
	// The extended location type.
	Type string `pulumi:"type"`
}

// Extended location of the resource.
type ExtendedLocationResponseOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutput() ExtendedLocationResponseOutput {
	return o
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutputWithContext(ctx context.Context) ExtendedLocationResponseOutput {
	return o
}

// The name of the extended location.
func (o ExtendedLocationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The extended location type.
func (o ExtendedLocationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ExtendedLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutput() ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutputWithContext(ctx context.Context) ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) Elem() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) ExtendedLocationResponse {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationResponse
		return ret
	}).(ExtendedLocationResponseOutput)
}

// The name of the extended location.
func (o ExtendedLocationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o ExtendedLocationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
type ExtendedProperties struct {
	// Extended Properties for Disk Exclusion.
	DiskExclusionProperties *DiskExclusionProperties `pulumi:"diskExclusionProperties"`
	// Linux VM name
	LinuxVmApplicationName *string `pulumi:"linuxVmApplicationName"`
}

// ExtendedPropertiesInput is an input type that accepts ExtendedPropertiesArgs and ExtendedPropertiesOutput values.
// You can construct a concrete instance of `ExtendedPropertiesInput` via:
//
//	ExtendedPropertiesArgs{...}
type ExtendedPropertiesInput interface {
	pulumi.Input

	ToExtendedPropertiesOutput() ExtendedPropertiesOutput
	ToExtendedPropertiesOutputWithContext(context.Context) ExtendedPropertiesOutput
}

// Extended Properties for Azure IaasVM Backup.
type ExtendedPropertiesArgs struct {
	// Extended Properties for Disk Exclusion.
	DiskExclusionProperties DiskExclusionPropertiesPtrInput `pulumi:"diskExclusionProperties"`
	// Linux VM name
	LinuxVmApplicationName pulumi.StringPtrInput `pulumi:"linuxVmApplicationName"`
}

func (ExtendedPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedProperties)(nil)).Elem()
}

func (i ExtendedPropertiesArgs) ToExtendedPropertiesOutput() ExtendedPropertiesOutput {
	return i.ToExtendedPropertiesOutputWithContext(context.Background())
}

func (i ExtendedPropertiesArgs) ToExtendedPropertiesOutputWithContext(ctx context.Context) ExtendedPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedPropertiesOutput)
}

func (i ExtendedPropertiesArgs) ToExtendedPropertiesPtrOutput() ExtendedPropertiesPtrOutput {
	return i.ToExtendedPropertiesPtrOutputWithContext(context.Background())
}

func (i ExtendedPropertiesArgs) ToExtendedPropertiesPtrOutputWithContext(ctx context.Context) ExtendedPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedPropertiesOutput).ToExtendedPropertiesPtrOutputWithContext(ctx)
}

// ExtendedPropertiesPtrInput is an input type that accepts ExtendedPropertiesArgs, ExtendedPropertiesPtr and ExtendedPropertiesPtrOutput values.
// You can construct a concrete instance of `ExtendedPropertiesPtrInput` via:
//
//	        ExtendedPropertiesArgs{...}
//
//	or:
//
//	        nil
type ExtendedPropertiesPtrInput interface {
	pulumi.Input

	ToExtendedPropertiesPtrOutput() ExtendedPropertiesPtrOutput
	ToExtendedPropertiesPtrOutputWithContext(context.Context) ExtendedPropertiesPtrOutput
}

type extendedPropertiesPtrType ExtendedPropertiesArgs

func ExtendedPropertiesPtr(v *ExtendedPropertiesArgs) ExtendedPropertiesPtrInput {
	return (*extendedPropertiesPtrType)(v)
}

func (*extendedPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedProperties)(nil)).Elem()
}

func (i *extendedPropertiesPtrType) ToExtendedPropertiesPtrOutput() ExtendedPropertiesPtrOutput {
	return i.ToExtendedPropertiesPtrOutputWithContext(context.Background())
}

func (i *extendedPropertiesPtrType) ToExtendedPropertiesPtrOutputWithContext(ctx context.Context) ExtendedPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedPropertiesPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
type ExtendedPropertiesOutput struct{ *pulumi.OutputState }

func (ExtendedPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedProperties)(nil)).Elem()
}

func (o ExtendedPropertiesOutput) ToExtendedPropertiesOutput() ExtendedPropertiesOutput {
	return o
}

func (o ExtendedPropertiesOutput) ToExtendedPropertiesOutputWithContext(ctx context.Context) ExtendedPropertiesOutput {
	return o
}

func (o ExtendedPropertiesOutput) ToExtendedPropertiesPtrOutput() ExtendedPropertiesPtrOutput {
	return o.ToExtendedPropertiesPtrOutputWithContext(context.Background())
}

func (o ExtendedPropertiesOutput) ToExtendedPropertiesPtrOutputWithContext(ctx context.Context) ExtendedPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedProperties) *ExtendedProperties {
		return &v
	}).(ExtendedPropertiesPtrOutput)
}

// Extended Properties for Disk Exclusion.
func (o ExtendedPropertiesOutput) DiskExclusionProperties() DiskExclusionPropertiesPtrOutput {
	return o.ApplyT(func(v ExtendedProperties) *DiskExclusionProperties { return v.DiskExclusionProperties }).(DiskExclusionPropertiesPtrOutput)
}

// Linux VM name
func (o ExtendedPropertiesOutput) LinuxVmApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedProperties) *string { return v.LinuxVmApplicationName }).(pulumi.StringPtrOutput)
}

type ExtendedPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ExtendedPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedProperties)(nil)).Elem()
}

func (o ExtendedPropertiesPtrOutput) ToExtendedPropertiesPtrOutput() ExtendedPropertiesPtrOutput {
	return o
}

func (o ExtendedPropertiesPtrOutput) ToExtendedPropertiesPtrOutputWithContext(ctx context.Context) ExtendedPropertiesPtrOutput {
	return o
}

func (o ExtendedPropertiesPtrOutput) Elem() ExtendedPropertiesOutput {
	return o.ApplyT(func(v *ExtendedProperties) ExtendedProperties {
		if v != nil {
			return *v
		}
		var ret ExtendedProperties
		return ret
	}).(ExtendedPropertiesOutput)
}

// Extended Properties for Disk Exclusion.
func (o ExtendedPropertiesPtrOutput) DiskExclusionProperties() DiskExclusionPropertiesPtrOutput {
	return o.ApplyT(func(v *ExtendedProperties) *DiskExclusionProperties {
		if v == nil {
			return nil
		}
		return v.DiskExclusionProperties
	}).(DiskExclusionPropertiesPtrOutput)
}

// Linux VM name
func (o ExtendedPropertiesPtrOutput) LinuxVmApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedProperties) *string {
		if v == nil {
			return nil
		}
		return v.LinuxVmApplicationName
	}).(pulumi.StringPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
type ExtendedPropertiesResponse struct {
	// Extended Properties for Disk Exclusion.
	DiskExclusionProperties *DiskExclusionPropertiesResponse `pulumi:"diskExclusionProperties"`
	// Linux VM name
	LinuxVmApplicationName *string `pulumi:"linuxVmApplicationName"`
}

// Extended Properties for Azure IaasVM Backup.
type ExtendedPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ExtendedPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedPropertiesResponse)(nil)).Elem()
}

func (o ExtendedPropertiesResponseOutput) ToExtendedPropertiesResponseOutput() ExtendedPropertiesResponseOutput {
	return o
}

func (o ExtendedPropertiesResponseOutput) ToExtendedPropertiesResponseOutputWithContext(ctx context.Context) ExtendedPropertiesResponseOutput {
	return o
}

// Extended Properties for Disk Exclusion.
func (o ExtendedPropertiesResponseOutput) DiskExclusionProperties() DiskExclusionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ExtendedPropertiesResponse) *DiskExclusionPropertiesResponse { return v.DiskExclusionProperties }).(DiskExclusionPropertiesResponsePtrOutput)
}

// Linux VM name
func (o ExtendedPropertiesResponseOutput) LinuxVmApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedPropertiesResponse) *string { return v.LinuxVmApplicationName }).(pulumi.StringPtrOutput)
}

type ExtendedPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ExtendedPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedPropertiesResponse)(nil)).Elem()
}

func (o ExtendedPropertiesResponsePtrOutput) ToExtendedPropertiesResponsePtrOutput() ExtendedPropertiesResponsePtrOutput {
	return o
}

func (o ExtendedPropertiesResponsePtrOutput) ToExtendedPropertiesResponsePtrOutputWithContext(ctx context.Context) ExtendedPropertiesResponsePtrOutput {
	return o
}

func (o ExtendedPropertiesResponsePtrOutput) Elem() ExtendedPropertiesResponseOutput {
	return o.ApplyT(func(v *ExtendedPropertiesResponse) ExtendedPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ExtendedPropertiesResponse
		return ret
	}).(ExtendedPropertiesResponseOutput)
}

// Extended Properties for Disk Exclusion.
func (o ExtendedPropertiesResponsePtrOutput) DiskExclusionProperties() DiskExclusionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *ExtendedPropertiesResponse) *DiskExclusionPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.DiskExclusionProperties
	}).(DiskExclusionPropertiesResponsePtrOutput)
}

// Linux VM name
func (o ExtendedPropertiesResponsePtrOutput) LinuxVmApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinuxVmApplicationName
	}).(pulumi.StringPtrOutput)
}

// Properties of site details provided during the time of site creation.
type FabricCreationInputProperties struct {
	// Fabric provider specific creation input.
	CustomDetails interface{} `pulumi:"customDetails"`
}

// FabricCreationInputPropertiesInput is an input type that accepts FabricCreationInputPropertiesArgs and FabricCreationInputPropertiesOutput values.
// You can construct a concrete instance of `FabricCreationInputPropertiesInput` via:
//
//	FabricCreationInputPropertiesArgs{...}
type FabricCreationInputPropertiesInput interface {
	pulumi.Input

	ToFabricCreationInputPropertiesOutput() FabricCreationInputPropertiesOutput
	ToFabricCreationInputPropertiesOutputWithContext(context.Context) FabricCreationInputPropertiesOutput
}

// Properties of site details provided during the time of site creation.
type FabricCreationInputPropertiesArgs struct {
	// Fabric provider specific creation input.
	CustomDetails pulumi.Input `pulumi:"customDetails"`
}

func (FabricCreationInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricCreationInputProperties)(nil)).Elem()
}

func (i FabricCreationInputPropertiesArgs) ToFabricCreationInputPropertiesOutput() FabricCreationInputPropertiesOutput {
	return i.ToFabricCreationInputPropertiesOutputWithContext(context.Background())
}

func (i FabricCreationInputPropertiesArgs) ToFabricCreationInputPropertiesOutputWithContext(ctx context.Context) FabricCreationInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricCreationInputPropertiesOutput)
}

func (i FabricCreationInputPropertiesArgs) ToFabricCreationInputPropertiesPtrOutput() FabricCreationInputPropertiesPtrOutput {
	return i.ToFabricCreationInputPropertiesPtrOutputWithContext(context.Background())
}

func (i FabricCreationInputPropertiesArgs) ToFabricCreationInputPropertiesPtrOutputWithContext(ctx context.Context) FabricCreationInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricCreationInputPropertiesOutput).ToFabricCreationInputPropertiesPtrOutputWithContext(ctx)
}

// FabricCreationInputPropertiesPtrInput is an input type that accepts FabricCreationInputPropertiesArgs, FabricCreationInputPropertiesPtr and FabricCreationInputPropertiesPtrOutput values.
// You can construct a concrete instance of `FabricCreationInputPropertiesPtrInput` via:
//
//	        FabricCreationInputPropertiesArgs{...}
//
//	or:
//
//	        nil
type FabricCreationInputPropertiesPtrInput interface {
	pulumi.Input

	ToFabricCreationInputPropertiesPtrOutput() FabricCreationInputPropertiesPtrOutput
	ToFabricCreationInputPropertiesPtrOutputWithContext(context.Context) FabricCreationInputPropertiesPtrOutput
}

type fabricCreationInputPropertiesPtrType FabricCreationInputPropertiesArgs

func FabricCreationInputPropertiesPtr(v *FabricCreationInputPropertiesArgs) FabricCreationInputPropertiesPtrInput {
	return (*fabricCreationInputPropertiesPtrType)(v)
}

func (*fabricCreationInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FabricCreationInputProperties)(nil)).Elem()
}

func (i *fabricCreationInputPropertiesPtrType) ToFabricCreationInputPropertiesPtrOutput() FabricCreationInputPropertiesPtrOutput {
	return i.ToFabricCreationInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *fabricCreationInputPropertiesPtrType) ToFabricCreationInputPropertiesPtrOutputWithContext(ctx context.Context) FabricCreationInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FabricCreationInputPropertiesPtrOutput)
}

// Properties of site details provided during the time of site creation.
type FabricCreationInputPropertiesOutput struct{ *pulumi.OutputState }

func (FabricCreationInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricCreationInputProperties)(nil)).Elem()
}

func (o FabricCreationInputPropertiesOutput) ToFabricCreationInputPropertiesOutput() FabricCreationInputPropertiesOutput {
	return o
}

func (o FabricCreationInputPropertiesOutput) ToFabricCreationInputPropertiesOutputWithContext(ctx context.Context) FabricCreationInputPropertiesOutput {
	return o
}

func (o FabricCreationInputPropertiesOutput) ToFabricCreationInputPropertiesPtrOutput() FabricCreationInputPropertiesPtrOutput {
	return o.ToFabricCreationInputPropertiesPtrOutputWithContext(context.Background())
}

func (o FabricCreationInputPropertiesOutput) ToFabricCreationInputPropertiesPtrOutputWithContext(ctx context.Context) FabricCreationInputPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FabricCreationInputProperties) *FabricCreationInputProperties {
		return &v
	}).(FabricCreationInputPropertiesPtrOutput)
}

// Fabric provider specific creation input.
func (o FabricCreationInputPropertiesOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v FabricCreationInputProperties) interface{} { return v.CustomDetails }).(pulumi.AnyOutput)
}

type FabricCreationInputPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FabricCreationInputPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FabricCreationInputProperties)(nil)).Elem()
}

func (o FabricCreationInputPropertiesPtrOutput) ToFabricCreationInputPropertiesPtrOutput() FabricCreationInputPropertiesPtrOutput {
	return o
}

func (o FabricCreationInputPropertiesPtrOutput) ToFabricCreationInputPropertiesPtrOutputWithContext(ctx context.Context) FabricCreationInputPropertiesPtrOutput {
	return o
}

func (o FabricCreationInputPropertiesPtrOutput) Elem() FabricCreationInputPropertiesOutput {
	return o.ApplyT(func(v *FabricCreationInputProperties) FabricCreationInputProperties {
		if v != nil {
			return *v
		}
		var ret FabricCreationInputProperties
		return ret
	}).(FabricCreationInputPropertiesOutput)
}

// Fabric provider specific creation input.
func (o FabricCreationInputPropertiesPtrOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *FabricCreationInputProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.CustomDetails
	}).(pulumi.AnyOutput)
}

// Fabric properties.
type FabricPropertiesResponse struct {
	// BCDR state of the fabric.
	BcdrState *string `pulumi:"bcdrState"`
	// Fabric specific settings.
	CustomDetails interface{} `pulumi:"customDetails"`
	// Encryption details for the fabric.
	EncryptionDetails *EncryptionDetailsResponse `pulumi:"encryptionDetails"`
	// Friendly name of the fabric.
	FriendlyName *string `pulumi:"friendlyName"`
	// Health of fabric.
	Health *string `pulumi:"health"`
	// Fabric health error details.
	HealthErrorDetails []HealthErrorResponse `pulumi:"healthErrorDetails"`
	// Dra Registration Id.
	InternalIdentifier *string `pulumi:"internalIdentifier"`
	// Rollover encryption details for the fabric.
	RolloverEncryptionDetails *EncryptionDetailsResponse `pulumi:"rolloverEncryptionDetails"`
}

// Fabric properties.
type FabricPropertiesResponseOutput struct{ *pulumi.OutputState }

func (FabricPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FabricPropertiesResponse)(nil)).Elem()
}

func (o FabricPropertiesResponseOutput) ToFabricPropertiesResponseOutput() FabricPropertiesResponseOutput {
	return o
}

func (o FabricPropertiesResponseOutput) ToFabricPropertiesResponseOutputWithContext(ctx context.Context) FabricPropertiesResponseOutput {
	return o
}

// BCDR state of the fabric.
func (o FabricPropertiesResponseOutput) BcdrState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *string { return v.BcdrState }).(pulumi.StringPtrOutput)
}

// Fabric specific settings.
func (o FabricPropertiesResponseOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) interface{} { return v.CustomDetails }).(pulumi.AnyOutput)
}

// Encryption details for the fabric.
func (o FabricPropertiesResponseOutput) EncryptionDetails() EncryptionDetailsResponsePtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *EncryptionDetailsResponse { return v.EncryptionDetails }).(EncryptionDetailsResponsePtrOutput)
}

// Friendly name of the fabric.
func (o FabricPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Health of fabric.
func (o FabricPropertiesResponseOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *string { return v.Health }).(pulumi.StringPtrOutput)
}

// Fabric health error details.
func (o FabricPropertiesResponseOutput) HealthErrorDetails() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) []HealthErrorResponse { return v.HealthErrorDetails }).(HealthErrorResponseArrayOutput)
}

// Dra Registration Id.
func (o FabricPropertiesResponseOutput) InternalIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *string { return v.InternalIdentifier }).(pulumi.StringPtrOutput)
}

// Rollover encryption details for the fabric.
func (o FabricPropertiesResponseOutput) RolloverEncryptionDetails() EncryptionDetailsResponsePtrOutput {
	return o.ApplyT(func(v FabricPropertiesResponse) *EncryptionDetailsResponse { return v.RolloverEncryptionDetails }).(EncryptionDetailsResponsePtrOutput)
}

// Details of the gateway operation.
type GatewayOperationDetailsResponse struct {
	// A value indicating the datastore collection.
	DataStores []string `pulumi:"dataStores"`
	// A value indicating the ESXi host name.
	HostName string `pulumi:"hostName"`
	// A value indicating the progress percentage of gateway operation.
	ProgressPercentage int `pulumi:"progressPercentage"`
	// A value indicating the state of gateway operation.
	State string `pulumi:"state"`
	// A value indicating the time elapsed for the operation in milliseconds.
	TimeElapsed float64 `pulumi:"timeElapsed"`
	// A value indicating the time remaining for the operation in milliseconds.
	TimeRemaining float64 `pulumi:"timeRemaining"`
	// A value indicating the upload speed in bytes per second.
	UploadSpeed float64 `pulumi:"uploadSpeed"`
	// A value indicating the VMware read throughput in bytes per second.
	VmwareReadThroughput float64 `pulumi:"vmwareReadThroughput"`
}

// Details of the gateway operation.
type GatewayOperationDetailsResponseOutput struct{ *pulumi.OutputState }

func (GatewayOperationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayOperationDetailsResponse)(nil)).Elem()
}

func (o GatewayOperationDetailsResponseOutput) ToGatewayOperationDetailsResponseOutput() GatewayOperationDetailsResponseOutput {
	return o
}

func (o GatewayOperationDetailsResponseOutput) ToGatewayOperationDetailsResponseOutputWithContext(ctx context.Context) GatewayOperationDetailsResponseOutput {
	return o
}

// A value indicating the datastore collection.
func (o GatewayOperationDetailsResponseOutput) DataStores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayOperationDetailsResponse) []string { return v.DataStores }).(pulumi.StringArrayOutput)
}

// A value indicating the ESXi host name.
func (o GatewayOperationDetailsResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayOperationDetailsResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// A value indicating the progress percentage of gateway operation.
func (o GatewayOperationDetailsResponseOutput) ProgressPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v GatewayOperationDetailsResponse) int { return v.ProgressPercentage }).(pulumi.IntOutput)
}

// A value indicating the state of gateway operation.
func (o GatewayOperationDetailsResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayOperationDetailsResponse) string { return v.State }).(pulumi.StringOutput)
}

// A value indicating the time elapsed for the operation in milliseconds.
func (o GatewayOperationDetailsResponseOutput) TimeElapsed() pulumi.Float64Output {
	return o.ApplyT(func(v GatewayOperationDetailsResponse) float64 { return v.TimeElapsed }).(pulumi.Float64Output)
}

// A value indicating the time remaining for the operation in milliseconds.
func (o GatewayOperationDetailsResponseOutput) TimeRemaining() pulumi.Float64Output {
	return o.ApplyT(func(v GatewayOperationDetailsResponse) float64 { return v.TimeRemaining }).(pulumi.Float64Output)
}

// A value indicating the upload speed in bytes per second.
func (o GatewayOperationDetailsResponseOutput) UploadSpeed() pulumi.Float64Output {
	return o.ApplyT(func(v GatewayOperationDetailsResponse) float64 { return v.UploadSpeed }).(pulumi.Float64Output)
}

// A value indicating the VMware read throughput in bytes per second.
func (o GatewayOperationDetailsResponseOutput) VmwareReadThroughput() pulumi.Float64Output {
	return o.ApplyT(func(v GatewayOperationDetailsResponse) float64 { return v.VmwareReadThroughput }).(pulumi.Float64Output)
}

type GatewayOperationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (GatewayOperationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayOperationDetailsResponse)(nil)).Elem()
}

func (o GatewayOperationDetailsResponsePtrOutput) ToGatewayOperationDetailsResponsePtrOutput() GatewayOperationDetailsResponsePtrOutput {
	return o
}

func (o GatewayOperationDetailsResponsePtrOutput) ToGatewayOperationDetailsResponsePtrOutputWithContext(ctx context.Context) GatewayOperationDetailsResponsePtrOutput {
	return o
}

func (o GatewayOperationDetailsResponsePtrOutput) Elem() GatewayOperationDetailsResponseOutput {
	return o.ApplyT(func(v *GatewayOperationDetailsResponse) GatewayOperationDetailsResponse {
		if v != nil {
			return *v
		}
		var ret GatewayOperationDetailsResponse
		return ret
	}).(GatewayOperationDetailsResponseOutput)
}

// A value indicating the datastore collection.
func (o GatewayOperationDetailsResponsePtrOutput) DataStores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayOperationDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DataStores
	}).(pulumi.StringArrayOutput)
}

// A value indicating the ESXi host name.
func (o GatewayOperationDetailsResponsePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayOperationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HostName
	}).(pulumi.StringPtrOutput)
}

// A value indicating the progress percentage of gateway operation.
func (o GatewayOperationDetailsResponsePtrOutput) ProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayOperationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ProgressPercentage
	}).(pulumi.IntPtrOutput)
}

// A value indicating the state of gateway operation.
func (o GatewayOperationDetailsResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayOperationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// A value indicating the time elapsed for the operation in milliseconds.
func (o GatewayOperationDetailsResponsePtrOutput) TimeElapsed() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GatewayOperationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.TimeElapsed
	}).(pulumi.Float64PtrOutput)
}

// A value indicating the time remaining for the operation in milliseconds.
func (o GatewayOperationDetailsResponsePtrOutput) TimeRemaining() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GatewayOperationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.TimeRemaining
	}).(pulumi.Float64PtrOutput)
}

// A value indicating the upload speed in bytes per second.
func (o GatewayOperationDetailsResponsePtrOutput) UploadSpeed() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GatewayOperationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.UploadSpeed
	}).(pulumi.Float64PtrOutput)
}

// A value indicating the VMware read throughput in bytes per second.
func (o GatewayOperationDetailsResponsePtrOutput) VmwareReadThroughput() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GatewayOperationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.VmwareReadThroughput
	}).(pulumi.Float64PtrOutput)
}

// Base class for generic container of backup items
type GenericContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'GenericContainer'.
	ContainerType string `pulumi:"containerType"`
	// Extended information (not returned in List container API calls)
	ExtendedInformation *GenericContainerExtendedInfo `pulumi:"extendedInformation"`
	// Name of the container's fabric
	FabricName *string `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// GenericContainerInput is an input type that accepts GenericContainerArgs and GenericContainerOutput values.
// You can construct a concrete instance of `GenericContainerInput` via:
//
//	GenericContainerArgs{...}
type GenericContainerInput interface {
	pulumi.Input

	ToGenericContainerOutput() GenericContainerOutput
	ToGenericContainerOutputWithContext(context.Context) GenericContainerOutput
}

// Base class for generic container of backup items
type GenericContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'GenericContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Extended information (not returned in List container API calls)
	ExtendedInformation GenericContainerExtendedInfoPtrInput `pulumi:"extendedInformation"`
	// Name of the container's fabric
	FabricName pulumi.StringPtrInput `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
}

func (GenericContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericContainer)(nil)).Elem()
}

func (i GenericContainerArgs) ToGenericContainerOutput() GenericContainerOutput {
	return i.ToGenericContainerOutputWithContext(context.Background())
}

func (i GenericContainerArgs) ToGenericContainerOutputWithContext(ctx context.Context) GenericContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericContainerOutput)
}

func (i GenericContainerArgs) ToGenericContainerPtrOutput() GenericContainerPtrOutput {
	return i.ToGenericContainerPtrOutputWithContext(context.Background())
}

func (i GenericContainerArgs) ToGenericContainerPtrOutputWithContext(ctx context.Context) GenericContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericContainerOutput).ToGenericContainerPtrOutputWithContext(ctx)
}

// GenericContainerPtrInput is an input type that accepts GenericContainerArgs, GenericContainerPtr and GenericContainerPtrOutput values.
// You can construct a concrete instance of `GenericContainerPtrInput` via:
//
//	        GenericContainerArgs{...}
//
//	or:
//
//	        nil
type GenericContainerPtrInput interface {
	pulumi.Input

	ToGenericContainerPtrOutput() GenericContainerPtrOutput
	ToGenericContainerPtrOutputWithContext(context.Context) GenericContainerPtrOutput
}

type genericContainerPtrType GenericContainerArgs

func GenericContainerPtr(v *GenericContainerArgs) GenericContainerPtrInput {
	return (*genericContainerPtrType)(v)
}

func (*genericContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericContainer)(nil)).Elem()
}

func (i *genericContainerPtrType) ToGenericContainerPtrOutput() GenericContainerPtrOutput {
	return i.ToGenericContainerPtrOutputWithContext(context.Background())
}

func (i *genericContainerPtrType) ToGenericContainerPtrOutputWithContext(ctx context.Context) GenericContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericContainerPtrOutput)
}

// Base class for generic container of backup items
type GenericContainerOutput struct{ *pulumi.OutputState }

func (GenericContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericContainer)(nil)).Elem()
}

func (o GenericContainerOutput) ToGenericContainerOutput() GenericContainerOutput {
	return o
}

func (o GenericContainerOutput) ToGenericContainerOutputWithContext(ctx context.Context) GenericContainerOutput {
	return o
}

func (o GenericContainerOutput) ToGenericContainerPtrOutput() GenericContainerPtrOutput {
	return o.ToGenericContainerPtrOutputWithContext(context.Background())
}

func (o GenericContainerOutput) ToGenericContainerPtrOutputWithContext(ctx context.Context) GenericContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GenericContainer) *GenericContainer {
		return &v
	}).(GenericContainerPtrOutput)
}

// Type of backup management for the container.
func (o GenericContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'GenericContainer'.
func (o GenericContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Extended information (not returned in List container API calls)
func (o GenericContainerOutput) ExtendedInformation() GenericContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v GenericContainer) *GenericContainerExtendedInfo { return v.ExtendedInformation }).(GenericContainerExtendedInfoPtrOutput)
}

// Name of the container's fabric
func (o GenericContainerOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainer) *string { return v.FabricName }).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o GenericContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o GenericContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o GenericContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o GenericContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

type GenericContainerPtrOutput struct{ *pulumi.OutputState }

func (GenericContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericContainer)(nil)).Elem()
}

func (o GenericContainerPtrOutput) ToGenericContainerPtrOutput() GenericContainerPtrOutput {
	return o
}

func (o GenericContainerPtrOutput) ToGenericContainerPtrOutputWithContext(ctx context.Context) GenericContainerPtrOutput {
	return o
}

func (o GenericContainerPtrOutput) Elem() GenericContainerOutput {
	return o.ApplyT(func(v *GenericContainer) GenericContainer {
		if v != nil {
			return *v
		}
		var ret GenericContainer
		return ret
	}).(GenericContainerOutput)
}

// Type of backup management for the container.
func (o GenericContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'GenericContainer'.
func (o GenericContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Extended information (not returned in List container API calls)
func (o GenericContainerPtrOutput) ExtendedInformation() GenericContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v *GenericContainer) *GenericContainerExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInformation
	}).(GenericContainerExtendedInfoPtrOutput)
}

// Name of the container's fabric
func (o GenericContainerPtrOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainer) *string {
		if v == nil {
			return nil
		}
		return v.FabricName
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o GenericContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o GenericContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o GenericContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o GenericContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// Container extended information
type GenericContainerExtendedInfo struct {
	// Container identity information
	ContainerIdentityInfo *ContainerIdentityInfo `pulumi:"containerIdentityInfo"`
	// Public key of container cert
	RawCertData *string `pulumi:"rawCertData"`
	// Azure Backup Service Endpoints for the container
	ServiceEndpoints map[string]string `pulumi:"serviceEndpoints"`
}

// GenericContainerExtendedInfoInput is an input type that accepts GenericContainerExtendedInfoArgs and GenericContainerExtendedInfoOutput values.
// You can construct a concrete instance of `GenericContainerExtendedInfoInput` via:
//
//	GenericContainerExtendedInfoArgs{...}
type GenericContainerExtendedInfoInput interface {
	pulumi.Input

	ToGenericContainerExtendedInfoOutput() GenericContainerExtendedInfoOutput
	ToGenericContainerExtendedInfoOutputWithContext(context.Context) GenericContainerExtendedInfoOutput
}

// Container extended information
type GenericContainerExtendedInfoArgs struct {
	// Container identity information
	ContainerIdentityInfo ContainerIdentityInfoPtrInput `pulumi:"containerIdentityInfo"`
	// Public key of container cert
	RawCertData pulumi.StringPtrInput `pulumi:"rawCertData"`
	// Azure Backup Service Endpoints for the container
	ServiceEndpoints pulumi.StringMapInput `pulumi:"serviceEndpoints"`
}

func (GenericContainerExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericContainerExtendedInfo)(nil)).Elem()
}

func (i GenericContainerExtendedInfoArgs) ToGenericContainerExtendedInfoOutput() GenericContainerExtendedInfoOutput {
	return i.ToGenericContainerExtendedInfoOutputWithContext(context.Background())
}

func (i GenericContainerExtendedInfoArgs) ToGenericContainerExtendedInfoOutputWithContext(ctx context.Context) GenericContainerExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericContainerExtendedInfoOutput)
}

func (i GenericContainerExtendedInfoArgs) ToGenericContainerExtendedInfoPtrOutput() GenericContainerExtendedInfoPtrOutput {
	return i.ToGenericContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i GenericContainerExtendedInfoArgs) ToGenericContainerExtendedInfoPtrOutputWithContext(ctx context.Context) GenericContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericContainerExtendedInfoOutput).ToGenericContainerExtendedInfoPtrOutputWithContext(ctx)
}

// GenericContainerExtendedInfoPtrInput is an input type that accepts GenericContainerExtendedInfoArgs, GenericContainerExtendedInfoPtr and GenericContainerExtendedInfoPtrOutput values.
// You can construct a concrete instance of `GenericContainerExtendedInfoPtrInput` via:
//
//	        GenericContainerExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type GenericContainerExtendedInfoPtrInput interface {
	pulumi.Input

	ToGenericContainerExtendedInfoPtrOutput() GenericContainerExtendedInfoPtrOutput
	ToGenericContainerExtendedInfoPtrOutputWithContext(context.Context) GenericContainerExtendedInfoPtrOutput
}

type genericContainerExtendedInfoPtrType GenericContainerExtendedInfoArgs

func GenericContainerExtendedInfoPtr(v *GenericContainerExtendedInfoArgs) GenericContainerExtendedInfoPtrInput {
	return (*genericContainerExtendedInfoPtrType)(v)
}

func (*genericContainerExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericContainerExtendedInfo)(nil)).Elem()
}

func (i *genericContainerExtendedInfoPtrType) ToGenericContainerExtendedInfoPtrOutput() GenericContainerExtendedInfoPtrOutput {
	return i.ToGenericContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *genericContainerExtendedInfoPtrType) ToGenericContainerExtendedInfoPtrOutputWithContext(ctx context.Context) GenericContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericContainerExtendedInfoPtrOutput)
}

// Container extended information
type GenericContainerExtendedInfoOutput struct{ *pulumi.OutputState }

func (GenericContainerExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericContainerExtendedInfo)(nil)).Elem()
}

func (o GenericContainerExtendedInfoOutput) ToGenericContainerExtendedInfoOutput() GenericContainerExtendedInfoOutput {
	return o
}

func (o GenericContainerExtendedInfoOutput) ToGenericContainerExtendedInfoOutputWithContext(ctx context.Context) GenericContainerExtendedInfoOutput {
	return o
}

func (o GenericContainerExtendedInfoOutput) ToGenericContainerExtendedInfoPtrOutput() GenericContainerExtendedInfoPtrOutput {
	return o.ToGenericContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (o GenericContainerExtendedInfoOutput) ToGenericContainerExtendedInfoPtrOutputWithContext(ctx context.Context) GenericContainerExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GenericContainerExtendedInfo) *GenericContainerExtendedInfo {
		return &v
	}).(GenericContainerExtendedInfoPtrOutput)
}

// Container identity information
func (o GenericContainerExtendedInfoOutput) ContainerIdentityInfo() ContainerIdentityInfoPtrOutput {
	return o.ApplyT(func(v GenericContainerExtendedInfo) *ContainerIdentityInfo { return v.ContainerIdentityInfo }).(ContainerIdentityInfoPtrOutput)
}

// Public key of container cert
func (o GenericContainerExtendedInfoOutput) RawCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerExtendedInfo) *string { return v.RawCertData }).(pulumi.StringPtrOutput)
}

// Azure Backup Service Endpoints for the container
func (o GenericContainerExtendedInfoOutput) ServiceEndpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v GenericContainerExtendedInfo) map[string]string { return v.ServiceEndpoints }).(pulumi.StringMapOutput)
}

type GenericContainerExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (GenericContainerExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericContainerExtendedInfo)(nil)).Elem()
}

func (o GenericContainerExtendedInfoPtrOutput) ToGenericContainerExtendedInfoPtrOutput() GenericContainerExtendedInfoPtrOutput {
	return o
}

func (o GenericContainerExtendedInfoPtrOutput) ToGenericContainerExtendedInfoPtrOutputWithContext(ctx context.Context) GenericContainerExtendedInfoPtrOutput {
	return o
}

func (o GenericContainerExtendedInfoPtrOutput) Elem() GenericContainerExtendedInfoOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfo) GenericContainerExtendedInfo {
		if v != nil {
			return *v
		}
		var ret GenericContainerExtendedInfo
		return ret
	}).(GenericContainerExtendedInfoOutput)
}

// Container identity information
func (o GenericContainerExtendedInfoPtrOutput) ContainerIdentityInfo() ContainerIdentityInfoPtrOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfo) *ContainerIdentityInfo {
		if v == nil {
			return nil
		}
		return v.ContainerIdentityInfo
	}).(ContainerIdentityInfoPtrOutput)
}

// Public key of container cert
func (o GenericContainerExtendedInfoPtrOutput) RawCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.RawCertData
	}).(pulumi.StringPtrOutput)
}

// Azure Backup Service Endpoints for the container
func (o GenericContainerExtendedInfoPtrOutput) ServiceEndpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfo) map[string]string {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(pulumi.StringMapOutput)
}

// Container extended information
type GenericContainerExtendedInfoResponse struct {
	// Container identity information
	ContainerIdentityInfo *ContainerIdentityInfoResponse `pulumi:"containerIdentityInfo"`
	// Public key of container cert
	RawCertData *string `pulumi:"rawCertData"`
	// Azure Backup Service Endpoints for the container
	ServiceEndpoints map[string]string `pulumi:"serviceEndpoints"`
}

// Container extended information
type GenericContainerExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (GenericContainerExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericContainerExtendedInfoResponse)(nil)).Elem()
}

func (o GenericContainerExtendedInfoResponseOutput) ToGenericContainerExtendedInfoResponseOutput() GenericContainerExtendedInfoResponseOutput {
	return o
}

func (o GenericContainerExtendedInfoResponseOutput) ToGenericContainerExtendedInfoResponseOutputWithContext(ctx context.Context) GenericContainerExtendedInfoResponseOutput {
	return o
}

// Container identity information
func (o GenericContainerExtendedInfoResponseOutput) ContainerIdentityInfo() ContainerIdentityInfoResponsePtrOutput {
	return o.ApplyT(func(v GenericContainerExtendedInfoResponse) *ContainerIdentityInfoResponse {
		return v.ContainerIdentityInfo
	}).(ContainerIdentityInfoResponsePtrOutput)
}

// Public key of container cert
func (o GenericContainerExtendedInfoResponseOutput) RawCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerExtendedInfoResponse) *string { return v.RawCertData }).(pulumi.StringPtrOutput)
}

// Azure Backup Service Endpoints for the container
func (o GenericContainerExtendedInfoResponseOutput) ServiceEndpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v GenericContainerExtendedInfoResponse) map[string]string { return v.ServiceEndpoints }).(pulumi.StringMapOutput)
}

type GenericContainerExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (GenericContainerExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericContainerExtendedInfoResponse)(nil)).Elem()
}

func (o GenericContainerExtendedInfoResponsePtrOutput) ToGenericContainerExtendedInfoResponsePtrOutput() GenericContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o GenericContainerExtendedInfoResponsePtrOutput) ToGenericContainerExtendedInfoResponsePtrOutputWithContext(ctx context.Context) GenericContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o GenericContainerExtendedInfoResponsePtrOutput) Elem() GenericContainerExtendedInfoResponseOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfoResponse) GenericContainerExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret GenericContainerExtendedInfoResponse
		return ret
	}).(GenericContainerExtendedInfoResponseOutput)
}

// Container identity information
func (o GenericContainerExtendedInfoResponsePtrOutput) ContainerIdentityInfo() ContainerIdentityInfoResponsePtrOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfoResponse) *ContainerIdentityInfoResponse {
		if v == nil {
			return nil
		}
		return v.ContainerIdentityInfo
	}).(ContainerIdentityInfoResponsePtrOutput)
}

// Public key of container cert
func (o GenericContainerExtendedInfoResponsePtrOutput) RawCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RawCertData
	}).(pulumi.StringPtrOutput)
}

// Azure Backup Service Endpoints for the container
func (o GenericContainerExtendedInfoResponsePtrOutput) ServiceEndpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfoResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(pulumi.StringMapOutput)
}

// Base class for generic container of backup items
type GenericContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'GenericContainer'.
	ContainerType string `pulumi:"containerType"`
	// Extended information (not returned in List container API calls)
	ExtendedInformation *GenericContainerExtendedInfoResponse `pulumi:"extendedInformation"`
	// Name of the container's fabric
	FabricName *string `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// Base class for generic container of backup items
type GenericContainerResponseOutput struct{ *pulumi.OutputState }

func (GenericContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericContainerResponse)(nil)).Elem()
}

func (o GenericContainerResponseOutput) ToGenericContainerResponseOutput() GenericContainerResponseOutput {
	return o
}

func (o GenericContainerResponseOutput) ToGenericContainerResponseOutputWithContext(ctx context.Context) GenericContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o GenericContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'GenericContainer'.
func (o GenericContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Extended information (not returned in List container API calls)
func (o GenericContainerResponseOutput) ExtendedInformation() GenericContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *GenericContainerExtendedInfoResponse { return v.ExtendedInformation }).(GenericContainerExtendedInfoResponsePtrOutput)
}

// Name of the container's fabric
func (o GenericContainerResponseOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.FabricName }).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o GenericContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o GenericContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o GenericContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o GenericContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Base class for backup items.
type GenericProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Name of this backup item's fabric.
	FabricName *string `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Data Plane Service ID of the protected item.
	ProtectedItemId *float64 `pulumi:"protectedItemId"`
	// backup item type.
	// Expected value is 'GenericProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// Loosely coupled (type, value) associations (example - parent of a protected item)
	SourceAssociations map[string]string `pulumi:"sourceAssociations"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// GenericProtectedItemInput is an input type that accepts GenericProtectedItemArgs and GenericProtectedItemOutput values.
// You can construct a concrete instance of `GenericProtectedItemInput` via:
//
//	GenericProtectedItemArgs{...}
type GenericProtectedItemInput interface {
	pulumi.Input

	ToGenericProtectedItemOutput() GenericProtectedItemOutput
	ToGenericProtectedItemOutputWithContext(context.Context) GenericProtectedItemOutput
}

// Base class for backup items.
type GenericProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Name of this backup item's fabric.
	FabricName pulumi.StringPtrInput `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState pulumi.StringPtrInput `pulumi:"policyState"`
	// Data Plane Service ID of the protected item.
	ProtectedItemId pulumi.Float64PtrInput `pulumi:"protectedItemId"`
	// backup item type.
	// Expected value is 'GenericProtectedItem'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// Loosely coupled (type, value) associations (example - parent of a protected item)
	SourceAssociations pulumi.StringMapInput `pulumi:"sourceAssociations"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (GenericProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericProtectedItem)(nil)).Elem()
}

func (i GenericProtectedItemArgs) ToGenericProtectedItemOutput() GenericProtectedItemOutput {
	return i.ToGenericProtectedItemOutputWithContext(context.Background())
}

func (i GenericProtectedItemArgs) ToGenericProtectedItemOutputWithContext(ctx context.Context) GenericProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericProtectedItemOutput)
}

func (i GenericProtectedItemArgs) ToGenericProtectedItemPtrOutput() GenericProtectedItemPtrOutput {
	return i.ToGenericProtectedItemPtrOutputWithContext(context.Background())
}

func (i GenericProtectedItemArgs) ToGenericProtectedItemPtrOutputWithContext(ctx context.Context) GenericProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericProtectedItemOutput).ToGenericProtectedItemPtrOutputWithContext(ctx)
}

// GenericProtectedItemPtrInput is an input type that accepts GenericProtectedItemArgs, GenericProtectedItemPtr and GenericProtectedItemPtrOutput values.
// You can construct a concrete instance of `GenericProtectedItemPtrInput` via:
//
//	        GenericProtectedItemArgs{...}
//
//	or:
//
//	        nil
type GenericProtectedItemPtrInput interface {
	pulumi.Input

	ToGenericProtectedItemPtrOutput() GenericProtectedItemPtrOutput
	ToGenericProtectedItemPtrOutputWithContext(context.Context) GenericProtectedItemPtrOutput
}

type genericProtectedItemPtrType GenericProtectedItemArgs

func GenericProtectedItemPtr(v *GenericProtectedItemArgs) GenericProtectedItemPtrInput {
	return (*genericProtectedItemPtrType)(v)
}

func (*genericProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericProtectedItem)(nil)).Elem()
}

func (i *genericProtectedItemPtrType) ToGenericProtectedItemPtrOutput() GenericProtectedItemPtrOutput {
	return i.ToGenericProtectedItemPtrOutputWithContext(context.Background())
}

func (i *genericProtectedItemPtrType) ToGenericProtectedItemPtrOutputWithContext(ctx context.Context) GenericProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericProtectedItemPtrOutput)
}

// Base class for backup items.
type GenericProtectedItemOutput struct{ *pulumi.OutputState }

func (GenericProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericProtectedItem)(nil)).Elem()
}

func (o GenericProtectedItemOutput) ToGenericProtectedItemOutput() GenericProtectedItemOutput {
	return o
}

func (o GenericProtectedItemOutput) ToGenericProtectedItemOutputWithContext(ctx context.Context) GenericProtectedItemOutput {
	return o
}

func (o GenericProtectedItemOutput) ToGenericProtectedItemPtrOutput() GenericProtectedItemPtrOutput {
	return o.ToGenericProtectedItemPtrOutputWithContext(context.Background())
}

func (o GenericProtectedItemOutput) ToGenericProtectedItemPtrOutputWithContext(ctx context.Context) GenericProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GenericProtectedItem) *GenericProtectedItem {
		return &v
	}).(GenericProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o GenericProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o GenericProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o GenericProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o GenericProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o GenericProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Name of this backup item's fabric.
func (o GenericProtectedItemOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.FabricName }).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o GenericProtectedItemOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o GenericProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o GenericProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o GenericProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o GenericProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o GenericProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o GenericProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o GenericProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o GenericProtectedItemOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Data Plane Service ID of the protected item.
func (o GenericProtectedItemOutput) ProtectedItemId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *float64 { return v.ProtectedItemId }).(pulumi.Float64PtrOutput)
}

// backup item type.
// Expected value is 'GenericProtectedItem'.
func (o GenericProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o GenericProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o GenericProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GenericProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o GenericProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// Loosely coupled (type, value) associations (example - parent of a protected item)
func (o GenericProtectedItemOutput) SourceAssociations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GenericProtectedItem) map[string]string { return v.SourceAssociations }).(pulumi.StringMapOutput)
}

// ARM ID of the resource to be backed up.
func (o GenericProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type GenericProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (GenericProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericProtectedItem)(nil)).Elem()
}

func (o GenericProtectedItemPtrOutput) ToGenericProtectedItemPtrOutput() GenericProtectedItemPtrOutput {
	return o
}

func (o GenericProtectedItemPtrOutput) ToGenericProtectedItemPtrOutputWithContext(ctx context.Context) GenericProtectedItemPtrOutput {
	return o
}

func (o GenericProtectedItemPtrOutput) Elem() GenericProtectedItemOutput {
	return o.ApplyT(func(v *GenericProtectedItem) GenericProtectedItem {
		if v != nil {
			return *v
		}
		var ret GenericProtectedItem
		return ret
	}).(GenericProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o GenericProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o GenericProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o GenericProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o GenericProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o GenericProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Name of this backup item's fabric.
func (o GenericProtectedItemPtrOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.FabricName
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o GenericProtectedItemPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o GenericProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o GenericProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o GenericProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o GenericProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o GenericProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o GenericProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o GenericProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o GenericProtectedItemPtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Data Plane Service ID of the protected item.
func (o GenericProtectedItemPtrOutput) ProtectedItemId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *float64 {
		if v == nil {
			return nil
		}
		return v.ProtectedItemId
	}).(pulumi.Float64PtrOutput)
}

// backup item type.
// Expected value is 'GenericProtectedItem'.
func (o GenericProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o GenericProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o GenericProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GenericProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o GenericProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// Loosely coupled (type, value) associations (example - parent of a protected item)
func (o GenericProtectedItemPtrOutput) SourceAssociations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GenericProtectedItem) map[string]string {
		if v == nil {
			return nil
		}
		return v.SourceAssociations
	}).(pulumi.StringMapOutput)
}

// ARM ID of the resource to be backed up.
func (o GenericProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Base class for backup items.
type GenericProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Name of this backup item's fabric.
	FabricName *string `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Data Plane Service ID of the protected item.
	ProtectedItemId *float64 `pulumi:"protectedItemId"`
	// backup item type.
	// Expected value is 'GenericProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// Loosely coupled (type, value) associations (example - parent of a protected item)
	SourceAssociations map[string]string `pulumi:"sourceAssociations"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Base class for backup items.
type GenericProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (GenericProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericProtectedItemResponse)(nil)).Elem()
}

func (o GenericProtectedItemResponseOutput) ToGenericProtectedItemResponseOutput() GenericProtectedItemResponseOutput {
	return o
}

func (o GenericProtectedItemResponseOutput) ToGenericProtectedItemResponseOutputWithContext(ctx context.Context) GenericProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o GenericProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o GenericProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o GenericProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o GenericProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o GenericProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o GenericProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Name of this backup item's fabric.
func (o GenericProtectedItemResponseOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.FabricName }).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o GenericProtectedItemResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o GenericProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o GenericProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o GenericProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o GenericProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o GenericProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o GenericProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o GenericProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o GenericProtectedItemResponseOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Data Plane Service ID of the protected item.
func (o GenericProtectedItemResponseOutput) ProtectedItemId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *float64 { return v.ProtectedItemId }).(pulumi.Float64PtrOutput)
}

// backup item type.
// Expected value is 'GenericProtectedItem'.
func (o GenericProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o GenericProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o GenericProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o GenericProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// Loosely coupled (type, value) associations (example - parent of a protected item)
func (o GenericProtectedItemResponseOutput) SourceAssociations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) map[string]string { return v.SourceAssociations }).(pulumi.StringMapOutput)
}

// ARM ID of the resource to be backed up.
func (o GenericProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o GenericProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o GenericProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Azure VM (Mercury) workload-specific backup policy.
type GenericProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'GenericProtectionPolicy'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of this policy's fabric.
	FabricName *string `pulumi:"fabricName"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// List of sub-protection policies which includes schedule and retention
	SubProtectionPolicy []SubProtectionPolicy `pulumi:"subProtectionPolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// GenericProtectionPolicyInput is an input type that accepts GenericProtectionPolicyArgs and GenericProtectionPolicyOutput values.
// You can construct a concrete instance of `GenericProtectionPolicyInput` via:
//
//	GenericProtectionPolicyArgs{...}
type GenericProtectionPolicyInput interface {
	pulumi.Input

	ToGenericProtectionPolicyOutput() GenericProtectionPolicyOutput
	ToGenericProtectionPolicyOutputWithContext(context.Context) GenericProtectionPolicyOutput
}

// Azure VM (Mercury) workload-specific backup policy.
type GenericProtectionPolicyArgs struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'GenericProtectionPolicy'.
	BackupManagementType pulumi.StringInput `pulumi:"backupManagementType"`
	// Name of this policy's fabric.
	FabricName pulumi.StringPtrInput `pulumi:"fabricName"`
	// Number of items associated with this policy.
	ProtectedItemsCount pulumi.IntPtrInput `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// List of sub-protection policies which includes schedule and retention
	SubProtectionPolicy SubProtectionPolicyArrayInput `pulumi:"subProtectionPolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (GenericProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericProtectionPolicy)(nil)).Elem()
}

func (i GenericProtectionPolicyArgs) ToGenericProtectionPolicyOutput() GenericProtectionPolicyOutput {
	return i.ToGenericProtectionPolicyOutputWithContext(context.Background())
}

func (i GenericProtectionPolicyArgs) ToGenericProtectionPolicyOutputWithContext(ctx context.Context) GenericProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericProtectionPolicyOutput)
}

func (i GenericProtectionPolicyArgs) ToGenericProtectionPolicyPtrOutput() GenericProtectionPolicyPtrOutput {
	return i.ToGenericProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i GenericProtectionPolicyArgs) ToGenericProtectionPolicyPtrOutputWithContext(ctx context.Context) GenericProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericProtectionPolicyOutput).ToGenericProtectionPolicyPtrOutputWithContext(ctx)
}

// GenericProtectionPolicyPtrInput is an input type that accepts GenericProtectionPolicyArgs, GenericProtectionPolicyPtr and GenericProtectionPolicyPtrOutput values.
// You can construct a concrete instance of `GenericProtectionPolicyPtrInput` via:
//
//	        GenericProtectionPolicyArgs{...}
//
//	or:
//
//	        nil
type GenericProtectionPolicyPtrInput interface {
	pulumi.Input

	ToGenericProtectionPolicyPtrOutput() GenericProtectionPolicyPtrOutput
	ToGenericProtectionPolicyPtrOutputWithContext(context.Context) GenericProtectionPolicyPtrOutput
}

type genericProtectionPolicyPtrType GenericProtectionPolicyArgs

func GenericProtectionPolicyPtr(v *GenericProtectionPolicyArgs) GenericProtectionPolicyPtrInput {
	return (*genericProtectionPolicyPtrType)(v)
}

func (*genericProtectionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericProtectionPolicy)(nil)).Elem()
}

func (i *genericProtectionPolicyPtrType) ToGenericProtectionPolicyPtrOutput() GenericProtectionPolicyPtrOutput {
	return i.ToGenericProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i *genericProtectionPolicyPtrType) ToGenericProtectionPolicyPtrOutputWithContext(ctx context.Context) GenericProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericProtectionPolicyPtrOutput)
}

// Azure VM (Mercury) workload-specific backup policy.
type GenericProtectionPolicyOutput struct{ *pulumi.OutputState }

func (GenericProtectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericProtectionPolicy)(nil)).Elem()
}

func (o GenericProtectionPolicyOutput) ToGenericProtectionPolicyOutput() GenericProtectionPolicyOutput {
	return o
}

func (o GenericProtectionPolicyOutput) ToGenericProtectionPolicyOutputWithContext(ctx context.Context) GenericProtectionPolicyOutput {
	return o
}

func (o GenericProtectionPolicyOutput) ToGenericProtectionPolicyPtrOutput() GenericProtectionPolicyPtrOutput {
	return o.ToGenericProtectionPolicyPtrOutputWithContext(context.Background())
}

func (o GenericProtectionPolicyOutput) ToGenericProtectionPolicyPtrOutputWithContext(ctx context.Context) GenericProtectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GenericProtectionPolicy) *GenericProtectionPolicy {
		return &v
	}).(GenericProtectionPolicyPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'GenericProtectionPolicy'.
func (o GenericProtectionPolicyOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericProtectionPolicy) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of this policy's fabric.
func (o GenericProtectionPolicyOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectionPolicy) *string { return v.FabricName }).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o GenericProtectionPolicyOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GenericProtectionPolicy) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o GenericProtectionPolicyOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GenericProtectionPolicy) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// List of sub-protection policies which includes schedule and retention
func (o GenericProtectionPolicyOutput) SubProtectionPolicy() SubProtectionPolicyArrayOutput {
	return o.ApplyT(func(v GenericProtectionPolicy) []SubProtectionPolicy { return v.SubProtectionPolicy }).(SubProtectionPolicyArrayOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o GenericProtectionPolicyOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectionPolicy) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type GenericProtectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (GenericProtectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericProtectionPolicy)(nil)).Elem()
}

func (o GenericProtectionPolicyPtrOutput) ToGenericProtectionPolicyPtrOutput() GenericProtectionPolicyPtrOutput {
	return o
}

func (o GenericProtectionPolicyPtrOutput) ToGenericProtectionPolicyPtrOutputWithContext(ctx context.Context) GenericProtectionPolicyPtrOutput {
	return o
}

func (o GenericProtectionPolicyPtrOutput) Elem() GenericProtectionPolicyOutput {
	return o.ApplyT(func(v *GenericProtectionPolicy) GenericProtectionPolicy {
		if v != nil {
			return *v
		}
		var ret GenericProtectionPolicy
		return ret
	}).(GenericProtectionPolicyOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'GenericProtectionPolicy'.
func (o GenericProtectionPolicyPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Name of this policy's fabric.
func (o GenericProtectionPolicyPtrOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.FabricName
	}).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o GenericProtectionPolicyPtrOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GenericProtectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.ProtectedItemsCount
	}).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o GenericProtectionPolicyPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GenericProtectionPolicy) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// List of sub-protection policies which includes schedule and retention
func (o GenericProtectionPolicyPtrOutput) SubProtectionPolicy() SubProtectionPolicyArrayOutput {
	return o.ApplyT(func(v *GenericProtectionPolicy) []SubProtectionPolicy {
		if v == nil {
			return nil
		}
		return v.SubProtectionPolicy
	}).(SubProtectionPolicyArrayOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o GenericProtectionPolicyPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Azure VM (Mercury) workload-specific backup policy.
type GenericProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'GenericProtectionPolicy'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of this policy's fabric.
	FabricName *string `pulumi:"fabricName"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// List of sub-protection policies which includes schedule and retention
	SubProtectionPolicy []SubProtectionPolicyResponse `pulumi:"subProtectionPolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// Azure VM (Mercury) workload-specific backup policy.
type GenericProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (GenericProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericProtectionPolicyResponse)(nil)).Elem()
}

func (o GenericProtectionPolicyResponseOutput) ToGenericProtectionPolicyResponseOutput() GenericProtectionPolicyResponseOutput {
	return o
}

func (o GenericProtectionPolicyResponseOutput) ToGenericProtectionPolicyResponseOutputWithContext(ctx context.Context) GenericProtectionPolicyResponseOutput {
	return o
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'GenericProtectionPolicy'.
func (o GenericProtectionPolicyResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericProtectionPolicyResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of this policy's fabric.
func (o GenericProtectionPolicyResponseOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectionPolicyResponse) *string { return v.FabricName }).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o GenericProtectionPolicyResponseOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GenericProtectionPolicyResponse) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o GenericProtectionPolicyResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GenericProtectionPolicyResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// List of sub-protection policies which includes schedule and retention
func (o GenericProtectionPolicyResponseOutput) SubProtectionPolicy() SubProtectionPolicyResponseArrayOutput {
	return o.ApplyT(func(v GenericProtectionPolicyResponse) []SubProtectionPolicyResponse { return v.SubProtectionPolicy }).(SubProtectionPolicyResponseArrayOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o GenericProtectionPolicyResponseOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectionPolicyResponse) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Health Error.
type HealthErrorResponse struct {
	// Error creation time (UTC).
	CreationTimeUtc *string `pulumi:"creationTimeUtc"`
	// Value indicating whether the health error is customer resolvable.
	CustomerResolvability *string `pulumi:"customerResolvability"`
	// ID of the entity.
	EntityId *string `pulumi:"entityId"`
	// Category of error.
	ErrorCategory *string `pulumi:"errorCategory"`
	// Error code.
	ErrorCode *string `pulumi:"errorCode"`
	// The health error unique id.
	ErrorId *string `pulumi:"errorId"`
	// Level of error.
	ErrorLevel *string `pulumi:"errorLevel"`
	// Error message.
	ErrorMessage *string `pulumi:"errorMessage"`
	// Source of error.
	ErrorSource *string `pulumi:"errorSource"`
	// Type of error.
	ErrorType *string `pulumi:"errorType"`
	// The inner health errors. HealthError having a list of HealthError as child errors is problematic. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.
	InnerHealthErrors []InnerHealthErrorResponse `pulumi:"innerHealthErrors"`
	// Possible causes of error.
	PossibleCauses *string `pulumi:"possibleCauses"`
	// Recommended action to resolve error.
	RecommendedAction *string `pulumi:"recommendedAction"`
	// DRA error message.
	RecoveryProviderErrorMessage *string `pulumi:"recoveryProviderErrorMessage"`
	// Summary message of the entity.
	SummaryMessage *string `pulumi:"summaryMessage"`
}

// Health Error.
type HealthErrorResponseOutput struct{ *pulumi.OutputState }

func (HealthErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthErrorResponse)(nil)).Elem()
}

func (o HealthErrorResponseOutput) ToHealthErrorResponseOutput() HealthErrorResponseOutput {
	return o
}

func (o HealthErrorResponseOutput) ToHealthErrorResponseOutputWithContext(ctx context.Context) HealthErrorResponseOutput {
	return o
}

// Error creation time (UTC).
func (o HealthErrorResponseOutput) CreationTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.CreationTimeUtc }).(pulumi.StringPtrOutput)
}

// Value indicating whether the health error is customer resolvable.
func (o HealthErrorResponseOutput) CustomerResolvability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.CustomerResolvability }).(pulumi.StringPtrOutput)
}

// ID of the entity.
func (o HealthErrorResponseOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// Category of error.
func (o HealthErrorResponseOutput) ErrorCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorCategory }).(pulumi.StringPtrOutput)
}

// Error code.
func (o HealthErrorResponseOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// The health error unique id.
func (o HealthErrorResponseOutput) ErrorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorId }).(pulumi.StringPtrOutput)
}

// Level of error.
func (o HealthErrorResponseOutput) ErrorLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorLevel }).(pulumi.StringPtrOutput)
}

// Error message.
func (o HealthErrorResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Source of error.
func (o HealthErrorResponseOutput) ErrorSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorSource }).(pulumi.StringPtrOutput)
}

// Type of error.
func (o HealthErrorResponseOutput) ErrorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.ErrorType }).(pulumi.StringPtrOutput)
}

// The inner health errors. HealthError having a list of HealthError as child errors is problematic. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.
func (o HealthErrorResponseOutput) InnerHealthErrors() InnerHealthErrorResponseArrayOutput {
	return o.ApplyT(func(v HealthErrorResponse) []InnerHealthErrorResponse { return v.InnerHealthErrors }).(InnerHealthErrorResponseArrayOutput)
}

// Possible causes of error.
func (o HealthErrorResponseOutput) PossibleCauses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.PossibleCauses }).(pulumi.StringPtrOutput)
}

// Recommended action to resolve error.
func (o HealthErrorResponseOutput) RecommendedAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.RecommendedAction }).(pulumi.StringPtrOutput)
}

// DRA error message.
func (o HealthErrorResponseOutput) RecoveryProviderErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.RecoveryProviderErrorMessage }).(pulumi.StringPtrOutput)
}

// Summary message of the entity.
func (o HealthErrorResponseOutput) SummaryMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthErrorResponse) *string { return v.SummaryMessage }).(pulumi.StringPtrOutput)
}

type HealthErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (HealthErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthErrorResponse)(nil)).Elem()
}

func (o HealthErrorResponseArrayOutput) ToHealthErrorResponseArrayOutput() HealthErrorResponseArrayOutput {
	return o
}

func (o HealthErrorResponseArrayOutput) ToHealthErrorResponseArrayOutputWithContext(ctx context.Context) HealthErrorResponseArrayOutput {
	return o
}

func (o HealthErrorResponseArrayOutput) Index(i pulumi.IntInput) HealthErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HealthErrorResponse {
		return vs[0].([]HealthErrorResponse)[vs[1].(int)]
	}).(HealthErrorResponseOutput)
}

type HourlySchedule struct {
	// Interval at which backup needs to be triggered. For hourly the value
	//  can be 4/6/8/12
	Interval *int `pulumi:"interval"`
	// To specify duration of the backup window
	ScheduleWindowDuration *int `pulumi:"scheduleWindowDuration"`
	// To specify start time of the backup window
	ScheduleWindowStartTime *string `pulumi:"scheduleWindowStartTime"`
}

// HourlyScheduleInput is an input type that accepts HourlyScheduleArgs and HourlyScheduleOutput values.
// You can construct a concrete instance of `HourlyScheduleInput` via:
//
//	HourlyScheduleArgs{...}
type HourlyScheduleInput interface {
	pulumi.Input

	ToHourlyScheduleOutput() HourlyScheduleOutput
	ToHourlyScheduleOutputWithContext(context.Context) HourlyScheduleOutput
}

type HourlyScheduleArgs struct {
	// Interval at which backup needs to be triggered. For hourly the value
	//  can be 4/6/8/12
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// To specify duration of the backup window
	ScheduleWindowDuration pulumi.IntPtrInput `pulumi:"scheduleWindowDuration"`
	// To specify start time of the backup window
	ScheduleWindowStartTime pulumi.StringPtrInput `pulumi:"scheduleWindowStartTime"`
}

func (HourlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HourlySchedule)(nil)).Elem()
}

func (i HourlyScheduleArgs) ToHourlyScheduleOutput() HourlyScheduleOutput {
	return i.ToHourlyScheduleOutputWithContext(context.Background())
}

func (i HourlyScheduleArgs) ToHourlyScheduleOutputWithContext(ctx context.Context) HourlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourlyScheduleOutput)
}

func (i HourlyScheduleArgs) ToHourlySchedulePtrOutput() HourlySchedulePtrOutput {
	return i.ToHourlySchedulePtrOutputWithContext(context.Background())
}

func (i HourlyScheduleArgs) ToHourlySchedulePtrOutputWithContext(ctx context.Context) HourlySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourlyScheduleOutput).ToHourlySchedulePtrOutputWithContext(ctx)
}

// HourlySchedulePtrInput is an input type that accepts HourlyScheduleArgs, HourlySchedulePtr and HourlySchedulePtrOutput values.
// You can construct a concrete instance of `HourlySchedulePtrInput` via:
//
//	        HourlyScheduleArgs{...}
//
//	or:
//
//	        nil
type HourlySchedulePtrInput interface {
	pulumi.Input

	ToHourlySchedulePtrOutput() HourlySchedulePtrOutput
	ToHourlySchedulePtrOutputWithContext(context.Context) HourlySchedulePtrOutput
}

type hourlySchedulePtrType HourlyScheduleArgs

func HourlySchedulePtr(v *HourlyScheduleArgs) HourlySchedulePtrInput {
	return (*hourlySchedulePtrType)(v)
}

func (*hourlySchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HourlySchedule)(nil)).Elem()
}

func (i *hourlySchedulePtrType) ToHourlySchedulePtrOutput() HourlySchedulePtrOutput {
	return i.ToHourlySchedulePtrOutputWithContext(context.Background())
}

func (i *hourlySchedulePtrType) ToHourlySchedulePtrOutputWithContext(ctx context.Context) HourlySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourlySchedulePtrOutput)
}

type HourlyScheduleOutput struct{ *pulumi.OutputState }

func (HourlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HourlySchedule)(nil)).Elem()
}

func (o HourlyScheduleOutput) ToHourlyScheduleOutput() HourlyScheduleOutput {
	return o
}

func (o HourlyScheduleOutput) ToHourlyScheduleOutputWithContext(ctx context.Context) HourlyScheduleOutput {
	return o
}

func (o HourlyScheduleOutput) ToHourlySchedulePtrOutput() HourlySchedulePtrOutput {
	return o.ToHourlySchedulePtrOutputWithContext(context.Background())
}

func (o HourlyScheduleOutput) ToHourlySchedulePtrOutputWithContext(ctx context.Context) HourlySchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HourlySchedule) *HourlySchedule {
		return &v
	}).(HourlySchedulePtrOutput)
}

// Interval at which backup needs to be triggered. For hourly the value
//
//	can be 4/6/8/12
func (o HourlyScheduleOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HourlySchedule) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// To specify duration of the backup window
func (o HourlyScheduleOutput) ScheduleWindowDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HourlySchedule) *int { return v.ScheduleWindowDuration }).(pulumi.IntPtrOutput)
}

// To specify start time of the backup window
func (o HourlyScheduleOutput) ScheduleWindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HourlySchedule) *string { return v.ScheduleWindowStartTime }).(pulumi.StringPtrOutput)
}

type HourlySchedulePtrOutput struct{ *pulumi.OutputState }

func (HourlySchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HourlySchedule)(nil)).Elem()
}

func (o HourlySchedulePtrOutput) ToHourlySchedulePtrOutput() HourlySchedulePtrOutput {
	return o
}

func (o HourlySchedulePtrOutput) ToHourlySchedulePtrOutputWithContext(ctx context.Context) HourlySchedulePtrOutput {
	return o
}

func (o HourlySchedulePtrOutput) Elem() HourlyScheduleOutput {
	return o.ApplyT(func(v *HourlySchedule) HourlySchedule {
		if v != nil {
			return *v
		}
		var ret HourlySchedule
		return ret
	}).(HourlyScheduleOutput)
}

// Interval at which backup needs to be triggered. For hourly the value
//
//	can be 4/6/8/12
func (o HourlySchedulePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HourlySchedule) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// To specify duration of the backup window
func (o HourlySchedulePtrOutput) ScheduleWindowDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HourlySchedule) *int {
		if v == nil {
			return nil
		}
		return v.ScheduleWindowDuration
	}).(pulumi.IntPtrOutput)
}

// To specify start time of the backup window
func (o HourlySchedulePtrOutput) ScheduleWindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HourlySchedule) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleWindowStartTime
	}).(pulumi.StringPtrOutput)
}

type HourlyScheduleResponse struct {
	// Interval at which backup needs to be triggered. For hourly the value
	//  can be 4/6/8/12
	Interval *int `pulumi:"interval"`
	// To specify duration of the backup window
	ScheduleWindowDuration *int `pulumi:"scheduleWindowDuration"`
	// To specify start time of the backup window
	ScheduleWindowStartTime *string `pulumi:"scheduleWindowStartTime"`
}

type HourlyScheduleResponseOutput struct{ *pulumi.OutputState }

func (HourlyScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HourlyScheduleResponse)(nil)).Elem()
}

func (o HourlyScheduleResponseOutput) ToHourlyScheduleResponseOutput() HourlyScheduleResponseOutput {
	return o
}

func (o HourlyScheduleResponseOutput) ToHourlyScheduleResponseOutputWithContext(ctx context.Context) HourlyScheduleResponseOutput {
	return o
}

// Interval at which backup needs to be triggered. For hourly the value
//
//	can be 4/6/8/12
func (o HourlyScheduleResponseOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HourlyScheduleResponse) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// To specify duration of the backup window
func (o HourlyScheduleResponseOutput) ScheduleWindowDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HourlyScheduleResponse) *int { return v.ScheduleWindowDuration }).(pulumi.IntPtrOutput)
}

// To specify start time of the backup window
func (o HourlyScheduleResponseOutput) ScheduleWindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HourlyScheduleResponse) *string { return v.ScheduleWindowStartTime }).(pulumi.StringPtrOutput)
}

type HourlyScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (HourlyScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HourlyScheduleResponse)(nil)).Elem()
}

func (o HourlyScheduleResponsePtrOutput) ToHourlyScheduleResponsePtrOutput() HourlyScheduleResponsePtrOutput {
	return o
}

func (o HourlyScheduleResponsePtrOutput) ToHourlyScheduleResponsePtrOutputWithContext(ctx context.Context) HourlyScheduleResponsePtrOutput {
	return o
}

func (o HourlyScheduleResponsePtrOutput) Elem() HourlyScheduleResponseOutput {
	return o.ApplyT(func(v *HourlyScheduleResponse) HourlyScheduleResponse {
		if v != nil {
			return *v
		}
		var ret HourlyScheduleResponse
		return ret
	}).(HourlyScheduleResponseOutput)
}

// Interval at which backup needs to be triggered. For hourly the value
//
//	can be 4/6/8/12
func (o HourlyScheduleResponsePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HourlyScheduleResponse) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// To specify duration of the backup window
func (o HourlyScheduleResponsePtrOutput) ScheduleWindowDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HourlyScheduleResponse) *int {
		if v == nil {
			return nil
		}
		return v.ScheduleWindowDuration
	}).(pulumi.IntPtrOutput)
}

// To specify start time of the backup window
func (o HourlyScheduleResponsePtrOutput) ScheduleWindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HourlyScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleWindowStartTime
	}).(pulumi.StringPtrOutput)
}

// Hyper-V host details.
type HyperVHostDetailsResponse struct {
	// The Hyper-V host Id.
	Id string `pulumi:"id"`
	// The Mars agent version.
	MarsAgentVersion string `pulumi:"marsAgentVersion"`
	// The Hyper-V host name.
	Name string `pulumi:"name"`
}

// Hyper-V host details.
type HyperVHostDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVHostDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVHostDetailsResponse)(nil)).Elem()
}

func (o HyperVHostDetailsResponseOutput) ToHyperVHostDetailsResponseOutput() HyperVHostDetailsResponseOutput {
	return o
}

func (o HyperVHostDetailsResponseOutput) ToHyperVHostDetailsResponseOutputWithContext(ctx context.Context) HyperVHostDetailsResponseOutput {
	return o
}

// The Hyper-V host Id.
func (o HyperVHostDetailsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVHostDetailsResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The Mars agent version.
func (o HyperVHostDetailsResponseOutput) MarsAgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVHostDetailsResponse) string { return v.MarsAgentVersion }).(pulumi.StringOutput)
}

// The Hyper-V host name.
func (o HyperVHostDetailsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVHostDetailsResponse) string { return v.Name }).(pulumi.StringOutput)
}

type HyperVHostDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (HyperVHostDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HyperVHostDetailsResponse)(nil)).Elem()
}

func (o HyperVHostDetailsResponseArrayOutput) ToHyperVHostDetailsResponseArrayOutput() HyperVHostDetailsResponseArrayOutput {
	return o
}

func (o HyperVHostDetailsResponseArrayOutput) ToHyperVHostDetailsResponseArrayOutputWithContext(ctx context.Context) HyperVHostDetailsResponseArrayOutput {
	return o
}

func (o HyperVHostDetailsResponseArrayOutput) Index(i pulumi.IntInput) HyperVHostDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HyperVHostDetailsResponse {
		return vs[0].([]HyperVHostDetailsResponse)[vs[1].(int)]
	}).(HyperVHostDetailsResponseOutput)
}

// Disk input details.
type HyperVReplicaAzureDiskInputDetails struct {
	// The DiskEncryptionSet ARM ID.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The DiskId.
	DiskId *string `pulumi:"diskId"`
	// The DiskType.
	DiskType *string `pulumi:"diskType"`
	// The LogStorageAccountId.
	LogStorageAccountId *string `pulumi:"logStorageAccountId"`
}

// HyperVReplicaAzureDiskInputDetailsInput is an input type that accepts HyperVReplicaAzureDiskInputDetailsArgs and HyperVReplicaAzureDiskInputDetailsOutput values.
// You can construct a concrete instance of `HyperVReplicaAzureDiskInputDetailsInput` via:
//
//	HyperVReplicaAzureDiskInputDetailsArgs{...}
type HyperVReplicaAzureDiskInputDetailsInput interface {
	pulumi.Input

	ToHyperVReplicaAzureDiskInputDetailsOutput() HyperVReplicaAzureDiskInputDetailsOutput
	ToHyperVReplicaAzureDiskInputDetailsOutputWithContext(context.Context) HyperVReplicaAzureDiskInputDetailsOutput
}

// Disk input details.
type HyperVReplicaAzureDiskInputDetailsArgs struct {
	// The DiskEncryptionSet ARM ID.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// The DiskId.
	DiskId pulumi.StringPtrInput `pulumi:"diskId"`
	// The DiskType.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// The LogStorageAccountId.
	LogStorageAccountId pulumi.StringPtrInput `pulumi:"logStorageAccountId"`
}

func (HyperVReplicaAzureDiskInputDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzureDiskInputDetails)(nil)).Elem()
}

func (i HyperVReplicaAzureDiskInputDetailsArgs) ToHyperVReplicaAzureDiskInputDetailsOutput() HyperVReplicaAzureDiskInputDetailsOutput {
	return i.ToHyperVReplicaAzureDiskInputDetailsOutputWithContext(context.Background())
}

func (i HyperVReplicaAzureDiskInputDetailsArgs) ToHyperVReplicaAzureDiskInputDetailsOutputWithContext(ctx context.Context) HyperVReplicaAzureDiskInputDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaAzureDiskInputDetailsOutput)
}

// HyperVReplicaAzureDiskInputDetailsArrayInput is an input type that accepts HyperVReplicaAzureDiskInputDetailsArray and HyperVReplicaAzureDiskInputDetailsArrayOutput values.
// You can construct a concrete instance of `HyperVReplicaAzureDiskInputDetailsArrayInput` via:
//
//	HyperVReplicaAzureDiskInputDetailsArray{ HyperVReplicaAzureDiskInputDetailsArgs{...} }
type HyperVReplicaAzureDiskInputDetailsArrayInput interface {
	pulumi.Input

	ToHyperVReplicaAzureDiskInputDetailsArrayOutput() HyperVReplicaAzureDiskInputDetailsArrayOutput
	ToHyperVReplicaAzureDiskInputDetailsArrayOutputWithContext(context.Context) HyperVReplicaAzureDiskInputDetailsArrayOutput
}

type HyperVReplicaAzureDiskInputDetailsArray []HyperVReplicaAzureDiskInputDetailsInput

func (HyperVReplicaAzureDiskInputDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HyperVReplicaAzureDiskInputDetails)(nil)).Elem()
}

func (i HyperVReplicaAzureDiskInputDetailsArray) ToHyperVReplicaAzureDiskInputDetailsArrayOutput() HyperVReplicaAzureDiskInputDetailsArrayOutput {
	return i.ToHyperVReplicaAzureDiskInputDetailsArrayOutputWithContext(context.Background())
}

func (i HyperVReplicaAzureDiskInputDetailsArray) ToHyperVReplicaAzureDiskInputDetailsArrayOutputWithContext(ctx context.Context) HyperVReplicaAzureDiskInputDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaAzureDiskInputDetailsArrayOutput)
}

// Disk input details.
type HyperVReplicaAzureDiskInputDetailsOutput struct{ *pulumi.OutputState }

func (HyperVReplicaAzureDiskInputDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzureDiskInputDetails)(nil)).Elem()
}

func (o HyperVReplicaAzureDiskInputDetailsOutput) ToHyperVReplicaAzureDiskInputDetailsOutput() HyperVReplicaAzureDiskInputDetailsOutput {
	return o
}

func (o HyperVReplicaAzureDiskInputDetailsOutput) ToHyperVReplicaAzureDiskInputDetailsOutputWithContext(ctx context.Context) HyperVReplicaAzureDiskInputDetailsOutput {
	return o
}

// The DiskEncryptionSet ARM ID.
func (o HyperVReplicaAzureDiskInputDetailsOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureDiskInputDetails) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The DiskId.
func (o HyperVReplicaAzureDiskInputDetailsOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureDiskInputDetails) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// The DiskType.
func (o HyperVReplicaAzureDiskInputDetailsOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureDiskInputDetails) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// The LogStorageAccountId.
func (o HyperVReplicaAzureDiskInputDetailsOutput) LogStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureDiskInputDetails) *string { return v.LogStorageAccountId }).(pulumi.StringPtrOutput)
}

type HyperVReplicaAzureDiskInputDetailsArrayOutput struct{ *pulumi.OutputState }

func (HyperVReplicaAzureDiskInputDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HyperVReplicaAzureDiskInputDetails)(nil)).Elem()
}

func (o HyperVReplicaAzureDiskInputDetailsArrayOutput) ToHyperVReplicaAzureDiskInputDetailsArrayOutput() HyperVReplicaAzureDiskInputDetailsArrayOutput {
	return o
}

func (o HyperVReplicaAzureDiskInputDetailsArrayOutput) ToHyperVReplicaAzureDiskInputDetailsArrayOutputWithContext(ctx context.Context) HyperVReplicaAzureDiskInputDetailsArrayOutput {
	return o
}

func (o HyperVReplicaAzureDiskInputDetailsArrayOutput) Index(i pulumi.IntInput) HyperVReplicaAzureDiskInputDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HyperVReplicaAzureDiskInputDetails {
		return vs[0].([]HyperVReplicaAzureDiskInputDetails)[vs[1].(int)]
	}).(HyperVReplicaAzureDiskInputDetailsOutput)
}

// HyperVReplicaAzure specific enable protection input.
type HyperVReplicaAzureEnableProtectionInput struct {
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The DiskType.
	DiskType *string `pulumi:"diskType"`
	// The list of VHD Ids of disks to be protected.
	DisksToInclude []string `pulumi:"disksToInclude"`
	// The disks to include list for managed disks.
	DisksToIncludeForManagedDisks []HyperVReplicaAzureDiskInputDetails `pulumi:"disksToIncludeForManagedDisks"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
	EnableRdpOnTargetOption *string `pulumi:"enableRdpOnTargetOption"`
	// The Hyper-V host VM Id.
	HvHostVmId *string `pulumi:"hvHostVmId"`
	// The class type.
	// Expected value is 'HyperVReplicaAzure'.
	InstanceType string `pulumi:"instanceType"`
	// License type.
	LicenseType *string `pulumi:"licenseType"`
	// The storage account to be used for logging during replication.
	LogStorageAccountId *string `pulumi:"logStorageAccountId"`
	// The OS type associated with VM.
	OsType *string `pulumi:"osType"`
	// The tags for the seed managed disks.
	SeedManagedDiskTags map[string]string `pulumi:"seedManagedDiskTags"`
	// The SQL Server license type.
	SqlServerLicenseType *string `pulumi:"sqlServerLicenseType"`
	// The target availability set ARM Id for resource manager deployment.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The selected target Azure network Id.
	TargetAzureNetworkId *string `pulumi:"targetAzureNetworkId"`
	// The selected target Azure subnet Id.
	TargetAzureSubnetId *string `pulumi:"targetAzureSubnetId"`
	// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
	TargetAzureV1ResourceGroupId *string `pulumi:"targetAzureV1ResourceGroupId"`
	// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
	TargetAzureV2ResourceGroupId *string `pulumi:"targetAzureV2ResourceGroupId"`
	// The target azure VM Name.
	TargetAzureVmName *string `pulumi:"targetAzureVmName"`
	// The tags for the target managed disks.
	TargetManagedDiskTags map[string]string `pulumi:"targetManagedDiskTags"`
	// The tags for the target NICs.
	TargetNicTags map[string]string `pulumi:"targetNicTags"`
	// The proximity placement group ARM Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The storage account Id.
	TargetStorageAccountId *string `pulumi:"targetStorageAccountId"`
	// The target VM size.
	TargetVmSize *string `pulumi:"targetVmSize"`
	// The target VM tags.
	TargetVmTags map[string]string `pulumi:"targetVmTags"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks *string `pulumi:"useManagedDisks"`
	// A value indicating whether managed disks should be used during replication.
	UseManagedDisksForReplication *string `pulumi:"useManagedDisksForReplication"`
	// The OS disk VHD id associated with VM.
	VhdId *string `pulumi:"vhdId"`
	// The VM Name.
	VmName *string `pulumi:"vmName"`
}

// HyperVReplicaAzureEnableProtectionInputInput is an input type that accepts HyperVReplicaAzureEnableProtectionInputArgs and HyperVReplicaAzureEnableProtectionInputOutput values.
// You can construct a concrete instance of `HyperVReplicaAzureEnableProtectionInputInput` via:
//
//	HyperVReplicaAzureEnableProtectionInputArgs{...}
type HyperVReplicaAzureEnableProtectionInputInput interface {
	pulumi.Input

	ToHyperVReplicaAzureEnableProtectionInputOutput() HyperVReplicaAzureEnableProtectionInputOutput
	ToHyperVReplicaAzureEnableProtectionInputOutputWithContext(context.Context) HyperVReplicaAzureEnableProtectionInputOutput
}

// HyperVReplicaAzure specific enable protection input.
type HyperVReplicaAzureEnableProtectionInputArgs struct {
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// The DiskType.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// The list of VHD Ids of disks to be protected.
	DisksToInclude pulumi.StringArrayInput `pulumi:"disksToInclude"`
	// The disks to include list for managed disks.
	DisksToIncludeForManagedDisks HyperVReplicaAzureDiskInputDetailsArrayInput `pulumi:"disksToIncludeForManagedDisks"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
	EnableRdpOnTargetOption pulumi.StringPtrInput `pulumi:"enableRdpOnTargetOption"`
	// The Hyper-V host VM Id.
	HvHostVmId pulumi.StringPtrInput `pulumi:"hvHostVmId"`
	// The class type.
	// Expected value is 'HyperVReplicaAzure'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// License type.
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
	// The storage account to be used for logging during replication.
	LogStorageAccountId pulumi.StringPtrInput `pulumi:"logStorageAccountId"`
	// The OS type associated with VM.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The tags for the seed managed disks.
	SeedManagedDiskTags pulumi.StringMapInput `pulumi:"seedManagedDiskTags"`
	// The SQL Server license type.
	SqlServerLicenseType pulumi.StringPtrInput `pulumi:"sqlServerLicenseType"`
	// The target availability set ARM Id for resource manager deployment.
	TargetAvailabilitySetId pulumi.StringPtrInput `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone pulumi.StringPtrInput `pulumi:"targetAvailabilityZone"`
	// The selected target Azure network Id.
	TargetAzureNetworkId pulumi.StringPtrInput `pulumi:"targetAzureNetworkId"`
	// The selected target Azure subnet Id.
	TargetAzureSubnetId pulumi.StringPtrInput `pulumi:"targetAzureSubnetId"`
	// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
	TargetAzureV1ResourceGroupId pulumi.StringPtrInput `pulumi:"targetAzureV1ResourceGroupId"`
	// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
	TargetAzureV2ResourceGroupId pulumi.StringPtrInput `pulumi:"targetAzureV2ResourceGroupId"`
	// The target azure VM Name.
	TargetAzureVmName pulumi.StringPtrInput `pulumi:"targetAzureVmName"`
	// The tags for the target managed disks.
	TargetManagedDiskTags pulumi.StringMapInput `pulumi:"targetManagedDiskTags"`
	// The tags for the target NICs.
	TargetNicTags pulumi.StringMapInput `pulumi:"targetNicTags"`
	// The proximity placement group ARM Id.
	TargetProximityPlacementGroupId pulumi.StringPtrInput `pulumi:"targetProximityPlacementGroupId"`
	// The storage account Id.
	TargetStorageAccountId pulumi.StringPtrInput `pulumi:"targetStorageAccountId"`
	// The target VM size.
	TargetVmSize pulumi.StringPtrInput `pulumi:"targetVmSize"`
	// The target VM tags.
	TargetVmTags pulumi.StringMapInput `pulumi:"targetVmTags"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks pulumi.StringPtrInput `pulumi:"useManagedDisks"`
	// A value indicating whether managed disks should be used during replication.
	UseManagedDisksForReplication pulumi.StringPtrInput `pulumi:"useManagedDisksForReplication"`
	// The OS disk VHD id associated with VM.
	VhdId pulumi.StringPtrInput `pulumi:"vhdId"`
	// The VM Name.
	VmName pulumi.StringPtrInput `pulumi:"vmName"`
}

func (HyperVReplicaAzureEnableProtectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzureEnableProtectionInput)(nil)).Elem()
}

func (i HyperVReplicaAzureEnableProtectionInputArgs) ToHyperVReplicaAzureEnableProtectionInputOutput() HyperVReplicaAzureEnableProtectionInputOutput {
	return i.ToHyperVReplicaAzureEnableProtectionInputOutputWithContext(context.Background())
}

func (i HyperVReplicaAzureEnableProtectionInputArgs) ToHyperVReplicaAzureEnableProtectionInputOutputWithContext(ctx context.Context) HyperVReplicaAzureEnableProtectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaAzureEnableProtectionInputOutput)
}

func (i HyperVReplicaAzureEnableProtectionInputArgs) ToHyperVReplicaAzureEnableProtectionInputPtrOutput() HyperVReplicaAzureEnableProtectionInputPtrOutput {
	return i.ToHyperVReplicaAzureEnableProtectionInputPtrOutputWithContext(context.Background())
}

func (i HyperVReplicaAzureEnableProtectionInputArgs) ToHyperVReplicaAzureEnableProtectionInputPtrOutputWithContext(ctx context.Context) HyperVReplicaAzureEnableProtectionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaAzureEnableProtectionInputOutput).ToHyperVReplicaAzureEnableProtectionInputPtrOutputWithContext(ctx)
}

// HyperVReplicaAzureEnableProtectionInputPtrInput is an input type that accepts HyperVReplicaAzureEnableProtectionInputArgs, HyperVReplicaAzureEnableProtectionInputPtr and HyperVReplicaAzureEnableProtectionInputPtrOutput values.
// You can construct a concrete instance of `HyperVReplicaAzureEnableProtectionInputPtrInput` via:
//
//	        HyperVReplicaAzureEnableProtectionInputArgs{...}
//
//	or:
//
//	        nil
type HyperVReplicaAzureEnableProtectionInputPtrInput interface {
	pulumi.Input

	ToHyperVReplicaAzureEnableProtectionInputPtrOutput() HyperVReplicaAzureEnableProtectionInputPtrOutput
	ToHyperVReplicaAzureEnableProtectionInputPtrOutputWithContext(context.Context) HyperVReplicaAzureEnableProtectionInputPtrOutput
}

type hyperVReplicaAzureEnableProtectionInputPtrType HyperVReplicaAzureEnableProtectionInputArgs

func HyperVReplicaAzureEnableProtectionInputPtr(v *HyperVReplicaAzureEnableProtectionInputArgs) HyperVReplicaAzureEnableProtectionInputPtrInput {
	return (*hyperVReplicaAzureEnableProtectionInputPtrType)(v)
}

func (*hyperVReplicaAzureEnableProtectionInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVReplicaAzureEnableProtectionInput)(nil)).Elem()
}

func (i *hyperVReplicaAzureEnableProtectionInputPtrType) ToHyperVReplicaAzureEnableProtectionInputPtrOutput() HyperVReplicaAzureEnableProtectionInputPtrOutput {
	return i.ToHyperVReplicaAzureEnableProtectionInputPtrOutputWithContext(context.Background())
}

func (i *hyperVReplicaAzureEnableProtectionInputPtrType) ToHyperVReplicaAzureEnableProtectionInputPtrOutputWithContext(ctx context.Context) HyperVReplicaAzureEnableProtectionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaAzureEnableProtectionInputPtrOutput)
}

// HyperVReplicaAzure specific enable protection input.
type HyperVReplicaAzureEnableProtectionInputOutput struct{ *pulumi.OutputState }

func (HyperVReplicaAzureEnableProtectionInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzureEnableProtectionInput)(nil)).Elem()
}

func (o HyperVReplicaAzureEnableProtectionInputOutput) ToHyperVReplicaAzureEnableProtectionInputOutput() HyperVReplicaAzureEnableProtectionInputOutput {
	return o
}

func (o HyperVReplicaAzureEnableProtectionInputOutput) ToHyperVReplicaAzureEnableProtectionInputOutputWithContext(ctx context.Context) HyperVReplicaAzureEnableProtectionInputOutput {
	return o
}

func (o HyperVReplicaAzureEnableProtectionInputOutput) ToHyperVReplicaAzureEnableProtectionInputPtrOutput() HyperVReplicaAzureEnableProtectionInputPtrOutput {
	return o.ToHyperVReplicaAzureEnableProtectionInputPtrOutputWithContext(context.Background())
}

func (o HyperVReplicaAzureEnableProtectionInputOutput) ToHyperVReplicaAzureEnableProtectionInputPtrOutputWithContext(ctx context.Context) HyperVReplicaAzureEnableProtectionInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HyperVReplicaAzureEnableProtectionInput) *HyperVReplicaAzureEnableProtectionInput {
		return &v
	}).(HyperVReplicaAzureEnableProtectionInputPtrOutput)
}

// The DiskEncryptionSet ARM Id.
func (o HyperVReplicaAzureEnableProtectionInputOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The DiskType.
func (o HyperVReplicaAzureEnableProtectionInputOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// The list of VHD Ids of disks to be protected.
func (o HyperVReplicaAzureEnableProtectionInputOutput) DisksToInclude() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) []string { return v.DisksToInclude }).(pulumi.StringArrayOutput)
}

// The disks to include list for managed disks.
func (o HyperVReplicaAzureEnableProtectionInputOutput) DisksToIncludeForManagedDisks() HyperVReplicaAzureDiskInputDetailsArrayOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) []HyperVReplicaAzureDiskInputDetails {
		return v.DisksToIncludeForManagedDisks
	}).(HyperVReplicaAzureDiskInputDetailsArrayOutput)
}

// The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
func (o HyperVReplicaAzureEnableProtectionInputOutput) EnableRdpOnTargetOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.EnableRdpOnTargetOption }).(pulumi.StringPtrOutput)
}

// The Hyper-V host VM Id.
func (o HyperVReplicaAzureEnableProtectionInputOutput) HvHostVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.HvHostVmId }).(pulumi.StringPtrOutput)
}

// The class type.
// Expected value is 'HyperVReplicaAzure'.
func (o HyperVReplicaAzureEnableProtectionInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// License type.
func (o HyperVReplicaAzureEnableProtectionInputOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// The storage account to be used for logging during replication.
func (o HyperVReplicaAzureEnableProtectionInputOutput) LogStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.LogStorageAccountId }).(pulumi.StringPtrOutput)
}

// The OS type associated with VM.
func (o HyperVReplicaAzureEnableProtectionInputOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The tags for the seed managed disks.
func (o HyperVReplicaAzureEnableProtectionInputOutput) SeedManagedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) map[string]string { return v.SeedManagedDiskTags }).(pulumi.StringMapOutput)
}

// The SQL Server license type.
func (o HyperVReplicaAzureEnableProtectionInputOutput) SqlServerLicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.SqlServerLicenseType }).(pulumi.StringPtrOutput)
}

// The target availability set ARM Id for resource manager deployment.
func (o HyperVReplicaAzureEnableProtectionInputOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.TargetAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// The target availability zone.
func (o HyperVReplicaAzureEnableProtectionInputOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.TargetAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The selected target Azure network Id.
func (o HyperVReplicaAzureEnableProtectionInputOutput) TargetAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.TargetAzureNetworkId }).(pulumi.StringPtrOutput)
}

// The selected target Azure subnet Id.
func (o HyperVReplicaAzureEnableProtectionInputOutput) TargetAzureSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.TargetAzureSubnetId }).(pulumi.StringPtrOutput)
}

// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
func (o HyperVReplicaAzureEnableProtectionInputOutput) TargetAzureV1ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.TargetAzureV1ResourceGroupId }).(pulumi.StringPtrOutput)
}

// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
func (o HyperVReplicaAzureEnableProtectionInputOutput) TargetAzureV2ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.TargetAzureV2ResourceGroupId }).(pulumi.StringPtrOutput)
}

// The target azure VM Name.
func (o HyperVReplicaAzureEnableProtectionInputOutput) TargetAzureVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.TargetAzureVmName }).(pulumi.StringPtrOutput)
}

// The tags for the target managed disks.
func (o HyperVReplicaAzureEnableProtectionInputOutput) TargetManagedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) map[string]string { return v.TargetManagedDiskTags }).(pulumi.StringMapOutput)
}

// The tags for the target NICs.
func (o HyperVReplicaAzureEnableProtectionInputOutput) TargetNicTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) map[string]string { return v.TargetNicTags }).(pulumi.StringMapOutput)
}

// The proximity placement group ARM Id.
func (o HyperVReplicaAzureEnableProtectionInputOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.TargetProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// The storage account Id.
func (o HyperVReplicaAzureEnableProtectionInputOutput) TargetStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.TargetStorageAccountId }).(pulumi.StringPtrOutput)
}

// The target VM size.
func (o HyperVReplicaAzureEnableProtectionInputOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.TargetVmSize }).(pulumi.StringPtrOutput)
}

// The target VM tags.
func (o HyperVReplicaAzureEnableProtectionInputOutput) TargetVmTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) map[string]string { return v.TargetVmTags }).(pulumi.StringMapOutput)
}

// A value indicating whether managed disks should be used during failover.
func (o HyperVReplicaAzureEnableProtectionInputOutput) UseManagedDisks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.UseManagedDisks }).(pulumi.StringPtrOutput)
}

// A value indicating whether managed disks should be used during replication.
func (o HyperVReplicaAzureEnableProtectionInputOutput) UseManagedDisksForReplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.UseManagedDisksForReplication }).(pulumi.StringPtrOutput)
}

// The OS disk VHD id associated with VM.
func (o HyperVReplicaAzureEnableProtectionInputOutput) VhdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.VhdId }).(pulumi.StringPtrOutput)
}

// The VM Name.
func (o HyperVReplicaAzureEnableProtectionInputOutput) VmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureEnableProtectionInput) *string { return v.VmName }).(pulumi.StringPtrOutput)
}

type HyperVReplicaAzureEnableProtectionInputPtrOutput struct{ *pulumi.OutputState }

func (HyperVReplicaAzureEnableProtectionInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVReplicaAzureEnableProtectionInput)(nil)).Elem()
}

func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) ToHyperVReplicaAzureEnableProtectionInputPtrOutput() HyperVReplicaAzureEnableProtectionInputPtrOutput {
	return o
}

func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) ToHyperVReplicaAzureEnableProtectionInputPtrOutputWithContext(ctx context.Context) HyperVReplicaAzureEnableProtectionInputPtrOutput {
	return o
}

func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) Elem() HyperVReplicaAzureEnableProtectionInputOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) HyperVReplicaAzureEnableProtectionInput {
		if v != nil {
			return *v
		}
		var ret HyperVReplicaAzureEnableProtectionInput
		return ret
	}).(HyperVReplicaAzureEnableProtectionInputOutput)
}

// The DiskEncryptionSet ARM Id.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSetId
	}).(pulumi.StringPtrOutput)
}

// The DiskType.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

// The list of VHD Ids of disks to be protected.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) DisksToInclude() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) []string {
		if v == nil {
			return nil
		}
		return v.DisksToInclude
	}).(pulumi.StringArrayOutput)
}

// The disks to include list for managed disks.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) DisksToIncludeForManagedDisks() HyperVReplicaAzureDiskInputDetailsArrayOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) []HyperVReplicaAzureDiskInputDetails {
		if v == nil {
			return nil
		}
		return v.DisksToIncludeForManagedDisks
	}).(HyperVReplicaAzureDiskInputDetailsArrayOutput)
}

// The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) EnableRdpOnTargetOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.EnableRdpOnTargetOption
	}).(pulumi.StringPtrOutput)
}

// The Hyper-V host VM Id.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) HvHostVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.HvHostVmId
	}).(pulumi.StringPtrOutput)
}

// The class type.
// Expected value is 'HyperVReplicaAzure'.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// License type.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.LicenseType
	}).(pulumi.StringPtrOutput)
}

// The storage account to be used for logging during replication.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) LogStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.LogStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The OS type associated with VM.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The tags for the seed managed disks.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) SeedManagedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) map[string]string {
		if v == nil {
			return nil
		}
		return v.SeedManagedDiskTags
	}).(pulumi.StringMapOutput)
}

// The SQL Server license type.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) SqlServerLicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.SqlServerLicenseType
	}).(pulumi.StringPtrOutput)
}

// The target availability set ARM Id for resource manager deployment.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetAvailabilitySetId
	}).(pulumi.StringPtrOutput)
}

// The target availability zone.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetAvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// The selected target Azure network Id.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) TargetAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetAzureNetworkId
	}).(pulumi.StringPtrOutput)
}

// The selected target Azure subnet Id.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) TargetAzureSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetAzureSubnetId
	}).(pulumi.StringPtrOutput)
}

// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) TargetAzureV1ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetAzureV1ResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) TargetAzureV2ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetAzureV2ResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// The target azure VM Name.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) TargetAzureVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetAzureVmName
	}).(pulumi.StringPtrOutput)
}

// The tags for the target managed disks.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) TargetManagedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetManagedDiskTags
	}).(pulumi.StringMapOutput)
}

// The tags for the target NICs.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) TargetNicTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetNicTags
	}).(pulumi.StringMapOutput)
}

// The proximity placement group ARM Id.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetProximityPlacementGroupId
	}).(pulumi.StringPtrOutput)
}

// The storage account Id.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) TargetStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The target VM size.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetVmSize
	}).(pulumi.StringPtrOutput)
}

// The target VM tags.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) TargetVmTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetVmTags
	}).(pulumi.StringMapOutput)
}

// A value indicating whether managed disks should be used during failover.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) UseManagedDisks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.UseManagedDisks
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether managed disks should be used during replication.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) UseManagedDisksForReplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.UseManagedDisksForReplication
	}).(pulumi.StringPtrOutput)
}

// The OS disk VHD id associated with VM.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) VhdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.VhdId
	}).(pulumi.StringPtrOutput)
}

// The VM Name.
func (o HyperVReplicaAzureEnableProtectionInputPtrOutput) VmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.VmName
	}).(pulumi.StringPtrOutput)
}

// Hyper-V Managed disk details.
type HyperVReplicaAzureManagedDiskDetailsResponse struct {
	// The disk encryption set ARM Id.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The disk Id.
	DiskId *string `pulumi:"diskId"`
	// The replica disk type.
	ReplicaDiskType *string `pulumi:"replicaDiskType"`
	// Seed managed disk Id.
	SeedManagedDiskId *string `pulumi:"seedManagedDiskId"`
}

// Hyper-V Managed disk details.
type HyperVReplicaAzureManagedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaAzureManagedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzureManagedDiskDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaAzureManagedDiskDetailsResponseOutput) ToHyperVReplicaAzureManagedDiskDetailsResponseOutput() HyperVReplicaAzureManagedDiskDetailsResponseOutput {
	return o
}

func (o HyperVReplicaAzureManagedDiskDetailsResponseOutput) ToHyperVReplicaAzureManagedDiskDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaAzureManagedDiskDetailsResponseOutput {
	return o
}

// The disk encryption set ARM Id.
func (o HyperVReplicaAzureManagedDiskDetailsResponseOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureManagedDiskDetailsResponse) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The disk Id.
func (o HyperVReplicaAzureManagedDiskDetailsResponseOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureManagedDiskDetailsResponse) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// The replica disk type.
func (o HyperVReplicaAzureManagedDiskDetailsResponseOutput) ReplicaDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureManagedDiskDetailsResponse) *string { return v.ReplicaDiskType }).(pulumi.StringPtrOutput)
}

// Seed managed disk Id.
func (o HyperVReplicaAzureManagedDiskDetailsResponseOutput) SeedManagedDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureManagedDiskDetailsResponse) *string { return v.SeedManagedDiskId }).(pulumi.StringPtrOutput)
}

type HyperVReplicaAzureManagedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (HyperVReplicaAzureManagedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HyperVReplicaAzureManagedDiskDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaAzureManagedDiskDetailsResponseArrayOutput) ToHyperVReplicaAzureManagedDiskDetailsResponseArrayOutput() HyperVReplicaAzureManagedDiskDetailsResponseArrayOutput {
	return o
}

func (o HyperVReplicaAzureManagedDiskDetailsResponseArrayOutput) ToHyperVReplicaAzureManagedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) HyperVReplicaAzureManagedDiskDetailsResponseArrayOutput {
	return o
}

func (o HyperVReplicaAzureManagedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) HyperVReplicaAzureManagedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HyperVReplicaAzureManagedDiskDetailsResponse {
		return vs[0].([]HyperVReplicaAzureManagedDiskDetailsResponse)[vs[1].(int)]
	}).(HyperVReplicaAzureManagedDiskDetailsResponseOutput)
}

// Hyper-V Replica Azure specific protection profile details.
type HyperVReplicaAzurePolicyDetailsResponse struct {
	// The active storage account Id.
	ActiveStorageAccountId *string `pulumi:"activeStorageAccountId"`
	// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether encryption is enabled for virtual machines in this cloud.
	Encryption *string `pulumi:"encryption"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'HyperVReplicaAzure'.
	InstanceType string `pulumi:"instanceType"`
	// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// The duration (in hours) to which point the recovery history needs to be maintained.
	RecoveryPointHistoryDurationInHours *int `pulumi:"recoveryPointHistoryDurationInHours"`
	// The replication interval.
	ReplicationInterval *int `pulumi:"replicationInterval"`
}

// Hyper-V Replica Azure specific protection profile details.
type HyperVReplicaAzurePolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaAzurePolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzurePolicyDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaAzurePolicyDetailsResponseOutput) ToHyperVReplicaAzurePolicyDetailsResponseOutput() HyperVReplicaAzurePolicyDetailsResponseOutput {
	return o
}

func (o HyperVReplicaAzurePolicyDetailsResponseOutput) ToHyperVReplicaAzurePolicyDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaAzurePolicyDetailsResponseOutput {
	return o
}

// The active storage account Id.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) ActiveStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *string { return v.ActiveStorageAccountId }).(pulumi.StringPtrOutput)
}

// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *int {
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether encryption is enabled for virtual machines in this cloud.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) Encryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *string { return v.Encryption }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'HyperVReplicaAzure'.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *string { return v.OnlineReplicationStartTime }).(pulumi.StringPtrOutput)
}

// The duration (in hours) to which point the recovery history needs to be maintained.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) RecoveryPointHistoryDurationInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *int { return v.RecoveryPointHistoryDurationInHours }).(pulumi.IntPtrOutput)
}

// The replication interval.
func (o HyperVReplicaAzurePolicyDetailsResponseOutput) ReplicationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyDetailsResponse) *int { return v.ReplicationInterval }).(pulumi.IntPtrOutput)
}

type HyperVReplicaAzurePolicyDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (HyperVReplicaAzurePolicyDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVReplicaAzurePolicyDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaAzurePolicyDetailsResponsePtrOutput) ToHyperVReplicaAzurePolicyDetailsResponsePtrOutput() HyperVReplicaAzurePolicyDetailsResponsePtrOutput {
	return o
}

func (o HyperVReplicaAzurePolicyDetailsResponsePtrOutput) ToHyperVReplicaAzurePolicyDetailsResponsePtrOutputWithContext(ctx context.Context) HyperVReplicaAzurePolicyDetailsResponsePtrOutput {
	return o
}

func (o HyperVReplicaAzurePolicyDetailsResponsePtrOutput) Elem() HyperVReplicaAzurePolicyDetailsResponseOutput {
	return o.ApplyT(func(v *HyperVReplicaAzurePolicyDetailsResponse) HyperVReplicaAzurePolicyDetailsResponse {
		if v != nil {
			return *v
		}
		var ret HyperVReplicaAzurePolicyDetailsResponse
		return ret
	}).(HyperVReplicaAzurePolicyDetailsResponseOutput)
}

// The active storage account Id.
func (o HyperVReplicaAzurePolicyDetailsResponsePtrOutput) ActiveStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzurePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActiveStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
func (o HyperVReplicaAzurePolicyDetailsResponsePtrOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzurePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether encryption is enabled for virtual machines in this cloud.
func (o HyperVReplicaAzurePolicyDetailsResponsePtrOutput) Encryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzurePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'HyperVReplicaAzure'.
func (o HyperVReplicaAzurePolicyDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzurePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
func (o HyperVReplicaAzurePolicyDetailsResponsePtrOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzurePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OnlineReplicationStartTime
	}).(pulumi.StringPtrOutput)
}

// The duration (in hours) to which point the recovery history needs to be maintained.
func (o HyperVReplicaAzurePolicyDetailsResponsePtrOutput) RecoveryPointHistoryDurationInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzurePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointHistoryDurationInHours
	}).(pulumi.IntPtrOutput)
}

// The replication interval.
func (o HyperVReplicaAzurePolicyDetailsResponsePtrOutput) ReplicationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzurePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ReplicationInterval
	}).(pulumi.IntPtrOutput)
}

// Hyper-V Replica Azure specific input for creating a protection profile.
type HyperVReplicaAzurePolicyInput struct {
	// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// The class type.
	// Expected value is 'HyperVReplicaAzure'.
	InstanceType string `pulumi:"instanceType"`
	// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// The duration (in hours) to which point the recovery history needs to be maintained.
	RecoveryPointHistoryDuration *int `pulumi:"recoveryPointHistoryDuration"`
	// The replication interval.
	ReplicationInterval *int `pulumi:"replicationInterval"`
	// The list of storage accounts to which the VMs in the primary cloud can replicate to.
	StorageAccounts []string `pulumi:"storageAccounts"`
}

// HyperVReplicaAzurePolicyInputInput is an input type that accepts HyperVReplicaAzurePolicyInputArgs and HyperVReplicaAzurePolicyInputOutput values.
// You can construct a concrete instance of `HyperVReplicaAzurePolicyInputInput` via:
//
//	HyperVReplicaAzurePolicyInputArgs{...}
type HyperVReplicaAzurePolicyInputInput interface {
	pulumi.Input

	ToHyperVReplicaAzurePolicyInputOutput() HyperVReplicaAzurePolicyInputOutput
	ToHyperVReplicaAzurePolicyInputOutputWithContext(context.Context) HyperVReplicaAzurePolicyInputOutput
}

// Hyper-V Replica Azure specific input for creating a protection profile.
type HyperVReplicaAzurePolicyInputArgs struct {
	// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
	ApplicationConsistentSnapshotFrequencyInHours pulumi.IntPtrInput `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// The class type.
	// Expected value is 'HyperVReplicaAzure'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
	OnlineReplicationStartTime pulumi.StringPtrInput `pulumi:"onlineReplicationStartTime"`
	// The duration (in hours) to which point the recovery history needs to be maintained.
	RecoveryPointHistoryDuration pulumi.IntPtrInput `pulumi:"recoveryPointHistoryDuration"`
	// The replication interval.
	ReplicationInterval pulumi.IntPtrInput `pulumi:"replicationInterval"`
	// The list of storage accounts to which the VMs in the primary cloud can replicate to.
	StorageAccounts pulumi.StringArrayInput `pulumi:"storageAccounts"`
}

func (HyperVReplicaAzurePolicyInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzurePolicyInput)(nil)).Elem()
}

func (i HyperVReplicaAzurePolicyInputArgs) ToHyperVReplicaAzurePolicyInputOutput() HyperVReplicaAzurePolicyInputOutput {
	return i.ToHyperVReplicaAzurePolicyInputOutputWithContext(context.Background())
}

func (i HyperVReplicaAzurePolicyInputArgs) ToHyperVReplicaAzurePolicyInputOutputWithContext(ctx context.Context) HyperVReplicaAzurePolicyInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaAzurePolicyInputOutput)
}

func (i HyperVReplicaAzurePolicyInputArgs) ToHyperVReplicaAzurePolicyInputPtrOutput() HyperVReplicaAzurePolicyInputPtrOutput {
	return i.ToHyperVReplicaAzurePolicyInputPtrOutputWithContext(context.Background())
}

func (i HyperVReplicaAzurePolicyInputArgs) ToHyperVReplicaAzurePolicyInputPtrOutputWithContext(ctx context.Context) HyperVReplicaAzurePolicyInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaAzurePolicyInputOutput).ToHyperVReplicaAzurePolicyInputPtrOutputWithContext(ctx)
}

// HyperVReplicaAzurePolicyInputPtrInput is an input type that accepts HyperVReplicaAzurePolicyInputArgs, HyperVReplicaAzurePolicyInputPtr and HyperVReplicaAzurePolicyInputPtrOutput values.
// You can construct a concrete instance of `HyperVReplicaAzurePolicyInputPtrInput` via:
//
//	        HyperVReplicaAzurePolicyInputArgs{...}
//
//	or:
//
//	        nil
type HyperVReplicaAzurePolicyInputPtrInput interface {
	pulumi.Input

	ToHyperVReplicaAzurePolicyInputPtrOutput() HyperVReplicaAzurePolicyInputPtrOutput
	ToHyperVReplicaAzurePolicyInputPtrOutputWithContext(context.Context) HyperVReplicaAzurePolicyInputPtrOutput
}

type hyperVReplicaAzurePolicyInputPtrType HyperVReplicaAzurePolicyInputArgs

func HyperVReplicaAzurePolicyInputPtr(v *HyperVReplicaAzurePolicyInputArgs) HyperVReplicaAzurePolicyInputPtrInput {
	return (*hyperVReplicaAzurePolicyInputPtrType)(v)
}

func (*hyperVReplicaAzurePolicyInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVReplicaAzurePolicyInput)(nil)).Elem()
}

func (i *hyperVReplicaAzurePolicyInputPtrType) ToHyperVReplicaAzurePolicyInputPtrOutput() HyperVReplicaAzurePolicyInputPtrOutput {
	return i.ToHyperVReplicaAzurePolicyInputPtrOutputWithContext(context.Background())
}

func (i *hyperVReplicaAzurePolicyInputPtrType) ToHyperVReplicaAzurePolicyInputPtrOutputWithContext(ctx context.Context) HyperVReplicaAzurePolicyInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaAzurePolicyInputPtrOutput)
}

// Hyper-V Replica Azure specific input for creating a protection profile.
type HyperVReplicaAzurePolicyInputOutput struct{ *pulumi.OutputState }

func (HyperVReplicaAzurePolicyInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzurePolicyInput)(nil)).Elem()
}

func (o HyperVReplicaAzurePolicyInputOutput) ToHyperVReplicaAzurePolicyInputOutput() HyperVReplicaAzurePolicyInputOutput {
	return o
}

func (o HyperVReplicaAzurePolicyInputOutput) ToHyperVReplicaAzurePolicyInputOutputWithContext(ctx context.Context) HyperVReplicaAzurePolicyInputOutput {
	return o
}

func (o HyperVReplicaAzurePolicyInputOutput) ToHyperVReplicaAzurePolicyInputPtrOutput() HyperVReplicaAzurePolicyInputPtrOutput {
	return o.ToHyperVReplicaAzurePolicyInputPtrOutputWithContext(context.Background())
}

func (o HyperVReplicaAzurePolicyInputOutput) ToHyperVReplicaAzurePolicyInputPtrOutputWithContext(ctx context.Context) HyperVReplicaAzurePolicyInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HyperVReplicaAzurePolicyInput) *HyperVReplicaAzurePolicyInput {
		return &v
	}).(HyperVReplicaAzurePolicyInputPtrOutput)
}

// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
func (o HyperVReplicaAzurePolicyInputOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyInput) *int { return v.ApplicationConsistentSnapshotFrequencyInHours }).(pulumi.IntPtrOutput)
}

// The class type.
// Expected value is 'HyperVReplicaAzure'.
func (o HyperVReplicaAzurePolicyInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
func (o HyperVReplicaAzurePolicyInputOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyInput) *string { return v.OnlineReplicationStartTime }).(pulumi.StringPtrOutput)
}

// The duration (in hours) to which point the recovery history needs to be maintained.
func (o HyperVReplicaAzurePolicyInputOutput) RecoveryPointHistoryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyInput) *int { return v.RecoveryPointHistoryDuration }).(pulumi.IntPtrOutput)
}

// The replication interval.
func (o HyperVReplicaAzurePolicyInputOutput) ReplicationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyInput) *int { return v.ReplicationInterval }).(pulumi.IntPtrOutput)
}

// The list of storage accounts to which the VMs in the primary cloud can replicate to.
func (o HyperVReplicaAzurePolicyInputOutput) StorageAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HyperVReplicaAzurePolicyInput) []string { return v.StorageAccounts }).(pulumi.StringArrayOutput)
}

type HyperVReplicaAzurePolicyInputPtrOutput struct{ *pulumi.OutputState }

func (HyperVReplicaAzurePolicyInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVReplicaAzurePolicyInput)(nil)).Elem()
}

func (o HyperVReplicaAzurePolicyInputPtrOutput) ToHyperVReplicaAzurePolicyInputPtrOutput() HyperVReplicaAzurePolicyInputPtrOutput {
	return o
}

func (o HyperVReplicaAzurePolicyInputPtrOutput) ToHyperVReplicaAzurePolicyInputPtrOutputWithContext(ctx context.Context) HyperVReplicaAzurePolicyInputPtrOutput {
	return o
}

func (o HyperVReplicaAzurePolicyInputPtrOutput) Elem() HyperVReplicaAzurePolicyInputOutput {
	return o.ApplyT(func(v *HyperVReplicaAzurePolicyInput) HyperVReplicaAzurePolicyInput {
		if v != nil {
			return *v
		}
		var ret HyperVReplicaAzurePolicyInput
		return ret
	}).(HyperVReplicaAzurePolicyInputOutput)
}

// The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.
func (o HyperVReplicaAzurePolicyInputPtrOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzurePolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// The class type.
// Expected value is 'HyperVReplicaAzure'.
func (o HyperVReplicaAzurePolicyInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzurePolicyInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.
func (o HyperVReplicaAzurePolicyInputPtrOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzurePolicyInput) *string {
		if v == nil {
			return nil
		}
		return v.OnlineReplicationStartTime
	}).(pulumi.StringPtrOutput)
}

// The duration (in hours) to which point the recovery history needs to be maintained.
func (o HyperVReplicaAzurePolicyInputPtrOutput) RecoveryPointHistoryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzurePolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointHistoryDuration
	}).(pulumi.IntPtrOutput)
}

// The replication interval.
func (o HyperVReplicaAzurePolicyInputPtrOutput) ReplicationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzurePolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.ReplicationInterval
	}).(pulumi.IntPtrOutput)
}

// The list of storage accounts to which the VMs in the primary cloud can replicate to.
func (o HyperVReplicaAzurePolicyInputPtrOutput) StorageAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HyperVReplicaAzurePolicyInput) []string {
		if v == nil {
			return nil
		}
		return v.StorageAccounts
	}).(pulumi.StringArrayOutput)
}

// Hyper V Replica Azure provider specific settings.
type HyperVReplicaAzureReplicationDetailsResponse struct {
	// A value indicating all available inplace OS Upgrade configurations.
	AllAvailableOSUpgradeConfigurations []OSUpgradeSupportedVersionsResponse `pulumi:"allAvailableOSUpgradeConfigurations"`
	// Azure VM Disk details.
	AzureVmDiskDetails []AzureVmDiskDetailsResponse `pulumi:"azureVmDiskDetails"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
	EnableRdpOnTargetOption *string `pulumi:"enableRdpOnTargetOption"`
	// The encryption info.
	Encryption *string `pulumi:"encryption"`
	// Initial replication details.
	InitialReplicationDetails *InitialReplicationDetailsResponse `pulumi:"initialReplicationDetails"`
	// Gets the Instance type.
	// Expected value is 'HyperVReplicaAzure'.
	InstanceType string `pulumi:"instanceType"`
	// The last recovery point received time.
	LastRecoveryPointReceived string `pulumi:"lastRecoveryPointReceived"`
	// The Last replication time.
	LastReplicatedTime *string `pulumi:"lastReplicatedTime"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// License Type of the VM to be used.
	LicenseType *string `pulumi:"licenseType"`
	// The operating system info.
	OSDetails *OSDetailsResponse `pulumi:"oSDetails"`
	// The list of protected managed disks.
	ProtectedManagedDisks []HyperVReplicaAzureManagedDiskDetailsResponse `pulumi:"protectedManagedDisks"`
	// The recovery availability set Id.
	RecoveryAvailabilitySetId *string `pulumi:"recoveryAvailabilitySetId"`
	// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
	RecoveryAzureLogStorageAccountId *string `pulumi:"recoveryAzureLogStorageAccountId"`
	// The target resource group Id.
	RecoveryAzureResourceGroupId *string `pulumi:"recoveryAzureResourceGroupId"`
	// The recovery Azure storage account.
	RecoveryAzureStorageAccount *string `pulumi:"recoveryAzureStorageAccount"`
	// The Recovery Azure VM size.
	RecoveryAzureVMSize *string `pulumi:"recoveryAzureVMSize"`
	// Recovery Azure given name.
	RecoveryAzureVmName *string `pulumi:"recoveryAzureVmName"`
	// Last RPO value.
	RpoInSeconds *float64 `pulumi:"rpoInSeconds"`
	// The tags for the seed managed disks.
	SeedManagedDiskTags map[string]string `pulumi:"seedManagedDiskTags"`
	// The selected recovery azure network Id.
	SelectedRecoveryAzureNetworkId *string `pulumi:"selectedRecoveryAzureNetworkId"`
	// The selected source nic Id which will be used as the primary nic during failover.
	SelectedSourceNicId *string `pulumi:"selectedSourceNicId"`
	// The CPU count of the VM on the primary side.
	SourceVmCpuCount *int `pulumi:"sourceVmCpuCount"`
	// The RAM size of the VM on the primary side.
	SourceVmRamSizeInMB *int `pulumi:"sourceVmRamSizeInMB"`
	// The SQL Server license type.
	SqlServerLicenseType *string `pulumi:"sqlServerLicenseType"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The tags for the target managed disks.
	TargetManagedDiskTags map[string]string `pulumi:"targetManagedDiskTags"`
	// The tags for the target NICs.
	TargetNicTags map[string]string `pulumi:"targetNicTags"`
	// The target proximity placement group Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The target VM tags.
	TargetVmTags map[string]string `pulumi:"targetVmTags"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks *string `pulumi:"useManagedDisks"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// Hyper V Replica Azure provider specific settings.
type HyperVReplicaAzureReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaAzureReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaAzureReplicationDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaAzureReplicationDetailsResponseOutput) ToHyperVReplicaAzureReplicationDetailsResponseOutput() HyperVReplicaAzureReplicationDetailsResponseOutput {
	return o
}

func (o HyperVReplicaAzureReplicationDetailsResponseOutput) ToHyperVReplicaAzureReplicationDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaAzureReplicationDetailsResponseOutput {
	return o
}

// A value indicating all available inplace OS Upgrade configurations.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) AllAvailableOSUpgradeConfigurations() OSUpgradeSupportedVersionsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) []OSUpgradeSupportedVersionsResponse {
		return v.AllAvailableOSUpgradeConfigurations
	}).(OSUpgradeSupportedVersionsResponseArrayOutput)
}

// Azure VM Disk details.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) AzureVmDiskDetails() AzureVmDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) []AzureVmDiskDetailsResponse {
		return v.AzureVmDiskDetails
	}).(AzureVmDiskDetailsResponseArrayOutput)
}

// The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) EnableRdpOnTargetOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.EnableRdpOnTargetOption }).(pulumi.StringPtrOutput)
}

// The encryption info.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) Encryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.Encryption }).(pulumi.StringPtrOutput)
}

// Initial replication details.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) InitialReplicationDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		return v.InitialReplicationDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// Gets the Instance type.
// Expected value is 'HyperVReplicaAzure'.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The last recovery point received time.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) LastRecoveryPointReceived() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) string { return v.LastRecoveryPointReceived }).(pulumi.StringOutput)
}

// The Last replication time.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) LastReplicatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.LastReplicatedTime }).(pulumi.StringPtrOutput)
}

// The last RPO calculated time.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// License Type of the VM to be used.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// The operating system info.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) OSDetails() OSDetailsResponsePtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *OSDetailsResponse { return v.OSDetails }).(OSDetailsResponsePtrOutput)
}

// The list of protected managed disks.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) ProtectedManagedDisks() HyperVReplicaAzureManagedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) []HyperVReplicaAzureManagedDiskDetailsResponse {
		return v.ProtectedManagedDisks
	}).(HyperVReplicaAzureManagedDiskDetailsResponseArrayOutput)
}

// The recovery availability set Id.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.RecoveryAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAzureLogStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string {
		return v.RecoveryAzureLogStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The target resource group Id.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAzureResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.RecoveryAzureResourceGroupId }).(pulumi.StringPtrOutput)
}

// The recovery Azure storage account.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAzureStorageAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.RecoveryAzureStorageAccount }).(pulumi.StringPtrOutput)
}

// The Recovery Azure VM size.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAzureVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.RecoveryAzureVMSize }).(pulumi.StringPtrOutput)
}

// Recovery Azure given name.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RecoveryAzureVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.RecoveryAzureVmName }).(pulumi.StringPtrOutput)
}

// Last RPO value.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) RpoInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *float64 { return v.RpoInSeconds }).(pulumi.Float64PtrOutput)
}

// The tags for the seed managed disks.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) SeedManagedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) map[string]string { return v.SeedManagedDiskTags }).(pulumi.StringMapOutput)
}

// The selected recovery azure network Id.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) SelectedRecoveryAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.SelectedRecoveryAzureNetworkId }).(pulumi.StringPtrOutput)
}

// The selected source nic Id which will be used as the primary nic during failover.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) SelectedSourceNicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.SelectedSourceNicId }).(pulumi.StringPtrOutput)
}

// The CPU count of the VM on the primary side.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) SourceVmCpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *int { return v.SourceVmCpuCount }).(pulumi.IntPtrOutput)
}

// The RAM size of the VM on the primary side.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) SourceVmRamSizeInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *int { return v.SourceVmRamSizeInMB }).(pulumi.IntPtrOutput)
}

// The SQL Server license type.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) SqlServerLicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.SqlServerLicenseType }).(pulumi.StringPtrOutput)
}

// The target availability zone.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.TargetAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The tags for the target managed disks.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) TargetManagedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) map[string]string { return v.TargetManagedDiskTags }).(pulumi.StringMapOutput)
}

// The tags for the target NICs.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) TargetNicTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) map[string]string { return v.TargetNicTags }).(pulumi.StringMapOutput)
}

// The target proximity placement group Id.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.TargetProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// The target VM tags.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) TargetVmTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) map[string]string { return v.TargetVmTags }).(pulumi.StringMapOutput)
}

// A value indicating whether managed disks should be used during failover.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) UseManagedDisks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.UseManagedDisks }).(pulumi.StringPtrOutput)
}

// The virtual machine Id.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o HyperVReplicaAzureReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaAzureReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

type HyperVReplicaAzureReplicationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (HyperVReplicaAzureReplicationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVReplicaAzureReplicationDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) ToHyperVReplicaAzureReplicationDetailsResponsePtrOutput() HyperVReplicaAzureReplicationDetailsResponsePtrOutput {
	return o
}

func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) ToHyperVReplicaAzureReplicationDetailsResponsePtrOutputWithContext(ctx context.Context) HyperVReplicaAzureReplicationDetailsResponsePtrOutput {
	return o
}

func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) Elem() HyperVReplicaAzureReplicationDetailsResponseOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) HyperVReplicaAzureReplicationDetailsResponse {
		if v != nil {
			return *v
		}
		var ret HyperVReplicaAzureReplicationDetailsResponse
		return ret
	}).(HyperVReplicaAzureReplicationDetailsResponseOutput)
}

// A value indicating all available inplace OS Upgrade configurations.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) AllAvailableOSUpgradeConfigurations() OSUpgradeSupportedVersionsResponseArrayOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) []OSUpgradeSupportedVersionsResponse {
		if v == nil {
			return nil
		}
		return v.AllAvailableOSUpgradeConfigurations
	}).(OSUpgradeSupportedVersionsResponseArrayOutput)
}

// Azure VM Disk details.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) AzureVmDiskDetails() AzureVmDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) []AzureVmDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.AzureVmDiskDetails
	}).(AzureVmDiskDetailsResponseArrayOutput)
}

// The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) EnableRdpOnTargetOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnableRdpOnTargetOption
	}).(pulumi.StringPtrOutput)
}

// The encryption info.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) Encryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(pulumi.StringPtrOutput)
}

// Initial replication details.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) InitialReplicationDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		if v == nil {
			return nil
		}
		return v.InitialReplicationDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// Gets the Instance type.
// Expected value is 'HyperVReplicaAzure'.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The last recovery point received time.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) LastRecoveryPointReceived() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastRecoveryPointReceived
	}).(pulumi.StringPtrOutput)
}

// The Last replication time.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) LastReplicatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastReplicatedTime
	}).(pulumi.StringPtrOutput)
}

// The last RPO calculated time.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRpoCalculatedTime
	}).(pulumi.StringPtrOutput)
}

// License Type of the VM to be used.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LicenseType
	}).(pulumi.StringPtrOutput)
}

// The operating system info.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) OSDetails() OSDetailsResponsePtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *OSDetailsResponse {
		if v == nil {
			return nil
		}
		return v.OSDetails
	}).(OSDetailsResponsePtrOutput)
}

// The list of protected managed disks.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) ProtectedManagedDisks() HyperVReplicaAzureManagedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) []HyperVReplicaAzureManagedDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProtectedManagedDisks
	}).(HyperVReplicaAzureManagedDiskDetailsResponseArrayOutput)
}

// The recovery availability set Id.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) RecoveryAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAvailabilitySetId
	}).(pulumi.StringPtrOutput)
}

// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) RecoveryAzureLogStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAzureLogStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The target resource group Id.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) RecoveryAzureResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAzureResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// The recovery Azure storage account.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) RecoveryAzureStorageAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAzureStorageAccount
	}).(pulumi.StringPtrOutput)
}

// The Recovery Azure VM size.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) RecoveryAzureVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAzureVMSize
	}).(pulumi.StringPtrOutput)
}

// Recovery Azure given name.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) RecoveryAzureVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAzureVmName
	}).(pulumi.StringPtrOutput)
}

// Last RPO value.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) RpoInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.RpoInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The tags for the seed managed disks.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) SeedManagedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.SeedManagedDiskTags
	}).(pulumi.StringMapOutput)
}

// The selected recovery azure network Id.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) SelectedRecoveryAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SelectedRecoveryAzureNetworkId
	}).(pulumi.StringPtrOutput)
}

// The selected source nic Id which will be used as the primary nic during failover.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) SelectedSourceNicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SelectedSourceNicId
	}).(pulumi.StringPtrOutput)
}

// The CPU count of the VM on the primary side.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) SourceVmCpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SourceVmCpuCount
	}).(pulumi.IntPtrOutput)
}

// The RAM size of the VM on the primary side.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) SourceVmRamSizeInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SourceVmRamSizeInMB
	}).(pulumi.IntPtrOutput)
}

// The SQL Server license type.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) SqlServerLicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SqlServerLicenseType
	}).(pulumi.StringPtrOutput)
}

// The target availability zone.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetAvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// The tags for the target managed disks.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) TargetManagedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetManagedDiskTags
	}).(pulumi.StringMapOutput)
}

// The tags for the target NICs.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) TargetNicTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetNicTags
	}).(pulumi.StringMapOutput)
}

// The target proximity placement group Id.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetProximityPlacementGroupId
	}).(pulumi.StringPtrOutput)
}

// The target VM tags.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) TargetVmTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetVmTags
	}).(pulumi.StringMapOutput)
}

// A value indicating whether managed disks should be used during failover.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) UseManagedDisks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.UseManagedDisks
	}).(pulumi.StringPtrOutput)
}

// The virtual machine Id.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmId
	}).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) []VMNicDetailsResponse {
		if v == nil {
			return nil
		}
		return v.VmNics
	}).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmProtectionState
	}).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o HyperVReplicaAzureReplicationDetailsResponsePtrOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaAzureReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmProtectionStateDescription
	}).(pulumi.StringPtrOutput)
}

// Base class for HyperVReplica policy details.
type HyperVReplicaBasePolicyDetailsResponse struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'HyperVReplicaBasePolicyDetails'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud.
	ReplicaDeletionOption *string `pulumi:"replicaDeletionOption"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// Base class for HyperVReplica policy details.
type HyperVReplicaBasePolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBasePolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaBasePolicyDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaBasePolicyDetailsResponseOutput) ToHyperVReplicaBasePolicyDetailsResponseOutput() HyperVReplicaBasePolicyDetailsResponseOutput {
	return o
}

func (o HyperVReplicaBasePolicyDetailsResponseOutput) ToHyperVReplicaBasePolicyDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaBasePolicyDetailsResponseOutput {
	return o
}

// A value indicating the authentication type.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) AllowedAuthenticationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *int { return v.AllowedAuthenticationType }).(pulumi.IntPtrOutput)
}

// A value indicating the application consistent frequency.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *int {
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether compression has to be enabled.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.Compression }).(pulumi.StringPtrOutput)
}

// A value indicating whether IR is online.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) InitialReplicationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.InitialReplicationMethod }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'HyperVReplicaBasePolicyDetails'.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating the offline IR export path.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) OfflineReplicationExportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.OfflineReplicationExportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR import path.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) OfflineReplicationImportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.OfflineReplicationImportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the online IR start time.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.OnlineReplicationStartTime }).(pulumi.StringPtrOutput)
}

// A value indicating the number of recovery points.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) RecoveryPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *int { return v.RecoveryPoints }).(pulumi.IntPtrOutput)
}

// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) ReplicaDeletionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *string { return v.ReplicaDeletionOption }).(pulumi.StringPtrOutput)
}

// A value indicating the recovery HTTPS port.
func (o HyperVReplicaBasePolicyDetailsResponseOutput) ReplicationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBasePolicyDetailsResponse) *int { return v.ReplicationPort }).(pulumi.IntPtrOutput)
}

type HyperVReplicaBasePolicyDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBasePolicyDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVReplicaBasePolicyDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaBasePolicyDetailsResponsePtrOutput) ToHyperVReplicaBasePolicyDetailsResponsePtrOutput() HyperVReplicaBasePolicyDetailsResponsePtrOutput {
	return o
}

func (o HyperVReplicaBasePolicyDetailsResponsePtrOutput) ToHyperVReplicaBasePolicyDetailsResponsePtrOutputWithContext(ctx context.Context) HyperVReplicaBasePolicyDetailsResponsePtrOutput {
	return o
}

func (o HyperVReplicaBasePolicyDetailsResponsePtrOutput) Elem() HyperVReplicaBasePolicyDetailsResponseOutput {
	return o.ApplyT(func(v *HyperVReplicaBasePolicyDetailsResponse) HyperVReplicaBasePolicyDetailsResponse {
		if v != nil {
			return *v
		}
		var ret HyperVReplicaBasePolicyDetailsResponse
		return ret
	}).(HyperVReplicaBasePolicyDetailsResponseOutput)
}

// A value indicating the authentication type.
func (o HyperVReplicaBasePolicyDetailsResponsePtrOutput) AllowedAuthenticationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBasePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.AllowedAuthenticationType
	}).(pulumi.IntPtrOutput)
}

// A value indicating the application consistent frequency.
func (o HyperVReplicaBasePolicyDetailsResponsePtrOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBasePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether compression has to be enabled.
func (o HyperVReplicaBasePolicyDetailsResponsePtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBasePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether IR is online.
func (o HyperVReplicaBasePolicyDetailsResponsePtrOutput) InitialReplicationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBasePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InitialReplicationMethod
	}).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'HyperVReplicaBasePolicyDetails'.
func (o HyperVReplicaBasePolicyDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBasePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR export path.
func (o HyperVReplicaBasePolicyDetailsResponsePtrOutput) OfflineReplicationExportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBasePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OfflineReplicationExportPath
	}).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR import path.
func (o HyperVReplicaBasePolicyDetailsResponsePtrOutput) OfflineReplicationImportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBasePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OfflineReplicationImportPath
	}).(pulumi.StringPtrOutput)
}

// A value indicating the online IR start time.
func (o HyperVReplicaBasePolicyDetailsResponsePtrOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBasePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OnlineReplicationStartTime
	}).(pulumi.StringPtrOutput)
}

// A value indicating the number of recovery points.
func (o HyperVReplicaBasePolicyDetailsResponsePtrOutput) RecoveryPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBasePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPoints
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud.
func (o HyperVReplicaBasePolicyDetailsResponsePtrOutput) ReplicaDeletionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBasePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaDeletionOption
	}).(pulumi.StringPtrOutput)
}

// A value indicating the recovery HTTPS port.
func (o HyperVReplicaBasePolicyDetailsResponsePtrOutput) ReplicationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBasePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ReplicationPort
	}).(pulumi.IntPtrOutput)
}

// Hyper V replica provider specific settings base class.
type HyperVReplicaBaseReplicationDetailsResponse struct {
	// Initial replication details.
	InitialReplicationDetails *InitialReplicationDetailsResponse `pulumi:"initialReplicationDetails"`
	// Gets the Instance type.
	// Expected value is 'HyperVReplicaBaseReplicationDetails'.
	InstanceType string `pulumi:"instanceType"`
	// The Last replication time.
	LastReplicatedTime *string `pulumi:"lastReplicatedTime"`
	// VM disk details.
	VMDiskDetails []DiskDetailsResponse `pulumi:"vMDiskDetails"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// Hyper V replica provider specific settings base class.
type HyperVReplicaBaseReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBaseReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaBaseReplicationDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaBaseReplicationDetailsResponseOutput) ToHyperVReplicaBaseReplicationDetailsResponseOutput() HyperVReplicaBaseReplicationDetailsResponseOutput {
	return o
}

func (o HyperVReplicaBaseReplicationDetailsResponseOutput) ToHyperVReplicaBaseReplicationDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaBaseReplicationDetailsResponseOutput {
	return o
}

// Initial replication details.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) InitialReplicationDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		return v.InitialReplicationDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// Gets the Instance type.
// Expected value is 'HyperVReplicaBaseReplicationDetails'.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Last replication time.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) LastReplicatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) *string { return v.LastReplicatedTime }).(pulumi.StringPtrOutput)
}

// VM disk details.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) VMDiskDetails() DiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) []DiskDetailsResponse { return v.VMDiskDetails }).(DiskDetailsResponseArrayOutput)
}

// The virtual machine Id.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o HyperVReplicaBaseReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBaseReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

type HyperVReplicaBaseReplicationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBaseReplicationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVReplicaBaseReplicationDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaBaseReplicationDetailsResponsePtrOutput) ToHyperVReplicaBaseReplicationDetailsResponsePtrOutput() HyperVReplicaBaseReplicationDetailsResponsePtrOutput {
	return o
}

func (o HyperVReplicaBaseReplicationDetailsResponsePtrOutput) ToHyperVReplicaBaseReplicationDetailsResponsePtrOutputWithContext(ctx context.Context) HyperVReplicaBaseReplicationDetailsResponsePtrOutput {
	return o
}

func (o HyperVReplicaBaseReplicationDetailsResponsePtrOutput) Elem() HyperVReplicaBaseReplicationDetailsResponseOutput {
	return o.ApplyT(func(v *HyperVReplicaBaseReplicationDetailsResponse) HyperVReplicaBaseReplicationDetailsResponse {
		if v != nil {
			return *v
		}
		var ret HyperVReplicaBaseReplicationDetailsResponse
		return ret
	}).(HyperVReplicaBaseReplicationDetailsResponseOutput)
}

// Initial replication details.
func (o HyperVReplicaBaseReplicationDetailsResponsePtrOutput) InitialReplicationDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBaseReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		if v == nil {
			return nil
		}
		return v.InitialReplicationDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// Gets the Instance type.
// Expected value is 'HyperVReplicaBaseReplicationDetails'.
func (o HyperVReplicaBaseReplicationDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBaseReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The Last replication time.
func (o HyperVReplicaBaseReplicationDetailsResponsePtrOutput) LastReplicatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBaseReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastReplicatedTime
	}).(pulumi.StringPtrOutput)
}

// VM disk details.
func (o HyperVReplicaBaseReplicationDetailsResponsePtrOutput) VMDiskDetails() DiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *HyperVReplicaBaseReplicationDetailsResponse) []DiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.VMDiskDetails
	}).(DiskDetailsResponseArrayOutput)
}

// The virtual machine Id.
func (o HyperVReplicaBaseReplicationDetailsResponsePtrOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBaseReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmId
	}).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o HyperVReplicaBaseReplicationDetailsResponsePtrOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v *HyperVReplicaBaseReplicationDetailsResponse) []VMNicDetailsResponse {
		if v == nil {
			return nil
		}
		return v.VmNics
	}).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o HyperVReplicaBaseReplicationDetailsResponsePtrOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBaseReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmProtectionState
	}).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o HyperVReplicaBaseReplicationDetailsResponsePtrOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBaseReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmProtectionStateDescription
	}).(pulumi.StringPtrOutput)
}

// Hyper-V Replica Blue specific protection profile details.
type HyperVReplicaBluePolicyDetailsResponse struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'HyperVReplica2012R2'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
	ReplicaDeletionOption *string `pulumi:"replicaDeletionOption"`
	// A value indicating the replication interval.
	ReplicationFrequencyInSeconds *int `pulumi:"replicationFrequencyInSeconds"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// Hyper-V Replica Blue specific protection profile details.
type HyperVReplicaBluePolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBluePolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaBluePolicyDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaBluePolicyDetailsResponseOutput) ToHyperVReplicaBluePolicyDetailsResponseOutput() HyperVReplicaBluePolicyDetailsResponseOutput {
	return o
}

func (o HyperVReplicaBluePolicyDetailsResponseOutput) ToHyperVReplicaBluePolicyDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaBluePolicyDetailsResponseOutput {
	return o
}

// A value indicating the authentication type.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) AllowedAuthenticationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *int { return v.AllowedAuthenticationType }).(pulumi.IntPtrOutput)
}

// A value indicating the application consistent frequency.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *int {
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether compression has to be enabled.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.Compression }).(pulumi.StringPtrOutput)
}

// A value indicating whether IR is online.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) InitialReplicationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.InitialReplicationMethod }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'HyperVReplica2012R2'.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating the offline IR export path.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) OfflineReplicationExportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.OfflineReplicationExportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR import path.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) OfflineReplicationImportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.OfflineReplicationImportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the online IR start time.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.OnlineReplicationStartTime }).(pulumi.StringPtrOutput)
}

// A value indicating the number of recovery points.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) RecoveryPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *int { return v.RecoveryPoints }).(pulumi.IntPtrOutput)
}

// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
func (o HyperVReplicaBluePolicyDetailsResponseOutput) ReplicaDeletionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *string { return v.ReplicaDeletionOption }).(pulumi.StringPtrOutput)
}

// A value indicating the replication interval.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) ReplicationFrequencyInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *int { return v.ReplicationFrequencyInSeconds }).(pulumi.IntPtrOutput)
}

// A value indicating the recovery HTTPS port.
func (o HyperVReplicaBluePolicyDetailsResponseOutput) ReplicationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyDetailsResponse) *int { return v.ReplicationPort }).(pulumi.IntPtrOutput)
}

type HyperVReplicaBluePolicyDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBluePolicyDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVReplicaBluePolicyDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaBluePolicyDetailsResponsePtrOutput) ToHyperVReplicaBluePolicyDetailsResponsePtrOutput() HyperVReplicaBluePolicyDetailsResponsePtrOutput {
	return o
}

func (o HyperVReplicaBluePolicyDetailsResponsePtrOutput) ToHyperVReplicaBluePolicyDetailsResponsePtrOutputWithContext(ctx context.Context) HyperVReplicaBluePolicyDetailsResponsePtrOutput {
	return o
}

func (o HyperVReplicaBluePolicyDetailsResponsePtrOutput) Elem() HyperVReplicaBluePolicyDetailsResponseOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyDetailsResponse) HyperVReplicaBluePolicyDetailsResponse {
		if v != nil {
			return *v
		}
		var ret HyperVReplicaBluePolicyDetailsResponse
		return ret
	}).(HyperVReplicaBluePolicyDetailsResponseOutput)
}

// A value indicating the authentication type.
func (o HyperVReplicaBluePolicyDetailsResponsePtrOutput) AllowedAuthenticationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.AllowedAuthenticationType
	}).(pulumi.IntPtrOutput)
}

// A value indicating the application consistent frequency.
func (o HyperVReplicaBluePolicyDetailsResponsePtrOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether compression has to be enabled.
func (o HyperVReplicaBluePolicyDetailsResponsePtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether IR is online.
func (o HyperVReplicaBluePolicyDetailsResponsePtrOutput) InitialReplicationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InitialReplicationMethod
	}).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'HyperVReplica2012R2'.
func (o HyperVReplicaBluePolicyDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR export path.
func (o HyperVReplicaBluePolicyDetailsResponsePtrOutput) OfflineReplicationExportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OfflineReplicationExportPath
	}).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR import path.
func (o HyperVReplicaBluePolicyDetailsResponsePtrOutput) OfflineReplicationImportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OfflineReplicationImportPath
	}).(pulumi.StringPtrOutput)
}

// A value indicating the online IR start time.
func (o HyperVReplicaBluePolicyDetailsResponsePtrOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OnlineReplicationStartTime
	}).(pulumi.StringPtrOutput)
}

// A value indicating the number of recovery points.
func (o HyperVReplicaBluePolicyDetailsResponsePtrOutput) RecoveryPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPoints
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
func (o HyperVReplicaBluePolicyDetailsResponsePtrOutput) ReplicaDeletionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaDeletionOption
	}).(pulumi.StringPtrOutput)
}

// A value indicating the replication interval.
func (o HyperVReplicaBluePolicyDetailsResponsePtrOutput) ReplicationFrequencyInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ReplicationFrequencyInSeconds
	}).(pulumi.IntPtrOutput)
}

// A value indicating the recovery HTTPS port.
func (o HyperVReplicaBluePolicyDetailsResponsePtrOutput) ReplicationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ReplicationPort
	}).(pulumi.IntPtrOutput)
}

// HyperV Replica Blue policy input.
type HyperVReplicaBluePolicyInput struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// Expected value is 'HyperVReplica2012R2'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted.
	ReplicaDeletion *string `pulumi:"replicaDeletion"`
	// A value indicating the replication interval.
	ReplicationFrequencyInSeconds *int `pulumi:"replicationFrequencyInSeconds"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// HyperVReplicaBluePolicyInputInput is an input type that accepts HyperVReplicaBluePolicyInputArgs and HyperVReplicaBluePolicyInputOutput values.
// You can construct a concrete instance of `HyperVReplicaBluePolicyInputInput` via:
//
//	HyperVReplicaBluePolicyInputArgs{...}
type HyperVReplicaBluePolicyInputInput interface {
	pulumi.Input

	ToHyperVReplicaBluePolicyInputOutput() HyperVReplicaBluePolicyInputOutput
	ToHyperVReplicaBluePolicyInputOutputWithContext(context.Context) HyperVReplicaBluePolicyInputOutput
}

// HyperV Replica Blue policy input.
type HyperVReplicaBluePolicyInputArgs struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType pulumi.IntPtrInput `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours pulumi.IntPtrInput `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod pulumi.StringPtrInput `pulumi:"initialReplicationMethod"`
	// Expected value is 'HyperVReplica2012R2'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath pulumi.StringPtrInput `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath pulumi.StringPtrInput `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime pulumi.StringPtrInput `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints pulumi.IntPtrInput `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted.
	ReplicaDeletion pulumi.StringPtrInput `pulumi:"replicaDeletion"`
	// A value indicating the replication interval.
	ReplicationFrequencyInSeconds pulumi.IntPtrInput `pulumi:"replicationFrequencyInSeconds"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort pulumi.IntPtrInput `pulumi:"replicationPort"`
}

func (HyperVReplicaBluePolicyInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaBluePolicyInput)(nil)).Elem()
}

func (i HyperVReplicaBluePolicyInputArgs) ToHyperVReplicaBluePolicyInputOutput() HyperVReplicaBluePolicyInputOutput {
	return i.ToHyperVReplicaBluePolicyInputOutputWithContext(context.Background())
}

func (i HyperVReplicaBluePolicyInputArgs) ToHyperVReplicaBluePolicyInputOutputWithContext(ctx context.Context) HyperVReplicaBluePolicyInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaBluePolicyInputOutput)
}

func (i HyperVReplicaBluePolicyInputArgs) ToHyperVReplicaBluePolicyInputPtrOutput() HyperVReplicaBluePolicyInputPtrOutput {
	return i.ToHyperVReplicaBluePolicyInputPtrOutputWithContext(context.Background())
}

func (i HyperVReplicaBluePolicyInputArgs) ToHyperVReplicaBluePolicyInputPtrOutputWithContext(ctx context.Context) HyperVReplicaBluePolicyInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaBluePolicyInputOutput).ToHyperVReplicaBluePolicyInputPtrOutputWithContext(ctx)
}

// HyperVReplicaBluePolicyInputPtrInput is an input type that accepts HyperVReplicaBluePolicyInputArgs, HyperVReplicaBluePolicyInputPtr and HyperVReplicaBluePolicyInputPtrOutput values.
// You can construct a concrete instance of `HyperVReplicaBluePolicyInputPtrInput` via:
//
//	        HyperVReplicaBluePolicyInputArgs{...}
//
//	or:
//
//	        nil
type HyperVReplicaBluePolicyInputPtrInput interface {
	pulumi.Input

	ToHyperVReplicaBluePolicyInputPtrOutput() HyperVReplicaBluePolicyInputPtrOutput
	ToHyperVReplicaBluePolicyInputPtrOutputWithContext(context.Context) HyperVReplicaBluePolicyInputPtrOutput
}

type hyperVReplicaBluePolicyInputPtrType HyperVReplicaBluePolicyInputArgs

func HyperVReplicaBluePolicyInputPtr(v *HyperVReplicaBluePolicyInputArgs) HyperVReplicaBluePolicyInputPtrInput {
	return (*hyperVReplicaBluePolicyInputPtrType)(v)
}

func (*hyperVReplicaBluePolicyInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVReplicaBluePolicyInput)(nil)).Elem()
}

func (i *hyperVReplicaBluePolicyInputPtrType) ToHyperVReplicaBluePolicyInputPtrOutput() HyperVReplicaBluePolicyInputPtrOutput {
	return i.ToHyperVReplicaBluePolicyInputPtrOutputWithContext(context.Background())
}

func (i *hyperVReplicaBluePolicyInputPtrType) ToHyperVReplicaBluePolicyInputPtrOutputWithContext(ctx context.Context) HyperVReplicaBluePolicyInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaBluePolicyInputPtrOutput)
}

// HyperV Replica Blue policy input.
type HyperVReplicaBluePolicyInputOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBluePolicyInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaBluePolicyInput)(nil)).Elem()
}

func (o HyperVReplicaBluePolicyInputOutput) ToHyperVReplicaBluePolicyInputOutput() HyperVReplicaBluePolicyInputOutput {
	return o
}

func (o HyperVReplicaBluePolicyInputOutput) ToHyperVReplicaBluePolicyInputOutputWithContext(ctx context.Context) HyperVReplicaBluePolicyInputOutput {
	return o
}

func (o HyperVReplicaBluePolicyInputOutput) ToHyperVReplicaBluePolicyInputPtrOutput() HyperVReplicaBluePolicyInputPtrOutput {
	return o.ToHyperVReplicaBluePolicyInputPtrOutputWithContext(context.Background())
}

func (o HyperVReplicaBluePolicyInputOutput) ToHyperVReplicaBluePolicyInputPtrOutputWithContext(ctx context.Context) HyperVReplicaBluePolicyInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HyperVReplicaBluePolicyInput) *HyperVReplicaBluePolicyInput {
		return &v
	}).(HyperVReplicaBluePolicyInputPtrOutput)
}

// A value indicating the authentication type.
func (o HyperVReplicaBluePolicyInputOutput) AllowedAuthenticationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyInput) *int { return v.AllowedAuthenticationType }).(pulumi.IntPtrOutput)
}

// A value indicating the application consistent frequency.
func (o HyperVReplicaBluePolicyInputOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyInput) *int { return v.ApplicationConsistentSnapshotFrequencyInHours }).(pulumi.IntPtrOutput)
}

// A value indicating whether compression has to be enabled.
func (o HyperVReplicaBluePolicyInputOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyInput) *string { return v.Compression }).(pulumi.StringPtrOutput)
}

// A value indicating whether IR is online.
func (o HyperVReplicaBluePolicyInputOutput) InitialReplicationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyInput) *string { return v.InitialReplicationMethod }).(pulumi.StringPtrOutput)
}

// Expected value is 'HyperVReplica2012R2'.
func (o HyperVReplicaBluePolicyInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating the offline IR export path.
func (o HyperVReplicaBluePolicyInputOutput) OfflineReplicationExportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyInput) *string { return v.OfflineReplicationExportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR import path.
func (o HyperVReplicaBluePolicyInputOutput) OfflineReplicationImportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyInput) *string { return v.OfflineReplicationImportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the online IR start time.
func (o HyperVReplicaBluePolicyInputOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyInput) *string { return v.OnlineReplicationStartTime }).(pulumi.StringPtrOutput)
}

// A value indicating the number of recovery points.
func (o HyperVReplicaBluePolicyInputOutput) RecoveryPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyInput) *int { return v.RecoveryPoints }).(pulumi.IntPtrOutput)
}

// A value indicating whether the VM has to be auto deleted.
func (o HyperVReplicaBluePolicyInputOutput) ReplicaDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyInput) *string { return v.ReplicaDeletion }).(pulumi.StringPtrOutput)
}

// A value indicating the replication interval.
func (o HyperVReplicaBluePolicyInputOutput) ReplicationFrequencyInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyInput) *int { return v.ReplicationFrequencyInSeconds }).(pulumi.IntPtrOutput)
}

// A value indicating the recovery HTTPS port.
func (o HyperVReplicaBluePolicyInputOutput) ReplicationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBluePolicyInput) *int { return v.ReplicationPort }).(pulumi.IntPtrOutput)
}

type HyperVReplicaBluePolicyInputPtrOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBluePolicyInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVReplicaBluePolicyInput)(nil)).Elem()
}

func (o HyperVReplicaBluePolicyInputPtrOutput) ToHyperVReplicaBluePolicyInputPtrOutput() HyperVReplicaBluePolicyInputPtrOutput {
	return o
}

func (o HyperVReplicaBluePolicyInputPtrOutput) ToHyperVReplicaBluePolicyInputPtrOutputWithContext(ctx context.Context) HyperVReplicaBluePolicyInputPtrOutput {
	return o
}

func (o HyperVReplicaBluePolicyInputPtrOutput) Elem() HyperVReplicaBluePolicyInputOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyInput) HyperVReplicaBluePolicyInput {
		if v != nil {
			return *v
		}
		var ret HyperVReplicaBluePolicyInput
		return ret
	}).(HyperVReplicaBluePolicyInputOutput)
}

// A value indicating the authentication type.
func (o HyperVReplicaBluePolicyInputPtrOutput) AllowedAuthenticationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.AllowedAuthenticationType
	}).(pulumi.IntPtrOutput)
}

// A value indicating the application consistent frequency.
func (o HyperVReplicaBluePolicyInputPtrOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether compression has to be enabled.
func (o HyperVReplicaBluePolicyInputPtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyInput) *string {
		if v == nil {
			return nil
		}
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether IR is online.
func (o HyperVReplicaBluePolicyInputPtrOutput) InitialReplicationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyInput) *string {
		if v == nil {
			return nil
		}
		return v.InitialReplicationMethod
	}).(pulumi.StringPtrOutput)
}

// Expected value is 'HyperVReplica2012R2'.
func (o HyperVReplicaBluePolicyInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR export path.
func (o HyperVReplicaBluePolicyInputPtrOutput) OfflineReplicationExportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyInput) *string {
		if v == nil {
			return nil
		}
		return v.OfflineReplicationExportPath
	}).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR import path.
func (o HyperVReplicaBluePolicyInputPtrOutput) OfflineReplicationImportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyInput) *string {
		if v == nil {
			return nil
		}
		return v.OfflineReplicationImportPath
	}).(pulumi.StringPtrOutput)
}

// A value indicating the online IR start time.
func (o HyperVReplicaBluePolicyInputPtrOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyInput) *string {
		if v == nil {
			return nil
		}
		return v.OnlineReplicationStartTime
	}).(pulumi.StringPtrOutput)
}

// A value indicating the number of recovery points.
func (o HyperVReplicaBluePolicyInputPtrOutput) RecoveryPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPoints
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether the VM has to be auto deleted.
func (o HyperVReplicaBluePolicyInputPtrOutput) ReplicaDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyInput) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaDeletion
	}).(pulumi.StringPtrOutput)
}

// A value indicating the replication interval.
func (o HyperVReplicaBluePolicyInputPtrOutput) ReplicationFrequencyInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.ReplicationFrequencyInSeconds
	}).(pulumi.IntPtrOutput)
}

// A value indicating the recovery HTTPS port.
func (o HyperVReplicaBluePolicyInputPtrOutput) ReplicationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBluePolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.ReplicationPort
	}).(pulumi.IntPtrOutput)
}

// HyperV replica 2012 R2 (Blue) replication details.
type HyperVReplicaBlueReplicationDetailsResponse struct {
	// Initial replication details.
	InitialReplicationDetails *InitialReplicationDetailsResponse `pulumi:"initialReplicationDetails"`
	// Gets the Instance type.
	// Expected value is 'HyperVReplica2012R2'.
	InstanceType string `pulumi:"instanceType"`
	// The Last replication time.
	LastReplicatedTime *string `pulumi:"lastReplicatedTime"`
	// VM disk details.
	VMDiskDetails []DiskDetailsResponse `pulumi:"vMDiskDetails"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// HyperV replica 2012 R2 (Blue) replication details.
type HyperVReplicaBlueReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBlueReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaBlueReplicationDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaBlueReplicationDetailsResponseOutput) ToHyperVReplicaBlueReplicationDetailsResponseOutput() HyperVReplicaBlueReplicationDetailsResponseOutput {
	return o
}

func (o HyperVReplicaBlueReplicationDetailsResponseOutput) ToHyperVReplicaBlueReplicationDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaBlueReplicationDetailsResponseOutput {
	return o
}

// Initial replication details.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) InitialReplicationDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		return v.InitialReplicationDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// Gets the Instance type.
// Expected value is 'HyperVReplica2012R2'.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Last replication time.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) LastReplicatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) *string { return v.LastReplicatedTime }).(pulumi.StringPtrOutput)
}

// VM disk details.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) VMDiskDetails() DiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) []DiskDetailsResponse { return v.VMDiskDetails }).(DiskDetailsResponseArrayOutput)
}

// The virtual machine Id.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o HyperVReplicaBlueReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaBlueReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

type HyperVReplicaBlueReplicationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (HyperVReplicaBlueReplicationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVReplicaBlueReplicationDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaBlueReplicationDetailsResponsePtrOutput) ToHyperVReplicaBlueReplicationDetailsResponsePtrOutput() HyperVReplicaBlueReplicationDetailsResponsePtrOutput {
	return o
}

func (o HyperVReplicaBlueReplicationDetailsResponsePtrOutput) ToHyperVReplicaBlueReplicationDetailsResponsePtrOutputWithContext(ctx context.Context) HyperVReplicaBlueReplicationDetailsResponsePtrOutput {
	return o
}

func (o HyperVReplicaBlueReplicationDetailsResponsePtrOutput) Elem() HyperVReplicaBlueReplicationDetailsResponseOutput {
	return o.ApplyT(func(v *HyperVReplicaBlueReplicationDetailsResponse) HyperVReplicaBlueReplicationDetailsResponse {
		if v != nil {
			return *v
		}
		var ret HyperVReplicaBlueReplicationDetailsResponse
		return ret
	}).(HyperVReplicaBlueReplicationDetailsResponseOutput)
}

// Initial replication details.
func (o HyperVReplicaBlueReplicationDetailsResponsePtrOutput) InitialReplicationDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBlueReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		if v == nil {
			return nil
		}
		return v.InitialReplicationDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// Gets the Instance type.
// Expected value is 'HyperVReplica2012R2'.
func (o HyperVReplicaBlueReplicationDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBlueReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The Last replication time.
func (o HyperVReplicaBlueReplicationDetailsResponsePtrOutput) LastReplicatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBlueReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastReplicatedTime
	}).(pulumi.StringPtrOutput)
}

// VM disk details.
func (o HyperVReplicaBlueReplicationDetailsResponsePtrOutput) VMDiskDetails() DiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *HyperVReplicaBlueReplicationDetailsResponse) []DiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.VMDiskDetails
	}).(DiskDetailsResponseArrayOutput)
}

// The virtual machine Id.
func (o HyperVReplicaBlueReplicationDetailsResponsePtrOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBlueReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmId
	}).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o HyperVReplicaBlueReplicationDetailsResponsePtrOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v *HyperVReplicaBlueReplicationDetailsResponse) []VMNicDetailsResponse {
		if v == nil {
			return nil
		}
		return v.VmNics
	}).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o HyperVReplicaBlueReplicationDetailsResponsePtrOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBlueReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmProtectionState
	}).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o HyperVReplicaBlueReplicationDetailsResponsePtrOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaBlueReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmProtectionStateDescription
	}).(pulumi.StringPtrOutput)
}

// Hyper-V Replica Blue specific protection profile details.
type HyperVReplicaPolicyDetailsResponse struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'HyperVReplica2012'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
	ReplicaDeletionOption *string `pulumi:"replicaDeletionOption"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// Hyper-V Replica Blue specific protection profile details.
type HyperVReplicaPolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaPolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaPolicyDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaPolicyDetailsResponseOutput) ToHyperVReplicaPolicyDetailsResponseOutput() HyperVReplicaPolicyDetailsResponseOutput {
	return o
}

func (o HyperVReplicaPolicyDetailsResponseOutput) ToHyperVReplicaPolicyDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaPolicyDetailsResponseOutput {
	return o
}

// A value indicating the authentication type.
func (o HyperVReplicaPolicyDetailsResponseOutput) AllowedAuthenticationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *int { return v.AllowedAuthenticationType }).(pulumi.IntPtrOutput)
}

// A value indicating the application consistent frequency.
func (o HyperVReplicaPolicyDetailsResponseOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *int {
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether compression has to be enabled.
func (o HyperVReplicaPolicyDetailsResponseOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.Compression }).(pulumi.StringPtrOutput)
}

// A value indicating whether IR is online.
func (o HyperVReplicaPolicyDetailsResponseOutput) InitialReplicationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.InitialReplicationMethod }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'HyperVReplica2012'.
func (o HyperVReplicaPolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating the offline IR export path.
func (o HyperVReplicaPolicyDetailsResponseOutput) OfflineReplicationExportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.OfflineReplicationExportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR import path.
func (o HyperVReplicaPolicyDetailsResponseOutput) OfflineReplicationImportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.OfflineReplicationImportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the online IR start time.
func (o HyperVReplicaPolicyDetailsResponseOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.OnlineReplicationStartTime }).(pulumi.StringPtrOutput)
}

// A value indicating the number of recovery points.
func (o HyperVReplicaPolicyDetailsResponseOutput) RecoveryPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *int { return v.RecoveryPoints }).(pulumi.IntPtrOutput)
}

// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
func (o HyperVReplicaPolicyDetailsResponseOutput) ReplicaDeletionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *string { return v.ReplicaDeletionOption }).(pulumi.StringPtrOutput)
}

// A value indicating the recovery HTTPS port.
func (o HyperVReplicaPolicyDetailsResponseOutput) ReplicationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyDetailsResponse) *int { return v.ReplicationPort }).(pulumi.IntPtrOutput)
}

type HyperVReplicaPolicyDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (HyperVReplicaPolicyDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVReplicaPolicyDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaPolicyDetailsResponsePtrOutput) ToHyperVReplicaPolicyDetailsResponsePtrOutput() HyperVReplicaPolicyDetailsResponsePtrOutput {
	return o
}

func (o HyperVReplicaPolicyDetailsResponsePtrOutput) ToHyperVReplicaPolicyDetailsResponsePtrOutputWithContext(ctx context.Context) HyperVReplicaPolicyDetailsResponsePtrOutput {
	return o
}

func (o HyperVReplicaPolicyDetailsResponsePtrOutput) Elem() HyperVReplicaPolicyDetailsResponseOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyDetailsResponse) HyperVReplicaPolicyDetailsResponse {
		if v != nil {
			return *v
		}
		var ret HyperVReplicaPolicyDetailsResponse
		return ret
	}).(HyperVReplicaPolicyDetailsResponseOutput)
}

// A value indicating the authentication type.
func (o HyperVReplicaPolicyDetailsResponsePtrOutput) AllowedAuthenticationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.AllowedAuthenticationType
	}).(pulumi.IntPtrOutput)
}

// A value indicating the application consistent frequency.
func (o HyperVReplicaPolicyDetailsResponsePtrOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether compression has to be enabled.
func (o HyperVReplicaPolicyDetailsResponsePtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether IR is online.
func (o HyperVReplicaPolicyDetailsResponsePtrOutput) InitialReplicationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InitialReplicationMethod
	}).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'HyperVReplica2012'.
func (o HyperVReplicaPolicyDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR export path.
func (o HyperVReplicaPolicyDetailsResponsePtrOutput) OfflineReplicationExportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OfflineReplicationExportPath
	}).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR import path.
func (o HyperVReplicaPolicyDetailsResponsePtrOutput) OfflineReplicationImportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OfflineReplicationImportPath
	}).(pulumi.StringPtrOutput)
}

// A value indicating the online IR start time.
func (o HyperVReplicaPolicyDetailsResponsePtrOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OnlineReplicationStartTime
	}).(pulumi.StringPtrOutput)
}

// A value indicating the number of recovery points.
func (o HyperVReplicaPolicyDetailsResponsePtrOutput) RecoveryPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPoints
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud
func (o HyperVReplicaPolicyDetailsResponsePtrOutput) ReplicaDeletionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaDeletionOption
	}).(pulumi.StringPtrOutput)
}

// A value indicating the recovery HTTPS port.
func (o HyperVReplicaPolicyDetailsResponsePtrOutput) ReplicationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ReplicationPort
	}).(pulumi.IntPtrOutput)
}

// Hyper-V Replica specific policy Input.
type HyperVReplicaPolicyInput struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType *int `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours *int `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression *string `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod *string `pulumi:"initialReplicationMethod"`
	// The class type.
	// Expected value is 'HyperVReplica2012'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath *string `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath *string `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime *string `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints *int `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted.
	ReplicaDeletion *string `pulumi:"replicaDeletion"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort *int `pulumi:"replicationPort"`
}

// HyperVReplicaPolicyInputInput is an input type that accepts HyperVReplicaPolicyInputArgs and HyperVReplicaPolicyInputOutput values.
// You can construct a concrete instance of `HyperVReplicaPolicyInputInput` via:
//
//	HyperVReplicaPolicyInputArgs{...}
type HyperVReplicaPolicyInputInput interface {
	pulumi.Input

	ToHyperVReplicaPolicyInputOutput() HyperVReplicaPolicyInputOutput
	ToHyperVReplicaPolicyInputOutputWithContext(context.Context) HyperVReplicaPolicyInputOutput
}

// Hyper-V Replica specific policy Input.
type HyperVReplicaPolicyInputArgs struct {
	// A value indicating the authentication type.
	AllowedAuthenticationType pulumi.IntPtrInput `pulumi:"allowedAuthenticationType"`
	// A value indicating the application consistent frequency.
	ApplicationConsistentSnapshotFrequencyInHours pulumi.IntPtrInput `pulumi:"applicationConsistentSnapshotFrequencyInHours"`
	// A value indicating whether compression has to be enabled.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// A value indicating whether IR is online.
	InitialReplicationMethod pulumi.StringPtrInput `pulumi:"initialReplicationMethod"`
	// The class type.
	// Expected value is 'HyperVReplica2012'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// A value indicating the offline IR export path.
	OfflineReplicationExportPath pulumi.StringPtrInput `pulumi:"offlineReplicationExportPath"`
	// A value indicating the offline IR import path.
	OfflineReplicationImportPath pulumi.StringPtrInput `pulumi:"offlineReplicationImportPath"`
	// A value indicating the online IR start time.
	OnlineReplicationStartTime pulumi.StringPtrInput `pulumi:"onlineReplicationStartTime"`
	// A value indicating the number of recovery points.
	RecoveryPoints pulumi.IntPtrInput `pulumi:"recoveryPoints"`
	// A value indicating whether the VM has to be auto deleted.
	ReplicaDeletion pulumi.StringPtrInput `pulumi:"replicaDeletion"`
	// A value indicating the recovery HTTPS port.
	ReplicationPort pulumi.IntPtrInput `pulumi:"replicationPort"`
}

func (HyperVReplicaPolicyInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaPolicyInput)(nil)).Elem()
}

func (i HyperVReplicaPolicyInputArgs) ToHyperVReplicaPolicyInputOutput() HyperVReplicaPolicyInputOutput {
	return i.ToHyperVReplicaPolicyInputOutputWithContext(context.Background())
}

func (i HyperVReplicaPolicyInputArgs) ToHyperVReplicaPolicyInputOutputWithContext(ctx context.Context) HyperVReplicaPolicyInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaPolicyInputOutput)
}

func (i HyperVReplicaPolicyInputArgs) ToHyperVReplicaPolicyInputPtrOutput() HyperVReplicaPolicyInputPtrOutput {
	return i.ToHyperVReplicaPolicyInputPtrOutputWithContext(context.Background())
}

func (i HyperVReplicaPolicyInputArgs) ToHyperVReplicaPolicyInputPtrOutputWithContext(ctx context.Context) HyperVReplicaPolicyInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaPolicyInputOutput).ToHyperVReplicaPolicyInputPtrOutputWithContext(ctx)
}

// HyperVReplicaPolicyInputPtrInput is an input type that accepts HyperVReplicaPolicyInputArgs, HyperVReplicaPolicyInputPtr and HyperVReplicaPolicyInputPtrOutput values.
// You can construct a concrete instance of `HyperVReplicaPolicyInputPtrInput` via:
//
//	        HyperVReplicaPolicyInputArgs{...}
//
//	or:
//
//	        nil
type HyperVReplicaPolicyInputPtrInput interface {
	pulumi.Input

	ToHyperVReplicaPolicyInputPtrOutput() HyperVReplicaPolicyInputPtrOutput
	ToHyperVReplicaPolicyInputPtrOutputWithContext(context.Context) HyperVReplicaPolicyInputPtrOutput
}

type hyperVReplicaPolicyInputPtrType HyperVReplicaPolicyInputArgs

func HyperVReplicaPolicyInputPtr(v *HyperVReplicaPolicyInputArgs) HyperVReplicaPolicyInputPtrInput {
	return (*hyperVReplicaPolicyInputPtrType)(v)
}

func (*hyperVReplicaPolicyInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVReplicaPolicyInput)(nil)).Elem()
}

func (i *hyperVReplicaPolicyInputPtrType) ToHyperVReplicaPolicyInputPtrOutput() HyperVReplicaPolicyInputPtrOutput {
	return i.ToHyperVReplicaPolicyInputPtrOutputWithContext(context.Background())
}

func (i *hyperVReplicaPolicyInputPtrType) ToHyperVReplicaPolicyInputPtrOutputWithContext(ctx context.Context) HyperVReplicaPolicyInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HyperVReplicaPolicyInputPtrOutput)
}

// Hyper-V Replica specific policy Input.
type HyperVReplicaPolicyInputOutput struct{ *pulumi.OutputState }

func (HyperVReplicaPolicyInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaPolicyInput)(nil)).Elem()
}

func (o HyperVReplicaPolicyInputOutput) ToHyperVReplicaPolicyInputOutput() HyperVReplicaPolicyInputOutput {
	return o
}

func (o HyperVReplicaPolicyInputOutput) ToHyperVReplicaPolicyInputOutputWithContext(ctx context.Context) HyperVReplicaPolicyInputOutput {
	return o
}

func (o HyperVReplicaPolicyInputOutput) ToHyperVReplicaPolicyInputPtrOutput() HyperVReplicaPolicyInputPtrOutput {
	return o.ToHyperVReplicaPolicyInputPtrOutputWithContext(context.Background())
}

func (o HyperVReplicaPolicyInputOutput) ToHyperVReplicaPolicyInputPtrOutputWithContext(ctx context.Context) HyperVReplicaPolicyInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HyperVReplicaPolicyInput) *HyperVReplicaPolicyInput {
		return &v
	}).(HyperVReplicaPolicyInputPtrOutput)
}

// A value indicating the authentication type.
func (o HyperVReplicaPolicyInputOutput) AllowedAuthenticationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyInput) *int { return v.AllowedAuthenticationType }).(pulumi.IntPtrOutput)
}

// A value indicating the application consistent frequency.
func (o HyperVReplicaPolicyInputOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyInput) *int { return v.ApplicationConsistentSnapshotFrequencyInHours }).(pulumi.IntPtrOutput)
}

// A value indicating whether compression has to be enabled.
func (o HyperVReplicaPolicyInputOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyInput) *string { return v.Compression }).(pulumi.StringPtrOutput)
}

// A value indicating whether IR is online.
func (o HyperVReplicaPolicyInputOutput) InitialReplicationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyInput) *string { return v.InitialReplicationMethod }).(pulumi.StringPtrOutput)
}

// The class type.
// Expected value is 'HyperVReplica2012'.
func (o HyperVReplicaPolicyInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating the offline IR export path.
func (o HyperVReplicaPolicyInputOutput) OfflineReplicationExportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyInput) *string { return v.OfflineReplicationExportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR import path.
func (o HyperVReplicaPolicyInputOutput) OfflineReplicationImportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyInput) *string { return v.OfflineReplicationImportPath }).(pulumi.StringPtrOutput)
}

// A value indicating the online IR start time.
func (o HyperVReplicaPolicyInputOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyInput) *string { return v.OnlineReplicationStartTime }).(pulumi.StringPtrOutput)
}

// A value indicating the number of recovery points.
func (o HyperVReplicaPolicyInputOutput) RecoveryPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyInput) *int { return v.RecoveryPoints }).(pulumi.IntPtrOutput)
}

// A value indicating whether the VM has to be auto deleted.
func (o HyperVReplicaPolicyInputOutput) ReplicaDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyInput) *string { return v.ReplicaDeletion }).(pulumi.StringPtrOutput)
}

// A value indicating the recovery HTTPS port.
func (o HyperVReplicaPolicyInputOutput) ReplicationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HyperVReplicaPolicyInput) *int { return v.ReplicationPort }).(pulumi.IntPtrOutput)
}

type HyperVReplicaPolicyInputPtrOutput struct{ *pulumi.OutputState }

func (HyperVReplicaPolicyInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVReplicaPolicyInput)(nil)).Elem()
}

func (o HyperVReplicaPolicyInputPtrOutput) ToHyperVReplicaPolicyInputPtrOutput() HyperVReplicaPolicyInputPtrOutput {
	return o
}

func (o HyperVReplicaPolicyInputPtrOutput) ToHyperVReplicaPolicyInputPtrOutputWithContext(ctx context.Context) HyperVReplicaPolicyInputPtrOutput {
	return o
}

func (o HyperVReplicaPolicyInputPtrOutput) Elem() HyperVReplicaPolicyInputOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyInput) HyperVReplicaPolicyInput {
		if v != nil {
			return *v
		}
		var ret HyperVReplicaPolicyInput
		return ret
	}).(HyperVReplicaPolicyInputOutput)
}

// A value indicating the authentication type.
func (o HyperVReplicaPolicyInputPtrOutput) AllowedAuthenticationType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.AllowedAuthenticationType
	}).(pulumi.IntPtrOutput)
}

// A value indicating the application consistent frequency.
func (o HyperVReplicaPolicyInputPtrOutput) ApplicationConsistentSnapshotFrequencyInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.ApplicationConsistentSnapshotFrequencyInHours
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether compression has to be enabled.
func (o HyperVReplicaPolicyInputPtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyInput) *string {
		if v == nil {
			return nil
		}
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether IR is online.
func (o HyperVReplicaPolicyInputPtrOutput) InitialReplicationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyInput) *string {
		if v == nil {
			return nil
		}
		return v.InitialReplicationMethod
	}).(pulumi.StringPtrOutput)
}

// The class type.
// Expected value is 'HyperVReplica2012'.
func (o HyperVReplicaPolicyInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR export path.
func (o HyperVReplicaPolicyInputPtrOutput) OfflineReplicationExportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyInput) *string {
		if v == nil {
			return nil
		}
		return v.OfflineReplicationExportPath
	}).(pulumi.StringPtrOutput)
}

// A value indicating the offline IR import path.
func (o HyperVReplicaPolicyInputPtrOutput) OfflineReplicationImportPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyInput) *string {
		if v == nil {
			return nil
		}
		return v.OfflineReplicationImportPath
	}).(pulumi.StringPtrOutput)
}

// A value indicating the online IR start time.
func (o HyperVReplicaPolicyInputPtrOutput) OnlineReplicationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyInput) *string {
		if v == nil {
			return nil
		}
		return v.OnlineReplicationStartTime
	}).(pulumi.StringPtrOutput)
}

// A value indicating the number of recovery points.
func (o HyperVReplicaPolicyInputPtrOutput) RecoveryPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPoints
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether the VM has to be auto deleted.
func (o HyperVReplicaPolicyInputPtrOutput) ReplicaDeletion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyInput) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaDeletion
	}).(pulumi.StringPtrOutput)
}

// A value indicating the recovery HTTPS port.
func (o HyperVReplicaPolicyInputPtrOutput) ReplicationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaPolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.ReplicationPort
	}).(pulumi.IntPtrOutput)
}

// HyperV replica 2012 replication details.
type HyperVReplicaReplicationDetailsResponse struct {
	// Initial replication details.
	InitialReplicationDetails *InitialReplicationDetailsResponse `pulumi:"initialReplicationDetails"`
	// Gets the Instance type.
	// Expected value is 'HyperVReplica2012'.
	InstanceType string `pulumi:"instanceType"`
	// The Last replication time.
	LastReplicatedTime *string `pulumi:"lastReplicatedTime"`
	// VM disk details.
	VMDiskDetails []DiskDetailsResponse `pulumi:"vMDiskDetails"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// HyperV replica 2012 replication details.
type HyperVReplicaReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVReplicaReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVReplicaReplicationDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaReplicationDetailsResponseOutput) ToHyperVReplicaReplicationDetailsResponseOutput() HyperVReplicaReplicationDetailsResponseOutput {
	return o
}

func (o HyperVReplicaReplicationDetailsResponseOutput) ToHyperVReplicaReplicationDetailsResponseOutputWithContext(ctx context.Context) HyperVReplicaReplicationDetailsResponseOutput {
	return o
}

// Initial replication details.
func (o HyperVReplicaReplicationDetailsResponseOutput) InitialReplicationDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		return v.InitialReplicationDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// Gets the Instance type.
// Expected value is 'HyperVReplica2012'.
func (o HyperVReplicaReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Last replication time.
func (o HyperVReplicaReplicationDetailsResponseOutput) LastReplicatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) *string { return v.LastReplicatedTime }).(pulumi.StringPtrOutput)
}

// VM disk details.
func (o HyperVReplicaReplicationDetailsResponseOutput) VMDiskDetails() DiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) []DiskDetailsResponse { return v.VMDiskDetails }).(DiskDetailsResponseArrayOutput)
}

// The virtual machine Id.
func (o HyperVReplicaReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o HyperVReplicaReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o HyperVReplicaReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o HyperVReplicaReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HyperVReplicaReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

type HyperVReplicaReplicationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (HyperVReplicaReplicationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVReplicaReplicationDetailsResponse)(nil)).Elem()
}

func (o HyperVReplicaReplicationDetailsResponsePtrOutput) ToHyperVReplicaReplicationDetailsResponsePtrOutput() HyperVReplicaReplicationDetailsResponsePtrOutput {
	return o
}

func (o HyperVReplicaReplicationDetailsResponsePtrOutput) ToHyperVReplicaReplicationDetailsResponsePtrOutputWithContext(ctx context.Context) HyperVReplicaReplicationDetailsResponsePtrOutput {
	return o
}

func (o HyperVReplicaReplicationDetailsResponsePtrOutput) Elem() HyperVReplicaReplicationDetailsResponseOutput {
	return o.ApplyT(func(v *HyperVReplicaReplicationDetailsResponse) HyperVReplicaReplicationDetailsResponse {
		if v != nil {
			return *v
		}
		var ret HyperVReplicaReplicationDetailsResponse
		return ret
	}).(HyperVReplicaReplicationDetailsResponseOutput)
}

// Initial replication details.
func (o HyperVReplicaReplicationDetailsResponsePtrOutput) InitialReplicationDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v *HyperVReplicaReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		if v == nil {
			return nil
		}
		return v.InitialReplicationDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// Gets the Instance type.
// Expected value is 'HyperVReplica2012'.
func (o HyperVReplicaReplicationDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The Last replication time.
func (o HyperVReplicaReplicationDetailsResponsePtrOutput) LastReplicatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastReplicatedTime
	}).(pulumi.StringPtrOutput)
}

// VM disk details.
func (o HyperVReplicaReplicationDetailsResponsePtrOutput) VMDiskDetails() DiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *HyperVReplicaReplicationDetailsResponse) []DiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.VMDiskDetails
	}).(DiskDetailsResponseArrayOutput)
}

// The virtual machine Id.
func (o HyperVReplicaReplicationDetailsResponsePtrOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmId
	}).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o HyperVReplicaReplicationDetailsResponsePtrOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v *HyperVReplicaReplicationDetailsResponse) []VMNicDetailsResponse {
		if v == nil {
			return nil
		}
		return v.VmNics
	}).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o HyperVReplicaReplicationDetailsResponsePtrOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmProtectionState
	}).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o HyperVReplicaReplicationDetailsResponsePtrOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVReplicaReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmProtectionStateDescription
	}).(pulumi.StringPtrOutput)
}

// HyperVSite fabric specific details.
type HyperVSiteDetailsResponse struct {
	// The list of Hyper-V hosts associated with the fabric.
	HyperVHosts []HyperVHostDetailsResponse `pulumi:"hyperVHosts"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'HyperVSite'.
	InstanceType string `pulumi:"instanceType"`
}

// HyperVSite fabric specific details.
type HyperVSiteDetailsResponseOutput struct{ *pulumi.OutputState }

func (HyperVSiteDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVSiteDetailsResponse)(nil)).Elem()
}

func (o HyperVSiteDetailsResponseOutput) ToHyperVSiteDetailsResponseOutput() HyperVSiteDetailsResponseOutput {
	return o
}

func (o HyperVSiteDetailsResponseOutput) ToHyperVSiteDetailsResponseOutputWithContext(ctx context.Context) HyperVSiteDetailsResponseOutput {
	return o
}

// The list of Hyper-V hosts associated with the fabric.
func (o HyperVSiteDetailsResponseOutput) HyperVHosts() HyperVHostDetailsResponseArrayOutput {
	return o.ApplyT(func(v HyperVSiteDetailsResponse) []HyperVHostDetailsResponse { return v.HyperVHosts }).(HyperVHostDetailsResponseArrayOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'HyperVSite'.
func (o HyperVSiteDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HyperVSiteDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

type HyperVSiteDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (HyperVSiteDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVSiteDetailsResponse)(nil)).Elem()
}

func (o HyperVSiteDetailsResponsePtrOutput) ToHyperVSiteDetailsResponsePtrOutput() HyperVSiteDetailsResponsePtrOutput {
	return o
}

func (o HyperVSiteDetailsResponsePtrOutput) ToHyperVSiteDetailsResponsePtrOutputWithContext(ctx context.Context) HyperVSiteDetailsResponsePtrOutput {
	return o
}

func (o HyperVSiteDetailsResponsePtrOutput) Elem() HyperVSiteDetailsResponseOutput {
	return o.ApplyT(func(v *HyperVSiteDetailsResponse) HyperVSiteDetailsResponse {
		if v != nil {
			return *v
		}
		var ret HyperVSiteDetailsResponse
		return ret
	}).(HyperVSiteDetailsResponseOutput)
}

// The list of Hyper-V hosts associated with the fabric.
func (o HyperVSiteDetailsResponsePtrOutput) HyperVHosts() HyperVHostDetailsResponseArrayOutput {
	return o.ApplyT(func(v *HyperVSiteDetailsResponse) []HyperVHostDetailsResponse {
		if v == nil {
			return nil
		}
		return v.HyperVHosts
	}).(HyperVHostDetailsResponseArrayOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'HyperVSite'.
func (o HyperVSiteDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HyperVSiteDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

type IPConfigDetailsResponse struct {
	IpAddressType                   *string  `pulumi:"ipAddressType"`
	IsPrimary                       *bool    `pulumi:"isPrimary"`
	IsSeletedForFailover            *bool    `pulumi:"isSeletedForFailover"`
	Name                            *string  `pulumi:"name"`
	RecoveryIPAddressType           *string  `pulumi:"recoveryIPAddressType"`
	RecoveryLBBackendAddressPoolIds []string `pulumi:"recoveryLBBackendAddressPoolIds"`
	RecoveryPublicIPAddressId       *string  `pulumi:"recoveryPublicIPAddressId"`
	RecoveryStaticIPAddress         *string  `pulumi:"recoveryStaticIPAddress"`
	RecoverySubnetName              *string  `pulumi:"recoverySubnetName"`
	StaticIPAddress                 *string  `pulumi:"staticIPAddress"`
	SubnetName                      *string  `pulumi:"subnetName"`
	TfoLBBackendAddressPoolIds      []string `pulumi:"tfoLBBackendAddressPoolIds"`
	TfoPublicIPAddressId            *string  `pulumi:"tfoPublicIPAddressId"`
	TfoStaticIPAddress              *string  `pulumi:"tfoStaticIPAddress"`
	TfoSubnetName                   *string  `pulumi:"tfoSubnetName"`
}

type IPConfigDetailsResponseOutput struct{ *pulumi.OutputState }

func (IPConfigDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigDetailsResponse)(nil)).Elem()
}

func (o IPConfigDetailsResponseOutput) ToIPConfigDetailsResponseOutput() IPConfigDetailsResponseOutput {
	return o
}

func (o IPConfigDetailsResponseOutput) ToIPConfigDetailsResponseOutputWithContext(ctx context.Context) IPConfigDetailsResponseOutput {
	return o
}

func (o IPConfigDetailsResponseOutput) IpAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigDetailsResponse) *string { return v.IpAddressType }).(pulumi.StringPtrOutput)
}

func (o IPConfigDetailsResponseOutput) IsPrimary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IPConfigDetailsResponse) *bool { return v.IsPrimary }).(pulumi.BoolPtrOutput)
}

func (o IPConfigDetailsResponseOutput) IsSeletedForFailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IPConfigDetailsResponse) *bool { return v.IsSeletedForFailover }).(pulumi.BoolPtrOutput)
}

func (o IPConfigDetailsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigDetailsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o IPConfigDetailsResponseOutput) RecoveryIPAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigDetailsResponse) *string { return v.RecoveryIPAddressType }).(pulumi.StringPtrOutput)
}

func (o IPConfigDetailsResponseOutput) RecoveryLBBackendAddressPoolIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IPConfigDetailsResponse) []string { return v.RecoveryLBBackendAddressPoolIds }).(pulumi.StringArrayOutput)
}

func (o IPConfigDetailsResponseOutput) RecoveryPublicIPAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigDetailsResponse) *string { return v.RecoveryPublicIPAddressId }).(pulumi.StringPtrOutput)
}

func (o IPConfigDetailsResponseOutput) RecoveryStaticIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigDetailsResponse) *string { return v.RecoveryStaticIPAddress }).(pulumi.StringPtrOutput)
}

func (o IPConfigDetailsResponseOutput) RecoverySubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigDetailsResponse) *string { return v.RecoverySubnetName }).(pulumi.StringPtrOutput)
}

func (o IPConfigDetailsResponseOutput) StaticIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigDetailsResponse) *string { return v.StaticIPAddress }).(pulumi.StringPtrOutput)
}

func (o IPConfigDetailsResponseOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigDetailsResponse) *string { return v.SubnetName }).(pulumi.StringPtrOutput)
}

func (o IPConfigDetailsResponseOutput) TfoLBBackendAddressPoolIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IPConfigDetailsResponse) []string { return v.TfoLBBackendAddressPoolIds }).(pulumi.StringArrayOutput)
}

func (o IPConfigDetailsResponseOutput) TfoPublicIPAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigDetailsResponse) *string { return v.TfoPublicIPAddressId }).(pulumi.StringPtrOutput)
}

func (o IPConfigDetailsResponseOutput) TfoStaticIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigDetailsResponse) *string { return v.TfoStaticIPAddress }).(pulumi.StringPtrOutput)
}

func (o IPConfigDetailsResponseOutput) TfoSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigDetailsResponse) *string { return v.TfoSubnetName }).(pulumi.StringPtrOutput)
}

type IPConfigDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigDetailsResponse)(nil)).Elem()
}

func (o IPConfigDetailsResponseArrayOutput) ToIPConfigDetailsResponseArrayOutput() IPConfigDetailsResponseArrayOutput {
	return o
}

func (o IPConfigDetailsResponseArrayOutput) ToIPConfigDetailsResponseArrayOutputWithContext(ctx context.Context) IPConfigDetailsResponseArrayOutput {
	return o
}

func (o IPConfigDetailsResponseArrayOutput) Index(i pulumi.IntInput) IPConfigDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigDetailsResponse {
		return vs[0].([]IPConfigDetailsResponse)[vs[1].(int)]
	}).(IPConfigDetailsResponseOutput)
}

// IaaS VM workload-specific container.
type IaaSVMContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'IaasVMContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// IaaSVMContainerInput is an input type that accepts IaaSVMContainerArgs and IaaSVMContainerOutput values.
// You can construct a concrete instance of `IaaSVMContainerInput` via:
//
//	IaaSVMContainerArgs{...}
type IaaSVMContainerInput interface {
	pulumi.Input

	ToIaaSVMContainerOutput() IaaSVMContainerOutput
	ToIaaSVMContainerOutputWithContext(context.Context) IaaSVMContainerOutput
}

// IaaS VM workload-specific container.
type IaaSVMContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'IaasVMContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId pulumi.StringPtrInput `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion pulumi.StringPtrInput `pulumi:"virtualMachineVersion"`
}

func (IaaSVMContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IaaSVMContainer)(nil)).Elem()
}

func (i IaaSVMContainerArgs) ToIaaSVMContainerOutput() IaaSVMContainerOutput {
	return i.ToIaaSVMContainerOutputWithContext(context.Background())
}

func (i IaaSVMContainerArgs) ToIaaSVMContainerOutputWithContext(ctx context.Context) IaaSVMContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IaaSVMContainerOutput)
}

func (i IaaSVMContainerArgs) ToIaaSVMContainerPtrOutput() IaaSVMContainerPtrOutput {
	return i.ToIaaSVMContainerPtrOutputWithContext(context.Background())
}

func (i IaaSVMContainerArgs) ToIaaSVMContainerPtrOutputWithContext(ctx context.Context) IaaSVMContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IaaSVMContainerOutput).ToIaaSVMContainerPtrOutputWithContext(ctx)
}

// IaaSVMContainerPtrInput is an input type that accepts IaaSVMContainerArgs, IaaSVMContainerPtr and IaaSVMContainerPtrOutput values.
// You can construct a concrete instance of `IaaSVMContainerPtrInput` via:
//
//	        IaaSVMContainerArgs{...}
//
//	or:
//
//	        nil
type IaaSVMContainerPtrInput interface {
	pulumi.Input

	ToIaaSVMContainerPtrOutput() IaaSVMContainerPtrOutput
	ToIaaSVMContainerPtrOutputWithContext(context.Context) IaaSVMContainerPtrOutput
}

type iaaSVMContainerPtrType IaaSVMContainerArgs

func IaaSVMContainerPtr(v *IaaSVMContainerArgs) IaaSVMContainerPtrInput {
	return (*iaaSVMContainerPtrType)(v)
}

func (*iaaSVMContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IaaSVMContainer)(nil)).Elem()
}

func (i *iaaSVMContainerPtrType) ToIaaSVMContainerPtrOutput() IaaSVMContainerPtrOutput {
	return i.ToIaaSVMContainerPtrOutputWithContext(context.Background())
}

func (i *iaaSVMContainerPtrType) ToIaaSVMContainerPtrOutputWithContext(ctx context.Context) IaaSVMContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IaaSVMContainerPtrOutput)
}

// IaaS VM workload-specific container.
type IaaSVMContainerOutput struct{ *pulumi.OutputState }

func (IaaSVMContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IaaSVMContainer)(nil)).Elem()
}

func (o IaaSVMContainerOutput) ToIaaSVMContainerOutput() IaaSVMContainerOutput {
	return o
}

func (o IaaSVMContainerOutput) ToIaaSVMContainerOutputWithContext(ctx context.Context) IaaSVMContainerOutput {
	return o
}

func (o IaaSVMContainerOutput) ToIaaSVMContainerPtrOutput() IaaSVMContainerPtrOutput {
	return o.ToIaaSVMContainerPtrOutputWithContext(context.Background())
}

func (o IaaSVMContainerOutput) ToIaaSVMContainerPtrOutputWithContext(ctx context.Context) IaaSVMContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IaaSVMContainer) *IaaSVMContainer {
		return &v
	}).(IaaSVMContainerPtrOutput)
}

// Type of backup management for the container.
func (o IaaSVMContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'IaasVMContainer'.
func (o IaaSVMContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v IaaSVMContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o IaaSVMContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o IaaSVMContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o IaaSVMContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o IaaSVMContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o IaaSVMContainerOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainer) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o IaaSVMContainerOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainer) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o IaaSVMContainerOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainer) *string { return v.VirtualMachineVersion }).(pulumi.StringPtrOutput)
}

type IaaSVMContainerPtrOutput struct{ *pulumi.OutputState }

func (IaaSVMContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IaaSVMContainer)(nil)).Elem()
}

func (o IaaSVMContainerPtrOutput) ToIaaSVMContainerPtrOutput() IaaSVMContainerPtrOutput {
	return o
}

func (o IaaSVMContainerPtrOutput) ToIaaSVMContainerPtrOutputWithContext(ctx context.Context) IaaSVMContainerPtrOutput {
	return o
}

func (o IaaSVMContainerPtrOutput) Elem() IaaSVMContainerOutput {
	return o.ApplyT(func(v *IaaSVMContainer) IaaSVMContainer {
		if v != nil {
			return *v
		}
		var ret IaaSVMContainer
		return ret
	}).(IaaSVMContainerOutput)
}

// Type of backup management for the container.
func (o IaaSVMContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'IaasVMContainer'.
func (o IaaSVMContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o IaaSVMContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o IaaSVMContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o IaaSVMContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o IaaSVMContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o IaaSVMContainerPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o IaaSVMContainerPtrOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineId
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o IaaSVMContainerPtrOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineVersion
	}).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific container.
type IaaSVMContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'IaasVMContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// IaaS VM workload-specific container.
type IaaSVMContainerResponseOutput struct{ *pulumi.OutputState }

func (IaaSVMContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IaaSVMContainerResponse)(nil)).Elem()
}

func (o IaaSVMContainerResponseOutput) ToIaaSVMContainerResponseOutput() IaaSVMContainerResponseOutput {
	return o
}

func (o IaaSVMContainerResponseOutput) ToIaaSVMContainerResponseOutputWithContext(ctx context.Context) IaaSVMContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o IaaSVMContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'IaasVMContainer'.
func (o IaaSVMContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o IaaSVMContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o IaaSVMContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o IaaSVMContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o IaaSVMContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o IaaSVMContainerResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o IaaSVMContainerResponseOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o IaaSVMContainerResponseOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.VirtualMachineVersion }).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type IdentityData struct {
	// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
	Type string `pulumi:"type"`
	// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// IdentityDataInput is an input type that accepts IdentityDataArgs and IdentityDataOutput values.
// You can construct a concrete instance of `IdentityDataInput` via:
//
//	IdentityDataArgs{...}
type IdentityDataInput interface {
	pulumi.Input

	ToIdentityDataOutput() IdentityDataOutput
	ToIdentityDataOutputWithContext(context.Context) IdentityDataOutput
}

// Identity for the resource.
type IdentityDataArgs struct {
	// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
	Type pulumi.StringInput `pulumi:"type"`
	// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (IdentityDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityData)(nil)).Elem()
}

func (i IdentityDataArgs) ToIdentityDataOutput() IdentityDataOutput {
	return i.ToIdentityDataOutputWithContext(context.Background())
}

func (i IdentityDataArgs) ToIdentityDataOutputWithContext(ctx context.Context) IdentityDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDataOutput)
}

func (i IdentityDataArgs) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return i.ToIdentityDataPtrOutputWithContext(context.Background())
}

func (i IdentityDataArgs) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDataOutput).ToIdentityDataPtrOutputWithContext(ctx)
}

// IdentityDataPtrInput is an input type that accepts IdentityDataArgs, IdentityDataPtr and IdentityDataPtrOutput values.
// You can construct a concrete instance of `IdentityDataPtrInput` via:
//
//	        IdentityDataArgs{...}
//
//	or:
//
//	        nil
type IdentityDataPtrInput interface {
	pulumi.Input

	ToIdentityDataPtrOutput() IdentityDataPtrOutput
	ToIdentityDataPtrOutputWithContext(context.Context) IdentityDataPtrOutput
}

type identityDataPtrType IdentityDataArgs

func IdentityDataPtr(v *IdentityDataArgs) IdentityDataPtrInput {
	return (*identityDataPtrType)(v)
}

func (*identityDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityData)(nil)).Elem()
}

func (i *identityDataPtrType) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return i.ToIdentityDataPtrOutputWithContext(context.Background())
}

func (i *identityDataPtrType) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDataPtrOutput)
}

// Identity for the resource.
type IdentityDataOutput struct{ *pulumi.OutputState }

func (IdentityDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityData)(nil)).Elem()
}

func (o IdentityDataOutput) ToIdentityDataOutput() IdentityDataOutput {
	return o
}

func (o IdentityDataOutput) ToIdentityDataOutputWithContext(ctx context.Context) IdentityDataOutput {
	return o
}

func (o IdentityDataOutput) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return o.ToIdentityDataPtrOutputWithContext(context.Background())
}

func (o IdentityDataOutput) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityData) *IdentityData {
		return &v
	}).(IdentityDataPtrOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o IdentityDataOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityData) string { return v.Type }).(pulumi.StringOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityDataOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityData) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type IdentityDataPtrOutput struct{ *pulumi.OutputState }

func (IdentityDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityData)(nil)).Elem()
}

func (o IdentityDataPtrOutput) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return o
}

func (o IdentityDataPtrOutput) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return o
}

func (o IdentityDataPtrOutput) Elem() IdentityDataOutput {
	return o.ApplyT(func(v *IdentityData) IdentityData {
		if v != nil {
			return *v
		}
		var ret IdentityData
		return ret
	}).(IdentityDataOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o IdentityDataPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityData) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityDataPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityData) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Identity for the resource.
type IdentityDataResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
	Type string `pulumi:"type"`
	// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]UserIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Identity for the resource.
type IdentityDataResponseOutput struct{ *pulumi.OutputState }

func (IdentityDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityDataResponse)(nil)).Elem()
}

func (o IdentityDataResponseOutput) ToIdentityDataResponseOutput() IdentityDataResponseOutput {
	return o
}

func (o IdentityDataResponseOutput) ToIdentityDataResponseOutputWithContext(ctx context.Context) IdentityDataResponseOutput {
	return o
}

// The principal ID of resource identity.
func (o IdentityDataResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDataResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityDataResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDataResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o IdentityDataResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDataResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityDataResponseOutput) UserAssignedIdentities() UserIdentityResponseMapOutput {
	return o.ApplyT(func(v IdentityDataResponse) map[string]UserIdentityResponse { return v.UserAssignedIdentities }).(UserIdentityResponseMapOutput)
}

type IdentityDataResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityDataResponse)(nil)).Elem()
}

func (o IdentityDataResponsePtrOutput) ToIdentityDataResponsePtrOutput() IdentityDataResponsePtrOutput {
	return o
}

func (o IdentityDataResponsePtrOutput) ToIdentityDataResponsePtrOutputWithContext(ctx context.Context) IdentityDataResponsePtrOutput {
	return o
}

func (o IdentityDataResponsePtrOutput) Elem() IdentityDataResponseOutput {
	return o.ApplyT(func(v *IdentityDataResponse) IdentityDataResponse {
		if v != nil {
			return *v
		}
		var ret IdentityDataResponse
		return ret
	}).(IdentityDataResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityDataResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityDataResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o IdentityDataResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityDataResponsePtrOutput) UserAssignedIdentities() UserIdentityResponseMapOutput {
	return o.ApplyT(func(v *IdentityDataResponse) map[string]UserIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserIdentityResponseMapOutput)
}

// Identity provider details.
type IdentityProviderDetailsResponse struct {
	// The base authority for Azure Active Directory authentication.
	AadAuthority *string `pulumi:"aadAuthority"`
	// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ApplicationId *string `pulumi:"applicationId"`
	// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	Audience *string `pulumi:"audience"`
	// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ObjectId *string `pulumi:"objectId"`
	// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	TenantId *string `pulumi:"tenantId"`
}

// Identity provider details.
type IdentityProviderDetailsResponseOutput struct{ *pulumi.OutputState }

func (IdentityProviderDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderDetailsResponse)(nil)).Elem()
}

func (o IdentityProviderDetailsResponseOutput) ToIdentityProviderDetailsResponseOutput() IdentityProviderDetailsResponseOutput {
	return o
}

func (o IdentityProviderDetailsResponseOutput) ToIdentityProviderDetailsResponseOutputWithContext(ctx context.Context) IdentityProviderDetailsResponseOutput {
	return o
}

// The base authority for Azure Active Directory authentication.
func (o IdentityProviderDetailsResponseOutput) AadAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderDetailsResponse) *string { return v.AadAuthority }).(pulumi.StringPtrOutput)
}

// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponseOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderDetailsResponse) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponseOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderDetailsResponse) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderDetailsResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderDetailsResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type IdentityProviderDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityProviderDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderDetailsResponse)(nil)).Elem()
}

func (o IdentityProviderDetailsResponsePtrOutput) ToIdentityProviderDetailsResponsePtrOutput() IdentityProviderDetailsResponsePtrOutput {
	return o
}

func (o IdentityProviderDetailsResponsePtrOutput) ToIdentityProviderDetailsResponsePtrOutputWithContext(ctx context.Context) IdentityProviderDetailsResponsePtrOutput {
	return o
}

func (o IdentityProviderDetailsResponsePtrOutput) Elem() IdentityProviderDetailsResponseOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) IdentityProviderDetailsResponse {
		if v != nil {
			return *v
		}
		var ret IdentityProviderDetailsResponse
		return ret
	}).(IdentityProviderDetailsResponseOutput)
}

// The base authority for Azure Active Directory authentication.
func (o IdentityProviderDetailsResponsePtrOutput) AadAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadAuthority
	}).(pulumi.StringPtrOutput)
}

// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponsePtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponsePtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderDetailsResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Identity provider input.
type IdentityProviderInput struct {
	// The base authority for Azure Active Directory authentication.
	AadAuthority string `pulumi:"aadAuthority"`
	// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ApplicationId string `pulumi:"applicationId"`
	// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	Audience string `pulumi:"audience"`
	// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ObjectId string `pulumi:"objectId"`
	// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	TenantId string `pulumi:"tenantId"`
}

// IdentityProviderInputInput is an input type that accepts IdentityProviderInputArgs and IdentityProviderInputOutput values.
// You can construct a concrete instance of `IdentityProviderInputInput` via:
//
//	IdentityProviderInputArgs{...}
type IdentityProviderInputInput interface {
	pulumi.Input

	ToIdentityProviderInputOutput() IdentityProviderInputOutput
	ToIdentityProviderInputOutputWithContext(context.Context) IdentityProviderInputOutput
}

// Identity provider input.
type IdentityProviderInputArgs struct {
	// The base authority for Azure Active Directory authentication.
	AadAuthority pulumi.StringInput `pulumi:"aadAuthority"`
	// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	Audience pulumi.StringInput `pulumi:"audience"`
	// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (IdentityProviderInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderInput)(nil)).Elem()
}

func (i IdentityProviderInputArgs) ToIdentityProviderInputOutput() IdentityProviderInputOutput {
	return i.ToIdentityProviderInputOutputWithContext(context.Background())
}

func (i IdentityProviderInputArgs) ToIdentityProviderInputOutputWithContext(ctx context.Context) IdentityProviderInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderInputOutput)
}

func (i IdentityProviderInputArgs) ToIdentityProviderInputPtrOutput() IdentityProviderInputPtrOutput {
	return i.ToIdentityProviderInputPtrOutputWithContext(context.Background())
}

func (i IdentityProviderInputArgs) ToIdentityProviderInputPtrOutputWithContext(ctx context.Context) IdentityProviderInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderInputOutput).ToIdentityProviderInputPtrOutputWithContext(ctx)
}

// IdentityProviderInputPtrInput is an input type that accepts IdentityProviderInputArgs, IdentityProviderInputPtr and IdentityProviderInputPtrOutput values.
// You can construct a concrete instance of `IdentityProviderInputPtrInput` via:
//
//	        IdentityProviderInputArgs{...}
//
//	or:
//
//	        nil
type IdentityProviderInputPtrInput interface {
	pulumi.Input

	ToIdentityProviderInputPtrOutput() IdentityProviderInputPtrOutput
	ToIdentityProviderInputPtrOutputWithContext(context.Context) IdentityProviderInputPtrOutput
}

type identityProviderInputPtrType IdentityProviderInputArgs

func IdentityProviderInputPtr(v *IdentityProviderInputArgs) IdentityProviderInputPtrInput {
	return (*identityProviderInputPtrType)(v)
}

func (*identityProviderInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderInput)(nil)).Elem()
}

func (i *identityProviderInputPtrType) ToIdentityProviderInputPtrOutput() IdentityProviderInputPtrOutput {
	return i.ToIdentityProviderInputPtrOutputWithContext(context.Background())
}

func (i *identityProviderInputPtrType) ToIdentityProviderInputPtrOutputWithContext(ctx context.Context) IdentityProviderInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderInputPtrOutput)
}

// Identity provider input.
type IdentityProviderInputOutput struct{ *pulumi.OutputState }

func (IdentityProviderInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderInput)(nil)).Elem()
}

func (o IdentityProviderInputOutput) ToIdentityProviderInputOutput() IdentityProviderInputOutput {
	return o
}

func (o IdentityProviderInputOutput) ToIdentityProviderInputOutputWithContext(ctx context.Context) IdentityProviderInputOutput {
	return o
}

func (o IdentityProviderInputOutput) ToIdentityProviderInputPtrOutput() IdentityProviderInputPtrOutput {
	return o.ToIdentityProviderInputPtrOutputWithContext(context.Background())
}

func (o IdentityProviderInputOutput) ToIdentityProviderInputPtrOutputWithContext(ctx context.Context) IdentityProviderInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityProviderInput) *IdentityProviderInput {
		return &v
	}).(IdentityProviderInputPtrOutput)
}

// The base authority for Azure Active Directory authentication.
func (o IdentityProviderInputOutput) AadAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderInput) string { return v.AadAuthority }).(pulumi.StringOutput)
}

// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderInputOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderInput) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderInputOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderInput) string { return v.Audience }).(pulumi.StringOutput)
}

// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderInputOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderInput) string { return v.ObjectId }).(pulumi.StringOutput)
}

// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderInputOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderInput) string { return v.TenantId }).(pulumi.StringOutput)
}

type IdentityProviderInputPtrOutput struct{ *pulumi.OutputState }

func (IdentityProviderInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderInput)(nil)).Elem()
}

func (o IdentityProviderInputPtrOutput) ToIdentityProviderInputPtrOutput() IdentityProviderInputPtrOutput {
	return o
}

func (o IdentityProviderInputPtrOutput) ToIdentityProviderInputPtrOutputWithContext(ctx context.Context) IdentityProviderInputPtrOutput {
	return o
}

func (o IdentityProviderInputPtrOutput) Elem() IdentityProviderInputOutput {
	return o.ApplyT(func(v *IdentityProviderInput) IdentityProviderInput {
		if v != nil {
			return *v
		}
		var ret IdentityProviderInput
		return ret
	}).(IdentityProviderInputOutput)
}

// The base authority for Azure Active Directory authentication.
func (o IdentityProviderInputPtrOutput) AadAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderInput) *string {
		if v == nil {
			return nil
		}
		return &v.AadAuthority
	}).(pulumi.StringPtrOutput)
}

// The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderInputPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderInput) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderInputPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderInput) *string {
		if v == nil {
			return nil
		}
		return &v.Audience
	}).(pulumi.StringPtrOutput)
}

// The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderInputPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderInput) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services.
func (o IdentityProviderInputPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderInput) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Immutability Settings of vault
type ImmutabilitySettings struct {
	State *string `pulumi:"state"`
}

// ImmutabilitySettingsInput is an input type that accepts ImmutabilitySettingsArgs and ImmutabilitySettingsOutput values.
// You can construct a concrete instance of `ImmutabilitySettingsInput` via:
//
//	ImmutabilitySettingsArgs{...}
type ImmutabilitySettingsInput interface {
	pulumi.Input

	ToImmutabilitySettingsOutput() ImmutabilitySettingsOutput
	ToImmutabilitySettingsOutputWithContext(context.Context) ImmutabilitySettingsOutput
}

// Immutability Settings of vault
type ImmutabilitySettingsArgs struct {
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ImmutabilitySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilitySettings)(nil)).Elem()
}

func (i ImmutabilitySettingsArgs) ToImmutabilitySettingsOutput() ImmutabilitySettingsOutput {
	return i.ToImmutabilitySettingsOutputWithContext(context.Background())
}

func (i ImmutabilitySettingsArgs) ToImmutabilitySettingsOutputWithContext(ctx context.Context) ImmutabilitySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilitySettingsOutput)
}

func (i ImmutabilitySettingsArgs) ToImmutabilitySettingsPtrOutput() ImmutabilitySettingsPtrOutput {
	return i.ToImmutabilitySettingsPtrOutputWithContext(context.Background())
}

func (i ImmutabilitySettingsArgs) ToImmutabilitySettingsPtrOutputWithContext(ctx context.Context) ImmutabilitySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilitySettingsOutput).ToImmutabilitySettingsPtrOutputWithContext(ctx)
}

// ImmutabilitySettingsPtrInput is an input type that accepts ImmutabilitySettingsArgs, ImmutabilitySettingsPtr and ImmutabilitySettingsPtrOutput values.
// You can construct a concrete instance of `ImmutabilitySettingsPtrInput` via:
//
//	        ImmutabilitySettingsArgs{...}
//
//	or:
//
//	        nil
type ImmutabilitySettingsPtrInput interface {
	pulumi.Input

	ToImmutabilitySettingsPtrOutput() ImmutabilitySettingsPtrOutput
	ToImmutabilitySettingsPtrOutputWithContext(context.Context) ImmutabilitySettingsPtrOutput
}

type immutabilitySettingsPtrType ImmutabilitySettingsArgs

func ImmutabilitySettingsPtr(v *ImmutabilitySettingsArgs) ImmutabilitySettingsPtrInput {
	return (*immutabilitySettingsPtrType)(v)
}

func (*immutabilitySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImmutabilitySettings)(nil)).Elem()
}

func (i *immutabilitySettingsPtrType) ToImmutabilitySettingsPtrOutput() ImmutabilitySettingsPtrOutput {
	return i.ToImmutabilitySettingsPtrOutputWithContext(context.Background())
}

func (i *immutabilitySettingsPtrType) ToImmutabilitySettingsPtrOutputWithContext(ctx context.Context) ImmutabilitySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilitySettingsPtrOutput)
}

// Immutability Settings of vault
type ImmutabilitySettingsOutput struct{ *pulumi.OutputState }

func (ImmutabilitySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilitySettings)(nil)).Elem()
}

func (o ImmutabilitySettingsOutput) ToImmutabilitySettingsOutput() ImmutabilitySettingsOutput {
	return o
}

func (o ImmutabilitySettingsOutput) ToImmutabilitySettingsOutputWithContext(ctx context.Context) ImmutabilitySettingsOutput {
	return o
}

func (o ImmutabilitySettingsOutput) ToImmutabilitySettingsPtrOutput() ImmutabilitySettingsPtrOutput {
	return o.ToImmutabilitySettingsPtrOutputWithContext(context.Background())
}

func (o ImmutabilitySettingsOutput) ToImmutabilitySettingsPtrOutputWithContext(ctx context.Context) ImmutabilitySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImmutabilitySettings) *ImmutabilitySettings {
		return &v
	}).(ImmutabilitySettingsPtrOutput)
}

func (o ImmutabilitySettingsOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImmutabilitySettings) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ImmutabilitySettingsPtrOutput struct{ *pulumi.OutputState }

func (ImmutabilitySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImmutabilitySettings)(nil)).Elem()
}

func (o ImmutabilitySettingsPtrOutput) ToImmutabilitySettingsPtrOutput() ImmutabilitySettingsPtrOutput {
	return o
}

func (o ImmutabilitySettingsPtrOutput) ToImmutabilitySettingsPtrOutputWithContext(ctx context.Context) ImmutabilitySettingsPtrOutput {
	return o
}

func (o ImmutabilitySettingsPtrOutput) Elem() ImmutabilitySettingsOutput {
	return o.ApplyT(func(v *ImmutabilitySettings) ImmutabilitySettings {
		if v != nil {
			return *v
		}
		var ret ImmutabilitySettings
		return ret
	}).(ImmutabilitySettingsOutput)
}

func (o ImmutabilitySettingsPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImmutabilitySettings) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Immutability Settings of vault
type ImmutabilitySettingsResponse struct {
	State *string `pulumi:"state"`
}

// Immutability Settings of vault
type ImmutabilitySettingsResponseOutput struct{ *pulumi.OutputState }

func (ImmutabilitySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilitySettingsResponse)(nil)).Elem()
}

func (o ImmutabilitySettingsResponseOutput) ToImmutabilitySettingsResponseOutput() ImmutabilitySettingsResponseOutput {
	return o
}

func (o ImmutabilitySettingsResponseOutput) ToImmutabilitySettingsResponseOutputWithContext(ctx context.Context) ImmutabilitySettingsResponseOutput {
	return o
}

func (o ImmutabilitySettingsResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImmutabilitySettingsResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ImmutabilitySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ImmutabilitySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImmutabilitySettingsResponse)(nil)).Elem()
}

func (o ImmutabilitySettingsResponsePtrOutput) ToImmutabilitySettingsResponsePtrOutput() ImmutabilitySettingsResponsePtrOutput {
	return o
}

func (o ImmutabilitySettingsResponsePtrOutput) ToImmutabilitySettingsResponsePtrOutputWithContext(ctx context.Context) ImmutabilitySettingsResponsePtrOutput {
	return o
}

func (o ImmutabilitySettingsResponsePtrOutput) Elem() ImmutabilitySettingsResponseOutput {
	return o.ApplyT(func(v *ImmutabilitySettingsResponse) ImmutabilitySettingsResponse {
		if v != nil {
			return *v
		}
		var ret ImmutabilitySettingsResponse
		return ret
	}).(ImmutabilitySettingsResponseOutput)
}

func (o ImmutabilitySettingsResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImmutabilitySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The details of the InMage agent.
type InMageAgentDetailsResponse struct {
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// A value indicating whether installed agent needs to be updated.
	AgentUpdateStatus *string `pulumi:"agentUpdateStatus"`
	// The agent version.
	AgentVersion *string `pulumi:"agentVersion"`
	// A value indicating whether reboot is required after update is applied.
	PostUpdateRebootStatus *string `pulumi:"postUpdateRebootStatus"`
}

// The details of the InMage agent.
type InMageAgentDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageAgentDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAgentDetailsResponse)(nil)).Elem()
}

func (o InMageAgentDetailsResponseOutput) ToInMageAgentDetailsResponseOutput() InMageAgentDetailsResponseOutput {
	return o
}

func (o InMageAgentDetailsResponseOutput) ToInMageAgentDetailsResponseOutputWithContext(ctx context.Context) InMageAgentDetailsResponseOutput {
	return o
}

// Agent expiry date.
func (o InMageAgentDetailsResponseOutput) AgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAgentDetailsResponse) *string { return v.AgentExpiryDate }).(pulumi.StringPtrOutput)
}

// A value indicating whether installed agent needs to be updated.
func (o InMageAgentDetailsResponseOutput) AgentUpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAgentDetailsResponse) *string { return v.AgentUpdateStatus }).(pulumi.StringPtrOutput)
}

// The agent version.
func (o InMageAgentDetailsResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAgentDetailsResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// A value indicating whether reboot is required after update is applied.
func (o InMageAgentDetailsResponseOutput) PostUpdateRebootStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAgentDetailsResponse) *string { return v.PostUpdateRebootStatus }).(pulumi.StringPtrOutput)
}

type InMageAgentDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageAgentDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageAgentDetailsResponse)(nil)).Elem()
}

func (o InMageAgentDetailsResponsePtrOutput) ToInMageAgentDetailsResponsePtrOutput() InMageAgentDetailsResponsePtrOutput {
	return o
}

func (o InMageAgentDetailsResponsePtrOutput) ToInMageAgentDetailsResponsePtrOutputWithContext(ctx context.Context) InMageAgentDetailsResponsePtrOutput {
	return o
}

func (o InMageAgentDetailsResponsePtrOutput) Elem() InMageAgentDetailsResponseOutput {
	return o.ApplyT(func(v *InMageAgentDetailsResponse) InMageAgentDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageAgentDetailsResponse
		return ret
	}).(InMageAgentDetailsResponseOutput)
}

// Agent expiry date.
func (o InMageAgentDetailsResponsePtrOutput) AgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentExpiryDate
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether installed agent needs to be updated.
func (o InMageAgentDetailsResponsePtrOutput) AgentUpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentUpdateStatus
	}).(pulumi.StringPtrOutput)
}

// The agent version.
func (o InMageAgentDetailsResponsePtrOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentVersion
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether reboot is required after update is applied.
func (o InMageAgentDetailsResponsePtrOutput) PostUpdateRebootStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PostUpdateRebootStatus
	}).(pulumi.StringPtrOutput)
}

// Disk input details.
type InMageAzureV2DiskInputDetails struct {
	// The DiskEncryptionSet ARM ID.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The DiskId.
	DiskId *string `pulumi:"diskId"`
	// The DiskType.
	DiskType *string `pulumi:"diskType"`
	// The LogStorageAccountId.
	LogStorageAccountId *string `pulumi:"logStorageAccountId"`
}

// InMageAzureV2DiskInputDetailsInput is an input type that accepts InMageAzureV2DiskInputDetailsArgs and InMageAzureV2DiskInputDetailsOutput values.
// You can construct a concrete instance of `InMageAzureV2DiskInputDetailsInput` via:
//
//	InMageAzureV2DiskInputDetailsArgs{...}
type InMageAzureV2DiskInputDetailsInput interface {
	pulumi.Input

	ToInMageAzureV2DiskInputDetailsOutput() InMageAzureV2DiskInputDetailsOutput
	ToInMageAzureV2DiskInputDetailsOutputWithContext(context.Context) InMageAzureV2DiskInputDetailsOutput
}

// Disk input details.
type InMageAzureV2DiskInputDetailsArgs struct {
	// The DiskEncryptionSet ARM ID.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// The DiskId.
	DiskId pulumi.StringPtrInput `pulumi:"diskId"`
	// The DiskType.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// The LogStorageAccountId.
	LogStorageAccountId pulumi.StringPtrInput `pulumi:"logStorageAccountId"`
}

func (InMageAzureV2DiskInputDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2DiskInputDetails)(nil)).Elem()
}

func (i InMageAzureV2DiskInputDetailsArgs) ToInMageAzureV2DiskInputDetailsOutput() InMageAzureV2DiskInputDetailsOutput {
	return i.ToInMageAzureV2DiskInputDetailsOutputWithContext(context.Background())
}

func (i InMageAzureV2DiskInputDetailsArgs) ToInMageAzureV2DiskInputDetailsOutputWithContext(ctx context.Context) InMageAzureV2DiskInputDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageAzureV2DiskInputDetailsOutput)
}

// InMageAzureV2DiskInputDetailsArrayInput is an input type that accepts InMageAzureV2DiskInputDetailsArray and InMageAzureV2DiskInputDetailsArrayOutput values.
// You can construct a concrete instance of `InMageAzureV2DiskInputDetailsArrayInput` via:
//
//	InMageAzureV2DiskInputDetailsArray{ InMageAzureV2DiskInputDetailsArgs{...} }
type InMageAzureV2DiskInputDetailsArrayInput interface {
	pulumi.Input

	ToInMageAzureV2DiskInputDetailsArrayOutput() InMageAzureV2DiskInputDetailsArrayOutput
	ToInMageAzureV2DiskInputDetailsArrayOutputWithContext(context.Context) InMageAzureV2DiskInputDetailsArrayOutput
}

type InMageAzureV2DiskInputDetailsArray []InMageAzureV2DiskInputDetailsInput

func (InMageAzureV2DiskInputDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageAzureV2DiskInputDetails)(nil)).Elem()
}

func (i InMageAzureV2DiskInputDetailsArray) ToInMageAzureV2DiskInputDetailsArrayOutput() InMageAzureV2DiskInputDetailsArrayOutput {
	return i.ToInMageAzureV2DiskInputDetailsArrayOutputWithContext(context.Background())
}

func (i InMageAzureV2DiskInputDetailsArray) ToInMageAzureV2DiskInputDetailsArrayOutputWithContext(ctx context.Context) InMageAzureV2DiskInputDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageAzureV2DiskInputDetailsArrayOutput)
}

// Disk input details.
type InMageAzureV2DiskInputDetailsOutput struct{ *pulumi.OutputState }

func (InMageAzureV2DiskInputDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2DiskInputDetails)(nil)).Elem()
}

func (o InMageAzureV2DiskInputDetailsOutput) ToInMageAzureV2DiskInputDetailsOutput() InMageAzureV2DiskInputDetailsOutput {
	return o
}

func (o InMageAzureV2DiskInputDetailsOutput) ToInMageAzureV2DiskInputDetailsOutputWithContext(ctx context.Context) InMageAzureV2DiskInputDetailsOutput {
	return o
}

// The DiskEncryptionSet ARM ID.
func (o InMageAzureV2DiskInputDetailsOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2DiskInputDetails) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The DiskId.
func (o InMageAzureV2DiskInputDetailsOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2DiskInputDetails) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// The DiskType.
func (o InMageAzureV2DiskInputDetailsOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2DiskInputDetails) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// The LogStorageAccountId.
func (o InMageAzureV2DiskInputDetailsOutput) LogStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2DiskInputDetails) *string { return v.LogStorageAccountId }).(pulumi.StringPtrOutput)
}

type InMageAzureV2DiskInputDetailsArrayOutput struct{ *pulumi.OutputState }

func (InMageAzureV2DiskInputDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageAzureV2DiskInputDetails)(nil)).Elem()
}

func (o InMageAzureV2DiskInputDetailsArrayOutput) ToInMageAzureV2DiskInputDetailsArrayOutput() InMageAzureV2DiskInputDetailsArrayOutput {
	return o
}

func (o InMageAzureV2DiskInputDetailsArrayOutput) ToInMageAzureV2DiskInputDetailsArrayOutputWithContext(ctx context.Context) InMageAzureV2DiskInputDetailsArrayOutput {
	return o
}

func (o InMageAzureV2DiskInputDetailsArrayOutput) Index(i pulumi.IntInput) InMageAzureV2DiskInputDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageAzureV2DiskInputDetails {
		return vs[0].([]InMageAzureV2DiskInputDetails)[vs[1].(int)]
	}).(InMageAzureV2DiskInputDetailsOutput)
}

// VMware Azure specific enable protection input.
type InMageAzureV2EnableProtectionInput struct {
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The DiskType.
	DiskType *string `pulumi:"diskType"`
	// The disks to include list.
	DisksToInclude []InMageAzureV2DiskInputDetails `pulumi:"disksToInclude"`
	// The selected option to enable RDP\SSH on target VM after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
	EnableRdpOnTargetOption *string `pulumi:"enableRdpOnTargetOption"`
	// The class type.
	// Expected value is 'InMageAzureV2'.
	InstanceType string `pulumi:"instanceType"`
	// License type.
	LicenseType *string `pulumi:"licenseType"`
	// The storage account to be used for logging during replication.
	LogStorageAccountId *string `pulumi:"logStorageAccountId"`
	// The Master target Id.
	MasterTargetId *string `pulumi:"masterTargetId"`
	// The multi VM group Id.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi VM group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// The Process Server Id.
	ProcessServerId *string `pulumi:"processServerId"`
	// The CS account Id.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
	// The tags for the seed managed disks.
	SeedManagedDiskTags map[string]string `pulumi:"seedManagedDiskTags"`
	// The SQL Server license type.
	SqlServerLicenseType *string `pulumi:"sqlServerLicenseType"`
	// The storage account Id.
	StorageAccountId *string `pulumi:"storageAccountId"`
	// The target availability set ARM Id for resource manager deployment.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The selected target Azure network Id.
	TargetAzureNetworkId *string `pulumi:"targetAzureNetworkId"`
	// The selected target Azure subnet Id.
	TargetAzureSubnetId *string `pulumi:"targetAzureSubnetId"`
	// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
	TargetAzureV1ResourceGroupId *string `pulumi:"targetAzureV1ResourceGroupId"`
	// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
	TargetAzureV2ResourceGroupId *string `pulumi:"targetAzureV2ResourceGroupId"`
	// The target azure VM Name.
	TargetAzureVmName *string `pulumi:"targetAzureVmName"`
	// The tags for the target managed disks.
	TargetManagedDiskTags map[string]string `pulumi:"targetManagedDiskTags"`
	// The tags for the target NICs.
	TargetNicTags map[string]string `pulumi:"targetNicTags"`
	// The proximity placement group ARM Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The target VM size.
	TargetVmSize *string `pulumi:"targetVmSize"`
	// The target VM tags.
	TargetVmTags map[string]string `pulumi:"targetVmTags"`
}

// InMageAzureV2EnableProtectionInputInput is an input type that accepts InMageAzureV2EnableProtectionInputArgs and InMageAzureV2EnableProtectionInputOutput values.
// You can construct a concrete instance of `InMageAzureV2EnableProtectionInputInput` via:
//
//	InMageAzureV2EnableProtectionInputArgs{...}
type InMageAzureV2EnableProtectionInputInput interface {
	pulumi.Input

	ToInMageAzureV2EnableProtectionInputOutput() InMageAzureV2EnableProtectionInputOutput
	ToInMageAzureV2EnableProtectionInputOutputWithContext(context.Context) InMageAzureV2EnableProtectionInputOutput
}

// VMware Azure specific enable protection input.
type InMageAzureV2EnableProtectionInputArgs struct {
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// The DiskType.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// The disks to include list.
	DisksToInclude InMageAzureV2DiskInputDetailsArrayInput `pulumi:"disksToInclude"`
	// The selected option to enable RDP\SSH on target VM after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
	EnableRdpOnTargetOption pulumi.StringPtrInput `pulumi:"enableRdpOnTargetOption"`
	// The class type.
	// Expected value is 'InMageAzureV2'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// License type.
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
	// The storage account to be used for logging during replication.
	LogStorageAccountId pulumi.StringPtrInput `pulumi:"logStorageAccountId"`
	// The Master target Id.
	MasterTargetId pulumi.StringPtrInput `pulumi:"masterTargetId"`
	// The multi VM group Id.
	MultiVmGroupId pulumi.StringPtrInput `pulumi:"multiVmGroupId"`
	// The multi VM group name.
	MultiVmGroupName pulumi.StringPtrInput `pulumi:"multiVmGroupName"`
	// The Process Server Id.
	ProcessServerId pulumi.StringPtrInput `pulumi:"processServerId"`
	// The CS account Id.
	RunAsAccountId pulumi.StringPtrInput `pulumi:"runAsAccountId"`
	// The tags for the seed managed disks.
	SeedManagedDiskTags pulumi.StringMapInput `pulumi:"seedManagedDiskTags"`
	// The SQL Server license type.
	SqlServerLicenseType pulumi.StringPtrInput `pulumi:"sqlServerLicenseType"`
	// The storage account Id.
	StorageAccountId pulumi.StringPtrInput `pulumi:"storageAccountId"`
	// The target availability set ARM Id for resource manager deployment.
	TargetAvailabilitySetId pulumi.StringPtrInput `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone pulumi.StringPtrInput `pulumi:"targetAvailabilityZone"`
	// The selected target Azure network Id.
	TargetAzureNetworkId pulumi.StringPtrInput `pulumi:"targetAzureNetworkId"`
	// The selected target Azure subnet Id.
	TargetAzureSubnetId pulumi.StringPtrInput `pulumi:"targetAzureSubnetId"`
	// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
	TargetAzureV1ResourceGroupId pulumi.StringPtrInput `pulumi:"targetAzureV1ResourceGroupId"`
	// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
	TargetAzureV2ResourceGroupId pulumi.StringPtrInput `pulumi:"targetAzureV2ResourceGroupId"`
	// The target azure VM Name.
	TargetAzureVmName pulumi.StringPtrInput `pulumi:"targetAzureVmName"`
	// The tags for the target managed disks.
	TargetManagedDiskTags pulumi.StringMapInput `pulumi:"targetManagedDiskTags"`
	// The tags for the target NICs.
	TargetNicTags pulumi.StringMapInput `pulumi:"targetNicTags"`
	// The proximity placement group ARM Id.
	TargetProximityPlacementGroupId pulumi.StringPtrInput `pulumi:"targetProximityPlacementGroupId"`
	// The target VM size.
	TargetVmSize pulumi.StringPtrInput `pulumi:"targetVmSize"`
	// The target VM tags.
	TargetVmTags pulumi.StringMapInput `pulumi:"targetVmTags"`
}

func (InMageAzureV2EnableProtectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2EnableProtectionInput)(nil)).Elem()
}

func (i InMageAzureV2EnableProtectionInputArgs) ToInMageAzureV2EnableProtectionInputOutput() InMageAzureV2EnableProtectionInputOutput {
	return i.ToInMageAzureV2EnableProtectionInputOutputWithContext(context.Background())
}

func (i InMageAzureV2EnableProtectionInputArgs) ToInMageAzureV2EnableProtectionInputOutputWithContext(ctx context.Context) InMageAzureV2EnableProtectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageAzureV2EnableProtectionInputOutput)
}

func (i InMageAzureV2EnableProtectionInputArgs) ToInMageAzureV2EnableProtectionInputPtrOutput() InMageAzureV2EnableProtectionInputPtrOutput {
	return i.ToInMageAzureV2EnableProtectionInputPtrOutputWithContext(context.Background())
}

func (i InMageAzureV2EnableProtectionInputArgs) ToInMageAzureV2EnableProtectionInputPtrOutputWithContext(ctx context.Context) InMageAzureV2EnableProtectionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageAzureV2EnableProtectionInputOutput).ToInMageAzureV2EnableProtectionInputPtrOutputWithContext(ctx)
}

// InMageAzureV2EnableProtectionInputPtrInput is an input type that accepts InMageAzureV2EnableProtectionInputArgs, InMageAzureV2EnableProtectionInputPtr and InMageAzureV2EnableProtectionInputPtrOutput values.
// You can construct a concrete instance of `InMageAzureV2EnableProtectionInputPtrInput` via:
//
//	        InMageAzureV2EnableProtectionInputArgs{...}
//
//	or:
//
//	        nil
type InMageAzureV2EnableProtectionInputPtrInput interface {
	pulumi.Input

	ToInMageAzureV2EnableProtectionInputPtrOutput() InMageAzureV2EnableProtectionInputPtrOutput
	ToInMageAzureV2EnableProtectionInputPtrOutputWithContext(context.Context) InMageAzureV2EnableProtectionInputPtrOutput
}

type inMageAzureV2EnableProtectionInputPtrType InMageAzureV2EnableProtectionInputArgs

func InMageAzureV2EnableProtectionInputPtr(v *InMageAzureV2EnableProtectionInputArgs) InMageAzureV2EnableProtectionInputPtrInput {
	return (*inMageAzureV2EnableProtectionInputPtrType)(v)
}

func (*inMageAzureV2EnableProtectionInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageAzureV2EnableProtectionInput)(nil)).Elem()
}

func (i *inMageAzureV2EnableProtectionInputPtrType) ToInMageAzureV2EnableProtectionInputPtrOutput() InMageAzureV2EnableProtectionInputPtrOutput {
	return i.ToInMageAzureV2EnableProtectionInputPtrOutputWithContext(context.Background())
}

func (i *inMageAzureV2EnableProtectionInputPtrType) ToInMageAzureV2EnableProtectionInputPtrOutputWithContext(ctx context.Context) InMageAzureV2EnableProtectionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageAzureV2EnableProtectionInputPtrOutput)
}

// VMware Azure specific enable protection input.
type InMageAzureV2EnableProtectionInputOutput struct{ *pulumi.OutputState }

func (InMageAzureV2EnableProtectionInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2EnableProtectionInput)(nil)).Elem()
}

func (o InMageAzureV2EnableProtectionInputOutput) ToInMageAzureV2EnableProtectionInputOutput() InMageAzureV2EnableProtectionInputOutput {
	return o
}

func (o InMageAzureV2EnableProtectionInputOutput) ToInMageAzureV2EnableProtectionInputOutputWithContext(ctx context.Context) InMageAzureV2EnableProtectionInputOutput {
	return o
}

func (o InMageAzureV2EnableProtectionInputOutput) ToInMageAzureV2EnableProtectionInputPtrOutput() InMageAzureV2EnableProtectionInputPtrOutput {
	return o.ToInMageAzureV2EnableProtectionInputPtrOutputWithContext(context.Background())
}

func (o InMageAzureV2EnableProtectionInputOutput) ToInMageAzureV2EnableProtectionInputPtrOutputWithContext(ctx context.Context) InMageAzureV2EnableProtectionInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InMageAzureV2EnableProtectionInput) *InMageAzureV2EnableProtectionInput {
		return &v
	}).(InMageAzureV2EnableProtectionInputPtrOutput)
}

// The DiskEncryptionSet ARM Id.
func (o InMageAzureV2EnableProtectionInputOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The DiskType.
func (o InMageAzureV2EnableProtectionInputOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// The disks to include list.
func (o InMageAzureV2EnableProtectionInputOutput) DisksToInclude() InMageAzureV2DiskInputDetailsArrayOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) []InMageAzureV2DiskInputDetails { return v.DisksToInclude }).(InMageAzureV2DiskInputDetailsArrayOutput)
}

// The selected option to enable RDP\SSH on target VM after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
func (o InMageAzureV2EnableProtectionInputOutput) EnableRdpOnTargetOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.EnableRdpOnTargetOption }).(pulumi.StringPtrOutput)
}

// The class type.
// Expected value is 'InMageAzureV2'.
func (o InMageAzureV2EnableProtectionInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// License type.
func (o InMageAzureV2EnableProtectionInputOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// The storage account to be used for logging during replication.
func (o InMageAzureV2EnableProtectionInputOutput) LogStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.LogStorageAccountId }).(pulumi.StringPtrOutput)
}

// The Master target Id.
func (o InMageAzureV2EnableProtectionInputOutput) MasterTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.MasterTargetId }).(pulumi.StringPtrOutput)
}

// The multi VM group Id.
func (o InMageAzureV2EnableProtectionInputOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.MultiVmGroupId }).(pulumi.StringPtrOutput)
}

// The multi VM group name.
func (o InMageAzureV2EnableProtectionInputOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.MultiVmGroupName }).(pulumi.StringPtrOutput)
}

// The Process Server Id.
func (o InMageAzureV2EnableProtectionInputOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.ProcessServerId }).(pulumi.StringPtrOutput)
}

// The CS account Id.
func (o InMageAzureV2EnableProtectionInputOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.RunAsAccountId }).(pulumi.StringPtrOutput)
}

// The tags for the seed managed disks.
func (o InMageAzureV2EnableProtectionInputOutput) SeedManagedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) map[string]string { return v.SeedManagedDiskTags }).(pulumi.StringMapOutput)
}

// The SQL Server license type.
func (o InMageAzureV2EnableProtectionInputOutput) SqlServerLicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.SqlServerLicenseType }).(pulumi.StringPtrOutput)
}

// The storage account Id.
func (o InMageAzureV2EnableProtectionInputOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.StorageAccountId }).(pulumi.StringPtrOutput)
}

// The target availability set ARM Id for resource manager deployment.
func (o InMageAzureV2EnableProtectionInputOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.TargetAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// The target availability zone.
func (o InMageAzureV2EnableProtectionInputOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.TargetAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The selected target Azure network Id.
func (o InMageAzureV2EnableProtectionInputOutput) TargetAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.TargetAzureNetworkId }).(pulumi.StringPtrOutput)
}

// The selected target Azure subnet Id.
func (o InMageAzureV2EnableProtectionInputOutput) TargetAzureSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.TargetAzureSubnetId }).(pulumi.StringPtrOutput)
}

// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
func (o InMageAzureV2EnableProtectionInputOutput) TargetAzureV1ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.TargetAzureV1ResourceGroupId }).(pulumi.StringPtrOutput)
}

// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
func (o InMageAzureV2EnableProtectionInputOutput) TargetAzureV2ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.TargetAzureV2ResourceGroupId }).(pulumi.StringPtrOutput)
}

// The target azure VM Name.
func (o InMageAzureV2EnableProtectionInputOutput) TargetAzureVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.TargetAzureVmName }).(pulumi.StringPtrOutput)
}

// The tags for the target managed disks.
func (o InMageAzureV2EnableProtectionInputOutput) TargetManagedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) map[string]string { return v.TargetManagedDiskTags }).(pulumi.StringMapOutput)
}

// The tags for the target NICs.
func (o InMageAzureV2EnableProtectionInputOutput) TargetNicTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) map[string]string { return v.TargetNicTags }).(pulumi.StringMapOutput)
}

// The proximity placement group ARM Id.
func (o InMageAzureV2EnableProtectionInputOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.TargetProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// The target VM size.
func (o InMageAzureV2EnableProtectionInputOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) *string { return v.TargetVmSize }).(pulumi.StringPtrOutput)
}

// The target VM tags.
func (o InMageAzureV2EnableProtectionInputOutput) TargetVmTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageAzureV2EnableProtectionInput) map[string]string { return v.TargetVmTags }).(pulumi.StringMapOutput)
}

type InMageAzureV2EnableProtectionInputPtrOutput struct{ *pulumi.OutputState }

func (InMageAzureV2EnableProtectionInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageAzureV2EnableProtectionInput)(nil)).Elem()
}

func (o InMageAzureV2EnableProtectionInputPtrOutput) ToInMageAzureV2EnableProtectionInputPtrOutput() InMageAzureV2EnableProtectionInputPtrOutput {
	return o
}

func (o InMageAzureV2EnableProtectionInputPtrOutput) ToInMageAzureV2EnableProtectionInputPtrOutputWithContext(ctx context.Context) InMageAzureV2EnableProtectionInputPtrOutput {
	return o
}

func (o InMageAzureV2EnableProtectionInputPtrOutput) Elem() InMageAzureV2EnableProtectionInputOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) InMageAzureV2EnableProtectionInput {
		if v != nil {
			return *v
		}
		var ret InMageAzureV2EnableProtectionInput
		return ret
	}).(InMageAzureV2EnableProtectionInputOutput)
}

// The DiskEncryptionSet ARM Id.
func (o InMageAzureV2EnableProtectionInputPtrOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSetId
	}).(pulumi.StringPtrOutput)
}

// The DiskType.
func (o InMageAzureV2EnableProtectionInputPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

// The disks to include list.
func (o InMageAzureV2EnableProtectionInputPtrOutput) DisksToInclude() InMageAzureV2DiskInputDetailsArrayOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) []InMageAzureV2DiskInputDetails {
		if v == nil {
			return nil
		}
		return v.DisksToInclude
	}).(InMageAzureV2DiskInputDetailsArrayOutput)
}

// The selected option to enable RDP\SSH on target VM after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
func (o InMageAzureV2EnableProtectionInputPtrOutput) EnableRdpOnTargetOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.EnableRdpOnTargetOption
	}).(pulumi.StringPtrOutput)
}

// The class type.
// Expected value is 'InMageAzureV2'.
func (o InMageAzureV2EnableProtectionInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// License type.
func (o InMageAzureV2EnableProtectionInputPtrOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.LicenseType
	}).(pulumi.StringPtrOutput)
}

// The storage account to be used for logging during replication.
func (o InMageAzureV2EnableProtectionInputPtrOutput) LogStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.LogStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The Master target Id.
func (o InMageAzureV2EnableProtectionInputPtrOutput) MasterTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.MasterTargetId
	}).(pulumi.StringPtrOutput)
}

// The multi VM group Id.
func (o InMageAzureV2EnableProtectionInputPtrOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmGroupId
	}).(pulumi.StringPtrOutput)
}

// The multi VM group name.
func (o InMageAzureV2EnableProtectionInputPtrOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmGroupName
	}).(pulumi.StringPtrOutput)
}

// The Process Server Id.
func (o InMageAzureV2EnableProtectionInputPtrOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.ProcessServerId
	}).(pulumi.StringPtrOutput)
}

// The CS account Id.
func (o InMageAzureV2EnableProtectionInputPtrOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.RunAsAccountId
	}).(pulumi.StringPtrOutput)
}

// The tags for the seed managed disks.
func (o InMageAzureV2EnableProtectionInputPtrOutput) SeedManagedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) map[string]string {
		if v == nil {
			return nil
		}
		return v.SeedManagedDiskTags
	}).(pulumi.StringMapOutput)
}

// The SQL Server license type.
func (o InMageAzureV2EnableProtectionInputPtrOutput) SqlServerLicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.SqlServerLicenseType
	}).(pulumi.StringPtrOutput)
}

// The storage account Id.
func (o InMageAzureV2EnableProtectionInputPtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The target availability set ARM Id for resource manager deployment.
func (o InMageAzureV2EnableProtectionInputPtrOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetAvailabilitySetId
	}).(pulumi.StringPtrOutput)
}

// The target availability zone.
func (o InMageAzureV2EnableProtectionInputPtrOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetAvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// The selected target Azure network Id.
func (o InMageAzureV2EnableProtectionInputPtrOutput) TargetAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetAzureNetworkId
	}).(pulumi.StringPtrOutput)
}

// The selected target Azure subnet Id.
func (o InMageAzureV2EnableProtectionInputPtrOutput) TargetAzureSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetAzureSubnetId
	}).(pulumi.StringPtrOutput)
}

// The Id of the target resource group (for classic deployment) in which the failover VM is to be created.
func (o InMageAzureV2EnableProtectionInputPtrOutput) TargetAzureV1ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetAzureV1ResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.
func (o InMageAzureV2EnableProtectionInputPtrOutput) TargetAzureV2ResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetAzureV2ResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// The target azure VM Name.
func (o InMageAzureV2EnableProtectionInputPtrOutput) TargetAzureVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetAzureVmName
	}).(pulumi.StringPtrOutput)
}

// The tags for the target managed disks.
func (o InMageAzureV2EnableProtectionInputPtrOutput) TargetManagedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetManagedDiskTags
	}).(pulumi.StringMapOutput)
}

// The tags for the target NICs.
func (o InMageAzureV2EnableProtectionInputPtrOutput) TargetNicTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetNicTags
	}).(pulumi.StringMapOutput)
}

// The proximity placement group ARM Id.
func (o InMageAzureV2EnableProtectionInputPtrOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetProximityPlacementGroupId
	}).(pulumi.StringPtrOutput)
}

// The target VM size.
func (o InMageAzureV2EnableProtectionInputPtrOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetVmSize
	}).(pulumi.StringPtrOutput)
}

// The target VM tags.
func (o InMageAzureV2EnableProtectionInputPtrOutput) TargetVmTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InMageAzureV2EnableProtectionInput) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetVmTags
	}).(pulumi.StringMapOutput)
}

// InMageAzureV2 Managed disk details.
type InMageAzureV2ManagedDiskDetailsResponse struct {
	// The DiskEncryptionSet ARM ID.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The disk id.
	DiskId *string `pulumi:"diskId"`
	// The replica disk type.
	ReplicaDiskType *string `pulumi:"replicaDiskType"`
	// Seed managed disk Id.
	SeedManagedDiskId *string `pulumi:"seedManagedDiskId"`
	// The target disk name.
	TargetDiskName *string `pulumi:"targetDiskName"`
}

// InMageAzureV2 Managed disk details.
type InMageAzureV2ManagedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageAzureV2ManagedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2ManagedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2ManagedDiskDetailsResponseOutput) ToInMageAzureV2ManagedDiskDetailsResponseOutput() InMageAzureV2ManagedDiskDetailsResponseOutput {
	return o
}

func (o InMageAzureV2ManagedDiskDetailsResponseOutput) ToInMageAzureV2ManagedDiskDetailsResponseOutputWithContext(ctx context.Context) InMageAzureV2ManagedDiskDetailsResponseOutput {
	return o
}

// The DiskEncryptionSet ARM ID.
func (o InMageAzureV2ManagedDiskDetailsResponseOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ManagedDiskDetailsResponse) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The disk id.
func (o InMageAzureV2ManagedDiskDetailsResponseOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ManagedDiskDetailsResponse) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// The replica disk type.
func (o InMageAzureV2ManagedDiskDetailsResponseOutput) ReplicaDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ManagedDiskDetailsResponse) *string { return v.ReplicaDiskType }).(pulumi.StringPtrOutput)
}

// Seed managed disk Id.
func (o InMageAzureV2ManagedDiskDetailsResponseOutput) SeedManagedDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ManagedDiskDetailsResponse) *string { return v.SeedManagedDiskId }).(pulumi.StringPtrOutput)
}

// The target disk name.
func (o InMageAzureV2ManagedDiskDetailsResponseOutput) TargetDiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ManagedDiskDetailsResponse) *string { return v.TargetDiskName }).(pulumi.StringPtrOutput)
}

type InMageAzureV2ManagedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InMageAzureV2ManagedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageAzureV2ManagedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2ManagedDiskDetailsResponseArrayOutput) ToInMageAzureV2ManagedDiskDetailsResponseArrayOutput() InMageAzureV2ManagedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageAzureV2ManagedDiskDetailsResponseArrayOutput) ToInMageAzureV2ManagedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) InMageAzureV2ManagedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageAzureV2ManagedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) InMageAzureV2ManagedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageAzureV2ManagedDiskDetailsResponse {
		return vs[0].([]InMageAzureV2ManagedDiskDetailsResponse)[vs[1].(int)]
	}).(InMageAzureV2ManagedDiskDetailsResponseOutput)
}

// InMage Azure v2 specific protection profile details.
type InMageAzureV2PolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'InMageAzureV2'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// InMage Azure v2 specific protection profile details.
type InMageAzureV2PolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageAzureV2PolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2PolicyDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2PolicyDetailsResponseOutput) ToInMageAzureV2PolicyDetailsResponseOutput() InMageAzureV2PolicyDetailsResponseOutput {
	return o
}

func (o InMageAzureV2PolicyDetailsResponseOutput) ToInMageAzureV2PolicyDetailsResponseOutputWithContext(ctx context.Context) InMageAzureV2PolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o InMageAzureV2PolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o InMageAzureV2PolicyDetailsResponseOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'InMageAzureV2'.
func (o InMageAzureV2PolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o InMageAzureV2PolicyDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMageAzureV2PolicyDetailsResponseOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o InMageAzureV2PolicyDetailsResponseOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyDetailsResponse) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

type InMageAzureV2PolicyDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageAzureV2PolicyDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageAzureV2PolicyDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2PolicyDetailsResponsePtrOutput) ToInMageAzureV2PolicyDetailsResponsePtrOutput() InMageAzureV2PolicyDetailsResponsePtrOutput {
	return o
}

func (o InMageAzureV2PolicyDetailsResponsePtrOutput) ToInMageAzureV2PolicyDetailsResponsePtrOutputWithContext(ctx context.Context) InMageAzureV2PolicyDetailsResponsePtrOutput {
	return o
}

func (o InMageAzureV2PolicyDetailsResponsePtrOutput) Elem() InMageAzureV2PolicyDetailsResponseOutput {
	return o.ApplyT(func(v *InMageAzureV2PolicyDetailsResponse) InMageAzureV2PolicyDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageAzureV2PolicyDetailsResponse
		return ret
	}).(InMageAzureV2PolicyDetailsResponseOutput)
}

// The app consistent snapshot frequency in minutes.
func (o InMageAzureV2PolicyDetailsResponsePtrOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2PolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.AppConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o InMageAzureV2PolicyDetailsResponsePtrOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2PolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.CrashConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'InMageAzureV2'.
func (o InMageAzureV2PolicyDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2PolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o InMageAzureV2PolicyDetailsResponsePtrOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2PolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmSyncStatus
	}).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMageAzureV2PolicyDetailsResponsePtrOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2PolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointHistory
	}).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o InMageAzureV2PolicyDetailsResponsePtrOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2PolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointThresholdInMinutes
	}).(pulumi.IntPtrOutput)
}

// VMWare Azure specific policy Input.
type InMageAzureV2PolicyInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	// Expected value is 'InMageAzureV2'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// InMageAzureV2PolicyInputInput is an input type that accepts InMageAzureV2PolicyInputArgs and InMageAzureV2PolicyInputOutput values.
// You can construct a concrete instance of `InMageAzureV2PolicyInputInput` via:
//
//	InMageAzureV2PolicyInputArgs{...}
type InMageAzureV2PolicyInputInput interface {
	pulumi.Input

	ToInMageAzureV2PolicyInputOutput() InMageAzureV2PolicyInputOutput
	ToInMageAzureV2PolicyInputOutputWithContext(context.Context) InMageAzureV2PolicyInputOutput
}

// VMWare Azure specific policy Input.
type InMageAzureV2PolicyInputArgs struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	// Expected value is 'InMageAzureV2'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus pulumi.StringInput `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory pulumi.IntPtrInput `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes pulumi.IntPtrInput `pulumi:"recoveryPointThresholdInMinutes"`
}

func (InMageAzureV2PolicyInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2PolicyInput)(nil)).Elem()
}

func (i InMageAzureV2PolicyInputArgs) ToInMageAzureV2PolicyInputOutput() InMageAzureV2PolicyInputOutput {
	return i.ToInMageAzureV2PolicyInputOutputWithContext(context.Background())
}

func (i InMageAzureV2PolicyInputArgs) ToInMageAzureV2PolicyInputOutputWithContext(ctx context.Context) InMageAzureV2PolicyInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageAzureV2PolicyInputOutput)
}

func (i InMageAzureV2PolicyInputArgs) ToInMageAzureV2PolicyInputPtrOutput() InMageAzureV2PolicyInputPtrOutput {
	return i.ToInMageAzureV2PolicyInputPtrOutputWithContext(context.Background())
}

func (i InMageAzureV2PolicyInputArgs) ToInMageAzureV2PolicyInputPtrOutputWithContext(ctx context.Context) InMageAzureV2PolicyInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageAzureV2PolicyInputOutput).ToInMageAzureV2PolicyInputPtrOutputWithContext(ctx)
}

// InMageAzureV2PolicyInputPtrInput is an input type that accepts InMageAzureV2PolicyInputArgs, InMageAzureV2PolicyInputPtr and InMageAzureV2PolicyInputPtrOutput values.
// You can construct a concrete instance of `InMageAzureV2PolicyInputPtrInput` via:
//
//	        InMageAzureV2PolicyInputArgs{...}
//
//	or:
//
//	        nil
type InMageAzureV2PolicyInputPtrInput interface {
	pulumi.Input

	ToInMageAzureV2PolicyInputPtrOutput() InMageAzureV2PolicyInputPtrOutput
	ToInMageAzureV2PolicyInputPtrOutputWithContext(context.Context) InMageAzureV2PolicyInputPtrOutput
}

type inMageAzureV2PolicyInputPtrType InMageAzureV2PolicyInputArgs

func InMageAzureV2PolicyInputPtr(v *InMageAzureV2PolicyInputArgs) InMageAzureV2PolicyInputPtrInput {
	return (*inMageAzureV2PolicyInputPtrType)(v)
}

func (*inMageAzureV2PolicyInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageAzureV2PolicyInput)(nil)).Elem()
}

func (i *inMageAzureV2PolicyInputPtrType) ToInMageAzureV2PolicyInputPtrOutput() InMageAzureV2PolicyInputPtrOutput {
	return i.ToInMageAzureV2PolicyInputPtrOutputWithContext(context.Background())
}

func (i *inMageAzureV2PolicyInputPtrType) ToInMageAzureV2PolicyInputPtrOutputWithContext(ctx context.Context) InMageAzureV2PolicyInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageAzureV2PolicyInputPtrOutput)
}

// VMWare Azure specific policy Input.
type InMageAzureV2PolicyInputOutput struct{ *pulumi.OutputState }

func (InMageAzureV2PolicyInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2PolicyInput)(nil)).Elem()
}

func (o InMageAzureV2PolicyInputOutput) ToInMageAzureV2PolicyInputOutput() InMageAzureV2PolicyInputOutput {
	return o
}

func (o InMageAzureV2PolicyInputOutput) ToInMageAzureV2PolicyInputOutputWithContext(ctx context.Context) InMageAzureV2PolicyInputOutput {
	return o
}

func (o InMageAzureV2PolicyInputOutput) ToInMageAzureV2PolicyInputPtrOutput() InMageAzureV2PolicyInputPtrOutput {
	return o.ToInMageAzureV2PolicyInputPtrOutputWithContext(context.Background())
}

func (o InMageAzureV2PolicyInputOutput) ToInMageAzureV2PolicyInputPtrOutputWithContext(ctx context.Context) InMageAzureV2PolicyInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InMageAzureV2PolicyInput) *InMageAzureV2PolicyInput {
		return &v
	}).(InMageAzureV2PolicyInputPtrOutput)
}

// The app consistent snapshot frequency (in minutes).
func (o InMageAzureV2PolicyInputOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyInput) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency (in minutes).
func (o InMageAzureV2PolicyInputOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyInput) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The class type.
// Expected value is 'InMageAzureV2'.
func (o InMageAzureV2PolicyInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
func (o InMageAzureV2PolicyInputOutput) MultiVmSyncStatus() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyInput) string { return v.MultiVmSyncStatus }).(pulumi.StringOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMageAzureV2PolicyInputOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyInput) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o InMageAzureV2PolicyInputOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2PolicyInput) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

type InMageAzureV2PolicyInputPtrOutput struct{ *pulumi.OutputState }

func (InMageAzureV2PolicyInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageAzureV2PolicyInput)(nil)).Elem()
}

func (o InMageAzureV2PolicyInputPtrOutput) ToInMageAzureV2PolicyInputPtrOutput() InMageAzureV2PolicyInputPtrOutput {
	return o
}

func (o InMageAzureV2PolicyInputPtrOutput) ToInMageAzureV2PolicyInputPtrOutputWithContext(ctx context.Context) InMageAzureV2PolicyInputPtrOutput {
	return o
}

func (o InMageAzureV2PolicyInputPtrOutput) Elem() InMageAzureV2PolicyInputOutput {
	return o.ApplyT(func(v *InMageAzureV2PolicyInput) InMageAzureV2PolicyInput {
		if v != nil {
			return *v
		}
		var ret InMageAzureV2PolicyInput
		return ret
	}).(InMageAzureV2PolicyInputOutput)
}

// The app consistent snapshot frequency (in minutes).
func (o InMageAzureV2PolicyInputPtrOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2PolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.AppConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency (in minutes).
func (o InMageAzureV2PolicyInputPtrOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2PolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.CrashConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// The class type.
// Expected value is 'InMageAzureV2'.
func (o InMageAzureV2PolicyInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2PolicyInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
func (o InMageAzureV2PolicyInputPtrOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2PolicyInput) *string {
		if v == nil {
			return nil
		}
		return &v.MultiVmSyncStatus
	}).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMageAzureV2PolicyInputPtrOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2PolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointHistory
	}).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o InMageAzureV2PolicyInputPtrOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2PolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointThresholdInMinutes
	}).(pulumi.IntPtrOutput)
}

// InMageAzureV2 protected disk details.
type InMageAzureV2ProtectedDiskDetailsResponse struct {
	// The disk capacity in bytes.
	DiskCapacityInBytes *float64 `pulumi:"diskCapacityInBytes"`
	// The disk id.
	DiskId *string `pulumi:"diskId"`
	// The disk name.
	DiskName *string `pulumi:"diskName"`
	// A value indicating whether disk is resized.
	DiskResized *string `pulumi:"diskResized"`
	// The disk file system capacity in bytes.
	FileSystemCapacityInBytes *float64 `pulumi:"fileSystemCapacityInBytes"`
	// The health error code for the disk.
	HealthErrorCode *string `pulumi:"healthErrorCode"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// The Progress Health.
	ProgressHealth *string `pulumi:"progressHealth"`
	// The Progress Status.
	ProgressStatus *string `pulumi:"progressStatus"`
	// The protection stage.
	ProtectionStage *string `pulumi:"protectionStage"`
	// The PS data transit in MB.
	PsDataInMegaBytes *float64 `pulumi:"psDataInMegaBytes"`
	// The resync duration in seconds.
	ResyncDurationInSeconds *float64 `pulumi:"resyncDurationInSeconds"`
	// The resync last 15 minutes transferred bytes.
	ResyncLast15MinutesTransferredBytes *float64 `pulumi:"resyncLast15MinutesTransferredBytes"`
	// The last data transfer time in UTC.
	ResyncLastDataTransferTimeUTC *string `pulumi:"resyncLastDataTransferTimeUTC"`
	// The resync processed bytes.
	ResyncProcessedBytes *float64 `pulumi:"resyncProcessedBytes"`
	// The resync progress percentage.
	ResyncProgressPercentage *int `pulumi:"resyncProgressPercentage"`
	// A value indicating whether resync is required for this disk.
	ResyncRequired *string `pulumi:"resyncRequired"`
	// The resync start time.
	ResyncStartTime *string `pulumi:"resyncStartTime"`
	// The resync total transferred bytes.
	ResyncTotalTransferredBytes *float64 `pulumi:"resyncTotalTransferredBytes"`
	// The RPO in seconds.
	RpoInSeconds *float64 `pulumi:"rpoInSeconds"`
	// The seconds to take for switch provider.
	SecondsToTakeSwitchProvider *float64 `pulumi:"secondsToTakeSwitchProvider"`
	// The source data transit in MB.
	SourceDataInMegaBytes *float64 `pulumi:"sourceDataInMegaBytes"`
	// The target data transit in MB.
	TargetDataInMegaBytes *float64 `pulumi:"targetDataInMegaBytes"`
}

// InMageAzureV2 protected disk details.
type InMageAzureV2ProtectedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageAzureV2ProtectedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2ProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ToInMageAzureV2ProtectedDiskDetailsResponseOutput() InMageAzureV2ProtectedDiskDetailsResponseOutput {
	return o
}

func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ToInMageAzureV2ProtectedDiskDetailsResponseOutputWithContext(ctx context.Context) InMageAzureV2ProtectedDiskDetailsResponseOutput {
	return o
}

// The disk capacity in bytes.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) DiskCapacityInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 { return v.DiskCapacityInBytes }).(pulumi.Float64PtrOutput)
}

// The disk id.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// The disk name.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.DiskName }).(pulumi.StringPtrOutput)
}

// A value indicating whether disk is resized.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) DiskResized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.DiskResized }).(pulumi.StringPtrOutput)
}

// The disk file system capacity in bytes.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) FileSystemCapacityInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 { return v.FileSystemCapacityInBytes }).(pulumi.Float64PtrOutput)
}

// The health error code for the disk.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) HealthErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.HealthErrorCode }).(pulumi.StringPtrOutput)
}

// The last RPO calculated time.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// The Progress Health.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ProgressHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.ProgressHealth }).(pulumi.StringPtrOutput)
}

// The Progress Status.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ProgressStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.ProgressStatus }).(pulumi.StringPtrOutput)
}

// The protection stage.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ProtectionStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.ProtectionStage }).(pulumi.StringPtrOutput)
}

// The PS data transit in MB.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) PsDataInMegaBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 { return v.PsDataInMegaBytes }).(pulumi.Float64PtrOutput)
}

// The resync duration in seconds.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ResyncDurationInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 { return v.ResyncDurationInSeconds }).(pulumi.Float64PtrOutput)
}

// The resync last 15 minutes transferred bytes.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ResyncLast15MinutesTransferredBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 {
		return v.ResyncLast15MinutesTransferredBytes
	}).(pulumi.Float64PtrOutput)
}

// The last data transfer time in UTC.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ResyncLastDataTransferTimeUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.ResyncLastDataTransferTimeUTC }).(pulumi.StringPtrOutput)
}

// The resync processed bytes.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ResyncProcessedBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 { return v.ResyncProcessedBytes }).(pulumi.Float64PtrOutput)
}

// The resync progress percentage.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ResyncProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *int { return v.ResyncProgressPercentage }).(pulumi.IntPtrOutput)
}

// A value indicating whether resync is required for this disk.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ResyncRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.ResyncRequired }).(pulumi.StringPtrOutput)
}

// The resync start time.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ResyncStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *string { return v.ResyncStartTime }).(pulumi.StringPtrOutput)
}

// The resync total transferred bytes.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) ResyncTotalTransferredBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 { return v.ResyncTotalTransferredBytes }).(pulumi.Float64PtrOutput)
}

// The RPO in seconds.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) RpoInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 { return v.RpoInSeconds }).(pulumi.Float64PtrOutput)
}

// The seconds to take for switch provider.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) SecondsToTakeSwitchProvider() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 { return v.SecondsToTakeSwitchProvider }).(pulumi.Float64PtrOutput)
}

// The source data transit in MB.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) SourceDataInMegaBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 { return v.SourceDataInMegaBytes }).(pulumi.Float64PtrOutput)
}

// The target data transit in MB.
func (o InMageAzureV2ProtectedDiskDetailsResponseOutput) TargetDataInMegaBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ProtectedDiskDetailsResponse) *float64 { return v.TargetDataInMegaBytes }).(pulumi.Float64PtrOutput)
}

type InMageAzureV2ProtectedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InMageAzureV2ProtectedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageAzureV2ProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2ProtectedDiskDetailsResponseArrayOutput) ToInMageAzureV2ProtectedDiskDetailsResponseArrayOutput() InMageAzureV2ProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageAzureV2ProtectedDiskDetailsResponseArrayOutput) ToInMageAzureV2ProtectedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) InMageAzureV2ProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageAzureV2ProtectedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) InMageAzureV2ProtectedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageAzureV2ProtectedDiskDetailsResponse {
		return vs[0].([]InMageAzureV2ProtectedDiskDetailsResponse)[vs[1].(int)]
	}).(InMageAzureV2ProtectedDiskDetailsResponseOutput)
}

// InMageAzureV2 provider specific settings.
type InMageAzureV2ReplicationDetailsResponse struct {
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// The agent version.
	AgentVersion *string `pulumi:"agentVersion"`
	// A value indicating all available inplace OS Upgrade configurations.
	AllAvailableOSUpgradeConfigurations []OSUpgradeSupportedVersionsResponse `pulumi:"allAvailableOSUpgradeConfigurations"`
	// Azure VM Disk details.
	AzureVMDiskDetails []AzureVmDiskDetailsResponse `pulumi:"azureVMDiskDetails"`
	// The target generation for this protected item.
	AzureVmGeneration *string `pulumi:"azureVmGeneration"`
	// The compressed data change rate in MB.
	CompressedDataRateInMB *float64 `pulumi:"compressedDataRateInMB"`
	// The datastores of the on-premise machine. Value can be list of strings that contain datastore names.
	Datastores []string `pulumi:"datastores"`
	// A value indicating the discovery type of the machine. Value can be vCenter or physical.
	DiscoveryType *string `pulumi:"discoveryType"`
	// A value indicating whether any disk is resized for this VM.
	DiskResized *string `pulumi:"diskResized"`
	// The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
	EnableRdpOnTargetOption *string `pulumi:"enableRdpOnTargetOption"`
	// The firmware type of this protected item.
	FirmwareType *string `pulumi:"firmwareType"`
	// The infrastructure VM Id.
	InfrastructureVmId *string `pulumi:"infrastructureVmId"`
	// Gets the Instance type.
	// Expected value is 'InMageAzureV2'.
	InstanceType string `pulumi:"instanceType"`
	// The source IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// A value indicating whether additional IR stats are available or not.
	IsAdditionalStatsAvailable *bool `pulumi:"isAdditionalStatsAvailable"`
	// A value indicating whether installed agent needs to be updated.
	IsAgentUpdateRequired *string `pulumi:"isAgentUpdateRequired"`
	// A value indicating whether the source server requires a restart after update.
	IsRebootAfterUpdateRequired *string `pulumi:"isRebootAfterUpdateRequired"`
	// The last heartbeat received from the source server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The last recovery point received time.
	LastRecoveryPointReceived string `pulumi:"lastRecoveryPointReceived"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// The last update time received from on-prem components.
	LastUpdateReceivedTime *string `pulumi:"lastUpdateReceivedTime"`
	// License Type of the VM to be used.
	LicenseType *string `pulumi:"licenseType"`
	// The master target Id.
	MasterTargetId *string `pulumi:"masterTargetId"`
	// The multi vm group Id.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi vm group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// A value indicating whether multi vm sync is enabled or disabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The id of the disk containing the OS.
	OsDiskId *string `pulumi:"osDiskId"`
	// The name of the OS on the VM.
	OsName string `pulumi:"osName"`
	// The type of the OS on the VM.
	OsType *string `pulumi:"osType"`
	// The OS Version of the protected item.
	OsVersion *string `pulumi:"osVersion"`
	// The process server Id.
	ProcessServerId *string `pulumi:"processServerId"`
	// The process server name.
	ProcessServerName *string `pulumi:"processServerName"`
	// The list of protected disks.
	ProtectedDisks []InMageAzureV2ProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The list of protected managed disks.
	ProtectedManagedDisks []InMageAzureV2ManagedDiskDetailsResponse `pulumi:"protectedManagedDisks"`
	// The protection stage.
	ProtectionStage *string `pulumi:"protectionStage"`
	// The recovery availability set Id.
	RecoveryAvailabilitySetId *string `pulumi:"recoveryAvailabilitySetId"`
	// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
	RecoveryAzureLogStorageAccountId *string `pulumi:"recoveryAzureLogStorageAccountId"`
	// The target resource group Id.
	RecoveryAzureResourceGroupId *string `pulumi:"recoveryAzureResourceGroupId"`
	// The recovery Azure storage account.
	RecoveryAzureStorageAccount *string `pulumi:"recoveryAzureStorageAccount"`
	// Recovery Azure given name.
	RecoveryAzureVMName *string `pulumi:"recoveryAzureVMName"`
	// The Recovery Azure VM size.
	RecoveryAzureVMSize *string `pulumi:"recoveryAzureVMSize"`
	// The replica id of the protected item.
	ReplicaId *string `pulumi:"replicaId"`
	// The resync progress percentage.
	ResyncProgressPercentage *int `pulumi:"resyncProgressPercentage"`
	// The RPO in seconds.
	RpoInSeconds *float64 `pulumi:"rpoInSeconds"`
	// The tags for the seed managed disks.
	SeedManagedDiskTags map[string]string `pulumi:"seedManagedDiskTags"`
	// The selected recovery azure network Id.
	SelectedRecoveryAzureNetworkId *string `pulumi:"selectedRecoveryAzureNetworkId"`
	// The selected source nic Id which will be used as the primary nic during failover.
	SelectedSourceNicId *string `pulumi:"selectedSourceNicId"`
	// The test failover virtual network.
	SelectedTfoAzureNetworkId *string `pulumi:"selectedTfoAzureNetworkId"`
	// The CPU count of the VM on the primary side.
	SourceVmCpuCount *int `pulumi:"sourceVmCpuCount"`
	// The RAM size of the VM on the primary side.
	SourceVmRamSizeInMB *int `pulumi:"sourceVmRamSizeInMB"`
	// The SQL Server license type.
	SqlServerLicenseType *string `pulumi:"sqlServerLicenseType"`
	// A value indicating the inplace OS Upgrade version.
	SupportedOSVersions []string `pulumi:"supportedOSVersions"`
	// The switch provider blocking error information.
	SwitchProviderBlockingErrorDetails []InMageAzureV2SwitchProviderBlockingErrorDetailsResponse `pulumi:"switchProviderBlockingErrorDetails"`
	// The switch provider blocking error information.
	SwitchProviderDetails *InMageAzureV2SwitchProviderDetailsResponse `pulumi:"switchProviderDetails"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The tags for the target managed disks.
	TargetManagedDiskTags map[string]string `pulumi:"targetManagedDiskTags"`
	// The tags for the target NICs.
	TargetNicTags map[string]string `pulumi:"targetNicTags"`
	// The target proximity placement group Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.
	TargetVmId *string `pulumi:"targetVmId"`
	// The target VM tags.
	TargetVmTags map[string]string `pulumi:"targetVmTags"`
	// The total transferred data in bytes.
	TotalDataTransferred *float64 `pulumi:"totalDataTransferred"`
	// The progress health.
	TotalProgressHealth *string `pulumi:"totalProgressHealth"`
	// The uncompressed data change rate in MB.
	UncompressedDataRateInMB *float64 `pulumi:"uncompressedDataRateInMB"`
	// A value indicating whether managed disks should be used during failover.
	UseManagedDisks *string `pulumi:"useManagedDisks"`
	// The vCenter infrastructure Id.
	VCenterInfrastructureId *string `pulumi:"vCenterInfrastructureId"`
	// The validation errors of the on-premise machine Value can be list of validation errors.
	ValidationErrors []HealthErrorResponse `pulumi:"validationErrors"`
	// The OS disk VHD name.
	VhdName *string `pulumi:"vhdName"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// InMageAzureV2 provider specific settings.
type InMageAzureV2ReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageAzureV2ReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2ReplicationDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2ReplicationDetailsResponseOutput) ToInMageAzureV2ReplicationDetailsResponseOutput() InMageAzureV2ReplicationDetailsResponseOutput {
	return o
}

func (o InMageAzureV2ReplicationDetailsResponseOutput) ToInMageAzureV2ReplicationDetailsResponseOutputWithContext(ctx context.Context) InMageAzureV2ReplicationDetailsResponseOutput {
	return o
}

// Agent expiry date.
func (o InMageAzureV2ReplicationDetailsResponseOutput) AgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.AgentExpiryDate }).(pulumi.StringPtrOutput)
}

// The agent version.
func (o InMageAzureV2ReplicationDetailsResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// A value indicating all available inplace OS Upgrade configurations.
func (o InMageAzureV2ReplicationDetailsResponseOutput) AllAvailableOSUpgradeConfigurations() OSUpgradeSupportedVersionsResponseArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []OSUpgradeSupportedVersionsResponse {
		return v.AllAvailableOSUpgradeConfigurations
	}).(OSUpgradeSupportedVersionsResponseArrayOutput)
}

// Azure VM Disk details.
func (o InMageAzureV2ReplicationDetailsResponseOutput) AzureVMDiskDetails() AzureVmDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []AzureVmDiskDetailsResponse {
		return v.AzureVMDiskDetails
	}).(AzureVmDiskDetailsResponseArrayOutput)
}

// The target generation for this protected item.
func (o InMageAzureV2ReplicationDetailsResponseOutput) AzureVmGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.AzureVmGeneration }).(pulumi.StringPtrOutput)
}

// The compressed data change rate in MB.
func (o InMageAzureV2ReplicationDetailsResponseOutput) CompressedDataRateInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *float64 { return v.CompressedDataRateInMB }).(pulumi.Float64PtrOutput)
}

// The datastores of the on-premise machine. Value can be list of strings that contain datastore names.
func (o InMageAzureV2ReplicationDetailsResponseOutput) Datastores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []string { return v.Datastores }).(pulumi.StringArrayOutput)
}

// A value indicating the discovery type of the machine. Value can be vCenter or physical.
func (o InMageAzureV2ReplicationDetailsResponseOutput) DiscoveryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.DiscoveryType }).(pulumi.StringPtrOutput)
}

// A value indicating whether any disk is resized for this VM.
func (o InMageAzureV2ReplicationDetailsResponseOutput) DiskResized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.DiskResized }).(pulumi.StringPtrOutput)
}

// The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
func (o InMageAzureV2ReplicationDetailsResponseOutput) EnableRdpOnTargetOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.EnableRdpOnTargetOption }).(pulumi.StringPtrOutput)
}

// The firmware type of this protected item.
func (o InMageAzureV2ReplicationDetailsResponseOutput) FirmwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.FirmwareType }).(pulumi.StringPtrOutput)
}

// The infrastructure VM Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) InfrastructureVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.InfrastructureVmId }).(pulumi.StringPtrOutput)
}

// Gets the Instance type.
// Expected value is 'InMageAzureV2'.
func (o InMageAzureV2ReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The source IP address.
func (o InMageAzureV2ReplicationDetailsResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// A value indicating whether additional IR stats are available or not.
func (o InMageAzureV2ReplicationDetailsResponseOutput) IsAdditionalStatsAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *bool { return v.IsAdditionalStatsAvailable }).(pulumi.BoolPtrOutput)
}

// A value indicating whether installed agent needs to be updated.
func (o InMageAzureV2ReplicationDetailsResponseOutput) IsAgentUpdateRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.IsAgentUpdateRequired }).(pulumi.StringPtrOutput)
}

// A value indicating whether the source server requires a restart after update.
func (o InMageAzureV2ReplicationDetailsResponseOutput) IsRebootAfterUpdateRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.IsRebootAfterUpdateRequired }).(pulumi.StringPtrOutput)
}

// The last heartbeat received from the source server.
func (o InMageAzureV2ReplicationDetailsResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The last recovery point received time.
func (o InMageAzureV2ReplicationDetailsResponseOutput) LastRecoveryPointReceived() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) string { return v.LastRecoveryPointReceived }).(pulumi.StringOutput)
}

// The last RPO calculated time.
func (o InMageAzureV2ReplicationDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// The last update time received from on-prem components.
func (o InMageAzureV2ReplicationDetailsResponseOutput) LastUpdateReceivedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.LastUpdateReceivedTime }).(pulumi.StringPtrOutput)
}

// License Type of the VM to be used.
func (o InMageAzureV2ReplicationDetailsResponseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// The master target Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) MasterTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.MasterTargetId }).(pulumi.StringPtrOutput)
}

// The multi vm group Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.MultiVmGroupId }).(pulumi.StringPtrOutput)
}

// The multi vm group name.
func (o InMageAzureV2ReplicationDetailsResponseOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.MultiVmGroupName }).(pulumi.StringPtrOutput)
}

// A value indicating whether multi vm sync is enabled or disabled.
func (o InMageAzureV2ReplicationDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The id of the disk containing the OS.
func (o InMageAzureV2ReplicationDetailsResponseOutput) OsDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.OsDiskId }).(pulumi.StringPtrOutput)
}

// The name of the OS on the VM.
func (o InMageAzureV2ReplicationDetailsResponseOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) string { return v.OsName }).(pulumi.StringOutput)
}

// The type of the OS on the VM.
func (o InMageAzureV2ReplicationDetailsResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The OS Version of the protected item.
func (o InMageAzureV2ReplicationDetailsResponseOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.ProcessServerId }).(pulumi.StringPtrOutput)
}

// The process server name.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ProcessServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.ProcessServerName }).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ProtectedDisks() InMageAzureV2ProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []InMageAzureV2ProtectedDiskDetailsResponse {
		return v.ProtectedDisks
	}).(InMageAzureV2ProtectedDiskDetailsResponseArrayOutput)
}

// The list of protected managed disks.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ProtectedManagedDisks() InMageAzureV2ManagedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []InMageAzureV2ManagedDiskDetailsResponse {
		return v.ProtectedManagedDisks
	}).(InMageAzureV2ManagedDiskDetailsResponseArrayOutput)
}

// The protection stage.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ProtectionStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.ProtectionStage }).(pulumi.StringPtrOutput)
}

// The recovery availability set Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAzureLogStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAzureLogStorageAccountId }).(pulumi.StringPtrOutput)
}

// The target resource group Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAzureResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAzureResourceGroupId }).(pulumi.StringPtrOutput)
}

// The recovery Azure storage account.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAzureStorageAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAzureStorageAccount }).(pulumi.StringPtrOutput)
}

// Recovery Azure given name.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAzureVMName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAzureVMName }).(pulumi.StringPtrOutput)
}

// The Recovery Azure VM size.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RecoveryAzureVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.RecoveryAzureVMSize }).(pulumi.StringPtrOutput)
}

// The replica id of the protected item.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ReplicaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.ReplicaId }).(pulumi.StringPtrOutput)
}

// The resync progress percentage.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ResyncProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *int { return v.ResyncProgressPercentage }).(pulumi.IntPtrOutput)
}

// The RPO in seconds.
func (o InMageAzureV2ReplicationDetailsResponseOutput) RpoInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *float64 { return v.RpoInSeconds }).(pulumi.Float64PtrOutput)
}

// The tags for the seed managed disks.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SeedManagedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) map[string]string { return v.SeedManagedDiskTags }).(pulumi.StringMapOutput)
}

// The selected recovery azure network Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SelectedRecoveryAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.SelectedRecoveryAzureNetworkId }).(pulumi.StringPtrOutput)
}

// The selected source nic Id which will be used as the primary nic during failover.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SelectedSourceNicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.SelectedSourceNicId }).(pulumi.StringPtrOutput)
}

// The test failover virtual network.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SelectedTfoAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.SelectedTfoAzureNetworkId }).(pulumi.StringPtrOutput)
}

// The CPU count of the VM on the primary side.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SourceVmCpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *int { return v.SourceVmCpuCount }).(pulumi.IntPtrOutput)
}

// The RAM size of the VM on the primary side.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SourceVmRamSizeInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *int { return v.SourceVmRamSizeInMB }).(pulumi.IntPtrOutput)
}

// The SQL Server license type.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SqlServerLicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.SqlServerLicenseType }).(pulumi.StringPtrOutput)
}

// A value indicating the inplace OS Upgrade version.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SupportedOSVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []string { return v.SupportedOSVersions }).(pulumi.StringArrayOutput)
}

// The switch provider blocking error information.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SwitchProviderBlockingErrorDetails() InMageAzureV2SwitchProviderBlockingErrorDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []InMageAzureV2SwitchProviderBlockingErrorDetailsResponse {
		return v.SwitchProviderBlockingErrorDetails
	}).(InMageAzureV2SwitchProviderBlockingErrorDetailsResponseArrayOutput)
}

// The switch provider blocking error information.
func (o InMageAzureV2ReplicationDetailsResponseOutput) SwitchProviderDetails() InMageAzureV2SwitchProviderDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *InMageAzureV2SwitchProviderDetailsResponse {
		return v.SwitchProviderDetails
	}).(InMageAzureV2SwitchProviderDetailsResponsePtrOutput)
}

// The target availability zone.
func (o InMageAzureV2ReplicationDetailsResponseOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.TargetAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The tags for the target managed disks.
func (o InMageAzureV2ReplicationDetailsResponseOutput) TargetManagedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) map[string]string { return v.TargetManagedDiskTags }).(pulumi.StringMapOutput)
}

// The tags for the target NICs.
func (o InMageAzureV2ReplicationDetailsResponseOutput) TargetNicTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) map[string]string { return v.TargetNicTags }).(pulumi.StringMapOutput)
}

// The target proximity placement group Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.TargetProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.
func (o InMageAzureV2ReplicationDetailsResponseOutput) TargetVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.TargetVmId }).(pulumi.StringPtrOutput)
}

// The target VM tags.
func (o InMageAzureV2ReplicationDetailsResponseOutput) TargetVmTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) map[string]string { return v.TargetVmTags }).(pulumi.StringMapOutput)
}

// The total transferred data in bytes.
func (o InMageAzureV2ReplicationDetailsResponseOutput) TotalDataTransferred() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *float64 { return v.TotalDataTransferred }).(pulumi.Float64PtrOutput)
}

// The progress health.
func (o InMageAzureV2ReplicationDetailsResponseOutput) TotalProgressHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.TotalProgressHealth }).(pulumi.StringPtrOutput)
}

// The uncompressed data change rate in MB.
func (o InMageAzureV2ReplicationDetailsResponseOutput) UncompressedDataRateInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *float64 { return v.UncompressedDataRateInMB }).(pulumi.Float64PtrOutput)
}

// A value indicating whether managed disks should be used during failover.
func (o InMageAzureV2ReplicationDetailsResponseOutput) UseManagedDisks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.UseManagedDisks }).(pulumi.StringPtrOutput)
}

// The vCenter infrastructure Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VCenterInfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.VCenterInfrastructureId }).(pulumi.StringPtrOutput)
}

// The validation errors of the on-premise machine Value can be list of validation errors.
func (o InMageAzureV2ReplicationDetailsResponseOutput) ValidationErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []HealthErrorResponse { return v.ValidationErrors }).(HealthErrorResponseArrayOutput)
}

// The OS disk VHD name.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VhdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.VhdName }).(pulumi.StringPtrOutput)
}

// The virtual machine Id.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o InMageAzureV2ReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageAzureV2ReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

type InMageAzureV2ReplicationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageAzureV2ReplicationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageAzureV2ReplicationDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) ToInMageAzureV2ReplicationDetailsResponsePtrOutput() InMageAzureV2ReplicationDetailsResponsePtrOutput {
	return o
}

func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) ToInMageAzureV2ReplicationDetailsResponsePtrOutputWithContext(ctx context.Context) InMageAzureV2ReplicationDetailsResponsePtrOutput {
	return o
}

func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) Elem() InMageAzureV2ReplicationDetailsResponseOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) InMageAzureV2ReplicationDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageAzureV2ReplicationDetailsResponse
		return ret
	}).(InMageAzureV2ReplicationDetailsResponseOutput)
}

// Agent expiry date.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) AgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentExpiryDate
	}).(pulumi.StringPtrOutput)
}

// The agent version.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentVersion
	}).(pulumi.StringPtrOutput)
}

// A value indicating all available inplace OS Upgrade configurations.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) AllAvailableOSUpgradeConfigurations() OSUpgradeSupportedVersionsResponseArrayOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) []OSUpgradeSupportedVersionsResponse {
		if v == nil {
			return nil
		}
		return v.AllAvailableOSUpgradeConfigurations
	}).(OSUpgradeSupportedVersionsResponseArrayOutput)
}

// Azure VM Disk details.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) AzureVMDiskDetails() AzureVmDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) []AzureVmDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.AzureVMDiskDetails
	}).(AzureVmDiskDetailsResponseArrayOutput)
}

// The target generation for this protected item.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) AzureVmGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AzureVmGeneration
	}).(pulumi.StringPtrOutput)
}

// The compressed data change rate in MB.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) CompressedDataRateInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.CompressedDataRateInMB
	}).(pulumi.Float64PtrOutput)
}

// The datastores of the on-premise machine. Value can be list of strings that contain datastore names.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) Datastores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.Datastores
	}).(pulumi.StringArrayOutput)
}

// A value indicating the discovery type of the machine. Value can be vCenter or physical.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) DiscoveryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiscoveryType
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether any disk is resized for this VM.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) DiskResized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiskResized
	}).(pulumi.StringPtrOutput)
}

// The selected option to enable RDP\SSH on target vm after failover. String value of SrsDataContract.EnableRDPOnTargetOption enum.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) EnableRdpOnTargetOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnableRdpOnTargetOption
	}).(pulumi.StringPtrOutput)
}

// The firmware type of this protected item.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) FirmwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.FirmwareType
	}).(pulumi.StringPtrOutput)
}

// The infrastructure VM Id.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) InfrastructureVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InfrastructureVmId
	}).(pulumi.StringPtrOutput)
}

// Gets the Instance type.
// Expected value is 'InMageAzureV2'.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The source IP address.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether additional IR stats are available or not.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) IsAdditionalStatsAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsAdditionalStatsAvailable
	}).(pulumi.BoolPtrOutput)
}

// A value indicating whether installed agent needs to be updated.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) IsAgentUpdateRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.IsAgentUpdateRequired
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether the source server requires a restart after update.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) IsRebootAfterUpdateRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.IsRebootAfterUpdateRequired
	}).(pulumi.StringPtrOutput)
}

// The last heartbeat received from the source server.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastHeartbeat
	}).(pulumi.StringPtrOutput)
}

// The last recovery point received time.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) LastRecoveryPointReceived() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastRecoveryPointReceived
	}).(pulumi.StringPtrOutput)
}

// The last RPO calculated time.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRpoCalculatedTime
	}).(pulumi.StringPtrOutput)
}

// The last update time received from on-prem components.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) LastUpdateReceivedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdateReceivedTime
	}).(pulumi.StringPtrOutput)
}

// License Type of the VM to be used.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LicenseType
	}).(pulumi.StringPtrOutput)
}

// The master target Id.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) MasterTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MasterTargetId
	}).(pulumi.StringPtrOutput)
}

// The multi vm group Id.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmGroupId
	}).(pulumi.StringPtrOutput)
}

// The multi vm group name.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmGroupName
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether multi vm sync is enabled or disabled.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmSyncStatus
	}).(pulumi.StringPtrOutput)
}

// The id of the disk containing the OS.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) OsDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsDiskId
	}).(pulumi.StringPtrOutput)
}

// The name of the OS on the VM.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) OsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OsName
	}).(pulumi.StringPtrOutput)
}

// The type of the OS on the VM.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The OS Version of the protected item.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsVersion
	}).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProcessServerId
	}).(pulumi.StringPtrOutput)
}

// The process server name.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) ProcessServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProcessServerName
	}).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) ProtectedDisks() InMageAzureV2ProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) []InMageAzureV2ProtectedDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProtectedDisks
	}).(InMageAzureV2ProtectedDiskDetailsResponseArrayOutput)
}

// The list of protected managed disks.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) ProtectedManagedDisks() InMageAzureV2ManagedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) []InMageAzureV2ManagedDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProtectedManagedDisks
	}).(InMageAzureV2ManagedDiskDetailsResponseArrayOutput)
}

// The protection stage.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) ProtectionStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionStage
	}).(pulumi.StringPtrOutput)
}

// The recovery availability set Id.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) RecoveryAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAvailabilitySetId
	}).(pulumi.StringPtrOutput)
}

// The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) RecoveryAzureLogStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAzureLogStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The target resource group Id.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) RecoveryAzureResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAzureResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// The recovery Azure storage account.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) RecoveryAzureStorageAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAzureStorageAccount
	}).(pulumi.StringPtrOutput)
}

// Recovery Azure given name.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) RecoveryAzureVMName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAzureVMName
	}).(pulumi.StringPtrOutput)
}

// The Recovery Azure VM size.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) RecoveryAzureVMSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryAzureVMSize
	}).(pulumi.StringPtrOutput)
}

// The replica id of the protected item.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) ReplicaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaId
	}).(pulumi.StringPtrOutput)
}

// The resync progress percentage.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) ResyncProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ResyncProgressPercentage
	}).(pulumi.IntPtrOutput)
}

// The RPO in seconds.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) RpoInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.RpoInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The tags for the seed managed disks.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) SeedManagedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.SeedManagedDiskTags
	}).(pulumi.StringMapOutput)
}

// The selected recovery azure network Id.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) SelectedRecoveryAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SelectedRecoveryAzureNetworkId
	}).(pulumi.StringPtrOutput)
}

// The selected source nic Id which will be used as the primary nic during failover.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) SelectedSourceNicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SelectedSourceNicId
	}).(pulumi.StringPtrOutput)
}

// The test failover virtual network.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) SelectedTfoAzureNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SelectedTfoAzureNetworkId
	}).(pulumi.StringPtrOutput)
}

// The CPU count of the VM on the primary side.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) SourceVmCpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SourceVmCpuCount
	}).(pulumi.IntPtrOutput)
}

// The RAM size of the VM on the primary side.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) SourceVmRamSizeInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SourceVmRamSizeInMB
	}).(pulumi.IntPtrOutput)
}

// The SQL Server license type.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) SqlServerLicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SqlServerLicenseType
	}).(pulumi.StringPtrOutput)
}

// A value indicating the inplace OS Upgrade version.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) SupportedOSVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.SupportedOSVersions
	}).(pulumi.StringArrayOutput)
}

// The switch provider blocking error information.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) SwitchProviderBlockingErrorDetails() InMageAzureV2SwitchProviderBlockingErrorDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) []InMageAzureV2SwitchProviderBlockingErrorDetailsResponse {
		if v == nil {
			return nil
		}
		return v.SwitchProviderBlockingErrorDetails
	}).(InMageAzureV2SwitchProviderBlockingErrorDetailsResponseArrayOutput)
}

// The switch provider blocking error information.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) SwitchProviderDetails() InMageAzureV2SwitchProviderDetailsResponsePtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *InMageAzureV2SwitchProviderDetailsResponse {
		if v == nil {
			return nil
		}
		return v.SwitchProviderDetails
	}).(InMageAzureV2SwitchProviderDetailsResponsePtrOutput)
}

// The target availability zone.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetAvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// The tags for the target managed disks.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) TargetManagedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetManagedDiskTags
	}).(pulumi.StringMapOutput)
}

// The tags for the target NICs.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) TargetNicTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetNicTags
	}).(pulumi.StringMapOutput)
}

// The target proximity placement group Id.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetProximityPlacementGroupId
	}).(pulumi.StringPtrOutput)
}

// The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) TargetVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetVmId
	}).(pulumi.StringPtrOutput)
}

// The target VM tags.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) TargetVmTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetVmTags
	}).(pulumi.StringMapOutput)
}

// The total transferred data in bytes.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) TotalDataTransferred() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.TotalDataTransferred
	}).(pulumi.Float64PtrOutput)
}

// The progress health.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) TotalProgressHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TotalProgressHealth
	}).(pulumi.StringPtrOutput)
}

// The uncompressed data change rate in MB.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) UncompressedDataRateInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.UncompressedDataRateInMB
	}).(pulumi.Float64PtrOutput)
}

// A value indicating whether managed disks should be used during failover.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) UseManagedDisks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.UseManagedDisks
	}).(pulumi.StringPtrOutput)
}

// The vCenter infrastructure Id.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) VCenterInfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VCenterInfrastructureId
	}).(pulumi.StringPtrOutput)
}

// The validation errors of the on-premise machine Value can be list of validation errors.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) ValidationErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) []HealthErrorResponse {
		if v == nil {
			return nil
		}
		return v.ValidationErrors
	}).(HealthErrorResponseArrayOutput)
}

// The OS disk VHD name.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) VhdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VhdName
	}).(pulumi.StringPtrOutput)
}

// The virtual machine Id.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmId
	}).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) []VMNicDetailsResponse {
		if v == nil {
			return nil
		}
		return v.VmNics
	}).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmProtectionState
	}).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o InMageAzureV2ReplicationDetailsResponsePtrOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2ReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmProtectionStateDescription
	}).(pulumi.StringPtrOutput)
}

// InMageAzureV2 switch provider blocking error details.
type InMageAzureV2SwitchProviderBlockingErrorDetailsResponse struct {
	// The error code.
	ErrorCode string `pulumi:"errorCode"`
	// The error message.
	ErrorMessage string `pulumi:"errorMessage"`
	// The error message parameters.
	ErrorMessageParameters map[string]string `pulumi:"errorMessageParameters"`
	// The error tags.
	ErrorTags map[string]string `pulumi:"errorTags"`
	// The possible causes.
	PossibleCauses string `pulumi:"possibleCauses"`
	// The recommended action.
	RecommendedAction string `pulumi:"recommendedAction"`
}

// InMageAzureV2 switch provider blocking error details.
type InMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2SwitchProviderBlockingErrorDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutput) ToInMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutput() InMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutput {
	return o
}

func (o InMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutput) ToInMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutputWithContext(ctx context.Context) InMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutput {
	return o
}

// The error code.
func (o InMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutput) ErrorCode() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2SwitchProviderBlockingErrorDetailsResponse) string { return v.ErrorCode }).(pulumi.StringOutput)
}

// The error message.
func (o InMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2SwitchProviderBlockingErrorDetailsResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// The error message parameters.
func (o InMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutput) ErrorMessageParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageAzureV2SwitchProviderBlockingErrorDetailsResponse) map[string]string {
		return v.ErrorMessageParameters
	}).(pulumi.StringMapOutput)
}

// The error tags.
func (o InMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutput) ErrorTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageAzureV2SwitchProviderBlockingErrorDetailsResponse) map[string]string { return v.ErrorTags }).(pulumi.StringMapOutput)
}

// The possible causes.
func (o InMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutput) PossibleCauses() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2SwitchProviderBlockingErrorDetailsResponse) string { return v.PossibleCauses }).(pulumi.StringOutput)
}

// The recommended action.
func (o InMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutput) RecommendedAction() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2SwitchProviderBlockingErrorDetailsResponse) string { return v.RecommendedAction }).(pulumi.StringOutput)
}

type InMageAzureV2SwitchProviderBlockingErrorDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InMageAzureV2SwitchProviderBlockingErrorDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageAzureV2SwitchProviderBlockingErrorDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2SwitchProviderBlockingErrorDetailsResponseArrayOutput) ToInMageAzureV2SwitchProviderBlockingErrorDetailsResponseArrayOutput() InMageAzureV2SwitchProviderBlockingErrorDetailsResponseArrayOutput {
	return o
}

func (o InMageAzureV2SwitchProviderBlockingErrorDetailsResponseArrayOutput) ToInMageAzureV2SwitchProviderBlockingErrorDetailsResponseArrayOutputWithContext(ctx context.Context) InMageAzureV2SwitchProviderBlockingErrorDetailsResponseArrayOutput {
	return o
}

func (o InMageAzureV2SwitchProviderBlockingErrorDetailsResponseArrayOutput) Index(i pulumi.IntInput) InMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageAzureV2SwitchProviderBlockingErrorDetailsResponse {
		return vs[0].([]InMageAzureV2SwitchProviderBlockingErrorDetailsResponse)[vs[1].(int)]
	}).(InMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutput)
}

// InMageAzureV2 switch provider details.
type InMageAzureV2SwitchProviderDetailsResponse struct {
	// The target appliance Id.
	TargetApplianceId string `pulumi:"targetApplianceId"`
	// The target fabric Id.
	TargetFabricId string `pulumi:"targetFabricId"`
	// The target resource Id.
	TargetResourceId string `pulumi:"targetResourceId"`
	// The target vault Id.
	TargetVaultId string `pulumi:"targetVaultId"`
}

// InMageAzureV2 switch provider details.
type InMageAzureV2SwitchProviderDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageAzureV2SwitchProviderDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageAzureV2SwitchProviderDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2SwitchProviderDetailsResponseOutput) ToInMageAzureV2SwitchProviderDetailsResponseOutput() InMageAzureV2SwitchProviderDetailsResponseOutput {
	return o
}

func (o InMageAzureV2SwitchProviderDetailsResponseOutput) ToInMageAzureV2SwitchProviderDetailsResponseOutputWithContext(ctx context.Context) InMageAzureV2SwitchProviderDetailsResponseOutput {
	return o
}

// The target appliance Id.
func (o InMageAzureV2SwitchProviderDetailsResponseOutput) TargetApplianceId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2SwitchProviderDetailsResponse) string { return v.TargetApplianceId }).(pulumi.StringOutput)
}

// The target fabric Id.
func (o InMageAzureV2SwitchProviderDetailsResponseOutput) TargetFabricId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2SwitchProviderDetailsResponse) string { return v.TargetFabricId }).(pulumi.StringOutput)
}

// The target resource Id.
func (o InMageAzureV2SwitchProviderDetailsResponseOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2SwitchProviderDetailsResponse) string { return v.TargetResourceId }).(pulumi.StringOutput)
}

// The target vault Id.
func (o InMageAzureV2SwitchProviderDetailsResponseOutput) TargetVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageAzureV2SwitchProviderDetailsResponse) string { return v.TargetVaultId }).(pulumi.StringOutput)
}

type InMageAzureV2SwitchProviderDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageAzureV2SwitchProviderDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageAzureV2SwitchProviderDetailsResponse)(nil)).Elem()
}

func (o InMageAzureV2SwitchProviderDetailsResponsePtrOutput) ToInMageAzureV2SwitchProviderDetailsResponsePtrOutput() InMageAzureV2SwitchProviderDetailsResponsePtrOutput {
	return o
}

func (o InMageAzureV2SwitchProviderDetailsResponsePtrOutput) ToInMageAzureV2SwitchProviderDetailsResponsePtrOutputWithContext(ctx context.Context) InMageAzureV2SwitchProviderDetailsResponsePtrOutput {
	return o
}

func (o InMageAzureV2SwitchProviderDetailsResponsePtrOutput) Elem() InMageAzureV2SwitchProviderDetailsResponseOutput {
	return o.ApplyT(func(v *InMageAzureV2SwitchProviderDetailsResponse) InMageAzureV2SwitchProviderDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageAzureV2SwitchProviderDetailsResponse
		return ret
	}).(InMageAzureV2SwitchProviderDetailsResponseOutput)
}

// The target appliance Id.
func (o InMageAzureV2SwitchProviderDetailsResponsePtrOutput) TargetApplianceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2SwitchProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetApplianceId
	}).(pulumi.StringPtrOutput)
}

// The target fabric Id.
func (o InMageAzureV2SwitchProviderDetailsResponsePtrOutput) TargetFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2SwitchProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetFabricId
	}).(pulumi.StringPtrOutput)
}

// The target resource Id.
func (o InMageAzureV2SwitchProviderDetailsResponsePtrOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2SwitchProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetResourceId
	}).(pulumi.StringPtrOutput)
}

// The target vault Id.
func (o InMageAzureV2SwitchProviderDetailsResponsePtrOutput) TargetVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageAzureV2SwitchProviderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetVaultId
	}).(pulumi.StringPtrOutput)
}

// Base class for the policies of providers using InMage replication.
type InMageBasePolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'InMageBasePolicyDetails'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// Base class for the policies of providers using InMage replication.
type InMageBasePolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageBasePolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageBasePolicyDetailsResponse)(nil)).Elem()
}

func (o InMageBasePolicyDetailsResponseOutput) ToInMageBasePolicyDetailsResponseOutput() InMageBasePolicyDetailsResponseOutput {
	return o
}

func (o InMageBasePolicyDetailsResponseOutput) ToInMageBasePolicyDetailsResponseOutputWithContext(ctx context.Context) InMageBasePolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o InMageBasePolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageBasePolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'InMageBasePolicyDetails'.
func (o InMageBasePolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageBasePolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o InMageBasePolicyDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageBasePolicyDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMageBasePolicyDetailsResponseOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageBasePolicyDetailsResponse) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o InMageBasePolicyDetailsResponseOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageBasePolicyDetailsResponse) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

type InMageBasePolicyDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageBasePolicyDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageBasePolicyDetailsResponse)(nil)).Elem()
}

func (o InMageBasePolicyDetailsResponsePtrOutput) ToInMageBasePolicyDetailsResponsePtrOutput() InMageBasePolicyDetailsResponsePtrOutput {
	return o
}

func (o InMageBasePolicyDetailsResponsePtrOutput) ToInMageBasePolicyDetailsResponsePtrOutputWithContext(ctx context.Context) InMageBasePolicyDetailsResponsePtrOutput {
	return o
}

func (o InMageBasePolicyDetailsResponsePtrOutput) Elem() InMageBasePolicyDetailsResponseOutput {
	return o.ApplyT(func(v *InMageBasePolicyDetailsResponse) InMageBasePolicyDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageBasePolicyDetailsResponse
		return ret
	}).(InMageBasePolicyDetailsResponseOutput)
}

// The app consistent snapshot frequency in minutes.
func (o InMageBasePolicyDetailsResponsePtrOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageBasePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.AppConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'InMageBasePolicyDetails'.
func (o InMageBasePolicyDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageBasePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o InMageBasePolicyDetailsResponsePtrOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageBasePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmSyncStatus
	}).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMageBasePolicyDetailsResponsePtrOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageBasePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointHistory
	}).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o InMageBasePolicyDetailsResponsePtrOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageBasePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointThresholdInMinutes
	}).(pulumi.IntPtrOutput)
}

// DiskExclusionInput when doing enable protection of virtual machine in InMage provider.
type InMageDiskExclusionInput struct {
	// The guest disk signature based option for disk exclusion.
	DiskSignatureOptions []InMageDiskSignatureExclusionOptions `pulumi:"diskSignatureOptions"`
	// The volume label based option for disk exclusion.
	VolumeOptions []InMageVolumeExclusionOptions `pulumi:"volumeOptions"`
}

// InMageDiskExclusionInputInput is an input type that accepts InMageDiskExclusionInputArgs and InMageDiskExclusionInputOutput values.
// You can construct a concrete instance of `InMageDiskExclusionInputInput` via:
//
//	InMageDiskExclusionInputArgs{...}
type InMageDiskExclusionInputInput interface {
	pulumi.Input

	ToInMageDiskExclusionInputOutput() InMageDiskExclusionInputOutput
	ToInMageDiskExclusionInputOutputWithContext(context.Context) InMageDiskExclusionInputOutput
}

// DiskExclusionInput when doing enable protection of virtual machine in InMage provider.
type InMageDiskExclusionInputArgs struct {
	// The guest disk signature based option for disk exclusion.
	DiskSignatureOptions InMageDiskSignatureExclusionOptionsArrayInput `pulumi:"diskSignatureOptions"`
	// The volume label based option for disk exclusion.
	VolumeOptions InMageVolumeExclusionOptionsArrayInput `pulumi:"volumeOptions"`
}

func (InMageDiskExclusionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageDiskExclusionInput)(nil)).Elem()
}

func (i InMageDiskExclusionInputArgs) ToInMageDiskExclusionInputOutput() InMageDiskExclusionInputOutput {
	return i.ToInMageDiskExclusionInputOutputWithContext(context.Background())
}

func (i InMageDiskExclusionInputArgs) ToInMageDiskExclusionInputOutputWithContext(ctx context.Context) InMageDiskExclusionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageDiskExclusionInputOutput)
}

func (i InMageDiskExclusionInputArgs) ToInMageDiskExclusionInputPtrOutput() InMageDiskExclusionInputPtrOutput {
	return i.ToInMageDiskExclusionInputPtrOutputWithContext(context.Background())
}

func (i InMageDiskExclusionInputArgs) ToInMageDiskExclusionInputPtrOutputWithContext(ctx context.Context) InMageDiskExclusionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageDiskExclusionInputOutput).ToInMageDiskExclusionInputPtrOutputWithContext(ctx)
}

// InMageDiskExclusionInputPtrInput is an input type that accepts InMageDiskExclusionInputArgs, InMageDiskExclusionInputPtr and InMageDiskExclusionInputPtrOutput values.
// You can construct a concrete instance of `InMageDiskExclusionInputPtrInput` via:
//
//	        InMageDiskExclusionInputArgs{...}
//
//	or:
//
//	        nil
type InMageDiskExclusionInputPtrInput interface {
	pulumi.Input

	ToInMageDiskExclusionInputPtrOutput() InMageDiskExclusionInputPtrOutput
	ToInMageDiskExclusionInputPtrOutputWithContext(context.Context) InMageDiskExclusionInputPtrOutput
}

type inMageDiskExclusionInputPtrType InMageDiskExclusionInputArgs

func InMageDiskExclusionInputPtr(v *InMageDiskExclusionInputArgs) InMageDiskExclusionInputPtrInput {
	return (*inMageDiskExclusionInputPtrType)(v)
}

func (*inMageDiskExclusionInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageDiskExclusionInput)(nil)).Elem()
}

func (i *inMageDiskExclusionInputPtrType) ToInMageDiskExclusionInputPtrOutput() InMageDiskExclusionInputPtrOutput {
	return i.ToInMageDiskExclusionInputPtrOutputWithContext(context.Background())
}

func (i *inMageDiskExclusionInputPtrType) ToInMageDiskExclusionInputPtrOutputWithContext(ctx context.Context) InMageDiskExclusionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageDiskExclusionInputPtrOutput)
}

// DiskExclusionInput when doing enable protection of virtual machine in InMage provider.
type InMageDiskExclusionInputOutput struct{ *pulumi.OutputState }

func (InMageDiskExclusionInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageDiskExclusionInput)(nil)).Elem()
}

func (o InMageDiskExclusionInputOutput) ToInMageDiskExclusionInputOutput() InMageDiskExclusionInputOutput {
	return o
}

func (o InMageDiskExclusionInputOutput) ToInMageDiskExclusionInputOutputWithContext(ctx context.Context) InMageDiskExclusionInputOutput {
	return o
}

func (o InMageDiskExclusionInputOutput) ToInMageDiskExclusionInputPtrOutput() InMageDiskExclusionInputPtrOutput {
	return o.ToInMageDiskExclusionInputPtrOutputWithContext(context.Background())
}

func (o InMageDiskExclusionInputOutput) ToInMageDiskExclusionInputPtrOutputWithContext(ctx context.Context) InMageDiskExclusionInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InMageDiskExclusionInput) *InMageDiskExclusionInput {
		return &v
	}).(InMageDiskExclusionInputPtrOutput)
}

// The guest disk signature based option for disk exclusion.
func (o InMageDiskExclusionInputOutput) DiskSignatureOptions() InMageDiskSignatureExclusionOptionsArrayOutput {
	return o.ApplyT(func(v InMageDiskExclusionInput) []InMageDiskSignatureExclusionOptions { return v.DiskSignatureOptions }).(InMageDiskSignatureExclusionOptionsArrayOutput)
}

// The volume label based option for disk exclusion.
func (o InMageDiskExclusionInputOutput) VolumeOptions() InMageVolumeExclusionOptionsArrayOutput {
	return o.ApplyT(func(v InMageDiskExclusionInput) []InMageVolumeExclusionOptions { return v.VolumeOptions }).(InMageVolumeExclusionOptionsArrayOutput)
}

type InMageDiskExclusionInputPtrOutput struct{ *pulumi.OutputState }

func (InMageDiskExclusionInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageDiskExclusionInput)(nil)).Elem()
}

func (o InMageDiskExclusionInputPtrOutput) ToInMageDiskExclusionInputPtrOutput() InMageDiskExclusionInputPtrOutput {
	return o
}

func (o InMageDiskExclusionInputPtrOutput) ToInMageDiskExclusionInputPtrOutputWithContext(ctx context.Context) InMageDiskExclusionInputPtrOutput {
	return o
}

func (o InMageDiskExclusionInputPtrOutput) Elem() InMageDiskExclusionInputOutput {
	return o.ApplyT(func(v *InMageDiskExclusionInput) InMageDiskExclusionInput {
		if v != nil {
			return *v
		}
		var ret InMageDiskExclusionInput
		return ret
	}).(InMageDiskExclusionInputOutput)
}

// The guest disk signature based option for disk exclusion.
func (o InMageDiskExclusionInputPtrOutput) DiskSignatureOptions() InMageDiskSignatureExclusionOptionsArrayOutput {
	return o.ApplyT(func(v *InMageDiskExclusionInput) []InMageDiskSignatureExclusionOptions {
		if v == nil {
			return nil
		}
		return v.DiskSignatureOptions
	}).(InMageDiskSignatureExclusionOptionsArrayOutput)
}

// The volume label based option for disk exclusion.
func (o InMageDiskExclusionInputPtrOutput) VolumeOptions() InMageVolumeExclusionOptionsArrayOutput {
	return o.ApplyT(func(v *InMageDiskExclusionInput) []InMageVolumeExclusionOptions {
		if v == nil {
			return nil
		}
		return v.VolumeOptions
	}).(InMageVolumeExclusionOptionsArrayOutput)
}

// Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
type InMageDiskSignatureExclusionOptions struct {
	// The guest signature of disk to be excluded from replication.
	DiskSignature *string `pulumi:"diskSignature"`
}

// InMageDiskSignatureExclusionOptionsInput is an input type that accepts InMageDiskSignatureExclusionOptionsArgs and InMageDiskSignatureExclusionOptionsOutput values.
// You can construct a concrete instance of `InMageDiskSignatureExclusionOptionsInput` via:
//
//	InMageDiskSignatureExclusionOptionsArgs{...}
type InMageDiskSignatureExclusionOptionsInput interface {
	pulumi.Input

	ToInMageDiskSignatureExclusionOptionsOutput() InMageDiskSignatureExclusionOptionsOutput
	ToInMageDiskSignatureExclusionOptionsOutputWithContext(context.Context) InMageDiskSignatureExclusionOptionsOutput
}

// Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
type InMageDiskSignatureExclusionOptionsArgs struct {
	// The guest signature of disk to be excluded from replication.
	DiskSignature pulumi.StringPtrInput `pulumi:"diskSignature"`
}

func (InMageDiskSignatureExclusionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageDiskSignatureExclusionOptions)(nil)).Elem()
}

func (i InMageDiskSignatureExclusionOptionsArgs) ToInMageDiskSignatureExclusionOptionsOutput() InMageDiskSignatureExclusionOptionsOutput {
	return i.ToInMageDiskSignatureExclusionOptionsOutputWithContext(context.Background())
}

func (i InMageDiskSignatureExclusionOptionsArgs) ToInMageDiskSignatureExclusionOptionsOutputWithContext(ctx context.Context) InMageDiskSignatureExclusionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageDiskSignatureExclusionOptionsOutput)
}

// InMageDiskSignatureExclusionOptionsArrayInput is an input type that accepts InMageDiskSignatureExclusionOptionsArray and InMageDiskSignatureExclusionOptionsArrayOutput values.
// You can construct a concrete instance of `InMageDiskSignatureExclusionOptionsArrayInput` via:
//
//	InMageDiskSignatureExclusionOptionsArray{ InMageDiskSignatureExclusionOptionsArgs{...} }
type InMageDiskSignatureExclusionOptionsArrayInput interface {
	pulumi.Input

	ToInMageDiskSignatureExclusionOptionsArrayOutput() InMageDiskSignatureExclusionOptionsArrayOutput
	ToInMageDiskSignatureExclusionOptionsArrayOutputWithContext(context.Context) InMageDiskSignatureExclusionOptionsArrayOutput
}

type InMageDiskSignatureExclusionOptionsArray []InMageDiskSignatureExclusionOptionsInput

func (InMageDiskSignatureExclusionOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageDiskSignatureExclusionOptions)(nil)).Elem()
}

func (i InMageDiskSignatureExclusionOptionsArray) ToInMageDiskSignatureExclusionOptionsArrayOutput() InMageDiskSignatureExclusionOptionsArrayOutput {
	return i.ToInMageDiskSignatureExclusionOptionsArrayOutputWithContext(context.Background())
}

func (i InMageDiskSignatureExclusionOptionsArray) ToInMageDiskSignatureExclusionOptionsArrayOutputWithContext(ctx context.Context) InMageDiskSignatureExclusionOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageDiskSignatureExclusionOptionsArrayOutput)
}

// Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
type InMageDiskSignatureExclusionOptionsOutput struct{ *pulumi.OutputState }

func (InMageDiskSignatureExclusionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageDiskSignatureExclusionOptions)(nil)).Elem()
}

func (o InMageDiskSignatureExclusionOptionsOutput) ToInMageDiskSignatureExclusionOptionsOutput() InMageDiskSignatureExclusionOptionsOutput {
	return o
}

func (o InMageDiskSignatureExclusionOptionsOutput) ToInMageDiskSignatureExclusionOptionsOutputWithContext(ctx context.Context) InMageDiskSignatureExclusionOptionsOutput {
	return o
}

// The guest signature of disk to be excluded from replication.
func (o InMageDiskSignatureExclusionOptionsOutput) DiskSignature() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageDiskSignatureExclusionOptions) *string { return v.DiskSignature }).(pulumi.StringPtrOutput)
}

type InMageDiskSignatureExclusionOptionsArrayOutput struct{ *pulumi.OutputState }

func (InMageDiskSignatureExclusionOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageDiskSignatureExclusionOptions)(nil)).Elem()
}

func (o InMageDiskSignatureExclusionOptionsArrayOutput) ToInMageDiskSignatureExclusionOptionsArrayOutput() InMageDiskSignatureExclusionOptionsArrayOutput {
	return o
}

func (o InMageDiskSignatureExclusionOptionsArrayOutput) ToInMageDiskSignatureExclusionOptionsArrayOutputWithContext(ctx context.Context) InMageDiskSignatureExclusionOptionsArrayOutput {
	return o
}

func (o InMageDiskSignatureExclusionOptionsArrayOutput) Index(i pulumi.IntInput) InMageDiskSignatureExclusionOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageDiskSignatureExclusionOptions {
		return vs[0].([]InMageDiskSignatureExclusionOptions)[vs[1].(int)]
	}).(InMageDiskSignatureExclusionOptionsOutput)
}

// VMware Azure specific enable protection input.
type InMageEnableProtectionInput struct {
	// The target datastore name.
	DatastoreName *string `pulumi:"datastoreName"`
	// The enable disk exclusion input.
	DiskExclusionInput *InMageDiskExclusionInput `pulumi:"diskExclusionInput"`
	// The disks to include list.
	DisksToInclude []string `pulumi:"disksToInclude"`
	// The class type.
	// Expected value is 'InMage'.
	InstanceType string `pulumi:"instanceType"`
	// The Master Target Id.
	MasterTargetId string `pulumi:"masterTargetId"`
	// The multi VM group Id.
	MultiVmGroupId string `pulumi:"multiVmGroupId"`
	// The multi VM group name.
	MultiVmGroupName string `pulumi:"multiVmGroupName"`
	// The Process Server Id.
	ProcessServerId string `pulumi:"processServerId"`
	// The retention drive to use on the MT.
	RetentionDrive string `pulumi:"retentionDrive"`
	// The CS account Id.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
	// The VM Name.
	VmFriendlyName *string `pulumi:"vmFriendlyName"`
}

// InMageEnableProtectionInputInput is an input type that accepts InMageEnableProtectionInputArgs and InMageEnableProtectionInputOutput values.
// You can construct a concrete instance of `InMageEnableProtectionInputInput` via:
//
//	InMageEnableProtectionInputArgs{...}
type InMageEnableProtectionInputInput interface {
	pulumi.Input

	ToInMageEnableProtectionInputOutput() InMageEnableProtectionInputOutput
	ToInMageEnableProtectionInputOutputWithContext(context.Context) InMageEnableProtectionInputOutput
}

// VMware Azure specific enable protection input.
type InMageEnableProtectionInputArgs struct {
	// The target datastore name.
	DatastoreName pulumi.StringPtrInput `pulumi:"datastoreName"`
	// The enable disk exclusion input.
	DiskExclusionInput InMageDiskExclusionInputPtrInput `pulumi:"diskExclusionInput"`
	// The disks to include list.
	DisksToInclude pulumi.StringArrayInput `pulumi:"disksToInclude"`
	// The class type.
	// Expected value is 'InMage'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The Master Target Id.
	MasterTargetId pulumi.StringInput `pulumi:"masterTargetId"`
	// The multi VM group Id.
	MultiVmGroupId pulumi.StringInput `pulumi:"multiVmGroupId"`
	// The multi VM group name.
	MultiVmGroupName pulumi.StringInput `pulumi:"multiVmGroupName"`
	// The Process Server Id.
	ProcessServerId pulumi.StringInput `pulumi:"processServerId"`
	// The retention drive to use on the MT.
	RetentionDrive pulumi.StringInput `pulumi:"retentionDrive"`
	// The CS account Id.
	RunAsAccountId pulumi.StringPtrInput `pulumi:"runAsAccountId"`
	// The VM Name.
	VmFriendlyName pulumi.StringPtrInput `pulumi:"vmFriendlyName"`
}

func (InMageEnableProtectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageEnableProtectionInput)(nil)).Elem()
}

func (i InMageEnableProtectionInputArgs) ToInMageEnableProtectionInputOutput() InMageEnableProtectionInputOutput {
	return i.ToInMageEnableProtectionInputOutputWithContext(context.Background())
}

func (i InMageEnableProtectionInputArgs) ToInMageEnableProtectionInputOutputWithContext(ctx context.Context) InMageEnableProtectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageEnableProtectionInputOutput)
}

func (i InMageEnableProtectionInputArgs) ToInMageEnableProtectionInputPtrOutput() InMageEnableProtectionInputPtrOutput {
	return i.ToInMageEnableProtectionInputPtrOutputWithContext(context.Background())
}

func (i InMageEnableProtectionInputArgs) ToInMageEnableProtectionInputPtrOutputWithContext(ctx context.Context) InMageEnableProtectionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageEnableProtectionInputOutput).ToInMageEnableProtectionInputPtrOutputWithContext(ctx)
}

// InMageEnableProtectionInputPtrInput is an input type that accepts InMageEnableProtectionInputArgs, InMageEnableProtectionInputPtr and InMageEnableProtectionInputPtrOutput values.
// You can construct a concrete instance of `InMageEnableProtectionInputPtrInput` via:
//
//	        InMageEnableProtectionInputArgs{...}
//
//	or:
//
//	        nil
type InMageEnableProtectionInputPtrInput interface {
	pulumi.Input

	ToInMageEnableProtectionInputPtrOutput() InMageEnableProtectionInputPtrOutput
	ToInMageEnableProtectionInputPtrOutputWithContext(context.Context) InMageEnableProtectionInputPtrOutput
}

type inMageEnableProtectionInputPtrType InMageEnableProtectionInputArgs

func InMageEnableProtectionInputPtr(v *InMageEnableProtectionInputArgs) InMageEnableProtectionInputPtrInput {
	return (*inMageEnableProtectionInputPtrType)(v)
}

func (*inMageEnableProtectionInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageEnableProtectionInput)(nil)).Elem()
}

func (i *inMageEnableProtectionInputPtrType) ToInMageEnableProtectionInputPtrOutput() InMageEnableProtectionInputPtrOutput {
	return i.ToInMageEnableProtectionInputPtrOutputWithContext(context.Background())
}

func (i *inMageEnableProtectionInputPtrType) ToInMageEnableProtectionInputPtrOutputWithContext(ctx context.Context) InMageEnableProtectionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageEnableProtectionInputPtrOutput)
}

// VMware Azure specific enable protection input.
type InMageEnableProtectionInputOutput struct{ *pulumi.OutputState }

func (InMageEnableProtectionInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageEnableProtectionInput)(nil)).Elem()
}

func (o InMageEnableProtectionInputOutput) ToInMageEnableProtectionInputOutput() InMageEnableProtectionInputOutput {
	return o
}

func (o InMageEnableProtectionInputOutput) ToInMageEnableProtectionInputOutputWithContext(ctx context.Context) InMageEnableProtectionInputOutput {
	return o
}

func (o InMageEnableProtectionInputOutput) ToInMageEnableProtectionInputPtrOutput() InMageEnableProtectionInputPtrOutput {
	return o.ToInMageEnableProtectionInputPtrOutputWithContext(context.Background())
}

func (o InMageEnableProtectionInputOutput) ToInMageEnableProtectionInputPtrOutputWithContext(ctx context.Context) InMageEnableProtectionInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InMageEnableProtectionInput) *InMageEnableProtectionInput {
		return &v
	}).(InMageEnableProtectionInputPtrOutput)
}

// The target datastore name.
func (o InMageEnableProtectionInputOutput) DatastoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageEnableProtectionInput) *string { return v.DatastoreName }).(pulumi.StringPtrOutput)
}

// The enable disk exclusion input.
func (o InMageEnableProtectionInputOutput) DiskExclusionInput() InMageDiskExclusionInputPtrOutput {
	return o.ApplyT(func(v InMageEnableProtectionInput) *InMageDiskExclusionInput { return v.DiskExclusionInput }).(InMageDiskExclusionInputPtrOutput)
}

// The disks to include list.
func (o InMageEnableProtectionInputOutput) DisksToInclude() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InMageEnableProtectionInput) []string { return v.DisksToInclude }).(pulumi.StringArrayOutput)
}

// The class type.
// Expected value is 'InMage'.
func (o InMageEnableProtectionInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageEnableProtectionInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Master Target Id.
func (o InMageEnableProtectionInputOutput) MasterTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageEnableProtectionInput) string { return v.MasterTargetId }).(pulumi.StringOutput)
}

// The multi VM group Id.
func (o InMageEnableProtectionInputOutput) MultiVmGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageEnableProtectionInput) string { return v.MultiVmGroupId }).(pulumi.StringOutput)
}

// The multi VM group name.
func (o InMageEnableProtectionInputOutput) MultiVmGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v InMageEnableProtectionInput) string { return v.MultiVmGroupName }).(pulumi.StringOutput)
}

// The Process Server Id.
func (o InMageEnableProtectionInputOutput) ProcessServerId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageEnableProtectionInput) string { return v.ProcessServerId }).(pulumi.StringOutput)
}

// The retention drive to use on the MT.
func (o InMageEnableProtectionInputOutput) RetentionDrive() pulumi.StringOutput {
	return o.ApplyT(func(v InMageEnableProtectionInput) string { return v.RetentionDrive }).(pulumi.StringOutput)
}

// The CS account Id.
func (o InMageEnableProtectionInputOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageEnableProtectionInput) *string { return v.RunAsAccountId }).(pulumi.StringPtrOutput)
}

// The VM Name.
func (o InMageEnableProtectionInputOutput) VmFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageEnableProtectionInput) *string { return v.VmFriendlyName }).(pulumi.StringPtrOutput)
}

type InMageEnableProtectionInputPtrOutput struct{ *pulumi.OutputState }

func (InMageEnableProtectionInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageEnableProtectionInput)(nil)).Elem()
}

func (o InMageEnableProtectionInputPtrOutput) ToInMageEnableProtectionInputPtrOutput() InMageEnableProtectionInputPtrOutput {
	return o
}

func (o InMageEnableProtectionInputPtrOutput) ToInMageEnableProtectionInputPtrOutputWithContext(ctx context.Context) InMageEnableProtectionInputPtrOutput {
	return o
}

func (o InMageEnableProtectionInputPtrOutput) Elem() InMageEnableProtectionInputOutput {
	return o.ApplyT(func(v *InMageEnableProtectionInput) InMageEnableProtectionInput {
		if v != nil {
			return *v
		}
		var ret InMageEnableProtectionInput
		return ret
	}).(InMageEnableProtectionInputOutput)
}

// The target datastore name.
func (o InMageEnableProtectionInputPtrOutput) DatastoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.DatastoreName
	}).(pulumi.StringPtrOutput)
}

// The enable disk exclusion input.
func (o InMageEnableProtectionInputPtrOutput) DiskExclusionInput() InMageDiskExclusionInputPtrOutput {
	return o.ApplyT(func(v *InMageEnableProtectionInput) *InMageDiskExclusionInput {
		if v == nil {
			return nil
		}
		return v.DiskExclusionInput
	}).(InMageDiskExclusionInputPtrOutput)
}

// The disks to include list.
func (o InMageEnableProtectionInputPtrOutput) DisksToInclude() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InMageEnableProtectionInput) []string {
		if v == nil {
			return nil
		}
		return v.DisksToInclude
	}).(pulumi.StringArrayOutput)
}

// The class type.
// Expected value is 'InMage'.
func (o InMageEnableProtectionInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The Master Target Id.
func (o InMageEnableProtectionInputPtrOutput) MasterTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return &v.MasterTargetId
	}).(pulumi.StringPtrOutput)
}

// The multi VM group Id.
func (o InMageEnableProtectionInputPtrOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return &v.MultiVmGroupId
	}).(pulumi.StringPtrOutput)
}

// The multi VM group name.
func (o InMageEnableProtectionInputPtrOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return &v.MultiVmGroupName
	}).(pulumi.StringPtrOutput)
}

// The Process Server Id.
func (o InMageEnableProtectionInputPtrOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return &v.ProcessServerId
	}).(pulumi.StringPtrOutput)
}

// The retention drive to use on the MT.
func (o InMageEnableProtectionInputPtrOutput) RetentionDrive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionDrive
	}).(pulumi.StringPtrOutput)
}

// The CS account Id.
func (o InMageEnableProtectionInputPtrOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.RunAsAccountId
	}).(pulumi.StringPtrOutput)
}

// The VM Name.
func (o InMageEnableProtectionInputPtrOutput) VmFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.VmFriendlyName
	}).(pulumi.StringPtrOutput)
}

// InMageFabric switch provider blocking error details.
type InMageFabricSwitchProviderBlockingErrorDetailsResponse struct {
	// The error code.
	ErrorCode string `pulumi:"errorCode"`
	// The error message.
	ErrorMessage string `pulumi:"errorMessage"`
	// The error message parameters.
	ErrorMessageParameters map[string]string `pulumi:"errorMessageParameters"`
	// The error tags.
	ErrorTags map[string]string `pulumi:"errorTags"`
	// The possible causes.
	PossibleCauses string `pulumi:"possibleCauses"`
	// The recommended action.
	RecommendedAction string `pulumi:"recommendedAction"`
}

// InMageFabric switch provider blocking error details.
type InMageFabricSwitchProviderBlockingErrorDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageFabricSwitchProviderBlockingErrorDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageFabricSwitchProviderBlockingErrorDetailsResponse)(nil)).Elem()
}

func (o InMageFabricSwitchProviderBlockingErrorDetailsResponseOutput) ToInMageFabricSwitchProviderBlockingErrorDetailsResponseOutput() InMageFabricSwitchProviderBlockingErrorDetailsResponseOutput {
	return o
}

func (o InMageFabricSwitchProviderBlockingErrorDetailsResponseOutput) ToInMageFabricSwitchProviderBlockingErrorDetailsResponseOutputWithContext(ctx context.Context) InMageFabricSwitchProviderBlockingErrorDetailsResponseOutput {
	return o
}

// The error code.
func (o InMageFabricSwitchProviderBlockingErrorDetailsResponseOutput) ErrorCode() pulumi.StringOutput {
	return o.ApplyT(func(v InMageFabricSwitchProviderBlockingErrorDetailsResponse) string { return v.ErrorCode }).(pulumi.StringOutput)
}

// The error message.
func (o InMageFabricSwitchProviderBlockingErrorDetailsResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v InMageFabricSwitchProviderBlockingErrorDetailsResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// The error message parameters.
func (o InMageFabricSwitchProviderBlockingErrorDetailsResponseOutput) ErrorMessageParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageFabricSwitchProviderBlockingErrorDetailsResponse) map[string]string {
		return v.ErrorMessageParameters
	}).(pulumi.StringMapOutput)
}

// The error tags.
func (o InMageFabricSwitchProviderBlockingErrorDetailsResponseOutput) ErrorTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageFabricSwitchProviderBlockingErrorDetailsResponse) map[string]string { return v.ErrorTags }).(pulumi.StringMapOutput)
}

// The possible causes.
func (o InMageFabricSwitchProviderBlockingErrorDetailsResponseOutput) PossibleCauses() pulumi.StringOutput {
	return o.ApplyT(func(v InMageFabricSwitchProviderBlockingErrorDetailsResponse) string { return v.PossibleCauses }).(pulumi.StringOutput)
}

// The recommended action.
func (o InMageFabricSwitchProviderBlockingErrorDetailsResponseOutput) RecommendedAction() pulumi.StringOutput {
	return o.ApplyT(func(v InMageFabricSwitchProviderBlockingErrorDetailsResponse) string { return v.RecommendedAction }).(pulumi.StringOutput)
}

type InMageFabricSwitchProviderBlockingErrorDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InMageFabricSwitchProviderBlockingErrorDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageFabricSwitchProviderBlockingErrorDetailsResponse)(nil)).Elem()
}

func (o InMageFabricSwitchProviderBlockingErrorDetailsResponseArrayOutput) ToInMageFabricSwitchProviderBlockingErrorDetailsResponseArrayOutput() InMageFabricSwitchProviderBlockingErrorDetailsResponseArrayOutput {
	return o
}

func (o InMageFabricSwitchProviderBlockingErrorDetailsResponseArrayOutput) ToInMageFabricSwitchProviderBlockingErrorDetailsResponseArrayOutputWithContext(ctx context.Context) InMageFabricSwitchProviderBlockingErrorDetailsResponseArrayOutput {
	return o
}

func (o InMageFabricSwitchProviderBlockingErrorDetailsResponseArrayOutput) Index(i pulumi.IntInput) InMageFabricSwitchProviderBlockingErrorDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageFabricSwitchProviderBlockingErrorDetailsResponse {
		return vs[0].([]InMageFabricSwitchProviderBlockingErrorDetailsResponse)[vs[1].(int)]
	}).(InMageFabricSwitchProviderBlockingErrorDetailsResponseOutput)
}

// InMage specific protection profile details.
type InMagePolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'InMage'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// InMage specific protection profile details.
type InMagePolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMagePolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMagePolicyDetailsResponse)(nil)).Elem()
}

func (o InMagePolicyDetailsResponseOutput) ToInMagePolicyDetailsResponseOutput() InMagePolicyDetailsResponseOutput {
	return o
}

func (o InMagePolicyDetailsResponseOutput) ToInMagePolicyDetailsResponseOutputWithContext(ctx context.Context) InMagePolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o InMagePolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMagePolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'InMage'.
func (o InMagePolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMagePolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o InMagePolicyDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMagePolicyDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMagePolicyDetailsResponseOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMagePolicyDetailsResponse) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o InMagePolicyDetailsResponseOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMagePolicyDetailsResponse) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

type InMagePolicyDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMagePolicyDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMagePolicyDetailsResponse)(nil)).Elem()
}

func (o InMagePolicyDetailsResponsePtrOutput) ToInMagePolicyDetailsResponsePtrOutput() InMagePolicyDetailsResponsePtrOutput {
	return o
}

func (o InMagePolicyDetailsResponsePtrOutput) ToInMagePolicyDetailsResponsePtrOutputWithContext(ctx context.Context) InMagePolicyDetailsResponsePtrOutput {
	return o
}

func (o InMagePolicyDetailsResponsePtrOutput) Elem() InMagePolicyDetailsResponseOutput {
	return o.ApplyT(func(v *InMagePolicyDetailsResponse) InMagePolicyDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMagePolicyDetailsResponse
		return ret
	}).(InMagePolicyDetailsResponseOutput)
}

// The app consistent snapshot frequency in minutes.
func (o InMagePolicyDetailsResponsePtrOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMagePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.AppConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'InMage'.
func (o InMagePolicyDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMagePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o InMagePolicyDetailsResponsePtrOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMagePolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmSyncStatus
	}).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMagePolicyDetailsResponsePtrOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMagePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointHistory
	}).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o InMagePolicyDetailsResponsePtrOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMagePolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointThresholdInMinutes
	}).(pulumi.IntPtrOutput)
}

// VMWare Azure specific protection profile Input.
type InMagePolicyInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The class type.
	// Expected value is 'InMage'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus string `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory *int `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes *int `pulumi:"recoveryPointThresholdInMinutes"`
}

// InMagePolicyInputInput is an input type that accepts InMagePolicyInputArgs and InMagePolicyInputOutput values.
// You can construct a concrete instance of `InMagePolicyInputInput` via:
//
//	InMagePolicyInputArgs{...}
type InMagePolicyInputInput interface {
	pulumi.Input

	ToInMagePolicyInputOutput() InMagePolicyInputOutput
	ToInMagePolicyInputOutputWithContext(context.Context) InMagePolicyInputOutput
}

// VMWare Azure specific protection profile Input.
type InMagePolicyInputArgs struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"appConsistentFrequencyInMinutes"`
	// The class type.
	// Expected value is 'InMage'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
	MultiVmSyncStatus pulumi.StringInput `pulumi:"multiVmSyncStatus"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistory pulumi.IntPtrInput `pulumi:"recoveryPointHistory"`
	// The recovery point threshold in minutes.
	RecoveryPointThresholdInMinutes pulumi.IntPtrInput `pulumi:"recoveryPointThresholdInMinutes"`
}

func (InMagePolicyInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMagePolicyInput)(nil)).Elem()
}

func (i InMagePolicyInputArgs) ToInMagePolicyInputOutput() InMagePolicyInputOutput {
	return i.ToInMagePolicyInputOutputWithContext(context.Background())
}

func (i InMagePolicyInputArgs) ToInMagePolicyInputOutputWithContext(ctx context.Context) InMagePolicyInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMagePolicyInputOutput)
}

func (i InMagePolicyInputArgs) ToInMagePolicyInputPtrOutput() InMagePolicyInputPtrOutput {
	return i.ToInMagePolicyInputPtrOutputWithContext(context.Background())
}

func (i InMagePolicyInputArgs) ToInMagePolicyInputPtrOutputWithContext(ctx context.Context) InMagePolicyInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMagePolicyInputOutput).ToInMagePolicyInputPtrOutputWithContext(ctx)
}

// InMagePolicyInputPtrInput is an input type that accepts InMagePolicyInputArgs, InMagePolicyInputPtr and InMagePolicyInputPtrOutput values.
// You can construct a concrete instance of `InMagePolicyInputPtrInput` via:
//
//	        InMagePolicyInputArgs{...}
//
//	or:
//
//	        nil
type InMagePolicyInputPtrInput interface {
	pulumi.Input

	ToInMagePolicyInputPtrOutput() InMagePolicyInputPtrOutput
	ToInMagePolicyInputPtrOutputWithContext(context.Context) InMagePolicyInputPtrOutput
}

type inMagePolicyInputPtrType InMagePolicyInputArgs

func InMagePolicyInputPtr(v *InMagePolicyInputArgs) InMagePolicyInputPtrInput {
	return (*inMagePolicyInputPtrType)(v)
}

func (*inMagePolicyInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMagePolicyInput)(nil)).Elem()
}

func (i *inMagePolicyInputPtrType) ToInMagePolicyInputPtrOutput() InMagePolicyInputPtrOutput {
	return i.ToInMagePolicyInputPtrOutputWithContext(context.Background())
}

func (i *inMagePolicyInputPtrType) ToInMagePolicyInputPtrOutputWithContext(ctx context.Context) InMagePolicyInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMagePolicyInputPtrOutput)
}

// VMWare Azure specific protection profile Input.
type InMagePolicyInputOutput struct{ *pulumi.OutputState }

func (InMagePolicyInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMagePolicyInput)(nil)).Elem()
}

func (o InMagePolicyInputOutput) ToInMagePolicyInputOutput() InMagePolicyInputOutput {
	return o
}

func (o InMagePolicyInputOutput) ToInMagePolicyInputOutputWithContext(ctx context.Context) InMagePolicyInputOutput {
	return o
}

func (o InMagePolicyInputOutput) ToInMagePolicyInputPtrOutput() InMagePolicyInputPtrOutput {
	return o.ToInMagePolicyInputPtrOutputWithContext(context.Background())
}

func (o InMagePolicyInputOutput) ToInMagePolicyInputPtrOutputWithContext(ctx context.Context) InMagePolicyInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InMagePolicyInput) *InMagePolicyInput {
		return &v
	}).(InMagePolicyInputPtrOutput)
}

// The app consistent snapshot frequency (in minutes).
func (o InMagePolicyInputOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMagePolicyInput) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The class type.
// Expected value is 'InMage'.
func (o InMagePolicyInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMagePolicyInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
func (o InMagePolicyInputOutput) MultiVmSyncStatus() pulumi.StringOutput {
	return o.ApplyT(func(v InMagePolicyInput) string { return v.MultiVmSyncStatus }).(pulumi.StringOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMagePolicyInputOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMagePolicyInput) *int { return v.RecoveryPointHistory }).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o InMagePolicyInputOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMagePolicyInput) *int { return v.RecoveryPointThresholdInMinutes }).(pulumi.IntPtrOutput)
}

type InMagePolicyInputPtrOutput struct{ *pulumi.OutputState }

func (InMagePolicyInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMagePolicyInput)(nil)).Elem()
}

func (o InMagePolicyInputPtrOutput) ToInMagePolicyInputPtrOutput() InMagePolicyInputPtrOutput {
	return o
}

func (o InMagePolicyInputPtrOutput) ToInMagePolicyInputPtrOutputWithContext(ctx context.Context) InMagePolicyInputPtrOutput {
	return o
}

func (o InMagePolicyInputPtrOutput) Elem() InMagePolicyInputOutput {
	return o.ApplyT(func(v *InMagePolicyInput) InMagePolicyInput {
		if v != nil {
			return *v
		}
		var ret InMagePolicyInput
		return ret
	}).(InMagePolicyInputOutput)
}

// The app consistent snapshot frequency (in minutes).
func (o InMagePolicyInputPtrOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMagePolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.AppConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// The class type.
// Expected value is 'InMage'.
func (o InMagePolicyInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMagePolicyInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.
func (o InMagePolicyInputPtrOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMagePolicyInput) *string {
		if v == nil {
			return nil
		}
		return &v.MultiVmSyncStatus
	}).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMagePolicyInputPtrOutput) RecoveryPointHistory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMagePolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointHistory
	}).(pulumi.IntPtrOutput)
}

// The recovery point threshold in minutes.
func (o InMagePolicyInputPtrOutput) RecoveryPointThresholdInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMagePolicyInput) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointThresholdInMinutes
	}).(pulumi.IntPtrOutput)
}

// InMage protected disk details.
type InMageProtectedDiskDetailsResponse struct {
	// The disk capacity in bytes.
	DiskCapacityInBytes *float64 `pulumi:"diskCapacityInBytes"`
	// The disk id.
	DiskId *string `pulumi:"diskId"`
	// The disk name.
	DiskName *string `pulumi:"diskName"`
	// A value indicating whether disk is resized.
	DiskResized *string `pulumi:"diskResized"`
	// The file system capacity in bytes.
	FileSystemCapacityInBytes *float64 `pulumi:"fileSystemCapacityInBytes"`
	// The health error code for the disk.
	HealthErrorCode *string `pulumi:"healthErrorCode"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// The Progress Health.
	ProgressHealth *string `pulumi:"progressHealth"`
	// The Progress Status.
	ProgressStatus *string `pulumi:"progressStatus"`
	// The protection stage.
	ProtectionStage *string `pulumi:"protectionStage"`
	// The PS data transit in MB.
	PsDataInMB *float64 `pulumi:"psDataInMB"`
	// The resync duration in seconds.
	ResyncDurationInSeconds *float64 `pulumi:"resyncDurationInSeconds"`
	// The resync last 15 minutes transferred bytes.
	ResyncLast15MinutesTransferredBytes *float64 `pulumi:"resyncLast15MinutesTransferredBytes"`
	// The last data transfer time in UTC.
	ResyncLastDataTransferTimeUTC *string `pulumi:"resyncLastDataTransferTimeUTC"`
	// The resync processed bytes.
	ResyncProcessedBytes *float64 `pulumi:"resyncProcessedBytes"`
	// The resync progress percentage.
	ResyncProgressPercentage *int `pulumi:"resyncProgressPercentage"`
	// A value indicating whether resync is required for this disk.
	ResyncRequired *string `pulumi:"resyncRequired"`
	// The resync start time.
	ResyncStartTime *string `pulumi:"resyncStartTime"`
	// The resync total transferred bytes.
	ResyncTotalTransferredBytes *float64 `pulumi:"resyncTotalTransferredBytes"`
	// The RPO in seconds.
	RpoInSeconds *float64 `pulumi:"rpoInSeconds"`
	// The source data transit in MB.
	SourceDataInMB *float64 `pulumi:"sourceDataInMB"`
	// The target data transit in MB.
	TargetDataInMB *float64 `pulumi:"targetDataInMB"`
}

// InMage protected disk details.
type InMageProtectedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageProtectedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageProtectedDiskDetailsResponseOutput) ToInMageProtectedDiskDetailsResponseOutput() InMageProtectedDiskDetailsResponseOutput {
	return o
}

func (o InMageProtectedDiskDetailsResponseOutput) ToInMageProtectedDiskDetailsResponseOutputWithContext(ctx context.Context) InMageProtectedDiskDetailsResponseOutput {
	return o
}

// The disk capacity in bytes.
func (o InMageProtectedDiskDetailsResponseOutput) DiskCapacityInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *float64 { return v.DiskCapacityInBytes }).(pulumi.Float64PtrOutput)
}

// The disk id.
func (o InMageProtectedDiskDetailsResponseOutput) DiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.DiskId }).(pulumi.StringPtrOutput)
}

// The disk name.
func (o InMageProtectedDiskDetailsResponseOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.DiskName }).(pulumi.StringPtrOutput)
}

// A value indicating whether disk is resized.
func (o InMageProtectedDiskDetailsResponseOutput) DiskResized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.DiskResized }).(pulumi.StringPtrOutput)
}

// The file system capacity in bytes.
func (o InMageProtectedDiskDetailsResponseOutput) FileSystemCapacityInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *float64 { return v.FileSystemCapacityInBytes }).(pulumi.Float64PtrOutput)
}

// The health error code for the disk.
func (o InMageProtectedDiskDetailsResponseOutput) HealthErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.HealthErrorCode }).(pulumi.StringPtrOutput)
}

// The last RPO calculated time.
func (o InMageProtectedDiskDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// The Progress Health.
func (o InMageProtectedDiskDetailsResponseOutput) ProgressHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.ProgressHealth }).(pulumi.StringPtrOutput)
}

// The Progress Status.
func (o InMageProtectedDiskDetailsResponseOutput) ProgressStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.ProgressStatus }).(pulumi.StringPtrOutput)
}

// The protection stage.
func (o InMageProtectedDiskDetailsResponseOutput) ProtectionStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.ProtectionStage }).(pulumi.StringPtrOutput)
}

// The PS data transit in MB.
func (o InMageProtectedDiskDetailsResponseOutput) PsDataInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *float64 { return v.PsDataInMB }).(pulumi.Float64PtrOutput)
}

// The resync duration in seconds.
func (o InMageProtectedDiskDetailsResponseOutput) ResyncDurationInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *float64 { return v.ResyncDurationInSeconds }).(pulumi.Float64PtrOutput)
}

// The resync last 15 minutes transferred bytes.
func (o InMageProtectedDiskDetailsResponseOutput) ResyncLast15MinutesTransferredBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *float64 { return v.ResyncLast15MinutesTransferredBytes }).(pulumi.Float64PtrOutput)
}

// The last data transfer time in UTC.
func (o InMageProtectedDiskDetailsResponseOutput) ResyncLastDataTransferTimeUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.ResyncLastDataTransferTimeUTC }).(pulumi.StringPtrOutput)
}

// The resync processed bytes.
func (o InMageProtectedDiskDetailsResponseOutput) ResyncProcessedBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *float64 { return v.ResyncProcessedBytes }).(pulumi.Float64PtrOutput)
}

// The resync progress percentage.
func (o InMageProtectedDiskDetailsResponseOutput) ResyncProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *int { return v.ResyncProgressPercentage }).(pulumi.IntPtrOutput)
}

// A value indicating whether resync is required for this disk.
func (o InMageProtectedDiskDetailsResponseOutput) ResyncRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.ResyncRequired }).(pulumi.StringPtrOutput)
}

// The resync start time.
func (o InMageProtectedDiskDetailsResponseOutput) ResyncStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *string { return v.ResyncStartTime }).(pulumi.StringPtrOutput)
}

// The resync total transferred bytes.
func (o InMageProtectedDiskDetailsResponseOutput) ResyncTotalTransferredBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *float64 { return v.ResyncTotalTransferredBytes }).(pulumi.Float64PtrOutput)
}

// The RPO in seconds.
func (o InMageProtectedDiskDetailsResponseOutput) RpoInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *float64 { return v.RpoInSeconds }).(pulumi.Float64PtrOutput)
}

// The source data transit in MB.
func (o InMageProtectedDiskDetailsResponseOutput) SourceDataInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *float64 { return v.SourceDataInMB }).(pulumi.Float64PtrOutput)
}

// The target data transit in MB.
func (o InMageProtectedDiskDetailsResponseOutput) TargetDataInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageProtectedDiskDetailsResponse) *float64 { return v.TargetDataInMB }).(pulumi.Float64PtrOutput)
}

type InMageProtectedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InMageProtectedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageProtectedDiskDetailsResponseArrayOutput) ToInMageProtectedDiskDetailsResponseArrayOutput() InMageProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageProtectedDiskDetailsResponseArrayOutput) ToInMageProtectedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) InMageProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageProtectedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) InMageProtectedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageProtectedDiskDetailsResponse {
		return vs[0].([]InMageProtectedDiskDetailsResponse)[vs[1].(int)]
	}).(InMageProtectedDiskDetailsResponseOutput)
}

// InMageRcm source agent upgrade blocking error details.
type InMageRcmAgentUpgradeBlockingErrorDetailsResponse struct {
	// The error code.
	ErrorCode string `pulumi:"errorCode"`
	// The error message.
	ErrorMessage string `pulumi:"errorMessage"`
	// The error message parameters.
	ErrorMessageParameters map[string]string `pulumi:"errorMessageParameters"`
	// The error tags.
	ErrorTags map[string]string `pulumi:"errorTags"`
	// The possible causes.
	PossibleCauses string `pulumi:"possibleCauses"`
	// The recommended action.
	RecommendedAction string `pulumi:"recommendedAction"`
}

// InMageRcm source agent upgrade blocking error details.
type InMageRcmAgentUpgradeBlockingErrorDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmAgentUpgradeBlockingErrorDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmAgentUpgradeBlockingErrorDetailsResponse)(nil)).Elem()
}

func (o InMageRcmAgentUpgradeBlockingErrorDetailsResponseOutput) ToInMageRcmAgentUpgradeBlockingErrorDetailsResponseOutput() InMageRcmAgentUpgradeBlockingErrorDetailsResponseOutput {
	return o
}

func (o InMageRcmAgentUpgradeBlockingErrorDetailsResponseOutput) ToInMageRcmAgentUpgradeBlockingErrorDetailsResponseOutputWithContext(ctx context.Context) InMageRcmAgentUpgradeBlockingErrorDetailsResponseOutput {
	return o
}

// The error code.
func (o InMageRcmAgentUpgradeBlockingErrorDetailsResponseOutput) ErrorCode() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmAgentUpgradeBlockingErrorDetailsResponse) string { return v.ErrorCode }).(pulumi.StringOutput)
}

// The error message.
func (o InMageRcmAgentUpgradeBlockingErrorDetailsResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmAgentUpgradeBlockingErrorDetailsResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// The error message parameters.
func (o InMageRcmAgentUpgradeBlockingErrorDetailsResponseOutput) ErrorMessageParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageRcmAgentUpgradeBlockingErrorDetailsResponse) map[string]string {
		return v.ErrorMessageParameters
	}).(pulumi.StringMapOutput)
}

// The error tags.
func (o InMageRcmAgentUpgradeBlockingErrorDetailsResponseOutput) ErrorTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageRcmAgentUpgradeBlockingErrorDetailsResponse) map[string]string { return v.ErrorTags }).(pulumi.StringMapOutput)
}

// The possible causes.
func (o InMageRcmAgentUpgradeBlockingErrorDetailsResponseOutput) PossibleCauses() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmAgentUpgradeBlockingErrorDetailsResponse) string { return v.PossibleCauses }).(pulumi.StringOutput)
}

// The recommended action.
func (o InMageRcmAgentUpgradeBlockingErrorDetailsResponseOutput) RecommendedAction() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmAgentUpgradeBlockingErrorDetailsResponse) string { return v.RecommendedAction }).(pulumi.StringOutput)
}

type InMageRcmAgentUpgradeBlockingErrorDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InMageRcmAgentUpgradeBlockingErrorDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageRcmAgentUpgradeBlockingErrorDetailsResponse)(nil)).Elem()
}

func (o InMageRcmAgentUpgradeBlockingErrorDetailsResponseArrayOutput) ToInMageRcmAgentUpgradeBlockingErrorDetailsResponseArrayOutput() InMageRcmAgentUpgradeBlockingErrorDetailsResponseArrayOutput {
	return o
}

func (o InMageRcmAgentUpgradeBlockingErrorDetailsResponseArrayOutput) ToInMageRcmAgentUpgradeBlockingErrorDetailsResponseArrayOutputWithContext(ctx context.Context) InMageRcmAgentUpgradeBlockingErrorDetailsResponseArrayOutput {
	return o
}

func (o InMageRcmAgentUpgradeBlockingErrorDetailsResponseArrayOutput) Index(i pulumi.IntInput) InMageRcmAgentUpgradeBlockingErrorDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageRcmAgentUpgradeBlockingErrorDetailsResponse {
		return vs[0].([]InMageRcmAgentUpgradeBlockingErrorDetailsResponse)[vs[1].(int)]
	}).(InMageRcmAgentUpgradeBlockingErrorDetailsResponseOutput)
}

// InMageRcm discovered protected VM details.
type InMageRcmDiscoveredProtectedVmDetailsResponse struct {
	// The SDS created timestamp.
	CreatedTimestamp string `pulumi:"createdTimestamp"`
	// The list of datastores.
	Datastores []string `pulumi:"datastores"`
	// The list of IP addresses.
	IpAddresses []string `pulumi:"ipAddresses"`
	// A value indicating whether the VM is deleted.
	IsDeleted bool `pulumi:"isDeleted"`
	// The last time when SDS information discovered in SRS.
	LastDiscoveryTimeInUtc string `pulumi:"lastDiscoveryTimeInUtc"`
	// The VM's OS name.
	OsName string `pulumi:"osName"`
	// The VM power status.
	PowerStatus string `pulumi:"powerStatus"`
	// The SDS updated timestamp.
	UpdatedTimestamp string `pulumi:"updatedTimestamp"`
	// The VCenter fqdn.
	VCenterFqdn string `pulumi:"vCenterFqdn"`
	// The VCenter Id.
	VCenterId string `pulumi:"vCenterId"`
	// The VM fqdn.
	VmFqdn string `pulumi:"vmFqdn"`
	// The VMware tools status.
	VmwareToolsStatus string `pulumi:"vmwareToolsStatus"`
}

// InMageRcm discovered protected VM details.
type InMageRcmDiscoveredProtectedVmDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmDiscoveredProtectedVmDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmDiscoveredProtectedVmDetailsResponse)(nil)).Elem()
}

func (o InMageRcmDiscoveredProtectedVmDetailsResponseOutput) ToInMageRcmDiscoveredProtectedVmDetailsResponseOutput() InMageRcmDiscoveredProtectedVmDetailsResponseOutput {
	return o
}

func (o InMageRcmDiscoveredProtectedVmDetailsResponseOutput) ToInMageRcmDiscoveredProtectedVmDetailsResponseOutputWithContext(ctx context.Context) InMageRcmDiscoveredProtectedVmDetailsResponseOutput {
	return o
}

// The SDS created timestamp.
func (o InMageRcmDiscoveredProtectedVmDetailsResponseOutput) CreatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmDiscoveredProtectedVmDetailsResponse) string { return v.CreatedTimestamp }).(pulumi.StringOutput)
}

// The list of datastores.
func (o InMageRcmDiscoveredProtectedVmDetailsResponseOutput) Datastores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InMageRcmDiscoveredProtectedVmDetailsResponse) []string { return v.Datastores }).(pulumi.StringArrayOutput)
}

// The list of IP addresses.
func (o InMageRcmDiscoveredProtectedVmDetailsResponseOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InMageRcmDiscoveredProtectedVmDetailsResponse) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// A value indicating whether the VM is deleted.
func (o InMageRcmDiscoveredProtectedVmDetailsResponseOutput) IsDeleted() pulumi.BoolOutput {
	return o.ApplyT(func(v InMageRcmDiscoveredProtectedVmDetailsResponse) bool { return v.IsDeleted }).(pulumi.BoolOutput)
}

// The last time when SDS information discovered in SRS.
func (o InMageRcmDiscoveredProtectedVmDetailsResponseOutput) LastDiscoveryTimeInUtc() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmDiscoveredProtectedVmDetailsResponse) string { return v.LastDiscoveryTimeInUtc }).(pulumi.StringOutput)
}

// The VM's OS name.
func (o InMageRcmDiscoveredProtectedVmDetailsResponseOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmDiscoveredProtectedVmDetailsResponse) string { return v.OsName }).(pulumi.StringOutput)
}

// The VM power status.
func (o InMageRcmDiscoveredProtectedVmDetailsResponseOutput) PowerStatus() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmDiscoveredProtectedVmDetailsResponse) string { return v.PowerStatus }).(pulumi.StringOutput)
}

// The SDS updated timestamp.
func (o InMageRcmDiscoveredProtectedVmDetailsResponseOutput) UpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmDiscoveredProtectedVmDetailsResponse) string { return v.UpdatedTimestamp }).(pulumi.StringOutput)
}

// The VCenter fqdn.
func (o InMageRcmDiscoveredProtectedVmDetailsResponseOutput) VCenterFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmDiscoveredProtectedVmDetailsResponse) string { return v.VCenterFqdn }).(pulumi.StringOutput)
}

// The VCenter Id.
func (o InMageRcmDiscoveredProtectedVmDetailsResponseOutput) VCenterId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmDiscoveredProtectedVmDetailsResponse) string { return v.VCenterId }).(pulumi.StringOutput)
}

// The VM fqdn.
func (o InMageRcmDiscoveredProtectedVmDetailsResponseOutput) VmFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmDiscoveredProtectedVmDetailsResponse) string { return v.VmFqdn }).(pulumi.StringOutput)
}

// The VMware tools status.
func (o InMageRcmDiscoveredProtectedVmDetailsResponseOutput) VmwareToolsStatus() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmDiscoveredProtectedVmDetailsResponse) string { return v.VmwareToolsStatus }).(pulumi.StringOutput)
}

type InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmDiscoveredProtectedVmDetailsResponse)(nil)).Elem()
}

func (o InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput) ToInMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput() InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput) ToInMageRcmDiscoveredProtectedVmDetailsResponsePtrOutputWithContext(ctx context.Context) InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput) Elem() InMageRcmDiscoveredProtectedVmDetailsResponseOutput {
	return o.ApplyT(func(v *InMageRcmDiscoveredProtectedVmDetailsResponse) InMageRcmDiscoveredProtectedVmDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageRcmDiscoveredProtectedVmDetailsResponse
		return ret
	}).(InMageRcmDiscoveredProtectedVmDetailsResponseOutput)
}

// The SDS created timestamp.
func (o InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput) CreatedTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedTimestamp
	}).(pulumi.StringPtrOutput)
}

// The list of datastores.
func (o InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput) Datastores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InMageRcmDiscoveredProtectedVmDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.Datastores
	}).(pulumi.StringArrayOutput)
}

// The list of IP addresses.
func (o InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InMageRcmDiscoveredProtectedVmDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

// A value indicating whether the VM is deleted.
func (o InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput) IsDeleted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InMageRcmDiscoveredProtectedVmDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsDeleted
	}).(pulumi.BoolPtrOutput)
}

// The last time when SDS information discovered in SRS.
func (o InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput) LastDiscoveryTimeInUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastDiscoveryTimeInUtc
	}).(pulumi.StringPtrOutput)
}

// The VM's OS name.
func (o InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput) OsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OsName
	}).(pulumi.StringPtrOutput)
}

// The VM power status.
func (o InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput) PowerStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PowerStatus
	}).(pulumi.StringPtrOutput)
}

// The SDS updated timestamp.
func (o InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput) UpdatedTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpdatedTimestamp
	}).(pulumi.StringPtrOutput)
}

// The VCenter fqdn.
func (o InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput) VCenterFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VCenterFqdn
	}).(pulumi.StringPtrOutput)
}

// The VCenter Id.
func (o InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput) VCenterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VCenterId
	}).(pulumi.StringPtrOutput)
}

// The VM fqdn.
func (o InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput) VmFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmFqdn
	}).(pulumi.StringPtrOutput)
}

// The VMware tools status.
func (o InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput) VmwareToolsStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmwareToolsStatus
	}).(pulumi.StringPtrOutput)
}

// InMageRcm disk input.
type InMageRcmDiskInput struct {
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The disk Id.
	DiskId string `pulumi:"diskId"`
	// The disk type.
	DiskType string `pulumi:"diskType"`
	// The log storage account ARM Id.
	LogStorageAccountId string `pulumi:"logStorageAccountId"`
}

// InMageRcmDiskInputInput is an input type that accepts InMageRcmDiskInputArgs and InMageRcmDiskInputOutput values.
// You can construct a concrete instance of `InMageRcmDiskInputInput` via:
//
//	InMageRcmDiskInputArgs{...}
type InMageRcmDiskInputInput interface {
	pulumi.Input

	ToInMageRcmDiskInputOutput() InMageRcmDiskInputOutput
	ToInMageRcmDiskInputOutputWithContext(context.Context) InMageRcmDiskInputOutput
}

// InMageRcm disk input.
type InMageRcmDiskInputArgs struct {
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// The disk Id.
	DiskId pulumi.StringInput `pulumi:"diskId"`
	// The disk type.
	DiskType pulumi.StringInput `pulumi:"diskType"`
	// The log storage account ARM Id.
	LogStorageAccountId pulumi.StringInput `pulumi:"logStorageAccountId"`
}

func (InMageRcmDiskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmDiskInput)(nil)).Elem()
}

func (i InMageRcmDiskInputArgs) ToInMageRcmDiskInputOutput() InMageRcmDiskInputOutput {
	return i.ToInMageRcmDiskInputOutputWithContext(context.Background())
}

func (i InMageRcmDiskInputArgs) ToInMageRcmDiskInputOutputWithContext(ctx context.Context) InMageRcmDiskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmDiskInputOutput)
}

// InMageRcmDiskInputArrayInput is an input type that accepts InMageRcmDiskInputArray and InMageRcmDiskInputArrayOutput values.
// You can construct a concrete instance of `InMageRcmDiskInputArrayInput` via:
//
//	InMageRcmDiskInputArray{ InMageRcmDiskInputArgs{...} }
type InMageRcmDiskInputArrayInput interface {
	pulumi.Input

	ToInMageRcmDiskInputArrayOutput() InMageRcmDiskInputArrayOutput
	ToInMageRcmDiskInputArrayOutputWithContext(context.Context) InMageRcmDiskInputArrayOutput
}

type InMageRcmDiskInputArray []InMageRcmDiskInputInput

func (InMageRcmDiskInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageRcmDiskInput)(nil)).Elem()
}

func (i InMageRcmDiskInputArray) ToInMageRcmDiskInputArrayOutput() InMageRcmDiskInputArrayOutput {
	return i.ToInMageRcmDiskInputArrayOutputWithContext(context.Background())
}

func (i InMageRcmDiskInputArray) ToInMageRcmDiskInputArrayOutputWithContext(ctx context.Context) InMageRcmDiskInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmDiskInputArrayOutput)
}

// InMageRcm disk input.
type InMageRcmDiskInputOutput struct{ *pulumi.OutputState }

func (InMageRcmDiskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmDiskInput)(nil)).Elem()
}

func (o InMageRcmDiskInputOutput) ToInMageRcmDiskInputOutput() InMageRcmDiskInputOutput {
	return o
}

func (o InMageRcmDiskInputOutput) ToInMageRcmDiskInputOutputWithContext(ctx context.Context) InMageRcmDiskInputOutput {
	return o
}

// The DiskEncryptionSet ARM Id.
func (o InMageRcmDiskInputOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmDiskInput) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The disk Id.
func (o InMageRcmDiskInputOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmDiskInput) string { return v.DiskId }).(pulumi.StringOutput)
}

// The disk type.
func (o InMageRcmDiskInputOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmDiskInput) string { return v.DiskType }).(pulumi.StringOutput)
}

// The log storage account ARM Id.
func (o InMageRcmDiskInputOutput) LogStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmDiskInput) string { return v.LogStorageAccountId }).(pulumi.StringOutput)
}

type InMageRcmDiskInputArrayOutput struct{ *pulumi.OutputState }

func (InMageRcmDiskInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageRcmDiskInput)(nil)).Elem()
}

func (o InMageRcmDiskInputArrayOutput) ToInMageRcmDiskInputArrayOutput() InMageRcmDiskInputArrayOutput {
	return o
}

func (o InMageRcmDiskInputArrayOutput) ToInMageRcmDiskInputArrayOutputWithContext(ctx context.Context) InMageRcmDiskInputArrayOutput {
	return o
}

func (o InMageRcmDiskInputArrayOutput) Index(i pulumi.IntInput) InMageRcmDiskInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageRcmDiskInput {
		return vs[0].([]InMageRcmDiskInput)[vs[1].(int)]
	}).(InMageRcmDiskInputOutput)
}

// InMageRcm disk input.
type InMageRcmDisksDefaultInput struct {
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The disk type.
	DiskType string `pulumi:"diskType"`
	// The log storage account ARM Id.
	LogStorageAccountId string `pulumi:"logStorageAccountId"`
}

// InMageRcmDisksDefaultInputInput is an input type that accepts InMageRcmDisksDefaultInputArgs and InMageRcmDisksDefaultInputOutput values.
// You can construct a concrete instance of `InMageRcmDisksDefaultInputInput` via:
//
//	InMageRcmDisksDefaultInputArgs{...}
type InMageRcmDisksDefaultInputInput interface {
	pulumi.Input

	ToInMageRcmDisksDefaultInputOutput() InMageRcmDisksDefaultInputOutput
	ToInMageRcmDisksDefaultInputOutputWithContext(context.Context) InMageRcmDisksDefaultInputOutput
}

// InMageRcm disk input.
type InMageRcmDisksDefaultInputArgs struct {
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// The disk type.
	DiskType pulumi.StringInput `pulumi:"diskType"`
	// The log storage account ARM Id.
	LogStorageAccountId pulumi.StringInput `pulumi:"logStorageAccountId"`
}

func (InMageRcmDisksDefaultInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmDisksDefaultInput)(nil)).Elem()
}

func (i InMageRcmDisksDefaultInputArgs) ToInMageRcmDisksDefaultInputOutput() InMageRcmDisksDefaultInputOutput {
	return i.ToInMageRcmDisksDefaultInputOutputWithContext(context.Background())
}

func (i InMageRcmDisksDefaultInputArgs) ToInMageRcmDisksDefaultInputOutputWithContext(ctx context.Context) InMageRcmDisksDefaultInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmDisksDefaultInputOutput)
}

func (i InMageRcmDisksDefaultInputArgs) ToInMageRcmDisksDefaultInputPtrOutput() InMageRcmDisksDefaultInputPtrOutput {
	return i.ToInMageRcmDisksDefaultInputPtrOutputWithContext(context.Background())
}

func (i InMageRcmDisksDefaultInputArgs) ToInMageRcmDisksDefaultInputPtrOutputWithContext(ctx context.Context) InMageRcmDisksDefaultInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmDisksDefaultInputOutput).ToInMageRcmDisksDefaultInputPtrOutputWithContext(ctx)
}

// InMageRcmDisksDefaultInputPtrInput is an input type that accepts InMageRcmDisksDefaultInputArgs, InMageRcmDisksDefaultInputPtr and InMageRcmDisksDefaultInputPtrOutput values.
// You can construct a concrete instance of `InMageRcmDisksDefaultInputPtrInput` via:
//
//	        InMageRcmDisksDefaultInputArgs{...}
//
//	or:
//
//	        nil
type InMageRcmDisksDefaultInputPtrInput interface {
	pulumi.Input

	ToInMageRcmDisksDefaultInputPtrOutput() InMageRcmDisksDefaultInputPtrOutput
	ToInMageRcmDisksDefaultInputPtrOutputWithContext(context.Context) InMageRcmDisksDefaultInputPtrOutput
}

type inMageRcmDisksDefaultInputPtrType InMageRcmDisksDefaultInputArgs

func InMageRcmDisksDefaultInputPtr(v *InMageRcmDisksDefaultInputArgs) InMageRcmDisksDefaultInputPtrInput {
	return (*inMageRcmDisksDefaultInputPtrType)(v)
}

func (*inMageRcmDisksDefaultInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmDisksDefaultInput)(nil)).Elem()
}

func (i *inMageRcmDisksDefaultInputPtrType) ToInMageRcmDisksDefaultInputPtrOutput() InMageRcmDisksDefaultInputPtrOutput {
	return i.ToInMageRcmDisksDefaultInputPtrOutputWithContext(context.Background())
}

func (i *inMageRcmDisksDefaultInputPtrType) ToInMageRcmDisksDefaultInputPtrOutputWithContext(ctx context.Context) InMageRcmDisksDefaultInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmDisksDefaultInputPtrOutput)
}

// InMageRcm disk input.
type InMageRcmDisksDefaultInputOutput struct{ *pulumi.OutputState }

func (InMageRcmDisksDefaultInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmDisksDefaultInput)(nil)).Elem()
}

func (o InMageRcmDisksDefaultInputOutput) ToInMageRcmDisksDefaultInputOutput() InMageRcmDisksDefaultInputOutput {
	return o
}

func (o InMageRcmDisksDefaultInputOutput) ToInMageRcmDisksDefaultInputOutputWithContext(ctx context.Context) InMageRcmDisksDefaultInputOutput {
	return o
}

func (o InMageRcmDisksDefaultInputOutput) ToInMageRcmDisksDefaultInputPtrOutput() InMageRcmDisksDefaultInputPtrOutput {
	return o.ToInMageRcmDisksDefaultInputPtrOutputWithContext(context.Background())
}

func (o InMageRcmDisksDefaultInputOutput) ToInMageRcmDisksDefaultInputPtrOutputWithContext(ctx context.Context) InMageRcmDisksDefaultInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InMageRcmDisksDefaultInput) *InMageRcmDisksDefaultInput {
		return &v
	}).(InMageRcmDisksDefaultInputPtrOutput)
}

// The DiskEncryptionSet ARM Id.
func (o InMageRcmDisksDefaultInputOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmDisksDefaultInput) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The disk type.
func (o InMageRcmDisksDefaultInputOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmDisksDefaultInput) string { return v.DiskType }).(pulumi.StringOutput)
}

// The log storage account ARM Id.
func (o InMageRcmDisksDefaultInputOutput) LogStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmDisksDefaultInput) string { return v.LogStorageAccountId }).(pulumi.StringOutput)
}

type InMageRcmDisksDefaultInputPtrOutput struct{ *pulumi.OutputState }

func (InMageRcmDisksDefaultInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmDisksDefaultInput)(nil)).Elem()
}

func (o InMageRcmDisksDefaultInputPtrOutput) ToInMageRcmDisksDefaultInputPtrOutput() InMageRcmDisksDefaultInputPtrOutput {
	return o
}

func (o InMageRcmDisksDefaultInputPtrOutput) ToInMageRcmDisksDefaultInputPtrOutputWithContext(ctx context.Context) InMageRcmDisksDefaultInputPtrOutput {
	return o
}

func (o InMageRcmDisksDefaultInputPtrOutput) Elem() InMageRcmDisksDefaultInputOutput {
	return o.ApplyT(func(v *InMageRcmDisksDefaultInput) InMageRcmDisksDefaultInput {
		if v != nil {
			return *v
		}
		var ret InMageRcmDisksDefaultInput
		return ret
	}).(InMageRcmDisksDefaultInputOutput)
}

// The DiskEncryptionSet ARM Id.
func (o InMageRcmDisksDefaultInputPtrOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmDisksDefaultInput) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSetId
	}).(pulumi.StringPtrOutput)
}

// The disk type.
func (o InMageRcmDisksDefaultInputPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmDisksDefaultInput) *string {
		if v == nil {
			return nil
		}
		return &v.DiskType
	}).(pulumi.StringPtrOutput)
}

// The log storage account ARM Id.
func (o InMageRcmDisksDefaultInputPtrOutput) LogStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmDisksDefaultInput) *string {
		if v == nil {
			return nil
		}
		return &v.LogStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// InMageRcm specific enable protection input.
type InMageRcmEnableProtectionInput struct {
	// The default disk input.
	DisksDefault *InMageRcmDisksDefaultInput `pulumi:"disksDefault"`
	// The disks to include list.
	DisksToInclude []InMageRcmDiskInput `pulumi:"disksToInclude"`
	// The ARM Id of discovered machine.
	FabricDiscoveryMachineId string `pulumi:"fabricDiscoveryMachineId"`
	// The class type.
	// Expected value is 'InMageRcm'.
	InstanceType string `pulumi:"instanceType"`
	// The license type.
	LicenseType *string `pulumi:"licenseType"`
	// The multi VM group name.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// The process server Id.
	ProcessServerId string `pulumi:"processServerId"`
	// The run-as account Id.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
	// The target availability set ARM Id.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The target boot diagnostics storage account ARM Id.
	TargetBootDiagnosticsStorageAccountId *string `pulumi:"targetBootDiagnosticsStorageAccountId"`
	// The selected target network ARM Id.
	TargetNetworkId *string `pulumi:"targetNetworkId"`
	// The target proximity placement group Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The target resource group ARM Id.
	TargetResourceGroupId string `pulumi:"targetResourceGroupId"`
	// The selected target subnet name.
	TargetSubnetName *string `pulumi:"targetSubnetName"`
	// The target VM name.
	TargetVmName *string `pulumi:"targetVmName"`
	// The target VM size.
	TargetVmSize *string `pulumi:"targetVmSize"`
	// The selected test network ARM Id.
	TestNetworkId *string `pulumi:"testNetworkId"`
	// The selected test subnet name.
	TestSubnetName *string `pulumi:"testSubnetName"`
}

// InMageRcmEnableProtectionInputInput is an input type that accepts InMageRcmEnableProtectionInputArgs and InMageRcmEnableProtectionInputOutput values.
// You can construct a concrete instance of `InMageRcmEnableProtectionInputInput` via:
//
//	InMageRcmEnableProtectionInputArgs{...}
type InMageRcmEnableProtectionInputInput interface {
	pulumi.Input

	ToInMageRcmEnableProtectionInputOutput() InMageRcmEnableProtectionInputOutput
	ToInMageRcmEnableProtectionInputOutputWithContext(context.Context) InMageRcmEnableProtectionInputOutput
}

// InMageRcm specific enable protection input.
type InMageRcmEnableProtectionInputArgs struct {
	// The default disk input.
	DisksDefault InMageRcmDisksDefaultInputPtrInput `pulumi:"disksDefault"`
	// The disks to include list.
	DisksToInclude InMageRcmDiskInputArrayInput `pulumi:"disksToInclude"`
	// The ARM Id of discovered machine.
	FabricDiscoveryMachineId pulumi.StringInput `pulumi:"fabricDiscoveryMachineId"`
	// The class type.
	// Expected value is 'InMageRcm'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The license type.
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
	// The multi VM group name.
	MultiVmGroupName pulumi.StringPtrInput `pulumi:"multiVmGroupName"`
	// The process server Id.
	ProcessServerId pulumi.StringInput `pulumi:"processServerId"`
	// The run-as account Id.
	RunAsAccountId pulumi.StringPtrInput `pulumi:"runAsAccountId"`
	// The target availability set ARM Id.
	TargetAvailabilitySetId pulumi.StringPtrInput `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone pulumi.StringPtrInput `pulumi:"targetAvailabilityZone"`
	// The target boot diagnostics storage account ARM Id.
	TargetBootDiagnosticsStorageAccountId pulumi.StringPtrInput `pulumi:"targetBootDiagnosticsStorageAccountId"`
	// The selected target network ARM Id.
	TargetNetworkId pulumi.StringPtrInput `pulumi:"targetNetworkId"`
	// The target proximity placement group Id.
	TargetProximityPlacementGroupId pulumi.StringPtrInput `pulumi:"targetProximityPlacementGroupId"`
	// The target resource group ARM Id.
	TargetResourceGroupId pulumi.StringInput `pulumi:"targetResourceGroupId"`
	// The selected target subnet name.
	TargetSubnetName pulumi.StringPtrInput `pulumi:"targetSubnetName"`
	// The target VM name.
	TargetVmName pulumi.StringPtrInput `pulumi:"targetVmName"`
	// The target VM size.
	TargetVmSize pulumi.StringPtrInput `pulumi:"targetVmSize"`
	// The selected test network ARM Id.
	TestNetworkId pulumi.StringPtrInput `pulumi:"testNetworkId"`
	// The selected test subnet name.
	TestSubnetName pulumi.StringPtrInput `pulumi:"testSubnetName"`
}

func (InMageRcmEnableProtectionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmEnableProtectionInput)(nil)).Elem()
}

func (i InMageRcmEnableProtectionInputArgs) ToInMageRcmEnableProtectionInputOutput() InMageRcmEnableProtectionInputOutput {
	return i.ToInMageRcmEnableProtectionInputOutputWithContext(context.Background())
}

func (i InMageRcmEnableProtectionInputArgs) ToInMageRcmEnableProtectionInputOutputWithContext(ctx context.Context) InMageRcmEnableProtectionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmEnableProtectionInputOutput)
}

func (i InMageRcmEnableProtectionInputArgs) ToInMageRcmEnableProtectionInputPtrOutput() InMageRcmEnableProtectionInputPtrOutput {
	return i.ToInMageRcmEnableProtectionInputPtrOutputWithContext(context.Background())
}

func (i InMageRcmEnableProtectionInputArgs) ToInMageRcmEnableProtectionInputPtrOutputWithContext(ctx context.Context) InMageRcmEnableProtectionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmEnableProtectionInputOutput).ToInMageRcmEnableProtectionInputPtrOutputWithContext(ctx)
}

// InMageRcmEnableProtectionInputPtrInput is an input type that accepts InMageRcmEnableProtectionInputArgs, InMageRcmEnableProtectionInputPtr and InMageRcmEnableProtectionInputPtrOutput values.
// You can construct a concrete instance of `InMageRcmEnableProtectionInputPtrInput` via:
//
//	        InMageRcmEnableProtectionInputArgs{...}
//
//	or:
//
//	        nil
type InMageRcmEnableProtectionInputPtrInput interface {
	pulumi.Input

	ToInMageRcmEnableProtectionInputPtrOutput() InMageRcmEnableProtectionInputPtrOutput
	ToInMageRcmEnableProtectionInputPtrOutputWithContext(context.Context) InMageRcmEnableProtectionInputPtrOutput
}

type inMageRcmEnableProtectionInputPtrType InMageRcmEnableProtectionInputArgs

func InMageRcmEnableProtectionInputPtr(v *InMageRcmEnableProtectionInputArgs) InMageRcmEnableProtectionInputPtrInput {
	return (*inMageRcmEnableProtectionInputPtrType)(v)
}

func (*inMageRcmEnableProtectionInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmEnableProtectionInput)(nil)).Elem()
}

func (i *inMageRcmEnableProtectionInputPtrType) ToInMageRcmEnableProtectionInputPtrOutput() InMageRcmEnableProtectionInputPtrOutput {
	return i.ToInMageRcmEnableProtectionInputPtrOutputWithContext(context.Background())
}

func (i *inMageRcmEnableProtectionInputPtrType) ToInMageRcmEnableProtectionInputPtrOutputWithContext(ctx context.Context) InMageRcmEnableProtectionInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmEnableProtectionInputPtrOutput)
}

// InMageRcm specific enable protection input.
type InMageRcmEnableProtectionInputOutput struct{ *pulumi.OutputState }

func (InMageRcmEnableProtectionInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmEnableProtectionInput)(nil)).Elem()
}

func (o InMageRcmEnableProtectionInputOutput) ToInMageRcmEnableProtectionInputOutput() InMageRcmEnableProtectionInputOutput {
	return o
}

func (o InMageRcmEnableProtectionInputOutput) ToInMageRcmEnableProtectionInputOutputWithContext(ctx context.Context) InMageRcmEnableProtectionInputOutput {
	return o
}

func (o InMageRcmEnableProtectionInputOutput) ToInMageRcmEnableProtectionInputPtrOutput() InMageRcmEnableProtectionInputPtrOutput {
	return o.ToInMageRcmEnableProtectionInputPtrOutputWithContext(context.Background())
}

func (o InMageRcmEnableProtectionInputOutput) ToInMageRcmEnableProtectionInputPtrOutputWithContext(ctx context.Context) InMageRcmEnableProtectionInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InMageRcmEnableProtectionInput) *InMageRcmEnableProtectionInput {
		return &v
	}).(InMageRcmEnableProtectionInputPtrOutput)
}

// The default disk input.
func (o InMageRcmEnableProtectionInputOutput) DisksDefault() InMageRcmDisksDefaultInputPtrOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) *InMageRcmDisksDefaultInput { return v.DisksDefault }).(InMageRcmDisksDefaultInputPtrOutput)
}

// The disks to include list.
func (o InMageRcmEnableProtectionInputOutput) DisksToInclude() InMageRcmDiskInputArrayOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) []InMageRcmDiskInput { return v.DisksToInclude }).(InMageRcmDiskInputArrayOutput)
}

// The ARM Id of discovered machine.
func (o InMageRcmEnableProtectionInputOutput) FabricDiscoveryMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) string { return v.FabricDiscoveryMachineId }).(pulumi.StringOutput)
}

// The class type.
// Expected value is 'InMageRcm'.
func (o InMageRcmEnableProtectionInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The license type.
func (o InMageRcmEnableProtectionInputOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// The multi VM group name.
func (o InMageRcmEnableProtectionInputOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) *string { return v.MultiVmGroupName }).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o InMageRcmEnableProtectionInputOutput) ProcessServerId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) string { return v.ProcessServerId }).(pulumi.StringOutput)
}

// The run-as account Id.
func (o InMageRcmEnableProtectionInputOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) *string { return v.RunAsAccountId }).(pulumi.StringPtrOutput)
}

// The target availability set ARM Id.
func (o InMageRcmEnableProtectionInputOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) *string { return v.TargetAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// The target availability zone.
func (o InMageRcmEnableProtectionInputOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) *string { return v.TargetAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The target boot diagnostics storage account ARM Id.
func (o InMageRcmEnableProtectionInputOutput) TargetBootDiagnosticsStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) *string { return v.TargetBootDiagnosticsStorageAccountId }).(pulumi.StringPtrOutput)
}

// The selected target network ARM Id.
func (o InMageRcmEnableProtectionInputOutput) TargetNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) *string { return v.TargetNetworkId }).(pulumi.StringPtrOutput)
}

// The target proximity placement group Id.
func (o InMageRcmEnableProtectionInputOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) *string { return v.TargetProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// The target resource group ARM Id.
func (o InMageRcmEnableProtectionInputOutput) TargetResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) string { return v.TargetResourceGroupId }).(pulumi.StringOutput)
}

// The selected target subnet name.
func (o InMageRcmEnableProtectionInputOutput) TargetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) *string { return v.TargetSubnetName }).(pulumi.StringPtrOutput)
}

// The target VM name.
func (o InMageRcmEnableProtectionInputOutput) TargetVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) *string { return v.TargetVmName }).(pulumi.StringPtrOutput)
}

// The target VM size.
func (o InMageRcmEnableProtectionInputOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) *string { return v.TargetVmSize }).(pulumi.StringPtrOutput)
}

// The selected test network ARM Id.
func (o InMageRcmEnableProtectionInputOutput) TestNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) *string { return v.TestNetworkId }).(pulumi.StringPtrOutput)
}

// The selected test subnet name.
func (o InMageRcmEnableProtectionInputOutput) TestSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmEnableProtectionInput) *string { return v.TestSubnetName }).(pulumi.StringPtrOutput)
}

type InMageRcmEnableProtectionInputPtrOutput struct{ *pulumi.OutputState }

func (InMageRcmEnableProtectionInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmEnableProtectionInput)(nil)).Elem()
}

func (o InMageRcmEnableProtectionInputPtrOutput) ToInMageRcmEnableProtectionInputPtrOutput() InMageRcmEnableProtectionInputPtrOutput {
	return o
}

func (o InMageRcmEnableProtectionInputPtrOutput) ToInMageRcmEnableProtectionInputPtrOutputWithContext(ctx context.Context) InMageRcmEnableProtectionInputPtrOutput {
	return o
}

func (o InMageRcmEnableProtectionInputPtrOutput) Elem() InMageRcmEnableProtectionInputOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) InMageRcmEnableProtectionInput {
		if v != nil {
			return *v
		}
		var ret InMageRcmEnableProtectionInput
		return ret
	}).(InMageRcmEnableProtectionInputOutput)
}

// The default disk input.
func (o InMageRcmEnableProtectionInputPtrOutput) DisksDefault() InMageRcmDisksDefaultInputPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *InMageRcmDisksDefaultInput {
		if v == nil {
			return nil
		}
		return v.DisksDefault
	}).(InMageRcmDisksDefaultInputPtrOutput)
}

// The disks to include list.
func (o InMageRcmEnableProtectionInputPtrOutput) DisksToInclude() InMageRcmDiskInputArrayOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) []InMageRcmDiskInput {
		if v == nil {
			return nil
		}
		return v.DisksToInclude
	}).(InMageRcmDiskInputArrayOutput)
}

// The ARM Id of discovered machine.
func (o InMageRcmEnableProtectionInputPtrOutput) FabricDiscoveryMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return &v.FabricDiscoveryMachineId
	}).(pulumi.StringPtrOutput)
}

// The class type.
// Expected value is 'InMageRcm'.
func (o InMageRcmEnableProtectionInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The license type.
func (o InMageRcmEnableProtectionInputPtrOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.LicenseType
	}).(pulumi.StringPtrOutput)
}

// The multi VM group name.
func (o InMageRcmEnableProtectionInputPtrOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmGroupName
	}).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o InMageRcmEnableProtectionInputPtrOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return &v.ProcessServerId
	}).(pulumi.StringPtrOutput)
}

// The run-as account Id.
func (o InMageRcmEnableProtectionInputPtrOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.RunAsAccountId
	}).(pulumi.StringPtrOutput)
}

// The target availability set ARM Id.
func (o InMageRcmEnableProtectionInputPtrOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetAvailabilitySetId
	}).(pulumi.StringPtrOutput)
}

// The target availability zone.
func (o InMageRcmEnableProtectionInputPtrOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetAvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// The target boot diagnostics storage account ARM Id.
func (o InMageRcmEnableProtectionInputPtrOutput) TargetBootDiagnosticsStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetBootDiagnosticsStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The selected target network ARM Id.
func (o InMageRcmEnableProtectionInputPtrOutput) TargetNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetNetworkId
	}).(pulumi.StringPtrOutput)
}

// The target proximity placement group Id.
func (o InMageRcmEnableProtectionInputPtrOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetProximityPlacementGroupId
	}).(pulumi.StringPtrOutput)
}

// The target resource group ARM Id.
func (o InMageRcmEnableProtectionInputPtrOutput) TargetResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return &v.TargetResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// The selected target subnet name.
func (o InMageRcmEnableProtectionInputPtrOutput) TargetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetSubnetName
	}).(pulumi.StringPtrOutput)
}

// The target VM name.
func (o InMageRcmEnableProtectionInputPtrOutput) TargetVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetVmName
	}).(pulumi.StringPtrOutput)
}

// The target VM size.
func (o InMageRcmEnableProtectionInputPtrOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TargetVmSize
	}).(pulumi.StringPtrOutput)
}

// The selected test network ARM Id.
func (o InMageRcmEnableProtectionInputPtrOutput) TestNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TestNetworkId
	}).(pulumi.StringPtrOutput)
}

// The selected test subnet name.
func (o InMageRcmEnableProtectionInputPtrOutput) TestSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmEnableProtectionInput) *string {
		if v == nil {
			return nil
		}
		return v.TestSubnetName
	}).(pulumi.StringPtrOutput)
}

// InMageRcm fabric provider specific settings.
type InMageRcmFabricCreationInput struct {
	// Gets the class type.
	// Expected value is 'InMageRcm'.
	InstanceType string `pulumi:"instanceType"`
	// The ARM Id of the physical site.
	PhysicalSiteId string `pulumi:"physicalSiteId"`
	// The identity provider input for source agent authentication.
	SourceAgentIdentity IdentityProviderInput `pulumi:"sourceAgentIdentity"`
	// The ARM Id of the VMware site.
	VmwareSiteId string `pulumi:"vmwareSiteId"`
}

// InMageRcmFabricCreationInputInput is an input type that accepts InMageRcmFabricCreationInputArgs and InMageRcmFabricCreationInputOutput values.
// You can construct a concrete instance of `InMageRcmFabricCreationInputInput` via:
//
//	InMageRcmFabricCreationInputArgs{...}
type InMageRcmFabricCreationInputInput interface {
	pulumi.Input

	ToInMageRcmFabricCreationInputOutput() InMageRcmFabricCreationInputOutput
	ToInMageRcmFabricCreationInputOutputWithContext(context.Context) InMageRcmFabricCreationInputOutput
}

// InMageRcm fabric provider specific settings.
type InMageRcmFabricCreationInputArgs struct {
	// Gets the class type.
	// Expected value is 'InMageRcm'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The ARM Id of the physical site.
	PhysicalSiteId pulumi.StringInput `pulumi:"physicalSiteId"`
	// The identity provider input for source agent authentication.
	SourceAgentIdentity IdentityProviderInputInput `pulumi:"sourceAgentIdentity"`
	// The ARM Id of the VMware site.
	VmwareSiteId pulumi.StringInput `pulumi:"vmwareSiteId"`
}

func (InMageRcmFabricCreationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmFabricCreationInput)(nil)).Elem()
}

func (i InMageRcmFabricCreationInputArgs) ToInMageRcmFabricCreationInputOutput() InMageRcmFabricCreationInputOutput {
	return i.ToInMageRcmFabricCreationInputOutputWithContext(context.Background())
}

func (i InMageRcmFabricCreationInputArgs) ToInMageRcmFabricCreationInputOutputWithContext(ctx context.Context) InMageRcmFabricCreationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmFabricCreationInputOutput)
}

func (i InMageRcmFabricCreationInputArgs) ToInMageRcmFabricCreationInputPtrOutput() InMageRcmFabricCreationInputPtrOutput {
	return i.ToInMageRcmFabricCreationInputPtrOutputWithContext(context.Background())
}

func (i InMageRcmFabricCreationInputArgs) ToInMageRcmFabricCreationInputPtrOutputWithContext(ctx context.Context) InMageRcmFabricCreationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmFabricCreationInputOutput).ToInMageRcmFabricCreationInputPtrOutputWithContext(ctx)
}

// InMageRcmFabricCreationInputPtrInput is an input type that accepts InMageRcmFabricCreationInputArgs, InMageRcmFabricCreationInputPtr and InMageRcmFabricCreationInputPtrOutput values.
// You can construct a concrete instance of `InMageRcmFabricCreationInputPtrInput` via:
//
//	        InMageRcmFabricCreationInputArgs{...}
//
//	or:
//
//	        nil
type InMageRcmFabricCreationInputPtrInput interface {
	pulumi.Input

	ToInMageRcmFabricCreationInputPtrOutput() InMageRcmFabricCreationInputPtrOutput
	ToInMageRcmFabricCreationInputPtrOutputWithContext(context.Context) InMageRcmFabricCreationInputPtrOutput
}

type inMageRcmFabricCreationInputPtrType InMageRcmFabricCreationInputArgs

func InMageRcmFabricCreationInputPtr(v *InMageRcmFabricCreationInputArgs) InMageRcmFabricCreationInputPtrInput {
	return (*inMageRcmFabricCreationInputPtrType)(v)
}

func (*inMageRcmFabricCreationInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmFabricCreationInput)(nil)).Elem()
}

func (i *inMageRcmFabricCreationInputPtrType) ToInMageRcmFabricCreationInputPtrOutput() InMageRcmFabricCreationInputPtrOutput {
	return i.ToInMageRcmFabricCreationInputPtrOutputWithContext(context.Background())
}

func (i *inMageRcmFabricCreationInputPtrType) ToInMageRcmFabricCreationInputPtrOutputWithContext(ctx context.Context) InMageRcmFabricCreationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmFabricCreationInputPtrOutput)
}

// InMageRcm fabric provider specific settings.
type InMageRcmFabricCreationInputOutput struct{ *pulumi.OutputState }

func (InMageRcmFabricCreationInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmFabricCreationInput)(nil)).Elem()
}

func (o InMageRcmFabricCreationInputOutput) ToInMageRcmFabricCreationInputOutput() InMageRcmFabricCreationInputOutput {
	return o
}

func (o InMageRcmFabricCreationInputOutput) ToInMageRcmFabricCreationInputOutputWithContext(ctx context.Context) InMageRcmFabricCreationInputOutput {
	return o
}

func (o InMageRcmFabricCreationInputOutput) ToInMageRcmFabricCreationInputPtrOutput() InMageRcmFabricCreationInputPtrOutput {
	return o.ToInMageRcmFabricCreationInputPtrOutputWithContext(context.Background())
}

func (o InMageRcmFabricCreationInputOutput) ToInMageRcmFabricCreationInputPtrOutputWithContext(ctx context.Context) InMageRcmFabricCreationInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InMageRcmFabricCreationInput) *InMageRcmFabricCreationInput {
		return &v
	}).(InMageRcmFabricCreationInputPtrOutput)
}

// Gets the class type.
// Expected value is 'InMageRcm'.
func (o InMageRcmFabricCreationInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFabricCreationInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The ARM Id of the physical site.
func (o InMageRcmFabricCreationInputOutput) PhysicalSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFabricCreationInput) string { return v.PhysicalSiteId }).(pulumi.StringOutput)
}

// The identity provider input for source agent authentication.
func (o InMageRcmFabricCreationInputOutput) SourceAgentIdentity() IdentityProviderInputOutput {
	return o.ApplyT(func(v InMageRcmFabricCreationInput) IdentityProviderInput { return v.SourceAgentIdentity }).(IdentityProviderInputOutput)
}

// The ARM Id of the VMware site.
func (o InMageRcmFabricCreationInputOutput) VmwareSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFabricCreationInput) string { return v.VmwareSiteId }).(pulumi.StringOutput)
}

type InMageRcmFabricCreationInputPtrOutput struct{ *pulumi.OutputState }

func (InMageRcmFabricCreationInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmFabricCreationInput)(nil)).Elem()
}

func (o InMageRcmFabricCreationInputPtrOutput) ToInMageRcmFabricCreationInputPtrOutput() InMageRcmFabricCreationInputPtrOutput {
	return o
}

func (o InMageRcmFabricCreationInputPtrOutput) ToInMageRcmFabricCreationInputPtrOutputWithContext(ctx context.Context) InMageRcmFabricCreationInputPtrOutput {
	return o
}

func (o InMageRcmFabricCreationInputPtrOutput) Elem() InMageRcmFabricCreationInputOutput {
	return o.ApplyT(func(v *InMageRcmFabricCreationInput) InMageRcmFabricCreationInput {
		if v != nil {
			return *v
		}
		var ret InMageRcmFabricCreationInput
		return ret
	}).(InMageRcmFabricCreationInputOutput)
}

// Gets the class type.
// Expected value is 'InMageRcm'.
func (o InMageRcmFabricCreationInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFabricCreationInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The ARM Id of the physical site.
func (o InMageRcmFabricCreationInputPtrOutput) PhysicalSiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFabricCreationInput) *string {
		if v == nil {
			return nil
		}
		return &v.PhysicalSiteId
	}).(pulumi.StringPtrOutput)
}

// The identity provider input for source agent authentication.
func (o InMageRcmFabricCreationInputPtrOutput) SourceAgentIdentity() IdentityProviderInputPtrOutput {
	return o.ApplyT(func(v *InMageRcmFabricCreationInput) *IdentityProviderInput {
		if v == nil {
			return nil
		}
		return &v.SourceAgentIdentity
	}).(IdentityProviderInputPtrOutput)
}

// The ARM Id of the VMware site.
func (o InMageRcmFabricCreationInputPtrOutput) VmwareSiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFabricCreationInput) *string {
		if v == nil {
			return nil
		}
		return &v.VmwareSiteId
	}).(pulumi.StringPtrOutput)
}

// InMageRcm fabric specific details.
type InMageRcmFabricSpecificDetailsResponse struct {
	// The list of agent details.
	AgentDetails []AgentDetailsResponse `pulumi:"agentDetails"`
	// The control plane Uri.
	ControlPlaneUri string `pulumi:"controlPlaneUri"`
	// The data plane Uri.
	DataPlaneUri string `pulumi:"dataPlaneUri"`
	// The list of DRAs.
	Dras []DraDetailsResponse `pulumi:"dras"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'InMageRcm'.
	InstanceType string `pulumi:"instanceType"`
	// The list of Mars agents.
	MarsAgents []MarsAgentDetailsResponse `pulumi:"marsAgents"`
	// The ARM Id of the physical site.
	PhysicalSiteId string `pulumi:"physicalSiteId"`
	// The list of process servers.
	ProcessServers []ProcessServerDetailsResponse `pulumi:"processServers"`
	// The list of push installers.
	PushInstallers []PushInstallerDetailsResponse `pulumi:"pushInstallers"`
	// The list of RCM proxies.
	RcmProxies []RcmProxyDetailsResponse `pulumi:"rcmProxies"`
	// The list of replication agents.
	ReplicationAgents []ReplicationAgentDetailsResponse `pulumi:"replicationAgents"`
	// The list of reprotect agents.
	ReprotectAgents []ReprotectAgentDetailsResponse `pulumi:"reprotectAgents"`
	// The service container Id.
	ServiceContainerId string `pulumi:"serviceContainerId"`
	// The service endpoint.
	ServiceEndpoint string `pulumi:"serviceEndpoint"`
	// The service resource Id.
	ServiceResourceId string `pulumi:"serviceResourceId"`
	// The source agent identity details.
	SourceAgentIdentityDetails *IdentityProviderDetailsResponse `pulumi:"sourceAgentIdentityDetails"`
	// The ARM Id of the VMware site.
	VmwareSiteId string `pulumi:"vmwareSiteId"`
}

// InMageRcm fabric specific details.
type InMageRcmFabricSpecificDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmFabricSpecificDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmFabricSpecificDetailsResponse)(nil)).Elem()
}

func (o InMageRcmFabricSpecificDetailsResponseOutput) ToInMageRcmFabricSpecificDetailsResponseOutput() InMageRcmFabricSpecificDetailsResponseOutput {
	return o
}

func (o InMageRcmFabricSpecificDetailsResponseOutput) ToInMageRcmFabricSpecificDetailsResponseOutputWithContext(ctx context.Context) InMageRcmFabricSpecificDetailsResponseOutput {
	return o
}

// The list of agent details.
func (o InMageRcmFabricSpecificDetailsResponseOutput) AgentDetails() AgentDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) []AgentDetailsResponse { return v.AgentDetails }).(AgentDetailsResponseArrayOutput)
}

// The control plane Uri.
func (o InMageRcmFabricSpecificDetailsResponseOutput) ControlPlaneUri() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) string { return v.ControlPlaneUri }).(pulumi.StringOutput)
}

// The data plane Uri.
func (o InMageRcmFabricSpecificDetailsResponseOutput) DataPlaneUri() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) string { return v.DataPlaneUri }).(pulumi.StringOutput)
}

// The list of DRAs.
func (o InMageRcmFabricSpecificDetailsResponseOutput) Dras() DraDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) []DraDetailsResponse { return v.Dras }).(DraDetailsResponseArrayOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'InMageRcm'.
func (o InMageRcmFabricSpecificDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The list of Mars agents.
func (o InMageRcmFabricSpecificDetailsResponseOutput) MarsAgents() MarsAgentDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) []MarsAgentDetailsResponse { return v.MarsAgents }).(MarsAgentDetailsResponseArrayOutput)
}

// The ARM Id of the physical site.
func (o InMageRcmFabricSpecificDetailsResponseOutput) PhysicalSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) string { return v.PhysicalSiteId }).(pulumi.StringOutput)
}

// The list of process servers.
func (o InMageRcmFabricSpecificDetailsResponseOutput) ProcessServers() ProcessServerDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) []ProcessServerDetailsResponse { return v.ProcessServers }).(ProcessServerDetailsResponseArrayOutput)
}

// The list of push installers.
func (o InMageRcmFabricSpecificDetailsResponseOutput) PushInstallers() PushInstallerDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) []PushInstallerDetailsResponse { return v.PushInstallers }).(PushInstallerDetailsResponseArrayOutput)
}

// The list of RCM proxies.
func (o InMageRcmFabricSpecificDetailsResponseOutput) RcmProxies() RcmProxyDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) []RcmProxyDetailsResponse { return v.RcmProxies }).(RcmProxyDetailsResponseArrayOutput)
}

// The list of replication agents.
func (o InMageRcmFabricSpecificDetailsResponseOutput) ReplicationAgents() ReplicationAgentDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) []ReplicationAgentDetailsResponse {
		return v.ReplicationAgents
	}).(ReplicationAgentDetailsResponseArrayOutput)
}

// The list of reprotect agents.
func (o InMageRcmFabricSpecificDetailsResponseOutput) ReprotectAgents() ReprotectAgentDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) []ReprotectAgentDetailsResponse {
		return v.ReprotectAgents
	}).(ReprotectAgentDetailsResponseArrayOutput)
}

// The service container Id.
func (o InMageRcmFabricSpecificDetailsResponseOutput) ServiceContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) string { return v.ServiceContainerId }).(pulumi.StringOutput)
}

// The service endpoint.
func (o InMageRcmFabricSpecificDetailsResponseOutput) ServiceEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) string { return v.ServiceEndpoint }).(pulumi.StringOutput)
}

// The service resource Id.
func (o InMageRcmFabricSpecificDetailsResponseOutput) ServiceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) string { return v.ServiceResourceId }).(pulumi.StringOutput)
}

// The source agent identity details.
func (o InMageRcmFabricSpecificDetailsResponseOutput) SourceAgentIdentityDetails() IdentityProviderDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) *IdentityProviderDetailsResponse {
		return v.SourceAgentIdentityDetails
	}).(IdentityProviderDetailsResponsePtrOutput)
}

// The ARM Id of the VMware site.
func (o InMageRcmFabricSpecificDetailsResponseOutput) VmwareSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFabricSpecificDetailsResponse) string { return v.VmwareSiteId }).(pulumi.StringOutput)
}

type InMageRcmFabricSpecificDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageRcmFabricSpecificDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmFabricSpecificDetailsResponse)(nil)).Elem()
}

func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) ToInMageRcmFabricSpecificDetailsResponsePtrOutput() InMageRcmFabricSpecificDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) ToInMageRcmFabricSpecificDetailsResponsePtrOutputWithContext(ctx context.Context) InMageRcmFabricSpecificDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) Elem() InMageRcmFabricSpecificDetailsResponseOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) InMageRcmFabricSpecificDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageRcmFabricSpecificDetailsResponse
		return ret
	}).(InMageRcmFabricSpecificDetailsResponseOutput)
}

// The list of agent details.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) AgentDetails() AgentDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) []AgentDetailsResponse {
		if v == nil {
			return nil
		}
		return v.AgentDetails
	}).(AgentDetailsResponseArrayOutput)
}

// The control plane Uri.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) ControlPlaneUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ControlPlaneUri
	}).(pulumi.StringPtrOutput)
}

// The data plane Uri.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) DataPlaneUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataPlaneUri
	}).(pulumi.StringPtrOutput)
}

// The list of DRAs.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) Dras() DraDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) []DraDetailsResponse {
		if v == nil {
			return nil
		}
		return v.Dras
	}).(DraDetailsResponseArrayOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'InMageRcm'.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The list of Mars agents.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) MarsAgents() MarsAgentDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) []MarsAgentDetailsResponse {
		if v == nil {
			return nil
		}
		return v.MarsAgents
	}).(MarsAgentDetailsResponseArrayOutput)
}

// The ARM Id of the physical site.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) PhysicalSiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PhysicalSiteId
	}).(pulumi.StringPtrOutput)
}

// The list of process servers.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) ProcessServers() ProcessServerDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) []ProcessServerDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProcessServers
	}).(ProcessServerDetailsResponseArrayOutput)
}

// The list of push installers.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) PushInstallers() PushInstallerDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) []PushInstallerDetailsResponse {
		if v == nil {
			return nil
		}
		return v.PushInstallers
	}).(PushInstallerDetailsResponseArrayOutput)
}

// The list of RCM proxies.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) RcmProxies() RcmProxyDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) []RcmProxyDetailsResponse {
		if v == nil {
			return nil
		}
		return v.RcmProxies
	}).(RcmProxyDetailsResponseArrayOutput)
}

// The list of replication agents.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) ReplicationAgents() ReplicationAgentDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) []ReplicationAgentDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ReplicationAgents
	}).(ReplicationAgentDetailsResponseArrayOutput)
}

// The list of reprotect agents.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) ReprotectAgents() ReprotectAgentDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) []ReprotectAgentDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ReprotectAgents
	}).(ReprotectAgentDetailsResponseArrayOutput)
}

// The service container Id.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) ServiceContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceContainerId
	}).(pulumi.StringPtrOutput)
}

// The service endpoint.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) ServiceEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceEndpoint
	}).(pulumi.StringPtrOutput)
}

// The service resource Id.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) ServiceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceResourceId
	}).(pulumi.StringPtrOutput)
}

// The source agent identity details.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) SourceAgentIdentityDetails() IdentityProviderDetailsResponsePtrOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) *IdentityProviderDetailsResponse {
		if v == nil {
			return nil
		}
		return v.SourceAgentIdentityDetails
	}).(IdentityProviderDetailsResponsePtrOutput)
}

// The ARM Id of the VMware site.
func (o InMageRcmFabricSpecificDetailsResponsePtrOutput) VmwareSiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmwareSiteId
	}).(pulumi.StringPtrOutput)
}

// InMageRcmFailback discovered VM details.
type InMageRcmFailbackDiscoveredProtectedVmDetailsResponse struct {
	// The SDS created timestamp.
	CreatedTimestamp string `pulumi:"createdTimestamp"`
	// The list of datastores.
	Datastores []string `pulumi:"datastores"`
	// The list of IP addresses.
	IpAddresses []string `pulumi:"ipAddresses"`
	// A value indicating whether the VM is deleted.
	IsDeleted bool `pulumi:"isDeleted"`
	// The last time when SDS information discovered in SRS.
	LastDiscoveryTimeInUtc string `pulumi:"lastDiscoveryTimeInUtc"`
	// The VM's OS name.
	OsName string `pulumi:"osName"`
	// The VM power status.
	PowerStatus string `pulumi:"powerStatus"`
	// The SDS updated timestamp.
	UpdatedTimestamp string `pulumi:"updatedTimestamp"`
	// The VCenter fqdn.
	VCenterFqdn string `pulumi:"vCenterFqdn"`
	// The VCenter Id.
	VCenterId string `pulumi:"vCenterId"`
	// The VM fqdn.
	VmFqdn string `pulumi:"vmFqdn"`
	// The VMware tools status.
	VmwareToolsStatus string `pulumi:"vmwareToolsStatus"`
}

// InMageRcmFailback discovered VM details.
type InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmFailbackDiscoveredProtectedVmDetailsResponse)(nil)).Elem()
}

func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput) ToInMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput() InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput {
	return o
}

func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput) ToInMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutputWithContext(ctx context.Context) InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput {
	return o
}

// The SDS created timestamp.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput) CreatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) string { return v.CreatedTimestamp }).(pulumi.StringOutput)
}

// The list of datastores.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput) Datastores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) []string { return v.Datastores }).(pulumi.StringArrayOutput)
}

// The list of IP addresses.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// A value indicating whether the VM is deleted.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput) IsDeleted() pulumi.BoolOutput {
	return o.ApplyT(func(v InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) bool { return v.IsDeleted }).(pulumi.BoolOutput)
}

// The last time when SDS information discovered in SRS.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput) LastDiscoveryTimeInUtc() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) string { return v.LastDiscoveryTimeInUtc }).(pulumi.StringOutput)
}

// The VM's OS name.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) string { return v.OsName }).(pulumi.StringOutput)
}

// The VM power status.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput) PowerStatus() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) string { return v.PowerStatus }).(pulumi.StringOutput)
}

// The SDS updated timestamp.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput) UpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) string { return v.UpdatedTimestamp }).(pulumi.StringOutput)
}

// The VCenter fqdn.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput) VCenterFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) string { return v.VCenterFqdn }).(pulumi.StringOutput)
}

// The VCenter Id.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput) VCenterId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) string { return v.VCenterId }).(pulumi.StringOutput)
}

// The VM fqdn.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput) VmFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) string { return v.VmFqdn }).(pulumi.StringOutput)
}

// The VMware tools status.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput) VmwareToolsStatus() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) string { return v.VmwareToolsStatus }).(pulumi.StringOutput)
}

type InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmFailbackDiscoveredProtectedVmDetailsResponse)(nil)).Elem()
}

func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput) ToInMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput() InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput) ToInMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutputWithContext(ctx context.Context) InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput) Elem() InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput {
	return o.ApplyT(func(v *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) InMageRcmFailbackDiscoveredProtectedVmDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageRcmFailbackDiscoveredProtectedVmDetailsResponse
		return ret
	}).(InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput)
}

// The SDS created timestamp.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput) CreatedTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CreatedTimestamp
	}).(pulumi.StringPtrOutput)
}

// The list of datastores.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput) Datastores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.Datastores
	}).(pulumi.StringArrayOutput)
}

// The list of IP addresses.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

// A value indicating whether the VM is deleted.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput) IsDeleted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsDeleted
	}).(pulumi.BoolPtrOutput)
}

// The last time when SDS information discovered in SRS.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput) LastDiscoveryTimeInUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastDiscoveryTimeInUtc
	}).(pulumi.StringPtrOutput)
}

// The VM's OS name.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput) OsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OsName
	}).(pulumi.StringPtrOutput)
}

// The VM power status.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput) PowerStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PowerStatus
	}).(pulumi.StringPtrOutput)
}

// The SDS updated timestamp.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput) UpdatedTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpdatedTimestamp
	}).(pulumi.StringPtrOutput)
}

// The VCenter fqdn.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput) VCenterFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VCenterFqdn
	}).(pulumi.StringPtrOutput)
}

// The VCenter Id.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput) VCenterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VCenterId
	}).(pulumi.StringPtrOutput)
}

// The VM fqdn.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput) VmFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmFqdn
	}).(pulumi.StringPtrOutput)
}

// The VMware tools status.
func (o InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput) VmwareToolsStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmwareToolsStatus
	}).(pulumi.StringPtrOutput)
}

// InMageRcmFailback mobility agent details.
type InMageRcmFailbackMobilityAgentDetailsResponse struct {
	// The agent version expiry date.
	AgentVersionExpiryDate string `pulumi:"agentVersionExpiryDate"`
	// The driver version.
	DriverVersion string `pulumi:"driverVersion"`
	// The driver version expiry date.
	DriverVersionExpiryDate string `pulumi:"driverVersionExpiryDate"`
	// A value indicating whether agent is upgradeable or not.
	IsUpgradeable string `pulumi:"isUpgradeable"`
	// The time of the last heartbeat received from the agent.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The latest upgradeable version available without reboot.
	LatestUpgradableVersionWithoutReboot string `pulumi:"latestUpgradableVersionWithoutReboot"`
	// The latest agent version available.
	LatestVersion string `pulumi:"latestVersion"`
	// The whether update is possible or not.
	ReasonsBlockingUpgrade []string `pulumi:"reasonsBlockingUpgrade"`
	// The agent version.
	Version string `pulumi:"version"`
}

// InMageRcmFailback mobility agent details.
type InMageRcmFailbackMobilityAgentDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmFailbackMobilityAgentDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmFailbackMobilityAgentDetailsResponse)(nil)).Elem()
}

func (o InMageRcmFailbackMobilityAgentDetailsResponseOutput) ToInMageRcmFailbackMobilityAgentDetailsResponseOutput() InMageRcmFailbackMobilityAgentDetailsResponseOutput {
	return o
}

func (o InMageRcmFailbackMobilityAgentDetailsResponseOutput) ToInMageRcmFailbackMobilityAgentDetailsResponseOutputWithContext(ctx context.Context) InMageRcmFailbackMobilityAgentDetailsResponseOutput {
	return o
}

// The agent version expiry date.
func (o InMageRcmFailbackMobilityAgentDetailsResponseOutput) AgentVersionExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackMobilityAgentDetailsResponse) string { return v.AgentVersionExpiryDate }).(pulumi.StringOutput)
}

// The driver version.
func (o InMageRcmFailbackMobilityAgentDetailsResponseOutput) DriverVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackMobilityAgentDetailsResponse) string { return v.DriverVersion }).(pulumi.StringOutput)
}

// The driver version expiry date.
func (o InMageRcmFailbackMobilityAgentDetailsResponseOutput) DriverVersionExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackMobilityAgentDetailsResponse) string { return v.DriverVersionExpiryDate }).(pulumi.StringOutput)
}

// A value indicating whether agent is upgradeable or not.
func (o InMageRcmFailbackMobilityAgentDetailsResponseOutput) IsUpgradeable() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackMobilityAgentDetailsResponse) string { return v.IsUpgradeable }).(pulumi.StringOutput)
}

// The time of the last heartbeat received from the agent.
func (o InMageRcmFailbackMobilityAgentDetailsResponseOutput) LastHeartbeatUtc() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackMobilityAgentDetailsResponse) string { return v.LastHeartbeatUtc }).(pulumi.StringOutput)
}

// The latest upgradeable version available without reboot.
func (o InMageRcmFailbackMobilityAgentDetailsResponseOutput) LatestUpgradableVersionWithoutReboot() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackMobilityAgentDetailsResponse) string {
		return v.LatestUpgradableVersionWithoutReboot
	}).(pulumi.StringOutput)
}

// The latest agent version available.
func (o InMageRcmFailbackMobilityAgentDetailsResponseOutput) LatestVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackMobilityAgentDetailsResponse) string { return v.LatestVersion }).(pulumi.StringOutput)
}

// The whether update is possible or not.
func (o InMageRcmFailbackMobilityAgentDetailsResponseOutput) ReasonsBlockingUpgrade() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InMageRcmFailbackMobilityAgentDetailsResponse) []string { return v.ReasonsBlockingUpgrade }).(pulumi.StringArrayOutput)
}

// The agent version.
func (o InMageRcmFailbackMobilityAgentDetailsResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackMobilityAgentDetailsResponse) string { return v.Version }).(pulumi.StringOutput)
}

type InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmFailbackMobilityAgentDetailsResponse)(nil)).Elem()
}

func (o InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput) ToInMageRcmFailbackMobilityAgentDetailsResponsePtrOutput() InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput) ToInMageRcmFailbackMobilityAgentDetailsResponsePtrOutputWithContext(ctx context.Context) InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput) Elem() InMageRcmFailbackMobilityAgentDetailsResponseOutput {
	return o.ApplyT(func(v *InMageRcmFailbackMobilityAgentDetailsResponse) InMageRcmFailbackMobilityAgentDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageRcmFailbackMobilityAgentDetailsResponse
		return ret
	}).(InMageRcmFailbackMobilityAgentDetailsResponseOutput)
}

// The agent version expiry date.
func (o InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput) AgentVersionExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AgentVersionExpiryDate
	}).(pulumi.StringPtrOutput)
}

// The driver version.
func (o InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput) DriverVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DriverVersion
	}).(pulumi.StringPtrOutput)
}

// The driver version expiry date.
func (o InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput) DriverVersionExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DriverVersionExpiryDate
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether agent is upgradeable or not.
func (o InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput) IsUpgradeable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IsUpgradeable
	}).(pulumi.StringPtrOutput)
}

// The time of the last heartbeat received from the agent.
func (o InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput) LastHeartbeatUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastHeartbeatUtc
	}).(pulumi.StringPtrOutput)
}

// The latest upgradeable version available without reboot.
func (o InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput) LatestUpgradableVersionWithoutReboot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LatestUpgradableVersionWithoutReboot
	}).(pulumi.StringPtrOutput)
}

// The latest agent version available.
func (o InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput) LatestVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LatestVersion
	}).(pulumi.StringPtrOutput)
}

// The whether update is possible or not.
func (o InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput) ReasonsBlockingUpgrade() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InMageRcmFailbackMobilityAgentDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.ReasonsBlockingUpgrade
	}).(pulumi.StringArrayOutput)
}

// The agent version.
func (o InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// InMageRcmFailback NIC details.
type InMageRcmFailbackNicDetailsResponse struct {
	// The adapter type.
	AdapterType string `pulumi:"adapterType"`
	// The mac address.
	MacAddress string `pulumi:"macAddress"`
	// The network name.
	NetworkName string `pulumi:"networkName"`
	// The IP address.
	SourceIpAddress string `pulumi:"sourceIpAddress"`
}

// InMageRcmFailback NIC details.
type InMageRcmFailbackNicDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmFailbackNicDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmFailbackNicDetailsResponse)(nil)).Elem()
}

func (o InMageRcmFailbackNicDetailsResponseOutput) ToInMageRcmFailbackNicDetailsResponseOutput() InMageRcmFailbackNicDetailsResponseOutput {
	return o
}

func (o InMageRcmFailbackNicDetailsResponseOutput) ToInMageRcmFailbackNicDetailsResponseOutputWithContext(ctx context.Context) InMageRcmFailbackNicDetailsResponseOutput {
	return o
}

// The adapter type.
func (o InMageRcmFailbackNicDetailsResponseOutput) AdapterType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackNicDetailsResponse) string { return v.AdapterType }).(pulumi.StringOutput)
}

// The mac address.
func (o InMageRcmFailbackNicDetailsResponseOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackNicDetailsResponse) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The network name.
func (o InMageRcmFailbackNicDetailsResponseOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackNicDetailsResponse) string { return v.NetworkName }).(pulumi.StringOutput)
}

// The IP address.
func (o InMageRcmFailbackNicDetailsResponseOutput) SourceIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackNicDetailsResponse) string { return v.SourceIpAddress }).(pulumi.StringOutput)
}

type InMageRcmFailbackNicDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InMageRcmFailbackNicDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageRcmFailbackNicDetailsResponse)(nil)).Elem()
}

func (o InMageRcmFailbackNicDetailsResponseArrayOutput) ToInMageRcmFailbackNicDetailsResponseArrayOutput() InMageRcmFailbackNicDetailsResponseArrayOutput {
	return o
}

func (o InMageRcmFailbackNicDetailsResponseArrayOutput) ToInMageRcmFailbackNicDetailsResponseArrayOutputWithContext(ctx context.Context) InMageRcmFailbackNicDetailsResponseArrayOutput {
	return o
}

func (o InMageRcmFailbackNicDetailsResponseArrayOutput) Index(i pulumi.IntInput) InMageRcmFailbackNicDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageRcmFailbackNicDetailsResponse {
		return vs[0].([]InMageRcmFailbackNicDetailsResponse)[vs[1].(int)]
	}).(InMageRcmFailbackNicDetailsResponseOutput)
}

// InMageRcmFailback policy creation input.
type InMageRcmFailbackPolicyCreationInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	// Expected value is 'InMageRcmFailback'.
	InstanceType string `pulumi:"instanceType"`
}

// InMageRcmFailbackPolicyCreationInputInput is an input type that accepts InMageRcmFailbackPolicyCreationInputArgs and InMageRcmFailbackPolicyCreationInputOutput values.
// You can construct a concrete instance of `InMageRcmFailbackPolicyCreationInputInput` via:
//
//	InMageRcmFailbackPolicyCreationInputArgs{...}
type InMageRcmFailbackPolicyCreationInputInput interface {
	pulumi.Input

	ToInMageRcmFailbackPolicyCreationInputOutput() InMageRcmFailbackPolicyCreationInputOutput
	ToInMageRcmFailbackPolicyCreationInputOutputWithContext(context.Context) InMageRcmFailbackPolicyCreationInputOutput
}

// InMageRcmFailback policy creation input.
type InMageRcmFailbackPolicyCreationInputArgs struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	// Expected value is 'InMageRcmFailback'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
}

func (InMageRcmFailbackPolicyCreationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmFailbackPolicyCreationInput)(nil)).Elem()
}

func (i InMageRcmFailbackPolicyCreationInputArgs) ToInMageRcmFailbackPolicyCreationInputOutput() InMageRcmFailbackPolicyCreationInputOutput {
	return i.ToInMageRcmFailbackPolicyCreationInputOutputWithContext(context.Background())
}

func (i InMageRcmFailbackPolicyCreationInputArgs) ToInMageRcmFailbackPolicyCreationInputOutputWithContext(ctx context.Context) InMageRcmFailbackPolicyCreationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmFailbackPolicyCreationInputOutput)
}

func (i InMageRcmFailbackPolicyCreationInputArgs) ToInMageRcmFailbackPolicyCreationInputPtrOutput() InMageRcmFailbackPolicyCreationInputPtrOutput {
	return i.ToInMageRcmFailbackPolicyCreationInputPtrOutputWithContext(context.Background())
}

func (i InMageRcmFailbackPolicyCreationInputArgs) ToInMageRcmFailbackPolicyCreationInputPtrOutputWithContext(ctx context.Context) InMageRcmFailbackPolicyCreationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmFailbackPolicyCreationInputOutput).ToInMageRcmFailbackPolicyCreationInputPtrOutputWithContext(ctx)
}

// InMageRcmFailbackPolicyCreationInputPtrInput is an input type that accepts InMageRcmFailbackPolicyCreationInputArgs, InMageRcmFailbackPolicyCreationInputPtr and InMageRcmFailbackPolicyCreationInputPtrOutput values.
// You can construct a concrete instance of `InMageRcmFailbackPolicyCreationInputPtrInput` via:
//
//	        InMageRcmFailbackPolicyCreationInputArgs{...}
//
//	or:
//
//	        nil
type InMageRcmFailbackPolicyCreationInputPtrInput interface {
	pulumi.Input

	ToInMageRcmFailbackPolicyCreationInputPtrOutput() InMageRcmFailbackPolicyCreationInputPtrOutput
	ToInMageRcmFailbackPolicyCreationInputPtrOutputWithContext(context.Context) InMageRcmFailbackPolicyCreationInputPtrOutput
}

type inMageRcmFailbackPolicyCreationInputPtrType InMageRcmFailbackPolicyCreationInputArgs

func InMageRcmFailbackPolicyCreationInputPtr(v *InMageRcmFailbackPolicyCreationInputArgs) InMageRcmFailbackPolicyCreationInputPtrInput {
	return (*inMageRcmFailbackPolicyCreationInputPtrType)(v)
}

func (*inMageRcmFailbackPolicyCreationInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmFailbackPolicyCreationInput)(nil)).Elem()
}

func (i *inMageRcmFailbackPolicyCreationInputPtrType) ToInMageRcmFailbackPolicyCreationInputPtrOutput() InMageRcmFailbackPolicyCreationInputPtrOutput {
	return i.ToInMageRcmFailbackPolicyCreationInputPtrOutputWithContext(context.Background())
}

func (i *inMageRcmFailbackPolicyCreationInputPtrType) ToInMageRcmFailbackPolicyCreationInputPtrOutputWithContext(ctx context.Context) InMageRcmFailbackPolicyCreationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmFailbackPolicyCreationInputPtrOutput)
}

// InMageRcmFailback policy creation input.
type InMageRcmFailbackPolicyCreationInputOutput struct{ *pulumi.OutputState }

func (InMageRcmFailbackPolicyCreationInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmFailbackPolicyCreationInput)(nil)).Elem()
}

func (o InMageRcmFailbackPolicyCreationInputOutput) ToInMageRcmFailbackPolicyCreationInputOutput() InMageRcmFailbackPolicyCreationInputOutput {
	return o
}

func (o InMageRcmFailbackPolicyCreationInputOutput) ToInMageRcmFailbackPolicyCreationInputOutputWithContext(ctx context.Context) InMageRcmFailbackPolicyCreationInputOutput {
	return o
}

func (o InMageRcmFailbackPolicyCreationInputOutput) ToInMageRcmFailbackPolicyCreationInputPtrOutput() InMageRcmFailbackPolicyCreationInputPtrOutput {
	return o.ToInMageRcmFailbackPolicyCreationInputPtrOutputWithContext(context.Background())
}

func (o InMageRcmFailbackPolicyCreationInputOutput) ToInMageRcmFailbackPolicyCreationInputPtrOutputWithContext(ctx context.Context) InMageRcmFailbackPolicyCreationInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InMageRcmFailbackPolicyCreationInput) *InMageRcmFailbackPolicyCreationInput {
		return &v
	}).(InMageRcmFailbackPolicyCreationInputPtrOutput)
}

// The app consistent snapshot frequency (in minutes).
func (o InMageRcmFailbackPolicyCreationInputOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageRcmFailbackPolicyCreationInput) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency (in minutes).
func (o InMageRcmFailbackPolicyCreationInputOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageRcmFailbackPolicyCreationInput) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The class type.
// Expected value is 'InMageRcmFailback'.
func (o InMageRcmFailbackPolicyCreationInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackPolicyCreationInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

type InMageRcmFailbackPolicyCreationInputPtrOutput struct{ *pulumi.OutputState }

func (InMageRcmFailbackPolicyCreationInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmFailbackPolicyCreationInput)(nil)).Elem()
}

func (o InMageRcmFailbackPolicyCreationInputPtrOutput) ToInMageRcmFailbackPolicyCreationInputPtrOutput() InMageRcmFailbackPolicyCreationInputPtrOutput {
	return o
}

func (o InMageRcmFailbackPolicyCreationInputPtrOutput) ToInMageRcmFailbackPolicyCreationInputPtrOutputWithContext(ctx context.Context) InMageRcmFailbackPolicyCreationInputPtrOutput {
	return o
}

func (o InMageRcmFailbackPolicyCreationInputPtrOutput) Elem() InMageRcmFailbackPolicyCreationInputOutput {
	return o.ApplyT(func(v *InMageRcmFailbackPolicyCreationInput) InMageRcmFailbackPolicyCreationInput {
		if v != nil {
			return *v
		}
		var ret InMageRcmFailbackPolicyCreationInput
		return ret
	}).(InMageRcmFailbackPolicyCreationInputOutput)
}

// The app consistent snapshot frequency (in minutes).
func (o InMageRcmFailbackPolicyCreationInputPtrOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackPolicyCreationInput) *int {
		if v == nil {
			return nil
		}
		return v.AppConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency (in minutes).
func (o InMageRcmFailbackPolicyCreationInputPtrOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackPolicyCreationInput) *int {
		if v == nil {
			return nil
		}
		return v.CrashConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// The class type.
// Expected value is 'InMageRcmFailback'.
func (o InMageRcmFailbackPolicyCreationInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackPolicyCreationInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// InMageRcm failback specific policy details.
type InMageRcmFailbackPolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'InMageRcmFailback'.
	InstanceType string `pulumi:"instanceType"`
}

// InMageRcm failback specific policy details.
type InMageRcmFailbackPolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmFailbackPolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmFailbackPolicyDetailsResponse)(nil)).Elem()
}

func (o InMageRcmFailbackPolicyDetailsResponseOutput) ToInMageRcmFailbackPolicyDetailsResponseOutput() InMageRcmFailbackPolicyDetailsResponseOutput {
	return o
}

func (o InMageRcmFailbackPolicyDetailsResponseOutput) ToInMageRcmFailbackPolicyDetailsResponseOutputWithContext(ctx context.Context) InMageRcmFailbackPolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o InMageRcmFailbackPolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageRcmFailbackPolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o InMageRcmFailbackPolicyDetailsResponseOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageRcmFailbackPolicyDetailsResponse) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'InMageRcmFailback'.
func (o InMageRcmFailbackPolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackPolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

type InMageRcmFailbackPolicyDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageRcmFailbackPolicyDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmFailbackPolicyDetailsResponse)(nil)).Elem()
}

func (o InMageRcmFailbackPolicyDetailsResponsePtrOutput) ToInMageRcmFailbackPolicyDetailsResponsePtrOutput() InMageRcmFailbackPolicyDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmFailbackPolicyDetailsResponsePtrOutput) ToInMageRcmFailbackPolicyDetailsResponsePtrOutputWithContext(ctx context.Context) InMageRcmFailbackPolicyDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmFailbackPolicyDetailsResponsePtrOutput) Elem() InMageRcmFailbackPolicyDetailsResponseOutput {
	return o.ApplyT(func(v *InMageRcmFailbackPolicyDetailsResponse) InMageRcmFailbackPolicyDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageRcmFailbackPolicyDetailsResponse
		return ret
	}).(InMageRcmFailbackPolicyDetailsResponseOutput)
}

// The app consistent snapshot frequency in minutes.
func (o InMageRcmFailbackPolicyDetailsResponsePtrOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackPolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.AppConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o InMageRcmFailbackPolicyDetailsResponsePtrOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackPolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.CrashConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'InMageRcmFailback'.
func (o InMageRcmFailbackPolicyDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackPolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// InMageRcmFailback protected disk details.
type InMageRcmFailbackProtectedDiskDetailsResponse struct {
	// The disk capacity in bytes.
	CapacityInBytes float64 `pulumi:"capacityInBytes"`
	// The data pending at source agent in MB.
	DataPendingAtSourceAgentInMB float64 `pulumi:"dataPendingAtSourceAgentInMB"`
	// The data pending in log data store in MB.
	DataPendingInLogDataStoreInMB float64 `pulumi:"dataPendingInLogDataStoreInMB"`
	// The disk Id (reported by source agent).
	DiskId string `pulumi:"diskId"`
	// The disk name.
	DiskName string `pulumi:"diskName"`
	// The disk Uuid (reported by vCenter).
	DiskUuid string `pulumi:"diskUuid"`
	// The initial replication details.
	IrDetails *InMageRcmFailbackSyncDetailsResponse `pulumi:"irDetails"`
	// A value indicating whether initial replication is complete or not.
	IsInitialReplicationComplete string `pulumi:"isInitialReplicationComplete"`
	// A value indicating whether the disk is the OS disk.
	IsOSDisk string `pulumi:"isOSDisk"`
	// The last sync time.
	LastSyncTime string `pulumi:"lastSyncTime"`
	// The resync details.
	ResyncDetails *InMageRcmFailbackSyncDetailsResponse `pulumi:"resyncDetails"`
}

// InMageRcmFailback protected disk details.
type InMageRcmFailbackProtectedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmFailbackProtectedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmFailbackProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageRcmFailbackProtectedDiskDetailsResponseOutput) ToInMageRcmFailbackProtectedDiskDetailsResponseOutput() InMageRcmFailbackProtectedDiskDetailsResponseOutput {
	return o
}

func (o InMageRcmFailbackProtectedDiskDetailsResponseOutput) ToInMageRcmFailbackProtectedDiskDetailsResponseOutputWithContext(ctx context.Context) InMageRcmFailbackProtectedDiskDetailsResponseOutput {
	return o
}

// The disk capacity in bytes.
func (o InMageRcmFailbackProtectedDiskDetailsResponseOutput) CapacityInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmFailbackProtectedDiskDetailsResponse) float64 { return v.CapacityInBytes }).(pulumi.Float64Output)
}

// The data pending at source agent in MB.
func (o InMageRcmFailbackProtectedDiskDetailsResponseOutput) DataPendingAtSourceAgentInMB() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmFailbackProtectedDiskDetailsResponse) float64 { return v.DataPendingAtSourceAgentInMB }).(pulumi.Float64Output)
}

// The data pending in log data store in MB.
func (o InMageRcmFailbackProtectedDiskDetailsResponseOutput) DataPendingInLogDataStoreInMB() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmFailbackProtectedDiskDetailsResponse) float64 { return v.DataPendingInLogDataStoreInMB }).(pulumi.Float64Output)
}

// The disk Id (reported by source agent).
func (o InMageRcmFailbackProtectedDiskDetailsResponseOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackProtectedDiskDetailsResponse) string { return v.DiskId }).(pulumi.StringOutput)
}

// The disk name.
func (o InMageRcmFailbackProtectedDiskDetailsResponseOutput) DiskName() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackProtectedDiskDetailsResponse) string { return v.DiskName }).(pulumi.StringOutput)
}

// The disk Uuid (reported by vCenter).
func (o InMageRcmFailbackProtectedDiskDetailsResponseOutput) DiskUuid() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackProtectedDiskDetailsResponse) string { return v.DiskUuid }).(pulumi.StringOutput)
}

// The initial replication details.
func (o InMageRcmFailbackProtectedDiskDetailsResponseOutput) IrDetails() InMageRcmFailbackSyncDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageRcmFailbackProtectedDiskDetailsResponse) *InMageRcmFailbackSyncDetailsResponse {
		return v.IrDetails
	}).(InMageRcmFailbackSyncDetailsResponsePtrOutput)
}

// A value indicating whether initial replication is complete or not.
func (o InMageRcmFailbackProtectedDiskDetailsResponseOutput) IsInitialReplicationComplete() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackProtectedDiskDetailsResponse) string { return v.IsInitialReplicationComplete }).(pulumi.StringOutput)
}

// A value indicating whether the disk is the OS disk.
func (o InMageRcmFailbackProtectedDiskDetailsResponseOutput) IsOSDisk() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackProtectedDiskDetailsResponse) string { return v.IsOSDisk }).(pulumi.StringOutput)
}

// The last sync time.
func (o InMageRcmFailbackProtectedDiskDetailsResponseOutput) LastSyncTime() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackProtectedDiskDetailsResponse) string { return v.LastSyncTime }).(pulumi.StringOutput)
}

// The resync details.
func (o InMageRcmFailbackProtectedDiskDetailsResponseOutput) ResyncDetails() InMageRcmFailbackSyncDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageRcmFailbackProtectedDiskDetailsResponse) *InMageRcmFailbackSyncDetailsResponse {
		return v.ResyncDetails
	}).(InMageRcmFailbackSyncDetailsResponsePtrOutput)
}

type InMageRcmFailbackProtectedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InMageRcmFailbackProtectedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageRcmFailbackProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageRcmFailbackProtectedDiskDetailsResponseArrayOutput) ToInMageRcmFailbackProtectedDiskDetailsResponseArrayOutput() InMageRcmFailbackProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageRcmFailbackProtectedDiskDetailsResponseArrayOutput) ToInMageRcmFailbackProtectedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) InMageRcmFailbackProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageRcmFailbackProtectedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) InMageRcmFailbackProtectedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageRcmFailbackProtectedDiskDetailsResponse {
		return vs[0].([]InMageRcmFailbackProtectedDiskDetailsResponse)[vs[1].(int)]
	}).(InMageRcmFailbackProtectedDiskDetailsResponseOutput)
}

// InMageRcmFailback provider specific details.
type InMageRcmFailbackReplicationDetailsResponse struct {
	// The ARM Id of the azure VM.
	AzureVirtualMachineId string `pulumi:"azureVirtualMachineId"`
	// The discovered VM information.
	DiscoveredVmDetails *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse `pulumi:"discoveredVmDetails"`
	// The initial replication processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
	InitialReplicationProcessedBytes float64 `pulumi:"initialReplicationProcessedBytes"`
	// The initial replication progress health.
	InitialReplicationProgressHealth string `pulumi:"initialReplicationProgressHealth"`
	// The initial replication progress percentage.
	InitialReplicationProgressPercentage int `pulumi:"initialReplicationProgressPercentage"`
	// The initial replication transferred bytes from source VM to target for all selected disks on source VM.
	InitialReplicationTransferredBytes float64 `pulumi:"initialReplicationTransferredBytes"`
	// Gets the Instance type.
	// Expected value is 'InMageRcmFailback'.
	InstanceType string `pulumi:"instanceType"`
	// The virtual machine internal identifier.
	InternalIdentifier string `pulumi:"internalIdentifier"`
	// A value indicating whether agent registration was successful after failover.
	IsAgentRegistrationSuccessfulAfterFailover bool `pulumi:"isAgentRegistrationSuccessfulAfterFailover"`
	// The last planned failover start time.
	LastPlannedFailoverStartTime string `pulumi:"lastPlannedFailoverStartTime"`
	// The last planned failover status.
	LastPlannedFailoverStatus string `pulumi:"lastPlannedFailoverStatus"`
	// The policy friendly name used by the forward replication.
	LastUsedPolicyFriendlyName string `pulumi:"lastUsedPolicyFriendlyName"`
	// The policy Id used by the forward replication.
	LastUsedPolicyId string `pulumi:"lastUsedPolicyId"`
	// The log storage account ARM Id.
	LogStorageAccountId string `pulumi:"logStorageAccountId"`
	// The mobility agent information.
	MobilityAgentDetails *InMageRcmFailbackMobilityAgentDetailsResponse `pulumi:"mobilityAgentDetails"`
	// The multi VM group name.
	MultiVmGroupName string `pulumi:"multiVmGroupName"`
	// The type of the OS on the VM.
	OsType string `pulumi:"osType"`
	// The list of protected disks.
	ProtectedDisks []InMageRcmFailbackProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The reprotect agent Id.
	ReprotectAgentId string `pulumi:"reprotectAgentId"`
	// The reprotect agent name.
	ReprotectAgentName string `pulumi:"reprotectAgentName"`
	// The resync processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
	ResyncProcessedBytes float64 `pulumi:"resyncProcessedBytes"`
	// The resync progress health.
	ResyncProgressHealth string `pulumi:"resyncProgressHealth"`
	// The resync progress percentage.
	ResyncProgressPercentage int `pulumi:"resyncProgressPercentage"`
	// A value indicating whether resync is required.
	ResyncRequired string `pulumi:"resyncRequired"`
	// The resync state.
	ResyncState string `pulumi:"resyncState"`
	// The resync transferred bytes from source VM to target for all selected disks on source VM.
	ResyncTransferredBytes float64 `pulumi:"resyncTransferredBytes"`
	// The target datastore name.
	TargetDataStoreName string `pulumi:"targetDataStoreName"`
	// The target VM name.
	TargetVmName string `pulumi:"targetVmName"`
	// The target vCenter Id.
	TargetvCenterId string `pulumi:"targetvCenterId"`
	// The network details.
	VmNics []InMageRcmFailbackNicDetailsResponse `pulumi:"vmNics"`
}

// InMageRcmFailback provider specific details.
type InMageRcmFailbackReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmFailbackReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmFailbackReplicationDetailsResponse)(nil)).Elem()
}

func (o InMageRcmFailbackReplicationDetailsResponseOutput) ToInMageRcmFailbackReplicationDetailsResponseOutput() InMageRcmFailbackReplicationDetailsResponseOutput {
	return o
}

func (o InMageRcmFailbackReplicationDetailsResponseOutput) ToInMageRcmFailbackReplicationDetailsResponseOutputWithContext(ctx context.Context) InMageRcmFailbackReplicationDetailsResponseOutput {
	return o
}

// The ARM Id of the azure VM.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) AzureVirtualMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.AzureVirtualMachineId }).(pulumi.StringOutput)
}

// The discovered VM information.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) DiscoveredVmDetails() InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse {
		return v.DiscoveredVmDetails
	}).(InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput)
}

// The initial replication processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) InitialReplicationProcessedBytes() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) float64 { return v.InitialReplicationProcessedBytes }).(pulumi.Float64Output)
}

// The initial replication progress health.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) InitialReplicationProgressHealth() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.InitialReplicationProgressHealth }).(pulumi.StringOutput)
}

// The initial replication progress percentage.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) InitialReplicationProgressPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) int { return v.InitialReplicationProgressPercentage }).(pulumi.IntOutput)
}

// The initial replication transferred bytes from source VM to target for all selected disks on source VM.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) InitialReplicationTransferredBytes() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) float64 {
		return v.InitialReplicationTransferredBytes
	}).(pulumi.Float64Output)
}

// Gets the Instance type.
// Expected value is 'InMageRcmFailback'.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The virtual machine internal identifier.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) InternalIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.InternalIdentifier }).(pulumi.StringOutput)
}

// A value indicating whether agent registration was successful after failover.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) IsAgentRegistrationSuccessfulAfterFailover() pulumi.BoolOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) bool {
		return v.IsAgentRegistrationSuccessfulAfterFailover
	}).(pulumi.BoolOutput)
}

// The last planned failover start time.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) LastPlannedFailoverStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.LastPlannedFailoverStartTime }).(pulumi.StringOutput)
}

// The last planned failover status.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) LastPlannedFailoverStatus() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.LastPlannedFailoverStatus }).(pulumi.StringOutput)
}

// The policy friendly name used by the forward replication.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) LastUsedPolicyFriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.LastUsedPolicyFriendlyName }).(pulumi.StringOutput)
}

// The policy Id used by the forward replication.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) LastUsedPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.LastUsedPolicyId }).(pulumi.StringOutput)
}

// The log storage account ARM Id.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) LogStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.LogStorageAccountId }).(pulumi.StringOutput)
}

// The mobility agent information.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) MobilityAgentDetails() InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) *InMageRcmFailbackMobilityAgentDetailsResponse {
		return v.MobilityAgentDetails
	}).(InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput)
}

// The multi VM group name.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) MultiVmGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.MultiVmGroupName }).(pulumi.StringOutput)
}

// The type of the OS on the VM.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.OsType }).(pulumi.StringOutput)
}

// The list of protected disks.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) ProtectedDisks() InMageRcmFailbackProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) []InMageRcmFailbackProtectedDiskDetailsResponse {
		return v.ProtectedDisks
	}).(InMageRcmFailbackProtectedDiskDetailsResponseArrayOutput)
}

// The reprotect agent Id.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) ReprotectAgentId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.ReprotectAgentId }).(pulumi.StringOutput)
}

// The reprotect agent name.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) ReprotectAgentName() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.ReprotectAgentName }).(pulumi.StringOutput)
}

// The resync processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) ResyncProcessedBytes() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) float64 { return v.ResyncProcessedBytes }).(pulumi.Float64Output)
}

// The resync progress health.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) ResyncProgressHealth() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.ResyncProgressHealth }).(pulumi.StringOutput)
}

// The resync progress percentage.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) ResyncProgressPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) int { return v.ResyncProgressPercentage }).(pulumi.IntOutput)
}

// A value indicating whether resync is required.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) ResyncRequired() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.ResyncRequired }).(pulumi.StringOutput)
}

// The resync state.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) ResyncState() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.ResyncState }).(pulumi.StringOutput)
}

// The resync transferred bytes from source VM to target for all selected disks on source VM.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) ResyncTransferredBytes() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) float64 { return v.ResyncTransferredBytes }).(pulumi.Float64Output)
}

// The target datastore name.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) TargetDataStoreName() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.TargetDataStoreName }).(pulumi.StringOutput)
}

// The target VM name.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) TargetVmName() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.TargetVmName }).(pulumi.StringOutput)
}

// The target vCenter Id.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) TargetvCenterId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) string { return v.TargetvCenterId }).(pulumi.StringOutput)
}

// The network details.
func (o InMageRcmFailbackReplicationDetailsResponseOutput) VmNics() InMageRcmFailbackNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageRcmFailbackReplicationDetailsResponse) []InMageRcmFailbackNicDetailsResponse {
		return v.VmNics
	}).(InMageRcmFailbackNicDetailsResponseArrayOutput)
}

type InMageRcmFailbackReplicationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageRcmFailbackReplicationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmFailbackReplicationDetailsResponse)(nil)).Elem()
}

func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) ToInMageRcmFailbackReplicationDetailsResponsePtrOutput() InMageRcmFailbackReplicationDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) ToInMageRcmFailbackReplicationDetailsResponsePtrOutputWithContext(ctx context.Context) InMageRcmFailbackReplicationDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) Elem() InMageRcmFailbackReplicationDetailsResponseOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) InMageRcmFailbackReplicationDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageRcmFailbackReplicationDetailsResponse
		return ret
	}).(InMageRcmFailbackReplicationDetailsResponseOutput)
}

// The ARM Id of the azure VM.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) AzureVirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AzureVirtualMachineId
	}).(pulumi.StringPtrOutput)
}

// The discovered VM information.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) DiscoveredVmDetails() InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *InMageRcmFailbackDiscoveredProtectedVmDetailsResponse {
		if v == nil {
			return nil
		}
		return v.DiscoveredVmDetails
	}).(InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput)
}

// The initial replication processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) InitialReplicationProcessedBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.InitialReplicationProcessedBytes
	}).(pulumi.Float64PtrOutput)
}

// The initial replication progress health.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) InitialReplicationProgressHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InitialReplicationProgressHealth
	}).(pulumi.StringPtrOutput)
}

// The initial replication progress percentage.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) InitialReplicationProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.InitialReplicationProgressPercentage
	}).(pulumi.IntPtrOutput)
}

// The initial replication transferred bytes from source VM to target for all selected disks on source VM.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) InitialReplicationTransferredBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.InitialReplicationTransferredBytes
	}).(pulumi.Float64PtrOutput)
}

// Gets the Instance type.
// Expected value is 'InMageRcmFailback'.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The virtual machine internal identifier.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) InternalIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InternalIdentifier
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether agent registration was successful after failover.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) IsAgentRegistrationSuccessfulAfterFailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsAgentRegistrationSuccessfulAfterFailover
	}).(pulumi.BoolPtrOutput)
}

// The last planned failover start time.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) LastPlannedFailoverStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastPlannedFailoverStartTime
	}).(pulumi.StringPtrOutput)
}

// The last planned failover status.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) LastPlannedFailoverStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastPlannedFailoverStatus
	}).(pulumi.StringPtrOutput)
}

// The policy friendly name used by the forward replication.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) LastUsedPolicyFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUsedPolicyFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The policy Id used by the forward replication.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) LastUsedPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUsedPolicyId
	}).(pulumi.StringPtrOutput)
}

// The log storage account ARM Id.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) LogStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LogStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The mobility agent information.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) MobilityAgentDetails() InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *InMageRcmFailbackMobilityAgentDetailsResponse {
		if v == nil {
			return nil
		}
		return v.MobilityAgentDetails
	}).(InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput)
}

// The multi VM group name.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MultiVmGroupName
	}).(pulumi.StringPtrOutput)
}

// The type of the OS on the VM.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OsType
	}).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) ProtectedDisks() InMageRcmFailbackProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) []InMageRcmFailbackProtectedDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProtectedDisks
	}).(InMageRcmFailbackProtectedDiskDetailsResponseArrayOutput)
}

// The reprotect agent Id.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) ReprotectAgentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReprotectAgentId
	}).(pulumi.StringPtrOutput)
}

// The reprotect agent name.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) ReprotectAgentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReprotectAgentName
	}).(pulumi.StringPtrOutput)
}

// The resync processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) ResyncProcessedBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.ResyncProcessedBytes
	}).(pulumi.Float64PtrOutput)
}

// The resync progress health.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) ResyncProgressHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResyncProgressHealth
	}).(pulumi.StringPtrOutput)
}

// The resync progress percentage.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) ResyncProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ResyncProgressPercentage
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether resync is required.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) ResyncRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResyncRequired
	}).(pulumi.StringPtrOutput)
}

// The resync state.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) ResyncState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResyncState
	}).(pulumi.StringPtrOutput)
}

// The resync transferred bytes from source VM to target for all selected disks on source VM.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) ResyncTransferredBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.ResyncTransferredBytes
	}).(pulumi.Float64PtrOutput)
}

// The target datastore name.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) TargetDataStoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetDataStoreName
	}).(pulumi.StringPtrOutput)
}

// The target VM name.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) TargetVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetVmName
	}).(pulumi.StringPtrOutput)
}

// The target vCenter Id.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) TargetvCenterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetvCenterId
	}).(pulumi.StringPtrOutput)
}

// The network details.
func (o InMageRcmFailbackReplicationDetailsResponsePtrOutput) VmNics() InMageRcmFailbackNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageRcmFailbackReplicationDetailsResponse) []InMageRcmFailbackNicDetailsResponse {
		if v == nil {
			return nil
		}
		return v.VmNics
	}).(InMageRcmFailbackNicDetailsResponseArrayOutput)
}

// InMageRcmFailback disk level sync details.
type InMageRcmFailbackSyncDetailsResponse struct {
	// The bytes transferred in last 15 minutes from source VM to target.
	Last15MinutesTransferredBytes float64 `pulumi:"last15MinutesTransferredBytes"`
	// The time of the last data transfer from source VM to target.
	LastDataTransferTimeUtc string `pulumi:"lastDataTransferTimeUtc"`
	// The last refresh time.
	LastRefreshTime string `pulumi:"lastRefreshTime"`
	// The total processed bytes. This includes bytes that are transferred from source VM to target and matched bytes.
	ProcessedBytes float64 `pulumi:"processedBytes"`
	// The progress health.
	ProgressHealth string `pulumi:"progressHealth"`
	// Progress in percentage. Progress percentage is calculated based on processed bytes.
	ProgressPercentage int `pulumi:"progressPercentage"`
	// The start time.
	StartTime string `pulumi:"startTime"`
	// The transferred bytes from source VM to azure for the disk.
	TransferredBytes float64 `pulumi:"transferredBytes"`
}

// InMageRcmFailback disk level sync details.
type InMageRcmFailbackSyncDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmFailbackSyncDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmFailbackSyncDetailsResponse)(nil)).Elem()
}

func (o InMageRcmFailbackSyncDetailsResponseOutput) ToInMageRcmFailbackSyncDetailsResponseOutput() InMageRcmFailbackSyncDetailsResponseOutput {
	return o
}

func (o InMageRcmFailbackSyncDetailsResponseOutput) ToInMageRcmFailbackSyncDetailsResponseOutputWithContext(ctx context.Context) InMageRcmFailbackSyncDetailsResponseOutput {
	return o
}

// The bytes transferred in last 15 minutes from source VM to target.
func (o InMageRcmFailbackSyncDetailsResponseOutput) Last15MinutesTransferredBytes() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmFailbackSyncDetailsResponse) float64 { return v.Last15MinutesTransferredBytes }).(pulumi.Float64Output)
}

// The time of the last data transfer from source VM to target.
func (o InMageRcmFailbackSyncDetailsResponseOutput) LastDataTransferTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackSyncDetailsResponse) string { return v.LastDataTransferTimeUtc }).(pulumi.StringOutput)
}

// The last refresh time.
func (o InMageRcmFailbackSyncDetailsResponseOutput) LastRefreshTime() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackSyncDetailsResponse) string { return v.LastRefreshTime }).(pulumi.StringOutput)
}

// The total processed bytes. This includes bytes that are transferred from source VM to target and matched bytes.
func (o InMageRcmFailbackSyncDetailsResponseOutput) ProcessedBytes() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmFailbackSyncDetailsResponse) float64 { return v.ProcessedBytes }).(pulumi.Float64Output)
}

// The progress health.
func (o InMageRcmFailbackSyncDetailsResponseOutput) ProgressHealth() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackSyncDetailsResponse) string { return v.ProgressHealth }).(pulumi.StringOutput)
}

// Progress in percentage. Progress percentage is calculated based on processed bytes.
func (o InMageRcmFailbackSyncDetailsResponseOutput) ProgressPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v InMageRcmFailbackSyncDetailsResponse) int { return v.ProgressPercentage }).(pulumi.IntOutput)
}

// The start time.
func (o InMageRcmFailbackSyncDetailsResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmFailbackSyncDetailsResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// The transferred bytes from source VM to azure for the disk.
func (o InMageRcmFailbackSyncDetailsResponseOutput) TransferredBytes() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmFailbackSyncDetailsResponse) float64 { return v.TransferredBytes }).(pulumi.Float64Output)
}

type InMageRcmFailbackSyncDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageRcmFailbackSyncDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmFailbackSyncDetailsResponse)(nil)).Elem()
}

func (o InMageRcmFailbackSyncDetailsResponsePtrOutput) ToInMageRcmFailbackSyncDetailsResponsePtrOutput() InMageRcmFailbackSyncDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmFailbackSyncDetailsResponsePtrOutput) ToInMageRcmFailbackSyncDetailsResponsePtrOutputWithContext(ctx context.Context) InMageRcmFailbackSyncDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmFailbackSyncDetailsResponsePtrOutput) Elem() InMageRcmFailbackSyncDetailsResponseOutput {
	return o.ApplyT(func(v *InMageRcmFailbackSyncDetailsResponse) InMageRcmFailbackSyncDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageRcmFailbackSyncDetailsResponse
		return ret
	}).(InMageRcmFailbackSyncDetailsResponseOutput)
}

// The bytes transferred in last 15 minutes from source VM to target.
func (o InMageRcmFailbackSyncDetailsResponsePtrOutput) Last15MinutesTransferredBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackSyncDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.Last15MinutesTransferredBytes
	}).(pulumi.Float64PtrOutput)
}

// The time of the last data transfer from source VM to target.
func (o InMageRcmFailbackSyncDetailsResponsePtrOutput) LastDataTransferTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackSyncDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastDataTransferTimeUtc
	}).(pulumi.StringPtrOutput)
}

// The last refresh time.
func (o InMageRcmFailbackSyncDetailsResponsePtrOutput) LastRefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackSyncDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastRefreshTime
	}).(pulumi.StringPtrOutput)
}

// The total processed bytes. This includes bytes that are transferred from source VM to target and matched bytes.
func (o InMageRcmFailbackSyncDetailsResponsePtrOutput) ProcessedBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackSyncDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.ProcessedBytes
	}).(pulumi.Float64PtrOutput)
}

// The progress health.
func (o InMageRcmFailbackSyncDetailsResponsePtrOutput) ProgressHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackSyncDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProgressHealth
	}).(pulumi.StringPtrOutput)
}

// Progress in percentage. Progress percentage is calculated based on processed bytes.
func (o InMageRcmFailbackSyncDetailsResponsePtrOutput) ProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackSyncDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ProgressPercentage
	}).(pulumi.IntPtrOutput)
}

// The start time.
func (o InMageRcmFailbackSyncDetailsResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackSyncDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The transferred bytes from source VM to azure for the disk.
func (o InMageRcmFailbackSyncDetailsResponsePtrOutput) TransferredBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageRcmFailbackSyncDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.TransferredBytes
	}).(pulumi.Float64PtrOutput)
}

// InMageRcm last source agent upgrade error details.
type InMageRcmLastAgentUpgradeErrorDetailsResponse struct {
	// The error code.
	ErrorCode string `pulumi:"errorCode"`
	// The error message.
	ErrorMessage string `pulumi:"errorMessage"`
	// The error message parameters.
	ErrorMessageParameters map[string]string `pulumi:"errorMessageParameters"`
	// The error tags.
	ErrorTags map[string]string `pulumi:"errorTags"`
	// The possible causes.
	PossibleCauses string `pulumi:"possibleCauses"`
	// The recommended action.
	RecommendedAction string `pulumi:"recommendedAction"`
}

// InMageRcm last source agent upgrade error details.
type InMageRcmLastAgentUpgradeErrorDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmLastAgentUpgradeErrorDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmLastAgentUpgradeErrorDetailsResponse)(nil)).Elem()
}

func (o InMageRcmLastAgentUpgradeErrorDetailsResponseOutput) ToInMageRcmLastAgentUpgradeErrorDetailsResponseOutput() InMageRcmLastAgentUpgradeErrorDetailsResponseOutput {
	return o
}

func (o InMageRcmLastAgentUpgradeErrorDetailsResponseOutput) ToInMageRcmLastAgentUpgradeErrorDetailsResponseOutputWithContext(ctx context.Context) InMageRcmLastAgentUpgradeErrorDetailsResponseOutput {
	return o
}

// The error code.
func (o InMageRcmLastAgentUpgradeErrorDetailsResponseOutput) ErrorCode() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmLastAgentUpgradeErrorDetailsResponse) string { return v.ErrorCode }).(pulumi.StringOutput)
}

// The error message.
func (o InMageRcmLastAgentUpgradeErrorDetailsResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmLastAgentUpgradeErrorDetailsResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// The error message parameters.
func (o InMageRcmLastAgentUpgradeErrorDetailsResponseOutput) ErrorMessageParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageRcmLastAgentUpgradeErrorDetailsResponse) map[string]string {
		return v.ErrorMessageParameters
	}).(pulumi.StringMapOutput)
}

// The error tags.
func (o InMageRcmLastAgentUpgradeErrorDetailsResponseOutput) ErrorTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageRcmLastAgentUpgradeErrorDetailsResponse) map[string]string { return v.ErrorTags }).(pulumi.StringMapOutput)
}

// The possible causes.
func (o InMageRcmLastAgentUpgradeErrorDetailsResponseOutput) PossibleCauses() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmLastAgentUpgradeErrorDetailsResponse) string { return v.PossibleCauses }).(pulumi.StringOutput)
}

// The recommended action.
func (o InMageRcmLastAgentUpgradeErrorDetailsResponseOutput) RecommendedAction() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmLastAgentUpgradeErrorDetailsResponse) string { return v.RecommendedAction }).(pulumi.StringOutput)
}

type InMageRcmLastAgentUpgradeErrorDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InMageRcmLastAgentUpgradeErrorDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageRcmLastAgentUpgradeErrorDetailsResponse)(nil)).Elem()
}

func (o InMageRcmLastAgentUpgradeErrorDetailsResponseArrayOutput) ToInMageRcmLastAgentUpgradeErrorDetailsResponseArrayOutput() InMageRcmLastAgentUpgradeErrorDetailsResponseArrayOutput {
	return o
}

func (o InMageRcmLastAgentUpgradeErrorDetailsResponseArrayOutput) ToInMageRcmLastAgentUpgradeErrorDetailsResponseArrayOutputWithContext(ctx context.Context) InMageRcmLastAgentUpgradeErrorDetailsResponseArrayOutput {
	return o
}

func (o InMageRcmLastAgentUpgradeErrorDetailsResponseArrayOutput) Index(i pulumi.IntInput) InMageRcmLastAgentUpgradeErrorDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageRcmLastAgentUpgradeErrorDetailsResponse {
		return vs[0].([]InMageRcmLastAgentUpgradeErrorDetailsResponse)[vs[1].(int)]
	}).(InMageRcmLastAgentUpgradeErrorDetailsResponseOutput)
}

// InMageRcm mobility agent details.
type InMageRcmMobilityAgentDetailsResponse struct {
	// The agent version expiry date.
	AgentVersionExpiryDate string `pulumi:"agentVersionExpiryDate"`
	// The driver version.
	DriverVersion string `pulumi:"driverVersion"`
	// The driver version expiry date.
	DriverVersionExpiryDate string `pulumi:"driverVersionExpiryDate"`
	// A value indicating whether agent is upgradeable or not.
	IsUpgradeable string `pulumi:"isUpgradeable"`
	// The time of the last heartbeat received from the agent.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The latest agent version release date.
	LatestAgentReleaseDate string `pulumi:"latestAgentReleaseDate"`
	// The latest upgradeable version available without reboot.
	LatestUpgradableVersionWithoutReboot string `pulumi:"latestUpgradableVersionWithoutReboot"`
	// The latest agent version available.
	LatestVersion string `pulumi:"latestVersion"`
	// The whether update is possible or not.
	ReasonsBlockingUpgrade []string `pulumi:"reasonsBlockingUpgrade"`
	// The agent version.
	Version string `pulumi:"version"`
}

// InMageRcm mobility agent details.
type InMageRcmMobilityAgentDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmMobilityAgentDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmMobilityAgentDetailsResponse)(nil)).Elem()
}

func (o InMageRcmMobilityAgentDetailsResponseOutput) ToInMageRcmMobilityAgentDetailsResponseOutput() InMageRcmMobilityAgentDetailsResponseOutput {
	return o
}

func (o InMageRcmMobilityAgentDetailsResponseOutput) ToInMageRcmMobilityAgentDetailsResponseOutputWithContext(ctx context.Context) InMageRcmMobilityAgentDetailsResponseOutput {
	return o
}

// The agent version expiry date.
func (o InMageRcmMobilityAgentDetailsResponseOutput) AgentVersionExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmMobilityAgentDetailsResponse) string { return v.AgentVersionExpiryDate }).(pulumi.StringOutput)
}

// The driver version.
func (o InMageRcmMobilityAgentDetailsResponseOutput) DriverVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmMobilityAgentDetailsResponse) string { return v.DriverVersion }).(pulumi.StringOutput)
}

// The driver version expiry date.
func (o InMageRcmMobilityAgentDetailsResponseOutput) DriverVersionExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmMobilityAgentDetailsResponse) string { return v.DriverVersionExpiryDate }).(pulumi.StringOutput)
}

// A value indicating whether agent is upgradeable or not.
func (o InMageRcmMobilityAgentDetailsResponseOutput) IsUpgradeable() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmMobilityAgentDetailsResponse) string { return v.IsUpgradeable }).(pulumi.StringOutput)
}

// The time of the last heartbeat received from the agent.
func (o InMageRcmMobilityAgentDetailsResponseOutput) LastHeartbeatUtc() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmMobilityAgentDetailsResponse) string { return v.LastHeartbeatUtc }).(pulumi.StringOutput)
}

// The latest agent version release date.
func (o InMageRcmMobilityAgentDetailsResponseOutput) LatestAgentReleaseDate() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmMobilityAgentDetailsResponse) string { return v.LatestAgentReleaseDate }).(pulumi.StringOutput)
}

// The latest upgradeable version available without reboot.
func (o InMageRcmMobilityAgentDetailsResponseOutput) LatestUpgradableVersionWithoutReboot() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmMobilityAgentDetailsResponse) string { return v.LatestUpgradableVersionWithoutReboot }).(pulumi.StringOutput)
}

// The latest agent version available.
func (o InMageRcmMobilityAgentDetailsResponseOutput) LatestVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmMobilityAgentDetailsResponse) string { return v.LatestVersion }).(pulumi.StringOutput)
}

// The whether update is possible or not.
func (o InMageRcmMobilityAgentDetailsResponseOutput) ReasonsBlockingUpgrade() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InMageRcmMobilityAgentDetailsResponse) []string { return v.ReasonsBlockingUpgrade }).(pulumi.StringArrayOutput)
}

// The agent version.
func (o InMageRcmMobilityAgentDetailsResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmMobilityAgentDetailsResponse) string { return v.Version }).(pulumi.StringOutput)
}

type InMageRcmMobilityAgentDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageRcmMobilityAgentDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmMobilityAgentDetailsResponse)(nil)).Elem()
}

func (o InMageRcmMobilityAgentDetailsResponsePtrOutput) ToInMageRcmMobilityAgentDetailsResponsePtrOutput() InMageRcmMobilityAgentDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmMobilityAgentDetailsResponsePtrOutput) ToInMageRcmMobilityAgentDetailsResponsePtrOutputWithContext(ctx context.Context) InMageRcmMobilityAgentDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmMobilityAgentDetailsResponsePtrOutput) Elem() InMageRcmMobilityAgentDetailsResponseOutput {
	return o.ApplyT(func(v *InMageRcmMobilityAgentDetailsResponse) InMageRcmMobilityAgentDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageRcmMobilityAgentDetailsResponse
		return ret
	}).(InMageRcmMobilityAgentDetailsResponseOutput)
}

// The agent version expiry date.
func (o InMageRcmMobilityAgentDetailsResponsePtrOutput) AgentVersionExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AgentVersionExpiryDate
	}).(pulumi.StringPtrOutput)
}

// The driver version.
func (o InMageRcmMobilityAgentDetailsResponsePtrOutput) DriverVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DriverVersion
	}).(pulumi.StringPtrOutput)
}

// The driver version expiry date.
func (o InMageRcmMobilityAgentDetailsResponsePtrOutput) DriverVersionExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DriverVersionExpiryDate
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether agent is upgradeable or not.
func (o InMageRcmMobilityAgentDetailsResponsePtrOutput) IsUpgradeable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IsUpgradeable
	}).(pulumi.StringPtrOutput)
}

// The time of the last heartbeat received from the agent.
func (o InMageRcmMobilityAgentDetailsResponsePtrOutput) LastHeartbeatUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastHeartbeatUtc
	}).(pulumi.StringPtrOutput)
}

// The latest agent version release date.
func (o InMageRcmMobilityAgentDetailsResponsePtrOutput) LatestAgentReleaseDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LatestAgentReleaseDate
	}).(pulumi.StringPtrOutput)
}

// The latest upgradeable version available without reboot.
func (o InMageRcmMobilityAgentDetailsResponsePtrOutput) LatestUpgradableVersionWithoutReboot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LatestUpgradableVersionWithoutReboot
	}).(pulumi.StringPtrOutput)
}

// The latest agent version available.
func (o InMageRcmMobilityAgentDetailsResponsePtrOutput) LatestVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LatestVersion
	}).(pulumi.StringPtrOutput)
}

// The whether update is possible or not.
func (o InMageRcmMobilityAgentDetailsResponsePtrOutput) ReasonsBlockingUpgrade() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InMageRcmMobilityAgentDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.ReasonsBlockingUpgrade
	}).(pulumi.StringArrayOutput)
}

// The agent version.
func (o InMageRcmMobilityAgentDetailsResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmMobilityAgentDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// InMageRcm NIC details.
type InMageRcmNicDetailsResponse struct {
	// A value indicating whether this is the primary NIC.
	IsPrimaryNic *string `pulumi:"isPrimaryNic"`
	// A value indicating whether this NIC is selected for failover.
	IsSelectedForFailover *string `pulumi:"isSelectedForFailover"`
	// The NIC Id.
	NicId string `pulumi:"nicId"`
	// The source IP address.
	SourceIPAddress string `pulumi:"sourceIPAddress"`
	// The source IP address type.
	SourceIPAddressType string `pulumi:"sourceIPAddressType"`
	// Source network Id.
	SourceNetworkId string `pulumi:"sourceNetworkId"`
	// Source subnet name.
	SourceSubnetName string `pulumi:"sourceSubnetName"`
	// The target IP address.
	TargetIPAddress *string `pulumi:"targetIPAddress"`
	// The target IP address type.
	TargetIPAddressType *string `pulumi:"targetIPAddressType"`
	// Target subnet name.
	TargetSubnetName *string `pulumi:"targetSubnetName"`
	// The test IP address.
	TestIPAddress *string `pulumi:"testIPAddress"`
	// The test IP address type.
	TestIPAddressType *string `pulumi:"testIPAddressType"`
	// Test subnet name.
	TestSubnetName *string `pulumi:"testSubnetName"`
}

// InMageRcm NIC details.
type InMageRcmNicDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmNicDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmNicDetailsResponse)(nil)).Elem()
}

func (o InMageRcmNicDetailsResponseOutput) ToInMageRcmNicDetailsResponseOutput() InMageRcmNicDetailsResponseOutput {
	return o
}

func (o InMageRcmNicDetailsResponseOutput) ToInMageRcmNicDetailsResponseOutputWithContext(ctx context.Context) InMageRcmNicDetailsResponseOutput {
	return o
}

// A value indicating whether this is the primary NIC.
func (o InMageRcmNicDetailsResponseOutput) IsPrimaryNic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmNicDetailsResponse) *string { return v.IsPrimaryNic }).(pulumi.StringPtrOutput)
}

// A value indicating whether this NIC is selected for failover.
func (o InMageRcmNicDetailsResponseOutput) IsSelectedForFailover() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmNicDetailsResponse) *string { return v.IsSelectedForFailover }).(pulumi.StringPtrOutput)
}

// The NIC Id.
func (o InMageRcmNicDetailsResponseOutput) NicId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmNicDetailsResponse) string { return v.NicId }).(pulumi.StringOutput)
}

// The source IP address.
func (o InMageRcmNicDetailsResponseOutput) SourceIPAddress() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmNicDetailsResponse) string { return v.SourceIPAddress }).(pulumi.StringOutput)
}

// The source IP address type.
func (o InMageRcmNicDetailsResponseOutput) SourceIPAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmNicDetailsResponse) string { return v.SourceIPAddressType }).(pulumi.StringOutput)
}

// Source network Id.
func (o InMageRcmNicDetailsResponseOutput) SourceNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmNicDetailsResponse) string { return v.SourceNetworkId }).(pulumi.StringOutput)
}

// Source subnet name.
func (o InMageRcmNicDetailsResponseOutput) SourceSubnetName() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmNicDetailsResponse) string { return v.SourceSubnetName }).(pulumi.StringOutput)
}

// The target IP address.
func (o InMageRcmNicDetailsResponseOutput) TargetIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmNicDetailsResponse) *string { return v.TargetIPAddress }).(pulumi.StringPtrOutput)
}

// The target IP address type.
func (o InMageRcmNicDetailsResponseOutput) TargetIPAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmNicDetailsResponse) *string { return v.TargetIPAddressType }).(pulumi.StringPtrOutput)
}

// Target subnet name.
func (o InMageRcmNicDetailsResponseOutput) TargetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmNicDetailsResponse) *string { return v.TargetSubnetName }).(pulumi.StringPtrOutput)
}

// The test IP address.
func (o InMageRcmNicDetailsResponseOutput) TestIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmNicDetailsResponse) *string { return v.TestIPAddress }).(pulumi.StringPtrOutput)
}

// The test IP address type.
func (o InMageRcmNicDetailsResponseOutput) TestIPAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmNicDetailsResponse) *string { return v.TestIPAddressType }).(pulumi.StringPtrOutput)
}

// Test subnet name.
func (o InMageRcmNicDetailsResponseOutput) TestSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmNicDetailsResponse) *string { return v.TestSubnetName }).(pulumi.StringPtrOutput)
}

type InMageRcmNicDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InMageRcmNicDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageRcmNicDetailsResponse)(nil)).Elem()
}

func (o InMageRcmNicDetailsResponseArrayOutput) ToInMageRcmNicDetailsResponseArrayOutput() InMageRcmNicDetailsResponseArrayOutput {
	return o
}

func (o InMageRcmNicDetailsResponseArrayOutput) ToInMageRcmNicDetailsResponseArrayOutputWithContext(ctx context.Context) InMageRcmNicDetailsResponseArrayOutput {
	return o
}

func (o InMageRcmNicDetailsResponseArrayOutput) Index(i pulumi.IntInput) InMageRcmNicDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageRcmNicDetailsResponse {
		return vs[0].([]InMageRcmNicDetailsResponse)[vs[1].(int)]
	}).(InMageRcmNicDetailsResponseOutput)
}

// InMageRcm policy creation input.
type InMageRcmPolicyCreationInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// A value indicating whether multi-VM sync has to be enabled.
	EnableMultiVmSync *string `pulumi:"enableMultiVmSync"`
	// The class type.
	// Expected value is 'InMageRcm'.
	InstanceType string `pulumi:"instanceType"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistoryInMinutes *int `pulumi:"recoveryPointHistoryInMinutes"`
}

// InMageRcmPolicyCreationInputInput is an input type that accepts InMageRcmPolicyCreationInputArgs and InMageRcmPolicyCreationInputOutput values.
// You can construct a concrete instance of `InMageRcmPolicyCreationInputInput` via:
//
//	InMageRcmPolicyCreationInputArgs{...}
type InMageRcmPolicyCreationInputInput interface {
	pulumi.Input

	ToInMageRcmPolicyCreationInputOutput() InMageRcmPolicyCreationInputOutput
	ToInMageRcmPolicyCreationInputOutputWithContext(context.Context) InMageRcmPolicyCreationInputOutput
}

// InMageRcm policy creation input.
type InMageRcmPolicyCreationInputArgs struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"crashConsistentFrequencyInMinutes"`
	// A value indicating whether multi-VM sync has to be enabled.
	EnableMultiVmSync pulumi.StringPtrInput `pulumi:"enableMultiVmSync"`
	// The class type.
	// Expected value is 'InMageRcm'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistoryInMinutes pulumi.IntPtrInput `pulumi:"recoveryPointHistoryInMinutes"`
}

func (InMageRcmPolicyCreationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmPolicyCreationInput)(nil)).Elem()
}

func (i InMageRcmPolicyCreationInputArgs) ToInMageRcmPolicyCreationInputOutput() InMageRcmPolicyCreationInputOutput {
	return i.ToInMageRcmPolicyCreationInputOutputWithContext(context.Background())
}

func (i InMageRcmPolicyCreationInputArgs) ToInMageRcmPolicyCreationInputOutputWithContext(ctx context.Context) InMageRcmPolicyCreationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmPolicyCreationInputOutput)
}

func (i InMageRcmPolicyCreationInputArgs) ToInMageRcmPolicyCreationInputPtrOutput() InMageRcmPolicyCreationInputPtrOutput {
	return i.ToInMageRcmPolicyCreationInputPtrOutputWithContext(context.Background())
}

func (i InMageRcmPolicyCreationInputArgs) ToInMageRcmPolicyCreationInputPtrOutputWithContext(ctx context.Context) InMageRcmPolicyCreationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmPolicyCreationInputOutput).ToInMageRcmPolicyCreationInputPtrOutputWithContext(ctx)
}

// InMageRcmPolicyCreationInputPtrInput is an input type that accepts InMageRcmPolicyCreationInputArgs, InMageRcmPolicyCreationInputPtr and InMageRcmPolicyCreationInputPtrOutput values.
// You can construct a concrete instance of `InMageRcmPolicyCreationInputPtrInput` via:
//
//	        InMageRcmPolicyCreationInputArgs{...}
//
//	or:
//
//	        nil
type InMageRcmPolicyCreationInputPtrInput interface {
	pulumi.Input

	ToInMageRcmPolicyCreationInputPtrOutput() InMageRcmPolicyCreationInputPtrOutput
	ToInMageRcmPolicyCreationInputPtrOutputWithContext(context.Context) InMageRcmPolicyCreationInputPtrOutput
}

type inMageRcmPolicyCreationInputPtrType InMageRcmPolicyCreationInputArgs

func InMageRcmPolicyCreationInputPtr(v *InMageRcmPolicyCreationInputArgs) InMageRcmPolicyCreationInputPtrInput {
	return (*inMageRcmPolicyCreationInputPtrType)(v)
}

func (*inMageRcmPolicyCreationInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmPolicyCreationInput)(nil)).Elem()
}

func (i *inMageRcmPolicyCreationInputPtrType) ToInMageRcmPolicyCreationInputPtrOutput() InMageRcmPolicyCreationInputPtrOutput {
	return i.ToInMageRcmPolicyCreationInputPtrOutputWithContext(context.Background())
}

func (i *inMageRcmPolicyCreationInputPtrType) ToInMageRcmPolicyCreationInputPtrOutputWithContext(ctx context.Context) InMageRcmPolicyCreationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageRcmPolicyCreationInputPtrOutput)
}

// InMageRcm policy creation input.
type InMageRcmPolicyCreationInputOutput struct{ *pulumi.OutputState }

func (InMageRcmPolicyCreationInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmPolicyCreationInput)(nil)).Elem()
}

func (o InMageRcmPolicyCreationInputOutput) ToInMageRcmPolicyCreationInputOutput() InMageRcmPolicyCreationInputOutput {
	return o
}

func (o InMageRcmPolicyCreationInputOutput) ToInMageRcmPolicyCreationInputOutputWithContext(ctx context.Context) InMageRcmPolicyCreationInputOutput {
	return o
}

func (o InMageRcmPolicyCreationInputOutput) ToInMageRcmPolicyCreationInputPtrOutput() InMageRcmPolicyCreationInputPtrOutput {
	return o.ToInMageRcmPolicyCreationInputPtrOutputWithContext(context.Background())
}

func (o InMageRcmPolicyCreationInputOutput) ToInMageRcmPolicyCreationInputPtrOutputWithContext(ctx context.Context) InMageRcmPolicyCreationInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InMageRcmPolicyCreationInput) *InMageRcmPolicyCreationInput {
		return &v
	}).(InMageRcmPolicyCreationInputPtrOutput)
}

// The app consistent snapshot frequency (in minutes).
func (o InMageRcmPolicyCreationInputOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageRcmPolicyCreationInput) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency (in minutes).
func (o InMageRcmPolicyCreationInputOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageRcmPolicyCreationInput) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o InMageRcmPolicyCreationInputOutput) EnableMultiVmSync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmPolicyCreationInput) *string { return v.EnableMultiVmSync }).(pulumi.StringPtrOutput)
}

// The class type.
// Expected value is 'InMageRcm'.
func (o InMageRcmPolicyCreationInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmPolicyCreationInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMageRcmPolicyCreationInputOutput) RecoveryPointHistoryInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageRcmPolicyCreationInput) *int { return v.RecoveryPointHistoryInMinutes }).(pulumi.IntPtrOutput)
}

type InMageRcmPolicyCreationInputPtrOutput struct{ *pulumi.OutputState }

func (InMageRcmPolicyCreationInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmPolicyCreationInput)(nil)).Elem()
}

func (o InMageRcmPolicyCreationInputPtrOutput) ToInMageRcmPolicyCreationInputPtrOutput() InMageRcmPolicyCreationInputPtrOutput {
	return o
}

func (o InMageRcmPolicyCreationInputPtrOutput) ToInMageRcmPolicyCreationInputPtrOutputWithContext(ctx context.Context) InMageRcmPolicyCreationInputPtrOutput {
	return o
}

func (o InMageRcmPolicyCreationInputPtrOutput) Elem() InMageRcmPolicyCreationInputOutput {
	return o.ApplyT(func(v *InMageRcmPolicyCreationInput) InMageRcmPolicyCreationInput {
		if v != nil {
			return *v
		}
		var ret InMageRcmPolicyCreationInput
		return ret
	}).(InMageRcmPolicyCreationInputOutput)
}

// The app consistent snapshot frequency (in minutes).
func (o InMageRcmPolicyCreationInputPtrOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmPolicyCreationInput) *int {
		if v == nil {
			return nil
		}
		return v.AppConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency (in minutes).
func (o InMageRcmPolicyCreationInputPtrOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmPolicyCreationInput) *int {
		if v == nil {
			return nil
		}
		return v.CrashConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o InMageRcmPolicyCreationInputPtrOutput) EnableMultiVmSync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmPolicyCreationInput) *string {
		if v == nil {
			return nil
		}
		return v.EnableMultiVmSync
	}).(pulumi.StringPtrOutput)
}

// The class type.
// Expected value is 'InMageRcm'.
func (o InMageRcmPolicyCreationInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmPolicyCreationInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMageRcmPolicyCreationInputPtrOutput) RecoveryPointHistoryInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmPolicyCreationInput) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointHistoryInMinutes
	}).(pulumi.IntPtrOutput)
}

// InMageRcm specific policy details.
type InMageRcmPolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// A value indicating whether multi-VM sync has to be enabled.
	EnableMultiVmSync *string `pulumi:"enableMultiVmSync"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'InMageRcm'.
	InstanceType string `pulumi:"instanceType"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistoryInMinutes *int `pulumi:"recoveryPointHistoryInMinutes"`
}

// InMageRcm specific policy details.
type InMageRcmPolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmPolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmPolicyDetailsResponse)(nil)).Elem()
}

func (o InMageRcmPolicyDetailsResponseOutput) ToInMageRcmPolicyDetailsResponseOutput() InMageRcmPolicyDetailsResponseOutput {
	return o
}

func (o InMageRcmPolicyDetailsResponseOutput) ToInMageRcmPolicyDetailsResponseOutputWithContext(ctx context.Context) InMageRcmPolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o InMageRcmPolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageRcmPolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o InMageRcmPolicyDetailsResponseOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageRcmPolicyDetailsResponse) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o InMageRcmPolicyDetailsResponseOutput) EnableMultiVmSync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmPolicyDetailsResponse) *string { return v.EnableMultiVmSync }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'InMageRcm'.
func (o InMageRcmPolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmPolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMageRcmPolicyDetailsResponseOutput) RecoveryPointHistoryInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageRcmPolicyDetailsResponse) *int { return v.RecoveryPointHistoryInMinutes }).(pulumi.IntPtrOutput)
}

type InMageRcmPolicyDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageRcmPolicyDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmPolicyDetailsResponse)(nil)).Elem()
}

func (o InMageRcmPolicyDetailsResponsePtrOutput) ToInMageRcmPolicyDetailsResponsePtrOutput() InMageRcmPolicyDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmPolicyDetailsResponsePtrOutput) ToInMageRcmPolicyDetailsResponsePtrOutputWithContext(ctx context.Context) InMageRcmPolicyDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmPolicyDetailsResponsePtrOutput) Elem() InMageRcmPolicyDetailsResponseOutput {
	return o.ApplyT(func(v *InMageRcmPolicyDetailsResponse) InMageRcmPolicyDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageRcmPolicyDetailsResponse
		return ret
	}).(InMageRcmPolicyDetailsResponseOutput)
}

// The app consistent snapshot frequency in minutes.
func (o InMageRcmPolicyDetailsResponsePtrOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmPolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.AppConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o InMageRcmPolicyDetailsResponsePtrOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmPolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.CrashConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether multi-VM sync has to be enabled.
func (o InMageRcmPolicyDetailsResponsePtrOutput) EnableMultiVmSync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmPolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnableMultiVmSync
	}).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'InMageRcm'.
func (o InMageRcmPolicyDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmPolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o InMageRcmPolicyDetailsResponsePtrOutput) RecoveryPointHistoryInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmPolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointHistoryInMinutes
	}).(pulumi.IntPtrOutput)
}

// InMageRcm protected disk details.
type InMageRcmProtectedDiskDetailsResponse struct {
	// The disk capacity in bytes.
	CapacityInBytes float64 `pulumi:"capacityInBytes"`
	// The data pending at source agent in MB.
	DataPendingAtSourceAgentInMB float64 `pulumi:"dataPendingAtSourceAgentInMB"`
	// The data pending in log data store in MB.
	DataPendingInLogDataStoreInMB float64 `pulumi:"dataPendingInLogDataStoreInMB"`
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId string `pulumi:"diskEncryptionSetId"`
	// The disk Id.
	DiskId string `pulumi:"diskId"`
	// The disk name.
	DiskName string `pulumi:"diskName"`
	// The disk type.
	DiskType *string `pulumi:"diskType"`
	// The initial replication details.
	IrDetails *InMageRcmSyncDetailsResponse `pulumi:"irDetails"`
	// A value indicating whether initial replication is complete or not.
	IsInitialReplicationComplete string `pulumi:"isInitialReplicationComplete"`
	// A value indicating whether the disk is the OS disk.
	IsOSDisk string `pulumi:"isOSDisk"`
	// The log storage account ARM Id.
	LogStorageAccountId string `pulumi:"logStorageAccountId"`
	// The resync details.
	ResyncDetails *InMageRcmSyncDetailsResponse `pulumi:"resyncDetails"`
	// The uri of the seed blob.
	SeedBlobUri string `pulumi:"seedBlobUri"`
	// The ARM Id of the seed managed disk.
	SeedManagedDiskId string `pulumi:"seedManagedDiskId"`
	// The ARM Id of the target managed disk.
	TargetManagedDiskId string `pulumi:"targetManagedDiskId"`
}

// InMageRcm protected disk details.
type InMageRcmProtectedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmProtectedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageRcmProtectedDiskDetailsResponseOutput) ToInMageRcmProtectedDiskDetailsResponseOutput() InMageRcmProtectedDiskDetailsResponseOutput {
	return o
}

func (o InMageRcmProtectedDiskDetailsResponseOutput) ToInMageRcmProtectedDiskDetailsResponseOutputWithContext(ctx context.Context) InMageRcmProtectedDiskDetailsResponseOutput {
	return o
}

// The disk capacity in bytes.
func (o InMageRcmProtectedDiskDetailsResponseOutput) CapacityInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmProtectedDiskDetailsResponse) float64 { return v.CapacityInBytes }).(pulumi.Float64Output)
}

// The data pending at source agent in MB.
func (o InMageRcmProtectedDiskDetailsResponseOutput) DataPendingAtSourceAgentInMB() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmProtectedDiskDetailsResponse) float64 { return v.DataPendingAtSourceAgentInMB }).(pulumi.Float64Output)
}

// The data pending in log data store in MB.
func (o InMageRcmProtectedDiskDetailsResponseOutput) DataPendingInLogDataStoreInMB() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmProtectedDiskDetailsResponse) float64 { return v.DataPendingInLogDataStoreInMB }).(pulumi.Float64Output)
}

// The DiskEncryptionSet ARM Id.
func (o InMageRcmProtectedDiskDetailsResponseOutput) DiskEncryptionSetId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmProtectedDiskDetailsResponse) string { return v.DiskEncryptionSetId }).(pulumi.StringOutput)
}

// The disk Id.
func (o InMageRcmProtectedDiskDetailsResponseOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmProtectedDiskDetailsResponse) string { return v.DiskId }).(pulumi.StringOutput)
}

// The disk name.
func (o InMageRcmProtectedDiskDetailsResponseOutput) DiskName() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmProtectedDiskDetailsResponse) string { return v.DiskName }).(pulumi.StringOutput)
}

// The disk type.
func (o InMageRcmProtectedDiskDetailsResponseOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmProtectedDiskDetailsResponse) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// The initial replication details.
func (o InMageRcmProtectedDiskDetailsResponseOutput) IrDetails() InMageRcmSyncDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageRcmProtectedDiskDetailsResponse) *InMageRcmSyncDetailsResponse { return v.IrDetails }).(InMageRcmSyncDetailsResponsePtrOutput)
}

// A value indicating whether initial replication is complete or not.
func (o InMageRcmProtectedDiskDetailsResponseOutput) IsInitialReplicationComplete() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmProtectedDiskDetailsResponse) string { return v.IsInitialReplicationComplete }).(pulumi.StringOutput)
}

// A value indicating whether the disk is the OS disk.
func (o InMageRcmProtectedDiskDetailsResponseOutput) IsOSDisk() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmProtectedDiskDetailsResponse) string { return v.IsOSDisk }).(pulumi.StringOutput)
}

// The log storage account ARM Id.
func (o InMageRcmProtectedDiskDetailsResponseOutput) LogStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmProtectedDiskDetailsResponse) string { return v.LogStorageAccountId }).(pulumi.StringOutput)
}

// The resync details.
func (o InMageRcmProtectedDiskDetailsResponseOutput) ResyncDetails() InMageRcmSyncDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageRcmProtectedDiskDetailsResponse) *InMageRcmSyncDetailsResponse { return v.ResyncDetails }).(InMageRcmSyncDetailsResponsePtrOutput)
}

// The uri of the seed blob.
func (o InMageRcmProtectedDiskDetailsResponseOutput) SeedBlobUri() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmProtectedDiskDetailsResponse) string { return v.SeedBlobUri }).(pulumi.StringOutput)
}

// The ARM Id of the seed managed disk.
func (o InMageRcmProtectedDiskDetailsResponseOutput) SeedManagedDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmProtectedDiskDetailsResponse) string { return v.SeedManagedDiskId }).(pulumi.StringOutput)
}

// The ARM Id of the target managed disk.
func (o InMageRcmProtectedDiskDetailsResponseOutput) TargetManagedDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmProtectedDiskDetailsResponse) string { return v.TargetManagedDiskId }).(pulumi.StringOutput)
}

type InMageRcmProtectedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (InMageRcmProtectedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageRcmProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o InMageRcmProtectedDiskDetailsResponseArrayOutput) ToInMageRcmProtectedDiskDetailsResponseArrayOutput() InMageRcmProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageRcmProtectedDiskDetailsResponseArrayOutput) ToInMageRcmProtectedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) InMageRcmProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o InMageRcmProtectedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) InMageRcmProtectedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageRcmProtectedDiskDetailsResponse {
		return vs[0].([]InMageRcmProtectedDiskDetailsResponse)[vs[1].(int)]
	}).(InMageRcmProtectedDiskDetailsResponseOutput)
}

// InMageRcm provider specific container mapping details.
type InMageRcmProtectionContainerMappingDetailsResponse struct {
	// A value indicating whether the flag for enable agent auto upgrade.
	EnableAgentAutoUpgrade string `pulumi:"enableAgentAutoUpgrade"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'InMageRcm'.
	InstanceType string `pulumi:"instanceType"`
}

// InMageRcm provider specific container mapping details.
type InMageRcmProtectionContainerMappingDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmProtectionContainerMappingDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmProtectionContainerMappingDetailsResponse)(nil)).Elem()
}

func (o InMageRcmProtectionContainerMappingDetailsResponseOutput) ToInMageRcmProtectionContainerMappingDetailsResponseOutput() InMageRcmProtectionContainerMappingDetailsResponseOutput {
	return o
}

func (o InMageRcmProtectionContainerMappingDetailsResponseOutput) ToInMageRcmProtectionContainerMappingDetailsResponseOutputWithContext(ctx context.Context) InMageRcmProtectionContainerMappingDetailsResponseOutput {
	return o
}

// A value indicating whether the flag for enable agent auto upgrade.
func (o InMageRcmProtectionContainerMappingDetailsResponseOutput) EnableAgentAutoUpgrade() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmProtectionContainerMappingDetailsResponse) string { return v.EnableAgentAutoUpgrade }).(pulumi.StringOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'InMageRcm'.
func (o InMageRcmProtectionContainerMappingDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmProtectionContainerMappingDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

type InMageRcmProtectionContainerMappingDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageRcmProtectionContainerMappingDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmProtectionContainerMappingDetailsResponse)(nil)).Elem()
}

func (o InMageRcmProtectionContainerMappingDetailsResponsePtrOutput) ToInMageRcmProtectionContainerMappingDetailsResponsePtrOutput() InMageRcmProtectionContainerMappingDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmProtectionContainerMappingDetailsResponsePtrOutput) ToInMageRcmProtectionContainerMappingDetailsResponsePtrOutputWithContext(ctx context.Context) InMageRcmProtectionContainerMappingDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmProtectionContainerMappingDetailsResponsePtrOutput) Elem() InMageRcmProtectionContainerMappingDetailsResponseOutput {
	return o.ApplyT(func(v *InMageRcmProtectionContainerMappingDetailsResponse) InMageRcmProtectionContainerMappingDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageRcmProtectionContainerMappingDetailsResponse
		return ret
	}).(InMageRcmProtectionContainerMappingDetailsResponseOutput)
}

// A value indicating whether the flag for enable agent auto upgrade.
func (o InMageRcmProtectionContainerMappingDetailsResponsePtrOutput) EnableAgentAutoUpgrade() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmProtectionContainerMappingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EnableAgentAutoUpgrade
	}).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'InMageRcm'.
func (o InMageRcmProtectionContainerMappingDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmProtectionContainerMappingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// InMageRcm provider specific details.
type InMageRcmReplicationDetailsResponse struct {
	// The agent version to which last agent upgrade was attempted.
	AgentUpgradeAttemptToVersion string `pulumi:"agentUpgradeAttemptToVersion"`
	// The agent upgrade blocking error information.
	AgentUpgradeBlockingErrorDetails []InMageRcmAgentUpgradeBlockingErrorDetailsResponse `pulumi:"agentUpgradeBlockingErrorDetails"`
	// The agent upgrade job Id.
	AgentUpgradeJobId string `pulumi:"agentUpgradeJobId"`
	// The agent auto upgrade state.
	AgentUpgradeState string `pulumi:"agentUpgradeState"`
	// The allocated memory in MB.
	AllocatedMemoryInMB float64 `pulumi:"allocatedMemoryInMB"`
	// The discovered VM details.
	DiscoveredVmDetails *InMageRcmDiscoveredProtectedVmDetailsResponse `pulumi:"discoveredVmDetails"`
	// The type of the discovered VM.
	DiscoveryType string `pulumi:"discoveryType"`
	// The ARM Id of the discovered VM.
	FabricDiscoveryMachineId string `pulumi:"fabricDiscoveryMachineId"`
	// The recovery point Id to which the VM was failed over.
	FailoverRecoveryPointId string `pulumi:"failoverRecoveryPointId"`
	// The firmware type.
	FirmwareType string `pulumi:"firmwareType"`
	// The initial replication processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
	InitialReplicationProcessedBytes float64 `pulumi:"initialReplicationProcessedBytes"`
	// The initial replication progress health.
	InitialReplicationProgressHealth string `pulumi:"initialReplicationProgressHealth"`
	// The initial replication progress percentage. This is calculated based on total bytes processed for all disks in the source VM.
	InitialReplicationProgressPercentage int `pulumi:"initialReplicationProgressPercentage"`
	// The initial replication transferred bytes from source VM to azure for all selected disks on source VM.
	InitialReplicationTransferredBytes float64 `pulumi:"initialReplicationTransferredBytes"`
	// Gets the Instance type.
	// Expected value is 'InMageRcm'.
	InstanceType string `pulumi:"instanceType"`
	// The virtual machine internal identifier.
	InternalIdentifier string `pulumi:"internalIdentifier"`
	// A value indicating whether agent registration was successful after failover.
	IsAgentRegistrationSuccessfulAfterFailover bool `pulumi:"isAgentRegistrationSuccessfulAfterFailover"`
	// A value indicating whether last agent upgrade was successful or not.
	IsLastUpgradeSuccessful string `pulumi:"isLastUpgradeSuccessful"`
	// The last agent upgrade error information.
	LastAgentUpgradeErrorDetails []InMageRcmLastAgentUpgradeErrorDetailsResponse `pulumi:"lastAgentUpgradeErrorDetails"`
	// The last agent upgrade type.
	LastAgentUpgradeType string `pulumi:"lastAgentUpgradeType"`
	// The last recovery point Id.
	LastRecoveryPointId string `pulumi:"lastRecoveryPointId"`
	// The last recovery point received time.
	LastRecoveryPointReceived string `pulumi:"lastRecoveryPointReceived"`
	// The last recovery point objective calculated time.
	LastRpoCalculatedTime string `pulumi:"lastRpoCalculatedTime"`
	// The last recovery point objective value.
	LastRpoInSeconds float64 `pulumi:"lastRpoInSeconds"`
	// License Type of the VM to be used.
	LicenseType *string `pulumi:"licenseType"`
	// The mobility agent information.
	MobilityAgentDetails *InMageRcmMobilityAgentDetailsResponse `pulumi:"mobilityAgentDetails"`
	// The multi VM group name.
	MultiVmGroupName string `pulumi:"multiVmGroupName"`
	// The type of the OS on the VM.
	OsType string `pulumi:"osType"`
	// The IP address of the primary network interface.
	PrimaryNicIpAddress string `pulumi:"primaryNicIpAddress"`
	// The process server Id.
	ProcessServerId string `pulumi:"processServerId"`
	// The process server name.
	ProcessServerName string `pulumi:"processServerName"`
	// The processor core count.
	ProcessorCoreCount int `pulumi:"processorCoreCount"`
	// The list of protected disks.
	ProtectedDisks []InMageRcmProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The resync processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
	ResyncProcessedBytes float64 `pulumi:"resyncProcessedBytes"`
	// The resync progress health.
	ResyncProgressHealth string `pulumi:"resyncProgressHealth"`
	// The resync progress percentage. This is calculated based on total bytes processed for all disks in the source VM.
	ResyncProgressPercentage int `pulumi:"resyncProgressPercentage"`
	// A value indicating whether resync is required.
	ResyncRequired string `pulumi:"resyncRequired"`
	// The resync state.
	ResyncState string `pulumi:"resyncState"`
	// The resync transferred bytes from source VM to azure for all selected disks on source VM.
	ResyncTransferredBytes float64 `pulumi:"resyncTransferredBytes"`
	// The run-as account Id.
	RunAsAccountId string `pulumi:"runAsAccountId"`
	// The replication storage account ARM Id. This is applicable only for the blob based replication test hook.
	StorageAccountId string `pulumi:"storageAccountId"`
	// The target availability set Id.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The target boot diagnostics storage account ARM Id.
	TargetBootDiagnosticsStorageAccountId *string `pulumi:"targetBootDiagnosticsStorageAccountId"`
	// The target generation.
	TargetGeneration string `pulumi:"targetGeneration"`
	// The target location.
	TargetLocation *string `pulumi:"targetLocation"`
	// The target network Id.
	TargetNetworkId *string `pulumi:"targetNetworkId"`
	// The target proximity placement group Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The target resource group Id.
	TargetResourceGroupId *string `pulumi:"targetResourceGroupId"`
	// Target VM name.
	TargetVmName *string `pulumi:"targetVmName"`
	// The target VM size.
	TargetVmSize *string `pulumi:"targetVmSize"`
	// The test network Id.
	TestNetworkId *string `pulumi:"testNetworkId"`
	// The network details.
	VmNics []InMageRcmNicDetailsResponse `pulumi:"vmNics"`
}

// InMageRcm provider specific details.
type InMageRcmReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmReplicationDetailsResponse)(nil)).Elem()
}

func (o InMageRcmReplicationDetailsResponseOutput) ToInMageRcmReplicationDetailsResponseOutput() InMageRcmReplicationDetailsResponseOutput {
	return o
}

func (o InMageRcmReplicationDetailsResponseOutput) ToInMageRcmReplicationDetailsResponseOutputWithContext(ctx context.Context) InMageRcmReplicationDetailsResponseOutput {
	return o
}

// The agent version to which last agent upgrade was attempted.
func (o InMageRcmReplicationDetailsResponseOutput) AgentUpgradeAttemptToVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.AgentUpgradeAttemptToVersion }).(pulumi.StringOutput)
}

// The agent upgrade blocking error information.
func (o InMageRcmReplicationDetailsResponseOutput) AgentUpgradeBlockingErrorDetails() InMageRcmAgentUpgradeBlockingErrorDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) []InMageRcmAgentUpgradeBlockingErrorDetailsResponse {
		return v.AgentUpgradeBlockingErrorDetails
	}).(InMageRcmAgentUpgradeBlockingErrorDetailsResponseArrayOutput)
}

// The agent upgrade job Id.
func (o InMageRcmReplicationDetailsResponseOutput) AgentUpgradeJobId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.AgentUpgradeJobId }).(pulumi.StringOutput)
}

// The agent auto upgrade state.
func (o InMageRcmReplicationDetailsResponseOutput) AgentUpgradeState() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.AgentUpgradeState }).(pulumi.StringOutput)
}

// The allocated memory in MB.
func (o InMageRcmReplicationDetailsResponseOutput) AllocatedMemoryInMB() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) float64 { return v.AllocatedMemoryInMB }).(pulumi.Float64Output)
}

// The discovered VM details.
func (o InMageRcmReplicationDetailsResponseOutput) DiscoveredVmDetails() InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) *InMageRcmDiscoveredProtectedVmDetailsResponse {
		return v.DiscoveredVmDetails
	}).(InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput)
}

// The type of the discovered VM.
func (o InMageRcmReplicationDetailsResponseOutput) DiscoveryType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.DiscoveryType }).(pulumi.StringOutput)
}

// The ARM Id of the discovered VM.
func (o InMageRcmReplicationDetailsResponseOutput) FabricDiscoveryMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.FabricDiscoveryMachineId }).(pulumi.StringOutput)
}

// The recovery point Id to which the VM was failed over.
func (o InMageRcmReplicationDetailsResponseOutput) FailoverRecoveryPointId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.FailoverRecoveryPointId }).(pulumi.StringOutput)
}

// The firmware type.
func (o InMageRcmReplicationDetailsResponseOutput) FirmwareType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.FirmwareType }).(pulumi.StringOutput)
}

// The initial replication processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
func (o InMageRcmReplicationDetailsResponseOutput) InitialReplicationProcessedBytes() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) float64 { return v.InitialReplicationProcessedBytes }).(pulumi.Float64Output)
}

// The initial replication progress health.
func (o InMageRcmReplicationDetailsResponseOutput) InitialReplicationProgressHealth() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.InitialReplicationProgressHealth }).(pulumi.StringOutput)
}

// The initial replication progress percentage. This is calculated based on total bytes processed for all disks in the source VM.
func (o InMageRcmReplicationDetailsResponseOutput) InitialReplicationProgressPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) int { return v.InitialReplicationProgressPercentage }).(pulumi.IntOutput)
}

// The initial replication transferred bytes from source VM to azure for all selected disks on source VM.
func (o InMageRcmReplicationDetailsResponseOutput) InitialReplicationTransferredBytes() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) float64 { return v.InitialReplicationTransferredBytes }).(pulumi.Float64Output)
}

// Gets the Instance type.
// Expected value is 'InMageRcm'.
func (o InMageRcmReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The virtual machine internal identifier.
func (o InMageRcmReplicationDetailsResponseOutput) InternalIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.InternalIdentifier }).(pulumi.StringOutput)
}

// A value indicating whether agent registration was successful after failover.
func (o InMageRcmReplicationDetailsResponseOutput) IsAgentRegistrationSuccessfulAfterFailover() pulumi.BoolOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) bool { return v.IsAgentRegistrationSuccessfulAfterFailover }).(pulumi.BoolOutput)
}

// A value indicating whether last agent upgrade was successful or not.
func (o InMageRcmReplicationDetailsResponseOutput) IsLastUpgradeSuccessful() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.IsLastUpgradeSuccessful }).(pulumi.StringOutput)
}

// The last agent upgrade error information.
func (o InMageRcmReplicationDetailsResponseOutput) LastAgentUpgradeErrorDetails() InMageRcmLastAgentUpgradeErrorDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) []InMageRcmLastAgentUpgradeErrorDetailsResponse {
		return v.LastAgentUpgradeErrorDetails
	}).(InMageRcmLastAgentUpgradeErrorDetailsResponseArrayOutput)
}

// The last agent upgrade type.
func (o InMageRcmReplicationDetailsResponseOutput) LastAgentUpgradeType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.LastAgentUpgradeType }).(pulumi.StringOutput)
}

// The last recovery point Id.
func (o InMageRcmReplicationDetailsResponseOutput) LastRecoveryPointId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.LastRecoveryPointId }).(pulumi.StringOutput)
}

// The last recovery point received time.
func (o InMageRcmReplicationDetailsResponseOutput) LastRecoveryPointReceived() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.LastRecoveryPointReceived }).(pulumi.StringOutput)
}

// The last recovery point objective calculated time.
func (o InMageRcmReplicationDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.LastRpoCalculatedTime }).(pulumi.StringOutput)
}

// The last recovery point objective value.
func (o InMageRcmReplicationDetailsResponseOutput) LastRpoInSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) float64 { return v.LastRpoInSeconds }).(pulumi.Float64Output)
}

// License Type of the VM to be used.
func (o InMageRcmReplicationDetailsResponseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// The mobility agent information.
func (o InMageRcmReplicationDetailsResponseOutput) MobilityAgentDetails() InMageRcmMobilityAgentDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) *InMageRcmMobilityAgentDetailsResponse {
		return v.MobilityAgentDetails
	}).(InMageRcmMobilityAgentDetailsResponsePtrOutput)
}

// The multi VM group name.
func (o InMageRcmReplicationDetailsResponseOutput) MultiVmGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.MultiVmGroupName }).(pulumi.StringOutput)
}

// The type of the OS on the VM.
func (o InMageRcmReplicationDetailsResponseOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.OsType }).(pulumi.StringOutput)
}

// The IP address of the primary network interface.
func (o InMageRcmReplicationDetailsResponseOutput) PrimaryNicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.PrimaryNicIpAddress }).(pulumi.StringOutput)
}

// The process server Id.
func (o InMageRcmReplicationDetailsResponseOutput) ProcessServerId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.ProcessServerId }).(pulumi.StringOutput)
}

// The process server name.
func (o InMageRcmReplicationDetailsResponseOutput) ProcessServerName() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.ProcessServerName }).(pulumi.StringOutput)
}

// The processor core count.
func (o InMageRcmReplicationDetailsResponseOutput) ProcessorCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) int { return v.ProcessorCoreCount }).(pulumi.IntOutput)
}

// The list of protected disks.
func (o InMageRcmReplicationDetailsResponseOutput) ProtectedDisks() InMageRcmProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) []InMageRcmProtectedDiskDetailsResponse {
		return v.ProtectedDisks
	}).(InMageRcmProtectedDiskDetailsResponseArrayOutput)
}

// The resync processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
func (o InMageRcmReplicationDetailsResponseOutput) ResyncProcessedBytes() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) float64 { return v.ResyncProcessedBytes }).(pulumi.Float64Output)
}

// The resync progress health.
func (o InMageRcmReplicationDetailsResponseOutput) ResyncProgressHealth() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.ResyncProgressHealth }).(pulumi.StringOutput)
}

// The resync progress percentage. This is calculated based on total bytes processed for all disks in the source VM.
func (o InMageRcmReplicationDetailsResponseOutput) ResyncProgressPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) int { return v.ResyncProgressPercentage }).(pulumi.IntOutput)
}

// A value indicating whether resync is required.
func (o InMageRcmReplicationDetailsResponseOutput) ResyncRequired() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.ResyncRequired }).(pulumi.StringOutput)
}

// The resync state.
func (o InMageRcmReplicationDetailsResponseOutput) ResyncState() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.ResyncState }).(pulumi.StringOutput)
}

// The resync transferred bytes from source VM to azure for all selected disks on source VM.
func (o InMageRcmReplicationDetailsResponseOutput) ResyncTransferredBytes() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) float64 { return v.ResyncTransferredBytes }).(pulumi.Float64Output)
}

// The run-as account Id.
func (o InMageRcmReplicationDetailsResponseOutput) RunAsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.RunAsAccountId }).(pulumi.StringOutput)
}

// The replication storage account ARM Id. This is applicable only for the blob based replication test hook.
func (o InMageRcmReplicationDetailsResponseOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

// The target availability set Id.
func (o InMageRcmReplicationDetailsResponseOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) *string { return v.TargetAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// The target availability zone.
func (o InMageRcmReplicationDetailsResponseOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) *string { return v.TargetAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The target boot diagnostics storage account ARM Id.
func (o InMageRcmReplicationDetailsResponseOutput) TargetBootDiagnosticsStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) *string { return v.TargetBootDiagnosticsStorageAccountId }).(pulumi.StringPtrOutput)
}

// The target generation.
func (o InMageRcmReplicationDetailsResponseOutput) TargetGeneration() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) string { return v.TargetGeneration }).(pulumi.StringOutput)
}

// The target location.
func (o InMageRcmReplicationDetailsResponseOutput) TargetLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) *string { return v.TargetLocation }).(pulumi.StringPtrOutput)
}

// The target network Id.
func (o InMageRcmReplicationDetailsResponseOutput) TargetNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) *string { return v.TargetNetworkId }).(pulumi.StringPtrOutput)
}

// The target proximity placement group Id.
func (o InMageRcmReplicationDetailsResponseOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) *string { return v.TargetProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// The target resource group Id.
func (o InMageRcmReplicationDetailsResponseOutput) TargetResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) *string { return v.TargetResourceGroupId }).(pulumi.StringPtrOutput)
}

// Target VM name.
func (o InMageRcmReplicationDetailsResponseOutput) TargetVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) *string { return v.TargetVmName }).(pulumi.StringPtrOutput)
}

// The target VM size.
func (o InMageRcmReplicationDetailsResponseOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) *string { return v.TargetVmSize }).(pulumi.StringPtrOutput)
}

// The test network Id.
func (o InMageRcmReplicationDetailsResponseOutput) TestNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) *string { return v.TestNetworkId }).(pulumi.StringPtrOutput)
}

// The network details.
func (o InMageRcmReplicationDetailsResponseOutput) VmNics() InMageRcmNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageRcmReplicationDetailsResponse) []InMageRcmNicDetailsResponse { return v.VmNics }).(InMageRcmNicDetailsResponseArrayOutput)
}

type InMageRcmReplicationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageRcmReplicationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmReplicationDetailsResponse)(nil)).Elem()
}

func (o InMageRcmReplicationDetailsResponsePtrOutput) ToInMageRcmReplicationDetailsResponsePtrOutput() InMageRcmReplicationDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmReplicationDetailsResponsePtrOutput) ToInMageRcmReplicationDetailsResponsePtrOutputWithContext(ctx context.Context) InMageRcmReplicationDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmReplicationDetailsResponsePtrOutput) Elem() InMageRcmReplicationDetailsResponseOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) InMageRcmReplicationDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageRcmReplicationDetailsResponse
		return ret
	}).(InMageRcmReplicationDetailsResponseOutput)
}

// The agent version to which last agent upgrade was attempted.
func (o InMageRcmReplicationDetailsResponsePtrOutput) AgentUpgradeAttemptToVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AgentUpgradeAttemptToVersion
	}).(pulumi.StringPtrOutput)
}

// The agent upgrade blocking error information.
func (o InMageRcmReplicationDetailsResponsePtrOutput) AgentUpgradeBlockingErrorDetails() InMageRcmAgentUpgradeBlockingErrorDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) []InMageRcmAgentUpgradeBlockingErrorDetailsResponse {
		if v == nil {
			return nil
		}
		return v.AgentUpgradeBlockingErrorDetails
	}).(InMageRcmAgentUpgradeBlockingErrorDetailsResponseArrayOutput)
}

// The agent upgrade job Id.
func (o InMageRcmReplicationDetailsResponsePtrOutput) AgentUpgradeJobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AgentUpgradeJobId
	}).(pulumi.StringPtrOutput)
}

// The agent auto upgrade state.
func (o InMageRcmReplicationDetailsResponsePtrOutput) AgentUpgradeState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AgentUpgradeState
	}).(pulumi.StringPtrOutput)
}

// The allocated memory in MB.
func (o InMageRcmReplicationDetailsResponsePtrOutput) AllocatedMemoryInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.AllocatedMemoryInMB
	}).(pulumi.Float64PtrOutput)
}

// The discovered VM details.
func (o InMageRcmReplicationDetailsResponsePtrOutput) DiscoveredVmDetails() InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *InMageRcmDiscoveredProtectedVmDetailsResponse {
		if v == nil {
			return nil
		}
		return v.DiscoveredVmDetails
	}).(InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput)
}

// The type of the discovered VM.
func (o InMageRcmReplicationDetailsResponsePtrOutput) DiscoveryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DiscoveryType
	}).(pulumi.StringPtrOutput)
}

// The ARM Id of the discovered VM.
func (o InMageRcmReplicationDetailsResponsePtrOutput) FabricDiscoveryMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FabricDiscoveryMachineId
	}).(pulumi.StringPtrOutput)
}

// The recovery point Id to which the VM was failed over.
func (o InMageRcmReplicationDetailsResponsePtrOutput) FailoverRecoveryPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FailoverRecoveryPointId
	}).(pulumi.StringPtrOutput)
}

// The firmware type.
func (o InMageRcmReplicationDetailsResponsePtrOutput) FirmwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FirmwareType
	}).(pulumi.StringPtrOutput)
}

// The initial replication processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
func (o InMageRcmReplicationDetailsResponsePtrOutput) InitialReplicationProcessedBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.InitialReplicationProcessedBytes
	}).(pulumi.Float64PtrOutput)
}

// The initial replication progress health.
func (o InMageRcmReplicationDetailsResponsePtrOutput) InitialReplicationProgressHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InitialReplicationProgressHealth
	}).(pulumi.StringPtrOutput)
}

// The initial replication progress percentage. This is calculated based on total bytes processed for all disks in the source VM.
func (o InMageRcmReplicationDetailsResponsePtrOutput) InitialReplicationProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.InitialReplicationProgressPercentage
	}).(pulumi.IntPtrOutput)
}

// The initial replication transferred bytes from source VM to azure for all selected disks on source VM.
func (o InMageRcmReplicationDetailsResponsePtrOutput) InitialReplicationTransferredBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.InitialReplicationTransferredBytes
	}).(pulumi.Float64PtrOutput)
}

// Gets the Instance type.
// Expected value is 'InMageRcm'.
func (o InMageRcmReplicationDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The virtual machine internal identifier.
func (o InMageRcmReplicationDetailsResponsePtrOutput) InternalIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InternalIdentifier
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether agent registration was successful after failover.
func (o InMageRcmReplicationDetailsResponsePtrOutput) IsAgentRegistrationSuccessfulAfterFailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsAgentRegistrationSuccessfulAfterFailover
	}).(pulumi.BoolPtrOutput)
}

// A value indicating whether last agent upgrade was successful or not.
func (o InMageRcmReplicationDetailsResponsePtrOutput) IsLastUpgradeSuccessful() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IsLastUpgradeSuccessful
	}).(pulumi.StringPtrOutput)
}

// The last agent upgrade error information.
func (o InMageRcmReplicationDetailsResponsePtrOutput) LastAgentUpgradeErrorDetails() InMageRcmLastAgentUpgradeErrorDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) []InMageRcmLastAgentUpgradeErrorDetailsResponse {
		if v == nil {
			return nil
		}
		return v.LastAgentUpgradeErrorDetails
	}).(InMageRcmLastAgentUpgradeErrorDetailsResponseArrayOutput)
}

// The last agent upgrade type.
func (o InMageRcmReplicationDetailsResponsePtrOutput) LastAgentUpgradeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastAgentUpgradeType
	}).(pulumi.StringPtrOutput)
}

// The last recovery point Id.
func (o InMageRcmReplicationDetailsResponsePtrOutput) LastRecoveryPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastRecoveryPointId
	}).(pulumi.StringPtrOutput)
}

// The last recovery point received time.
func (o InMageRcmReplicationDetailsResponsePtrOutput) LastRecoveryPointReceived() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastRecoveryPointReceived
	}).(pulumi.StringPtrOutput)
}

// The last recovery point objective calculated time.
func (o InMageRcmReplicationDetailsResponsePtrOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastRpoCalculatedTime
	}).(pulumi.StringPtrOutput)
}

// The last recovery point objective value.
func (o InMageRcmReplicationDetailsResponsePtrOutput) LastRpoInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.LastRpoInSeconds
	}).(pulumi.Float64PtrOutput)
}

// License Type of the VM to be used.
func (o InMageRcmReplicationDetailsResponsePtrOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LicenseType
	}).(pulumi.StringPtrOutput)
}

// The mobility agent information.
func (o InMageRcmReplicationDetailsResponsePtrOutput) MobilityAgentDetails() InMageRcmMobilityAgentDetailsResponsePtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *InMageRcmMobilityAgentDetailsResponse {
		if v == nil {
			return nil
		}
		return v.MobilityAgentDetails
	}).(InMageRcmMobilityAgentDetailsResponsePtrOutput)
}

// The multi VM group name.
func (o InMageRcmReplicationDetailsResponsePtrOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MultiVmGroupName
	}).(pulumi.StringPtrOutput)
}

// The type of the OS on the VM.
func (o InMageRcmReplicationDetailsResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OsType
	}).(pulumi.StringPtrOutput)
}

// The IP address of the primary network interface.
func (o InMageRcmReplicationDetailsResponsePtrOutput) PrimaryNicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryNicIpAddress
	}).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o InMageRcmReplicationDetailsResponsePtrOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProcessServerId
	}).(pulumi.StringPtrOutput)
}

// The process server name.
func (o InMageRcmReplicationDetailsResponsePtrOutput) ProcessServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProcessServerName
	}).(pulumi.StringPtrOutput)
}

// The processor core count.
func (o InMageRcmReplicationDetailsResponsePtrOutput) ProcessorCoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ProcessorCoreCount
	}).(pulumi.IntPtrOutput)
}

// The list of protected disks.
func (o InMageRcmReplicationDetailsResponsePtrOutput) ProtectedDisks() InMageRcmProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) []InMageRcmProtectedDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProtectedDisks
	}).(InMageRcmProtectedDiskDetailsResponseArrayOutput)
}

// The resync processed bytes. This includes sum of total bytes transferred and matched bytes on all selected disks in source VM.
func (o InMageRcmReplicationDetailsResponsePtrOutput) ResyncProcessedBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.ResyncProcessedBytes
	}).(pulumi.Float64PtrOutput)
}

// The resync progress health.
func (o InMageRcmReplicationDetailsResponsePtrOutput) ResyncProgressHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResyncProgressHealth
	}).(pulumi.StringPtrOutput)
}

// The resync progress percentage. This is calculated based on total bytes processed for all disks in the source VM.
func (o InMageRcmReplicationDetailsResponsePtrOutput) ResyncProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ResyncProgressPercentage
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether resync is required.
func (o InMageRcmReplicationDetailsResponsePtrOutput) ResyncRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResyncRequired
	}).(pulumi.StringPtrOutput)
}

// The resync state.
func (o InMageRcmReplicationDetailsResponsePtrOutput) ResyncState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResyncState
	}).(pulumi.StringPtrOutput)
}

// The resync transferred bytes from source VM to azure for all selected disks on source VM.
func (o InMageRcmReplicationDetailsResponsePtrOutput) ResyncTransferredBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.ResyncTransferredBytes
	}).(pulumi.Float64PtrOutput)
}

// The run-as account Id.
func (o InMageRcmReplicationDetailsResponsePtrOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RunAsAccountId
	}).(pulumi.StringPtrOutput)
}

// The replication storage account ARM Id. This is applicable only for the blob based replication test hook.
func (o InMageRcmReplicationDetailsResponsePtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The target availability set Id.
func (o InMageRcmReplicationDetailsResponsePtrOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetAvailabilitySetId
	}).(pulumi.StringPtrOutput)
}

// The target availability zone.
func (o InMageRcmReplicationDetailsResponsePtrOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetAvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// The target boot diagnostics storage account ARM Id.
func (o InMageRcmReplicationDetailsResponsePtrOutput) TargetBootDiagnosticsStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetBootDiagnosticsStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The target generation.
func (o InMageRcmReplicationDetailsResponsePtrOutput) TargetGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetGeneration
	}).(pulumi.StringPtrOutput)
}

// The target location.
func (o InMageRcmReplicationDetailsResponsePtrOutput) TargetLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetLocation
	}).(pulumi.StringPtrOutput)
}

// The target network Id.
func (o InMageRcmReplicationDetailsResponsePtrOutput) TargetNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetNetworkId
	}).(pulumi.StringPtrOutput)
}

// The target proximity placement group Id.
func (o InMageRcmReplicationDetailsResponsePtrOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetProximityPlacementGroupId
	}).(pulumi.StringPtrOutput)
}

// The target resource group Id.
func (o InMageRcmReplicationDetailsResponsePtrOutput) TargetResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// Target VM name.
func (o InMageRcmReplicationDetailsResponsePtrOutput) TargetVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetVmName
	}).(pulumi.StringPtrOutput)
}

// The target VM size.
func (o InMageRcmReplicationDetailsResponsePtrOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetVmSize
	}).(pulumi.StringPtrOutput)
}

// The test network Id.
func (o InMageRcmReplicationDetailsResponsePtrOutput) TestNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TestNetworkId
	}).(pulumi.StringPtrOutput)
}

// The network details.
func (o InMageRcmReplicationDetailsResponsePtrOutput) VmNics() InMageRcmNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageRcmReplicationDetailsResponse) []InMageRcmNicDetailsResponse {
		if v == nil {
			return nil
		}
		return v.VmNics
	}).(InMageRcmNicDetailsResponseArrayOutput)
}

// InMageRcm disk level sync details.
type InMageRcmSyncDetailsResponse struct {
	// The bytes transferred in last 15 minutes from source VM to azure.
	Last15MinutesTransferredBytes float64 `pulumi:"last15MinutesTransferredBytes"`
	// The time of the last data transfer from source VM to azure.
	LastDataTransferTimeUtc string `pulumi:"lastDataTransferTimeUtc"`
	// The last refresh time.
	LastRefreshTime string `pulumi:"lastRefreshTime"`
	// The total processed bytes. This includes bytes that are transferred from source VM to azure and matched bytes.
	ProcessedBytes float64 `pulumi:"processedBytes"`
	// The progress health.
	ProgressHealth string `pulumi:"progressHealth"`
	// Progress in percentage. Progress percentage is calculated based on processed bytes.
	ProgressPercentage int `pulumi:"progressPercentage"`
	// The start time.
	StartTime string `pulumi:"startTime"`
	// The transferred bytes from source VM to azure for the disk.
	TransferredBytes float64 `pulumi:"transferredBytes"`
}

// InMageRcm disk level sync details.
type InMageRcmSyncDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageRcmSyncDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageRcmSyncDetailsResponse)(nil)).Elem()
}

func (o InMageRcmSyncDetailsResponseOutput) ToInMageRcmSyncDetailsResponseOutput() InMageRcmSyncDetailsResponseOutput {
	return o
}

func (o InMageRcmSyncDetailsResponseOutput) ToInMageRcmSyncDetailsResponseOutputWithContext(ctx context.Context) InMageRcmSyncDetailsResponseOutput {
	return o
}

// The bytes transferred in last 15 minutes from source VM to azure.
func (o InMageRcmSyncDetailsResponseOutput) Last15MinutesTransferredBytes() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmSyncDetailsResponse) float64 { return v.Last15MinutesTransferredBytes }).(pulumi.Float64Output)
}

// The time of the last data transfer from source VM to azure.
func (o InMageRcmSyncDetailsResponseOutput) LastDataTransferTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmSyncDetailsResponse) string { return v.LastDataTransferTimeUtc }).(pulumi.StringOutput)
}

// The last refresh time.
func (o InMageRcmSyncDetailsResponseOutput) LastRefreshTime() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmSyncDetailsResponse) string { return v.LastRefreshTime }).(pulumi.StringOutput)
}

// The total processed bytes. This includes bytes that are transferred from source VM to azure and matched bytes.
func (o InMageRcmSyncDetailsResponseOutput) ProcessedBytes() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmSyncDetailsResponse) float64 { return v.ProcessedBytes }).(pulumi.Float64Output)
}

// The progress health.
func (o InMageRcmSyncDetailsResponseOutput) ProgressHealth() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmSyncDetailsResponse) string { return v.ProgressHealth }).(pulumi.StringOutput)
}

// Progress in percentage. Progress percentage is calculated based on processed bytes.
func (o InMageRcmSyncDetailsResponseOutput) ProgressPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v InMageRcmSyncDetailsResponse) int { return v.ProgressPercentage }).(pulumi.IntOutput)
}

// The start time.
func (o InMageRcmSyncDetailsResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v InMageRcmSyncDetailsResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// The transferred bytes from source VM to azure for the disk.
func (o InMageRcmSyncDetailsResponseOutput) TransferredBytes() pulumi.Float64Output {
	return o.ApplyT(func(v InMageRcmSyncDetailsResponse) float64 { return v.TransferredBytes }).(pulumi.Float64Output)
}

type InMageRcmSyncDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageRcmSyncDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageRcmSyncDetailsResponse)(nil)).Elem()
}

func (o InMageRcmSyncDetailsResponsePtrOutput) ToInMageRcmSyncDetailsResponsePtrOutput() InMageRcmSyncDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmSyncDetailsResponsePtrOutput) ToInMageRcmSyncDetailsResponsePtrOutputWithContext(ctx context.Context) InMageRcmSyncDetailsResponsePtrOutput {
	return o
}

func (o InMageRcmSyncDetailsResponsePtrOutput) Elem() InMageRcmSyncDetailsResponseOutput {
	return o.ApplyT(func(v *InMageRcmSyncDetailsResponse) InMageRcmSyncDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageRcmSyncDetailsResponse
		return ret
	}).(InMageRcmSyncDetailsResponseOutput)
}

// The bytes transferred in last 15 minutes from source VM to azure.
func (o InMageRcmSyncDetailsResponsePtrOutput) Last15MinutesTransferredBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageRcmSyncDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.Last15MinutesTransferredBytes
	}).(pulumi.Float64PtrOutput)
}

// The time of the last data transfer from source VM to azure.
func (o InMageRcmSyncDetailsResponsePtrOutput) LastDataTransferTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmSyncDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastDataTransferTimeUtc
	}).(pulumi.StringPtrOutput)
}

// The last refresh time.
func (o InMageRcmSyncDetailsResponsePtrOutput) LastRefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmSyncDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastRefreshTime
	}).(pulumi.StringPtrOutput)
}

// The total processed bytes. This includes bytes that are transferred from source VM to azure and matched bytes.
func (o InMageRcmSyncDetailsResponsePtrOutput) ProcessedBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageRcmSyncDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.ProcessedBytes
	}).(pulumi.Float64PtrOutput)
}

// The progress health.
func (o InMageRcmSyncDetailsResponsePtrOutput) ProgressHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmSyncDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProgressHealth
	}).(pulumi.StringPtrOutput)
}

// Progress in percentage. Progress percentage is calculated based on processed bytes.
func (o InMageRcmSyncDetailsResponsePtrOutput) ProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageRcmSyncDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ProgressPercentage
	}).(pulumi.IntPtrOutput)
}

// The start time.
func (o InMageRcmSyncDetailsResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageRcmSyncDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The transferred bytes from source VM to azure for the disk.
func (o InMageRcmSyncDetailsResponsePtrOutput) TransferredBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageRcmSyncDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.TransferredBytes
	}).(pulumi.Float64PtrOutput)
}

// InMage provider specific settings.
type InMageReplicationDetailsResponse struct {
	// The active location of the VM. If the VM is being protected from Azure, this field will take values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this field will be OnPrem always.
	ActiveSiteType *string `pulumi:"activeSiteType"`
	// The agent details.
	AgentDetails *InMageAgentDetailsResponse `pulumi:"agentDetails"`
	// A value indicating the underlying Azure storage account. If the VM is not running in Azure, this value shall be set to null.
	AzureStorageAccountId *string `pulumi:"azureStorageAccountId"`
	// The compressed data change rate in MB.
	CompressedDataRateInMB *float64 `pulumi:"compressedDataRateInMB"`
	// The collection of Consistency points.
	ConsistencyPoints map[string]string `pulumi:"consistencyPoints"`
	// The datastores of the on-premise machine Value can be list of strings that contain datastore names.
	Datastores []string `pulumi:"datastores"`
	// A value indicating the discovery type of the machine.
	DiscoveryType *string `pulumi:"discoveryType"`
	// A value indicating whether any disk is resized for this VM.
	DiskResized *string `pulumi:"diskResized"`
	// The infrastructure VM Id.
	InfrastructureVmId *string `pulumi:"infrastructureVmId"`
	// Gets the Instance type.
	// Expected value is 'InMage'.
	InstanceType string `pulumi:"instanceType"`
	// The source IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// A value indicating whether additional IR stats are available or not.
	IsAdditionalStatsAvailable *bool `pulumi:"isAdditionalStatsAvailable"`
	// The last heartbeat received from the source server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The last RPO calculated time.
	LastRpoCalculatedTime *string `pulumi:"lastRpoCalculatedTime"`
	// The last update time received from on-prem components.
	LastUpdateReceivedTime *string `pulumi:"lastUpdateReceivedTime"`
	// The master target Id.
	MasterTargetId *string `pulumi:"masterTargetId"`
	// The multi vm group Id, if any.
	MultiVmGroupId *string `pulumi:"multiVmGroupId"`
	// The multi vm group name, if any.
	MultiVmGroupName *string `pulumi:"multiVmGroupName"`
	// A value indicating whether the multi vm sync is enabled or disabled.
	MultiVmSyncStatus *string `pulumi:"multiVmSyncStatus"`
	// The OS details.
	OsDetails *OSDiskDetailsResponse `pulumi:"osDetails"`
	// The OS Version of the protected item.
	OsVersion *string `pulumi:"osVersion"`
	// The process server Id.
	ProcessServerId *string `pulumi:"processServerId"`
	// The list of protected disks.
	ProtectedDisks []InMageProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The protection stage.
	ProtectionStage *string `pulumi:"protectionStage"`
	// A value indicating whether the source server requires a restart after update.
	RebootAfterUpdateStatus *string `pulumi:"rebootAfterUpdateStatus"`
	// The replica id of the protected item.
	ReplicaId *string `pulumi:"replicaId"`
	// The resync details of the machine.
	ResyncDetails *InitialReplicationDetailsResponse `pulumi:"resyncDetails"`
	// The retention window end time.
	RetentionWindowEnd *string `pulumi:"retentionWindowEnd"`
	// The retention window start time.
	RetentionWindowStart *string `pulumi:"retentionWindowStart"`
	// The RPO in seconds.
	RpoInSeconds *float64 `pulumi:"rpoInSeconds"`
	// The CPU count of the VM on the primary side.
	SourceVmCpuCount *int `pulumi:"sourceVmCpuCount"`
	// The RAM size of the VM on the primary side.
	SourceVmRamSizeInMB *int `pulumi:"sourceVmRamSizeInMB"`
	// The total transferred data in bytes.
	TotalDataTransferred *float64 `pulumi:"totalDataTransferred"`
	// The progress health.
	TotalProgressHealth *string `pulumi:"totalProgressHealth"`
	// The uncompressed data change rate in MB.
	UncompressedDataRateInMB *float64 `pulumi:"uncompressedDataRateInMB"`
	// The vCenter infrastructure Id.
	VCenterInfrastructureId *string `pulumi:"vCenterInfrastructureId"`
	// The validation errors of the on-premise machine Value can be list of validation errors.
	ValidationErrors []HealthErrorResponse `pulumi:"validationErrors"`
	// The virtual machine Id.
	VmId *string `pulumi:"vmId"`
	// The PE Network details.
	VmNics []VMNicDetailsResponse `pulumi:"vmNics"`
	// The protection state for the vm.
	VmProtectionState *string `pulumi:"vmProtectionState"`
	// The protection state description for the vm.
	VmProtectionStateDescription *string `pulumi:"vmProtectionStateDescription"`
}

// InMage provider specific settings.
type InMageReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (InMageReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageReplicationDetailsResponse)(nil)).Elem()
}

func (o InMageReplicationDetailsResponseOutput) ToInMageReplicationDetailsResponseOutput() InMageReplicationDetailsResponseOutput {
	return o
}

func (o InMageReplicationDetailsResponseOutput) ToInMageReplicationDetailsResponseOutputWithContext(ctx context.Context) InMageReplicationDetailsResponseOutput {
	return o
}

// The active location of the VM. If the VM is being protected from Azure, this field will take values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this field will be OnPrem always.
func (o InMageReplicationDetailsResponseOutput) ActiveSiteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.ActiveSiteType }).(pulumi.StringPtrOutput)
}

// The agent details.
func (o InMageReplicationDetailsResponseOutput) AgentDetails() InMageAgentDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *InMageAgentDetailsResponse { return v.AgentDetails }).(InMageAgentDetailsResponsePtrOutput)
}

// A value indicating the underlying Azure storage account. If the VM is not running in Azure, this value shall be set to null.
func (o InMageReplicationDetailsResponseOutput) AzureStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.AzureStorageAccountId }).(pulumi.StringPtrOutput)
}

// The compressed data change rate in MB.
func (o InMageReplicationDetailsResponseOutput) CompressedDataRateInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *float64 { return v.CompressedDataRateInMB }).(pulumi.Float64PtrOutput)
}

// The collection of Consistency points.
func (o InMageReplicationDetailsResponseOutput) ConsistencyPoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) map[string]string { return v.ConsistencyPoints }).(pulumi.StringMapOutput)
}

// The datastores of the on-premise machine Value can be list of strings that contain datastore names.
func (o InMageReplicationDetailsResponseOutput) Datastores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) []string { return v.Datastores }).(pulumi.StringArrayOutput)
}

// A value indicating the discovery type of the machine.
func (o InMageReplicationDetailsResponseOutput) DiscoveryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.DiscoveryType }).(pulumi.StringPtrOutput)
}

// A value indicating whether any disk is resized for this VM.
func (o InMageReplicationDetailsResponseOutput) DiskResized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.DiskResized }).(pulumi.StringPtrOutput)
}

// The infrastructure VM Id.
func (o InMageReplicationDetailsResponseOutput) InfrastructureVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.InfrastructureVmId }).(pulumi.StringPtrOutput)
}

// Gets the Instance type.
// Expected value is 'InMage'.
func (o InMageReplicationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The source IP address.
func (o InMageReplicationDetailsResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// A value indicating whether additional IR stats are available or not.
func (o InMageReplicationDetailsResponseOutput) IsAdditionalStatsAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *bool { return v.IsAdditionalStatsAvailable }).(pulumi.BoolPtrOutput)
}

// The last heartbeat received from the source server.
func (o InMageReplicationDetailsResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The last RPO calculated time.
func (o InMageReplicationDetailsResponseOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.LastRpoCalculatedTime }).(pulumi.StringPtrOutput)
}

// The last update time received from on-prem components.
func (o InMageReplicationDetailsResponseOutput) LastUpdateReceivedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.LastUpdateReceivedTime }).(pulumi.StringPtrOutput)
}

// The master target Id.
func (o InMageReplicationDetailsResponseOutput) MasterTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.MasterTargetId }).(pulumi.StringPtrOutput)
}

// The multi vm group Id, if any.
func (o InMageReplicationDetailsResponseOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.MultiVmGroupId }).(pulumi.StringPtrOutput)
}

// The multi vm group name, if any.
func (o InMageReplicationDetailsResponseOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.MultiVmGroupName }).(pulumi.StringPtrOutput)
}

// A value indicating whether the multi vm sync is enabled or disabled.
func (o InMageReplicationDetailsResponseOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.MultiVmSyncStatus }).(pulumi.StringPtrOutput)
}

// The OS details.
func (o InMageReplicationDetailsResponseOutput) OsDetails() OSDiskDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *OSDiskDetailsResponse { return v.OsDetails }).(OSDiskDetailsResponsePtrOutput)
}

// The OS Version of the protected item.
func (o InMageReplicationDetailsResponseOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o InMageReplicationDetailsResponseOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.ProcessServerId }).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o InMageReplicationDetailsResponseOutput) ProtectedDisks() InMageProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) []InMageProtectedDiskDetailsResponse { return v.ProtectedDisks }).(InMageProtectedDiskDetailsResponseArrayOutput)
}

// The protection stage.
func (o InMageReplicationDetailsResponseOutput) ProtectionStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.ProtectionStage }).(pulumi.StringPtrOutput)
}

// A value indicating whether the source server requires a restart after update.
func (o InMageReplicationDetailsResponseOutput) RebootAfterUpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.RebootAfterUpdateStatus }).(pulumi.StringPtrOutput)
}

// The replica id of the protected item.
func (o InMageReplicationDetailsResponseOutput) ReplicaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.ReplicaId }).(pulumi.StringPtrOutput)
}

// The resync details of the machine.
func (o InMageReplicationDetailsResponseOutput) ResyncDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *InitialReplicationDetailsResponse { return v.ResyncDetails }).(InitialReplicationDetailsResponsePtrOutput)
}

// The retention window end time.
func (o InMageReplicationDetailsResponseOutput) RetentionWindowEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.RetentionWindowEnd }).(pulumi.StringPtrOutput)
}

// The retention window start time.
func (o InMageReplicationDetailsResponseOutput) RetentionWindowStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.RetentionWindowStart }).(pulumi.StringPtrOutput)
}

// The RPO in seconds.
func (o InMageReplicationDetailsResponseOutput) RpoInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *float64 { return v.RpoInSeconds }).(pulumi.Float64PtrOutput)
}

// The CPU count of the VM on the primary side.
func (o InMageReplicationDetailsResponseOutput) SourceVmCpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *int { return v.SourceVmCpuCount }).(pulumi.IntPtrOutput)
}

// The RAM size of the VM on the primary side.
func (o InMageReplicationDetailsResponseOutput) SourceVmRamSizeInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *int { return v.SourceVmRamSizeInMB }).(pulumi.IntPtrOutput)
}

// The total transferred data in bytes.
func (o InMageReplicationDetailsResponseOutput) TotalDataTransferred() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *float64 { return v.TotalDataTransferred }).(pulumi.Float64PtrOutput)
}

// The progress health.
func (o InMageReplicationDetailsResponseOutput) TotalProgressHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.TotalProgressHealth }).(pulumi.StringPtrOutput)
}

// The uncompressed data change rate in MB.
func (o InMageReplicationDetailsResponseOutput) UncompressedDataRateInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *float64 { return v.UncompressedDataRateInMB }).(pulumi.Float64PtrOutput)
}

// The vCenter infrastructure Id.
func (o InMageReplicationDetailsResponseOutput) VCenterInfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.VCenterInfrastructureId }).(pulumi.StringPtrOutput)
}

// The validation errors of the on-premise machine Value can be list of validation errors.
func (o InMageReplicationDetailsResponseOutput) ValidationErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) []HealthErrorResponse { return v.ValidationErrors }).(HealthErrorResponseArrayOutput)
}

// The virtual machine Id.
func (o InMageReplicationDetailsResponseOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.VmId }).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o InMageReplicationDetailsResponseOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) []VMNicDetailsResponse { return v.VmNics }).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o InMageReplicationDetailsResponseOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.VmProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o InMageReplicationDetailsResponseOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageReplicationDetailsResponse) *string { return v.VmProtectionStateDescription }).(pulumi.StringPtrOutput)
}

type InMageReplicationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InMageReplicationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMageReplicationDetailsResponse)(nil)).Elem()
}

func (o InMageReplicationDetailsResponsePtrOutput) ToInMageReplicationDetailsResponsePtrOutput() InMageReplicationDetailsResponsePtrOutput {
	return o
}

func (o InMageReplicationDetailsResponsePtrOutput) ToInMageReplicationDetailsResponsePtrOutputWithContext(ctx context.Context) InMageReplicationDetailsResponsePtrOutput {
	return o
}

func (o InMageReplicationDetailsResponsePtrOutput) Elem() InMageReplicationDetailsResponseOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) InMageReplicationDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InMageReplicationDetailsResponse
		return ret
	}).(InMageReplicationDetailsResponseOutput)
}

// The active location of the VM. If the VM is being protected from Azure, this field will take values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this field will be OnPrem always.
func (o InMageReplicationDetailsResponsePtrOutput) ActiveSiteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActiveSiteType
	}).(pulumi.StringPtrOutput)
}

// The agent details.
func (o InMageReplicationDetailsResponsePtrOutput) AgentDetails() InMageAgentDetailsResponsePtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *InMageAgentDetailsResponse {
		if v == nil {
			return nil
		}
		return v.AgentDetails
	}).(InMageAgentDetailsResponsePtrOutput)
}

// A value indicating the underlying Azure storage account. If the VM is not running in Azure, this value shall be set to null.
func (o InMageReplicationDetailsResponsePtrOutput) AzureStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AzureStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The compressed data change rate in MB.
func (o InMageReplicationDetailsResponsePtrOutput) CompressedDataRateInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.CompressedDataRateInMB
	}).(pulumi.Float64PtrOutput)
}

// The collection of Consistency points.
func (o InMageReplicationDetailsResponsePtrOutput) ConsistencyPoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.ConsistencyPoints
	}).(pulumi.StringMapOutput)
}

// The datastores of the on-premise machine Value can be list of strings that contain datastore names.
func (o InMageReplicationDetailsResponsePtrOutput) Datastores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.Datastores
	}).(pulumi.StringArrayOutput)
}

// A value indicating the discovery type of the machine.
func (o InMageReplicationDetailsResponsePtrOutput) DiscoveryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiscoveryType
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether any disk is resized for this VM.
func (o InMageReplicationDetailsResponsePtrOutput) DiskResized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiskResized
	}).(pulumi.StringPtrOutput)
}

// The infrastructure VM Id.
func (o InMageReplicationDetailsResponsePtrOutput) InfrastructureVmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InfrastructureVmId
	}).(pulumi.StringPtrOutput)
}

// Gets the Instance type.
// Expected value is 'InMage'.
func (o InMageReplicationDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The source IP address.
func (o InMageReplicationDetailsResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether additional IR stats are available or not.
func (o InMageReplicationDetailsResponsePtrOutput) IsAdditionalStatsAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsAdditionalStatsAvailable
	}).(pulumi.BoolPtrOutput)
}

// The last heartbeat received from the source server.
func (o InMageReplicationDetailsResponsePtrOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastHeartbeat
	}).(pulumi.StringPtrOutput)
}

// The last RPO calculated time.
func (o InMageReplicationDetailsResponsePtrOutput) LastRpoCalculatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRpoCalculatedTime
	}).(pulumi.StringPtrOutput)
}

// The last update time received from on-prem components.
func (o InMageReplicationDetailsResponsePtrOutput) LastUpdateReceivedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdateReceivedTime
	}).(pulumi.StringPtrOutput)
}

// The master target Id.
func (o InMageReplicationDetailsResponsePtrOutput) MasterTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MasterTargetId
	}).(pulumi.StringPtrOutput)
}

// The multi vm group Id, if any.
func (o InMageReplicationDetailsResponsePtrOutput) MultiVmGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmGroupId
	}).(pulumi.StringPtrOutput)
}

// The multi vm group name, if any.
func (o InMageReplicationDetailsResponsePtrOutput) MultiVmGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmGroupName
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether the multi vm sync is enabled or disabled.
func (o InMageReplicationDetailsResponsePtrOutput) MultiVmSyncStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MultiVmSyncStatus
	}).(pulumi.StringPtrOutput)
}

// The OS details.
func (o InMageReplicationDetailsResponsePtrOutput) OsDetails() OSDiskDetailsResponsePtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *OSDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.OsDetails
	}).(OSDiskDetailsResponsePtrOutput)
}

// The OS Version of the protected item.
func (o InMageReplicationDetailsResponsePtrOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsVersion
	}).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o InMageReplicationDetailsResponsePtrOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProcessServerId
	}).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o InMageReplicationDetailsResponsePtrOutput) ProtectedDisks() InMageProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) []InMageProtectedDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProtectedDisks
	}).(InMageProtectedDiskDetailsResponseArrayOutput)
}

// The protection stage.
func (o InMageReplicationDetailsResponsePtrOutput) ProtectionStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionStage
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether the source server requires a restart after update.
func (o InMageReplicationDetailsResponsePtrOutput) RebootAfterUpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RebootAfterUpdateStatus
	}).(pulumi.StringPtrOutput)
}

// The replica id of the protected item.
func (o InMageReplicationDetailsResponsePtrOutput) ReplicaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReplicaId
	}).(pulumi.StringPtrOutput)
}

// The resync details of the machine.
func (o InMageReplicationDetailsResponsePtrOutput) ResyncDetails() InitialReplicationDetailsResponsePtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *InitialReplicationDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ResyncDetails
	}).(InitialReplicationDetailsResponsePtrOutput)
}

// The retention window end time.
func (o InMageReplicationDetailsResponsePtrOutput) RetentionWindowEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RetentionWindowEnd
	}).(pulumi.StringPtrOutput)
}

// The retention window start time.
func (o InMageReplicationDetailsResponsePtrOutput) RetentionWindowStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RetentionWindowStart
	}).(pulumi.StringPtrOutput)
}

// The RPO in seconds.
func (o InMageReplicationDetailsResponsePtrOutput) RpoInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.RpoInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The CPU count of the VM on the primary side.
func (o InMageReplicationDetailsResponsePtrOutput) SourceVmCpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SourceVmCpuCount
	}).(pulumi.IntPtrOutput)
}

// The RAM size of the VM on the primary side.
func (o InMageReplicationDetailsResponsePtrOutput) SourceVmRamSizeInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SourceVmRamSizeInMB
	}).(pulumi.IntPtrOutput)
}

// The total transferred data in bytes.
func (o InMageReplicationDetailsResponsePtrOutput) TotalDataTransferred() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.TotalDataTransferred
	}).(pulumi.Float64PtrOutput)
}

// The progress health.
func (o InMageReplicationDetailsResponsePtrOutput) TotalProgressHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TotalProgressHealth
	}).(pulumi.StringPtrOutput)
}

// The uncompressed data change rate in MB.
func (o InMageReplicationDetailsResponsePtrOutput) UncompressedDataRateInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.UncompressedDataRateInMB
	}).(pulumi.Float64PtrOutput)
}

// The vCenter infrastructure Id.
func (o InMageReplicationDetailsResponsePtrOutput) VCenterInfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VCenterInfrastructureId
	}).(pulumi.StringPtrOutput)
}

// The validation errors of the on-premise machine Value can be list of validation errors.
func (o InMageReplicationDetailsResponsePtrOutput) ValidationErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) []HealthErrorResponse {
		if v == nil {
			return nil
		}
		return v.ValidationErrors
	}).(HealthErrorResponseArrayOutput)
}

// The virtual machine Id.
func (o InMageReplicationDetailsResponsePtrOutput) VmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmId
	}).(pulumi.StringPtrOutput)
}

// The PE Network details.
func (o InMageReplicationDetailsResponsePtrOutput) VmNics() VMNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) []VMNicDetailsResponse {
		if v == nil {
			return nil
		}
		return v.VmNics
	}).(VMNicDetailsResponseArrayOutput)
}

// The protection state for the vm.
func (o InMageReplicationDetailsResponsePtrOutput) VmProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmProtectionState
	}).(pulumi.StringPtrOutput)
}

// The protection state description for the vm.
func (o InMageReplicationDetailsResponsePtrOutput) VmProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMageReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmProtectionStateDescription
	}).(pulumi.StringPtrOutput)
}

// Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
type InMageVolumeExclusionOptions struct {
	// The value indicating whether to exclude multi volume disk or not. If a disk has multiple volumes and one of the volume has label matching with VolumeLabel this disk will be excluded from replication if OnlyExcludeIfSingleVolume is false.
	OnlyExcludeIfSingleVolume *string `pulumi:"onlyExcludeIfSingleVolume"`
	// The volume label. The disk having any volume with this label will be excluded from replication.
	VolumeLabel *string `pulumi:"volumeLabel"`
}

// InMageVolumeExclusionOptionsInput is an input type that accepts InMageVolumeExclusionOptionsArgs and InMageVolumeExclusionOptionsOutput values.
// You can construct a concrete instance of `InMageVolumeExclusionOptionsInput` via:
//
//	InMageVolumeExclusionOptionsArgs{...}
type InMageVolumeExclusionOptionsInput interface {
	pulumi.Input

	ToInMageVolumeExclusionOptionsOutput() InMageVolumeExclusionOptionsOutput
	ToInMageVolumeExclusionOptionsOutputWithContext(context.Context) InMageVolumeExclusionOptionsOutput
}

// Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
type InMageVolumeExclusionOptionsArgs struct {
	// The value indicating whether to exclude multi volume disk or not. If a disk has multiple volumes and one of the volume has label matching with VolumeLabel this disk will be excluded from replication if OnlyExcludeIfSingleVolume is false.
	OnlyExcludeIfSingleVolume pulumi.StringPtrInput `pulumi:"onlyExcludeIfSingleVolume"`
	// The volume label. The disk having any volume with this label will be excluded from replication.
	VolumeLabel pulumi.StringPtrInput `pulumi:"volumeLabel"`
}

func (InMageVolumeExclusionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageVolumeExclusionOptions)(nil)).Elem()
}

func (i InMageVolumeExclusionOptionsArgs) ToInMageVolumeExclusionOptionsOutput() InMageVolumeExclusionOptionsOutput {
	return i.ToInMageVolumeExclusionOptionsOutputWithContext(context.Background())
}

func (i InMageVolumeExclusionOptionsArgs) ToInMageVolumeExclusionOptionsOutputWithContext(ctx context.Context) InMageVolumeExclusionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageVolumeExclusionOptionsOutput)
}

// InMageVolumeExclusionOptionsArrayInput is an input type that accepts InMageVolumeExclusionOptionsArray and InMageVolumeExclusionOptionsArrayOutput values.
// You can construct a concrete instance of `InMageVolumeExclusionOptionsArrayInput` via:
//
//	InMageVolumeExclusionOptionsArray{ InMageVolumeExclusionOptionsArgs{...} }
type InMageVolumeExclusionOptionsArrayInput interface {
	pulumi.Input

	ToInMageVolumeExclusionOptionsArrayOutput() InMageVolumeExclusionOptionsArrayOutput
	ToInMageVolumeExclusionOptionsArrayOutputWithContext(context.Context) InMageVolumeExclusionOptionsArrayOutput
}

type InMageVolumeExclusionOptionsArray []InMageVolumeExclusionOptionsInput

func (InMageVolumeExclusionOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageVolumeExclusionOptions)(nil)).Elem()
}

func (i InMageVolumeExclusionOptionsArray) ToInMageVolumeExclusionOptionsArrayOutput() InMageVolumeExclusionOptionsArrayOutput {
	return i.ToInMageVolumeExclusionOptionsArrayOutputWithContext(context.Background())
}

func (i InMageVolumeExclusionOptionsArray) ToInMageVolumeExclusionOptionsArrayOutputWithContext(ctx context.Context) InMageVolumeExclusionOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMageVolumeExclusionOptionsArrayOutput)
}

// Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.
type InMageVolumeExclusionOptionsOutput struct{ *pulumi.OutputState }

func (InMageVolumeExclusionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMageVolumeExclusionOptions)(nil)).Elem()
}

func (o InMageVolumeExclusionOptionsOutput) ToInMageVolumeExclusionOptionsOutput() InMageVolumeExclusionOptionsOutput {
	return o
}

func (o InMageVolumeExclusionOptionsOutput) ToInMageVolumeExclusionOptionsOutputWithContext(ctx context.Context) InMageVolumeExclusionOptionsOutput {
	return o
}

// The value indicating whether to exclude multi volume disk or not. If a disk has multiple volumes and one of the volume has label matching with VolumeLabel this disk will be excluded from replication if OnlyExcludeIfSingleVolume is false.
func (o InMageVolumeExclusionOptionsOutput) OnlyExcludeIfSingleVolume() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageVolumeExclusionOptions) *string { return v.OnlyExcludeIfSingleVolume }).(pulumi.StringPtrOutput)
}

// The volume label. The disk having any volume with this label will be excluded from replication.
func (o InMageVolumeExclusionOptionsOutput) VolumeLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMageVolumeExclusionOptions) *string { return v.VolumeLabel }).(pulumi.StringPtrOutput)
}

type InMageVolumeExclusionOptionsArrayOutput struct{ *pulumi.OutputState }

func (InMageVolumeExclusionOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InMageVolumeExclusionOptions)(nil)).Elem()
}

func (o InMageVolumeExclusionOptionsArrayOutput) ToInMageVolumeExclusionOptionsArrayOutput() InMageVolumeExclusionOptionsArrayOutput {
	return o
}

func (o InMageVolumeExclusionOptionsArrayOutput) ToInMageVolumeExclusionOptionsArrayOutputWithContext(ctx context.Context) InMageVolumeExclusionOptionsArrayOutput {
	return o
}

func (o InMageVolumeExclusionOptionsArrayOutput) Index(i pulumi.IntInput) InMageVolumeExclusionOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InMageVolumeExclusionOptions {
		return vs[0].([]InMageVolumeExclusionOptions)[vs[1].(int)]
	}).(InMageVolumeExclusionOptionsOutput)
}

// Initial replication details.
type InitialReplicationDetailsResponse struct {
	// The initial replication progress percentage.
	InitialReplicationProgressPercentage *string `pulumi:"initialReplicationProgressPercentage"`
	// Initial replication type.
	InitialReplicationType *string `pulumi:"initialReplicationType"`
}

// Initial replication details.
type InitialReplicationDetailsResponseOutput struct{ *pulumi.OutputState }

func (InitialReplicationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InitialReplicationDetailsResponse)(nil)).Elem()
}

func (o InitialReplicationDetailsResponseOutput) ToInitialReplicationDetailsResponseOutput() InitialReplicationDetailsResponseOutput {
	return o
}

func (o InitialReplicationDetailsResponseOutput) ToInitialReplicationDetailsResponseOutputWithContext(ctx context.Context) InitialReplicationDetailsResponseOutput {
	return o
}

// The initial replication progress percentage.
func (o InitialReplicationDetailsResponseOutput) InitialReplicationProgressPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InitialReplicationDetailsResponse) *string { return v.InitialReplicationProgressPercentage }).(pulumi.StringPtrOutput)
}

// Initial replication type.
func (o InitialReplicationDetailsResponseOutput) InitialReplicationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InitialReplicationDetailsResponse) *string { return v.InitialReplicationType }).(pulumi.StringPtrOutput)
}

type InitialReplicationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InitialReplicationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InitialReplicationDetailsResponse)(nil)).Elem()
}

func (o InitialReplicationDetailsResponsePtrOutput) ToInitialReplicationDetailsResponsePtrOutput() InitialReplicationDetailsResponsePtrOutput {
	return o
}

func (o InitialReplicationDetailsResponsePtrOutput) ToInitialReplicationDetailsResponsePtrOutputWithContext(ctx context.Context) InitialReplicationDetailsResponsePtrOutput {
	return o
}

func (o InitialReplicationDetailsResponsePtrOutput) Elem() InitialReplicationDetailsResponseOutput {
	return o.ApplyT(func(v *InitialReplicationDetailsResponse) InitialReplicationDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InitialReplicationDetailsResponse
		return ret
	}).(InitialReplicationDetailsResponseOutput)
}

// The initial replication progress percentage.
func (o InitialReplicationDetailsResponsePtrOutput) InitialReplicationProgressPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InitialReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InitialReplicationProgressPercentage
	}).(pulumi.StringPtrOutput)
}

// Initial replication type.
func (o InitialReplicationDetailsResponsePtrOutput) InitialReplicationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InitialReplicationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InitialReplicationType
	}).(pulumi.StringPtrOutput)
}

// Implements InnerHealthError class. HealthError object has a list of InnerHealthErrors as child errors. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.
type InnerHealthErrorResponse struct {
	// Error creation time (UTC).
	CreationTimeUtc *string `pulumi:"creationTimeUtc"`
	// Value indicating whether the health error is customer resolvable.
	CustomerResolvability *string `pulumi:"customerResolvability"`
	// ID of the entity.
	EntityId *string `pulumi:"entityId"`
	// Category of error.
	ErrorCategory *string `pulumi:"errorCategory"`
	// Error code.
	ErrorCode *string `pulumi:"errorCode"`
	// The health error unique id.
	ErrorId *string `pulumi:"errorId"`
	// Level of error.
	ErrorLevel *string `pulumi:"errorLevel"`
	// Error message.
	ErrorMessage *string `pulumi:"errorMessage"`
	// Source of error.
	ErrorSource *string `pulumi:"errorSource"`
	// Type of error.
	ErrorType *string `pulumi:"errorType"`
	// Possible causes of error.
	PossibleCauses *string `pulumi:"possibleCauses"`
	// Recommended action to resolve error.
	RecommendedAction *string `pulumi:"recommendedAction"`
	// DRA error message.
	RecoveryProviderErrorMessage *string `pulumi:"recoveryProviderErrorMessage"`
	// Summary message of the entity.
	SummaryMessage *string `pulumi:"summaryMessage"`
}

// Implements InnerHealthError class. HealthError object has a list of InnerHealthErrors as child errors. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.
type InnerHealthErrorResponseOutput struct{ *pulumi.OutputState }

func (InnerHealthErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InnerHealthErrorResponse)(nil)).Elem()
}

func (o InnerHealthErrorResponseOutput) ToInnerHealthErrorResponseOutput() InnerHealthErrorResponseOutput {
	return o
}

func (o InnerHealthErrorResponseOutput) ToInnerHealthErrorResponseOutputWithContext(ctx context.Context) InnerHealthErrorResponseOutput {
	return o
}

// Error creation time (UTC).
func (o InnerHealthErrorResponseOutput) CreationTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.CreationTimeUtc }).(pulumi.StringPtrOutput)
}

// Value indicating whether the health error is customer resolvable.
func (o InnerHealthErrorResponseOutput) CustomerResolvability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.CustomerResolvability }).(pulumi.StringPtrOutput)
}

// ID of the entity.
func (o InnerHealthErrorResponseOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// Category of error.
func (o InnerHealthErrorResponseOutput) ErrorCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorCategory }).(pulumi.StringPtrOutput)
}

// Error code.
func (o InnerHealthErrorResponseOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// The health error unique id.
func (o InnerHealthErrorResponseOutput) ErrorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorId }).(pulumi.StringPtrOutput)
}

// Level of error.
func (o InnerHealthErrorResponseOutput) ErrorLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorLevel }).(pulumi.StringPtrOutput)
}

// Error message.
func (o InnerHealthErrorResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Source of error.
func (o InnerHealthErrorResponseOutput) ErrorSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorSource }).(pulumi.StringPtrOutput)
}

// Type of error.
func (o InnerHealthErrorResponseOutput) ErrorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.ErrorType }).(pulumi.StringPtrOutput)
}

// Possible causes of error.
func (o InnerHealthErrorResponseOutput) PossibleCauses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.PossibleCauses }).(pulumi.StringPtrOutput)
}

// Recommended action to resolve error.
func (o InnerHealthErrorResponseOutput) RecommendedAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.RecommendedAction }).(pulumi.StringPtrOutput)
}

// DRA error message.
func (o InnerHealthErrorResponseOutput) RecoveryProviderErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.RecoveryProviderErrorMessage }).(pulumi.StringPtrOutput)
}

// Summary message of the entity.
func (o InnerHealthErrorResponseOutput) SummaryMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InnerHealthErrorResponse) *string { return v.SummaryMessage }).(pulumi.StringPtrOutput)
}

type InnerHealthErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (InnerHealthErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InnerHealthErrorResponse)(nil)).Elem()
}

func (o InnerHealthErrorResponseArrayOutput) ToInnerHealthErrorResponseArrayOutput() InnerHealthErrorResponseArrayOutput {
	return o
}

func (o InnerHealthErrorResponseArrayOutput) ToInnerHealthErrorResponseArrayOutputWithContext(ctx context.Context) InnerHealthErrorResponseArrayOutput {
	return o
}

func (o InnerHealthErrorResponseArrayOutput) Index(i pulumi.IntInput) InnerHealthErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InnerHealthErrorResponse {
		return vs[0].([]InnerHealthErrorResponse)[vs[1].(int)]
	}).(InnerHealthErrorResponseOutput)
}

type InputEndpointResponse struct {
	EndpointName *string `pulumi:"endpointName"`
	PrivatePort  *int    `pulumi:"privatePort"`
	Protocol     *string `pulumi:"protocol"`
	PublicPort   *int    `pulumi:"publicPort"`
}

type InputEndpointResponseOutput struct{ *pulumi.OutputState }

func (InputEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputEndpointResponse)(nil)).Elem()
}

func (o InputEndpointResponseOutput) ToInputEndpointResponseOutput() InputEndpointResponseOutput {
	return o
}

func (o InputEndpointResponseOutput) ToInputEndpointResponseOutputWithContext(ctx context.Context) InputEndpointResponseOutput {
	return o
}

func (o InputEndpointResponseOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputEndpointResponse) *string { return v.EndpointName }).(pulumi.StringPtrOutput)
}

func (o InputEndpointResponseOutput) PrivatePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InputEndpointResponse) *int { return v.PrivatePort }).(pulumi.IntPtrOutput)
}

func (o InputEndpointResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputEndpointResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o InputEndpointResponseOutput) PublicPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InputEndpointResponse) *int { return v.PublicPort }).(pulumi.IntPtrOutput)
}

type InputEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (InputEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputEndpointResponse)(nil)).Elem()
}

func (o InputEndpointResponseArrayOutput) ToInputEndpointResponseArrayOutput() InputEndpointResponseArrayOutput {
	return o
}

func (o InputEndpointResponseArrayOutput) ToInputEndpointResponseArrayOutputWithContext(ctx context.Context) InputEndpointResponseArrayOutput {
	return o
}

func (o InputEndpointResponseArrayOutput) Index(i pulumi.IntInput) InputEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputEndpointResponse {
		return vs[0].([]InputEndpointResponse)[vs[1].(int)]
	}).(InputEndpointResponseOutput)
}

// Details about inquired protectable items under a given container.
type InquiryInfo struct {
	// Inquiry Details which will have workload specific details.
	// For e.g. - For SQL and oracle this will contain different details.
	InquiryDetails []WorkloadInquiryDetails `pulumi:"inquiryDetails"`
	// Inquiry Status for this container such as
	// InProgress | Failed | Succeeded
	Status *string `pulumi:"status"`
}

// InquiryInfoInput is an input type that accepts InquiryInfoArgs and InquiryInfoOutput values.
// You can construct a concrete instance of `InquiryInfoInput` via:
//
//	InquiryInfoArgs{...}
type InquiryInfoInput interface {
	pulumi.Input

	ToInquiryInfoOutput() InquiryInfoOutput
	ToInquiryInfoOutputWithContext(context.Context) InquiryInfoOutput
}

// Details about inquired protectable items under a given container.
type InquiryInfoArgs struct {
	// Inquiry Details which will have workload specific details.
	// For e.g. - For SQL and oracle this will contain different details.
	InquiryDetails WorkloadInquiryDetailsArrayInput `pulumi:"inquiryDetails"`
	// Inquiry Status for this container such as
	// InProgress | Failed | Succeeded
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (InquiryInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InquiryInfo)(nil)).Elem()
}

func (i InquiryInfoArgs) ToInquiryInfoOutput() InquiryInfoOutput {
	return i.ToInquiryInfoOutputWithContext(context.Background())
}

func (i InquiryInfoArgs) ToInquiryInfoOutputWithContext(ctx context.Context) InquiryInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryInfoOutput)
}

func (i InquiryInfoArgs) ToInquiryInfoPtrOutput() InquiryInfoPtrOutput {
	return i.ToInquiryInfoPtrOutputWithContext(context.Background())
}

func (i InquiryInfoArgs) ToInquiryInfoPtrOutputWithContext(ctx context.Context) InquiryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryInfoOutput).ToInquiryInfoPtrOutputWithContext(ctx)
}

// InquiryInfoPtrInput is an input type that accepts InquiryInfoArgs, InquiryInfoPtr and InquiryInfoPtrOutput values.
// You can construct a concrete instance of `InquiryInfoPtrInput` via:
//
//	        InquiryInfoArgs{...}
//
//	or:
//
//	        nil
type InquiryInfoPtrInput interface {
	pulumi.Input

	ToInquiryInfoPtrOutput() InquiryInfoPtrOutput
	ToInquiryInfoPtrOutputWithContext(context.Context) InquiryInfoPtrOutput
}

type inquiryInfoPtrType InquiryInfoArgs

func InquiryInfoPtr(v *InquiryInfoArgs) InquiryInfoPtrInput {
	return (*inquiryInfoPtrType)(v)
}

func (*inquiryInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InquiryInfo)(nil)).Elem()
}

func (i *inquiryInfoPtrType) ToInquiryInfoPtrOutput() InquiryInfoPtrOutput {
	return i.ToInquiryInfoPtrOutputWithContext(context.Background())
}

func (i *inquiryInfoPtrType) ToInquiryInfoPtrOutputWithContext(ctx context.Context) InquiryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryInfoPtrOutput)
}

// Details about inquired protectable items under a given container.
type InquiryInfoOutput struct{ *pulumi.OutputState }

func (InquiryInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InquiryInfo)(nil)).Elem()
}

func (o InquiryInfoOutput) ToInquiryInfoOutput() InquiryInfoOutput {
	return o
}

func (o InquiryInfoOutput) ToInquiryInfoOutputWithContext(ctx context.Context) InquiryInfoOutput {
	return o
}

func (o InquiryInfoOutput) ToInquiryInfoPtrOutput() InquiryInfoPtrOutput {
	return o.ToInquiryInfoPtrOutputWithContext(context.Background())
}

func (o InquiryInfoOutput) ToInquiryInfoPtrOutputWithContext(ctx context.Context) InquiryInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InquiryInfo) *InquiryInfo {
		return &v
	}).(InquiryInfoPtrOutput)
}

// Inquiry Details which will have workload specific details.
// For e.g. - For SQL and oracle this will contain different details.
func (o InquiryInfoOutput) InquiryDetails() WorkloadInquiryDetailsArrayOutput {
	return o.ApplyT(func(v InquiryInfo) []WorkloadInquiryDetails { return v.InquiryDetails }).(WorkloadInquiryDetailsArrayOutput)
}

// Inquiry Status for this container such as
// InProgress | Failed | Succeeded
func (o InquiryInfoOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InquiryInfo) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type InquiryInfoPtrOutput struct{ *pulumi.OutputState }

func (InquiryInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InquiryInfo)(nil)).Elem()
}

func (o InquiryInfoPtrOutput) ToInquiryInfoPtrOutput() InquiryInfoPtrOutput {
	return o
}

func (o InquiryInfoPtrOutput) ToInquiryInfoPtrOutputWithContext(ctx context.Context) InquiryInfoPtrOutput {
	return o
}

func (o InquiryInfoPtrOutput) Elem() InquiryInfoOutput {
	return o.ApplyT(func(v *InquiryInfo) InquiryInfo {
		if v != nil {
			return *v
		}
		var ret InquiryInfo
		return ret
	}).(InquiryInfoOutput)
}

// Inquiry Details which will have workload specific details.
// For e.g. - For SQL and oracle this will contain different details.
func (o InquiryInfoPtrOutput) InquiryDetails() WorkloadInquiryDetailsArrayOutput {
	return o.ApplyT(func(v *InquiryInfo) []WorkloadInquiryDetails {
		if v == nil {
			return nil
		}
		return v.InquiryDetails
	}).(WorkloadInquiryDetailsArrayOutput)
}

// Inquiry Status for this container such as
// InProgress | Failed | Succeeded
func (o InquiryInfoPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InquiryInfo) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Details about inquired protectable items under a given container.
type InquiryInfoResponse struct {
	// Error Details if the Status is non-success.
	ErrorDetail *ErrorDetailResponse `pulumi:"errorDetail"`
	// Inquiry Details which will have workload specific details.
	// For e.g. - For SQL and oracle this will contain different details.
	InquiryDetails []WorkloadInquiryDetailsResponse `pulumi:"inquiryDetails"`
	// Inquiry Status for this container such as
	// InProgress | Failed | Succeeded
	Status *string `pulumi:"status"`
}

// Details about inquired protectable items under a given container.
type InquiryInfoResponseOutput struct{ *pulumi.OutputState }

func (InquiryInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InquiryInfoResponse)(nil)).Elem()
}

func (o InquiryInfoResponseOutput) ToInquiryInfoResponseOutput() InquiryInfoResponseOutput {
	return o
}

func (o InquiryInfoResponseOutput) ToInquiryInfoResponseOutputWithContext(ctx context.Context) InquiryInfoResponseOutput {
	return o
}

// Error Details if the Status is non-success.
func (o InquiryInfoResponseOutput) ErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v InquiryInfoResponse) *ErrorDetailResponse { return v.ErrorDetail }).(ErrorDetailResponsePtrOutput)
}

// Inquiry Details which will have workload specific details.
// For e.g. - For SQL and oracle this will contain different details.
func (o InquiryInfoResponseOutput) InquiryDetails() WorkloadInquiryDetailsResponseArrayOutput {
	return o.ApplyT(func(v InquiryInfoResponse) []WorkloadInquiryDetailsResponse { return v.InquiryDetails }).(WorkloadInquiryDetailsResponseArrayOutput)
}

// Inquiry Status for this container such as
// InProgress | Failed | Succeeded
func (o InquiryInfoResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InquiryInfoResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type InquiryInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (InquiryInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InquiryInfoResponse)(nil)).Elem()
}

func (o InquiryInfoResponsePtrOutput) ToInquiryInfoResponsePtrOutput() InquiryInfoResponsePtrOutput {
	return o
}

func (o InquiryInfoResponsePtrOutput) ToInquiryInfoResponsePtrOutputWithContext(ctx context.Context) InquiryInfoResponsePtrOutput {
	return o
}

func (o InquiryInfoResponsePtrOutput) Elem() InquiryInfoResponseOutput {
	return o.ApplyT(func(v *InquiryInfoResponse) InquiryInfoResponse {
		if v != nil {
			return *v
		}
		var ret InquiryInfoResponse
		return ret
	}).(InquiryInfoResponseOutput)
}

// Error Details if the Status is non-success.
func (o InquiryInfoResponsePtrOutput) ErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v *InquiryInfoResponse) *ErrorDetailResponse {
		if v == nil {
			return nil
		}
		return v.ErrorDetail
	}).(ErrorDetailResponsePtrOutput)
}

// Inquiry Details which will have workload specific details.
// For e.g. - For SQL and oracle this will contain different details.
func (o InquiryInfoResponsePtrOutput) InquiryDetails() WorkloadInquiryDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InquiryInfoResponse) []WorkloadInquiryDetailsResponse {
		if v == nil {
			return nil
		}
		return v.InquiryDetails
	}).(WorkloadInquiryDetailsResponseArrayOutput)
}

// Inquiry Status for this container such as
// InProgress | Failed | Succeeded
func (o InquiryInfoResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InquiryInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Validation for inquired protectable items under a given container.
type InquiryValidation struct {
	// Status for the Inquiry Validation.
	Status *string `pulumi:"status"`
}

// InquiryValidationInput is an input type that accepts InquiryValidationArgs and InquiryValidationOutput values.
// You can construct a concrete instance of `InquiryValidationInput` via:
//
//	InquiryValidationArgs{...}
type InquiryValidationInput interface {
	pulumi.Input

	ToInquiryValidationOutput() InquiryValidationOutput
	ToInquiryValidationOutputWithContext(context.Context) InquiryValidationOutput
}

// Validation for inquired protectable items under a given container.
type InquiryValidationArgs struct {
	// Status for the Inquiry Validation.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (InquiryValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InquiryValidation)(nil)).Elem()
}

func (i InquiryValidationArgs) ToInquiryValidationOutput() InquiryValidationOutput {
	return i.ToInquiryValidationOutputWithContext(context.Background())
}

func (i InquiryValidationArgs) ToInquiryValidationOutputWithContext(ctx context.Context) InquiryValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryValidationOutput)
}

func (i InquiryValidationArgs) ToInquiryValidationPtrOutput() InquiryValidationPtrOutput {
	return i.ToInquiryValidationPtrOutputWithContext(context.Background())
}

func (i InquiryValidationArgs) ToInquiryValidationPtrOutputWithContext(ctx context.Context) InquiryValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryValidationOutput).ToInquiryValidationPtrOutputWithContext(ctx)
}

// InquiryValidationPtrInput is an input type that accepts InquiryValidationArgs, InquiryValidationPtr and InquiryValidationPtrOutput values.
// You can construct a concrete instance of `InquiryValidationPtrInput` via:
//
//	        InquiryValidationArgs{...}
//
//	or:
//
//	        nil
type InquiryValidationPtrInput interface {
	pulumi.Input

	ToInquiryValidationPtrOutput() InquiryValidationPtrOutput
	ToInquiryValidationPtrOutputWithContext(context.Context) InquiryValidationPtrOutput
}

type inquiryValidationPtrType InquiryValidationArgs

func InquiryValidationPtr(v *InquiryValidationArgs) InquiryValidationPtrInput {
	return (*inquiryValidationPtrType)(v)
}

func (*inquiryValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InquiryValidation)(nil)).Elem()
}

func (i *inquiryValidationPtrType) ToInquiryValidationPtrOutput() InquiryValidationPtrOutput {
	return i.ToInquiryValidationPtrOutputWithContext(context.Background())
}

func (i *inquiryValidationPtrType) ToInquiryValidationPtrOutputWithContext(ctx context.Context) InquiryValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryValidationPtrOutput)
}

// Validation for inquired protectable items under a given container.
type InquiryValidationOutput struct{ *pulumi.OutputState }

func (InquiryValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InquiryValidation)(nil)).Elem()
}

func (o InquiryValidationOutput) ToInquiryValidationOutput() InquiryValidationOutput {
	return o
}

func (o InquiryValidationOutput) ToInquiryValidationOutputWithContext(ctx context.Context) InquiryValidationOutput {
	return o
}

func (o InquiryValidationOutput) ToInquiryValidationPtrOutput() InquiryValidationPtrOutput {
	return o.ToInquiryValidationPtrOutputWithContext(context.Background())
}

func (o InquiryValidationOutput) ToInquiryValidationPtrOutputWithContext(ctx context.Context) InquiryValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InquiryValidation) *InquiryValidation {
		return &v
	}).(InquiryValidationPtrOutput)
}

// Status for the Inquiry Validation.
func (o InquiryValidationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InquiryValidation) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type InquiryValidationPtrOutput struct{ *pulumi.OutputState }

func (InquiryValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InquiryValidation)(nil)).Elem()
}

func (o InquiryValidationPtrOutput) ToInquiryValidationPtrOutput() InquiryValidationPtrOutput {
	return o
}

func (o InquiryValidationPtrOutput) ToInquiryValidationPtrOutputWithContext(ctx context.Context) InquiryValidationPtrOutput {
	return o
}

func (o InquiryValidationPtrOutput) Elem() InquiryValidationOutput {
	return o.ApplyT(func(v *InquiryValidation) InquiryValidation {
		if v != nil {
			return *v
		}
		var ret InquiryValidation
		return ret
	}).(InquiryValidationOutput)
}

// Status for the Inquiry Validation.
func (o InquiryValidationPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InquiryValidation) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Validation for inquired protectable items under a given container.
type InquiryValidationResponse struct {
	// Error Additional Detail in case the status is non-success.
	AdditionalDetail string `pulumi:"additionalDetail"`
	// Error Detail in case the status is non-success.
	ErrorDetail *ErrorDetailResponse `pulumi:"errorDetail"`
	// Dictionary to store the count of ProtectableItems with key POType.
	ProtectableItemCount interface{} `pulumi:"protectableItemCount"`
	// Status for the Inquiry Validation.
	Status *string `pulumi:"status"`
}

// Validation for inquired protectable items under a given container.
type InquiryValidationResponseOutput struct{ *pulumi.OutputState }

func (InquiryValidationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InquiryValidationResponse)(nil)).Elem()
}

func (o InquiryValidationResponseOutput) ToInquiryValidationResponseOutput() InquiryValidationResponseOutput {
	return o
}

func (o InquiryValidationResponseOutput) ToInquiryValidationResponseOutputWithContext(ctx context.Context) InquiryValidationResponseOutput {
	return o
}

// Error Additional Detail in case the status is non-success.
func (o InquiryValidationResponseOutput) AdditionalDetail() pulumi.StringOutput {
	return o.ApplyT(func(v InquiryValidationResponse) string { return v.AdditionalDetail }).(pulumi.StringOutput)
}

// Error Detail in case the status is non-success.
func (o InquiryValidationResponseOutput) ErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v InquiryValidationResponse) *ErrorDetailResponse { return v.ErrorDetail }).(ErrorDetailResponsePtrOutput)
}

// Dictionary to store the count of ProtectableItems with key POType.
func (o InquiryValidationResponseOutput) ProtectableItemCount() pulumi.AnyOutput {
	return o.ApplyT(func(v InquiryValidationResponse) interface{} { return v.ProtectableItemCount }).(pulumi.AnyOutput)
}

// Status for the Inquiry Validation.
func (o InquiryValidationResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InquiryValidationResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type InquiryValidationResponsePtrOutput struct{ *pulumi.OutputState }

func (InquiryValidationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InquiryValidationResponse)(nil)).Elem()
}

func (o InquiryValidationResponsePtrOutput) ToInquiryValidationResponsePtrOutput() InquiryValidationResponsePtrOutput {
	return o
}

func (o InquiryValidationResponsePtrOutput) ToInquiryValidationResponsePtrOutputWithContext(ctx context.Context) InquiryValidationResponsePtrOutput {
	return o
}

func (o InquiryValidationResponsePtrOutput) Elem() InquiryValidationResponseOutput {
	return o.ApplyT(func(v *InquiryValidationResponse) InquiryValidationResponse {
		if v != nil {
			return *v
		}
		var ret InquiryValidationResponse
		return ret
	}).(InquiryValidationResponseOutput)
}

// Error Additional Detail in case the status is non-success.
func (o InquiryValidationResponsePtrOutput) AdditionalDetail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InquiryValidationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdditionalDetail
	}).(pulumi.StringPtrOutput)
}

// Error Detail in case the status is non-success.
func (o InquiryValidationResponsePtrOutput) ErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v *InquiryValidationResponse) *ErrorDetailResponse {
		if v == nil {
			return nil
		}
		return v.ErrorDetail
	}).(ErrorDetailResponsePtrOutput)
}

// Dictionary to store the count of ProtectableItems with key POType.
func (o InquiryValidationResponsePtrOutput) ProtectableItemCount() pulumi.AnyOutput {
	return o.ApplyT(func(v *InquiryValidationResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.ProtectableItemCount
	}).(pulumi.AnyOutput)
}

// Status for the Inquiry Validation.
func (o InquiryValidationResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InquiryValidationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type InstantRPAdditionalDetails struct {
	AzureBackupRGNamePrefix *string `pulumi:"azureBackupRGNamePrefix"`
	AzureBackupRGNameSuffix *string `pulumi:"azureBackupRGNameSuffix"`
}

// InstantRPAdditionalDetailsInput is an input type that accepts InstantRPAdditionalDetailsArgs and InstantRPAdditionalDetailsOutput values.
// You can construct a concrete instance of `InstantRPAdditionalDetailsInput` via:
//
//	InstantRPAdditionalDetailsArgs{...}
type InstantRPAdditionalDetailsInput interface {
	pulumi.Input

	ToInstantRPAdditionalDetailsOutput() InstantRPAdditionalDetailsOutput
	ToInstantRPAdditionalDetailsOutputWithContext(context.Context) InstantRPAdditionalDetailsOutput
}

type InstantRPAdditionalDetailsArgs struct {
	AzureBackupRGNamePrefix pulumi.StringPtrInput `pulumi:"azureBackupRGNamePrefix"`
	AzureBackupRGNameSuffix pulumi.StringPtrInput `pulumi:"azureBackupRGNameSuffix"`
}

func (InstantRPAdditionalDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstantRPAdditionalDetails)(nil)).Elem()
}

func (i InstantRPAdditionalDetailsArgs) ToInstantRPAdditionalDetailsOutput() InstantRPAdditionalDetailsOutput {
	return i.ToInstantRPAdditionalDetailsOutputWithContext(context.Background())
}

func (i InstantRPAdditionalDetailsArgs) ToInstantRPAdditionalDetailsOutputWithContext(ctx context.Context) InstantRPAdditionalDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstantRPAdditionalDetailsOutput)
}

func (i InstantRPAdditionalDetailsArgs) ToInstantRPAdditionalDetailsPtrOutput() InstantRPAdditionalDetailsPtrOutput {
	return i.ToInstantRPAdditionalDetailsPtrOutputWithContext(context.Background())
}

func (i InstantRPAdditionalDetailsArgs) ToInstantRPAdditionalDetailsPtrOutputWithContext(ctx context.Context) InstantRPAdditionalDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstantRPAdditionalDetailsOutput).ToInstantRPAdditionalDetailsPtrOutputWithContext(ctx)
}

// InstantRPAdditionalDetailsPtrInput is an input type that accepts InstantRPAdditionalDetailsArgs, InstantRPAdditionalDetailsPtr and InstantRPAdditionalDetailsPtrOutput values.
// You can construct a concrete instance of `InstantRPAdditionalDetailsPtrInput` via:
//
//	        InstantRPAdditionalDetailsArgs{...}
//
//	or:
//
//	        nil
type InstantRPAdditionalDetailsPtrInput interface {
	pulumi.Input

	ToInstantRPAdditionalDetailsPtrOutput() InstantRPAdditionalDetailsPtrOutput
	ToInstantRPAdditionalDetailsPtrOutputWithContext(context.Context) InstantRPAdditionalDetailsPtrOutput
}

type instantRPAdditionalDetailsPtrType InstantRPAdditionalDetailsArgs

func InstantRPAdditionalDetailsPtr(v *InstantRPAdditionalDetailsArgs) InstantRPAdditionalDetailsPtrInput {
	return (*instantRPAdditionalDetailsPtrType)(v)
}

func (*instantRPAdditionalDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstantRPAdditionalDetails)(nil)).Elem()
}

func (i *instantRPAdditionalDetailsPtrType) ToInstantRPAdditionalDetailsPtrOutput() InstantRPAdditionalDetailsPtrOutput {
	return i.ToInstantRPAdditionalDetailsPtrOutputWithContext(context.Background())
}

func (i *instantRPAdditionalDetailsPtrType) ToInstantRPAdditionalDetailsPtrOutputWithContext(ctx context.Context) InstantRPAdditionalDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstantRPAdditionalDetailsPtrOutput)
}

type InstantRPAdditionalDetailsOutput struct{ *pulumi.OutputState }

func (InstantRPAdditionalDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstantRPAdditionalDetails)(nil)).Elem()
}

func (o InstantRPAdditionalDetailsOutput) ToInstantRPAdditionalDetailsOutput() InstantRPAdditionalDetailsOutput {
	return o
}

func (o InstantRPAdditionalDetailsOutput) ToInstantRPAdditionalDetailsOutputWithContext(ctx context.Context) InstantRPAdditionalDetailsOutput {
	return o
}

func (o InstantRPAdditionalDetailsOutput) ToInstantRPAdditionalDetailsPtrOutput() InstantRPAdditionalDetailsPtrOutput {
	return o.ToInstantRPAdditionalDetailsPtrOutputWithContext(context.Background())
}

func (o InstantRPAdditionalDetailsOutput) ToInstantRPAdditionalDetailsPtrOutputWithContext(ctx context.Context) InstantRPAdditionalDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstantRPAdditionalDetails) *InstantRPAdditionalDetails {
		return &v
	}).(InstantRPAdditionalDetailsPtrOutput)
}

func (o InstantRPAdditionalDetailsOutput) AzureBackupRGNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstantRPAdditionalDetails) *string { return v.AzureBackupRGNamePrefix }).(pulumi.StringPtrOutput)
}

func (o InstantRPAdditionalDetailsOutput) AzureBackupRGNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstantRPAdditionalDetails) *string { return v.AzureBackupRGNameSuffix }).(pulumi.StringPtrOutput)
}

type InstantRPAdditionalDetailsPtrOutput struct{ *pulumi.OutputState }

func (InstantRPAdditionalDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstantRPAdditionalDetails)(nil)).Elem()
}

func (o InstantRPAdditionalDetailsPtrOutput) ToInstantRPAdditionalDetailsPtrOutput() InstantRPAdditionalDetailsPtrOutput {
	return o
}

func (o InstantRPAdditionalDetailsPtrOutput) ToInstantRPAdditionalDetailsPtrOutputWithContext(ctx context.Context) InstantRPAdditionalDetailsPtrOutput {
	return o
}

func (o InstantRPAdditionalDetailsPtrOutput) Elem() InstantRPAdditionalDetailsOutput {
	return o.ApplyT(func(v *InstantRPAdditionalDetails) InstantRPAdditionalDetails {
		if v != nil {
			return *v
		}
		var ret InstantRPAdditionalDetails
		return ret
	}).(InstantRPAdditionalDetailsOutput)
}

func (o InstantRPAdditionalDetailsPtrOutput) AzureBackupRGNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstantRPAdditionalDetails) *string {
		if v == nil {
			return nil
		}
		return v.AzureBackupRGNamePrefix
	}).(pulumi.StringPtrOutput)
}

func (o InstantRPAdditionalDetailsPtrOutput) AzureBackupRGNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstantRPAdditionalDetails) *string {
		if v == nil {
			return nil
		}
		return v.AzureBackupRGNameSuffix
	}).(pulumi.StringPtrOutput)
}

type InstantRPAdditionalDetailsResponse struct {
	AzureBackupRGNamePrefix *string `pulumi:"azureBackupRGNamePrefix"`
	AzureBackupRGNameSuffix *string `pulumi:"azureBackupRGNameSuffix"`
}

type InstantRPAdditionalDetailsResponseOutput struct{ *pulumi.OutputState }

func (InstantRPAdditionalDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstantRPAdditionalDetailsResponse)(nil)).Elem()
}

func (o InstantRPAdditionalDetailsResponseOutput) ToInstantRPAdditionalDetailsResponseOutput() InstantRPAdditionalDetailsResponseOutput {
	return o
}

func (o InstantRPAdditionalDetailsResponseOutput) ToInstantRPAdditionalDetailsResponseOutputWithContext(ctx context.Context) InstantRPAdditionalDetailsResponseOutput {
	return o
}

func (o InstantRPAdditionalDetailsResponseOutput) AzureBackupRGNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstantRPAdditionalDetailsResponse) *string { return v.AzureBackupRGNamePrefix }).(pulumi.StringPtrOutput)
}

func (o InstantRPAdditionalDetailsResponseOutput) AzureBackupRGNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstantRPAdditionalDetailsResponse) *string { return v.AzureBackupRGNameSuffix }).(pulumi.StringPtrOutput)
}

type InstantRPAdditionalDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InstantRPAdditionalDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstantRPAdditionalDetailsResponse)(nil)).Elem()
}

func (o InstantRPAdditionalDetailsResponsePtrOutput) ToInstantRPAdditionalDetailsResponsePtrOutput() InstantRPAdditionalDetailsResponsePtrOutput {
	return o
}

func (o InstantRPAdditionalDetailsResponsePtrOutput) ToInstantRPAdditionalDetailsResponsePtrOutputWithContext(ctx context.Context) InstantRPAdditionalDetailsResponsePtrOutput {
	return o
}

func (o InstantRPAdditionalDetailsResponsePtrOutput) Elem() InstantRPAdditionalDetailsResponseOutput {
	return o.ApplyT(func(v *InstantRPAdditionalDetailsResponse) InstantRPAdditionalDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InstantRPAdditionalDetailsResponse
		return ret
	}).(InstantRPAdditionalDetailsResponseOutput)
}

func (o InstantRPAdditionalDetailsResponsePtrOutput) AzureBackupRGNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstantRPAdditionalDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AzureBackupRGNamePrefix
	}).(pulumi.StringPtrOutput)
}

func (o InstantRPAdditionalDetailsResponsePtrOutput) AzureBackupRGNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstantRPAdditionalDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AzureBackupRGNameSuffix
	}).(pulumi.StringPtrOutput)
}

// KPI Resource Health Details
type KPIResourceHealthDetails struct {
	// Resource Health Status
	ResourceHealthStatus *string `pulumi:"resourceHealthStatus"`
}

// KPIResourceHealthDetailsInput is an input type that accepts KPIResourceHealthDetailsArgs and KPIResourceHealthDetailsOutput values.
// You can construct a concrete instance of `KPIResourceHealthDetailsInput` via:
//
//	KPIResourceHealthDetailsArgs{...}
type KPIResourceHealthDetailsInput interface {
	pulumi.Input

	ToKPIResourceHealthDetailsOutput() KPIResourceHealthDetailsOutput
	ToKPIResourceHealthDetailsOutputWithContext(context.Context) KPIResourceHealthDetailsOutput
}

// KPI Resource Health Details
type KPIResourceHealthDetailsArgs struct {
	// Resource Health Status
	ResourceHealthStatus pulumi.StringPtrInput `pulumi:"resourceHealthStatus"`
}

func (KPIResourceHealthDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KPIResourceHealthDetails)(nil)).Elem()
}

func (i KPIResourceHealthDetailsArgs) ToKPIResourceHealthDetailsOutput() KPIResourceHealthDetailsOutput {
	return i.ToKPIResourceHealthDetailsOutputWithContext(context.Background())
}

func (i KPIResourceHealthDetailsArgs) ToKPIResourceHealthDetailsOutputWithContext(ctx context.Context) KPIResourceHealthDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KPIResourceHealthDetailsOutput)
}

// KPIResourceHealthDetailsMapInput is an input type that accepts KPIResourceHealthDetailsMap and KPIResourceHealthDetailsMapOutput values.
// You can construct a concrete instance of `KPIResourceHealthDetailsMapInput` via:
//
//	KPIResourceHealthDetailsMap{ "key": KPIResourceHealthDetailsArgs{...} }
type KPIResourceHealthDetailsMapInput interface {
	pulumi.Input

	ToKPIResourceHealthDetailsMapOutput() KPIResourceHealthDetailsMapOutput
	ToKPIResourceHealthDetailsMapOutputWithContext(context.Context) KPIResourceHealthDetailsMapOutput
}

type KPIResourceHealthDetailsMap map[string]KPIResourceHealthDetailsInput

func (KPIResourceHealthDetailsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]KPIResourceHealthDetails)(nil)).Elem()
}

func (i KPIResourceHealthDetailsMap) ToKPIResourceHealthDetailsMapOutput() KPIResourceHealthDetailsMapOutput {
	return i.ToKPIResourceHealthDetailsMapOutputWithContext(context.Background())
}

func (i KPIResourceHealthDetailsMap) ToKPIResourceHealthDetailsMapOutputWithContext(ctx context.Context) KPIResourceHealthDetailsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KPIResourceHealthDetailsMapOutput)
}

// KPI Resource Health Details
type KPIResourceHealthDetailsOutput struct{ *pulumi.OutputState }

func (KPIResourceHealthDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KPIResourceHealthDetails)(nil)).Elem()
}

func (o KPIResourceHealthDetailsOutput) ToKPIResourceHealthDetailsOutput() KPIResourceHealthDetailsOutput {
	return o
}

func (o KPIResourceHealthDetailsOutput) ToKPIResourceHealthDetailsOutputWithContext(ctx context.Context) KPIResourceHealthDetailsOutput {
	return o
}

// Resource Health Status
func (o KPIResourceHealthDetailsOutput) ResourceHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KPIResourceHealthDetails) *string { return v.ResourceHealthStatus }).(pulumi.StringPtrOutput)
}

type KPIResourceHealthDetailsMapOutput struct{ *pulumi.OutputState }

func (KPIResourceHealthDetailsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]KPIResourceHealthDetails)(nil)).Elem()
}

func (o KPIResourceHealthDetailsMapOutput) ToKPIResourceHealthDetailsMapOutput() KPIResourceHealthDetailsMapOutput {
	return o
}

func (o KPIResourceHealthDetailsMapOutput) ToKPIResourceHealthDetailsMapOutputWithContext(ctx context.Context) KPIResourceHealthDetailsMapOutput {
	return o
}

func (o KPIResourceHealthDetailsMapOutput) MapIndex(k pulumi.StringInput) KPIResourceHealthDetailsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) KPIResourceHealthDetails {
		return vs[0].(map[string]KPIResourceHealthDetails)[vs[1].(string)]
	}).(KPIResourceHealthDetailsOutput)
}

// KPI Resource Health Details
type KPIResourceHealthDetailsResponse struct {
	// Resource Health Status
	ResourceHealthDetails []ResourceHealthDetailsResponse `pulumi:"resourceHealthDetails"`
	// Resource Health Status
	ResourceHealthStatus *string `pulumi:"resourceHealthStatus"`
}

// KPI Resource Health Details
type KPIResourceHealthDetailsResponseOutput struct{ *pulumi.OutputState }

func (KPIResourceHealthDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KPIResourceHealthDetailsResponse)(nil)).Elem()
}

func (o KPIResourceHealthDetailsResponseOutput) ToKPIResourceHealthDetailsResponseOutput() KPIResourceHealthDetailsResponseOutput {
	return o
}

func (o KPIResourceHealthDetailsResponseOutput) ToKPIResourceHealthDetailsResponseOutputWithContext(ctx context.Context) KPIResourceHealthDetailsResponseOutput {
	return o
}

// Resource Health Status
func (o KPIResourceHealthDetailsResponseOutput) ResourceHealthDetails() ResourceHealthDetailsResponseArrayOutput {
	return o.ApplyT(func(v KPIResourceHealthDetailsResponse) []ResourceHealthDetailsResponse {
		return v.ResourceHealthDetails
	}).(ResourceHealthDetailsResponseArrayOutput)
}

// Resource Health Status
func (o KPIResourceHealthDetailsResponseOutput) ResourceHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KPIResourceHealthDetailsResponse) *string { return v.ResourceHealthStatus }).(pulumi.StringPtrOutput)
}

type KPIResourceHealthDetailsResponseMapOutput struct{ *pulumi.OutputState }

func (KPIResourceHealthDetailsResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]KPIResourceHealthDetailsResponse)(nil)).Elem()
}

func (o KPIResourceHealthDetailsResponseMapOutput) ToKPIResourceHealthDetailsResponseMapOutput() KPIResourceHealthDetailsResponseMapOutput {
	return o
}

func (o KPIResourceHealthDetailsResponseMapOutput) ToKPIResourceHealthDetailsResponseMapOutputWithContext(ctx context.Context) KPIResourceHealthDetailsResponseMapOutput {
	return o
}

func (o KPIResourceHealthDetailsResponseMapOutput) MapIndex(k pulumi.StringInput) KPIResourceHealthDetailsResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) KPIResourceHealthDetailsResponse {
		return vs[0].(map[string]KPIResourceHealthDetailsResponse)[vs[1].(string)]
	}).(KPIResourceHealthDetailsResponseOutput)
}

// Key Encryption Key (KEK) information.
type KeyEncryptionKeyInfo struct {
	// The key URL / identifier.
	KeyIdentifier *string `pulumi:"keyIdentifier"`
	// The KeyVault resource ARM Id for key.
	KeyVaultResourceArmId *string `pulumi:"keyVaultResourceArmId"`
}

// KeyEncryptionKeyInfoInput is an input type that accepts KeyEncryptionKeyInfoArgs and KeyEncryptionKeyInfoOutput values.
// You can construct a concrete instance of `KeyEncryptionKeyInfoInput` via:
//
//	KeyEncryptionKeyInfoArgs{...}
type KeyEncryptionKeyInfoInput interface {
	pulumi.Input

	ToKeyEncryptionKeyInfoOutput() KeyEncryptionKeyInfoOutput
	ToKeyEncryptionKeyInfoOutputWithContext(context.Context) KeyEncryptionKeyInfoOutput
}

// Key Encryption Key (KEK) information.
type KeyEncryptionKeyInfoArgs struct {
	// The key URL / identifier.
	KeyIdentifier pulumi.StringPtrInput `pulumi:"keyIdentifier"`
	// The KeyVault resource ARM Id for key.
	KeyVaultResourceArmId pulumi.StringPtrInput `pulumi:"keyVaultResourceArmId"`
}

func (KeyEncryptionKeyInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyEncryptionKeyInfo)(nil)).Elem()
}

func (i KeyEncryptionKeyInfoArgs) ToKeyEncryptionKeyInfoOutput() KeyEncryptionKeyInfoOutput {
	return i.ToKeyEncryptionKeyInfoOutputWithContext(context.Background())
}

func (i KeyEncryptionKeyInfoArgs) ToKeyEncryptionKeyInfoOutputWithContext(ctx context.Context) KeyEncryptionKeyInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyEncryptionKeyInfoOutput)
}

func (i KeyEncryptionKeyInfoArgs) ToKeyEncryptionKeyInfoPtrOutput() KeyEncryptionKeyInfoPtrOutput {
	return i.ToKeyEncryptionKeyInfoPtrOutputWithContext(context.Background())
}

func (i KeyEncryptionKeyInfoArgs) ToKeyEncryptionKeyInfoPtrOutputWithContext(ctx context.Context) KeyEncryptionKeyInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyEncryptionKeyInfoOutput).ToKeyEncryptionKeyInfoPtrOutputWithContext(ctx)
}

// KeyEncryptionKeyInfoPtrInput is an input type that accepts KeyEncryptionKeyInfoArgs, KeyEncryptionKeyInfoPtr and KeyEncryptionKeyInfoPtrOutput values.
// You can construct a concrete instance of `KeyEncryptionKeyInfoPtrInput` via:
//
//	        KeyEncryptionKeyInfoArgs{...}
//
//	or:
//
//	        nil
type KeyEncryptionKeyInfoPtrInput interface {
	pulumi.Input

	ToKeyEncryptionKeyInfoPtrOutput() KeyEncryptionKeyInfoPtrOutput
	ToKeyEncryptionKeyInfoPtrOutputWithContext(context.Context) KeyEncryptionKeyInfoPtrOutput
}

type keyEncryptionKeyInfoPtrType KeyEncryptionKeyInfoArgs

func KeyEncryptionKeyInfoPtr(v *KeyEncryptionKeyInfoArgs) KeyEncryptionKeyInfoPtrInput {
	return (*keyEncryptionKeyInfoPtrType)(v)
}

func (*keyEncryptionKeyInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyEncryptionKeyInfo)(nil)).Elem()
}

func (i *keyEncryptionKeyInfoPtrType) ToKeyEncryptionKeyInfoPtrOutput() KeyEncryptionKeyInfoPtrOutput {
	return i.ToKeyEncryptionKeyInfoPtrOutputWithContext(context.Background())
}

func (i *keyEncryptionKeyInfoPtrType) ToKeyEncryptionKeyInfoPtrOutputWithContext(ctx context.Context) KeyEncryptionKeyInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyEncryptionKeyInfoPtrOutput)
}

// Key Encryption Key (KEK) information.
type KeyEncryptionKeyInfoOutput struct{ *pulumi.OutputState }

func (KeyEncryptionKeyInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyEncryptionKeyInfo)(nil)).Elem()
}

func (o KeyEncryptionKeyInfoOutput) ToKeyEncryptionKeyInfoOutput() KeyEncryptionKeyInfoOutput {
	return o
}

func (o KeyEncryptionKeyInfoOutput) ToKeyEncryptionKeyInfoOutputWithContext(ctx context.Context) KeyEncryptionKeyInfoOutput {
	return o
}

func (o KeyEncryptionKeyInfoOutput) ToKeyEncryptionKeyInfoPtrOutput() KeyEncryptionKeyInfoPtrOutput {
	return o.ToKeyEncryptionKeyInfoPtrOutputWithContext(context.Background())
}

func (o KeyEncryptionKeyInfoOutput) ToKeyEncryptionKeyInfoPtrOutputWithContext(ctx context.Context) KeyEncryptionKeyInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyEncryptionKeyInfo) *KeyEncryptionKeyInfo {
		return &v
	}).(KeyEncryptionKeyInfoPtrOutput)
}

// The key URL / identifier.
func (o KeyEncryptionKeyInfoOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyEncryptionKeyInfo) *string { return v.KeyIdentifier }).(pulumi.StringPtrOutput)
}

// The KeyVault resource ARM Id for key.
func (o KeyEncryptionKeyInfoOutput) KeyVaultResourceArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyEncryptionKeyInfo) *string { return v.KeyVaultResourceArmId }).(pulumi.StringPtrOutput)
}

type KeyEncryptionKeyInfoPtrOutput struct{ *pulumi.OutputState }

func (KeyEncryptionKeyInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyEncryptionKeyInfo)(nil)).Elem()
}

func (o KeyEncryptionKeyInfoPtrOutput) ToKeyEncryptionKeyInfoPtrOutput() KeyEncryptionKeyInfoPtrOutput {
	return o
}

func (o KeyEncryptionKeyInfoPtrOutput) ToKeyEncryptionKeyInfoPtrOutputWithContext(ctx context.Context) KeyEncryptionKeyInfoPtrOutput {
	return o
}

func (o KeyEncryptionKeyInfoPtrOutput) Elem() KeyEncryptionKeyInfoOutput {
	return o.ApplyT(func(v *KeyEncryptionKeyInfo) KeyEncryptionKeyInfo {
		if v != nil {
			return *v
		}
		var ret KeyEncryptionKeyInfo
		return ret
	}).(KeyEncryptionKeyInfoOutput)
}

// The key URL / identifier.
func (o KeyEncryptionKeyInfoPtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyEncryptionKeyInfo) *string {
		if v == nil {
			return nil
		}
		return v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// The KeyVault resource ARM Id for key.
func (o KeyEncryptionKeyInfoPtrOutput) KeyVaultResourceArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyEncryptionKeyInfo) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultResourceArmId
	}).(pulumi.StringPtrOutput)
}

// Log policy schedule.
type LogSchedulePolicy struct {
	// Frequency of the log schedule operation of this policy in minutes.
	ScheduleFrequencyInMins *int `pulumi:"scheduleFrequencyInMins"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LogSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
}

// LogSchedulePolicyInput is an input type that accepts LogSchedulePolicyArgs and LogSchedulePolicyOutput values.
// You can construct a concrete instance of `LogSchedulePolicyInput` via:
//
//	LogSchedulePolicyArgs{...}
type LogSchedulePolicyInput interface {
	pulumi.Input

	ToLogSchedulePolicyOutput() LogSchedulePolicyOutput
	ToLogSchedulePolicyOutputWithContext(context.Context) LogSchedulePolicyOutput
}

// Log policy schedule.
type LogSchedulePolicyArgs struct {
	// Frequency of the log schedule operation of this policy in minutes.
	ScheduleFrequencyInMins pulumi.IntPtrInput `pulumi:"scheduleFrequencyInMins"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LogSchedulePolicy'.
	SchedulePolicyType pulumi.StringInput `pulumi:"schedulePolicyType"`
}

func (LogSchedulePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSchedulePolicy)(nil)).Elem()
}

func (i LogSchedulePolicyArgs) ToLogSchedulePolicyOutput() LogSchedulePolicyOutput {
	return i.ToLogSchedulePolicyOutputWithContext(context.Background())
}

func (i LogSchedulePolicyArgs) ToLogSchedulePolicyOutputWithContext(ctx context.Context) LogSchedulePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSchedulePolicyOutput)
}

func (i LogSchedulePolicyArgs) ToLogSchedulePolicyPtrOutput() LogSchedulePolicyPtrOutput {
	return i.ToLogSchedulePolicyPtrOutputWithContext(context.Background())
}

func (i LogSchedulePolicyArgs) ToLogSchedulePolicyPtrOutputWithContext(ctx context.Context) LogSchedulePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSchedulePolicyOutput).ToLogSchedulePolicyPtrOutputWithContext(ctx)
}

// LogSchedulePolicyPtrInput is an input type that accepts LogSchedulePolicyArgs, LogSchedulePolicyPtr and LogSchedulePolicyPtrOutput values.
// You can construct a concrete instance of `LogSchedulePolicyPtrInput` via:
//
//	        LogSchedulePolicyArgs{...}
//
//	or:
//
//	        nil
type LogSchedulePolicyPtrInput interface {
	pulumi.Input

	ToLogSchedulePolicyPtrOutput() LogSchedulePolicyPtrOutput
	ToLogSchedulePolicyPtrOutputWithContext(context.Context) LogSchedulePolicyPtrOutput
}

type logSchedulePolicyPtrType LogSchedulePolicyArgs

func LogSchedulePolicyPtr(v *LogSchedulePolicyArgs) LogSchedulePolicyPtrInput {
	return (*logSchedulePolicyPtrType)(v)
}

func (*logSchedulePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSchedulePolicy)(nil)).Elem()
}

func (i *logSchedulePolicyPtrType) ToLogSchedulePolicyPtrOutput() LogSchedulePolicyPtrOutput {
	return i.ToLogSchedulePolicyPtrOutputWithContext(context.Background())
}

func (i *logSchedulePolicyPtrType) ToLogSchedulePolicyPtrOutputWithContext(ctx context.Context) LogSchedulePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSchedulePolicyPtrOutput)
}

// Log policy schedule.
type LogSchedulePolicyOutput struct{ *pulumi.OutputState }

func (LogSchedulePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSchedulePolicy)(nil)).Elem()
}

func (o LogSchedulePolicyOutput) ToLogSchedulePolicyOutput() LogSchedulePolicyOutput {
	return o
}

func (o LogSchedulePolicyOutput) ToLogSchedulePolicyOutputWithContext(ctx context.Context) LogSchedulePolicyOutput {
	return o
}

func (o LogSchedulePolicyOutput) ToLogSchedulePolicyPtrOutput() LogSchedulePolicyPtrOutput {
	return o.ToLogSchedulePolicyPtrOutputWithContext(context.Background())
}

func (o LogSchedulePolicyOutput) ToLogSchedulePolicyPtrOutputWithContext(ctx context.Context) LogSchedulePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSchedulePolicy) *LogSchedulePolicy {
		return &v
	}).(LogSchedulePolicyPtrOutput)
}

// Frequency of the log schedule operation of this policy in minutes.
func (o LogSchedulePolicyOutput) ScheduleFrequencyInMins() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSchedulePolicy) *int { return v.ScheduleFrequencyInMins }).(pulumi.IntPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LogSchedulePolicy'.
func (o LogSchedulePolicyOutput) SchedulePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v LogSchedulePolicy) string { return v.SchedulePolicyType }).(pulumi.StringOutput)
}

type LogSchedulePolicyPtrOutput struct{ *pulumi.OutputState }

func (LogSchedulePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSchedulePolicy)(nil)).Elem()
}

func (o LogSchedulePolicyPtrOutput) ToLogSchedulePolicyPtrOutput() LogSchedulePolicyPtrOutput {
	return o
}

func (o LogSchedulePolicyPtrOutput) ToLogSchedulePolicyPtrOutputWithContext(ctx context.Context) LogSchedulePolicyPtrOutput {
	return o
}

func (o LogSchedulePolicyPtrOutput) Elem() LogSchedulePolicyOutput {
	return o.ApplyT(func(v *LogSchedulePolicy) LogSchedulePolicy {
		if v != nil {
			return *v
		}
		var ret LogSchedulePolicy
		return ret
	}).(LogSchedulePolicyOutput)
}

// Frequency of the log schedule operation of this policy in minutes.
func (o LogSchedulePolicyPtrOutput) ScheduleFrequencyInMins() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogSchedulePolicy) *int {
		if v == nil {
			return nil
		}
		return v.ScheduleFrequencyInMins
	}).(pulumi.IntPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LogSchedulePolicy'.
func (o LogSchedulePolicyPtrOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSchedulePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.SchedulePolicyType
	}).(pulumi.StringPtrOutput)
}

// Log policy schedule.
type LogSchedulePolicyResponse struct {
	// Frequency of the log schedule operation of this policy in minutes.
	ScheduleFrequencyInMins *int `pulumi:"scheduleFrequencyInMins"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LogSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
}

// Log policy schedule.
type LogSchedulePolicyResponseOutput struct{ *pulumi.OutputState }

func (LogSchedulePolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSchedulePolicyResponse)(nil)).Elem()
}

func (o LogSchedulePolicyResponseOutput) ToLogSchedulePolicyResponseOutput() LogSchedulePolicyResponseOutput {
	return o
}

func (o LogSchedulePolicyResponseOutput) ToLogSchedulePolicyResponseOutputWithContext(ctx context.Context) LogSchedulePolicyResponseOutput {
	return o
}

// Frequency of the log schedule operation of this policy in minutes.
func (o LogSchedulePolicyResponseOutput) ScheduleFrequencyInMins() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSchedulePolicyResponse) *int { return v.ScheduleFrequencyInMins }).(pulumi.IntPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LogSchedulePolicy'.
func (o LogSchedulePolicyResponseOutput) SchedulePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v LogSchedulePolicyResponse) string { return v.SchedulePolicyType }).(pulumi.StringOutput)
}

type LogSchedulePolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (LogSchedulePolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSchedulePolicyResponse)(nil)).Elem()
}

func (o LogSchedulePolicyResponsePtrOutput) ToLogSchedulePolicyResponsePtrOutput() LogSchedulePolicyResponsePtrOutput {
	return o
}

func (o LogSchedulePolicyResponsePtrOutput) ToLogSchedulePolicyResponsePtrOutputWithContext(ctx context.Context) LogSchedulePolicyResponsePtrOutput {
	return o
}

func (o LogSchedulePolicyResponsePtrOutput) Elem() LogSchedulePolicyResponseOutput {
	return o.ApplyT(func(v *LogSchedulePolicyResponse) LogSchedulePolicyResponse {
		if v != nil {
			return *v
		}
		var ret LogSchedulePolicyResponse
		return ret
	}).(LogSchedulePolicyResponseOutput)
}

// Frequency of the log schedule operation of this policy in minutes.
func (o LogSchedulePolicyResponsePtrOutput) ScheduleFrequencyInMins() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogSchedulePolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.ScheduleFrequencyInMins
	}).(pulumi.IntPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LogSchedulePolicy'.
func (o LogSchedulePolicyResponsePtrOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSchedulePolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SchedulePolicyType
	}).(pulumi.StringPtrOutput)
}

// Long term retention policy.
type LongTermRetentionPolicy struct {
	// Daily retention schedule of the protection policy.
	DailySchedule *DailyRetentionSchedule `pulumi:"dailySchedule"`
	// Monthly retention schedule of the protection policy.
	MonthlySchedule *MonthlyRetentionSchedule `pulumi:"monthlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermRetentionPolicy'.
	RetentionPolicyType string `pulumi:"retentionPolicyType"`
	// Weekly retention schedule of the protection policy.
	WeeklySchedule *WeeklyRetentionSchedule `pulumi:"weeklySchedule"`
	// Yearly retention schedule of the protection policy.
	YearlySchedule *YearlyRetentionSchedule `pulumi:"yearlySchedule"`
}

// LongTermRetentionPolicyInput is an input type that accepts LongTermRetentionPolicyArgs and LongTermRetentionPolicyOutput values.
// You can construct a concrete instance of `LongTermRetentionPolicyInput` via:
//
//	LongTermRetentionPolicyArgs{...}
type LongTermRetentionPolicyInput interface {
	pulumi.Input

	ToLongTermRetentionPolicyOutput() LongTermRetentionPolicyOutput
	ToLongTermRetentionPolicyOutputWithContext(context.Context) LongTermRetentionPolicyOutput
}

// Long term retention policy.
type LongTermRetentionPolicyArgs struct {
	// Daily retention schedule of the protection policy.
	DailySchedule DailyRetentionSchedulePtrInput `pulumi:"dailySchedule"`
	// Monthly retention schedule of the protection policy.
	MonthlySchedule MonthlyRetentionSchedulePtrInput `pulumi:"monthlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermRetentionPolicy'.
	RetentionPolicyType pulumi.StringInput `pulumi:"retentionPolicyType"`
	// Weekly retention schedule of the protection policy.
	WeeklySchedule WeeklyRetentionSchedulePtrInput `pulumi:"weeklySchedule"`
	// Yearly retention schedule of the protection policy.
	YearlySchedule YearlyRetentionSchedulePtrInput `pulumi:"yearlySchedule"`
}

func (LongTermRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LongTermRetentionPolicy)(nil)).Elem()
}

func (i LongTermRetentionPolicyArgs) ToLongTermRetentionPolicyOutput() LongTermRetentionPolicyOutput {
	return i.ToLongTermRetentionPolicyOutputWithContext(context.Background())
}

func (i LongTermRetentionPolicyArgs) ToLongTermRetentionPolicyOutputWithContext(ctx context.Context) LongTermRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LongTermRetentionPolicyOutput)
}

func (i LongTermRetentionPolicyArgs) ToLongTermRetentionPolicyPtrOutput() LongTermRetentionPolicyPtrOutput {
	return i.ToLongTermRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i LongTermRetentionPolicyArgs) ToLongTermRetentionPolicyPtrOutputWithContext(ctx context.Context) LongTermRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LongTermRetentionPolicyOutput).ToLongTermRetentionPolicyPtrOutputWithContext(ctx)
}

// LongTermRetentionPolicyPtrInput is an input type that accepts LongTermRetentionPolicyArgs, LongTermRetentionPolicyPtr and LongTermRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `LongTermRetentionPolicyPtrInput` via:
//
//	        LongTermRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type LongTermRetentionPolicyPtrInput interface {
	pulumi.Input

	ToLongTermRetentionPolicyPtrOutput() LongTermRetentionPolicyPtrOutput
	ToLongTermRetentionPolicyPtrOutputWithContext(context.Context) LongTermRetentionPolicyPtrOutput
}

type longTermRetentionPolicyPtrType LongTermRetentionPolicyArgs

func LongTermRetentionPolicyPtr(v *LongTermRetentionPolicyArgs) LongTermRetentionPolicyPtrInput {
	return (*longTermRetentionPolicyPtrType)(v)
}

func (*longTermRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LongTermRetentionPolicy)(nil)).Elem()
}

func (i *longTermRetentionPolicyPtrType) ToLongTermRetentionPolicyPtrOutput() LongTermRetentionPolicyPtrOutput {
	return i.ToLongTermRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *longTermRetentionPolicyPtrType) ToLongTermRetentionPolicyPtrOutputWithContext(ctx context.Context) LongTermRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LongTermRetentionPolicyPtrOutput)
}

// Long term retention policy.
type LongTermRetentionPolicyOutput struct{ *pulumi.OutputState }

func (LongTermRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LongTermRetentionPolicy)(nil)).Elem()
}

func (o LongTermRetentionPolicyOutput) ToLongTermRetentionPolicyOutput() LongTermRetentionPolicyOutput {
	return o
}

func (o LongTermRetentionPolicyOutput) ToLongTermRetentionPolicyOutputWithContext(ctx context.Context) LongTermRetentionPolicyOutput {
	return o
}

func (o LongTermRetentionPolicyOutput) ToLongTermRetentionPolicyPtrOutput() LongTermRetentionPolicyPtrOutput {
	return o.ToLongTermRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o LongTermRetentionPolicyOutput) ToLongTermRetentionPolicyPtrOutputWithContext(ctx context.Context) LongTermRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LongTermRetentionPolicy) *LongTermRetentionPolicy {
		return &v
	}).(LongTermRetentionPolicyPtrOutput)
}

// Daily retention schedule of the protection policy.
func (o LongTermRetentionPolicyOutput) DailySchedule() DailyRetentionSchedulePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicy) *DailyRetentionSchedule { return v.DailySchedule }).(DailyRetentionSchedulePtrOutput)
}

// Monthly retention schedule of the protection policy.
func (o LongTermRetentionPolicyOutput) MonthlySchedule() MonthlyRetentionSchedulePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicy) *MonthlyRetentionSchedule { return v.MonthlySchedule }).(MonthlyRetentionSchedulePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LongTermRetentionPolicy'.
func (o LongTermRetentionPolicyOutput) RetentionPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v LongTermRetentionPolicy) string { return v.RetentionPolicyType }).(pulumi.StringOutput)
}

// Weekly retention schedule of the protection policy.
func (o LongTermRetentionPolicyOutput) WeeklySchedule() WeeklyRetentionSchedulePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicy) *WeeklyRetentionSchedule { return v.WeeklySchedule }).(WeeklyRetentionSchedulePtrOutput)
}

// Yearly retention schedule of the protection policy.
func (o LongTermRetentionPolicyOutput) YearlySchedule() YearlyRetentionSchedulePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicy) *YearlyRetentionSchedule { return v.YearlySchedule }).(YearlyRetentionSchedulePtrOutput)
}

type LongTermRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (LongTermRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LongTermRetentionPolicy)(nil)).Elem()
}

func (o LongTermRetentionPolicyPtrOutput) ToLongTermRetentionPolicyPtrOutput() LongTermRetentionPolicyPtrOutput {
	return o
}

func (o LongTermRetentionPolicyPtrOutput) ToLongTermRetentionPolicyPtrOutputWithContext(ctx context.Context) LongTermRetentionPolicyPtrOutput {
	return o
}

func (o LongTermRetentionPolicyPtrOutput) Elem() LongTermRetentionPolicyOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicy) LongTermRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret LongTermRetentionPolicy
		return ret
	}).(LongTermRetentionPolicyOutput)
}

// Daily retention schedule of the protection policy.
func (o LongTermRetentionPolicyPtrOutput) DailySchedule() DailyRetentionSchedulePtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicy) *DailyRetentionSchedule {
		if v == nil {
			return nil
		}
		return v.DailySchedule
	}).(DailyRetentionSchedulePtrOutput)
}

// Monthly retention schedule of the protection policy.
func (o LongTermRetentionPolicyPtrOutput) MonthlySchedule() MonthlyRetentionSchedulePtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicy) *MonthlyRetentionSchedule {
		if v == nil {
			return nil
		}
		return v.MonthlySchedule
	}).(MonthlyRetentionSchedulePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LongTermRetentionPolicy'.
func (o LongTermRetentionPolicyPtrOutput) RetentionPolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionPolicyType
	}).(pulumi.StringPtrOutput)
}

// Weekly retention schedule of the protection policy.
func (o LongTermRetentionPolicyPtrOutput) WeeklySchedule() WeeklyRetentionSchedulePtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicy) *WeeklyRetentionSchedule {
		if v == nil {
			return nil
		}
		return v.WeeklySchedule
	}).(WeeklyRetentionSchedulePtrOutput)
}

// Yearly retention schedule of the protection policy.
func (o LongTermRetentionPolicyPtrOutput) YearlySchedule() YearlyRetentionSchedulePtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicy) *YearlyRetentionSchedule {
		if v == nil {
			return nil
		}
		return v.YearlySchedule
	}).(YearlyRetentionSchedulePtrOutput)
}

// Long term retention policy.
type LongTermRetentionPolicyResponse struct {
	// Daily retention schedule of the protection policy.
	DailySchedule *DailyRetentionScheduleResponse `pulumi:"dailySchedule"`
	// Monthly retention schedule of the protection policy.
	MonthlySchedule *MonthlyRetentionScheduleResponse `pulumi:"monthlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermRetentionPolicy'.
	RetentionPolicyType string `pulumi:"retentionPolicyType"`
	// Weekly retention schedule of the protection policy.
	WeeklySchedule *WeeklyRetentionScheduleResponse `pulumi:"weeklySchedule"`
	// Yearly retention schedule of the protection policy.
	YearlySchedule *YearlyRetentionScheduleResponse `pulumi:"yearlySchedule"`
}

// Long term retention policy.
type LongTermRetentionPolicyResponseOutput struct{ *pulumi.OutputState }

func (LongTermRetentionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LongTermRetentionPolicyResponse)(nil)).Elem()
}

func (o LongTermRetentionPolicyResponseOutput) ToLongTermRetentionPolicyResponseOutput() LongTermRetentionPolicyResponseOutput {
	return o
}

func (o LongTermRetentionPolicyResponseOutput) ToLongTermRetentionPolicyResponseOutputWithContext(ctx context.Context) LongTermRetentionPolicyResponseOutput {
	return o
}

// Daily retention schedule of the protection policy.
func (o LongTermRetentionPolicyResponseOutput) DailySchedule() DailyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicyResponse) *DailyRetentionScheduleResponse { return v.DailySchedule }).(DailyRetentionScheduleResponsePtrOutput)
}

// Monthly retention schedule of the protection policy.
func (o LongTermRetentionPolicyResponseOutput) MonthlySchedule() MonthlyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicyResponse) *MonthlyRetentionScheduleResponse { return v.MonthlySchedule }).(MonthlyRetentionScheduleResponsePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LongTermRetentionPolicy'.
func (o LongTermRetentionPolicyResponseOutput) RetentionPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v LongTermRetentionPolicyResponse) string { return v.RetentionPolicyType }).(pulumi.StringOutput)
}

// Weekly retention schedule of the protection policy.
func (o LongTermRetentionPolicyResponseOutput) WeeklySchedule() WeeklyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicyResponse) *WeeklyRetentionScheduleResponse { return v.WeeklySchedule }).(WeeklyRetentionScheduleResponsePtrOutput)
}

// Yearly retention schedule of the protection policy.
func (o LongTermRetentionPolicyResponseOutput) YearlySchedule() YearlyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicyResponse) *YearlyRetentionScheduleResponse { return v.YearlySchedule }).(YearlyRetentionScheduleResponsePtrOutput)
}

type LongTermRetentionPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (LongTermRetentionPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LongTermRetentionPolicyResponse)(nil)).Elem()
}

func (o LongTermRetentionPolicyResponsePtrOutput) ToLongTermRetentionPolicyResponsePtrOutput() LongTermRetentionPolicyResponsePtrOutput {
	return o
}

func (o LongTermRetentionPolicyResponsePtrOutput) ToLongTermRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) LongTermRetentionPolicyResponsePtrOutput {
	return o
}

func (o LongTermRetentionPolicyResponsePtrOutput) Elem() LongTermRetentionPolicyResponseOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicyResponse) LongTermRetentionPolicyResponse {
		if v != nil {
			return *v
		}
		var ret LongTermRetentionPolicyResponse
		return ret
	}).(LongTermRetentionPolicyResponseOutput)
}

// Daily retention schedule of the protection policy.
func (o LongTermRetentionPolicyResponsePtrOutput) DailySchedule() DailyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicyResponse) *DailyRetentionScheduleResponse {
		if v == nil {
			return nil
		}
		return v.DailySchedule
	}).(DailyRetentionScheduleResponsePtrOutput)
}

// Monthly retention schedule of the protection policy.
func (o LongTermRetentionPolicyResponsePtrOutput) MonthlySchedule() MonthlyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicyResponse) *MonthlyRetentionScheduleResponse {
		if v == nil {
			return nil
		}
		return v.MonthlySchedule
	}).(MonthlyRetentionScheduleResponsePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LongTermRetentionPolicy'.
func (o LongTermRetentionPolicyResponsePtrOutput) RetentionPolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionPolicyType
	}).(pulumi.StringPtrOutput)
}

// Weekly retention schedule of the protection policy.
func (o LongTermRetentionPolicyResponsePtrOutput) WeeklySchedule() WeeklyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicyResponse) *WeeklyRetentionScheduleResponse {
		if v == nil {
			return nil
		}
		return v.WeeklySchedule
	}).(WeeklyRetentionScheduleResponsePtrOutput)
}

// Yearly retention schedule of the protection policy.
func (o LongTermRetentionPolicyResponsePtrOutput) YearlySchedule() YearlyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicyResponse) *YearlyRetentionScheduleResponse {
		if v == nil {
			return nil
		}
		return v.YearlySchedule
	}).(YearlyRetentionScheduleResponsePtrOutput)
}

// Long term policy schedule.
type LongTermSchedulePolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
}

// LongTermSchedulePolicyInput is an input type that accepts LongTermSchedulePolicyArgs and LongTermSchedulePolicyOutput values.
// You can construct a concrete instance of `LongTermSchedulePolicyInput` via:
//
//	LongTermSchedulePolicyArgs{...}
type LongTermSchedulePolicyInput interface {
	pulumi.Input

	ToLongTermSchedulePolicyOutput() LongTermSchedulePolicyOutput
	ToLongTermSchedulePolicyOutputWithContext(context.Context) LongTermSchedulePolicyOutput
}

// Long term policy schedule.
type LongTermSchedulePolicyArgs struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermSchedulePolicy'.
	SchedulePolicyType pulumi.StringInput `pulumi:"schedulePolicyType"`
}

func (LongTermSchedulePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LongTermSchedulePolicy)(nil)).Elem()
}

func (i LongTermSchedulePolicyArgs) ToLongTermSchedulePolicyOutput() LongTermSchedulePolicyOutput {
	return i.ToLongTermSchedulePolicyOutputWithContext(context.Background())
}

func (i LongTermSchedulePolicyArgs) ToLongTermSchedulePolicyOutputWithContext(ctx context.Context) LongTermSchedulePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LongTermSchedulePolicyOutput)
}

func (i LongTermSchedulePolicyArgs) ToLongTermSchedulePolicyPtrOutput() LongTermSchedulePolicyPtrOutput {
	return i.ToLongTermSchedulePolicyPtrOutputWithContext(context.Background())
}

func (i LongTermSchedulePolicyArgs) ToLongTermSchedulePolicyPtrOutputWithContext(ctx context.Context) LongTermSchedulePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LongTermSchedulePolicyOutput).ToLongTermSchedulePolicyPtrOutputWithContext(ctx)
}

// LongTermSchedulePolicyPtrInput is an input type that accepts LongTermSchedulePolicyArgs, LongTermSchedulePolicyPtr and LongTermSchedulePolicyPtrOutput values.
// You can construct a concrete instance of `LongTermSchedulePolicyPtrInput` via:
//
//	        LongTermSchedulePolicyArgs{...}
//
//	or:
//
//	        nil
type LongTermSchedulePolicyPtrInput interface {
	pulumi.Input

	ToLongTermSchedulePolicyPtrOutput() LongTermSchedulePolicyPtrOutput
	ToLongTermSchedulePolicyPtrOutputWithContext(context.Context) LongTermSchedulePolicyPtrOutput
}

type longTermSchedulePolicyPtrType LongTermSchedulePolicyArgs

func LongTermSchedulePolicyPtr(v *LongTermSchedulePolicyArgs) LongTermSchedulePolicyPtrInput {
	return (*longTermSchedulePolicyPtrType)(v)
}

func (*longTermSchedulePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LongTermSchedulePolicy)(nil)).Elem()
}

func (i *longTermSchedulePolicyPtrType) ToLongTermSchedulePolicyPtrOutput() LongTermSchedulePolicyPtrOutput {
	return i.ToLongTermSchedulePolicyPtrOutputWithContext(context.Background())
}

func (i *longTermSchedulePolicyPtrType) ToLongTermSchedulePolicyPtrOutputWithContext(ctx context.Context) LongTermSchedulePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LongTermSchedulePolicyPtrOutput)
}

// Long term policy schedule.
type LongTermSchedulePolicyOutput struct{ *pulumi.OutputState }

func (LongTermSchedulePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LongTermSchedulePolicy)(nil)).Elem()
}

func (o LongTermSchedulePolicyOutput) ToLongTermSchedulePolicyOutput() LongTermSchedulePolicyOutput {
	return o
}

func (o LongTermSchedulePolicyOutput) ToLongTermSchedulePolicyOutputWithContext(ctx context.Context) LongTermSchedulePolicyOutput {
	return o
}

func (o LongTermSchedulePolicyOutput) ToLongTermSchedulePolicyPtrOutput() LongTermSchedulePolicyPtrOutput {
	return o.ToLongTermSchedulePolicyPtrOutputWithContext(context.Background())
}

func (o LongTermSchedulePolicyOutput) ToLongTermSchedulePolicyPtrOutputWithContext(ctx context.Context) LongTermSchedulePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LongTermSchedulePolicy) *LongTermSchedulePolicy {
		return &v
	}).(LongTermSchedulePolicyPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LongTermSchedulePolicy'.
func (o LongTermSchedulePolicyOutput) SchedulePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v LongTermSchedulePolicy) string { return v.SchedulePolicyType }).(pulumi.StringOutput)
}

type LongTermSchedulePolicyPtrOutput struct{ *pulumi.OutputState }

func (LongTermSchedulePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LongTermSchedulePolicy)(nil)).Elem()
}

func (o LongTermSchedulePolicyPtrOutput) ToLongTermSchedulePolicyPtrOutput() LongTermSchedulePolicyPtrOutput {
	return o
}

func (o LongTermSchedulePolicyPtrOutput) ToLongTermSchedulePolicyPtrOutputWithContext(ctx context.Context) LongTermSchedulePolicyPtrOutput {
	return o
}

func (o LongTermSchedulePolicyPtrOutput) Elem() LongTermSchedulePolicyOutput {
	return o.ApplyT(func(v *LongTermSchedulePolicy) LongTermSchedulePolicy {
		if v != nil {
			return *v
		}
		var ret LongTermSchedulePolicy
		return ret
	}).(LongTermSchedulePolicyOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LongTermSchedulePolicy'.
func (o LongTermSchedulePolicyPtrOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LongTermSchedulePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.SchedulePolicyType
	}).(pulumi.StringPtrOutput)
}

// Long term policy schedule.
type LongTermSchedulePolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
}

// Long term policy schedule.
type LongTermSchedulePolicyResponseOutput struct{ *pulumi.OutputState }

func (LongTermSchedulePolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LongTermSchedulePolicyResponse)(nil)).Elem()
}

func (o LongTermSchedulePolicyResponseOutput) ToLongTermSchedulePolicyResponseOutput() LongTermSchedulePolicyResponseOutput {
	return o
}

func (o LongTermSchedulePolicyResponseOutput) ToLongTermSchedulePolicyResponseOutputWithContext(ctx context.Context) LongTermSchedulePolicyResponseOutput {
	return o
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LongTermSchedulePolicy'.
func (o LongTermSchedulePolicyResponseOutput) SchedulePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v LongTermSchedulePolicyResponse) string { return v.SchedulePolicyType }).(pulumi.StringOutput)
}

type LongTermSchedulePolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (LongTermSchedulePolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LongTermSchedulePolicyResponse)(nil)).Elem()
}

func (o LongTermSchedulePolicyResponsePtrOutput) ToLongTermSchedulePolicyResponsePtrOutput() LongTermSchedulePolicyResponsePtrOutput {
	return o
}

func (o LongTermSchedulePolicyResponsePtrOutput) ToLongTermSchedulePolicyResponsePtrOutputWithContext(ctx context.Context) LongTermSchedulePolicyResponsePtrOutput {
	return o
}

func (o LongTermSchedulePolicyResponsePtrOutput) Elem() LongTermSchedulePolicyResponseOutput {
	return o.ApplyT(func(v *LongTermSchedulePolicyResponse) LongTermSchedulePolicyResponse {
		if v != nil {
			return *v
		}
		var ret LongTermSchedulePolicyResponse
		return ret
	}).(LongTermSchedulePolicyResponseOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LongTermSchedulePolicy'.
func (o LongTermSchedulePolicyResponsePtrOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LongTermSchedulePolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SchedulePolicyType
	}).(pulumi.StringPtrOutput)
}

// MAB workload-specific Health Details.
type MABContainerHealthDetails struct {
	// Health Code
	Code *int `pulumi:"code"`
	// Health Message
	Message *string `pulumi:"message"`
	// Health Recommended Actions
	Recommendations []string `pulumi:"recommendations"`
	// Health Title
	Title *string `pulumi:"title"`
}

// MABContainerHealthDetailsInput is an input type that accepts MABContainerHealthDetailsArgs and MABContainerHealthDetailsOutput values.
// You can construct a concrete instance of `MABContainerHealthDetailsInput` via:
//
//	MABContainerHealthDetailsArgs{...}
type MABContainerHealthDetailsInput interface {
	pulumi.Input

	ToMABContainerHealthDetailsOutput() MABContainerHealthDetailsOutput
	ToMABContainerHealthDetailsOutputWithContext(context.Context) MABContainerHealthDetailsOutput
}

// MAB workload-specific Health Details.
type MABContainerHealthDetailsArgs struct {
	// Health Code
	Code pulumi.IntPtrInput `pulumi:"code"`
	// Health Message
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Health Recommended Actions
	Recommendations pulumi.StringArrayInput `pulumi:"recommendations"`
	// Health Title
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (MABContainerHealthDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MABContainerHealthDetails)(nil)).Elem()
}

func (i MABContainerHealthDetailsArgs) ToMABContainerHealthDetailsOutput() MABContainerHealthDetailsOutput {
	return i.ToMABContainerHealthDetailsOutputWithContext(context.Background())
}

func (i MABContainerHealthDetailsArgs) ToMABContainerHealthDetailsOutputWithContext(ctx context.Context) MABContainerHealthDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MABContainerHealthDetailsOutput)
}

// MABContainerHealthDetailsArrayInput is an input type that accepts MABContainerHealthDetailsArray and MABContainerHealthDetailsArrayOutput values.
// You can construct a concrete instance of `MABContainerHealthDetailsArrayInput` via:
//
//	MABContainerHealthDetailsArray{ MABContainerHealthDetailsArgs{...} }
type MABContainerHealthDetailsArrayInput interface {
	pulumi.Input

	ToMABContainerHealthDetailsArrayOutput() MABContainerHealthDetailsArrayOutput
	ToMABContainerHealthDetailsArrayOutputWithContext(context.Context) MABContainerHealthDetailsArrayOutput
}

type MABContainerHealthDetailsArray []MABContainerHealthDetailsInput

func (MABContainerHealthDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MABContainerHealthDetails)(nil)).Elem()
}

func (i MABContainerHealthDetailsArray) ToMABContainerHealthDetailsArrayOutput() MABContainerHealthDetailsArrayOutput {
	return i.ToMABContainerHealthDetailsArrayOutputWithContext(context.Background())
}

func (i MABContainerHealthDetailsArray) ToMABContainerHealthDetailsArrayOutputWithContext(ctx context.Context) MABContainerHealthDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MABContainerHealthDetailsArrayOutput)
}

// MAB workload-specific Health Details.
type MABContainerHealthDetailsOutput struct{ *pulumi.OutputState }

func (MABContainerHealthDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MABContainerHealthDetails)(nil)).Elem()
}

func (o MABContainerHealthDetailsOutput) ToMABContainerHealthDetailsOutput() MABContainerHealthDetailsOutput {
	return o
}

func (o MABContainerHealthDetailsOutput) ToMABContainerHealthDetailsOutputWithContext(ctx context.Context) MABContainerHealthDetailsOutput {
	return o
}

// Health Code
func (o MABContainerHealthDetailsOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MABContainerHealthDetails) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// Health Message
func (o MABContainerHealthDetailsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MABContainerHealthDetails) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Health Recommended Actions
func (o MABContainerHealthDetailsOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MABContainerHealthDetails) []string { return v.Recommendations }).(pulumi.StringArrayOutput)
}

// Health Title
func (o MABContainerHealthDetailsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MABContainerHealthDetails) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type MABContainerHealthDetailsArrayOutput struct{ *pulumi.OutputState }

func (MABContainerHealthDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MABContainerHealthDetails)(nil)).Elem()
}

func (o MABContainerHealthDetailsArrayOutput) ToMABContainerHealthDetailsArrayOutput() MABContainerHealthDetailsArrayOutput {
	return o
}

func (o MABContainerHealthDetailsArrayOutput) ToMABContainerHealthDetailsArrayOutputWithContext(ctx context.Context) MABContainerHealthDetailsArrayOutput {
	return o
}

func (o MABContainerHealthDetailsArrayOutput) Index(i pulumi.IntInput) MABContainerHealthDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MABContainerHealthDetails {
		return vs[0].([]MABContainerHealthDetails)[vs[1].(int)]
	}).(MABContainerHealthDetailsOutput)
}

// MAB workload-specific Health Details.
type MABContainerHealthDetailsResponse struct {
	// Health Code
	Code *int `pulumi:"code"`
	// Health Message
	Message *string `pulumi:"message"`
	// Health Recommended Actions
	Recommendations []string `pulumi:"recommendations"`
	// Health Title
	Title *string `pulumi:"title"`
}

// MAB workload-specific Health Details.
type MABContainerHealthDetailsResponseOutput struct{ *pulumi.OutputState }

func (MABContainerHealthDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MABContainerHealthDetailsResponse)(nil)).Elem()
}

func (o MABContainerHealthDetailsResponseOutput) ToMABContainerHealthDetailsResponseOutput() MABContainerHealthDetailsResponseOutput {
	return o
}

func (o MABContainerHealthDetailsResponseOutput) ToMABContainerHealthDetailsResponseOutputWithContext(ctx context.Context) MABContainerHealthDetailsResponseOutput {
	return o
}

// Health Code
func (o MABContainerHealthDetailsResponseOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MABContainerHealthDetailsResponse) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// Health Message
func (o MABContainerHealthDetailsResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MABContainerHealthDetailsResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Health Recommended Actions
func (o MABContainerHealthDetailsResponseOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MABContainerHealthDetailsResponse) []string { return v.Recommendations }).(pulumi.StringArrayOutput)
}

// Health Title
func (o MABContainerHealthDetailsResponseOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MABContainerHealthDetailsResponse) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type MABContainerHealthDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (MABContainerHealthDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MABContainerHealthDetailsResponse)(nil)).Elem()
}

func (o MABContainerHealthDetailsResponseArrayOutput) ToMABContainerHealthDetailsResponseArrayOutput() MABContainerHealthDetailsResponseArrayOutput {
	return o
}

func (o MABContainerHealthDetailsResponseArrayOutput) ToMABContainerHealthDetailsResponseArrayOutputWithContext(ctx context.Context) MABContainerHealthDetailsResponseArrayOutput {
	return o
}

func (o MABContainerHealthDetailsResponseArrayOutput) Index(i pulumi.IntInput) MABContainerHealthDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MABContainerHealthDetailsResponse {
		return vs[0].([]MABContainerHealthDetailsResponse)[vs[1].(int)]
	}).(MABContainerHealthDetailsResponseOutput)
}

// Container with items backed up using MAB backup engine.
type MabContainer struct {
	// Agent version of this container.
	AgentVersion *string `pulumi:"agentVersion"`
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Can the container be registered one more time.
	CanReRegister *bool `pulumi:"canReRegister"`
	// Health state of mab container.
	ContainerHealthState *string `pulumi:"containerHealthState"`
	// ContainerID represents the container.
	ContainerId *float64 `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Windows'.
	ContainerType string `pulumi:"containerType"`
	// Additional information for this container
	ExtendedInfo *MabContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Health details on this mab container.
	MabContainerHealthDetails []MABContainerHealthDetails `pulumi:"mabContainerHealthDetails"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of items backed up in this container.
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// MabContainerInput is an input type that accepts MabContainerArgs and MabContainerOutput values.
// You can construct a concrete instance of `MabContainerInput` via:
//
//	MabContainerArgs{...}
type MabContainerInput interface {
	pulumi.Input

	ToMabContainerOutput() MabContainerOutput
	ToMabContainerOutputWithContext(context.Context) MabContainerOutput
}

// Container with items backed up using MAB backup engine.
type MabContainerArgs struct {
	// Agent version of this container.
	AgentVersion pulumi.StringPtrInput `pulumi:"agentVersion"`
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Can the container be registered one more time.
	CanReRegister pulumi.BoolPtrInput `pulumi:"canReRegister"`
	// Health state of mab container.
	ContainerHealthState pulumi.StringPtrInput `pulumi:"containerHealthState"`
	// ContainerID represents the container.
	ContainerId pulumi.Float64PtrInput `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Windows'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Additional information for this container
	ExtendedInfo MabContainerExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Health details on this mab container.
	MabContainerHealthDetails MABContainerHealthDetailsArrayInput `pulumi:"mabContainerHealthDetails"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Number of items backed up in this container.
	ProtectedItemCount pulumi.Float64PtrInput `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
}

func (MabContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MabContainer)(nil)).Elem()
}

func (i MabContainerArgs) ToMabContainerOutput() MabContainerOutput {
	return i.ToMabContainerOutputWithContext(context.Background())
}

func (i MabContainerArgs) ToMabContainerOutputWithContext(ctx context.Context) MabContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabContainerOutput)
}

func (i MabContainerArgs) ToMabContainerPtrOutput() MabContainerPtrOutput {
	return i.ToMabContainerPtrOutputWithContext(context.Background())
}

func (i MabContainerArgs) ToMabContainerPtrOutputWithContext(ctx context.Context) MabContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabContainerOutput).ToMabContainerPtrOutputWithContext(ctx)
}

// MabContainerPtrInput is an input type that accepts MabContainerArgs, MabContainerPtr and MabContainerPtrOutput values.
// You can construct a concrete instance of `MabContainerPtrInput` via:
//
//	        MabContainerArgs{...}
//
//	or:
//
//	        nil
type MabContainerPtrInput interface {
	pulumi.Input

	ToMabContainerPtrOutput() MabContainerPtrOutput
	ToMabContainerPtrOutputWithContext(context.Context) MabContainerPtrOutput
}

type mabContainerPtrType MabContainerArgs

func MabContainerPtr(v *MabContainerArgs) MabContainerPtrInput {
	return (*mabContainerPtrType)(v)
}

func (*mabContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MabContainer)(nil)).Elem()
}

func (i *mabContainerPtrType) ToMabContainerPtrOutput() MabContainerPtrOutput {
	return i.ToMabContainerPtrOutputWithContext(context.Background())
}

func (i *mabContainerPtrType) ToMabContainerPtrOutputWithContext(ctx context.Context) MabContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabContainerPtrOutput)
}

// Container with items backed up using MAB backup engine.
type MabContainerOutput struct{ *pulumi.OutputState }

func (MabContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabContainer)(nil)).Elem()
}

func (o MabContainerOutput) ToMabContainerOutput() MabContainerOutput {
	return o
}

func (o MabContainerOutput) ToMabContainerOutputWithContext(ctx context.Context) MabContainerOutput {
	return o
}

func (o MabContainerOutput) ToMabContainerPtrOutput() MabContainerPtrOutput {
	return o.ToMabContainerPtrOutputWithContext(context.Background())
}

func (o MabContainerOutput) ToMabContainerPtrOutputWithContext(ctx context.Context) MabContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MabContainer) *MabContainer {
		return &v
	}).(MabContainerPtrOutput)
}

// Agent version of this container.
func (o MabContainerOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainer) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// Type of backup management for the container.
func (o MabContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Can the container be registered one more time.
func (o MabContainerOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabContainer) *bool { return v.CanReRegister }).(pulumi.BoolPtrOutput)
}

// Health state of mab container.
func (o MabContainerOutput) ContainerHealthState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainer) *string { return v.ContainerHealthState }).(pulumi.StringPtrOutput)
}

// ContainerID represents the container.
func (o MabContainerOutput) ContainerId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MabContainer) *float64 { return v.ContainerId }).(pulumi.Float64PtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Windows'.
func (o MabContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v MabContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Additional information for this container
func (o MabContainerOutput) ExtendedInfo() MabContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v MabContainer) *MabContainerExtendedInfo { return v.ExtendedInfo }).(MabContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o MabContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o MabContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Health details on this mab container.
func (o MabContainerOutput) MabContainerHealthDetails() MABContainerHealthDetailsArrayOutput {
	return o.ApplyT(func(v MabContainer) []MABContainerHealthDetails { return v.MabContainerHealthDetails }).(MABContainerHealthDetailsArrayOutput)
}

// Type of the protectable object associated with this container
func (o MabContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Number of items backed up in this container.
func (o MabContainerOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MabContainer) *float64 { return v.ProtectedItemCount }).(pulumi.Float64PtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o MabContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

type MabContainerPtrOutput struct{ *pulumi.OutputState }

func (MabContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MabContainer)(nil)).Elem()
}

func (o MabContainerPtrOutput) ToMabContainerPtrOutput() MabContainerPtrOutput {
	return o
}

func (o MabContainerPtrOutput) ToMabContainerPtrOutputWithContext(ctx context.Context) MabContainerPtrOutput {
	return o
}

func (o MabContainerPtrOutput) Elem() MabContainerOutput {
	return o.ApplyT(func(v *MabContainer) MabContainer {
		if v != nil {
			return *v
		}
		var ret MabContainer
		return ret
	}).(MabContainerOutput)
}

// Agent version of this container.
func (o MabContainerPtrOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainer) *string {
		if v == nil {
			return nil
		}
		return v.AgentVersion
	}).(pulumi.StringPtrOutput)
}

// Type of backup management for the container.
func (o MabContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Can the container be registered one more time.
func (o MabContainerPtrOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MabContainer) *bool {
		if v == nil {
			return nil
		}
		return v.CanReRegister
	}).(pulumi.BoolPtrOutput)
}

// Health state of mab container.
func (o MabContainerPtrOutput) ContainerHealthState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainer) *string {
		if v == nil {
			return nil
		}
		return v.ContainerHealthState
	}).(pulumi.StringPtrOutput)
}

// ContainerID represents the container.
func (o MabContainerPtrOutput) ContainerId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MabContainer) *float64 {
		if v == nil {
			return nil
		}
		return v.ContainerId
	}).(pulumi.Float64PtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Windows'.
func (o MabContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Additional information for this container
func (o MabContainerPtrOutput) ExtendedInfo() MabContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v *MabContainer) *MabContainerExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(MabContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o MabContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o MabContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Health details on this mab container.
func (o MabContainerPtrOutput) MabContainerHealthDetails() MABContainerHealthDetailsArrayOutput {
	return o.ApplyT(func(v *MabContainer) []MABContainerHealthDetails {
		if v == nil {
			return nil
		}
		return v.MabContainerHealthDetails
	}).(MABContainerHealthDetailsArrayOutput)
}

// Type of the protectable object associated with this container
func (o MabContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Number of items backed up in this container.
func (o MabContainerPtrOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MabContainer) *float64 {
		if v == nil {
			return nil
		}
		return v.ProtectedItemCount
	}).(pulumi.Float64PtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o MabContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// Additional information of the container.
type MabContainerExtendedInfo struct {
	// Type of backup items associated with this container.
	BackupItemType *string `pulumi:"backupItemType"`
	// List of backup items associated with this container.
	BackupItems []string `pulumi:"backupItems"`
	// Latest backup status of this container.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Time stamp when this container was refreshed.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// Backup policy associated with this container.
	PolicyName *string `pulumi:"policyName"`
}

// MabContainerExtendedInfoInput is an input type that accepts MabContainerExtendedInfoArgs and MabContainerExtendedInfoOutput values.
// You can construct a concrete instance of `MabContainerExtendedInfoInput` via:
//
//	MabContainerExtendedInfoArgs{...}
type MabContainerExtendedInfoInput interface {
	pulumi.Input

	ToMabContainerExtendedInfoOutput() MabContainerExtendedInfoOutput
	ToMabContainerExtendedInfoOutputWithContext(context.Context) MabContainerExtendedInfoOutput
}

// Additional information of the container.
type MabContainerExtendedInfoArgs struct {
	// Type of backup items associated with this container.
	BackupItemType pulumi.StringPtrInput `pulumi:"backupItemType"`
	// List of backup items associated with this container.
	BackupItems pulumi.StringArrayInput `pulumi:"backupItems"`
	// Latest backup status of this container.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Time stamp when this container was refreshed.
	LastRefreshedAt pulumi.StringPtrInput `pulumi:"lastRefreshedAt"`
	// Backup policy associated with this container.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
}

func (MabContainerExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MabContainerExtendedInfo)(nil)).Elem()
}

func (i MabContainerExtendedInfoArgs) ToMabContainerExtendedInfoOutput() MabContainerExtendedInfoOutput {
	return i.ToMabContainerExtendedInfoOutputWithContext(context.Background())
}

func (i MabContainerExtendedInfoArgs) ToMabContainerExtendedInfoOutputWithContext(ctx context.Context) MabContainerExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabContainerExtendedInfoOutput)
}

func (i MabContainerExtendedInfoArgs) ToMabContainerExtendedInfoPtrOutput() MabContainerExtendedInfoPtrOutput {
	return i.ToMabContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i MabContainerExtendedInfoArgs) ToMabContainerExtendedInfoPtrOutputWithContext(ctx context.Context) MabContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabContainerExtendedInfoOutput).ToMabContainerExtendedInfoPtrOutputWithContext(ctx)
}

// MabContainerExtendedInfoPtrInput is an input type that accepts MabContainerExtendedInfoArgs, MabContainerExtendedInfoPtr and MabContainerExtendedInfoPtrOutput values.
// You can construct a concrete instance of `MabContainerExtendedInfoPtrInput` via:
//
//	        MabContainerExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type MabContainerExtendedInfoPtrInput interface {
	pulumi.Input

	ToMabContainerExtendedInfoPtrOutput() MabContainerExtendedInfoPtrOutput
	ToMabContainerExtendedInfoPtrOutputWithContext(context.Context) MabContainerExtendedInfoPtrOutput
}

type mabContainerExtendedInfoPtrType MabContainerExtendedInfoArgs

func MabContainerExtendedInfoPtr(v *MabContainerExtendedInfoArgs) MabContainerExtendedInfoPtrInput {
	return (*mabContainerExtendedInfoPtrType)(v)
}

func (*mabContainerExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MabContainerExtendedInfo)(nil)).Elem()
}

func (i *mabContainerExtendedInfoPtrType) ToMabContainerExtendedInfoPtrOutput() MabContainerExtendedInfoPtrOutput {
	return i.ToMabContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *mabContainerExtendedInfoPtrType) ToMabContainerExtendedInfoPtrOutputWithContext(ctx context.Context) MabContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabContainerExtendedInfoPtrOutput)
}

// Additional information of the container.
type MabContainerExtendedInfoOutput struct{ *pulumi.OutputState }

func (MabContainerExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabContainerExtendedInfo)(nil)).Elem()
}

func (o MabContainerExtendedInfoOutput) ToMabContainerExtendedInfoOutput() MabContainerExtendedInfoOutput {
	return o
}

func (o MabContainerExtendedInfoOutput) ToMabContainerExtendedInfoOutputWithContext(ctx context.Context) MabContainerExtendedInfoOutput {
	return o
}

func (o MabContainerExtendedInfoOutput) ToMabContainerExtendedInfoPtrOutput() MabContainerExtendedInfoPtrOutput {
	return o.ToMabContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (o MabContainerExtendedInfoOutput) ToMabContainerExtendedInfoPtrOutputWithContext(ctx context.Context) MabContainerExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MabContainerExtendedInfo) *MabContainerExtendedInfo {
		return &v
	}).(MabContainerExtendedInfoPtrOutput)
}

// Type of backup items associated with this container.
func (o MabContainerExtendedInfoOutput) BackupItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfo) *string { return v.BackupItemType }).(pulumi.StringPtrOutput)
}

// List of backup items associated with this container.
func (o MabContainerExtendedInfoOutput) BackupItems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MabContainerExtendedInfo) []string { return v.BackupItems }).(pulumi.StringArrayOutput)
}

// Latest backup status of this container.
func (o MabContainerExtendedInfoOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfo) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was refreshed.
func (o MabContainerExtendedInfoOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfo) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

// Backup policy associated with this container.
func (o MabContainerExtendedInfoOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfo) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

type MabContainerExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (MabContainerExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MabContainerExtendedInfo)(nil)).Elem()
}

func (o MabContainerExtendedInfoPtrOutput) ToMabContainerExtendedInfoPtrOutput() MabContainerExtendedInfoPtrOutput {
	return o
}

func (o MabContainerExtendedInfoPtrOutput) ToMabContainerExtendedInfoPtrOutputWithContext(ctx context.Context) MabContainerExtendedInfoPtrOutput {
	return o
}

func (o MabContainerExtendedInfoPtrOutput) Elem() MabContainerExtendedInfoOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfo) MabContainerExtendedInfo {
		if v != nil {
			return *v
		}
		var ret MabContainerExtendedInfo
		return ret
	}).(MabContainerExtendedInfoOutput)
}

// Type of backup items associated with this container.
func (o MabContainerExtendedInfoPtrOutput) BackupItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.BackupItemType
	}).(pulumi.StringPtrOutput)
}

// List of backup items associated with this container.
func (o MabContainerExtendedInfoPtrOutput) BackupItems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfo) []string {
		if v == nil {
			return nil
		}
		return v.BackupItems
	}).(pulumi.StringArrayOutput)
}

// Latest backup status of this container.
func (o MabContainerExtendedInfoPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Time stamp when this container was refreshed.
func (o MabContainerExtendedInfoPtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// Backup policy associated with this container.
func (o MabContainerExtendedInfoPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Additional information of the container.
type MabContainerExtendedInfoResponse struct {
	// Type of backup items associated with this container.
	BackupItemType *string `pulumi:"backupItemType"`
	// List of backup items associated with this container.
	BackupItems []string `pulumi:"backupItems"`
	// Latest backup status of this container.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Time stamp when this container was refreshed.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// Backup policy associated with this container.
	PolicyName *string `pulumi:"policyName"`
}

// Additional information of the container.
type MabContainerExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (MabContainerExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabContainerExtendedInfoResponse)(nil)).Elem()
}

func (o MabContainerExtendedInfoResponseOutput) ToMabContainerExtendedInfoResponseOutput() MabContainerExtendedInfoResponseOutput {
	return o
}

func (o MabContainerExtendedInfoResponseOutput) ToMabContainerExtendedInfoResponseOutputWithContext(ctx context.Context) MabContainerExtendedInfoResponseOutput {
	return o
}

// Type of backup items associated with this container.
func (o MabContainerExtendedInfoResponseOutput) BackupItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfoResponse) *string { return v.BackupItemType }).(pulumi.StringPtrOutput)
}

// List of backup items associated with this container.
func (o MabContainerExtendedInfoResponseOutput) BackupItems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MabContainerExtendedInfoResponse) []string { return v.BackupItems }).(pulumi.StringArrayOutput)
}

// Latest backup status of this container.
func (o MabContainerExtendedInfoResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfoResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was refreshed.
func (o MabContainerExtendedInfoResponseOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfoResponse) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

// Backup policy associated with this container.
func (o MabContainerExtendedInfoResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfoResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

type MabContainerExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (MabContainerExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MabContainerExtendedInfoResponse)(nil)).Elem()
}

func (o MabContainerExtendedInfoResponsePtrOutput) ToMabContainerExtendedInfoResponsePtrOutput() MabContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o MabContainerExtendedInfoResponsePtrOutput) ToMabContainerExtendedInfoResponsePtrOutputWithContext(ctx context.Context) MabContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o MabContainerExtendedInfoResponsePtrOutput) Elem() MabContainerExtendedInfoResponseOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) MabContainerExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret MabContainerExtendedInfoResponse
		return ret
	}).(MabContainerExtendedInfoResponseOutput)
}

// Type of backup items associated with this container.
func (o MabContainerExtendedInfoResponsePtrOutput) BackupItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.BackupItemType
	}).(pulumi.StringPtrOutput)
}

// List of backup items associated with this container.
func (o MabContainerExtendedInfoResponsePtrOutput) BackupItems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) []string {
		if v == nil {
			return nil
		}
		return v.BackupItems
	}).(pulumi.StringArrayOutput)
}

// Latest backup status of this container.
func (o MabContainerExtendedInfoResponsePtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Time stamp when this container was refreshed.
func (o MabContainerExtendedInfoResponsePtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// Backup policy associated with this container.
func (o MabContainerExtendedInfoResponsePtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Container with items backed up using MAB backup engine.
type MabContainerResponse struct {
	// Agent version of this container.
	AgentVersion *string `pulumi:"agentVersion"`
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Can the container be registered one more time.
	CanReRegister *bool `pulumi:"canReRegister"`
	// Health state of mab container.
	ContainerHealthState *string `pulumi:"containerHealthState"`
	// ContainerID represents the container.
	ContainerId *float64 `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Windows'.
	ContainerType string `pulumi:"containerType"`
	// Additional information for this container
	ExtendedInfo *MabContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Health details on this mab container.
	MabContainerHealthDetails []MABContainerHealthDetailsResponse `pulumi:"mabContainerHealthDetails"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of items backed up in this container.
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// Container with items backed up using MAB backup engine.
type MabContainerResponseOutput struct{ *pulumi.OutputState }

func (MabContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabContainerResponse)(nil)).Elem()
}

func (o MabContainerResponseOutput) ToMabContainerResponseOutput() MabContainerResponseOutput {
	return o
}

func (o MabContainerResponseOutput) ToMabContainerResponseOutputWithContext(ctx context.Context) MabContainerResponseOutput {
	return o
}

// Agent version of this container.
func (o MabContainerResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// Type of backup management for the container.
func (o MabContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Can the container be registered one more time.
func (o MabContainerResponseOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *bool { return v.CanReRegister }).(pulumi.BoolPtrOutput)
}

// Health state of mab container.
func (o MabContainerResponseOutput) ContainerHealthState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.ContainerHealthState }).(pulumi.StringPtrOutput)
}

// ContainerID represents the container.
func (o MabContainerResponseOutput) ContainerId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *float64 { return v.ContainerId }).(pulumi.Float64PtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Windows'.
func (o MabContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v MabContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Additional information for this container
func (o MabContainerResponseOutput) ExtendedInfo() MabContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *MabContainerExtendedInfoResponse { return v.ExtendedInfo }).(MabContainerExtendedInfoResponsePtrOutput)
}

// Friendly name of the container.
func (o MabContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o MabContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Health details on this mab container.
func (o MabContainerResponseOutput) MabContainerHealthDetails() MABContainerHealthDetailsResponseArrayOutput {
	return o.ApplyT(func(v MabContainerResponse) []MABContainerHealthDetailsResponse { return v.MabContainerHealthDetails }).(MABContainerHealthDetailsResponseArrayOutput)
}

// Type of the protectable object associated with this container
func (o MabContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Number of items backed up in this container.
func (o MabContainerResponseOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *float64 { return v.ProtectedItemCount }).(pulumi.Float64PtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o MabContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// MAB workload-specific backup item.
type MabFileFolderProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Name of the computer associated with this backup item.
	ComputerName *string `pulumi:"computerName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Sync time for deferred deletion in UTC
	DeferredDeleteSyncTimeInUTC *float64 `pulumi:"deferredDeleteSyncTimeInUTC"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo *MabFileFolderProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Status of last backup operation.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'MabFileFolderProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Protected, ProtectionStopped, IRPending or ProtectionError
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// MabFileFolderProtectedItemInput is an input type that accepts MabFileFolderProtectedItemArgs and MabFileFolderProtectedItemOutput values.
// You can construct a concrete instance of `MabFileFolderProtectedItemInput` via:
//
//	MabFileFolderProtectedItemArgs{...}
type MabFileFolderProtectedItemInput interface {
	pulumi.Input

	ToMabFileFolderProtectedItemOutput() MabFileFolderProtectedItemOutput
	ToMabFileFolderProtectedItemOutputWithContext(context.Context) MabFileFolderProtectedItemOutput
}

// MAB workload-specific backup item.
type MabFileFolderProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Name of the computer associated with this backup item.
	ComputerName pulumi.StringPtrInput `pulumi:"computerName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Sync time for deferred deletion in UTC
	DeferredDeleteSyncTimeInUTC pulumi.Float64PtrInput `pulumi:"deferredDeleteSyncTimeInUTC"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo MabFileFolderProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of this backup item.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Status of last backup operation.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'MabFileFolderProtectedItem'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Protected, ProtectionStopped, IRPending or ProtectionError
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (MabFileFolderProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MabFileFolderProtectedItem)(nil)).Elem()
}

func (i MabFileFolderProtectedItemArgs) ToMabFileFolderProtectedItemOutput() MabFileFolderProtectedItemOutput {
	return i.ToMabFileFolderProtectedItemOutputWithContext(context.Background())
}

func (i MabFileFolderProtectedItemArgs) ToMabFileFolderProtectedItemOutputWithContext(ctx context.Context) MabFileFolderProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabFileFolderProtectedItemOutput)
}

func (i MabFileFolderProtectedItemArgs) ToMabFileFolderProtectedItemPtrOutput() MabFileFolderProtectedItemPtrOutput {
	return i.ToMabFileFolderProtectedItemPtrOutputWithContext(context.Background())
}

func (i MabFileFolderProtectedItemArgs) ToMabFileFolderProtectedItemPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabFileFolderProtectedItemOutput).ToMabFileFolderProtectedItemPtrOutputWithContext(ctx)
}

// MabFileFolderProtectedItemPtrInput is an input type that accepts MabFileFolderProtectedItemArgs, MabFileFolderProtectedItemPtr and MabFileFolderProtectedItemPtrOutput values.
// You can construct a concrete instance of `MabFileFolderProtectedItemPtrInput` via:
//
//	        MabFileFolderProtectedItemArgs{...}
//
//	or:
//
//	        nil
type MabFileFolderProtectedItemPtrInput interface {
	pulumi.Input

	ToMabFileFolderProtectedItemPtrOutput() MabFileFolderProtectedItemPtrOutput
	ToMabFileFolderProtectedItemPtrOutputWithContext(context.Context) MabFileFolderProtectedItemPtrOutput
}

type mabFileFolderProtectedItemPtrType MabFileFolderProtectedItemArgs

func MabFileFolderProtectedItemPtr(v *MabFileFolderProtectedItemArgs) MabFileFolderProtectedItemPtrInput {
	return (*mabFileFolderProtectedItemPtrType)(v)
}

func (*mabFileFolderProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MabFileFolderProtectedItem)(nil)).Elem()
}

func (i *mabFileFolderProtectedItemPtrType) ToMabFileFolderProtectedItemPtrOutput() MabFileFolderProtectedItemPtrOutput {
	return i.ToMabFileFolderProtectedItemPtrOutputWithContext(context.Background())
}

func (i *mabFileFolderProtectedItemPtrType) ToMabFileFolderProtectedItemPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabFileFolderProtectedItemPtrOutput)
}

// MAB workload-specific backup item.
type MabFileFolderProtectedItemOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabFileFolderProtectedItem)(nil)).Elem()
}

func (o MabFileFolderProtectedItemOutput) ToMabFileFolderProtectedItemOutput() MabFileFolderProtectedItemOutput {
	return o
}

func (o MabFileFolderProtectedItemOutput) ToMabFileFolderProtectedItemOutputWithContext(ctx context.Context) MabFileFolderProtectedItemOutput {
	return o
}

func (o MabFileFolderProtectedItemOutput) ToMabFileFolderProtectedItemPtrOutput() MabFileFolderProtectedItemPtrOutput {
	return o.ToMabFileFolderProtectedItemPtrOutputWithContext(context.Background())
}

func (o MabFileFolderProtectedItemOutput) ToMabFileFolderProtectedItemPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MabFileFolderProtectedItem) *MabFileFolderProtectedItem {
		return &v
	}).(MabFileFolderProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o MabFileFolderProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Name of the computer associated with this backup item.
func (o MabFileFolderProtectedItemOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.ComputerName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o MabFileFolderProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o MabFileFolderProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Sync time for deferred deletion in UTC
func (o MabFileFolderProtectedItemOutput) DeferredDeleteSyncTimeInUTC() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *float64 { return v.DeferredDeleteSyncTimeInUTC }).(pulumi.Float64PtrOutput)
}

// Time for deferred deletion in UTC
func (o MabFileFolderProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o MabFileFolderProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information with this backup item.
func (o MabFileFolderProtectedItemOutput) ExtendedInfo() MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *MabFileFolderProtectedItemExtendedInfo { return v.ExtendedInfo }).(MabFileFolderProtectedItemExtendedInfoPtrOutput)
}

// Friendly name of this backup item.
func (o MabFileFolderProtectedItemOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o MabFileFolderProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o MabFileFolderProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o MabFileFolderProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o MabFileFolderProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Status of last backup operation.
func (o MabFileFolderProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o MabFileFolderProtectedItemOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o MabFileFolderProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o MabFileFolderProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o MabFileFolderProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'MabFileFolderProtectedItem'.
func (o MabFileFolderProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Protected, ProtectionStopped, IRPending or ProtectionError
func (o MabFileFolderProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o MabFileFolderProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o MabFileFolderProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o MabFileFolderProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type MabFileFolderProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MabFileFolderProtectedItem)(nil)).Elem()
}

func (o MabFileFolderProtectedItemPtrOutput) ToMabFileFolderProtectedItemPtrOutput() MabFileFolderProtectedItemPtrOutput {
	return o
}

func (o MabFileFolderProtectedItemPtrOutput) ToMabFileFolderProtectedItemPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemPtrOutput {
	return o
}

func (o MabFileFolderProtectedItemPtrOutput) Elem() MabFileFolderProtectedItemOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) MabFileFolderProtectedItem {
		if v != nil {
			return *v
		}
		var ret MabFileFolderProtectedItem
		return ret
	}).(MabFileFolderProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o MabFileFolderProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Name of the computer associated with this backup item.
func (o MabFileFolderProtectedItemPtrOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ComputerName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o MabFileFolderProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o MabFileFolderProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Sync time for deferred deletion in UTC
func (o MabFileFolderProtectedItemPtrOutput) DeferredDeleteSyncTimeInUTC() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *float64 {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteSyncTimeInUTC
	}).(pulumi.Float64PtrOutput)
}

// Time for deferred deletion in UTC
func (o MabFileFolderProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o MabFileFolderProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information with this backup item.
func (o MabFileFolderProtectedItemPtrOutput) ExtendedInfo() MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *MabFileFolderProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(MabFileFolderProtectedItemExtendedInfoPtrOutput)
}

// Friendly name of this backup item.
func (o MabFileFolderProtectedItemPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o MabFileFolderProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o MabFileFolderProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o MabFileFolderProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o MabFileFolderProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Status of last backup operation.
func (o MabFileFolderProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o MabFileFolderProtectedItemPtrOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o MabFileFolderProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o MabFileFolderProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o MabFileFolderProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'MabFileFolderProtectedItem'.
func (o MabFileFolderProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Protected, ProtectionStopped, IRPending or ProtectionError
func (o MabFileFolderProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o MabFileFolderProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o MabFileFolderProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o MabFileFolderProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Additional information on the backed up item.
type MabFileFolderProtectedItemExtendedInfo struct {
	// Last time when the agent data synced to service.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// The oldest backup copy available.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Number of backup copies associated with the backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// MabFileFolderProtectedItemExtendedInfoInput is an input type that accepts MabFileFolderProtectedItemExtendedInfoArgs and MabFileFolderProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `MabFileFolderProtectedItemExtendedInfoInput` via:
//
//	MabFileFolderProtectedItemExtendedInfoArgs{...}
type MabFileFolderProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToMabFileFolderProtectedItemExtendedInfoOutput() MabFileFolderProtectedItemExtendedInfoOutput
	ToMabFileFolderProtectedItemExtendedInfoOutputWithContext(context.Context) MabFileFolderProtectedItemExtendedInfoOutput
}

// Additional information on the backed up item.
type MabFileFolderProtectedItemExtendedInfoArgs struct {
	// Last time when the agent data synced to service.
	LastRefreshedAt pulumi.StringPtrInput `pulumi:"lastRefreshedAt"`
	// The oldest backup copy available.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// Number of backup copies associated with the backup item.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
}

func (MabFileFolderProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MabFileFolderProtectedItemExtendedInfo)(nil)).Elem()
}

func (i MabFileFolderProtectedItemExtendedInfoArgs) ToMabFileFolderProtectedItemExtendedInfoOutput() MabFileFolderProtectedItemExtendedInfoOutput {
	return i.ToMabFileFolderProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i MabFileFolderProtectedItemExtendedInfoArgs) ToMabFileFolderProtectedItemExtendedInfoOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabFileFolderProtectedItemExtendedInfoOutput)
}

func (i MabFileFolderProtectedItemExtendedInfoArgs) ToMabFileFolderProtectedItemExtendedInfoPtrOutput() MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return i.ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i MabFileFolderProtectedItemExtendedInfoArgs) ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabFileFolderProtectedItemExtendedInfoOutput).ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// MabFileFolderProtectedItemExtendedInfoPtrInput is an input type that accepts MabFileFolderProtectedItemExtendedInfoArgs, MabFileFolderProtectedItemExtendedInfoPtr and MabFileFolderProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `MabFileFolderProtectedItemExtendedInfoPtrInput` via:
//
//	        MabFileFolderProtectedItemExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type MabFileFolderProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToMabFileFolderProtectedItemExtendedInfoPtrOutput() MabFileFolderProtectedItemExtendedInfoPtrOutput
	ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(context.Context) MabFileFolderProtectedItemExtendedInfoPtrOutput
}

type mabFileFolderProtectedItemExtendedInfoPtrType MabFileFolderProtectedItemExtendedInfoArgs

func MabFileFolderProtectedItemExtendedInfoPtr(v *MabFileFolderProtectedItemExtendedInfoArgs) MabFileFolderProtectedItemExtendedInfoPtrInput {
	return (*mabFileFolderProtectedItemExtendedInfoPtrType)(v)
}

func (*mabFileFolderProtectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MabFileFolderProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *mabFileFolderProtectedItemExtendedInfoPtrType) ToMabFileFolderProtectedItemExtendedInfoPtrOutput() MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return i.ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *mabFileFolderProtectedItemExtendedInfoPtrType) ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabFileFolderProtectedItemExtendedInfoPtrOutput)
}

// Additional information on the backed up item.
type MabFileFolderProtectedItemExtendedInfoOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabFileFolderProtectedItemExtendedInfo)(nil)).Elem()
}

func (o MabFileFolderProtectedItemExtendedInfoOutput) ToMabFileFolderProtectedItemExtendedInfoOutput() MabFileFolderProtectedItemExtendedInfoOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoOutput) ToMabFileFolderProtectedItemExtendedInfoOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoOutput) ToMabFileFolderProtectedItemExtendedInfoPtrOutput() MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return o.ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (o MabFileFolderProtectedItemExtendedInfoOutput) ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MabFileFolderProtectedItemExtendedInfo) *MabFileFolderProtectedItemExtendedInfo {
		return &v
	}).(MabFileFolderProtectedItemExtendedInfoPtrOutput)
}

// Last time when the agent data synced to service.
func (o MabFileFolderProtectedItemExtendedInfoOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemExtendedInfo) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available.
func (o MabFileFolderProtectedItemExtendedInfoOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemExtendedInfo) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Number of backup copies associated with the backup item.
func (o MabFileFolderProtectedItemExtendedInfoOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemExtendedInfo) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type MabFileFolderProtectedItemExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MabFileFolderProtectedItemExtendedInfo)(nil)).Elem()
}

func (o MabFileFolderProtectedItemExtendedInfoPtrOutput) ToMabFileFolderProtectedItemExtendedInfoPtrOutput() MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoPtrOutput) ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoPtrOutput) Elem() MabFileFolderProtectedItemExtendedInfoOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfo) MabFileFolderProtectedItemExtendedInfo {
		if v != nil {
			return *v
		}
		var ret MabFileFolderProtectedItemExtendedInfo
		return ret
	}).(MabFileFolderProtectedItemExtendedInfoOutput)
}

// Last time when the agent data synced to service.
func (o MabFileFolderProtectedItemExtendedInfoPtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available.
func (o MabFileFolderProtectedItemExtendedInfoPtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Number of backup copies associated with the backup item.
func (o MabFileFolderProtectedItemExtendedInfoPtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfo) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Additional information on the backed up item.
type MabFileFolderProtectedItemExtendedInfoResponse struct {
	// Last time when the agent data synced to service.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// The oldest backup copy available.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Number of backup copies associated with the backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information on the backed up item.
type MabFileFolderProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabFileFolderProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) ToMabFileFolderProtectedItemExtendedInfoResponseOutput() MabFileFolderProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) ToMabFileFolderProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoResponseOutput {
	return o
}

// Last time when the agent data synced to service.
func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemExtendedInfoResponse) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available.
func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Number of backup copies associated with the backup item.
func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type MabFileFolderProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MabFileFolderProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) ToMabFileFolderProtectedItemExtendedInfoResponsePtrOutput() MabFileFolderProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) ToMabFileFolderProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) Elem() MabFileFolderProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfoResponse) MabFileFolderProtectedItemExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret MabFileFolderProtectedItemExtendedInfoResponse
		return ret
	}).(MabFileFolderProtectedItemExtendedInfoResponseOutput)
}

// Last time when the agent data synced to service.
func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available.
func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Number of backup copies associated with the backup item.
func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// MAB workload-specific backup item.
type MabFileFolderProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Name of the computer associated with this backup item.
	ComputerName *string `pulumi:"computerName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Sync time for deferred deletion in UTC
	DeferredDeleteSyncTimeInUTC *float64 `pulumi:"deferredDeleteSyncTimeInUTC"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo *MabFileFolderProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Status of last backup operation.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'MabFileFolderProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Protected, ProtectionStopped, IRPending or ProtectionError
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// MAB workload-specific backup item.
type MabFileFolderProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabFileFolderProtectedItemResponse)(nil)).Elem()
}

func (o MabFileFolderProtectedItemResponseOutput) ToMabFileFolderProtectedItemResponseOutput() MabFileFolderProtectedItemResponseOutput {
	return o
}

func (o MabFileFolderProtectedItemResponseOutput) ToMabFileFolderProtectedItemResponseOutputWithContext(ctx context.Context) MabFileFolderProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o MabFileFolderProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o MabFileFolderProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Name of the computer associated with this backup item.
func (o MabFileFolderProtectedItemResponseOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.ComputerName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o MabFileFolderProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o MabFileFolderProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Sync time for deferred deletion in UTC
func (o MabFileFolderProtectedItemResponseOutput) DeferredDeleteSyncTimeInUTC() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *float64 { return v.DeferredDeleteSyncTimeInUTC }).(pulumi.Float64PtrOutput)
}

// Time for deferred deletion in UTC
func (o MabFileFolderProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o MabFileFolderProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information with this backup item.
func (o MabFileFolderProtectedItemResponseOutput) ExtendedInfo() MabFileFolderProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *MabFileFolderProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(MabFileFolderProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of this backup item.
func (o MabFileFolderProtectedItemResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o MabFileFolderProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o MabFileFolderProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o MabFileFolderProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o MabFileFolderProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Status of last backup operation.
func (o MabFileFolderProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o MabFileFolderProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o MabFileFolderProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o MabFileFolderProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o MabFileFolderProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'MabFileFolderProtectedItem'.
func (o MabFileFolderProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Protected, ProtectionStopped, IRPending or ProtectionError
func (o MabFileFolderProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o MabFileFolderProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o MabFileFolderProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o MabFileFolderProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o MabFileFolderProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o MabFileFolderProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Mab container-specific backup policy.
type MabProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'MAB'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy details.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
}

// MabProtectionPolicyInput is an input type that accepts MabProtectionPolicyArgs and MabProtectionPolicyOutput values.
// You can construct a concrete instance of `MabProtectionPolicyInput` via:
//
//	MabProtectionPolicyArgs{...}
type MabProtectionPolicyInput interface {
	pulumi.Input

	ToMabProtectionPolicyOutput() MabProtectionPolicyOutput
	ToMabProtectionPolicyOutputWithContext(context.Context) MabProtectionPolicyOutput
}

// Mab container-specific backup policy.
type MabProtectionPolicyArgs struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'MAB'.
	BackupManagementType pulumi.StringInput `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount pulumi.IntPtrInput `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Retention policy details.
	RetentionPolicy pulumi.Input `pulumi:"retentionPolicy"`
	// Backup schedule of backup policy.
	SchedulePolicy pulumi.Input `pulumi:"schedulePolicy"`
}

func (MabProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MabProtectionPolicy)(nil)).Elem()
}

func (i MabProtectionPolicyArgs) ToMabProtectionPolicyOutput() MabProtectionPolicyOutput {
	return i.ToMabProtectionPolicyOutputWithContext(context.Background())
}

func (i MabProtectionPolicyArgs) ToMabProtectionPolicyOutputWithContext(ctx context.Context) MabProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabProtectionPolicyOutput)
}

func (i MabProtectionPolicyArgs) ToMabProtectionPolicyPtrOutput() MabProtectionPolicyPtrOutput {
	return i.ToMabProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i MabProtectionPolicyArgs) ToMabProtectionPolicyPtrOutputWithContext(ctx context.Context) MabProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabProtectionPolicyOutput).ToMabProtectionPolicyPtrOutputWithContext(ctx)
}

// MabProtectionPolicyPtrInput is an input type that accepts MabProtectionPolicyArgs, MabProtectionPolicyPtr and MabProtectionPolicyPtrOutput values.
// You can construct a concrete instance of `MabProtectionPolicyPtrInput` via:
//
//	        MabProtectionPolicyArgs{...}
//
//	or:
//
//	        nil
type MabProtectionPolicyPtrInput interface {
	pulumi.Input

	ToMabProtectionPolicyPtrOutput() MabProtectionPolicyPtrOutput
	ToMabProtectionPolicyPtrOutputWithContext(context.Context) MabProtectionPolicyPtrOutput
}

type mabProtectionPolicyPtrType MabProtectionPolicyArgs

func MabProtectionPolicyPtr(v *MabProtectionPolicyArgs) MabProtectionPolicyPtrInput {
	return (*mabProtectionPolicyPtrType)(v)
}

func (*mabProtectionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MabProtectionPolicy)(nil)).Elem()
}

func (i *mabProtectionPolicyPtrType) ToMabProtectionPolicyPtrOutput() MabProtectionPolicyPtrOutput {
	return i.ToMabProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i *mabProtectionPolicyPtrType) ToMabProtectionPolicyPtrOutputWithContext(ctx context.Context) MabProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabProtectionPolicyPtrOutput)
}

// Mab container-specific backup policy.
type MabProtectionPolicyOutput struct{ *pulumi.OutputState }

func (MabProtectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabProtectionPolicy)(nil)).Elem()
}

func (o MabProtectionPolicyOutput) ToMabProtectionPolicyOutput() MabProtectionPolicyOutput {
	return o
}

func (o MabProtectionPolicyOutput) ToMabProtectionPolicyOutputWithContext(ctx context.Context) MabProtectionPolicyOutput {
	return o
}

func (o MabProtectionPolicyOutput) ToMabProtectionPolicyPtrOutput() MabProtectionPolicyPtrOutput {
	return o.ToMabProtectionPolicyPtrOutputWithContext(context.Background())
}

func (o MabProtectionPolicyOutput) ToMabProtectionPolicyPtrOutputWithContext(ctx context.Context) MabProtectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MabProtectionPolicy) *MabProtectionPolicy {
		return &v
	}).(MabProtectionPolicyPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'MAB'.
func (o MabProtectionPolicyOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v MabProtectionPolicy) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Number of items associated with this policy.
func (o MabProtectionPolicyOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabProtectionPolicy) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o MabProtectionPolicyOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MabProtectionPolicy) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Retention policy details.
func (o MabProtectionPolicyOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v MabProtectionPolicy) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Backup schedule of backup policy.
func (o MabProtectionPolicyOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v MabProtectionPolicy) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

type MabProtectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (MabProtectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MabProtectionPolicy)(nil)).Elem()
}

func (o MabProtectionPolicyPtrOutput) ToMabProtectionPolicyPtrOutput() MabProtectionPolicyPtrOutput {
	return o
}

func (o MabProtectionPolicyPtrOutput) ToMabProtectionPolicyPtrOutputWithContext(ctx context.Context) MabProtectionPolicyPtrOutput {
	return o
}

func (o MabProtectionPolicyPtrOutput) Elem() MabProtectionPolicyOutput {
	return o.ApplyT(func(v *MabProtectionPolicy) MabProtectionPolicy {
		if v != nil {
			return *v
		}
		var ret MabProtectionPolicy
		return ret
	}).(MabProtectionPolicyOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'MAB'.
func (o MabProtectionPolicyPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o MabProtectionPolicyPtrOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MabProtectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.ProtectedItemsCount
	}).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o MabProtectionPolicyPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MabProtectionPolicy) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Retention policy details.
func (o MabProtectionPolicyPtrOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v *MabProtectionPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.RetentionPolicy
	}).(pulumi.AnyOutput)
}

// Backup schedule of backup policy.
func (o MabProtectionPolicyPtrOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v *MabProtectionPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.SchedulePolicy
	}).(pulumi.AnyOutput)
}

// Mab container-specific backup policy.
type MabProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'MAB'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy details.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
}

// Mab container-specific backup policy.
type MabProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (MabProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabProtectionPolicyResponse)(nil)).Elem()
}

func (o MabProtectionPolicyResponseOutput) ToMabProtectionPolicyResponseOutput() MabProtectionPolicyResponseOutput {
	return o
}

func (o MabProtectionPolicyResponseOutput) ToMabProtectionPolicyResponseOutputWithContext(ctx context.Context) MabProtectionPolicyResponseOutput {
	return o
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'MAB'.
func (o MabProtectionPolicyResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v MabProtectionPolicyResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Number of items associated with this policy.
func (o MabProtectionPolicyResponseOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabProtectionPolicyResponse) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o MabProtectionPolicyResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MabProtectionPolicyResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Retention policy details.
func (o MabProtectionPolicyResponseOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v MabProtectionPolicyResponse) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Backup schedule of backup policy.
func (o MabProtectionPolicyResponseOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v MabProtectionPolicyResponse) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

// Mars agent details.
type MarsAgentDetailsResponse struct {
	// The Mars agent Bios Id.
	BiosId string `pulumi:"biosId"`
	// The fabric object Id.
	FabricObjectId string `pulumi:"fabricObjectId"`
	// The Mars agent Fqdn.
	Fqdn string `pulumi:"fqdn"`
	// The health of the Mars agent.
	Health string `pulumi:"health"`
	// The health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The Mars agent Id.
	Id string `pulumi:"id"`
	// The last heartbeat received from the Mars agent.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The Mars agent name.
	Name string `pulumi:"name"`
	// The version.
	Version string `pulumi:"version"`
}

// Mars agent details.
type MarsAgentDetailsResponseOutput struct{ *pulumi.OutputState }

func (MarsAgentDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarsAgentDetailsResponse)(nil)).Elem()
}

func (o MarsAgentDetailsResponseOutput) ToMarsAgentDetailsResponseOutput() MarsAgentDetailsResponseOutput {
	return o
}

func (o MarsAgentDetailsResponseOutput) ToMarsAgentDetailsResponseOutputWithContext(ctx context.Context) MarsAgentDetailsResponseOutput {
	return o
}

// The Mars agent Bios Id.
func (o MarsAgentDetailsResponseOutput) BiosId() pulumi.StringOutput {
	return o.ApplyT(func(v MarsAgentDetailsResponse) string { return v.BiosId }).(pulumi.StringOutput)
}

// The fabric object Id.
func (o MarsAgentDetailsResponseOutput) FabricObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v MarsAgentDetailsResponse) string { return v.FabricObjectId }).(pulumi.StringOutput)
}

// The Mars agent Fqdn.
func (o MarsAgentDetailsResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v MarsAgentDetailsResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The health of the Mars agent.
func (o MarsAgentDetailsResponseOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v MarsAgentDetailsResponse) string { return v.Health }).(pulumi.StringOutput)
}

// The health errors.
func (o MarsAgentDetailsResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v MarsAgentDetailsResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The Mars agent Id.
func (o MarsAgentDetailsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MarsAgentDetailsResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The last heartbeat received from the Mars agent.
func (o MarsAgentDetailsResponseOutput) LastHeartbeatUtc() pulumi.StringOutput {
	return o.ApplyT(func(v MarsAgentDetailsResponse) string { return v.LastHeartbeatUtc }).(pulumi.StringOutput)
}

// The Mars agent name.
func (o MarsAgentDetailsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MarsAgentDetailsResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The version.
func (o MarsAgentDetailsResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v MarsAgentDetailsResponse) string { return v.Version }).(pulumi.StringOutput)
}

type MarsAgentDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (MarsAgentDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MarsAgentDetailsResponse)(nil)).Elem()
}

func (o MarsAgentDetailsResponseArrayOutput) ToMarsAgentDetailsResponseArrayOutput() MarsAgentDetailsResponseArrayOutput {
	return o
}

func (o MarsAgentDetailsResponseArrayOutput) ToMarsAgentDetailsResponseArrayOutputWithContext(ctx context.Context) MarsAgentDetailsResponseArrayOutput {
	return o
}

func (o MarsAgentDetailsResponseArrayOutput) Index(i pulumi.IntInput) MarsAgentDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MarsAgentDetailsResponse {
		return vs[0].([]MarsAgentDetailsResponse)[vs[1].(int)]
	}).(MarsAgentDetailsResponseOutput)
}

// Details of a Master Target Server.
type MasterTargetServerResponse struct {
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// The version of the scout component on the server.
	AgentVersion *string `pulumi:"agentVersion"`
	// Agent version details.
	AgentVersionDetails *VersionDetailsResponse `pulumi:"agentVersionDetails"`
	// The list of data stores in the fabric.
	DataStores []DataStoreResponse `pulumi:"dataStores"`
	// Disk count of the master target.
	DiskCount *int `pulumi:"diskCount"`
	// Health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The server Id.
	Id *string `pulumi:"id"`
	// The IP address of the server.
	IpAddress *string `pulumi:"ipAddress"`
	// The last heartbeat received from the server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// MARS agent expiry date.
	MarsAgentExpiryDate *string `pulumi:"marsAgentExpiryDate"`
	// MARS agent version.
	MarsAgentVersion *string `pulumi:"marsAgentVersion"`
	// Mars agent version details.
	MarsAgentVersionDetails *VersionDetailsResponse `pulumi:"marsAgentVersionDetails"`
	// The server name.
	Name *string `pulumi:"name"`
	// The OS type of the server.
	OsType *string `pulumi:"osType"`
	// OS Version of the master target.
	OsVersion *string `pulumi:"osVersion"`
	// The retention volumes of Master target Server.
	RetentionVolumes []RetentionVolumeResponse `pulumi:"retentionVolumes"`
	// Validation errors.
	ValidationErrors []HealthErrorResponse `pulumi:"validationErrors"`
	// Version status.
	VersionStatus *string `pulumi:"versionStatus"`
}

// Details of a Master Target Server.
type MasterTargetServerResponseOutput struct{ *pulumi.OutputState }

func (MasterTargetServerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MasterTargetServerResponse)(nil)).Elem()
}

func (o MasterTargetServerResponseOutput) ToMasterTargetServerResponseOutput() MasterTargetServerResponseOutput {
	return o
}

func (o MasterTargetServerResponseOutput) ToMasterTargetServerResponseOutputWithContext(ctx context.Context) MasterTargetServerResponseOutput {
	return o
}

// Agent expiry date.
func (o MasterTargetServerResponseOutput) AgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.AgentExpiryDate }).(pulumi.StringPtrOutput)
}

// The version of the scout component on the server.
func (o MasterTargetServerResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// Agent version details.
func (o MasterTargetServerResponseOutput) AgentVersionDetails() VersionDetailsResponsePtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *VersionDetailsResponse { return v.AgentVersionDetails }).(VersionDetailsResponsePtrOutput)
}

// The list of data stores in the fabric.
func (o MasterTargetServerResponseOutput) DataStores() DataStoreResponseArrayOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) []DataStoreResponse { return v.DataStores }).(DataStoreResponseArrayOutput)
}

// Disk count of the master target.
func (o MasterTargetServerResponseOutput) DiskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *int { return v.DiskCount }).(pulumi.IntPtrOutput)
}

// Health errors.
func (o MasterTargetServerResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The server Id.
func (o MasterTargetServerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IP address of the server.
func (o MasterTargetServerResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The last heartbeat received from the server.
func (o MasterTargetServerResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// MARS agent expiry date.
func (o MasterTargetServerResponseOutput) MarsAgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.MarsAgentExpiryDate }).(pulumi.StringPtrOutput)
}

// MARS agent version.
func (o MasterTargetServerResponseOutput) MarsAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.MarsAgentVersion }).(pulumi.StringPtrOutput)
}

// Mars agent version details.
func (o MasterTargetServerResponseOutput) MarsAgentVersionDetails() VersionDetailsResponsePtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *VersionDetailsResponse { return v.MarsAgentVersionDetails }).(VersionDetailsResponsePtrOutput)
}

// The server name.
func (o MasterTargetServerResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The OS type of the server.
func (o MasterTargetServerResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// OS Version of the master target.
func (o MasterTargetServerResponseOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// The retention volumes of Master target Server.
func (o MasterTargetServerResponseOutput) RetentionVolumes() RetentionVolumeResponseArrayOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) []RetentionVolumeResponse { return v.RetentionVolumes }).(RetentionVolumeResponseArrayOutput)
}

// Validation errors.
func (o MasterTargetServerResponseOutput) ValidationErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) []HealthErrorResponse { return v.ValidationErrors }).(HealthErrorResponseArrayOutput)
}

// Version status.
func (o MasterTargetServerResponseOutput) VersionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MasterTargetServerResponse) *string { return v.VersionStatus }).(pulumi.StringPtrOutput)
}

type MasterTargetServerResponseArrayOutput struct{ *pulumi.OutputState }

func (MasterTargetServerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MasterTargetServerResponse)(nil)).Elem()
}

func (o MasterTargetServerResponseArrayOutput) ToMasterTargetServerResponseArrayOutput() MasterTargetServerResponseArrayOutput {
	return o
}

func (o MasterTargetServerResponseArrayOutput) ToMasterTargetServerResponseArrayOutputWithContext(ctx context.Context) MasterTargetServerResponseArrayOutput {
	return o
}

func (o MasterTargetServerResponseArrayOutput) Index(i pulumi.IntInput) MasterTargetServerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MasterTargetServerResponse {
		return vs[0].([]MasterTargetServerResponse)[vs[1].(int)]
	}).(MasterTargetServerResponseOutput)
}

// Migration item properties.
type MigrationItemPropertiesResponse struct {
	// The allowed operations on the migration item based on the current migration state of the item.
	AllowedOperations []string `pulumi:"allowedOperations"`
	// The critical past job details.
	CriticalJobHistory []CriticalJobHistoryDetailsResponse `pulumi:"criticalJobHistory"`
	// The current job details.
	CurrentJob CurrentJobDetailsResponse `pulumi:"currentJob"`
	// The correlation Id for events associated with this migration item.
	EventCorrelationId string `pulumi:"eventCorrelationId"`
	// The consolidated health.
	Health string `pulumi:"health"`
	// The list of health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The status of the last migration.
	LastMigrationStatus string `pulumi:"lastMigrationStatus"`
	// The last migration time.
	LastMigrationTime string `pulumi:"lastMigrationTime"`
	// The status of the last test migration.
	LastTestMigrationStatus string `pulumi:"lastTestMigrationStatus"`
	// The last test migration time.
	LastTestMigrationTime string `pulumi:"lastTestMigrationTime"`
	// The on-premise virtual machine name.
	MachineName string `pulumi:"machineName"`
	// The migration status.
	MigrationState string `pulumi:"migrationState"`
	// The migration state description.
	MigrationStateDescription string `pulumi:"migrationStateDescription"`
	// The name of policy governing this item.
	PolicyFriendlyName string `pulumi:"policyFriendlyName"`
	// The ARM Id of policy governing this item.
	PolicyId string `pulumi:"policyId"`
	// The migration provider custom settings.
	ProviderSpecificDetails *VMwareCbtMigrationDetailsResponse `pulumi:"providerSpecificDetails"`
	// The recovery services provider ARM Id.
	RecoveryServicesProviderId string `pulumi:"recoveryServicesProviderId"`
	// The replication status.
	ReplicationStatus string `pulumi:"replicationStatus"`
	// The test migrate state.
	TestMigrateState string `pulumi:"testMigrateState"`
	// The test migrate state description.
	TestMigrateStateDescription string `pulumi:"testMigrateStateDescription"`
}

// Migration item properties.
type MigrationItemPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrationItemPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationItemPropertiesResponse)(nil)).Elem()
}

func (o MigrationItemPropertiesResponseOutput) ToMigrationItemPropertiesResponseOutput() MigrationItemPropertiesResponseOutput {
	return o
}

func (o MigrationItemPropertiesResponseOutput) ToMigrationItemPropertiesResponseOutputWithContext(ctx context.Context) MigrationItemPropertiesResponseOutput {
	return o
}

// The allowed operations on the migration item based on the current migration state of the item.
func (o MigrationItemPropertiesResponseOutput) AllowedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) []string { return v.AllowedOperations }).(pulumi.StringArrayOutput)
}

// The critical past job details.
func (o MigrationItemPropertiesResponseOutput) CriticalJobHistory() CriticalJobHistoryDetailsResponseArrayOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) []CriticalJobHistoryDetailsResponse {
		return v.CriticalJobHistory
	}).(CriticalJobHistoryDetailsResponseArrayOutput)
}

// The current job details.
func (o MigrationItemPropertiesResponseOutput) CurrentJob() CurrentJobDetailsResponseOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) CurrentJobDetailsResponse { return v.CurrentJob }).(CurrentJobDetailsResponseOutput)
}

// The correlation Id for events associated with this migration item.
func (o MigrationItemPropertiesResponseOutput) EventCorrelationId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.EventCorrelationId }).(pulumi.StringOutput)
}

// The consolidated health.
func (o MigrationItemPropertiesResponseOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.Health }).(pulumi.StringOutput)
}

// The list of health errors.
func (o MigrationItemPropertiesResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The status of the last migration.
func (o MigrationItemPropertiesResponseOutput) LastMigrationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.LastMigrationStatus }).(pulumi.StringOutput)
}

// The last migration time.
func (o MigrationItemPropertiesResponseOutput) LastMigrationTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.LastMigrationTime }).(pulumi.StringOutput)
}

// The status of the last test migration.
func (o MigrationItemPropertiesResponseOutput) LastTestMigrationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.LastTestMigrationStatus }).(pulumi.StringOutput)
}

// The last test migration time.
func (o MigrationItemPropertiesResponseOutput) LastTestMigrationTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.LastTestMigrationTime }).(pulumi.StringOutput)
}

// The on-premise virtual machine name.
func (o MigrationItemPropertiesResponseOutput) MachineName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.MachineName }).(pulumi.StringOutput)
}

// The migration status.
func (o MigrationItemPropertiesResponseOutput) MigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.MigrationState }).(pulumi.StringOutput)
}

// The migration state description.
func (o MigrationItemPropertiesResponseOutput) MigrationStateDescription() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.MigrationStateDescription }).(pulumi.StringOutput)
}

// The name of policy governing this item.
func (o MigrationItemPropertiesResponseOutput) PolicyFriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.PolicyFriendlyName }).(pulumi.StringOutput)
}

// The ARM Id of policy governing this item.
func (o MigrationItemPropertiesResponseOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.PolicyId }).(pulumi.StringOutput)
}

// The migration provider custom settings.
func (o MigrationItemPropertiesResponseOutput) ProviderSpecificDetails() VMwareCbtMigrationDetailsResponsePtrOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) *VMwareCbtMigrationDetailsResponse {
		return v.ProviderSpecificDetails
	}).(VMwareCbtMigrationDetailsResponsePtrOutput)
}

// The recovery services provider ARM Id.
func (o MigrationItemPropertiesResponseOutput) RecoveryServicesProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.RecoveryServicesProviderId }).(pulumi.StringOutput)
}

// The replication status.
func (o MigrationItemPropertiesResponseOutput) ReplicationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.ReplicationStatus }).(pulumi.StringOutput)
}

// The test migrate state.
func (o MigrationItemPropertiesResponseOutput) TestMigrateState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.TestMigrateState }).(pulumi.StringOutput)
}

// The test migrate state description.
func (o MigrationItemPropertiesResponseOutput) TestMigrateStateDescription() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationItemPropertiesResponse) string { return v.TestMigrateStateDescription }).(pulumi.StringOutput)
}

// The Mobility Service update details.
type MobilityServiceUpdateResponse struct {
	// The OS type.
	OsType *string `pulumi:"osType"`
	// The reboot status of the update - whether it is required or not.
	RebootStatus *string `pulumi:"rebootStatus"`
	// The version of the latest update.
	Version *string `pulumi:"version"`
}

// The Mobility Service update details.
type MobilityServiceUpdateResponseOutput struct{ *pulumi.OutputState }

func (MobilityServiceUpdateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MobilityServiceUpdateResponse)(nil)).Elem()
}

func (o MobilityServiceUpdateResponseOutput) ToMobilityServiceUpdateResponseOutput() MobilityServiceUpdateResponseOutput {
	return o
}

func (o MobilityServiceUpdateResponseOutput) ToMobilityServiceUpdateResponseOutputWithContext(ctx context.Context) MobilityServiceUpdateResponseOutput {
	return o
}

// The OS type.
func (o MobilityServiceUpdateResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobilityServiceUpdateResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The reboot status of the update - whether it is required or not.
func (o MobilityServiceUpdateResponseOutput) RebootStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobilityServiceUpdateResponse) *string { return v.RebootStatus }).(pulumi.StringPtrOutput)
}

// The version of the latest update.
func (o MobilityServiceUpdateResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MobilityServiceUpdateResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type MobilityServiceUpdateResponseArrayOutput struct{ *pulumi.OutputState }

func (MobilityServiceUpdateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MobilityServiceUpdateResponse)(nil)).Elem()
}

func (o MobilityServiceUpdateResponseArrayOutput) ToMobilityServiceUpdateResponseArrayOutput() MobilityServiceUpdateResponseArrayOutput {
	return o
}

func (o MobilityServiceUpdateResponseArrayOutput) ToMobilityServiceUpdateResponseArrayOutputWithContext(ctx context.Context) MobilityServiceUpdateResponseArrayOutput {
	return o
}

func (o MobilityServiceUpdateResponseArrayOutput) Index(i pulumi.IntInput) MobilityServiceUpdateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MobilityServiceUpdateResponse {
		return vs[0].([]MobilityServiceUpdateResponse)[vs[1].(int)]
	}).(MobilityServiceUpdateResponseOutput)
}

// Monitoring Settings of the vault
type MonitoringSettings struct {
	// Settings for Azure Monitor based alerts
	AzureMonitorAlertSettings *AzureMonitorAlertSettings `pulumi:"azureMonitorAlertSettings"`
	// Settings for classic alerts
	ClassicAlertSettings *ClassicAlertSettings `pulumi:"classicAlertSettings"`
}

// MonitoringSettingsInput is an input type that accepts MonitoringSettingsArgs and MonitoringSettingsOutput values.
// You can construct a concrete instance of `MonitoringSettingsInput` via:
//
//	MonitoringSettingsArgs{...}
type MonitoringSettingsInput interface {
	pulumi.Input

	ToMonitoringSettingsOutput() MonitoringSettingsOutput
	ToMonitoringSettingsOutputWithContext(context.Context) MonitoringSettingsOutput
}

// Monitoring Settings of the vault
type MonitoringSettingsArgs struct {
	// Settings for Azure Monitor based alerts
	AzureMonitorAlertSettings AzureMonitorAlertSettingsPtrInput `pulumi:"azureMonitorAlertSettings"`
	// Settings for classic alerts
	ClassicAlertSettings ClassicAlertSettingsPtrInput `pulumi:"classicAlertSettings"`
}

func (MonitoringSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSettings)(nil)).Elem()
}

func (i MonitoringSettingsArgs) ToMonitoringSettingsOutput() MonitoringSettingsOutput {
	return i.ToMonitoringSettingsOutputWithContext(context.Background())
}

func (i MonitoringSettingsArgs) ToMonitoringSettingsOutputWithContext(ctx context.Context) MonitoringSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringSettingsOutput)
}

func (i MonitoringSettingsArgs) ToMonitoringSettingsPtrOutput() MonitoringSettingsPtrOutput {
	return i.ToMonitoringSettingsPtrOutputWithContext(context.Background())
}

func (i MonitoringSettingsArgs) ToMonitoringSettingsPtrOutputWithContext(ctx context.Context) MonitoringSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringSettingsOutput).ToMonitoringSettingsPtrOutputWithContext(ctx)
}

// MonitoringSettingsPtrInput is an input type that accepts MonitoringSettingsArgs, MonitoringSettingsPtr and MonitoringSettingsPtrOutput values.
// You can construct a concrete instance of `MonitoringSettingsPtrInput` via:
//
//	        MonitoringSettingsArgs{...}
//
//	or:
//
//	        nil
type MonitoringSettingsPtrInput interface {
	pulumi.Input

	ToMonitoringSettingsPtrOutput() MonitoringSettingsPtrOutput
	ToMonitoringSettingsPtrOutputWithContext(context.Context) MonitoringSettingsPtrOutput
}

type monitoringSettingsPtrType MonitoringSettingsArgs

func MonitoringSettingsPtr(v *MonitoringSettingsArgs) MonitoringSettingsPtrInput {
	return (*monitoringSettingsPtrType)(v)
}

func (*monitoringSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringSettings)(nil)).Elem()
}

func (i *monitoringSettingsPtrType) ToMonitoringSettingsPtrOutput() MonitoringSettingsPtrOutput {
	return i.ToMonitoringSettingsPtrOutputWithContext(context.Background())
}

func (i *monitoringSettingsPtrType) ToMonitoringSettingsPtrOutputWithContext(ctx context.Context) MonitoringSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringSettingsPtrOutput)
}

// Monitoring Settings of the vault
type MonitoringSettingsOutput struct{ *pulumi.OutputState }

func (MonitoringSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSettings)(nil)).Elem()
}

func (o MonitoringSettingsOutput) ToMonitoringSettingsOutput() MonitoringSettingsOutput {
	return o
}

func (o MonitoringSettingsOutput) ToMonitoringSettingsOutputWithContext(ctx context.Context) MonitoringSettingsOutput {
	return o
}

func (o MonitoringSettingsOutput) ToMonitoringSettingsPtrOutput() MonitoringSettingsPtrOutput {
	return o.ToMonitoringSettingsPtrOutputWithContext(context.Background())
}

func (o MonitoringSettingsOutput) ToMonitoringSettingsPtrOutputWithContext(ctx context.Context) MonitoringSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringSettings) *MonitoringSettings {
		return &v
	}).(MonitoringSettingsPtrOutput)
}

// Settings for Azure Monitor based alerts
func (o MonitoringSettingsOutput) AzureMonitorAlertSettings() AzureMonitorAlertSettingsPtrOutput {
	return o.ApplyT(func(v MonitoringSettings) *AzureMonitorAlertSettings { return v.AzureMonitorAlertSettings }).(AzureMonitorAlertSettingsPtrOutput)
}

// Settings for classic alerts
func (o MonitoringSettingsOutput) ClassicAlertSettings() ClassicAlertSettingsPtrOutput {
	return o.ApplyT(func(v MonitoringSettings) *ClassicAlertSettings { return v.ClassicAlertSettings }).(ClassicAlertSettingsPtrOutput)
}

type MonitoringSettingsPtrOutput struct{ *pulumi.OutputState }

func (MonitoringSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringSettings)(nil)).Elem()
}

func (o MonitoringSettingsPtrOutput) ToMonitoringSettingsPtrOutput() MonitoringSettingsPtrOutput {
	return o
}

func (o MonitoringSettingsPtrOutput) ToMonitoringSettingsPtrOutputWithContext(ctx context.Context) MonitoringSettingsPtrOutput {
	return o
}

func (o MonitoringSettingsPtrOutput) Elem() MonitoringSettingsOutput {
	return o.ApplyT(func(v *MonitoringSettings) MonitoringSettings {
		if v != nil {
			return *v
		}
		var ret MonitoringSettings
		return ret
	}).(MonitoringSettingsOutput)
}

// Settings for Azure Monitor based alerts
func (o MonitoringSettingsPtrOutput) AzureMonitorAlertSettings() AzureMonitorAlertSettingsPtrOutput {
	return o.ApplyT(func(v *MonitoringSettings) *AzureMonitorAlertSettings {
		if v == nil {
			return nil
		}
		return v.AzureMonitorAlertSettings
	}).(AzureMonitorAlertSettingsPtrOutput)
}

// Settings for classic alerts
func (o MonitoringSettingsPtrOutput) ClassicAlertSettings() ClassicAlertSettingsPtrOutput {
	return o.ApplyT(func(v *MonitoringSettings) *ClassicAlertSettings {
		if v == nil {
			return nil
		}
		return v.ClassicAlertSettings
	}).(ClassicAlertSettingsPtrOutput)
}

// Monitoring Settings of the vault
type MonitoringSettingsResponse struct {
	// Settings for Azure Monitor based alerts
	AzureMonitorAlertSettings *AzureMonitorAlertSettingsResponse `pulumi:"azureMonitorAlertSettings"`
	// Settings for classic alerts
	ClassicAlertSettings *ClassicAlertSettingsResponse `pulumi:"classicAlertSettings"`
}

// Monitoring Settings of the vault
type MonitoringSettingsResponseOutput struct{ *pulumi.OutputState }

func (MonitoringSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSettingsResponse)(nil)).Elem()
}

func (o MonitoringSettingsResponseOutput) ToMonitoringSettingsResponseOutput() MonitoringSettingsResponseOutput {
	return o
}

func (o MonitoringSettingsResponseOutput) ToMonitoringSettingsResponseOutputWithContext(ctx context.Context) MonitoringSettingsResponseOutput {
	return o
}

// Settings for Azure Monitor based alerts
func (o MonitoringSettingsResponseOutput) AzureMonitorAlertSettings() AzureMonitorAlertSettingsResponsePtrOutput {
	return o.ApplyT(func(v MonitoringSettingsResponse) *AzureMonitorAlertSettingsResponse {
		return v.AzureMonitorAlertSettings
	}).(AzureMonitorAlertSettingsResponsePtrOutput)
}

// Settings for classic alerts
func (o MonitoringSettingsResponseOutput) ClassicAlertSettings() ClassicAlertSettingsResponsePtrOutput {
	return o.ApplyT(func(v MonitoringSettingsResponse) *ClassicAlertSettingsResponse { return v.ClassicAlertSettings }).(ClassicAlertSettingsResponsePtrOutput)
}

type MonitoringSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (MonitoringSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringSettingsResponse)(nil)).Elem()
}

func (o MonitoringSettingsResponsePtrOutput) ToMonitoringSettingsResponsePtrOutput() MonitoringSettingsResponsePtrOutput {
	return o
}

func (o MonitoringSettingsResponsePtrOutput) ToMonitoringSettingsResponsePtrOutputWithContext(ctx context.Context) MonitoringSettingsResponsePtrOutput {
	return o
}

func (o MonitoringSettingsResponsePtrOutput) Elem() MonitoringSettingsResponseOutput {
	return o.ApplyT(func(v *MonitoringSettingsResponse) MonitoringSettingsResponse {
		if v != nil {
			return *v
		}
		var ret MonitoringSettingsResponse
		return ret
	}).(MonitoringSettingsResponseOutput)
}

// Settings for Azure Monitor based alerts
func (o MonitoringSettingsResponsePtrOutput) AzureMonitorAlertSettings() AzureMonitorAlertSettingsResponsePtrOutput {
	return o.ApplyT(func(v *MonitoringSettingsResponse) *AzureMonitorAlertSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AzureMonitorAlertSettings
	}).(AzureMonitorAlertSettingsResponsePtrOutput)
}

// Settings for classic alerts
func (o MonitoringSettingsResponsePtrOutput) ClassicAlertSettings() ClassicAlertSettingsResponsePtrOutput {
	return o.ApplyT(func(v *MonitoringSettingsResponse) *ClassicAlertSettingsResponse {
		if v == nil {
			return nil
		}
		return v.ClassicAlertSettings
	}).(ClassicAlertSettingsResponsePtrOutput)
}

// Monthly retention schedule.
type MonthlyRetentionSchedule struct {
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Daily retention format for monthly retention policy.
	RetentionScheduleDaily *DailyRetentionFormat `pulumi:"retentionScheduleDaily"`
	// Retention schedule format type for monthly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for monthly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormat `pulumi:"retentionScheduleWeekly"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// MonthlyRetentionScheduleInput is an input type that accepts MonthlyRetentionScheduleArgs and MonthlyRetentionScheduleOutput values.
// You can construct a concrete instance of `MonthlyRetentionScheduleInput` via:
//
//	MonthlyRetentionScheduleArgs{...}
type MonthlyRetentionScheduleInput interface {
	pulumi.Input

	ToMonthlyRetentionScheduleOutput() MonthlyRetentionScheduleOutput
	ToMonthlyRetentionScheduleOutputWithContext(context.Context) MonthlyRetentionScheduleOutput
}

// Monthly retention schedule.
type MonthlyRetentionScheduleArgs struct {
	// Retention duration of retention Policy.
	RetentionDuration RetentionDurationPtrInput `pulumi:"retentionDuration"`
	// Daily retention format for monthly retention policy.
	RetentionScheduleDaily DailyRetentionFormatPtrInput `pulumi:"retentionScheduleDaily"`
	// Retention schedule format type for monthly retention policy.
	RetentionScheduleFormatType pulumi.StringPtrInput `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for monthly retention policy.
	RetentionScheduleWeekly WeeklyRetentionFormatPtrInput `pulumi:"retentionScheduleWeekly"`
	// Retention times of retention policy.
	RetentionTimes pulumi.StringArrayInput `pulumi:"retentionTimes"`
}

func (MonthlyRetentionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonthlyRetentionSchedule)(nil)).Elem()
}

func (i MonthlyRetentionScheduleArgs) ToMonthlyRetentionScheduleOutput() MonthlyRetentionScheduleOutput {
	return i.ToMonthlyRetentionScheduleOutputWithContext(context.Background())
}

func (i MonthlyRetentionScheduleArgs) ToMonthlyRetentionScheduleOutputWithContext(ctx context.Context) MonthlyRetentionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonthlyRetentionScheduleOutput)
}

func (i MonthlyRetentionScheduleArgs) ToMonthlyRetentionSchedulePtrOutput() MonthlyRetentionSchedulePtrOutput {
	return i.ToMonthlyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i MonthlyRetentionScheduleArgs) ToMonthlyRetentionSchedulePtrOutputWithContext(ctx context.Context) MonthlyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonthlyRetentionScheduleOutput).ToMonthlyRetentionSchedulePtrOutputWithContext(ctx)
}

// MonthlyRetentionSchedulePtrInput is an input type that accepts MonthlyRetentionScheduleArgs, MonthlyRetentionSchedulePtr and MonthlyRetentionSchedulePtrOutput values.
// You can construct a concrete instance of `MonthlyRetentionSchedulePtrInput` via:
//
//	        MonthlyRetentionScheduleArgs{...}
//
//	or:
//
//	        nil
type MonthlyRetentionSchedulePtrInput interface {
	pulumi.Input

	ToMonthlyRetentionSchedulePtrOutput() MonthlyRetentionSchedulePtrOutput
	ToMonthlyRetentionSchedulePtrOutputWithContext(context.Context) MonthlyRetentionSchedulePtrOutput
}

type monthlyRetentionSchedulePtrType MonthlyRetentionScheduleArgs

func MonthlyRetentionSchedulePtr(v *MonthlyRetentionScheduleArgs) MonthlyRetentionSchedulePtrInput {
	return (*monthlyRetentionSchedulePtrType)(v)
}

func (*monthlyRetentionSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonthlyRetentionSchedule)(nil)).Elem()
}

func (i *monthlyRetentionSchedulePtrType) ToMonthlyRetentionSchedulePtrOutput() MonthlyRetentionSchedulePtrOutput {
	return i.ToMonthlyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i *monthlyRetentionSchedulePtrType) ToMonthlyRetentionSchedulePtrOutputWithContext(ctx context.Context) MonthlyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonthlyRetentionSchedulePtrOutput)
}

// Monthly retention schedule.
type MonthlyRetentionScheduleOutput struct{ *pulumi.OutputState }

func (MonthlyRetentionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonthlyRetentionSchedule)(nil)).Elem()
}

func (o MonthlyRetentionScheduleOutput) ToMonthlyRetentionScheduleOutput() MonthlyRetentionScheduleOutput {
	return o
}

func (o MonthlyRetentionScheduleOutput) ToMonthlyRetentionScheduleOutputWithContext(ctx context.Context) MonthlyRetentionScheduleOutput {
	return o
}

func (o MonthlyRetentionScheduleOutput) ToMonthlyRetentionSchedulePtrOutput() MonthlyRetentionSchedulePtrOutput {
	return o.ToMonthlyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (o MonthlyRetentionScheduleOutput) ToMonthlyRetentionSchedulePtrOutputWithContext(ctx context.Context) MonthlyRetentionSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonthlyRetentionSchedule) *MonthlyRetentionSchedule {
		return &v
	}).(MonthlyRetentionSchedulePtrOutput)
}

// Retention duration of retention Policy.
func (o MonthlyRetentionScheduleOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v MonthlyRetentionSchedule) *RetentionDuration { return v.RetentionDuration }).(RetentionDurationPtrOutput)
}

// Daily retention format for monthly retention policy.
func (o MonthlyRetentionScheduleOutput) RetentionScheduleDaily() DailyRetentionFormatPtrOutput {
	return o.ApplyT(func(v MonthlyRetentionSchedule) *DailyRetentionFormat { return v.RetentionScheduleDaily }).(DailyRetentionFormatPtrOutput)
}

// Retention schedule format type for monthly retention policy.
func (o MonthlyRetentionScheduleOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonthlyRetentionSchedule) *string { return v.RetentionScheduleFormatType }).(pulumi.StringPtrOutput)
}

// Weekly retention format for monthly retention policy.
func (o MonthlyRetentionScheduleOutput) RetentionScheduleWeekly() WeeklyRetentionFormatPtrOutput {
	return o.ApplyT(func(v MonthlyRetentionSchedule) *WeeklyRetentionFormat { return v.RetentionScheduleWeekly }).(WeeklyRetentionFormatPtrOutput)
}

// Retention times of retention policy.
func (o MonthlyRetentionScheduleOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonthlyRetentionSchedule) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type MonthlyRetentionSchedulePtrOutput struct{ *pulumi.OutputState }

func (MonthlyRetentionSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonthlyRetentionSchedule)(nil)).Elem()
}

func (o MonthlyRetentionSchedulePtrOutput) ToMonthlyRetentionSchedulePtrOutput() MonthlyRetentionSchedulePtrOutput {
	return o
}

func (o MonthlyRetentionSchedulePtrOutput) ToMonthlyRetentionSchedulePtrOutputWithContext(ctx context.Context) MonthlyRetentionSchedulePtrOutput {
	return o
}

func (o MonthlyRetentionSchedulePtrOutput) Elem() MonthlyRetentionScheduleOutput {
	return o.ApplyT(func(v *MonthlyRetentionSchedule) MonthlyRetentionSchedule {
		if v != nil {
			return *v
		}
		var ret MonthlyRetentionSchedule
		return ret
	}).(MonthlyRetentionScheduleOutput)
}

// Retention duration of retention Policy.
func (o MonthlyRetentionSchedulePtrOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionSchedule) *RetentionDuration {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationPtrOutput)
}

// Daily retention format for monthly retention policy.
func (o MonthlyRetentionSchedulePtrOutput) RetentionScheduleDaily() DailyRetentionFormatPtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionSchedule) *DailyRetentionFormat {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleDaily
	}).(DailyRetentionFormatPtrOutput)
}

// Retention schedule format type for monthly retention policy.
func (o MonthlyRetentionSchedulePtrOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionSchedule) *string {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleFormatType
	}).(pulumi.StringPtrOutput)
}

// Weekly retention format for monthly retention policy.
func (o MonthlyRetentionSchedulePtrOutput) RetentionScheduleWeekly() WeeklyRetentionFormatPtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionSchedule) *WeeklyRetentionFormat {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleWeekly
	}).(WeeklyRetentionFormatPtrOutput)
}

// Retention times of retention policy.
func (o MonthlyRetentionSchedulePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonthlyRetentionSchedule) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

// Monthly retention schedule.
type MonthlyRetentionScheduleResponse struct {
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Daily retention format for monthly retention policy.
	RetentionScheduleDaily *DailyRetentionFormatResponse `pulumi:"retentionScheduleDaily"`
	// Retention schedule format type for monthly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for monthly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormatResponse `pulumi:"retentionScheduleWeekly"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Monthly retention schedule.
type MonthlyRetentionScheduleResponseOutput struct{ *pulumi.OutputState }

func (MonthlyRetentionScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonthlyRetentionScheduleResponse)(nil)).Elem()
}

func (o MonthlyRetentionScheduleResponseOutput) ToMonthlyRetentionScheduleResponseOutput() MonthlyRetentionScheduleResponseOutput {
	return o
}

func (o MonthlyRetentionScheduleResponseOutput) ToMonthlyRetentionScheduleResponseOutputWithContext(ctx context.Context) MonthlyRetentionScheduleResponseOutput {
	return o
}

// Retention duration of retention Policy.
func (o MonthlyRetentionScheduleResponseOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v MonthlyRetentionScheduleResponse) *RetentionDurationResponse { return v.RetentionDuration }).(RetentionDurationResponsePtrOutput)
}

// Daily retention format for monthly retention policy.
func (o MonthlyRetentionScheduleResponseOutput) RetentionScheduleDaily() DailyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v MonthlyRetentionScheduleResponse) *DailyRetentionFormatResponse {
		return v.RetentionScheduleDaily
	}).(DailyRetentionFormatResponsePtrOutput)
}

// Retention schedule format type for monthly retention policy.
func (o MonthlyRetentionScheduleResponseOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonthlyRetentionScheduleResponse) *string { return v.RetentionScheduleFormatType }).(pulumi.StringPtrOutput)
}

// Weekly retention format for monthly retention policy.
func (o MonthlyRetentionScheduleResponseOutput) RetentionScheduleWeekly() WeeklyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v MonthlyRetentionScheduleResponse) *WeeklyRetentionFormatResponse {
		return v.RetentionScheduleWeekly
	}).(WeeklyRetentionFormatResponsePtrOutput)
}

// Retention times of retention policy.
func (o MonthlyRetentionScheduleResponseOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonthlyRetentionScheduleResponse) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type MonthlyRetentionScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (MonthlyRetentionScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonthlyRetentionScheduleResponse)(nil)).Elem()
}

func (o MonthlyRetentionScheduleResponsePtrOutput) ToMonthlyRetentionScheduleResponsePtrOutput() MonthlyRetentionScheduleResponsePtrOutput {
	return o
}

func (o MonthlyRetentionScheduleResponsePtrOutput) ToMonthlyRetentionScheduleResponsePtrOutputWithContext(ctx context.Context) MonthlyRetentionScheduleResponsePtrOutput {
	return o
}

func (o MonthlyRetentionScheduleResponsePtrOutput) Elem() MonthlyRetentionScheduleResponseOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) MonthlyRetentionScheduleResponse {
		if v != nil {
			return *v
		}
		var ret MonthlyRetentionScheduleResponse
		return ret
	}).(MonthlyRetentionScheduleResponseOutput)
}

// Retention duration of retention Policy.
func (o MonthlyRetentionScheduleResponsePtrOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) *RetentionDurationResponse {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationResponsePtrOutput)
}

// Daily retention format for monthly retention policy.
func (o MonthlyRetentionScheduleResponsePtrOutput) RetentionScheduleDaily() DailyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) *DailyRetentionFormatResponse {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleDaily
	}).(DailyRetentionFormatResponsePtrOutput)
}

// Retention schedule format type for monthly retention policy.
func (o MonthlyRetentionScheduleResponsePtrOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleFormatType
	}).(pulumi.StringPtrOutput)
}

// Weekly retention format for monthly retention policy.
func (o MonthlyRetentionScheduleResponsePtrOutput) RetentionScheduleWeekly() WeeklyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) *WeeklyRetentionFormatResponse {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleWeekly
	}).(WeeklyRetentionFormatResponsePtrOutput)
}

// Retention times of retention policy.
func (o MonthlyRetentionScheduleResponsePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

// Network Mapping Properties.
type NetworkMappingPropertiesResponse struct {
	// The fabric specific settings.
	FabricSpecificSettings interface{} `pulumi:"fabricSpecificSettings"`
	// The primary fabric friendly name.
	PrimaryFabricFriendlyName *string `pulumi:"primaryFabricFriendlyName"`
	// The primary network friendly name.
	PrimaryNetworkFriendlyName *string `pulumi:"primaryNetworkFriendlyName"`
	// The primary network id for network mapping.
	PrimaryNetworkId *string `pulumi:"primaryNetworkId"`
	// The recovery fabric ARM id.
	RecoveryFabricArmId *string `pulumi:"recoveryFabricArmId"`
	// The recovery fabric friendly name.
	RecoveryFabricFriendlyName *string `pulumi:"recoveryFabricFriendlyName"`
	// The recovery network friendly name.
	RecoveryNetworkFriendlyName *string `pulumi:"recoveryNetworkFriendlyName"`
	// The recovery network id for network mapping.
	RecoveryNetworkId *string `pulumi:"recoveryNetworkId"`
	// The pairing state for network mapping.
	State *string `pulumi:"state"`
}

// Network Mapping Properties.
type NetworkMappingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (NetworkMappingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkMappingPropertiesResponse)(nil)).Elem()
}

func (o NetworkMappingPropertiesResponseOutput) ToNetworkMappingPropertiesResponseOutput() NetworkMappingPropertiesResponseOutput {
	return o
}

func (o NetworkMappingPropertiesResponseOutput) ToNetworkMappingPropertiesResponseOutputWithContext(ctx context.Context) NetworkMappingPropertiesResponseOutput {
	return o
}

// The fabric specific settings.
func (o NetworkMappingPropertiesResponseOutput) FabricSpecificSettings() pulumi.AnyOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) interface{} { return v.FabricSpecificSettings }).(pulumi.AnyOutput)
}

// The primary fabric friendly name.
func (o NetworkMappingPropertiesResponseOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.PrimaryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The primary network friendly name.
func (o NetworkMappingPropertiesResponseOutput) PrimaryNetworkFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.PrimaryNetworkFriendlyName }).(pulumi.StringPtrOutput)
}

// The primary network id for network mapping.
func (o NetworkMappingPropertiesResponseOutput) PrimaryNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.PrimaryNetworkId }).(pulumi.StringPtrOutput)
}

// The recovery fabric ARM id.
func (o NetworkMappingPropertiesResponseOutput) RecoveryFabricArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.RecoveryFabricArmId }).(pulumi.StringPtrOutput)
}

// The recovery fabric friendly name.
func (o NetworkMappingPropertiesResponseOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.RecoveryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery network friendly name.
func (o NetworkMappingPropertiesResponseOutput) RecoveryNetworkFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.RecoveryNetworkFriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery network id for network mapping.
func (o NetworkMappingPropertiesResponseOutput) RecoveryNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.RecoveryNetworkId }).(pulumi.StringPtrOutput)
}

// The pairing state for network mapping.
func (o NetworkMappingPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkMappingPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Disk Details.
type OSDetailsResponse struct {
	// The OS Major Version.
	OSMajorVersion *string `pulumi:"oSMajorVersion"`
	// The OS Minor Version.
	OSMinorVersion *string `pulumi:"oSMinorVersion"`
	// The OS Version.
	OSVersion *string `pulumi:"oSVersion"`
	// The OSEdition.
	OsEdition *string `pulumi:"osEdition"`
	// VM Disk details.
	OsType *string `pulumi:"osType"`
	// Product type.
	ProductType *string `pulumi:"productType"`
}

// Disk Details.
type OSDetailsResponseOutput struct{ *pulumi.OutputState }

func (OSDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDetailsResponse)(nil)).Elem()
}

func (o OSDetailsResponseOutput) ToOSDetailsResponseOutput() OSDetailsResponseOutput {
	return o
}

func (o OSDetailsResponseOutput) ToOSDetailsResponseOutputWithContext(ctx context.Context) OSDetailsResponseOutput {
	return o
}

// The OS Major Version.
func (o OSDetailsResponseOutput) OSMajorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.OSMajorVersion }).(pulumi.StringPtrOutput)
}

// The OS Minor Version.
func (o OSDetailsResponseOutput) OSMinorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.OSMinorVersion }).(pulumi.StringPtrOutput)
}

// The OS Version.
func (o OSDetailsResponseOutput) OSVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.OSVersion }).(pulumi.StringPtrOutput)
}

// The OSEdition.
func (o OSDetailsResponseOutput) OsEdition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.OsEdition }).(pulumi.StringPtrOutput)
}

// VM Disk details.
func (o OSDetailsResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Product type.
func (o OSDetailsResponseOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDetailsResponse) *string { return v.ProductType }).(pulumi.StringPtrOutput)
}

type OSDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (OSDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDetailsResponse)(nil)).Elem()
}

func (o OSDetailsResponsePtrOutput) ToOSDetailsResponsePtrOutput() OSDetailsResponsePtrOutput {
	return o
}

func (o OSDetailsResponsePtrOutput) ToOSDetailsResponsePtrOutputWithContext(ctx context.Context) OSDetailsResponsePtrOutput {
	return o
}

func (o OSDetailsResponsePtrOutput) Elem() OSDetailsResponseOutput {
	return o.ApplyT(func(v *OSDetailsResponse) OSDetailsResponse {
		if v != nil {
			return *v
		}
		var ret OSDetailsResponse
		return ret
	}).(OSDetailsResponseOutput)
}

// The OS Major Version.
func (o OSDetailsResponsePtrOutput) OSMajorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OSMajorVersion
	}).(pulumi.StringPtrOutput)
}

// The OS Minor Version.
func (o OSDetailsResponsePtrOutput) OSMinorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OSMinorVersion
	}).(pulumi.StringPtrOutput)
}

// The OS Version.
func (o OSDetailsResponsePtrOutput) OSVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OSVersion
	}).(pulumi.StringPtrOutput)
}

// The OSEdition.
func (o OSDetailsResponsePtrOutput) OsEdition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsEdition
	}).(pulumi.StringPtrOutput)
}

// VM Disk details.
func (o OSDetailsResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// Product type.
func (o OSDetailsResponsePtrOutput) ProductType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProductType
	}).(pulumi.StringPtrOutput)
}

// Details of the OS Disk.
type OSDiskDetailsResponse struct {
	// The type of the OS on the VM.
	OsType *string `pulumi:"osType"`
	// The id of the disk containing the OS.
	OsVhdId *string `pulumi:"osVhdId"`
	// The OS disk VHD name.
	VhdName *string `pulumi:"vhdName"`
}

// Details of the OS Disk.
type OSDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (OSDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSDiskDetailsResponse)(nil)).Elem()
}

func (o OSDiskDetailsResponseOutput) ToOSDiskDetailsResponseOutput() OSDiskDetailsResponseOutput {
	return o
}

func (o OSDiskDetailsResponseOutput) ToOSDiskDetailsResponseOutputWithContext(ctx context.Context) OSDiskDetailsResponseOutput {
	return o
}

// The type of the OS on the VM.
func (o OSDiskDetailsResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskDetailsResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The id of the disk containing the OS.
func (o OSDiskDetailsResponseOutput) OsVhdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskDetailsResponse) *string { return v.OsVhdId }).(pulumi.StringPtrOutput)
}

// The OS disk VHD name.
func (o OSDiskDetailsResponseOutput) VhdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OSDiskDetailsResponse) *string { return v.VhdName }).(pulumi.StringPtrOutput)
}

type OSDiskDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (OSDiskDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OSDiskDetailsResponse)(nil)).Elem()
}

func (o OSDiskDetailsResponsePtrOutput) ToOSDiskDetailsResponsePtrOutput() OSDiskDetailsResponsePtrOutput {
	return o
}

func (o OSDiskDetailsResponsePtrOutput) ToOSDiskDetailsResponsePtrOutputWithContext(ctx context.Context) OSDiskDetailsResponsePtrOutput {
	return o
}

func (o OSDiskDetailsResponsePtrOutput) Elem() OSDiskDetailsResponseOutput {
	return o.ApplyT(func(v *OSDiskDetailsResponse) OSDiskDetailsResponse {
		if v != nil {
			return *v
		}
		var ret OSDiskDetailsResponse
		return ret
	}).(OSDiskDetailsResponseOutput)
}

// The type of the OS on the VM.
func (o OSDiskDetailsResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The id of the disk containing the OS.
func (o OSDiskDetailsResponsePtrOutput) OsVhdId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsVhdId
	}).(pulumi.StringPtrOutput)
}

// The OS disk VHD name.
func (o OSDiskDetailsResponsePtrOutput) VhdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OSDiskDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VhdName
	}).(pulumi.StringPtrOutput)
}

// Supported OS upgrade versions.
type OSUpgradeSupportedVersionsResponse struct {
	// The source OS version name.
	SupportedSourceOsVersion string `pulumi:"supportedSourceOsVersion"`
	// The target OS version names.
	SupportedTargetOsVersions []string `pulumi:"supportedTargetOsVersions"`
}

// Supported OS upgrade versions.
type OSUpgradeSupportedVersionsResponseOutput struct{ *pulumi.OutputState }

func (OSUpgradeSupportedVersionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OSUpgradeSupportedVersionsResponse)(nil)).Elem()
}

func (o OSUpgradeSupportedVersionsResponseOutput) ToOSUpgradeSupportedVersionsResponseOutput() OSUpgradeSupportedVersionsResponseOutput {
	return o
}

func (o OSUpgradeSupportedVersionsResponseOutput) ToOSUpgradeSupportedVersionsResponseOutputWithContext(ctx context.Context) OSUpgradeSupportedVersionsResponseOutput {
	return o
}

// The source OS version name.
func (o OSUpgradeSupportedVersionsResponseOutput) SupportedSourceOsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v OSUpgradeSupportedVersionsResponse) string { return v.SupportedSourceOsVersion }).(pulumi.StringOutput)
}

// The target OS version names.
func (o OSUpgradeSupportedVersionsResponseOutput) SupportedTargetOsVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OSUpgradeSupportedVersionsResponse) []string { return v.SupportedTargetOsVersions }).(pulumi.StringArrayOutput)
}

type OSUpgradeSupportedVersionsResponseArrayOutput struct{ *pulumi.OutputState }

func (OSUpgradeSupportedVersionsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OSUpgradeSupportedVersionsResponse)(nil)).Elem()
}

func (o OSUpgradeSupportedVersionsResponseArrayOutput) ToOSUpgradeSupportedVersionsResponseArrayOutput() OSUpgradeSupportedVersionsResponseArrayOutput {
	return o
}

func (o OSUpgradeSupportedVersionsResponseArrayOutput) ToOSUpgradeSupportedVersionsResponseArrayOutputWithContext(ctx context.Context) OSUpgradeSupportedVersionsResponseArrayOutput {
	return o
}

func (o OSUpgradeSupportedVersionsResponseArrayOutput) Index(i pulumi.IntInput) OSUpgradeSupportedVersionsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OSUpgradeSupportedVersionsResponse {
		return vs[0].([]OSUpgradeSupportedVersionsResponse)[vs[1].(int)]
	}).(OSUpgradeSupportedVersionsResponseOutput)
}

// Protection profile custom data details.
type PolicyPropertiesResponse struct {
	// The FriendlyName.
	FriendlyName *string `pulumi:"friendlyName"`
	// The ReplicationChannelSetting.
	ProviderSpecificDetails interface{} `pulumi:"providerSpecificDetails"`
}

// Protection profile custom data details.
type PolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPropertiesResponse)(nil)).Elem()
}

func (o PolicyPropertiesResponseOutput) ToPolicyPropertiesResponseOutput() PolicyPropertiesResponseOutput {
	return o
}

func (o PolicyPropertiesResponseOutput) ToPolicyPropertiesResponseOutputWithContext(ctx context.Context) PolicyPropertiesResponseOutput {
	return o
}

// The FriendlyName.
func (o PolicyPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The ReplicationChannelSetting.
func (o PolicyPropertiesResponseOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v PolicyPropertiesResponse) interface{} { return v.ProviderSpecificDetails }).(pulumi.AnyOutput)
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection
type PrivateEndpoint struct {
	// Gets or sets id
	Id *string `pulumi:"id"`
}

// PrivateEndpointInput is an input type that accepts PrivateEndpointArgs and PrivateEndpointOutput values.
// You can construct a concrete instance of `PrivateEndpointInput` via:
//
//	PrivateEndpointArgs{...}
type PrivateEndpointInput interface {
	pulumi.Input

	ToPrivateEndpointOutput() PrivateEndpointOutput
	ToPrivateEndpointOutputWithContext(context.Context) PrivateEndpointOutput
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection
type PrivateEndpointArgs struct {
	// Gets or sets id
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (PrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpoint)(nil)).Elem()
}

func (i PrivateEndpointArgs) ToPrivateEndpointOutput() PrivateEndpointOutput {
	return i.ToPrivateEndpointOutputWithContext(context.Background())
}

func (i PrivateEndpointArgs) ToPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointOutput)
}

func (i PrivateEndpointArgs) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return i.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i PrivateEndpointArgs) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointOutput).ToPrivateEndpointPtrOutputWithContext(ctx)
}

// PrivateEndpointPtrInput is an input type that accepts PrivateEndpointArgs, PrivateEndpointPtr and PrivateEndpointPtrOutput values.
// You can construct a concrete instance of `PrivateEndpointPtrInput` via:
//
//	        PrivateEndpointArgs{...}
//
//	or:
//
//	        nil
type PrivateEndpointPtrInput interface {
	pulumi.Input

	ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput
	ToPrivateEndpointPtrOutputWithContext(context.Context) PrivateEndpointPtrOutput
}

type privateEndpointPtrType PrivateEndpointArgs

func PrivateEndpointPtr(v *PrivateEndpointArgs) PrivateEndpointPtrInput {
	return (*privateEndpointPtrType)(v)
}

func (*privateEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpoint)(nil)).Elem()
}

func (i *privateEndpointPtrType) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return i.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i *privateEndpointPtrType) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointPtrOutput)
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection
type PrivateEndpointOutput struct{ *pulumi.OutputState }

func (PrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointOutput) ToPrivateEndpointOutput() PrivateEndpointOutput {
	return o
}

func (o PrivateEndpointOutput) ToPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointOutput {
	return o
}

func (o PrivateEndpointOutput) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return o.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointOutput) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpoint) *PrivateEndpoint {
		return &v
	}).(PrivateEndpointPtrOutput)
}

// Gets or sets id
func (o PrivateEndpointOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpoint) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointPtrOutput) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointPtrOutput) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointPtrOutput) Elem() PrivateEndpointOutput {
	return o.ApplyT(func(v *PrivateEndpoint) PrivateEndpoint {
		if v != nil {
			return *v
		}
		var ret PrivateEndpoint
		return ret
	}).(PrivateEndpointOutput)
}

// Gets or sets id
func (o PrivateEndpointPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionType struct {
	// Group Ids for the Private Endpoint
	GroupIds []string `pulumi:"groupIds"`
	// Gets or sets private endpoint associated with the private endpoint connection
	PrivateEndpoint *PrivateEndpoint `pulumi:"privateEndpoint"`
	// Gets or sets private link service connection state
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState `pulumi:"privateLinkServiceConnectionState"`
	// Gets or sets provisioning state of the private endpoint connection
	ProvisioningState *string `pulumi:"provisioningState"`
}

// PrivateEndpointConnectionTypeInput is an input type that accepts PrivateEndpointConnectionTypeArgs and PrivateEndpointConnectionTypeOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionTypeInput` via:
//
//	PrivateEndpointConnectionTypeArgs{...}
type PrivateEndpointConnectionTypeInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput
	ToPrivateEndpointConnectionTypeOutputWithContext(context.Context) PrivateEndpointConnectionTypeOutput
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionTypeArgs struct {
	// Group Ids for the Private Endpoint
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
	// Gets or sets private endpoint associated with the private endpoint connection
	PrivateEndpoint PrivateEndpointPtrInput `pulumi:"privateEndpoint"`
	// Gets or sets private link service connection state
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStatePtrInput `pulumi:"privateLinkServiceConnectionState"`
	// Gets or sets provisioning state of the private endpoint connection
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (PrivateEndpointConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionType)(nil)).Elem()
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput {
	return i.ToPrivateEndpointConnectionTypeOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypeOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionTypeOutput)
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput {
	return i.ToPrivateEndpointConnectionTypePtrOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionTypeOutput).ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx)
}

// PrivateEndpointConnectionTypePtrInput is an input type that accepts PrivateEndpointConnectionTypeArgs, PrivateEndpointConnectionTypePtr and PrivateEndpointConnectionTypePtrOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionTypePtrInput` via:
//
//	        PrivateEndpointConnectionTypeArgs{...}
//
//	or:
//
//	        nil
type PrivateEndpointConnectionTypePtrInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput
	ToPrivateEndpointConnectionTypePtrOutputWithContext(context.Context) PrivateEndpointConnectionTypePtrOutput
}

type privateEndpointConnectionTypePtrType PrivateEndpointConnectionTypeArgs

func PrivateEndpointConnectionTypePtr(v *PrivateEndpointConnectionTypeArgs) PrivateEndpointConnectionTypePtrInput {
	return (*privateEndpointConnectionTypePtrType)(v)
}

func (*privateEndpointConnectionTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionType)(nil)).Elem()
}

func (i *privateEndpointConnectionTypePtrType) ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput {
	return i.ToPrivateEndpointConnectionTypePtrOutputWithContext(context.Background())
}

func (i *privateEndpointConnectionTypePtrType) ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionTypePtrOutput)
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionTypeOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionType)(nil)).Elem()
}

func (o PrivateEndpointConnectionTypeOutput) ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput {
	return o
}

func (o PrivateEndpointConnectionTypeOutput) ToPrivateEndpointConnectionTypeOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypeOutput {
	return o
}

func (o PrivateEndpointConnectionTypeOutput) ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput {
	return o.ToPrivateEndpointConnectionTypePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointConnectionTypeOutput) ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointConnectionType) *PrivateEndpointConnectionType {
		return &v
	}).(PrivateEndpointConnectionTypePtrOutput)
}

// Group Ids for the Private Endpoint
func (o PrivateEndpointConnectionTypeOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionType) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Gets or sets private endpoint associated with the private endpoint connection
func (o PrivateEndpointConnectionTypeOutput) PrivateEndpoint() PrivateEndpointPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionType) *PrivateEndpoint { return v.PrivateEndpoint }).(PrivateEndpointPtrOutput)
}

// Gets or sets private link service connection state
func (o PrivateEndpointConnectionTypeOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionType) *PrivateLinkServiceConnectionState {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// Gets or sets provisioning state of the private endpoint connection
func (o PrivateEndpointConnectionTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type PrivateEndpointConnectionTypePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionType)(nil)).Elem()
}

func (o PrivateEndpointConnectionTypePtrOutput) ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput {
	return o
}

func (o PrivateEndpointConnectionTypePtrOutput) ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypePtrOutput {
	return o
}

func (o PrivateEndpointConnectionTypePtrOutput) Elem() PrivateEndpointConnectionTypeOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionType) PrivateEndpointConnectionType {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointConnectionType
		return ret
	}).(PrivateEndpointConnectionTypeOutput)
}

// Group Ids for the Private Endpoint
func (o PrivateEndpointConnectionTypePtrOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionType) []string {
		if v == nil {
			return nil
		}
		return v.GroupIds
	}).(pulumi.StringArrayOutput)
}

// Gets or sets private endpoint associated with the private endpoint connection
func (o PrivateEndpointConnectionTypePtrOutput) PrivateEndpoint() PrivateEndpointPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionType) *PrivateEndpoint {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoint
	}).(PrivateEndpointPtrOutput)
}

// Gets or sets private link service connection state
func (o PrivateEndpointConnectionTypePtrOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionType) *PrivateLinkServiceConnectionState {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// Gets or sets provisioning state of the private endpoint connection
func (o PrivateEndpointConnectionTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionResponse struct {
	// Group Ids for the Private Endpoint
	GroupIds []string `pulumi:"groupIds"`
	// Gets or sets private endpoint associated with the private endpoint connection
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// Gets or sets private link service connection state
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// Gets or sets provisioning state of the private endpoint connection
	ProvisioningState *string `pulumi:"provisioningState"`
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// Group Ids for the Private Endpoint
func (o PrivateEndpointConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Gets or sets private endpoint associated with the private endpoint connection
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// Gets or sets private link service connection state
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// Gets or sets provisioning state of the private endpoint connection
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Information to be stored in Vault properties as an element of privateEndpointConnections List.
type PrivateEndpointConnectionVaultPropertiesResponse struct {
	// Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.
	Id string `pulumi:"id"`
	// The location of the private Endpoint connection
	Location string `pulumi:"location"`
	// The name of the private Endpoint Connection
	Name string `pulumi:"name"`
	// Private Endpoint Connection Response Properties.
	Properties VaultPrivateEndpointConnectionResponse `pulumi:"properties"`
	// The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections
	Type string `pulumi:"type"`
}

// Information to be stored in Vault properties as an element of privateEndpointConnections List.
type PrivateEndpointConnectionVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionVaultPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) ToPrivateEndpointConnectionVaultPropertiesResponseOutput() PrivateEndpointConnectionVaultPropertiesResponseOutput {
	return o
}

func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) ToPrivateEndpointConnectionVaultPropertiesResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionVaultPropertiesResponseOutput {
	return o
}

// Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the private Endpoint connection
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the private Endpoint Connection
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Private Endpoint Connection Response Properties.
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Properties() VaultPrivateEndpointConnectionResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) VaultPrivateEndpointConnectionResponse {
		return v.Properties
	}).(VaultPrivateEndpointConnectionResponseOutput)
}

// The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionVaultPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionVaultPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) ToPrivateEndpointConnectionVaultPropertiesResponseArrayOutput() PrivateEndpointConnectionVaultPropertiesResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) ToPrivateEndpointConnectionVaultPropertiesResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionVaultPropertiesResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionVaultPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionVaultPropertiesResponse {
		return vs[0].([]PrivateEndpointConnectionVaultPropertiesResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionVaultPropertiesResponseOutput)
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection.
type PrivateEndpointResponse struct {
	// Gets or sets id.
	Id string `pulumi:"id"`
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// Gets or sets id.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// Gets or sets id.
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionState struct {
	// Gets or sets actions required
	ActionsRequired *string `pulumi:"actionsRequired"`
	// Gets or sets description
	Description *string `pulumi:"description"`
	// Gets or sets the status
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionStateArgs struct {
	// Gets or sets actions required
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// Gets or sets description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Gets or sets the status
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput).ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStatePtrInput is an input type that accepts PrivateLinkServiceConnectionStateArgs, PrivateLinkServiceConnectionStatePtr and PrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStatePtrInput` via:
//
//	        PrivateLinkServiceConnectionStateArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput
	ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStatePtrOutput
}

type privateLinkServiceConnectionStatePtrType PrivateLinkServiceConnectionStateArgs

func PrivateLinkServiceConnectionStatePtr(v *PrivateLinkServiceConnectionStateArgs) PrivateLinkServiceConnectionStatePtrInput {
	return (*privateLinkServiceConnectionStatePtrType)(v)
}

func (*privateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePtrOutput)
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServiceConnectionState) *PrivateLinkServiceConnectionState {
		return &v
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// Gets or sets actions required
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// Gets or sets description
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets or sets the status
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) Elem() PrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) PrivateLinkServiceConnectionState {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionState
		return ret
	}).(PrivateLinkServiceConnectionStateOutput)
}

// Gets or sets actions required
func (o PrivateLinkServiceConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// Gets or sets description
func (o PrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the status
func (o PrivateLinkServiceConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionStateResponse struct {
	// Gets or sets actions required
	ActionsRequired *string `pulumi:"actionsRequired"`
	// Gets or sets description
	Description *string `pulumi:"description"`
	// Gets or sets the status
	Status *string `pulumi:"status"`
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// Gets or sets actions required
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// Gets or sets description
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets or sets the status
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionStateResponse
		return ret
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// Gets or sets actions required
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// Gets or sets description
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the status
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Process server details.
type ProcessServerDetailsResponse struct {
	// The available memory.
	AvailableMemoryInBytes float64 `pulumi:"availableMemoryInBytes"`
	// The available disk space.
	AvailableSpaceInBytes float64 `pulumi:"availableSpaceInBytes"`
	// The process server Bios Id.
	BiosId string `pulumi:"biosId"`
	// The disk usage status.
	DiskUsageStatus string `pulumi:"diskUsageStatus"`
	// The fabric object Id.
	FabricObjectId string `pulumi:"fabricObjectId"`
	// The process server Fqdn.
	Fqdn string `pulumi:"fqdn"`
	// The free disk space percentage.
	FreeSpacePercentage float64 `pulumi:"freeSpacePercentage"`
	// The health of the process server.
	Health string `pulumi:"health"`
	// The health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The historic health of the process server based on the health in last 24 hours.
	HistoricHealth string `pulumi:"historicHealth"`
	// The process server Id.
	Id string `pulumi:"id"`
	// The list of IP addresses for communicating with the RCM component.
	IpAddresses []string `pulumi:"ipAddresses"`
	// The last heartbeat received from the process server.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The memory usage percentage.
	MemoryUsagePercentage float64 `pulumi:"memoryUsagePercentage"`
	// The memory usage status.
	MemoryUsageStatus string `pulumi:"memoryUsageStatus"`
	// The process server name.
	Name string `pulumi:"name"`
	// The processor usage percentage.
	ProcessorUsagePercentage float64 `pulumi:"processorUsagePercentage"`
	// The processor usage status.
	ProcessorUsageStatus string `pulumi:"processorUsageStatus"`
	// The protected item count.
	ProtectedItemCount int `pulumi:"protectedItemCount"`
	// The system load.
	SystemLoad float64 `pulumi:"systemLoad"`
	// The system load status.
	SystemLoadStatus string `pulumi:"systemLoadStatus"`
	// The throughput in bytes.
	ThroughputInBytes float64 `pulumi:"throughputInBytes"`
	// The throughput status.
	ThroughputStatus string `pulumi:"throughputStatus"`
	// The uploading pending data in bytes.
	ThroughputUploadPendingDataInBytes float64 `pulumi:"throughputUploadPendingDataInBytes"`
	// The total memory.
	TotalMemoryInBytes float64 `pulumi:"totalMemoryInBytes"`
	// The total disk space.
	TotalSpaceInBytes float64 `pulumi:"totalSpaceInBytes"`
	// The used memory.
	UsedMemoryInBytes float64 `pulumi:"usedMemoryInBytes"`
	// The used disk space.
	UsedSpaceInBytes float64 `pulumi:"usedSpaceInBytes"`
	// The version.
	Version string `pulumi:"version"`
}

// Process server details.
type ProcessServerDetailsResponseOutput struct{ *pulumi.OutputState }

func (ProcessServerDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessServerDetailsResponse)(nil)).Elem()
}

func (o ProcessServerDetailsResponseOutput) ToProcessServerDetailsResponseOutput() ProcessServerDetailsResponseOutput {
	return o
}

func (o ProcessServerDetailsResponseOutput) ToProcessServerDetailsResponseOutputWithContext(ctx context.Context) ProcessServerDetailsResponseOutput {
	return o
}

// The available memory.
func (o ProcessServerDetailsResponseOutput) AvailableMemoryInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v ProcessServerDetailsResponse) float64 { return v.AvailableMemoryInBytes }).(pulumi.Float64Output)
}

// The available disk space.
func (o ProcessServerDetailsResponseOutput) AvailableSpaceInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v ProcessServerDetailsResponse) float64 { return v.AvailableSpaceInBytes }).(pulumi.Float64Output)
}

// The process server Bios Id.
func (o ProcessServerDetailsResponseOutput) BiosId() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) string { return v.BiosId }).(pulumi.StringOutput)
}

// The disk usage status.
func (o ProcessServerDetailsResponseOutput) DiskUsageStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) string { return v.DiskUsageStatus }).(pulumi.StringOutput)
}

// The fabric object Id.
func (o ProcessServerDetailsResponseOutput) FabricObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) string { return v.FabricObjectId }).(pulumi.StringOutput)
}

// The process server Fqdn.
func (o ProcessServerDetailsResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The free disk space percentage.
func (o ProcessServerDetailsResponseOutput) FreeSpacePercentage() pulumi.Float64Output {
	return o.ApplyT(func(v ProcessServerDetailsResponse) float64 { return v.FreeSpacePercentage }).(pulumi.Float64Output)
}

// The health of the process server.
func (o ProcessServerDetailsResponseOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) string { return v.Health }).(pulumi.StringOutput)
}

// The health errors.
func (o ProcessServerDetailsResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The historic health of the process server based on the health in last 24 hours.
func (o ProcessServerDetailsResponseOutput) HistoricHealth() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) string { return v.HistoricHealth }).(pulumi.StringOutput)
}

// The process server Id.
func (o ProcessServerDetailsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The list of IP addresses for communicating with the RCM component.
func (o ProcessServerDetailsResponseOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// The last heartbeat received from the process server.
func (o ProcessServerDetailsResponseOutput) LastHeartbeatUtc() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) string { return v.LastHeartbeatUtc }).(pulumi.StringOutput)
}

// The memory usage percentage.
func (o ProcessServerDetailsResponseOutput) MemoryUsagePercentage() pulumi.Float64Output {
	return o.ApplyT(func(v ProcessServerDetailsResponse) float64 { return v.MemoryUsagePercentage }).(pulumi.Float64Output)
}

// The memory usage status.
func (o ProcessServerDetailsResponseOutput) MemoryUsageStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) string { return v.MemoryUsageStatus }).(pulumi.StringOutput)
}

// The process server name.
func (o ProcessServerDetailsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The processor usage percentage.
func (o ProcessServerDetailsResponseOutput) ProcessorUsagePercentage() pulumi.Float64Output {
	return o.ApplyT(func(v ProcessServerDetailsResponse) float64 { return v.ProcessorUsagePercentage }).(pulumi.Float64Output)
}

// The processor usage status.
func (o ProcessServerDetailsResponseOutput) ProcessorUsageStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) string { return v.ProcessorUsageStatus }).(pulumi.StringOutput)
}

// The protected item count.
func (o ProcessServerDetailsResponseOutput) ProtectedItemCount() pulumi.IntOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) int { return v.ProtectedItemCount }).(pulumi.IntOutput)
}

// The system load.
func (o ProcessServerDetailsResponseOutput) SystemLoad() pulumi.Float64Output {
	return o.ApplyT(func(v ProcessServerDetailsResponse) float64 { return v.SystemLoad }).(pulumi.Float64Output)
}

// The system load status.
func (o ProcessServerDetailsResponseOutput) SystemLoadStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) string { return v.SystemLoadStatus }).(pulumi.StringOutput)
}

// The throughput in bytes.
func (o ProcessServerDetailsResponseOutput) ThroughputInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v ProcessServerDetailsResponse) float64 { return v.ThroughputInBytes }).(pulumi.Float64Output)
}

// The throughput status.
func (o ProcessServerDetailsResponseOutput) ThroughputStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) string { return v.ThroughputStatus }).(pulumi.StringOutput)
}

// The uploading pending data in bytes.
func (o ProcessServerDetailsResponseOutput) ThroughputUploadPendingDataInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v ProcessServerDetailsResponse) float64 { return v.ThroughputUploadPendingDataInBytes }).(pulumi.Float64Output)
}

// The total memory.
func (o ProcessServerDetailsResponseOutput) TotalMemoryInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v ProcessServerDetailsResponse) float64 { return v.TotalMemoryInBytes }).(pulumi.Float64Output)
}

// The total disk space.
func (o ProcessServerDetailsResponseOutput) TotalSpaceInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v ProcessServerDetailsResponse) float64 { return v.TotalSpaceInBytes }).(pulumi.Float64Output)
}

// The used memory.
func (o ProcessServerDetailsResponseOutput) UsedMemoryInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v ProcessServerDetailsResponse) float64 { return v.UsedMemoryInBytes }).(pulumi.Float64Output)
}

// The used disk space.
func (o ProcessServerDetailsResponseOutput) UsedSpaceInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v ProcessServerDetailsResponse) float64 { return v.UsedSpaceInBytes }).(pulumi.Float64Output)
}

// The version.
func (o ProcessServerDetailsResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerDetailsResponse) string { return v.Version }).(pulumi.StringOutput)
}

type ProcessServerDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (ProcessServerDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessServerDetailsResponse)(nil)).Elem()
}

func (o ProcessServerDetailsResponseArrayOutput) ToProcessServerDetailsResponseArrayOutput() ProcessServerDetailsResponseArrayOutput {
	return o
}

func (o ProcessServerDetailsResponseArrayOutput) ToProcessServerDetailsResponseArrayOutputWithContext(ctx context.Context) ProcessServerDetailsResponseArrayOutput {
	return o
}

func (o ProcessServerDetailsResponseArrayOutput) Index(i pulumi.IntInput) ProcessServerDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessServerDetailsResponse {
		return vs[0].([]ProcessServerDetailsResponse)[vs[1].(int)]
	}).(ProcessServerDetailsResponseOutput)
}

// Details of the Process Server.
type ProcessServerResponse struct {
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// The version of the scout component on the server.
	AgentVersion *string `pulumi:"agentVersion"`
	// The agent version details.
	AgentVersionDetails *VersionDetailsResponse `pulumi:"agentVersionDetails"`
	// The available memory.
	AvailableMemoryInBytes *float64 `pulumi:"availableMemoryInBytes"`
	// The available space.
	AvailableSpaceInBytes *float64 `pulumi:"availableSpaceInBytes"`
	// The percentage of the CPU load.
	CpuLoad *string `pulumi:"cpuLoad"`
	// The CPU load status.
	CpuLoadStatus *string `pulumi:"cpuLoadStatus"`
	// The Process Server's friendly name.
	FriendlyName *string `pulumi:"friendlyName"`
	// The health of Process Server.
	Health string `pulumi:"health"`
	// Health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The agent generated Id.
	HostId *string `pulumi:"hostId"`
	// The Process Server Id.
	Id *string `pulumi:"id"`
	// The IP address of the server.
	IpAddress *string `pulumi:"ipAddress"`
	// The last heartbeat received from the server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The servers configured with this PS.
	MachineCount *string `pulumi:"machineCount"`
	// The MARS communication status.
	MarsCommunicationStatus string `pulumi:"marsCommunicationStatus"`
	// The MARS registration status.
	MarsRegistrationStatus string `pulumi:"marsRegistrationStatus"`
	// The memory usage status.
	MemoryUsageStatus *string `pulumi:"memoryUsageStatus"`
	// The list of the mobility service updates available on the Process Server.
	MobilityServiceUpdates []MobilityServiceUpdateResponse `pulumi:"mobilityServiceUpdates"`
	// The OS type of the server.
	OsType *string `pulumi:"osType"`
	// OS Version of the process server. Note: This will get populated if user has CS version greater than 9.12.0.0.
	OsVersion *string `pulumi:"osVersion"`
	// The PS service status.
	PsServiceStatus *string `pulumi:"psServiceStatus"`
	// The process server stats refresh time.
	PsStatsRefreshTime string `pulumi:"psStatsRefreshTime"`
	// The number of replication pairs configured in this PS.
	ReplicationPairCount *string `pulumi:"replicationPairCount"`
	// The space usage status.
	SpaceUsageStatus *string `pulumi:"spaceUsageStatus"`
	// The PS SSL cert expiry date.
	SslCertExpiryDate *string `pulumi:"sslCertExpiryDate"`
	// CS SSL cert expiry date.
	SslCertExpiryRemainingDays *int `pulumi:"sslCertExpiryRemainingDays"`
	// The percentage of the system load.
	SystemLoad *string `pulumi:"systemLoad"`
	// The system load status.
	SystemLoadStatus *string `pulumi:"systemLoadStatus"`
	// The throughput in bytes.
	ThroughputInBytes float64 `pulumi:"throughputInBytes"`
	// The throughput in MBps.
	ThroughputInMBps float64 `pulumi:"throughputInMBps"`
	// The throughput status.
	ThroughputStatus string `pulumi:"throughputStatus"`
	// The uploading pending data in bytes.
	ThroughputUploadPendingDataInBytes float64 `pulumi:"throughputUploadPendingDataInBytes"`
	// The total memory.
	TotalMemoryInBytes *float64 `pulumi:"totalMemoryInBytes"`
	// The total space.
	TotalSpaceInBytes *float64 `pulumi:"totalSpaceInBytes"`
	// Version status.
	VersionStatus *string `pulumi:"versionStatus"`
}

// Details of the Process Server.
type ProcessServerResponseOutput struct{ *pulumi.OutputState }

func (ProcessServerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProcessServerResponse)(nil)).Elem()
}

func (o ProcessServerResponseOutput) ToProcessServerResponseOutput() ProcessServerResponseOutput {
	return o
}

func (o ProcessServerResponseOutput) ToProcessServerResponseOutputWithContext(ctx context.Context) ProcessServerResponseOutput {
	return o
}

// Agent expiry date.
func (o ProcessServerResponseOutput) AgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.AgentExpiryDate }).(pulumi.StringPtrOutput)
}

// The version of the scout component on the server.
func (o ProcessServerResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// The agent version details.
func (o ProcessServerResponseOutput) AgentVersionDetails() VersionDetailsResponsePtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *VersionDetailsResponse { return v.AgentVersionDetails }).(VersionDetailsResponsePtrOutput)
}

// The available memory.
func (o ProcessServerResponseOutput) AvailableMemoryInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *float64 { return v.AvailableMemoryInBytes }).(pulumi.Float64PtrOutput)
}

// The available space.
func (o ProcessServerResponseOutput) AvailableSpaceInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *float64 { return v.AvailableSpaceInBytes }).(pulumi.Float64PtrOutput)
}

// The percentage of the CPU load.
func (o ProcessServerResponseOutput) CpuLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.CpuLoad }).(pulumi.StringPtrOutput)
}

// The CPU load status.
func (o ProcessServerResponseOutput) CpuLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.CpuLoadStatus }).(pulumi.StringPtrOutput)
}

// The Process Server's friendly name.
func (o ProcessServerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The health of Process Server.
func (o ProcessServerResponseOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerResponse) string { return v.Health }).(pulumi.StringOutput)
}

// Health errors.
func (o ProcessServerResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v ProcessServerResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The agent generated Id.
func (o ProcessServerResponseOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.HostId }).(pulumi.StringPtrOutput)
}

// The Process Server Id.
func (o ProcessServerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IP address of the server.
func (o ProcessServerResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The last heartbeat received from the server.
func (o ProcessServerResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The servers configured with this PS.
func (o ProcessServerResponseOutput) MachineCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.MachineCount }).(pulumi.StringPtrOutput)
}

// The MARS communication status.
func (o ProcessServerResponseOutput) MarsCommunicationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerResponse) string { return v.MarsCommunicationStatus }).(pulumi.StringOutput)
}

// The MARS registration status.
func (o ProcessServerResponseOutput) MarsRegistrationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerResponse) string { return v.MarsRegistrationStatus }).(pulumi.StringOutput)
}

// The memory usage status.
func (o ProcessServerResponseOutput) MemoryUsageStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.MemoryUsageStatus }).(pulumi.StringPtrOutput)
}

// The list of the mobility service updates available on the Process Server.
func (o ProcessServerResponseOutput) MobilityServiceUpdates() MobilityServiceUpdateResponseArrayOutput {
	return o.ApplyT(func(v ProcessServerResponse) []MobilityServiceUpdateResponse { return v.MobilityServiceUpdates }).(MobilityServiceUpdateResponseArrayOutput)
}

// The OS type of the server.
func (o ProcessServerResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// OS Version of the process server. Note: This will get populated if user has CS version greater than 9.12.0.0.
func (o ProcessServerResponseOutput) OsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.OsVersion }).(pulumi.StringPtrOutput)
}

// The PS service status.
func (o ProcessServerResponseOutput) PsServiceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.PsServiceStatus }).(pulumi.StringPtrOutput)
}

// The process server stats refresh time.
func (o ProcessServerResponseOutput) PsStatsRefreshTime() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerResponse) string { return v.PsStatsRefreshTime }).(pulumi.StringOutput)
}

// The number of replication pairs configured in this PS.
func (o ProcessServerResponseOutput) ReplicationPairCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.ReplicationPairCount }).(pulumi.StringPtrOutput)
}

// The space usage status.
func (o ProcessServerResponseOutput) SpaceUsageStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.SpaceUsageStatus }).(pulumi.StringPtrOutput)
}

// The PS SSL cert expiry date.
func (o ProcessServerResponseOutput) SslCertExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.SslCertExpiryDate }).(pulumi.StringPtrOutput)
}

// CS SSL cert expiry date.
func (o ProcessServerResponseOutput) SslCertExpiryRemainingDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *int { return v.SslCertExpiryRemainingDays }).(pulumi.IntPtrOutput)
}

// The percentage of the system load.
func (o ProcessServerResponseOutput) SystemLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.SystemLoad }).(pulumi.StringPtrOutput)
}

// The system load status.
func (o ProcessServerResponseOutput) SystemLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.SystemLoadStatus }).(pulumi.StringPtrOutput)
}

// The throughput in bytes.
func (o ProcessServerResponseOutput) ThroughputInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v ProcessServerResponse) float64 { return v.ThroughputInBytes }).(pulumi.Float64Output)
}

// The throughput in MBps.
func (o ProcessServerResponseOutput) ThroughputInMBps() pulumi.Float64Output {
	return o.ApplyT(func(v ProcessServerResponse) float64 { return v.ThroughputInMBps }).(pulumi.Float64Output)
}

// The throughput status.
func (o ProcessServerResponseOutput) ThroughputStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ProcessServerResponse) string { return v.ThroughputStatus }).(pulumi.StringOutput)
}

// The uploading pending data in bytes.
func (o ProcessServerResponseOutput) ThroughputUploadPendingDataInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v ProcessServerResponse) float64 { return v.ThroughputUploadPendingDataInBytes }).(pulumi.Float64Output)
}

// The total memory.
func (o ProcessServerResponseOutput) TotalMemoryInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *float64 { return v.TotalMemoryInBytes }).(pulumi.Float64PtrOutput)
}

// The total space.
func (o ProcessServerResponseOutput) TotalSpaceInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *float64 { return v.TotalSpaceInBytes }).(pulumi.Float64PtrOutput)
}

// Version status.
func (o ProcessServerResponseOutput) VersionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProcessServerResponse) *string { return v.VersionStatus }).(pulumi.StringPtrOutput)
}

type ProcessServerResponseArrayOutput struct{ *pulumi.OutputState }

func (ProcessServerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProcessServerResponse)(nil)).Elem()
}

func (o ProcessServerResponseArrayOutput) ToProcessServerResponseArrayOutput() ProcessServerResponseArrayOutput {
	return o
}

func (o ProcessServerResponseArrayOutput) ToProcessServerResponseArrayOutputWithContext(ctx context.Context) ProcessServerResponseArrayOutput {
	return o
}

func (o ProcessServerResponseArrayOutput) Index(i pulumi.IntInput) ProcessServerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProcessServerResponse {
		return vs[0].([]ProcessServerResponse)[vs[1].(int)]
	}).(ProcessServerResponseOutput)
}

// Protection container mapping properties.
type ProtectionContainerMappingPropertiesResponse struct {
	// Health of pairing.
	Health *string `pulumi:"health"`
	// Health error.
	HealthErrorDetails []HealthErrorResponse `pulumi:"healthErrorDetails"`
	// Friendly name of replication policy.
	PolicyFriendlyName *string `pulumi:"policyFriendlyName"`
	// Policy ARM Id.
	PolicyId *string `pulumi:"policyId"`
	// Provider specific provider details.
	ProviderSpecificDetails interface{} `pulumi:"providerSpecificDetails"`
	// Friendly name of source fabric.
	SourceFabricFriendlyName *string `pulumi:"sourceFabricFriendlyName"`
	// Friendly name of source protection container.
	SourceProtectionContainerFriendlyName *string `pulumi:"sourceProtectionContainerFriendlyName"`
	// Association Status.
	State *string `pulumi:"state"`
	// Friendly name of target fabric.
	TargetFabricFriendlyName *string `pulumi:"targetFabricFriendlyName"`
	// Friendly name of paired container.
	TargetProtectionContainerFriendlyName *string `pulumi:"targetProtectionContainerFriendlyName"`
	// Paired protection container ARM ID.
	TargetProtectionContainerId *string `pulumi:"targetProtectionContainerId"`
}

// Protection container mapping properties.
type ProtectionContainerMappingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ProtectionContainerMappingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionContainerMappingPropertiesResponse)(nil)).Elem()
}

func (o ProtectionContainerMappingPropertiesResponseOutput) ToProtectionContainerMappingPropertiesResponseOutput() ProtectionContainerMappingPropertiesResponseOutput {
	return o
}

func (o ProtectionContainerMappingPropertiesResponseOutput) ToProtectionContainerMappingPropertiesResponseOutputWithContext(ctx context.Context) ProtectionContainerMappingPropertiesResponseOutput {
	return o
}

// Health of pairing.
func (o ProtectionContainerMappingPropertiesResponseOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.Health }).(pulumi.StringPtrOutput)
}

// Health error.
func (o ProtectionContainerMappingPropertiesResponseOutput) HealthErrorDetails() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) []HealthErrorResponse {
		return v.HealthErrorDetails
	}).(HealthErrorResponseArrayOutput)
}

// Friendly name of replication policy.
func (o ProtectionContainerMappingPropertiesResponseOutput) PolicyFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.PolicyFriendlyName }).(pulumi.StringPtrOutput)
}

// Policy ARM Id.
func (o ProtectionContainerMappingPropertiesResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Provider specific provider details.
func (o ProtectionContainerMappingPropertiesResponseOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) interface{} { return v.ProviderSpecificDetails }).(pulumi.AnyOutput)
}

// Friendly name of source fabric.
func (o ProtectionContainerMappingPropertiesResponseOutput) SourceFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.SourceFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// Friendly name of source protection container.
func (o ProtectionContainerMappingPropertiesResponseOutput) SourceProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string {
		return v.SourceProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Association Status.
func (o ProtectionContainerMappingPropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Friendly name of target fabric.
func (o ProtectionContainerMappingPropertiesResponseOutput) TargetFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.TargetFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// Friendly name of paired container.
func (o ProtectionContainerMappingPropertiesResponseOutput) TargetProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string {
		return v.TargetProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// Paired protection container ARM ID.
func (o ProtectionContainerMappingPropertiesResponseOutput) TargetProtectionContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingPropertiesResponse) *string { return v.TargetProtectionContainerId }).(pulumi.StringPtrOutput)
}

// Push installer details.
type PushInstallerDetailsResponse struct {
	// The push installer Bios Id.
	BiosId string `pulumi:"biosId"`
	// The fabric object Id.
	FabricObjectId string `pulumi:"fabricObjectId"`
	// The push installer Fqdn.
	Fqdn string `pulumi:"fqdn"`
	// The health of the push installer.
	Health string `pulumi:"health"`
	// The health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The push installer Id.
	Id string `pulumi:"id"`
	// The last heartbeat received from the push installer.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The push installer name.
	Name string `pulumi:"name"`
	// The version.
	Version string `pulumi:"version"`
}

// Push installer details.
type PushInstallerDetailsResponseOutput struct{ *pulumi.OutputState }

func (PushInstallerDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushInstallerDetailsResponse)(nil)).Elem()
}

func (o PushInstallerDetailsResponseOutput) ToPushInstallerDetailsResponseOutput() PushInstallerDetailsResponseOutput {
	return o
}

func (o PushInstallerDetailsResponseOutput) ToPushInstallerDetailsResponseOutputWithContext(ctx context.Context) PushInstallerDetailsResponseOutput {
	return o
}

// The push installer Bios Id.
func (o PushInstallerDetailsResponseOutput) BiosId() pulumi.StringOutput {
	return o.ApplyT(func(v PushInstallerDetailsResponse) string { return v.BiosId }).(pulumi.StringOutput)
}

// The fabric object Id.
func (o PushInstallerDetailsResponseOutput) FabricObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v PushInstallerDetailsResponse) string { return v.FabricObjectId }).(pulumi.StringOutput)
}

// The push installer Fqdn.
func (o PushInstallerDetailsResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v PushInstallerDetailsResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The health of the push installer.
func (o PushInstallerDetailsResponseOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v PushInstallerDetailsResponse) string { return v.Health }).(pulumi.StringOutput)
}

// The health errors.
func (o PushInstallerDetailsResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v PushInstallerDetailsResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The push installer Id.
func (o PushInstallerDetailsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PushInstallerDetailsResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The last heartbeat received from the push installer.
func (o PushInstallerDetailsResponseOutput) LastHeartbeatUtc() pulumi.StringOutput {
	return o.ApplyT(func(v PushInstallerDetailsResponse) string { return v.LastHeartbeatUtc }).(pulumi.StringOutput)
}

// The push installer name.
func (o PushInstallerDetailsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PushInstallerDetailsResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The version.
func (o PushInstallerDetailsResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v PushInstallerDetailsResponse) string { return v.Version }).(pulumi.StringOutput)
}

type PushInstallerDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (PushInstallerDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PushInstallerDetailsResponse)(nil)).Elem()
}

func (o PushInstallerDetailsResponseArrayOutput) ToPushInstallerDetailsResponseArrayOutput() PushInstallerDetailsResponseArrayOutput {
	return o
}

func (o PushInstallerDetailsResponseArrayOutput) ToPushInstallerDetailsResponseArrayOutputWithContext(ctx context.Context) PushInstallerDetailsResponseArrayOutput {
	return o
}

func (o PushInstallerDetailsResponseArrayOutput) Index(i pulumi.IntInput) PushInstallerDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PushInstallerDetailsResponse {
		return vs[0].([]PushInstallerDetailsResponse)[vs[1].(int)]
	}).(PushInstallerDetailsResponseOutput)
}

// RCM proxy details.
type RcmProxyDetailsResponse struct {
	// The RCM proxy Bios Id.
	BiosId string `pulumi:"biosId"`
	// The client authentication type.
	ClientAuthenticationType string `pulumi:"clientAuthenticationType"`
	// The fabric object Id.
	FabricObjectId string `pulumi:"fabricObjectId"`
	// The RCM proxy Fqdn.
	Fqdn string `pulumi:"fqdn"`
	// The health of the RCM proxy.
	Health string `pulumi:"health"`
	// The health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The RCM proxy Id.
	Id string `pulumi:"id"`
	// The last heartbeat received from the RCM proxy.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The RCM proxy name.
	Name string `pulumi:"name"`
	// The version.
	Version string `pulumi:"version"`
}

// RCM proxy details.
type RcmProxyDetailsResponseOutput struct{ *pulumi.OutputState }

func (RcmProxyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RcmProxyDetailsResponse)(nil)).Elem()
}

func (o RcmProxyDetailsResponseOutput) ToRcmProxyDetailsResponseOutput() RcmProxyDetailsResponseOutput {
	return o
}

func (o RcmProxyDetailsResponseOutput) ToRcmProxyDetailsResponseOutputWithContext(ctx context.Context) RcmProxyDetailsResponseOutput {
	return o
}

// The RCM proxy Bios Id.
func (o RcmProxyDetailsResponseOutput) BiosId() pulumi.StringOutput {
	return o.ApplyT(func(v RcmProxyDetailsResponse) string { return v.BiosId }).(pulumi.StringOutput)
}

// The client authentication type.
func (o RcmProxyDetailsResponseOutput) ClientAuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v RcmProxyDetailsResponse) string { return v.ClientAuthenticationType }).(pulumi.StringOutput)
}

// The fabric object Id.
func (o RcmProxyDetailsResponseOutput) FabricObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v RcmProxyDetailsResponse) string { return v.FabricObjectId }).(pulumi.StringOutput)
}

// The RCM proxy Fqdn.
func (o RcmProxyDetailsResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v RcmProxyDetailsResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The health of the RCM proxy.
func (o RcmProxyDetailsResponseOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v RcmProxyDetailsResponse) string { return v.Health }).(pulumi.StringOutput)
}

// The health errors.
func (o RcmProxyDetailsResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v RcmProxyDetailsResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The RCM proxy Id.
func (o RcmProxyDetailsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RcmProxyDetailsResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The last heartbeat received from the RCM proxy.
func (o RcmProxyDetailsResponseOutput) LastHeartbeatUtc() pulumi.StringOutput {
	return o.ApplyT(func(v RcmProxyDetailsResponse) string { return v.LastHeartbeatUtc }).(pulumi.StringOutput)
}

// The RCM proxy name.
func (o RcmProxyDetailsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RcmProxyDetailsResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The version.
func (o RcmProxyDetailsResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v RcmProxyDetailsResponse) string { return v.Version }).(pulumi.StringOutput)
}

type RcmProxyDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (RcmProxyDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RcmProxyDetailsResponse)(nil)).Elem()
}

func (o RcmProxyDetailsResponseArrayOutput) ToRcmProxyDetailsResponseArrayOutput() RcmProxyDetailsResponseArrayOutput {
	return o
}

func (o RcmProxyDetailsResponseArrayOutput) ToRcmProxyDetailsResponseArrayOutputWithContext(ctx context.Context) RcmProxyDetailsResponseArrayOutput {
	return o
}

func (o RcmProxyDetailsResponseArrayOutput) Index(i pulumi.IntInput) RcmProxyDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RcmProxyDetailsResponse {
		return vs[0].([]RcmProxyDetailsResponse)[vs[1].(int)]
	}).(RcmProxyDetailsResponseOutput)
}

// Recovery plan A2A specific details.
type RecoveryPlanA2ADetailsResponse struct {
	// Gets the Instance type.
	// Expected value is 'A2A'.
	InstanceType string `pulumi:"instanceType"`
	// The primary extended location.
	PrimaryExtendedLocation *ExtendedLocationResponse `pulumi:"primaryExtendedLocation"`
	// The primary zone.
	PrimaryZone *string `pulumi:"primaryZone"`
	// The recovery extended location.
	RecoveryExtendedLocation *ExtendedLocationResponse `pulumi:"recoveryExtendedLocation"`
	// The recovery zone.
	RecoveryZone *string `pulumi:"recoveryZone"`
}

// Recovery plan A2A specific details.
type RecoveryPlanA2ADetailsResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanA2ADetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanA2ADetailsResponse)(nil)).Elem()
}

func (o RecoveryPlanA2ADetailsResponseOutput) ToRecoveryPlanA2ADetailsResponseOutput() RecoveryPlanA2ADetailsResponseOutput {
	return o
}

func (o RecoveryPlanA2ADetailsResponseOutput) ToRecoveryPlanA2ADetailsResponseOutputWithContext(ctx context.Context) RecoveryPlanA2ADetailsResponseOutput {
	return o
}

// Gets the Instance type.
// Expected value is 'A2A'.
func (o RecoveryPlanA2ADetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanA2ADetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The primary extended location.
func (o RecoveryPlanA2ADetailsResponseOutput) PrimaryExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v RecoveryPlanA2ADetailsResponse) *ExtendedLocationResponse { return v.PrimaryExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// The primary zone.
func (o RecoveryPlanA2ADetailsResponseOutput) PrimaryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanA2ADetailsResponse) *string { return v.PrimaryZone }).(pulumi.StringPtrOutput)
}

// The recovery extended location.
func (o RecoveryPlanA2ADetailsResponseOutput) RecoveryExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v RecoveryPlanA2ADetailsResponse) *ExtendedLocationResponse { return v.RecoveryExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// The recovery zone.
func (o RecoveryPlanA2ADetailsResponseOutput) RecoveryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanA2ADetailsResponse) *string { return v.RecoveryZone }).(pulumi.StringPtrOutput)
}

type RecoveryPlanA2ADetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanA2ADetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanA2ADetailsResponse)(nil)).Elem()
}

func (o RecoveryPlanA2ADetailsResponseArrayOutput) ToRecoveryPlanA2ADetailsResponseArrayOutput() RecoveryPlanA2ADetailsResponseArrayOutput {
	return o
}

func (o RecoveryPlanA2ADetailsResponseArrayOutput) ToRecoveryPlanA2ADetailsResponseArrayOutputWithContext(ctx context.Context) RecoveryPlanA2ADetailsResponseArrayOutput {
	return o
}

func (o RecoveryPlanA2ADetailsResponseArrayOutput) Index(i pulumi.IntInput) RecoveryPlanA2ADetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanA2ADetailsResponse {
		return vs[0].([]RecoveryPlanA2ADetailsResponse)[vs[1].(int)]
	}).(RecoveryPlanA2ADetailsResponseOutput)
}

// Recovery plan A2A input.
type RecoveryPlanA2AInput struct {
	// Gets the Instance type.
	// Expected value is 'A2A'.
	InstanceType string `pulumi:"instanceType"`
	// The primary extended location.
	PrimaryExtendedLocation *ExtendedLocation `pulumi:"primaryExtendedLocation"`
	// The primary zone.
	PrimaryZone *string `pulumi:"primaryZone"`
	// The recovery extended location.
	RecoveryExtendedLocation *ExtendedLocation `pulumi:"recoveryExtendedLocation"`
	// The recovery zone.
	RecoveryZone *string `pulumi:"recoveryZone"`
}

// RecoveryPlanA2AInputInput is an input type that accepts RecoveryPlanA2AInputArgs and RecoveryPlanA2AInputOutput values.
// You can construct a concrete instance of `RecoveryPlanA2AInputInput` via:
//
//	RecoveryPlanA2AInputArgs{...}
type RecoveryPlanA2AInputInput interface {
	pulumi.Input

	ToRecoveryPlanA2AInputOutput() RecoveryPlanA2AInputOutput
	ToRecoveryPlanA2AInputOutputWithContext(context.Context) RecoveryPlanA2AInputOutput
}

// Recovery plan A2A input.
type RecoveryPlanA2AInputArgs struct {
	// Gets the Instance type.
	// Expected value is 'A2A'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The primary extended location.
	PrimaryExtendedLocation ExtendedLocationPtrInput `pulumi:"primaryExtendedLocation"`
	// The primary zone.
	PrimaryZone pulumi.StringPtrInput `pulumi:"primaryZone"`
	// The recovery extended location.
	RecoveryExtendedLocation ExtendedLocationPtrInput `pulumi:"recoveryExtendedLocation"`
	// The recovery zone.
	RecoveryZone pulumi.StringPtrInput `pulumi:"recoveryZone"`
}

func (RecoveryPlanA2AInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanA2AInput)(nil)).Elem()
}

func (i RecoveryPlanA2AInputArgs) ToRecoveryPlanA2AInputOutput() RecoveryPlanA2AInputOutput {
	return i.ToRecoveryPlanA2AInputOutputWithContext(context.Background())
}

func (i RecoveryPlanA2AInputArgs) ToRecoveryPlanA2AInputOutputWithContext(ctx context.Context) RecoveryPlanA2AInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanA2AInputOutput)
}

// RecoveryPlanA2AInputArrayInput is an input type that accepts RecoveryPlanA2AInputArray and RecoveryPlanA2AInputArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanA2AInputArrayInput` via:
//
//	RecoveryPlanA2AInputArray{ RecoveryPlanA2AInputArgs{...} }
type RecoveryPlanA2AInputArrayInput interface {
	pulumi.Input

	ToRecoveryPlanA2AInputArrayOutput() RecoveryPlanA2AInputArrayOutput
	ToRecoveryPlanA2AInputArrayOutputWithContext(context.Context) RecoveryPlanA2AInputArrayOutput
}

type RecoveryPlanA2AInputArray []RecoveryPlanA2AInputInput

func (RecoveryPlanA2AInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanA2AInput)(nil)).Elem()
}

func (i RecoveryPlanA2AInputArray) ToRecoveryPlanA2AInputArrayOutput() RecoveryPlanA2AInputArrayOutput {
	return i.ToRecoveryPlanA2AInputArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanA2AInputArray) ToRecoveryPlanA2AInputArrayOutputWithContext(ctx context.Context) RecoveryPlanA2AInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanA2AInputArrayOutput)
}

// Recovery plan A2A input.
type RecoveryPlanA2AInputOutput struct{ *pulumi.OutputState }

func (RecoveryPlanA2AInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanA2AInput)(nil)).Elem()
}

func (o RecoveryPlanA2AInputOutput) ToRecoveryPlanA2AInputOutput() RecoveryPlanA2AInputOutput {
	return o
}

func (o RecoveryPlanA2AInputOutput) ToRecoveryPlanA2AInputOutputWithContext(ctx context.Context) RecoveryPlanA2AInputOutput {
	return o
}

// Gets the Instance type.
// Expected value is 'A2A'.
func (o RecoveryPlanA2AInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanA2AInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The primary extended location.
func (o RecoveryPlanA2AInputOutput) PrimaryExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v RecoveryPlanA2AInput) *ExtendedLocation { return v.PrimaryExtendedLocation }).(ExtendedLocationPtrOutput)
}

// The primary zone.
func (o RecoveryPlanA2AInputOutput) PrimaryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanA2AInput) *string { return v.PrimaryZone }).(pulumi.StringPtrOutput)
}

// The recovery extended location.
func (o RecoveryPlanA2AInputOutput) RecoveryExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v RecoveryPlanA2AInput) *ExtendedLocation { return v.RecoveryExtendedLocation }).(ExtendedLocationPtrOutput)
}

// The recovery zone.
func (o RecoveryPlanA2AInputOutput) RecoveryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanA2AInput) *string { return v.RecoveryZone }).(pulumi.StringPtrOutput)
}

type RecoveryPlanA2AInputArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanA2AInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanA2AInput)(nil)).Elem()
}

func (o RecoveryPlanA2AInputArrayOutput) ToRecoveryPlanA2AInputArrayOutput() RecoveryPlanA2AInputArrayOutput {
	return o
}

func (o RecoveryPlanA2AInputArrayOutput) ToRecoveryPlanA2AInputArrayOutputWithContext(ctx context.Context) RecoveryPlanA2AInputArrayOutput {
	return o
}

func (o RecoveryPlanA2AInputArrayOutput) Index(i pulumi.IntInput) RecoveryPlanA2AInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanA2AInput {
		return vs[0].([]RecoveryPlanA2AInput)[vs[1].(int)]
	}).(RecoveryPlanA2AInputOutput)
}

// Recovery plan action details.
type RecoveryPlanAction struct {
	// The action name.
	ActionName string `pulumi:"actionName"`
	// The custom details.
	CustomDetails interface{} `pulumi:"customDetails"`
	// The list of failover directions.
	FailoverDirections []string `pulumi:"failoverDirections"`
	// The list of failover types.
	FailoverTypes []string `pulumi:"failoverTypes"`
}

// RecoveryPlanActionInput is an input type that accepts RecoveryPlanActionArgs and RecoveryPlanActionOutput values.
// You can construct a concrete instance of `RecoveryPlanActionInput` via:
//
//	RecoveryPlanActionArgs{...}
type RecoveryPlanActionInput interface {
	pulumi.Input

	ToRecoveryPlanActionOutput() RecoveryPlanActionOutput
	ToRecoveryPlanActionOutputWithContext(context.Context) RecoveryPlanActionOutput
}

// Recovery plan action details.
type RecoveryPlanActionArgs struct {
	// The action name.
	ActionName pulumi.StringInput `pulumi:"actionName"`
	// The custom details.
	CustomDetails pulumi.Input `pulumi:"customDetails"`
	// The list of failover directions.
	FailoverDirections pulumi.StringArrayInput `pulumi:"failoverDirections"`
	// The list of failover types.
	FailoverTypes pulumi.StringArrayInput `pulumi:"failoverTypes"`
}

func (RecoveryPlanActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanAction)(nil)).Elem()
}

func (i RecoveryPlanActionArgs) ToRecoveryPlanActionOutput() RecoveryPlanActionOutput {
	return i.ToRecoveryPlanActionOutputWithContext(context.Background())
}

func (i RecoveryPlanActionArgs) ToRecoveryPlanActionOutputWithContext(ctx context.Context) RecoveryPlanActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanActionOutput)
}

// RecoveryPlanActionArrayInput is an input type that accepts RecoveryPlanActionArray and RecoveryPlanActionArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanActionArrayInput` via:
//
//	RecoveryPlanActionArray{ RecoveryPlanActionArgs{...} }
type RecoveryPlanActionArrayInput interface {
	pulumi.Input

	ToRecoveryPlanActionArrayOutput() RecoveryPlanActionArrayOutput
	ToRecoveryPlanActionArrayOutputWithContext(context.Context) RecoveryPlanActionArrayOutput
}

type RecoveryPlanActionArray []RecoveryPlanActionInput

func (RecoveryPlanActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanAction)(nil)).Elem()
}

func (i RecoveryPlanActionArray) ToRecoveryPlanActionArrayOutput() RecoveryPlanActionArrayOutput {
	return i.ToRecoveryPlanActionArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanActionArray) ToRecoveryPlanActionArrayOutputWithContext(ctx context.Context) RecoveryPlanActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanActionArrayOutput)
}

// Recovery plan action details.
type RecoveryPlanActionOutput struct{ *pulumi.OutputState }

func (RecoveryPlanActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanAction)(nil)).Elem()
}

func (o RecoveryPlanActionOutput) ToRecoveryPlanActionOutput() RecoveryPlanActionOutput {
	return o
}

func (o RecoveryPlanActionOutput) ToRecoveryPlanActionOutputWithContext(ctx context.Context) RecoveryPlanActionOutput {
	return o
}

// The action name.
func (o RecoveryPlanActionOutput) ActionName() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanAction) string { return v.ActionName }).(pulumi.StringOutput)
}

// The custom details.
func (o RecoveryPlanActionOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v RecoveryPlanAction) interface{} { return v.CustomDetails }).(pulumi.AnyOutput)
}

// The list of failover directions.
func (o RecoveryPlanActionOutput) FailoverDirections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanAction) []string { return v.FailoverDirections }).(pulumi.StringArrayOutput)
}

// The list of failover types.
func (o RecoveryPlanActionOutput) FailoverTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanAction) []string { return v.FailoverTypes }).(pulumi.StringArrayOutput)
}

type RecoveryPlanActionArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanAction)(nil)).Elem()
}

func (o RecoveryPlanActionArrayOutput) ToRecoveryPlanActionArrayOutput() RecoveryPlanActionArrayOutput {
	return o
}

func (o RecoveryPlanActionArrayOutput) ToRecoveryPlanActionArrayOutputWithContext(ctx context.Context) RecoveryPlanActionArrayOutput {
	return o
}

func (o RecoveryPlanActionArrayOutput) Index(i pulumi.IntInput) RecoveryPlanActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanAction {
		return vs[0].([]RecoveryPlanAction)[vs[1].(int)]
	}).(RecoveryPlanActionOutput)
}

// Recovery plan action details.
type RecoveryPlanActionResponse struct {
	// The action name.
	ActionName string `pulumi:"actionName"`
	// The custom details.
	CustomDetails interface{} `pulumi:"customDetails"`
	// The list of failover directions.
	FailoverDirections []string `pulumi:"failoverDirections"`
	// The list of failover types.
	FailoverTypes []string `pulumi:"failoverTypes"`
}

// Recovery plan action details.
type RecoveryPlanActionResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanActionResponse)(nil)).Elem()
}

func (o RecoveryPlanActionResponseOutput) ToRecoveryPlanActionResponseOutput() RecoveryPlanActionResponseOutput {
	return o
}

func (o RecoveryPlanActionResponseOutput) ToRecoveryPlanActionResponseOutputWithContext(ctx context.Context) RecoveryPlanActionResponseOutput {
	return o
}

// The action name.
func (o RecoveryPlanActionResponseOutput) ActionName() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanActionResponse) string { return v.ActionName }).(pulumi.StringOutput)
}

// The custom details.
func (o RecoveryPlanActionResponseOutput) CustomDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v RecoveryPlanActionResponse) interface{} { return v.CustomDetails }).(pulumi.AnyOutput)
}

// The list of failover directions.
func (o RecoveryPlanActionResponseOutput) FailoverDirections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanActionResponse) []string { return v.FailoverDirections }).(pulumi.StringArrayOutput)
}

// The list of failover types.
func (o RecoveryPlanActionResponseOutput) FailoverTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanActionResponse) []string { return v.FailoverTypes }).(pulumi.StringArrayOutput)
}

type RecoveryPlanActionResponseArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanActionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanActionResponse)(nil)).Elem()
}

func (o RecoveryPlanActionResponseArrayOutput) ToRecoveryPlanActionResponseArrayOutput() RecoveryPlanActionResponseArrayOutput {
	return o
}

func (o RecoveryPlanActionResponseArrayOutput) ToRecoveryPlanActionResponseArrayOutputWithContext(ctx context.Context) RecoveryPlanActionResponseArrayOutput {
	return o
}

func (o RecoveryPlanActionResponseArrayOutput) Index(i pulumi.IntInput) RecoveryPlanActionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanActionResponse {
		return vs[0].([]RecoveryPlanActionResponse)[vs[1].(int)]
	}).(RecoveryPlanActionResponseOutput)
}

// Recovery plan Automation runbook action details.
type RecoveryPlanAutomationRunbookActionDetails struct {
	// The fabric location.
	FabricLocation string `pulumi:"fabricLocation"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	// Expected value is 'AutomationRunbookActionDetails'.
	InstanceType string `pulumi:"instanceType"`
	// The runbook ARM Id.
	RunbookId *string `pulumi:"runbookId"`
	// The runbook timeout.
	Timeout *string `pulumi:"timeout"`
}

// RecoveryPlanAutomationRunbookActionDetailsInput is an input type that accepts RecoveryPlanAutomationRunbookActionDetailsArgs and RecoveryPlanAutomationRunbookActionDetailsOutput values.
// You can construct a concrete instance of `RecoveryPlanAutomationRunbookActionDetailsInput` via:
//
//	RecoveryPlanAutomationRunbookActionDetailsArgs{...}
type RecoveryPlanAutomationRunbookActionDetailsInput interface {
	pulumi.Input

	ToRecoveryPlanAutomationRunbookActionDetailsOutput() RecoveryPlanAutomationRunbookActionDetailsOutput
	ToRecoveryPlanAutomationRunbookActionDetailsOutputWithContext(context.Context) RecoveryPlanAutomationRunbookActionDetailsOutput
}

// Recovery plan Automation runbook action details.
type RecoveryPlanAutomationRunbookActionDetailsArgs struct {
	// The fabric location.
	FabricLocation pulumi.StringInput `pulumi:"fabricLocation"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	// Expected value is 'AutomationRunbookActionDetails'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The runbook ARM Id.
	RunbookId pulumi.StringPtrInput `pulumi:"runbookId"`
	// The runbook timeout.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (RecoveryPlanAutomationRunbookActionDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanAutomationRunbookActionDetails)(nil)).Elem()
}

func (i RecoveryPlanAutomationRunbookActionDetailsArgs) ToRecoveryPlanAutomationRunbookActionDetailsOutput() RecoveryPlanAutomationRunbookActionDetailsOutput {
	return i.ToRecoveryPlanAutomationRunbookActionDetailsOutputWithContext(context.Background())
}

func (i RecoveryPlanAutomationRunbookActionDetailsArgs) ToRecoveryPlanAutomationRunbookActionDetailsOutputWithContext(ctx context.Context) RecoveryPlanAutomationRunbookActionDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanAutomationRunbookActionDetailsOutput)
}

// Recovery plan Automation runbook action details.
type RecoveryPlanAutomationRunbookActionDetailsOutput struct{ *pulumi.OutputState }

func (RecoveryPlanAutomationRunbookActionDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanAutomationRunbookActionDetails)(nil)).Elem()
}

func (o RecoveryPlanAutomationRunbookActionDetailsOutput) ToRecoveryPlanAutomationRunbookActionDetailsOutput() RecoveryPlanAutomationRunbookActionDetailsOutput {
	return o
}

func (o RecoveryPlanAutomationRunbookActionDetailsOutput) ToRecoveryPlanAutomationRunbookActionDetailsOutputWithContext(ctx context.Context) RecoveryPlanAutomationRunbookActionDetailsOutput {
	return o
}

// The fabric location.
func (o RecoveryPlanAutomationRunbookActionDetailsOutput) FabricLocation() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanAutomationRunbookActionDetails) string { return v.FabricLocation }).(pulumi.StringOutput)
}

// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
// Expected value is 'AutomationRunbookActionDetails'.
func (o RecoveryPlanAutomationRunbookActionDetailsOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanAutomationRunbookActionDetails) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The runbook ARM Id.
func (o RecoveryPlanAutomationRunbookActionDetailsOutput) RunbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanAutomationRunbookActionDetails) *string { return v.RunbookId }).(pulumi.StringPtrOutput)
}

// The runbook timeout.
func (o RecoveryPlanAutomationRunbookActionDetailsOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanAutomationRunbookActionDetails) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Recovery plan Automation runbook action details.
type RecoveryPlanAutomationRunbookActionDetailsResponse struct {
	// The fabric location.
	FabricLocation string `pulumi:"fabricLocation"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	// Expected value is 'AutomationRunbookActionDetails'.
	InstanceType string `pulumi:"instanceType"`
	// The runbook ARM Id.
	RunbookId *string `pulumi:"runbookId"`
	// The runbook timeout.
	Timeout *string `pulumi:"timeout"`
}

// Recovery plan Automation runbook action details.
type RecoveryPlanAutomationRunbookActionDetailsResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanAutomationRunbookActionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanAutomationRunbookActionDetailsResponse)(nil)).Elem()
}

func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) ToRecoveryPlanAutomationRunbookActionDetailsResponseOutput() RecoveryPlanAutomationRunbookActionDetailsResponseOutput {
	return o
}

func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) ToRecoveryPlanAutomationRunbookActionDetailsResponseOutputWithContext(ctx context.Context) RecoveryPlanAutomationRunbookActionDetailsResponseOutput {
	return o
}

// The fabric location.
func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) FabricLocation() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanAutomationRunbookActionDetailsResponse) string { return v.FabricLocation }).(pulumi.StringOutput)
}

// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
// Expected value is 'AutomationRunbookActionDetails'.
func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanAutomationRunbookActionDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The runbook ARM Id.
func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) RunbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanAutomationRunbookActionDetailsResponse) *string { return v.RunbookId }).(pulumi.StringPtrOutput)
}

// The runbook timeout.
func (o RecoveryPlanAutomationRunbookActionDetailsResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanAutomationRunbookActionDetailsResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Recovery plan group details.
type RecoveryPlanGroup struct {
	// The end group actions.
	EndGroupActions []RecoveryPlanAction `pulumi:"endGroupActions"`
	// The group type.
	GroupType string `pulumi:"groupType"`
	// The list of protected items.
	ReplicationProtectedItems []RecoveryPlanProtectedItem `pulumi:"replicationProtectedItems"`
	// The start group actions.
	StartGroupActions []RecoveryPlanAction `pulumi:"startGroupActions"`
}

// RecoveryPlanGroupInput is an input type that accepts RecoveryPlanGroupArgs and RecoveryPlanGroupOutput values.
// You can construct a concrete instance of `RecoveryPlanGroupInput` via:
//
//	RecoveryPlanGroupArgs{...}
type RecoveryPlanGroupInput interface {
	pulumi.Input

	ToRecoveryPlanGroupOutput() RecoveryPlanGroupOutput
	ToRecoveryPlanGroupOutputWithContext(context.Context) RecoveryPlanGroupOutput
}

// Recovery plan group details.
type RecoveryPlanGroupArgs struct {
	// The end group actions.
	EndGroupActions RecoveryPlanActionArrayInput `pulumi:"endGroupActions"`
	// The group type.
	GroupType pulumi.StringInput `pulumi:"groupType"`
	// The list of protected items.
	ReplicationProtectedItems RecoveryPlanProtectedItemArrayInput `pulumi:"replicationProtectedItems"`
	// The start group actions.
	StartGroupActions RecoveryPlanActionArrayInput `pulumi:"startGroupActions"`
}

func (RecoveryPlanGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanGroup)(nil)).Elem()
}

func (i RecoveryPlanGroupArgs) ToRecoveryPlanGroupOutput() RecoveryPlanGroupOutput {
	return i.ToRecoveryPlanGroupOutputWithContext(context.Background())
}

func (i RecoveryPlanGroupArgs) ToRecoveryPlanGroupOutputWithContext(ctx context.Context) RecoveryPlanGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanGroupOutput)
}

// RecoveryPlanGroupArrayInput is an input type that accepts RecoveryPlanGroupArray and RecoveryPlanGroupArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanGroupArrayInput` via:
//
//	RecoveryPlanGroupArray{ RecoveryPlanGroupArgs{...} }
type RecoveryPlanGroupArrayInput interface {
	pulumi.Input

	ToRecoveryPlanGroupArrayOutput() RecoveryPlanGroupArrayOutput
	ToRecoveryPlanGroupArrayOutputWithContext(context.Context) RecoveryPlanGroupArrayOutput
}

type RecoveryPlanGroupArray []RecoveryPlanGroupInput

func (RecoveryPlanGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanGroup)(nil)).Elem()
}

func (i RecoveryPlanGroupArray) ToRecoveryPlanGroupArrayOutput() RecoveryPlanGroupArrayOutput {
	return i.ToRecoveryPlanGroupArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanGroupArray) ToRecoveryPlanGroupArrayOutputWithContext(ctx context.Context) RecoveryPlanGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanGroupArrayOutput)
}

// Recovery plan group details.
type RecoveryPlanGroupOutput struct{ *pulumi.OutputState }

func (RecoveryPlanGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanGroup)(nil)).Elem()
}

func (o RecoveryPlanGroupOutput) ToRecoveryPlanGroupOutput() RecoveryPlanGroupOutput {
	return o
}

func (o RecoveryPlanGroupOutput) ToRecoveryPlanGroupOutputWithContext(ctx context.Context) RecoveryPlanGroupOutput {
	return o
}

// The end group actions.
func (o RecoveryPlanGroupOutput) EndGroupActions() RecoveryPlanActionArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroup) []RecoveryPlanAction { return v.EndGroupActions }).(RecoveryPlanActionArrayOutput)
}

// The group type.
func (o RecoveryPlanGroupOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanGroup) string { return v.GroupType }).(pulumi.StringOutput)
}

// The list of protected items.
func (o RecoveryPlanGroupOutput) ReplicationProtectedItems() RecoveryPlanProtectedItemArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroup) []RecoveryPlanProtectedItem { return v.ReplicationProtectedItems }).(RecoveryPlanProtectedItemArrayOutput)
}

// The start group actions.
func (o RecoveryPlanGroupOutput) StartGroupActions() RecoveryPlanActionArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroup) []RecoveryPlanAction { return v.StartGroupActions }).(RecoveryPlanActionArrayOutput)
}

type RecoveryPlanGroupArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanGroup)(nil)).Elem()
}

func (o RecoveryPlanGroupArrayOutput) ToRecoveryPlanGroupArrayOutput() RecoveryPlanGroupArrayOutput {
	return o
}

func (o RecoveryPlanGroupArrayOutput) ToRecoveryPlanGroupArrayOutputWithContext(ctx context.Context) RecoveryPlanGroupArrayOutput {
	return o
}

func (o RecoveryPlanGroupArrayOutput) Index(i pulumi.IntInput) RecoveryPlanGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanGroup {
		return vs[0].([]RecoveryPlanGroup)[vs[1].(int)]
	}).(RecoveryPlanGroupOutput)
}

// Recovery plan group details.
type RecoveryPlanGroupResponse struct {
	// The end group actions.
	EndGroupActions []RecoveryPlanActionResponse `pulumi:"endGroupActions"`
	// The group type.
	GroupType string `pulumi:"groupType"`
	// The list of protected items.
	ReplicationProtectedItems []RecoveryPlanProtectedItemResponse `pulumi:"replicationProtectedItems"`
	// The start group actions.
	StartGroupActions []RecoveryPlanActionResponse `pulumi:"startGroupActions"`
}

// Recovery plan group details.
type RecoveryPlanGroupResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanGroupResponse)(nil)).Elem()
}

func (o RecoveryPlanGroupResponseOutput) ToRecoveryPlanGroupResponseOutput() RecoveryPlanGroupResponseOutput {
	return o
}

func (o RecoveryPlanGroupResponseOutput) ToRecoveryPlanGroupResponseOutputWithContext(ctx context.Context) RecoveryPlanGroupResponseOutput {
	return o
}

// The end group actions.
func (o RecoveryPlanGroupResponseOutput) EndGroupActions() RecoveryPlanActionResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroupResponse) []RecoveryPlanActionResponse { return v.EndGroupActions }).(RecoveryPlanActionResponseArrayOutput)
}

// The group type.
func (o RecoveryPlanGroupResponseOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanGroupResponse) string { return v.GroupType }).(pulumi.StringOutput)
}

// The list of protected items.
func (o RecoveryPlanGroupResponseOutput) ReplicationProtectedItems() RecoveryPlanProtectedItemResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroupResponse) []RecoveryPlanProtectedItemResponse {
		return v.ReplicationProtectedItems
	}).(RecoveryPlanProtectedItemResponseArrayOutput)
}

// The start group actions.
func (o RecoveryPlanGroupResponseOutput) StartGroupActions() RecoveryPlanActionResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanGroupResponse) []RecoveryPlanActionResponse { return v.StartGroupActions }).(RecoveryPlanActionResponseArrayOutput)
}

type RecoveryPlanGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanGroupResponse)(nil)).Elem()
}

func (o RecoveryPlanGroupResponseArrayOutput) ToRecoveryPlanGroupResponseArrayOutput() RecoveryPlanGroupResponseArrayOutput {
	return o
}

func (o RecoveryPlanGroupResponseArrayOutput) ToRecoveryPlanGroupResponseArrayOutputWithContext(ctx context.Context) RecoveryPlanGroupResponseArrayOutput {
	return o
}

func (o RecoveryPlanGroupResponseArrayOutput) Index(i pulumi.IntInput) RecoveryPlanGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanGroupResponse {
		return vs[0].([]RecoveryPlanGroupResponse)[vs[1].(int)]
	}).(RecoveryPlanGroupResponseOutput)
}

// Recovery plan manual action details.
type RecoveryPlanManualActionDetails struct {
	// The manual action description.
	Description *string `pulumi:"description"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	// Expected value is 'ManualActionDetails'.
	InstanceType string `pulumi:"instanceType"`
}

// RecoveryPlanManualActionDetailsInput is an input type that accepts RecoveryPlanManualActionDetailsArgs and RecoveryPlanManualActionDetailsOutput values.
// You can construct a concrete instance of `RecoveryPlanManualActionDetailsInput` via:
//
//	RecoveryPlanManualActionDetailsArgs{...}
type RecoveryPlanManualActionDetailsInput interface {
	pulumi.Input

	ToRecoveryPlanManualActionDetailsOutput() RecoveryPlanManualActionDetailsOutput
	ToRecoveryPlanManualActionDetailsOutputWithContext(context.Context) RecoveryPlanManualActionDetailsOutput
}

// Recovery plan manual action details.
type RecoveryPlanManualActionDetailsArgs struct {
	// The manual action description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	// Expected value is 'ManualActionDetails'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
}

func (RecoveryPlanManualActionDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanManualActionDetails)(nil)).Elem()
}

func (i RecoveryPlanManualActionDetailsArgs) ToRecoveryPlanManualActionDetailsOutput() RecoveryPlanManualActionDetailsOutput {
	return i.ToRecoveryPlanManualActionDetailsOutputWithContext(context.Background())
}

func (i RecoveryPlanManualActionDetailsArgs) ToRecoveryPlanManualActionDetailsOutputWithContext(ctx context.Context) RecoveryPlanManualActionDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanManualActionDetailsOutput)
}

// Recovery plan manual action details.
type RecoveryPlanManualActionDetailsOutput struct{ *pulumi.OutputState }

func (RecoveryPlanManualActionDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanManualActionDetails)(nil)).Elem()
}

func (o RecoveryPlanManualActionDetailsOutput) ToRecoveryPlanManualActionDetailsOutput() RecoveryPlanManualActionDetailsOutput {
	return o
}

func (o RecoveryPlanManualActionDetailsOutput) ToRecoveryPlanManualActionDetailsOutputWithContext(ctx context.Context) RecoveryPlanManualActionDetailsOutput {
	return o
}

// The manual action description.
func (o RecoveryPlanManualActionDetailsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanManualActionDetails) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
// Expected value is 'ManualActionDetails'.
func (o RecoveryPlanManualActionDetailsOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanManualActionDetails) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Recovery plan manual action details.
type RecoveryPlanManualActionDetailsResponse struct {
	// The manual action description.
	Description *string `pulumi:"description"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	// Expected value is 'ManualActionDetails'.
	InstanceType string `pulumi:"instanceType"`
}

// Recovery plan manual action details.
type RecoveryPlanManualActionDetailsResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanManualActionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanManualActionDetailsResponse)(nil)).Elem()
}

func (o RecoveryPlanManualActionDetailsResponseOutput) ToRecoveryPlanManualActionDetailsResponseOutput() RecoveryPlanManualActionDetailsResponseOutput {
	return o
}

func (o RecoveryPlanManualActionDetailsResponseOutput) ToRecoveryPlanManualActionDetailsResponseOutputWithContext(ctx context.Context) RecoveryPlanManualActionDetailsResponseOutput {
	return o
}

// The manual action description.
func (o RecoveryPlanManualActionDetailsResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanManualActionDetailsResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
// Expected value is 'ManualActionDetails'.
func (o RecoveryPlanManualActionDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanManualActionDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Recovery plan properties.
type RecoveryPlanPropertiesResponse struct {
	// The list of allowed operations.
	AllowedOperations []string `pulumi:"allowedOperations"`
	// The current scenario details.
	CurrentScenario *CurrentScenarioDetailsResponse `pulumi:"currentScenario"`
	// The recovery plan status.
	CurrentScenarioStatus *string `pulumi:"currentScenarioStatus"`
	// The recovery plan status description.
	CurrentScenarioStatusDescription *string `pulumi:"currentScenarioStatusDescription"`
	// The failover deployment model.
	FailoverDeploymentModel *string `pulumi:"failoverDeploymentModel"`
	// The friendly name.
	FriendlyName *string `pulumi:"friendlyName"`
	// The recovery plan groups.
	Groups []RecoveryPlanGroupResponse `pulumi:"groups"`
	// The start time of the last planned failover.
	LastPlannedFailoverTime *string `pulumi:"lastPlannedFailoverTime"`
	// The start time of the last test failover.
	LastTestFailoverTime *string `pulumi:"lastTestFailoverTime"`
	// The start time of the last unplanned failover.
	LastUnplannedFailoverTime *string `pulumi:"lastUnplannedFailoverTime"`
	// The primary fabric friendly name.
	PrimaryFabricFriendlyName *string `pulumi:"primaryFabricFriendlyName"`
	// The primary fabric Id.
	PrimaryFabricId *string `pulumi:"primaryFabricId"`
	// The provider id and provider specific details.
	ProviderSpecificDetails []RecoveryPlanA2ADetailsResponse `pulumi:"providerSpecificDetails"`
	// The recovery fabric friendly name.
	RecoveryFabricFriendlyName *string `pulumi:"recoveryFabricFriendlyName"`
	// The recovery fabric Id.
	RecoveryFabricId *string `pulumi:"recoveryFabricId"`
	// The list of replication providers.
	ReplicationProviders []string `pulumi:"replicationProviders"`
}

// Recovery plan properties.
type RecoveryPlanPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanPropertiesResponse)(nil)).Elem()
}

func (o RecoveryPlanPropertiesResponseOutput) ToRecoveryPlanPropertiesResponseOutput() RecoveryPlanPropertiesResponseOutput {
	return o
}

func (o RecoveryPlanPropertiesResponseOutput) ToRecoveryPlanPropertiesResponseOutputWithContext(ctx context.Context) RecoveryPlanPropertiesResponseOutput {
	return o
}

// The list of allowed operations.
func (o RecoveryPlanPropertiesResponseOutput) AllowedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) []string { return v.AllowedOperations }).(pulumi.StringArrayOutput)
}

// The current scenario details.
func (o RecoveryPlanPropertiesResponseOutput) CurrentScenario() CurrentScenarioDetailsResponsePtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *CurrentScenarioDetailsResponse { return v.CurrentScenario }).(CurrentScenarioDetailsResponsePtrOutput)
}

// The recovery plan status.
func (o RecoveryPlanPropertiesResponseOutput) CurrentScenarioStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.CurrentScenarioStatus }).(pulumi.StringPtrOutput)
}

// The recovery plan status description.
func (o RecoveryPlanPropertiesResponseOutput) CurrentScenarioStatusDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.CurrentScenarioStatusDescription }).(pulumi.StringPtrOutput)
}

// The failover deployment model.
func (o RecoveryPlanPropertiesResponseOutput) FailoverDeploymentModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.FailoverDeploymentModel }).(pulumi.StringPtrOutput)
}

// The friendly name.
func (o RecoveryPlanPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery plan groups.
func (o RecoveryPlanPropertiesResponseOutput) Groups() RecoveryPlanGroupResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) []RecoveryPlanGroupResponse { return v.Groups }).(RecoveryPlanGroupResponseArrayOutput)
}

// The start time of the last planned failover.
func (o RecoveryPlanPropertiesResponseOutput) LastPlannedFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.LastPlannedFailoverTime }).(pulumi.StringPtrOutput)
}

// The start time of the last test failover.
func (o RecoveryPlanPropertiesResponseOutput) LastTestFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.LastTestFailoverTime }).(pulumi.StringPtrOutput)
}

// The start time of the last unplanned failover.
func (o RecoveryPlanPropertiesResponseOutput) LastUnplannedFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.LastUnplannedFailoverTime }).(pulumi.StringPtrOutput)
}

// The primary fabric friendly name.
func (o RecoveryPlanPropertiesResponseOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.PrimaryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The primary fabric Id.
func (o RecoveryPlanPropertiesResponseOutput) PrimaryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.PrimaryFabricId }).(pulumi.StringPtrOutput)
}

// The provider id and provider specific details.
func (o RecoveryPlanPropertiesResponseOutput) ProviderSpecificDetails() RecoveryPlanA2ADetailsResponseArrayOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) []RecoveryPlanA2ADetailsResponse {
		return v.ProviderSpecificDetails
	}).(RecoveryPlanA2ADetailsResponseArrayOutput)
}

// The recovery fabric friendly name.
func (o RecoveryPlanPropertiesResponseOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.RecoveryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery fabric Id.
func (o RecoveryPlanPropertiesResponseOutput) RecoveryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) *string { return v.RecoveryFabricId }).(pulumi.StringPtrOutput)
}

// The list of replication providers.
func (o RecoveryPlanPropertiesResponseOutput) ReplicationProviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryPlanPropertiesResponse) []string { return v.ReplicationProviders }).(pulumi.StringArrayOutput)
}

// Recovery plan protected item.
type RecoveryPlanProtectedItem struct {
	// The ARM Id of the recovery plan protected item.
	Id *string `pulumi:"id"`
	// The virtual machine Id.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
}

// RecoveryPlanProtectedItemInput is an input type that accepts RecoveryPlanProtectedItemArgs and RecoveryPlanProtectedItemOutput values.
// You can construct a concrete instance of `RecoveryPlanProtectedItemInput` via:
//
//	RecoveryPlanProtectedItemArgs{...}
type RecoveryPlanProtectedItemInput interface {
	pulumi.Input

	ToRecoveryPlanProtectedItemOutput() RecoveryPlanProtectedItemOutput
	ToRecoveryPlanProtectedItemOutputWithContext(context.Context) RecoveryPlanProtectedItemOutput
}

// Recovery plan protected item.
type RecoveryPlanProtectedItemArgs struct {
	// The ARM Id of the recovery plan protected item.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The virtual machine Id.
	VirtualMachineId pulumi.StringPtrInput `pulumi:"virtualMachineId"`
}

func (RecoveryPlanProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanProtectedItem)(nil)).Elem()
}

func (i RecoveryPlanProtectedItemArgs) ToRecoveryPlanProtectedItemOutput() RecoveryPlanProtectedItemOutput {
	return i.ToRecoveryPlanProtectedItemOutputWithContext(context.Background())
}

func (i RecoveryPlanProtectedItemArgs) ToRecoveryPlanProtectedItemOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanProtectedItemOutput)
}

// RecoveryPlanProtectedItemArrayInput is an input type that accepts RecoveryPlanProtectedItemArray and RecoveryPlanProtectedItemArrayOutput values.
// You can construct a concrete instance of `RecoveryPlanProtectedItemArrayInput` via:
//
//	RecoveryPlanProtectedItemArray{ RecoveryPlanProtectedItemArgs{...} }
type RecoveryPlanProtectedItemArrayInput interface {
	pulumi.Input

	ToRecoveryPlanProtectedItemArrayOutput() RecoveryPlanProtectedItemArrayOutput
	ToRecoveryPlanProtectedItemArrayOutputWithContext(context.Context) RecoveryPlanProtectedItemArrayOutput
}

type RecoveryPlanProtectedItemArray []RecoveryPlanProtectedItemInput

func (RecoveryPlanProtectedItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanProtectedItem)(nil)).Elem()
}

func (i RecoveryPlanProtectedItemArray) ToRecoveryPlanProtectedItemArrayOutput() RecoveryPlanProtectedItemArrayOutput {
	return i.ToRecoveryPlanProtectedItemArrayOutputWithContext(context.Background())
}

func (i RecoveryPlanProtectedItemArray) ToRecoveryPlanProtectedItemArrayOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanProtectedItemArrayOutput)
}

// Recovery plan protected item.
type RecoveryPlanProtectedItemOutput struct{ *pulumi.OutputState }

func (RecoveryPlanProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanProtectedItem)(nil)).Elem()
}

func (o RecoveryPlanProtectedItemOutput) ToRecoveryPlanProtectedItemOutput() RecoveryPlanProtectedItemOutput {
	return o
}

func (o RecoveryPlanProtectedItemOutput) ToRecoveryPlanProtectedItemOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemOutput {
	return o
}

// The ARM Id of the recovery plan protected item.
func (o RecoveryPlanProtectedItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanProtectedItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The virtual machine Id.
func (o RecoveryPlanProtectedItemOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanProtectedItem) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

type RecoveryPlanProtectedItemArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanProtectedItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanProtectedItem)(nil)).Elem()
}

func (o RecoveryPlanProtectedItemArrayOutput) ToRecoveryPlanProtectedItemArrayOutput() RecoveryPlanProtectedItemArrayOutput {
	return o
}

func (o RecoveryPlanProtectedItemArrayOutput) ToRecoveryPlanProtectedItemArrayOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemArrayOutput {
	return o
}

func (o RecoveryPlanProtectedItemArrayOutput) Index(i pulumi.IntInput) RecoveryPlanProtectedItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanProtectedItem {
		return vs[0].([]RecoveryPlanProtectedItem)[vs[1].(int)]
	}).(RecoveryPlanProtectedItemOutput)
}

// Recovery plan protected item.
type RecoveryPlanProtectedItemResponse struct {
	// The ARM Id of the recovery plan protected item.
	Id *string `pulumi:"id"`
	// The virtual machine Id.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
}

// Recovery plan protected item.
type RecoveryPlanProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanProtectedItemResponse)(nil)).Elem()
}

func (o RecoveryPlanProtectedItemResponseOutput) ToRecoveryPlanProtectedItemResponseOutput() RecoveryPlanProtectedItemResponseOutput {
	return o
}

func (o RecoveryPlanProtectedItemResponseOutput) ToRecoveryPlanProtectedItemResponseOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemResponseOutput {
	return o
}

// The ARM Id of the recovery plan protected item.
func (o RecoveryPlanProtectedItemResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanProtectedItemResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The virtual machine Id.
func (o RecoveryPlanProtectedItemResponseOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanProtectedItemResponse) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

type RecoveryPlanProtectedItemResponseArrayOutput struct{ *pulumi.OutputState }

func (RecoveryPlanProtectedItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecoveryPlanProtectedItemResponse)(nil)).Elem()
}

func (o RecoveryPlanProtectedItemResponseArrayOutput) ToRecoveryPlanProtectedItemResponseArrayOutput() RecoveryPlanProtectedItemResponseArrayOutput {
	return o
}

func (o RecoveryPlanProtectedItemResponseArrayOutput) ToRecoveryPlanProtectedItemResponseArrayOutputWithContext(ctx context.Context) RecoveryPlanProtectedItemResponseArrayOutput {
	return o
}

func (o RecoveryPlanProtectedItemResponseArrayOutput) Index(i pulumi.IntInput) RecoveryPlanProtectedItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecoveryPlanProtectedItemResponse {
		return vs[0].([]RecoveryPlanProtectedItemResponse)[vs[1].(int)]
	}).(RecoveryPlanProtectedItemResponseOutput)
}

// Recovery plan script action details.
type RecoveryPlanScriptActionDetails struct {
	// The fabric location.
	FabricLocation string `pulumi:"fabricLocation"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	// Expected value is 'ScriptActionDetails'.
	InstanceType string `pulumi:"instanceType"`
	// The script path.
	Path string `pulumi:"path"`
	// The script timeout.
	Timeout *string `pulumi:"timeout"`
}

// RecoveryPlanScriptActionDetailsInput is an input type that accepts RecoveryPlanScriptActionDetailsArgs and RecoveryPlanScriptActionDetailsOutput values.
// You can construct a concrete instance of `RecoveryPlanScriptActionDetailsInput` via:
//
//	RecoveryPlanScriptActionDetailsArgs{...}
type RecoveryPlanScriptActionDetailsInput interface {
	pulumi.Input

	ToRecoveryPlanScriptActionDetailsOutput() RecoveryPlanScriptActionDetailsOutput
	ToRecoveryPlanScriptActionDetailsOutputWithContext(context.Context) RecoveryPlanScriptActionDetailsOutput
}

// Recovery plan script action details.
type RecoveryPlanScriptActionDetailsArgs struct {
	// The fabric location.
	FabricLocation pulumi.StringInput `pulumi:"fabricLocation"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	// Expected value is 'ScriptActionDetails'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The script path.
	Path pulumi.StringInput `pulumi:"path"`
	// The script timeout.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (RecoveryPlanScriptActionDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanScriptActionDetails)(nil)).Elem()
}

func (i RecoveryPlanScriptActionDetailsArgs) ToRecoveryPlanScriptActionDetailsOutput() RecoveryPlanScriptActionDetailsOutput {
	return i.ToRecoveryPlanScriptActionDetailsOutputWithContext(context.Background())
}

func (i RecoveryPlanScriptActionDetailsArgs) ToRecoveryPlanScriptActionDetailsOutputWithContext(ctx context.Context) RecoveryPlanScriptActionDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecoveryPlanScriptActionDetailsOutput)
}

// Recovery plan script action details.
type RecoveryPlanScriptActionDetailsOutput struct{ *pulumi.OutputState }

func (RecoveryPlanScriptActionDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanScriptActionDetails)(nil)).Elem()
}

func (o RecoveryPlanScriptActionDetailsOutput) ToRecoveryPlanScriptActionDetailsOutput() RecoveryPlanScriptActionDetailsOutput {
	return o
}

func (o RecoveryPlanScriptActionDetailsOutput) ToRecoveryPlanScriptActionDetailsOutputWithContext(ctx context.Context) RecoveryPlanScriptActionDetailsOutput {
	return o
}

// The fabric location.
func (o RecoveryPlanScriptActionDetailsOutput) FabricLocation() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanScriptActionDetails) string { return v.FabricLocation }).(pulumi.StringOutput)
}

// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
// Expected value is 'ScriptActionDetails'.
func (o RecoveryPlanScriptActionDetailsOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanScriptActionDetails) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The script path.
func (o RecoveryPlanScriptActionDetailsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanScriptActionDetails) string { return v.Path }).(pulumi.StringOutput)
}

// The script timeout.
func (o RecoveryPlanScriptActionDetailsOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanScriptActionDetails) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Recovery plan script action details.
type RecoveryPlanScriptActionDetailsResponse struct {
	// The fabric location.
	FabricLocation string `pulumi:"fabricLocation"`
	// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
	// Expected value is 'ScriptActionDetails'.
	InstanceType string `pulumi:"instanceType"`
	// The script path.
	Path string `pulumi:"path"`
	// The script timeout.
	Timeout *string `pulumi:"timeout"`
}

// Recovery plan script action details.
type RecoveryPlanScriptActionDetailsResponseOutput struct{ *pulumi.OutputState }

func (RecoveryPlanScriptActionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryPlanScriptActionDetailsResponse)(nil)).Elem()
}

func (o RecoveryPlanScriptActionDetailsResponseOutput) ToRecoveryPlanScriptActionDetailsResponseOutput() RecoveryPlanScriptActionDetailsResponseOutput {
	return o
}

func (o RecoveryPlanScriptActionDetailsResponseOutput) ToRecoveryPlanScriptActionDetailsResponseOutputWithContext(ctx context.Context) RecoveryPlanScriptActionDetailsResponseOutput {
	return o
}

// The fabric location.
func (o RecoveryPlanScriptActionDetailsResponseOutput) FabricLocation() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanScriptActionDetailsResponse) string { return v.FabricLocation }).(pulumi.StringOutput)
}

// Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).
// Expected value is 'ScriptActionDetails'.
func (o RecoveryPlanScriptActionDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanScriptActionDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The script path.
func (o RecoveryPlanScriptActionDetailsResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v RecoveryPlanScriptActionDetailsResponse) string { return v.Path }).(pulumi.StringOutput)
}

// The script timeout.
func (o RecoveryPlanScriptActionDetailsResponseOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryPlanScriptActionDetailsResponse) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Recovery services provider properties.
type RecoveryServicesProviderPropertiesResponse struct {
	// The scenarios allowed on this provider.
	AllowedScenarios []string `pulumi:"allowedScenarios"`
	// The authentication identity details.
	AuthenticationIdentityDetails *IdentityProviderDetailsResponse `pulumi:"authenticationIdentityDetails"`
	// The Bios Id.
	BiosId *string `pulumi:"biosId"`
	// A value indicating whether DRA is responsive.
	ConnectionStatus *string `pulumi:"connectionStatus"`
	// The data plane authentication identity details.
	DataPlaneAuthenticationIdentityDetails *IdentityProviderDetailsResponse `pulumi:"dataPlaneAuthenticationIdentityDetails"`
	// The DRA Id.
	DraIdentifier *string `pulumi:"draIdentifier"`
	// The fabric friendly name.
	FabricFriendlyName *string `pulumi:"fabricFriendlyName"`
	// Type of the site.
	FabricType *string `pulumi:"fabricType"`
	// Friendly name of the DRA.
	FriendlyName *string `pulumi:"friendlyName"`
	// The recovery services provider health error details.
	HealthErrorDetails []HealthErrorResponse `pulumi:"healthErrorDetails"`
	// Time when last heartbeat was sent by the DRA.
	LastHeartBeat *string `pulumi:"lastHeartBeat"`
	// The machine Id.
	MachineId *string `pulumi:"machineId"`
	// The machine name.
	MachineName *string `pulumi:"machineName"`
	// Number of protected VMs currently managed by the DRA.
	ProtectedItemCount *int `pulumi:"protectedItemCount"`
	// The provider version.
	ProviderVersion *string `pulumi:"providerVersion"`
	// The provider version details.
	ProviderVersionDetails *VersionDetailsResponse `pulumi:"providerVersionDetails"`
	// Expiry date of the version.
	ProviderVersionExpiryDate *string `pulumi:"providerVersionExpiryDate"`
	// DRA version status.
	ProviderVersionState *string `pulumi:"providerVersionState"`
	// The resource access identity details.
	ResourceAccessIdentityDetails *IdentityProviderDetailsResponse `pulumi:"resourceAccessIdentityDetails"`
	// The fabric provider.
	ServerVersion *string `pulumi:"serverVersion"`
}

// Recovery services provider properties.
type RecoveryServicesProviderPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RecoveryServicesProviderPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecoveryServicesProviderPropertiesResponse)(nil)).Elem()
}

func (o RecoveryServicesProviderPropertiesResponseOutput) ToRecoveryServicesProviderPropertiesResponseOutput() RecoveryServicesProviderPropertiesResponseOutput {
	return o
}

func (o RecoveryServicesProviderPropertiesResponseOutput) ToRecoveryServicesProviderPropertiesResponseOutputWithContext(ctx context.Context) RecoveryServicesProviderPropertiesResponseOutput {
	return o
}

// The scenarios allowed on this provider.
func (o RecoveryServicesProviderPropertiesResponseOutput) AllowedScenarios() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) []string { return v.AllowedScenarios }).(pulumi.StringArrayOutput)
}

// The authentication identity details.
func (o RecoveryServicesProviderPropertiesResponseOutput) AuthenticationIdentityDetails() IdentityProviderDetailsResponsePtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *IdentityProviderDetailsResponse {
		return v.AuthenticationIdentityDetails
	}).(IdentityProviderDetailsResponsePtrOutput)
}

// The Bios Id.
func (o RecoveryServicesProviderPropertiesResponseOutput) BiosId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.BiosId }).(pulumi.StringPtrOutput)
}

// A value indicating whether DRA is responsive.
func (o RecoveryServicesProviderPropertiesResponseOutput) ConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.ConnectionStatus }).(pulumi.StringPtrOutput)
}

// The data plane authentication identity details.
func (o RecoveryServicesProviderPropertiesResponseOutput) DataPlaneAuthenticationIdentityDetails() IdentityProviderDetailsResponsePtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *IdentityProviderDetailsResponse {
		return v.DataPlaneAuthenticationIdentityDetails
	}).(IdentityProviderDetailsResponsePtrOutput)
}

// The DRA Id.
func (o RecoveryServicesProviderPropertiesResponseOutput) DraIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.DraIdentifier }).(pulumi.StringPtrOutput)
}

// The fabric friendly name.
func (o RecoveryServicesProviderPropertiesResponseOutput) FabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.FabricFriendlyName }).(pulumi.StringPtrOutput)
}

// Type of the site.
func (o RecoveryServicesProviderPropertiesResponseOutput) FabricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.FabricType }).(pulumi.StringPtrOutput)
}

// Friendly name of the DRA.
func (o RecoveryServicesProviderPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The recovery services provider health error details.
func (o RecoveryServicesProviderPropertiesResponseOutput) HealthErrorDetails() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) []HealthErrorResponse { return v.HealthErrorDetails }).(HealthErrorResponseArrayOutput)
}

// Time when last heartbeat was sent by the DRA.
func (o RecoveryServicesProviderPropertiesResponseOutput) LastHeartBeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.LastHeartBeat }).(pulumi.StringPtrOutput)
}

// The machine Id.
func (o RecoveryServicesProviderPropertiesResponseOutput) MachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.MachineId }).(pulumi.StringPtrOutput)
}

// The machine name.
func (o RecoveryServicesProviderPropertiesResponseOutput) MachineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.MachineName }).(pulumi.StringPtrOutput)
}

// Number of protected VMs currently managed by the DRA.
func (o RecoveryServicesProviderPropertiesResponseOutput) ProtectedItemCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *int { return v.ProtectedItemCount }).(pulumi.IntPtrOutput)
}

// The provider version.
func (o RecoveryServicesProviderPropertiesResponseOutput) ProviderVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.ProviderVersion }).(pulumi.StringPtrOutput)
}

// The provider version details.
func (o RecoveryServicesProviderPropertiesResponseOutput) ProviderVersionDetails() VersionDetailsResponsePtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *VersionDetailsResponse {
		return v.ProviderVersionDetails
	}).(VersionDetailsResponsePtrOutput)
}

// Expiry date of the version.
func (o RecoveryServicesProviderPropertiesResponseOutput) ProviderVersionExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.ProviderVersionExpiryDate }).(pulumi.StringPtrOutput)
}

// DRA version status.
func (o RecoveryServicesProviderPropertiesResponseOutput) ProviderVersionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.ProviderVersionState }).(pulumi.StringPtrOutput)
}

// The resource access identity details.
func (o RecoveryServicesProviderPropertiesResponseOutput) ResourceAccessIdentityDetails() IdentityProviderDetailsResponsePtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *IdentityProviderDetailsResponse {
		return v.ResourceAccessIdentityDetails
	}).(IdentityProviderDetailsResponsePtrOutput)
}

// The fabric provider.
func (o RecoveryServicesProviderPropertiesResponseOutput) ServerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecoveryServicesProviderPropertiesResponse) *string { return v.ServerVersion }).(pulumi.StringPtrOutput)
}

// Replication agent details.
type ReplicationAgentDetailsResponse struct {
	// The replication agent Bios Id.
	BiosId string `pulumi:"biosId"`
	// The fabric object Id.
	FabricObjectId string `pulumi:"fabricObjectId"`
	// The replication agent Fqdn.
	Fqdn string `pulumi:"fqdn"`
	// The health of the replication agent.
	Health string `pulumi:"health"`
	// The health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The replication agent Id.
	Id string `pulumi:"id"`
	// The last heartbeat received from the replication agent.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The replication agent name.
	Name string `pulumi:"name"`
	// The version.
	Version string `pulumi:"version"`
}

// Replication agent details.
type ReplicationAgentDetailsResponseOutput struct{ *pulumi.OutputState }

func (ReplicationAgentDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationAgentDetailsResponse)(nil)).Elem()
}

func (o ReplicationAgentDetailsResponseOutput) ToReplicationAgentDetailsResponseOutput() ReplicationAgentDetailsResponseOutput {
	return o
}

func (o ReplicationAgentDetailsResponseOutput) ToReplicationAgentDetailsResponseOutputWithContext(ctx context.Context) ReplicationAgentDetailsResponseOutput {
	return o
}

// The replication agent Bios Id.
func (o ReplicationAgentDetailsResponseOutput) BiosId() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationAgentDetailsResponse) string { return v.BiosId }).(pulumi.StringOutput)
}

// The fabric object Id.
func (o ReplicationAgentDetailsResponseOutput) FabricObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationAgentDetailsResponse) string { return v.FabricObjectId }).(pulumi.StringOutput)
}

// The replication agent Fqdn.
func (o ReplicationAgentDetailsResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationAgentDetailsResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The health of the replication agent.
func (o ReplicationAgentDetailsResponseOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationAgentDetailsResponse) string { return v.Health }).(pulumi.StringOutput)
}

// The health errors.
func (o ReplicationAgentDetailsResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v ReplicationAgentDetailsResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The replication agent Id.
func (o ReplicationAgentDetailsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationAgentDetailsResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The last heartbeat received from the replication agent.
func (o ReplicationAgentDetailsResponseOutput) LastHeartbeatUtc() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationAgentDetailsResponse) string { return v.LastHeartbeatUtc }).(pulumi.StringOutput)
}

// The replication agent name.
func (o ReplicationAgentDetailsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationAgentDetailsResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The version.
func (o ReplicationAgentDetailsResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationAgentDetailsResponse) string { return v.Version }).(pulumi.StringOutput)
}

type ReplicationAgentDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (ReplicationAgentDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationAgentDetailsResponse)(nil)).Elem()
}

func (o ReplicationAgentDetailsResponseArrayOutput) ToReplicationAgentDetailsResponseArrayOutput() ReplicationAgentDetailsResponseArrayOutput {
	return o
}

func (o ReplicationAgentDetailsResponseArrayOutput) ToReplicationAgentDetailsResponseArrayOutputWithContext(ctx context.Context) ReplicationAgentDetailsResponseArrayOutput {
	return o
}

func (o ReplicationAgentDetailsResponseArrayOutput) Index(i pulumi.IntInput) ReplicationAgentDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationAgentDetailsResponse {
		return vs[0].([]ReplicationAgentDetailsResponse)[vs[1].(int)]
	}).(ReplicationAgentDetailsResponseOutput)
}

// Replication protected item custom data details.
type ReplicationProtectedItemPropertiesResponse struct {
	// The Current active location of the PE.
	ActiveLocation *string `pulumi:"activeLocation"`
	// The allowed operations on the Replication protected item.
	AllowedOperations []string `pulumi:"allowedOperations"`
	// The current scenario.
	CurrentScenario *CurrentScenarioDetailsResponse `pulumi:"currentScenario"`
	// The correlation Id for events associated with this protected item.
	EventCorrelationId *string `pulumi:"eventCorrelationId"`
	// The consolidated failover health for the VM.
	FailoverHealth *string `pulumi:"failoverHealth"`
	// The recovery point ARM Id to which the Vm was failed over.
	FailoverRecoveryPointId *string `pulumi:"failoverRecoveryPointId"`
	// The name.
	FriendlyName *string `pulumi:"friendlyName"`
	// List of health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The Last successful failover time.
	LastSuccessfulFailoverTime *string `pulumi:"lastSuccessfulFailoverTime"`
	// The Last successful test failover time.
	LastSuccessfulTestFailoverTime *string `pulumi:"lastSuccessfulTestFailoverTime"`
	// The name of Policy governing this PE.
	PolicyFriendlyName *string `pulumi:"policyFriendlyName"`
	// The ID of Policy governing this PE.
	PolicyId *string `pulumi:"policyId"`
	// The friendly name of the primary fabric.
	PrimaryFabricFriendlyName *string `pulumi:"primaryFabricFriendlyName"`
	// The fabric provider of the primary fabric.
	PrimaryFabricProvider *string `pulumi:"primaryFabricProvider"`
	// The name of primary protection container friendly name.
	PrimaryProtectionContainerFriendlyName *string `pulumi:"primaryProtectionContainerFriendlyName"`
	// The protected item ARM Id.
	ProtectableItemId *string `pulumi:"protectableItemId"`
	// The type of protected item type.
	ProtectedItemType *string `pulumi:"protectedItemType"`
	// The protection status.
	ProtectionState *string `pulumi:"protectionState"`
	// The protection state description.
	ProtectionStateDescription *string `pulumi:"protectionStateDescription"`
	// The Replication provider custom settings.
	ProviderSpecificDetails interface{} `pulumi:"providerSpecificDetails"`
	// The recovery container Id.
	RecoveryContainerId *string `pulumi:"recoveryContainerId"`
	// The friendly name of recovery fabric.
	RecoveryFabricFriendlyName *string `pulumi:"recoveryFabricFriendlyName"`
	// The Arm Id of recovery fabric.
	RecoveryFabricId *string `pulumi:"recoveryFabricId"`
	// The name of recovery container friendly name.
	RecoveryProtectionContainerFriendlyName *string `pulumi:"recoveryProtectionContainerFriendlyName"`
	// The recovery provider ARM Id.
	RecoveryServicesProviderId *string `pulumi:"recoveryServicesProviderId"`
	// The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.
	ReplicationHealth *string `pulumi:"replicationHealth"`
	// The switch provider state.
	SwitchProviderState *string `pulumi:"switchProviderState"`
	// The switch provider state description.
	SwitchProviderStateDescription *string `pulumi:"switchProviderStateDescription"`
	// The Test failover state.
	TestFailoverState *string `pulumi:"testFailoverState"`
	// The Test failover state description.
	TestFailoverStateDescription *string `pulumi:"testFailoverStateDescription"`
}

// Replication protected item custom data details.
type ReplicationProtectedItemPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ReplicationProtectedItemPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationProtectedItemPropertiesResponse)(nil)).Elem()
}

func (o ReplicationProtectedItemPropertiesResponseOutput) ToReplicationProtectedItemPropertiesResponseOutput() ReplicationProtectedItemPropertiesResponseOutput {
	return o
}

func (o ReplicationProtectedItemPropertiesResponseOutput) ToReplicationProtectedItemPropertiesResponseOutputWithContext(ctx context.Context) ReplicationProtectedItemPropertiesResponseOutput {
	return o
}

// The Current active location of the PE.
func (o ReplicationProtectedItemPropertiesResponseOutput) ActiveLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ActiveLocation }).(pulumi.StringPtrOutput)
}

// The allowed operations on the Replication protected item.
func (o ReplicationProtectedItemPropertiesResponseOutput) AllowedOperations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) []string { return v.AllowedOperations }).(pulumi.StringArrayOutput)
}

// The current scenario.
func (o ReplicationProtectedItemPropertiesResponseOutput) CurrentScenario() CurrentScenarioDetailsResponsePtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *CurrentScenarioDetailsResponse {
		return v.CurrentScenario
	}).(CurrentScenarioDetailsResponsePtrOutput)
}

// The correlation Id for events associated with this protected item.
func (o ReplicationProtectedItemPropertiesResponseOutput) EventCorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.EventCorrelationId }).(pulumi.StringPtrOutput)
}

// The consolidated failover health for the VM.
func (o ReplicationProtectedItemPropertiesResponseOutput) FailoverHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.FailoverHealth }).(pulumi.StringPtrOutput)
}

// The recovery point ARM Id to which the Vm was failed over.
func (o ReplicationProtectedItemPropertiesResponseOutput) FailoverRecoveryPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.FailoverRecoveryPointId }).(pulumi.StringPtrOutput)
}

// The name.
func (o ReplicationProtectedItemPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// List of health errors.
func (o ReplicationProtectedItemPropertiesResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The Last successful failover time.
func (o ReplicationProtectedItemPropertiesResponseOutput) LastSuccessfulFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.LastSuccessfulFailoverTime }).(pulumi.StringPtrOutput)
}

// The Last successful test failover time.
func (o ReplicationProtectedItemPropertiesResponseOutput) LastSuccessfulTestFailoverTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.LastSuccessfulTestFailoverTime }).(pulumi.StringPtrOutput)
}

// The name of Policy governing this PE.
func (o ReplicationProtectedItemPropertiesResponseOutput) PolicyFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.PolicyFriendlyName }).(pulumi.StringPtrOutput)
}

// The ID of Policy governing this PE.
func (o ReplicationProtectedItemPropertiesResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// The friendly name of the primary fabric.
func (o ReplicationProtectedItemPropertiesResponseOutput) PrimaryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.PrimaryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The fabric provider of the primary fabric.
func (o ReplicationProtectedItemPropertiesResponseOutput) PrimaryFabricProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.PrimaryFabricProvider }).(pulumi.StringPtrOutput)
}

// The name of primary protection container friendly name.
func (o ReplicationProtectedItemPropertiesResponseOutput) PrimaryProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string {
		return v.PrimaryProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The protected item ARM Id.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProtectableItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ProtectableItemId }).(pulumi.StringPtrOutput)
}

// The type of protected item type.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ProtectedItemType }).(pulumi.StringPtrOutput)
}

// The protection status.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// The protection state description.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProtectionStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ProtectionStateDescription }).(pulumi.StringPtrOutput)
}

// The Replication provider custom settings.
func (o ReplicationProtectedItemPropertiesResponseOutput) ProviderSpecificDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) interface{} { return v.ProviderSpecificDetails }).(pulumi.AnyOutput)
}

// The recovery container Id.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.RecoveryContainerId }).(pulumi.StringPtrOutput)
}

// The friendly name of recovery fabric.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryFabricFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.RecoveryFabricFriendlyName }).(pulumi.StringPtrOutput)
}

// The Arm Id of recovery fabric.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryFabricId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.RecoveryFabricId }).(pulumi.StringPtrOutput)
}

// The name of recovery container friendly name.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryProtectionContainerFriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string {
		return v.RecoveryProtectionContainerFriendlyName
	}).(pulumi.StringPtrOutput)
}

// The recovery provider ARM Id.
func (o ReplicationProtectedItemPropertiesResponseOutput) RecoveryServicesProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.RecoveryServicesProviderId }).(pulumi.StringPtrOutput)
}

// The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.
func (o ReplicationProtectedItemPropertiesResponseOutput) ReplicationHealth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.ReplicationHealth }).(pulumi.StringPtrOutput)
}

// The switch provider state.
func (o ReplicationProtectedItemPropertiesResponseOutput) SwitchProviderState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.SwitchProviderState }).(pulumi.StringPtrOutput)
}

// The switch provider state description.
func (o ReplicationProtectedItemPropertiesResponseOutput) SwitchProviderStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.SwitchProviderStateDescription }).(pulumi.StringPtrOutput)
}

// The Test failover state.
func (o ReplicationProtectedItemPropertiesResponseOutput) TestFailoverState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.TestFailoverState }).(pulumi.StringPtrOutput)
}

// The Test failover state description.
func (o ReplicationProtectedItemPropertiesResponseOutput) TestFailoverStateDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationProtectedItemPropertiesResponse) *string { return v.TestFailoverStateDescription }).(pulumi.StringPtrOutput)
}

// Reprotect agent details.
type ReprotectAgentDetailsResponse struct {
	// The list of accessible datastores fetched from discovery.
	AccessibleDatastores []string `pulumi:"accessibleDatastores"`
	// The reprotect agent Bios Id.
	BiosId string `pulumi:"biosId"`
	// The fabric object Id.
	FabricObjectId string `pulumi:"fabricObjectId"`
	// The reprotect agent Fqdn.
	Fqdn string `pulumi:"fqdn"`
	// The health of the reprotect agent.
	Health string `pulumi:"health"`
	// The health errors.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The reprotect agent Id.
	Id string `pulumi:"id"`
	// The last time when SDS information discovered in SRS.
	LastDiscoveryInUtc string `pulumi:"lastDiscoveryInUtc"`
	// The last heartbeat received from the reprotect agent.
	LastHeartbeatUtc string `pulumi:"lastHeartbeatUtc"`
	// The reprotect agent name.
	Name string `pulumi:"name"`
	// The protected item count.
	ProtectedItemCount int `pulumi:"protectedItemCount"`
	// The Vcenter Id.
	VcenterId string `pulumi:"vcenterId"`
	// The version.
	Version string `pulumi:"version"`
}

// Reprotect agent details.
type ReprotectAgentDetailsResponseOutput struct{ *pulumi.OutputState }

func (ReprotectAgentDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReprotectAgentDetailsResponse)(nil)).Elem()
}

func (o ReprotectAgentDetailsResponseOutput) ToReprotectAgentDetailsResponseOutput() ReprotectAgentDetailsResponseOutput {
	return o
}

func (o ReprotectAgentDetailsResponseOutput) ToReprotectAgentDetailsResponseOutputWithContext(ctx context.Context) ReprotectAgentDetailsResponseOutput {
	return o
}

// The list of accessible datastores fetched from discovery.
func (o ReprotectAgentDetailsResponseOutput) AccessibleDatastores() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReprotectAgentDetailsResponse) []string { return v.AccessibleDatastores }).(pulumi.StringArrayOutput)
}

// The reprotect agent Bios Id.
func (o ReprotectAgentDetailsResponseOutput) BiosId() pulumi.StringOutput {
	return o.ApplyT(func(v ReprotectAgentDetailsResponse) string { return v.BiosId }).(pulumi.StringOutput)
}

// The fabric object Id.
func (o ReprotectAgentDetailsResponseOutput) FabricObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v ReprotectAgentDetailsResponse) string { return v.FabricObjectId }).(pulumi.StringOutput)
}

// The reprotect agent Fqdn.
func (o ReprotectAgentDetailsResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v ReprotectAgentDetailsResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The health of the reprotect agent.
func (o ReprotectAgentDetailsResponseOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v ReprotectAgentDetailsResponse) string { return v.Health }).(pulumi.StringOutput)
}

// The health errors.
func (o ReprotectAgentDetailsResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v ReprotectAgentDetailsResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The reprotect agent Id.
func (o ReprotectAgentDetailsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ReprotectAgentDetailsResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The last time when SDS information discovered in SRS.
func (o ReprotectAgentDetailsResponseOutput) LastDiscoveryInUtc() pulumi.StringOutput {
	return o.ApplyT(func(v ReprotectAgentDetailsResponse) string { return v.LastDiscoveryInUtc }).(pulumi.StringOutput)
}

// The last heartbeat received from the reprotect agent.
func (o ReprotectAgentDetailsResponseOutput) LastHeartbeatUtc() pulumi.StringOutput {
	return o.ApplyT(func(v ReprotectAgentDetailsResponse) string { return v.LastHeartbeatUtc }).(pulumi.StringOutput)
}

// The reprotect agent name.
func (o ReprotectAgentDetailsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReprotectAgentDetailsResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The protected item count.
func (o ReprotectAgentDetailsResponseOutput) ProtectedItemCount() pulumi.IntOutput {
	return o.ApplyT(func(v ReprotectAgentDetailsResponse) int { return v.ProtectedItemCount }).(pulumi.IntOutput)
}

// The Vcenter Id.
func (o ReprotectAgentDetailsResponseOutput) VcenterId() pulumi.StringOutput {
	return o.ApplyT(func(v ReprotectAgentDetailsResponse) string { return v.VcenterId }).(pulumi.StringOutput)
}

// The version.
func (o ReprotectAgentDetailsResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ReprotectAgentDetailsResponse) string { return v.Version }).(pulumi.StringOutput)
}

type ReprotectAgentDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (ReprotectAgentDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReprotectAgentDetailsResponse)(nil)).Elem()
}

func (o ReprotectAgentDetailsResponseArrayOutput) ToReprotectAgentDetailsResponseArrayOutput() ReprotectAgentDetailsResponseArrayOutput {
	return o
}

func (o ReprotectAgentDetailsResponseArrayOutput) ToReprotectAgentDetailsResponseArrayOutputWithContext(ctx context.Context) ReprotectAgentDetailsResponseArrayOutput {
	return o
}

func (o ReprotectAgentDetailsResponseArrayOutput) Index(i pulumi.IntInput) ReprotectAgentDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReprotectAgentDetailsResponse {
		return vs[0].([]ReprotectAgentDetailsResponse)[vs[1].(int)]
	}).(ReprotectAgentDetailsResponseOutput)
}

type ResourceGuardOperationDetail struct {
	DefaultResourceRequest *string `pulumi:"defaultResourceRequest"`
	VaultCriticalOperation *string `pulumi:"vaultCriticalOperation"`
}

// ResourceGuardOperationDetailInput is an input type that accepts ResourceGuardOperationDetailArgs and ResourceGuardOperationDetailOutput values.
// You can construct a concrete instance of `ResourceGuardOperationDetailInput` via:
//
//	ResourceGuardOperationDetailArgs{...}
type ResourceGuardOperationDetailInput interface {
	pulumi.Input

	ToResourceGuardOperationDetailOutput() ResourceGuardOperationDetailOutput
	ToResourceGuardOperationDetailOutputWithContext(context.Context) ResourceGuardOperationDetailOutput
}

type ResourceGuardOperationDetailArgs struct {
	DefaultResourceRequest pulumi.StringPtrInput `pulumi:"defaultResourceRequest"`
	VaultCriticalOperation pulumi.StringPtrInput `pulumi:"vaultCriticalOperation"`
}

func (ResourceGuardOperationDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGuardOperationDetail)(nil)).Elem()
}

func (i ResourceGuardOperationDetailArgs) ToResourceGuardOperationDetailOutput() ResourceGuardOperationDetailOutput {
	return i.ToResourceGuardOperationDetailOutputWithContext(context.Background())
}

func (i ResourceGuardOperationDetailArgs) ToResourceGuardOperationDetailOutputWithContext(ctx context.Context) ResourceGuardOperationDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGuardOperationDetailOutput)
}

// ResourceGuardOperationDetailArrayInput is an input type that accepts ResourceGuardOperationDetailArray and ResourceGuardOperationDetailArrayOutput values.
// You can construct a concrete instance of `ResourceGuardOperationDetailArrayInput` via:
//
//	ResourceGuardOperationDetailArray{ ResourceGuardOperationDetailArgs{...} }
type ResourceGuardOperationDetailArrayInput interface {
	pulumi.Input

	ToResourceGuardOperationDetailArrayOutput() ResourceGuardOperationDetailArrayOutput
	ToResourceGuardOperationDetailArrayOutputWithContext(context.Context) ResourceGuardOperationDetailArrayOutput
}

type ResourceGuardOperationDetailArray []ResourceGuardOperationDetailInput

func (ResourceGuardOperationDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGuardOperationDetail)(nil)).Elem()
}

func (i ResourceGuardOperationDetailArray) ToResourceGuardOperationDetailArrayOutput() ResourceGuardOperationDetailArrayOutput {
	return i.ToResourceGuardOperationDetailArrayOutputWithContext(context.Background())
}

func (i ResourceGuardOperationDetailArray) ToResourceGuardOperationDetailArrayOutputWithContext(ctx context.Context) ResourceGuardOperationDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGuardOperationDetailArrayOutput)
}

type ResourceGuardOperationDetailOutput struct{ *pulumi.OutputState }

func (ResourceGuardOperationDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGuardOperationDetail)(nil)).Elem()
}

func (o ResourceGuardOperationDetailOutput) ToResourceGuardOperationDetailOutput() ResourceGuardOperationDetailOutput {
	return o
}

func (o ResourceGuardOperationDetailOutput) ToResourceGuardOperationDetailOutputWithContext(ctx context.Context) ResourceGuardOperationDetailOutput {
	return o
}

func (o ResourceGuardOperationDetailOutput) DefaultResourceRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardOperationDetail) *string { return v.DefaultResourceRequest }).(pulumi.StringPtrOutput)
}

func (o ResourceGuardOperationDetailOutput) VaultCriticalOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardOperationDetail) *string { return v.VaultCriticalOperation }).(pulumi.StringPtrOutput)
}

type ResourceGuardOperationDetailArrayOutput struct{ *pulumi.OutputState }

func (ResourceGuardOperationDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGuardOperationDetail)(nil)).Elem()
}

func (o ResourceGuardOperationDetailArrayOutput) ToResourceGuardOperationDetailArrayOutput() ResourceGuardOperationDetailArrayOutput {
	return o
}

func (o ResourceGuardOperationDetailArrayOutput) ToResourceGuardOperationDetailArrayOutputWithContext(ctx context.Context) ResourceGuardOperationDetailArrayOutput {
	return o
}

func (o ResourceGuardOperationDetailArrayOutput) Index(i pulumi.IntInput) ResourceGuardOperationDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGuardOperationDetail {
		return vs[0].([]ResourceGuardOperationDetail)[vs[1].(int)]
	}).(ResourceGuardOperationDetailOutput)
}

type ResourceGuardOperationDetailResponse struct {
	DefaultResourceRequest *string `pulumi:"defaultResourceRequest"`
	VaultCriticalOperation *string `pulumi:"vaultCriticalOperation"`
}

type ResourceGuardOperationDetailResponseOutput struct{ *pulumi.OutputState }

func (ResourceGuardOperationDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGuardOperationDetailResponse)(nil)).Elem()
}

func (o ResourceGuardOperationDetailResponseOutput) ToResourceGuardOperationDetailResponseOutput() ResourceGuardOperationDetailResponseOutput {
	return o
}

func (o ResourceGuardOperationDetailResponseOutput) ToResourceGuardOperationDetailResponseOutputWithContext(ctx context.Context) ResourceGuardOperationDetailResponseOutput {
	return o
}

func (o ResourceGuardOperationDetailResponseOutput) DefaultResourceRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardOperationDetailResponse) *string { return v.DefaultResourceRequest }).(pulumi.StringPtrOutput)
}

func (o ResourceGuardOperationDetailResponseOutput) VaultCriticalOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardOperationDetailResponse) *string { return v.VaultCriticalOperation }).(pulumi.StringPtrOutput)
}

type ResourceGuardOperationDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceGuardOperationDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGuardOperationDetailResponse)(nil)).Elem()
}

func (o ResourceGuardOperationDetailResponseArrayOutput) ToResourceGuardOperationDetailResponseArrayOutput() ResourceGuardOperationDetailResponseArrayOutput {
	return o
}

func (o ResourceGuardOperationDetailResponseArrayOutput) ToResourceGuardOperationDetailResponseArrayOutputWithContext(ctx context.Context) ResourceGuardOperationDetailResponseArrayOutput {
	return o
}

func (o ResourceGuardOperationDetailResponseArrayOutput) Index(i pulumi.IntInput) ResourceGuardOperationDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGuardOperationDetailResponse {
		return vs[0].([]ResourceGuardOperationDetailResponse)[vs[1].(int)]
	}).(ResourceGuardOperationDetailResponseOutput)
}

type ResourceGuardProxyBase struct {
	Description                   *string                        `pulumi:"description"`
	LastUpdatedTime               *string                        `pulumi:"lastUpdatedTime"`
	ResourceGuardOperationDetails []ResourceGuardOperationDetail `pulumi:"resourceGuardOperationDetails"`
	ResourceGuardResourceId       string                         `pulumi:"resourceGuardResourceId"`
}

// ResourceGuardProxyBaseInput is an input type that accepts ResourceGuardProxyBaseArgs and ResourceGuardProxyBaseOutput values.
// You can construct a concrete instance of `ResourceGuardProxyBaseInput` via:
//
//	ResourceGuardProxyBaseArgs{...}
type ResourceGuardProxyBaseInput interface {
	pulumi.Input

	ToResourceGuardProxyBaseOutput() ResourceGuardProxyBaseOutput
	ToResourceGuardProxyBaseOutputWithContext(context.Context) ResourceGuardProxyBaseOutput
}

type ResourceGuardProxyBaseArgs struct {
	Description                   pulumi.StringPtrInput                  `pulumi:"description"`
	LastUpdatedTime               pulumi.StringPtrInput                  `pulumi:"lastUpdatedTime"`
	ResourceGuardOperationDetails ResourceGuardOperationDetailArrayInput `pulumi:"resourceGuardOperationDetails"`
	ResourceGuardResourceId       pulumi.StringInput                     `pulumi:"resourceGuardResourceId"`
}

func (ResourceGuardProxyBaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGuardProxyBase)(nil)).Elem()
}

func (i ResourceGuardProxyBaseArgs) ToResourceGuardProxyBaseOutput() ResourceGuardProxyBaseOutput {
	return i.ToResourceGuardProxyBaseOutputWithContext(context.Background())
}

func (i ResourceGuardProxyBaseArgs) ToResourceGuardProxyBaseOutputWithContext(ctx context.Context) ResourceGuardProxyBaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGuardProxyBaseOutput)
}

func (i ResourceGuardProxyBaseArgs) ToResourceGuardProxyBasePtrOutput() ResourceGuardProxyBasePtrOutput {
	return i.ToResourceGuardProxyBasePtrOutputWithContext(context.Background())
}

func (i ResourceGuardProxyBaseArgs) ToResourceGuardProxyBasePtrOutputWithContext(ctx context.Context) ResourceGuardProxyBasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGuardProxyBaseOutput).ToResourceGuardProxyBasePtrOutputWithContext(ctx)
}

// ResourceGuardProxyBasePtrInput is an input type that accepts ResourceGuardProxyBaseArgs, ResourceGuardProxyBasePtr and ResourceGuardProxyBasePtrOutput values.
// You can construct a concrete instance of `ResourceGuardProxyBasePtrInput` via:
//
//	        ResourceGuardProxyBaseArgs{...}
//
//	or:
//
//	        nil
type ResourceGuardProxyBasePtrInput interface {
	pulumi.Input

	ToResourceGuardProxyBasePtrOutput() ResourceGuardProxyBasePtrOutput
	ToResourceGuardProxyBasePtrOutputWithContext(context.Context) ResourceGuardProxyBasePtrOutput
}

type resourceGuardProxyBasePtrType ResourceGuardProxyBaseArgs

func ResourceGuardProxyBasePtr(v *ResourceGuardProxyBaseArgs) ResourceGuardProxyBasePtrInput {
	return (*resourceGuardProxyBasePtrType)(v)
}

func (*resourceGuardProxyBasePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGuardProxyBase)(nil)).Elem()
}

func (i *resourceGuardProxyBasePtrType) ToResourceGuardProxyBasePtrOutput() ResourceGuardProxyBasePtrOutput {
	return i.ToResourceGuardProxyBasePtrOutputWithContext(context.Background())
}

func (i *resourceGuardProxyBasePtrType) ToResourceGuardProxyBasePtrOutputWithContext(ctx context.Context) ResourceGuardProxyBasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGuardProxyBasePtrOutput)
}

type ResourceGuardProxyBaseOutput struct{ *pulumi.OutputState }

func (ResourceGuardProxyBaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGuardProxyBase)(nil)).Elem()
}

func (o ResourceGuardProxyBaseOutput) ToResourceGuardProxyBaseOutput() ResourceGuardProxyBaseOutput {
	return o
}

func (o ResourceGuardProxyBaseOutput) ToResourceGuardProxyBaseOutputWithContext(ctx context.Context) ResourceGuardProxyBaseOutput {
	return o
}

func (o ResourceGuardProxyBaseOutput) ToResourceGuardProxyBasePtrOutput() ResourceGuardProxyBasePtrOutput {
	return o.ToResourceGuardProxyBasePtrOutputWithContext(context.Background())
}

func (o ResourceGuardProxyBaseOutput) ToResourceGuardProxyBasePtrOutputWithContext(ctx context.Context) ResourceGuardProxyBasePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceGuardProxyBase) *ResourceGuardProxyBase {
		return &v
	}).(ResourceGuardProxyBasePtrOutput)
}

func (o ResourceGuardProxyBaseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardProxyBase) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ResourceGuardProxyBaseOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardProxyBase) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

func (o ResourceGuardProxyBaseOutput) ResourceGuardOperationDetails() ResourceGuardOperationDetailArrayOutput {
	return o.ApplyT(func(v ResourceGuardProxyBase) []ResourceGuardOperationDetail { return v.ResourceGuardOperationDetails }).(ResourceGuardOperationDetailArrayOutput)
}

func (o ResourceGuardProxyBaseOutput) ResourceGuardResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGuardProxyBase) string { return v.ResourceGuardResourceId }).(pulumi.StringOutput)
}

type ResourceGuardProxyBasePtrOutput struct{ *pulumi.OutputState }

func (ResourceGuardProxyBasePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGuardProxyBase)(nil)).Elem()
}

func (o ResourceGuardProxyBasePtrOutput) ToResourceGuardProxyBasePtrOutput() ResourceGuardProxyBasePtrOutput {
	return o
}

func (o ResourceGuardProxyBasePtrOutput) ToResourceGuardProxyBasePtrOutputWithContext(ctx context.Context) ResourceGuardProxyBasePtrOutput {
	return o
}

func (o ResourceGuardProxyBasePtrOutput) Elem() ResourceGuardProxyBaseOutput {
	return o.ApplyT(func(v *ResourceGuardProxyBase) ResourceGuardProxyBase {
		if v != nil {
			return *v
		}
		var ret ResourceGuardProxyBase
		return ret
	}).(ResourceGuardProxyBaseOutput)
}

func (o ResourceGuardProxyBasePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceGuardProxyBase) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ResourceGuardProxyBasePtrOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceGuardProxyBase) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdatedTime
	}).(pulumi.StringPtrOutput)
}

func (o ResourceGuardProxyBasePtrOutput) ResourceGuardOperationDetails() ResourceGuardOperationDetailArrayOutput {
	return o.ApplyT(func(v *ResourceGuardProxyBase) []ResourceGuardOperationDetail {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationDetails
	}).(ResourceGuardOperationDetailArrayOutput)
}

func (o ResourceGuardProxyBasePtrOutput) ResourceGuardResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceGuardProxyBase) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuardResourceId
	}).(pulumi.StringPtrOutput)
}

type ResourceGuardProxyBaseResponse struct {
	Description                   *string                                `pulumi:"description"`
	LastUpdatedTime               *string                                `pulumi:"lastUpdatedTime"`
	ResourceGuardOperationDetails []ResourceGuardOperationDetailResponse `pulumi:"resourceGuardOperationDetails"`
	ResourceGuardResourceId       string                                 `pulumi:"resourceGuardResourceId"`
}

type ResourceGuardProxyBaseResponseOutput struct{ *pulumi.OutputState }

func (ResourceGuardProxyBaseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGuardProxyBaseResponse)(nil)).Elem()
}

func (o ResourceGuardProxyBaseResponseOutput) ToResourceGuardProxyBaseResponseOutput() ResourceGuardProxyBaseResponseOutput {
	return o
}

func (o ResourceGuardProxyBaseResponseOutput) ToResourceGuardProxyBaseResponseOutputWithContext(ctx context.Context) ResourceGuardProxyBaseResponseOutput {
	return o
}

func (o ResourceGuardProxyBaseResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardProxyBaseResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ResourceGuardProxyBaseResponseOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardProxyBaseResponse) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

func (o ResourceGuardProxyBaseResponseOutput) ResourceGuardOperationDetails() ResourceGuardOperationDetailResponseArrayOutput {
	return o.ApplyT(func(v ResourceGuardProxyBaseResponse) []ResourceGuardOperationDetailResponse {
		return v.ResourceGuardOperationDetails
	}).(ResourceGuardOperationDetailResponseArrayOutput)
}

func (o ResourceGuardProxyBaseResponseOutput) ResourceGuardResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGuardProxyBaseResponse) string { return v.ResourceGuardResourceId }).(pulumi.StringOutput)
}

// Health Details for backup items.
type ResourceHealthDetailsResponse struct {
	// Health Code
	Code int `pulumi:"code"`
	// Health Message
	Message string `pulumi:"message"`
	// Health Recommended Actions
	Recommendations []string `pulumi:"recommendations"`
	// Health Title
	Title string `pulumi:"title"`
}

// Health Details for backup items.
type ResourceHealthDetailsResponseOutput struct{ *pulumi.OutputState }

func (ResourceHealthDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceHealthDetailsResponse)(nil)).Elem()
}

func (o ResourceHealthDetailsResponseOutput) ToResourceHealthDetailsResponseOutput() ResourceHealthDetailsResponseOutput {
	return o
}

func (o ResourceHealthDetailsResponseOutput) ToResourceHealthDetailsResponseOutputWithContext(ctx context.Context) ResourceHealthDetailsResponseOutput {
	return o
}

// Health Code
func (o ResourceHealthDetailsResponseOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v ResourceHealthDetailsResponse) int { return v.Code }).(pulumi.IntOutput)
}

// Health Message
func (o ResourceHealthDetailsResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceHealthDetailsResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Health Recommended Actions
func (o ResourceHealthDetailsResponseOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceHealthDetailsResponse) []string { return v.Recommendations }).(pulumi.StringArrayOutput)
}

// Health Title
func (o ResourceHealthDetailsResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceHealthDetailsResponse) string { return v.Title }).(pulumi.StringOutput)
}

type ResourceHealthDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceHealthDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceHealthDetailsResponse)(nil)).Elem()
}

func (o ResourceHealthDetailsResponseArrayOutput) ToResourceHealthDetailsResponseArrayOutput() ResourceHealthDetailsResponseArrayOutput {
	return o
}

func (o ResourceHealthDetailsResponseArrayOutput) ToResourceHealthDetailsResponseArrayOutputWithContext(ctx context.Context) ResourceHealthDetailsResponseArrayOutput {
	return o
}

func (o ResourceHealthDetailsResponseArrayOutput) Index(i pulumi.IntInput) ResourceHealthDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceHealthDetailsResponse {
		return vs[0].([]ResourceHealthDetailsResponse)[vs[1].(int)]
	}).(ResourceHealthDetailsResponseOutput)
}

// Restore Settings  of the vault
type RestoreSettings struct {
	// Settings for CrossSubscriptionRestore
	CrossSubscriptionRestoreSettings *CrossSubscriptionRestoreSettings `pulumi:"crossSubscriptionRestoreSettings"`
}

// RestoreSettingsInput is an input type that accepts RestoreSettingsArgs and RestoreSettingsOutput values.
// You can construct a concrete instance of `RestoreSettingsInput` via:
//
//	RestoreSettingsArgs{...}
type RestoreSettingsInput interface {
	pulumi.Input

	ToRestoreSettingsOutput() RestoreSettingsOutput
	ToRestoreSettingsOutputWithContext(context.Context) RestoreSettingsOutput
}

// Restore Settings  of the vault
type RestoreSettingsArgs struct {
	// Settings for CrossSubscriptionRestore
	CrossSubscriptionRestoreSettings CrossSubscriptionRestoreSettingsPtrInput `pulumi:"crossSubscriptionRestoreSettings"`
}

func (RestoreSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreSettings)(nil)).Elem()
}

func (i RestoreSettingsArgs) ToRestoreSettingsOutput() RestoreSettingsOutput {
	return i.ToRestoreSettingsOutputWithContext(context.Background())
}

func (i RestoreSettingsArgs) ToRestoreSettingsOutputWithContext(ctx context.Context) RestoreSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreSettingsOutput)
}

func (i RestoreSettingsArgs) ToRestoreSettingsPtrOutput() RestoreSettingsPtrOutput {
	return i.ToRestoreSettingsPtrOutputWithContext(context.Background())
}

func (i RestoreSettingsArgs) ToRestoreSettingsPtrOutputWithContext(ctx context.Context) RestoreSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreSettingsOutput).ToRestoreSettingsPtrOutputWithContext(ctx)
}

// RestoreSettingsPtrInput is an input type that accepts RestoreSettingsArgs, RestoreSettingsPtr and RestoreSettingsPtrOutput values.
// You can construct a concrete instance of `RestoreSettingsPtrInput` via:
//
//	        RestoreSettingsArgs{...}
//
//	or:
//
//	        nil
type RestoreSettingsPtrInput interface {
	pulumi.Input

	ToRestoreSettingsPtrOutput() RestoreSettingsPtrOutput
	ToRestoreSettingsPtrOutputWithContext(context.Context) RestoreSettingsPtrOutput
}

type restoreSettingsPtrType RestoreSettingsArgs

func RestoreSettingsPtr(v *RestoreSettingsArgs) RestoreSettingsPtrInput {
	return (*restoreSettingsPtrType)(v)
}

func (*restoreSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreSettings)(nil)).Elem()
}

func (i *restoreSettingsPtrType) ToRestoreSettingsPtrOutput() RestoreSettingsPtrOutput {
	return i.ToRestoreSettingsPtrOutputWithContext(context.Background())
}

func (i *restoreSettingsPtrType) ToRestoreSettingsPtrOutputWithContext(ctx context.Context) RestoreSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreSettingsPtrOutput)
}

// Restore Settings  of the vault
type RestoreSettingsOutput struct{ *pulumi.OutputState }

func (RestoreSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreSettings)(nil)).Elem()
}

func (o RestoreSettingsOutput) ToRestoreSettingsOutput() RestoreSettingsOutput {
	return o
}

func (o RestoreSettingsOutput) ToRestoreSettingsOutputWithContext(ctx context.Context) RestoreSettingsOutput {
	return o
}

func (o RestoreSettingsOutput) ToRestoreSettingsPtrOutput() RestoreSettingsPtrOutput {
	return o.ToRestoreSettingsPtrOutputWithContext(context.Background())
}

func (o RestoreSettingsOutput) ToRestoreSettingsPtrOutputWithContext(ctx context.Context) RestoreSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RestoreSettings) *RestoreSettings {
		return &v
	}).(RestoreSettingsPtrOutput)
}

// Settings for CrossSubscriptionRestore
func (o RestoreSettingsOutput) CrossSubscriptionRestoreSettings() CrossSubscriptionRestoreSettingsPtrOutput {
	return o.ApplyT(func(v RestoreSettings) *CrossSubscriptionRestoreSettings { return v.CrossSubscriptionRestoreSettings }).(CrossSubscriptionRestoreSettingsPtrOutput)
}

type RestoreSettingsPtrOutput struct{ *pulumi.OutputState }

func (RestoreSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreSettings)(nil)).Elem()
}

func (o RestoreSettingsPtrOutput) ToRestoreSettingsPtrOutput() RestoreSettingsPtrOutput {
	return o
}

func (o RestoreSettingsPtrOutput) ToRestoreSettingsPtrOutputWithContext(ctx context.Context) RestoreSettingsPtrOutput {
	return o
}

func (o RestoreSettingsPtrOutput) Elem() RestoreSettingsOutput {
	return o.ApplyT(func(v *RestoreSettings) RestoreSettings {
		if v != nil {
			return *v
		}
		var ret RestoreSettings
		return ret
	}).(RestoreSettingsOutput)
}

// Settings for CrossSubscriptionRestore
func (o RestoreSettingsPtrOutput) CrossSubscriptionRestoreSettings() CrossSubscriptionRestoreSettingsPtrOutput {
	return o.ApplyT(func(v *RestoreSettings) *CrossSubscriptionRestoreSettings {
		if v == nil {
			return nil
		}
		return v.CrossSubscriptionRestoreSettings
	}).(CrossSubscriptionRestoreSettingsPtrOutput)
}

// Restore Settings  of the vault
type RestoreSettingsResponse struct {
	// Settings for CrossSubscriptionRestore
	CrossSubscriptionRestoreSettings *CrossSubscriptionRestoreSettingsResponse `pulumi:"crossSubscriptionRestoreSettings"`
}

// Restore Settings  of the vault
type RestoreSettingsResponseOutput struct{ *pulumi.OutputState }

func (RestoreSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreSettingsResponse)(nil)).Elem()
}

func (o RestoreSettingsResponseOutput) ToRestoreSettingsResponseOutput() RestoreSettingsResponseOutput {
	return o
}

func (o RestoreSettingsResponseOutput) ToRestoreSettingsResponseOutputWithContext(ctx context.Context) RestoreSettingsResponseOutput {
	return o
}

// Settings for CrossSubscriptionRestore
func (o RestoreSettingsResponseOutput) CrossSubscriptionRestoreSettings() CrossSubscriptionRestoreSettingsResponsePtrOutput {
	return o.ApplyT(func(v RestoreSettingsResponse) *CrossSubscriptionRestoreSettingsResponse {
		return v.CrossSubscriptionRestoreSettings
	}).(CrossSubscriptionRestoreSettingsResponsePtrOutput)
}

type RestoreSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (RestoreSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreSettingsResponse)(nil)).Elem()
}

func (o RestoreSettingsResponsePtrOutput) ToRestoreSettingsResponsePtrOutput() RestoreSettingsResponsePtrOutput {
	return o
}

func (o RestoreSettingsResponsePtrOutput) ToRestoreSettingsResponsePtrOutputWithContext(ctx context.Context) RestoreSettingsResponsePtrOutput {
	return o
}

func (o RestoreSettingsResponsePtrOutput) Elem() RestoreSettingsResponseOutput {
	return o.ApplyT(func(v *RestoreSettingsResponse) RestoreSettingsResponse {
		if v != nil {
			return *v
		}
		var ret RestoreSettingsResponse
		return ret
	}).(RestoreSettingsResponseOutput)
}

// Settings for CrossSubscriptionRestore
func (o RestoreSettingsResponsePtrOutput) CrossSubscriptionRestoreSettings() CrossSubscriptionRestoreSettingsResponsePtrOutput {
	return o.ApplyT(func(v *RestoreSettingsResponse) *CrossSubscriptionRestoreSettingsResponse {
		if v == nil {
			return nil
		}
		return v.CrossSubscriptionRestoreSettings
	}).(CrossSubscriptionRestoreSettingsResponsePtrOutput)
}

// Retention duration.
type RetentionDuration struct {
	// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
	// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
	Count *int `pulumi:"count"`
	// Retention duration type of retention policy.
	DurationType *string `pulumi:"durationType"`
}

// RetentionDurationInput is an input type that accepts RetentionDurationArgs and RetentionDurationOutput values.
// You can construct a concrete instance of `RetentionDurationInput` via:
//
//	RetentionDurationArgs{...}
type RetentionDurationInput interface {
	pulumi.Input

	ToRetentionDurationOutput() RetentionDurationOutput
	ToRetentionDurationOutputWithContext(context.Context) RetentionDurationOutput
}

// Retention duration.
type RetentionDurationArgs struct {
	// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
	// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Retention duration type of retention policy.
	DurationType pulumi.StringPtrInput `pulumi:"durationType"`
}

func (RetentionDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionDuration)(nil)).Elem()
}

func (i RetentionDurationArgs) ToRetentionDurationOutput() RetentionDurationOutput {
	return i.ToRetentionDurationOutputWithContext(context.Background())
}

func (i RetentionDurationArgs) ToRetentionDurationOutputWithContext(ctx context.Context) RetentionDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionDurationOutput)
}

func (i RetentionDurationArgs) ToRetentionDurationPtrOutput() RetentionDurationPtrOutput {
	return i.ToRetentionDurationPtrOutputWithContext(context.Background())
}

func (i RetentionDurationArgs) ToRetentionDurationPtrOutputWithContext(ctx context.Context) RetentionDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionDurationOutput).ToRetentionDurationPtrOutputWithContext(ctx)
}

// RetentionDurationPtrInput is an input type that accepts RetentionDurationArgs, RetentionDurationPtr and RetentionDurationPtrOutput values.
// You can construct a concrete instance of `RetentionDurationPtrInput` via:
//
//	        RetentionDurationArgs{...}
//
//	or:
//
//	        nil
type RetentionDurationPtrInput interface {
	pulumi.Input

	ToRetentionDurationPtrOutput() RetentionDurationPtrOutput
	ToRetentionDurationPtrOutputWithContext(context.Context) RetentionDurationPtrOutput
}

type retentionDurationPtrType RetentionDurationArgs

func RetentionDurationPtr(v *RetentionDurationArgs) RetentionDurationPtrInput {
	return (*retentionDurationPtrType)(v)
}

func (*retentionDurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionDuration)(nil)).Elem()
}

func (i *retentionDurationPtrType) ToRetentionDurationPtrOutput() RetentionDurationPtrOutput {
	return i.ToRetentionDurationPtrOutputWithContext(context.Background())
}

func (i *retentionDurationPtrType) ToRetentionDurationPtrOutputWithContext(ctx context.Context) RetentionDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionDurationPtrOutput)
}

// Retention duration.
type RetentionDurationOutput struct{ *pulumi.OutputState }

func (RetentionDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionDuration)(nil)).Elem()
}

func (o RetentionDurationOutput) ToRetentionDurationOutput() RetentionDurationOutput {
	return o
}

func (o RetentionDurationOutput) ToRetentionDurationOutputWithContext(ctx context.Context) RetentionDurationOutput {
	return o
}

func (o RetentionDurationOutput) ToRetentionDurationPtrOutput() RetentionDurationPtrOutput {
	return o.ToRetentionDurationPtrOutputWithContext(context.Background())
}

func (o RetentionDurationOutput) ToRetentionDurationPtrOutputWithContext(ctx context.Context) RetentionDurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RetentionDuration) *RetentionDuration {
		return &v
	}).(RetentionDurationPtrOutput)
}

// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
func (o RetentionDurationOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionDuration) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Retention duration type of retention policy.
func (o RetentionDurationOutput) DurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RetentionDuration) *string { return v.DurationType }).(pulumi.StringPtrOutput)
}

type RetentionDurationPtrOutput struct{ *pulumi.OutputState }

func (RetentionDurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionDuration)(nil)).Elem()
}

func (o RetentionDurationPtrOutput) ToRetentionDurationPtrOutput() RetentionDurationPtrOutput {
	return o
}

func (o RetentionDurationPtrOutput) ToRetentionDurationPtrOutputWithContext(ctx context.Context) RetentionDurationPtrOutput {
	return o
}

func (o RetentionDurationPtrOutput) Elem() RetentionDurationOutput {
	return o.ApplyT(func(v *RetentionDuration) RetentionDuration {
		if v != nil {
			return *v
		}
		var ret RetentionDuration
		return ret
	}).(RetentionDurationOutput)
}

// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
func (o RetentionDurationPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionDuration) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Retention duration type of retention policy.
func (o RetentionDurationPtrOutput) DurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionDuration) *string {
		if v == nil {
			return nil
		}
		return v.DurationType
	}).(pulumi.StringPtrOutput)
}

// Retention duration.
type RetentionDurationResponse struct {
	// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
	// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
	Count *int `pulumi:"count"`
	// Retention duration type of retention policy.
	DurationType *string `pulumi:"durationType"`
}

// Retention duration.
type RetentionDurationResponseOutput struct{ *pulumi.OutputState }

func (RetentionDurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionDurationResponse)(nil)).Elem()
}

func (o RetentionDurationResponseOutput) ToRetentionDurationResponseOutput() RetentionDurationResponseOutput {
	return o
}

func (o RetentionDurationResponseOutput) ToRetentionDurationResponseOutputWithContext(ctx context.Context) RetentionDurationResponseOutput {
	return o
}

// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
func (o RetentionDurationResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionDurationResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Retention duration type of retention policy.
func (o RetentionDurationResponseOutput) DurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RetentionDurationResponse) *string { return v.DurationType }).(pulumi.StringPtrOutput)
}

type RetentionDurationResponsePtrOutput struct{ *pulumi.OutputState }

func (RetentionDurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionDurationResponse)(nil)).Elem()
}

func (o RetentionDurationResponsePtrOutput) ToRetentionDurationResponsePtrOutput() RetentionDurationResponsePtrOutput {
	return o
}

func (o RetentionDurationResponsePtrOutput) ToRetentionDurationResponsePtrOutputWithContext(ctx context.Context) RetentionDurationResponsePtrOutput {
	return o
}

func (o RetentionDurationResponsePtrOutput) Elem() RetentionDurationResponseOutput {
	return o.ApplyT(func(v *RetentionDurationResponse) RetentionDurationResponse {
		if v != nil {
			return *v
		}
		var ret RetentionDurationResponse
		return ret
	}).(RetentionDurationResponseOutput)
}

// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
func (o RetentionDurationResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionDurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Retention duration type of retention policy.
func (o RetentionDurationResponsePtrOutput) DurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionDurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DurationType
	}).(pulumi.StringPtrOutput)
}

// The retention details of the MT.
type RetentionVolumeResponse struct {
	// The volume capacity.
	CapacityInBytes *float64 `pulumi:"capacityInBytes"`
	// The free space available in this volume.
	FreeSpaceInBytes *float64 `pulumi:"freeSpaceInBytes"`
	// The threshold percentage.
	ThresholdPercentage *int `pulumi:"thresholdPercentage"`
	// The volume name.
	VolumeName *string `pulumi:"volumeName"`
}

// The retention details of the MT.
type RetentionVolumeResponseOutput struct{ *pulumi.OutputState }

func (RetentionVolumeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionVolumeResponse)(nil)).Elem()
}

func (o RetentionVolumeResponseOutput) ToRetentionVolumeResponseOutput() RetentionVolumeResponseOutput {
	return o
}

func (o RetentionVolumeResponseOutput) ToRetentionVolumeResponseOutputWithContext(ctx context.Context) RetentionVolumeResponseOutput {
	return o
}

// The volume capacity.
func (o RetentionVolumeResponseOutput) CapacityInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RetentionVolumeResponse) *float64 { return v.CapacityInBytes }).(pulumi.Float64PtrOutput)
}

// The free space available in this volume.
func (o RetentionVolumeResponseOutput) FreeSpaceInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RetentionVolumeResponse) *float64 { return v.FreeSpaceInBytes }).(pulumi.Float64PtrOutput)
}

// The threshold percentage.
func (o RetentionVolumeResponseOutput) ThresholdPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionVolumeResponse) *int { return v.ThresholdPercentage }).(pulumi.IntPtrOutput)
}

// The volume name.
func (o RetentionVolumeResponseOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RetentionVolumeResponse) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type RetentionVolumeResponseArrayOutput struct{ *pulumi.OutputState }

func (RetentionVolumeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RetentionVolumeResponse)(nil)).Elem()
}

func (o RetentionVolumeResponseArrayOutput) ToRetentionVolumeResponseArrayOutput() RetentionVolumeResponseArrayOutput {
	return o
}

func (o RetentionVolumeResponseArrayOutput) ToRetentionVolumeResponseArrayOutputWithContext(ctx context.Context) RetentionVolumeResponseArrayOutput {
	return o
}

func (o RetentionVolumeResponseArrayOutput) Index(i pulumi.IntInput) RetentionVolumeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RetentionVolumeResponse {
		return vs[0].([]RetentionVolumeResponse)[vs[1].(int)]
	}).(RetentionVolumeResponseOutput)
}

// CS Accounts Details.
type RunAsAccountResponse struct {
	// The CS RunAs account Id.
	AccountId *string `pulumi:"accountId"`
	// The CS RunAs account name.
	AccountName *string `pulumi:"accountName"`
}

// CS Accounts Details.
type RunAsAccountResponseOutput struct{ *pulumi.OutputState }

func (RunAsAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RunAsAccountResponse)(nil)).Elem()
}

func (o RunAsAccountResponseOutput) ToRunAsAccountResponseOutput() RunAsAccountResponseOutput {
	return o
}

func (o RunAsAccountResponseOutput) ToRunAsAccountResponseOutputWithContext(ctx context.Context) RunAsAccountResponseOutput {
	return o
}

// The CS RunAs account Id.
func (o RunAsAccountResponseOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunAsAccountResponse) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The CS RunAs account name.
func (o RunAsAccountResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RunAsAccountResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

type RunAsAccountResponseArrayOutput struct{ *pulumi.OutputState }

func (RunAsAccountResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RunAsAccountResponse)(nil)).Elem()
}

func (o RunAsAccountResponseArrayOutput) ToRunAsAccountResponseArrayOutput() RunAsAccountResponseArrayOutput {
	return o
}

func (o RunAsAccountResponseArrayOutput) ToRunAsAccountResponseArrayOutputWithContext(ctx context.Context) RunAsAccountResponseArrayOutput {
	return o
}

func (o RunAsAccountResponseArrayOutput) Index(i pulumi.IntInput) RunAsAccountResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RunAsAccountResponse {
		return vs[0].([]RunAsAccountResponse)[vs[1].(int)]
	}).(RunAsAccountResponseOutput)
}

// Security Settings of the vault
type SecuritySettings struct {
	// Immutability Settings of a vault
	ImmutabilitySettings *ImmutabilitySettings `pulumi:"immutabilitySettings"`
	// Soft delete Settings of a vault
	SoftDeleteSettings *SoftDeleteSettings `pulumi:"softDeleteSettings"`
}

// SecuritySettingsInput is an input type that accepts SecuritySettingsArgs and SecuritySettingsOutput values.
// You can construct a concrete instance of `SecuritySettingsInput` via:
//
//	SecuritySettingsArgs{...}
type SecuritySettingsInput interface {
	pulumi.Input

	ToSecuritySettingsOutput() SecuritySettingsOutput
	ToSecuritySettingsOutputWithContext(context.Context) SecuritySettingsOutput
}

// Security Settings of the vault
type SecuritySettingsArgs struct {
	// Immutability Settings of a vault
	ImmutabilitySettings ImmutabilitySettingsPtrInput `pulumi:"immutabilitySettings"`
	// Soft delete Settings of a vault
	SoftDeleteSettings SoftDeleteSettingsPtrInput `pulumi:"softDeleteSettings"`
}

func (SecuritySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySettings)(nil)).Elem()
}

func (i SecuritySettingsArgs) ToSecuritySettingsOutput() SecuritySettingsOutput {
	return i.ToSecuritySettingsOutputWithContext(context.Background())
}

func (i SecuritySettingsArgs) ToSecuritySettingsOutputWithContext(ctx context.Context) SecuritySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySettingsOutput)
}

func (i SecuritySettingsArgs) ToSecuritySettingsPtrOutput() SecuritySettingsPtrOutput {
	return i.ToSecuritySettingsPtrOutputWithContext(context.Background())
}

func (i SecuritySettingsArgs) ToSecuritySettingsPtrOutputWithContext(ctx context.Context) SecuritySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySettingsOutput).ToSecuritySettingsPtrOutputWithContext(ctx)
}

// SecuritySettingsPtrInput is an input type that accepts SecuritySettingsArgs, SecuritySettingsPtr and SecuritySettingsPtrOutput values.
// You can construct a concrete instance of `SecuritySettingsPtrInput` via:
//
//	        SecuritySettingsArgs{...}
//
//	or:
//
//	        nil
type SecuritySettingsPtrInput interface {
	pulumi.Input

	ToSecuritySettingsPtrOutput() SecuritySettingsPtrOutput
	ToSecuritySettingsPtrOutputWithContext(context.Context) SecuritySettingsPtrOutput
}

type securitySettingsPtrType SecuritySettingsArgs

func SecuritySettingsPtr(v *SecuritySettingsArgs) SecuritySettingsPtrInput {
	return (*securitySettingsPtrType)(v)
}

func (*securitySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySettings)(nil)).Elem()
}

func (i *securitySettingsPtrType) ToSecuritySettingsPtrOutput() SecuritySettingsPtrOutput {
	return i.ToSecuritySettingsPtrOutputWithContext(context.Background())
}

func (i *securitySettingsPtrType) ToSecuritySettingsPtrOutputWithContext(ctx context.Context) SecuritySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySettingsPtrOutput)
}

// Security Settings of the vault
type SecuritySettingsOutput struct{ *pulumi.OutputState }

func (SecuritySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySettings)(nil)).Elem()
}

func (o SecuritySettingsOutput) ToSecuritySettingsOutput() SecuritySettingsOutput {
	return o
}

func (o SecuritySettingsOutput) ToSecuritySettingsOutputWithContext(ctx context.Context) SecuritySettingsOutput {
	return o
}

func (o SecuritySettingsOutput) ToSecuritySettingsPtrOutput() SecuritySettingsPtrOutput {
	return o.ToSecuritySettingsPtrOutputWithContext(context.Background())
}

func (o SecuritySettingsOutput) ToSecuritySettingsPtrOutputWithContext(ctx context.Context) SecuritySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecuritySettings) *SecuritySettings {
		return &v
	}).(SecuritySettingsPtrOutput)
}

// Immutability Settings of a vault
func (o SecuritySettingsOutput) ImmutabilitySettings() ImmutabilitySettingsPtrOutput {
	return o.ApplyT(func(v SecuritySettings) *ImmutabilitySettings { return v.ImmutabilitySettings }).(ImmutabilitySettingsPtrOutput)
}

// Soft delete Settings of a vault
func (o SecuritySettingsOutput) SoftDeleteSettings() SoftDeleteSettingsPtrOutput {
	return o.ApplyT(func(v SecuritySettings) *SoftDeleteSettings { return v.SoftDeleteSettings }).(SoftDeleteSettingsPtrOutput)
}

type SecuritySettingsPtrOutput struct{ *pulumi.OutputState }

func (SecuritySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySettings)(nil)).Elem()
}

func (o SecuritySettingsPtrOutput) ToSecuritySettingsPtrOutput() SecuritySettingsPtrOutput {
	return o
}

func (o SecuritySettingsPtrOutput) ToSecuritySettingsPtrOutputWithContext(ctx context.Context) SecuritySettingsPtrOutput {
	return o
}

func (o SecuritySettingsPtrOutput) Elem() SecuritySettingsOutput {
	return o.ApplyT(func(v *SecuritySettings) SecuritySettings {
		if v != nil {
			return *v
		}
		var ret SecuritySettings
		return ret
	}).(SecuritySettingsOutput)
}

// Immutability Settings of a vault
func (o SecuritySettingsPtrOutput) ImmutabilitySettings() ImmutabilitySettingsPtrOutput {
	return o.ApplyT(func(v *SecuritySettings) *ImmutabilitySettings {
		if v == nil {
			return nil
		}
		return v.ImmutabilitySettings
	}).(ImmutabilitySettingsPtrOutput)
}

// Soft delete Settings of a vault
func (o SecuritySettingsPtrOutput) SoftDeleteSettings() SoftDeleteSettingsPtrOutput {
	return o.ApplyT(func(v *SecuritySettings) *SoftDeleteSettings {
		if v == nil {
			return nil
		}
		return v.SoftDeleteSettings
	}).(SoftDeleteSettingsPtrOutput)
}

// Security Settings of the vault
type SecuritySettingsResponse struct {
	// Immutability Settings of a vault
	ImmutabilitySettings *ImmutabilitySettingsResponse `pulumi:"immutabilitySettings"`
	// MUA Settings of a vault
	MultiUserAuthorization string `pulumi:"multiUserAuthorization"`
	// Soft delete Settings of a vault
	SoftDeleteSettings *SoftDeleteSettingsResponse `pulumi:"softDeleteSettings"`
}

// Security Settings of the vault
type SecuritySettingsResponseOutput struct{ *pulumi.OutputState }

func (SecuritySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySettingsResponse)(nil)).Elem()
}

func (o SecuritySettingsResponseOutput) ToSecuritySettingsResponseOutput() SecuritySettingsResponseOutput {
	return o
}

func (o SecuritySettingsResponseOutput) ToSecuritySettingsResponseOutputWithContext(ctx context.Context) SecuritySettingsResponseOutput {
	return o
}

// Immutability Settings of a vault
func (o SecuritySettingsResponseOutput) ImmutabilitySettings() ImmutabilitySettingsResponsePtrOutput {
	return o.ApplyT(func(v SecuritySettingsResponse) *ImmutabilitySettingsResponse { return v.ImmutabilitySettings }).(ImmutabilitySettingsResponsePtrOutput)
}

// MUA Settings of a vault
func (o SecuritySettingsResponseOutput) MultiUserAuthorization() pulumi.StringOutput {
	return o.ApplyT(func(v SecuritySettingsResponse) string { return v.MultiUserAuthorization }).(pulumi.StringOutput)
}

// Soft delete Settings of a vault
func (o SecuritySettingsResponseOutput) SoftDeleteSettings() SoftDeleteSettingsResponsePtrOutput {
	return o.ApplyT(func(v SecuritySettingsResponse) *SoftDeleteSettingsResponse { return v.SoftDeleteSettings }).(SoftDeleteSettingsResponsePtrOutput)
}

type SecuritySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (SecuritySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySettingsResponse)(nil)).Elem()
}

func (o SecuritySettingsResponsePtrOutput) ToSecuritySettingsResponsePtrOutput() SecuritySettingsResponsePtrOutput {
	return o
}

func (o SecuritySettingsResponsePtrOutput) ToSecuritySettingsResponsePtrOutputWithContext(ctx context.Context) SecuritySettingsResponsePtrOutput {
	return o
}

func (o SecuritySettingsResponsePtrOutput) Elem() SecuritySettingsResponseOutput {
	return o.ApplyT(func(v *SecuritySettingsResponse) SecuritySettingsResponse {
		if v != nil {
			return *v
		}
		var ret SecuritySettingsResponse
		return ret
	}).(SecuritySettingsResponseOutput)
}

// Immutability Settings of a vault
func (o SecuritySettingsResponsePtrOutput) ImmutabilitySettings() ImmutabilitySettingsResponsePtrOutput {
	return o.ApplyT(func(v *SecuritySettingsResponse) *ImmutabilitySettingsResponse {
		if v == nil {
			return nil
		}
		return v.ImmutabilitySettings
	}).(ImmutabilitySettingsResponsePtrOutput)
}

// MUA Settings of a vault
func (o SecuritySettingsResponsePtrOutput) MultiUserAuthorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecuritySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MultiUserAuthorization
	}).(pulumi.StringPtrOutput)
}

// Soft delete Settings of a vault
func (o SecuritySettingsResponsePtrOutput) SoftDeleteSettings() SoftDeleteSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SecuritySettingsResponse) *SoftDeleteSettingsResponse {
		if v == nil {
			return nil
		}
		return v.SoftDeleteSettings
	}).(SoftDeleteSettingsResponsePtrOutput)
}

// Common settings field for backup management
type Settings struct {
	// Workload compression flag. This has been added so that 'isSqlCompression'
	// will be deprecated once clients upgrade to consider this flag.
	IsCompression *bool `pulumi:"isCompression"`
	// SQL compression flag
	Issqlcompression *bool `pulumi:"issqlcompression"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// SettingsInput is an input type that accepts SettingsArgs and SettingsOutput values.
// You can construct a concrete instance of `SettingsInput` via:
//
//	SettingsArgs{...}
type SettingsInput interface {
	pulumi.Input

	ToSettingsOutput() SettingsOutput
	ToSettingsOutputWithContext(context.Context) SettingsOutput
}

// Common settings field for backup management
type SettingsArgs struct {
	// Workload compression flag. This has been added so that 'isSqlCompression'
	// will be deprecated once clients upgrade to consider this flag.
	IsCompression pulumi.BoolPtrInput `pulumi:"isCompression"`
	// SQL compression flag
	Issqlcompression pulumi.BoolPtrInput `pulumi:"issqlcompression"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Settings)(nil)).Elem()
}

func (i SettingsArgs) ToSettingsOutput() SettingsOutput {
	return i.ToSettingsOutputWithContext(context.Background())
}

func (i SettingsArgs) ToSettingsOutputWithContext(ctx context.Context) SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsOutput)
}

func (i SettingsArgs) ToSettingsPtrOutput() SettingsPtrOutput {
	return i.ToSettingsPtrOutputWithContext(context.Background())
}

func (i SettingsArgs) ToSettingsPtrOutputWithContext(ctx context.Context) SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsOutput).ToSettingsPtrOutputWithContext(ctx)
}

// SettingsPtrInput is an input type that accepts SettingsArgs, SettingsPtr and SettingsPtrOutput values.
// You can construct a concrete instance of `SettingsPtrInput` via:
//
//	        SettingsArgs{...}
//
//	or:
//
//	        nil
type SettingsPtrInput interface {
	pulumi.Input

	ToSettingsPtrOutput() SettingsPtrOutput
	ToSettingsPtrOutputWithContext(context.Context) SettingsPtrOutput
}

type settingsPtrType SettingsArgs

func SettingsPtr(v *SettingsArgs) SettingsPtrInput {
	return (*settingsPtrType)(v)
}

func (*settingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Settings)(nil)).Elem()
}

func (i *settingsPtrType) ToSettingsPtrOutput() SettingsPtrOutput {
	return i.ToSettingsPtrOutputWithContext(context.Background())
}

func (i *settingsPtrType) ToSettingsPtrOutputWithContext(ctx context.Context) SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPtrOutput)
}

// Common settings field for backup management
type SettingsOutput struct{ *pulumi.OutputState }

func (SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Settings)(nil)).Elem()
}

func (o SettingsOutput) ToSettingsOutput() SettingsOutput {
	return o
}

func (o SettingsOutput) ToSettingsOutputWithContext(ctx context.Context) SettingsOutput {
	return o
}

func (o SettingsOutput) ToSettingsPtrOutput() SettingsPtrOutput {
	return o.ToSettingsPtrOutputWithContext(context.Background())
}

func (o SettingsOutput) ToSettingsPtrOutputWithContext(ctx context.Context) SettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Settings) *Settings {
		return &v
	}).(SettingsPtrOutput)
}

// Workload compression flag. This has been added so that 'isSqlCompression'
// will be deprecated once clients upgrade to consider this flag.
func (o SettingsOutput) IsCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Settings) *bool { return v.IsCompression }).(pulumi.BoolPtrOutput)
}

// SQL compression flag
func (o SettingsOutput) Issqlcompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Settings) *bool { return v.Issqlcompression }).(pulumi.BoolPtrOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o SettingsOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Settings) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type SettingsPtrOutput struct{ *pulumi.OutputState }

func (SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Settings)(nil)).Elem()
}

func (o SettingsPtrOutput) ToSettingsPtrOutput() SettingsPtrOutput {
	return o
}

func (o SettingsPtrOutput) ToSettingsPtrOutputWithContext(ctx context.Context) SettingsPtrOutput {
	return o
}

func (o SettingsPtrOutput) Elem() SettingsOutput {
	return o.ApplyT(func(v *Settings) Settings {
		if v != nil {
			return *v
		}
		var ret Settings
		return ret
	}).(SettingsOutput)
}

// Workload compression flag. This has been added so that 'isSqlCompression'
// will be deprecated once clients upgrade to consider this flag.
func (o SettingsPtrOutput) IsCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Settings) *bool {
		if v == nil {
			return nil
		}
		return v.IsCompression
	}).(pulumi.BoolPtrOutput)
}

// SQL compression flag
func (o SettingsPtrOutput) Issqlcompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Settings) *bool {
		if v == nil {
			return nil
		}
		return v.Issqlcompression
	}).(pulumi.BoolPtrOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o SettingsPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Settings) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Common settings field for backup management
type SettingsResponse struct {
	// Workload compression flag. This has been added so that 'isSqlCompression'
	// will be deprecated once clients upgrade to consider this flag.
	IsCompression *bool `pulumi:"isCompression"`
	// SQL compression flag
	Issqlcompression *bool `pulumi:"issqlcompression"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// Common settings field for backup management
type SettingsResponseOutput struct{ *pulumi.OutputState }

func (SettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsResponse)(nil)).Elem()
}

func (o SettingsResponseOutput) ToSettingsResponseOutput() SettingsResponseOutput {
	return o
}

func (o SettingsResponseOutput) ToSettingsResponseOutputWithContext(ctx context.Context) SettingsResponseOutput {
	return o
}

// Workload compression flag. This has been added so that 'isSqlCompression'
// will be deprecated once clients upgrade to consider this flag.
func (o SettingsResponseOutput) IsCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingsResponse) *bool { return v.IsCompression }).(pulumi.BoolPtrOutput)
}

// SQL compression flag
func (o SettingsResponseOutput) Issqlcompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingsResponse) *bool { return v.Issqlcompression }).(pulumi.BoolPtrOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o SettingsResponseOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsResponse) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type SettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (SettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsResponse)(nil)).Elem()
}

func (o SettingsResponsePtrOutput) ToSettingsResponsePtrOutput() SettingsResponsePtrOutput {
	return o
}

func (o SettingsResponsePtrOutput) ToSettingsResponsePtrOutputWithContext(ctx context.Context) SettingsResponsePtrOutput {
	return o
}

func (o SettingsResponsePtrOutput) Elem() SettingsResponseOutput {
	return o.ApplyT(func(v *SettingsResponse) SettingsResponse {
		if v != nil {
			return *v
		}
		var ret SettingsResponse
		return ret
	}).(SettingsResponseOutput)
}

// Workload compression flag. This has been added so that 'isSqlCompression'
// will be deprecated once clients upgrade to consider this flag.
func (o SettingsResponsePtrOutput) IsCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCompression
	}).(pulumi.BoolPtrOutput)
}

// SQL compression flag
func (o SettingsResponsePtrOutput) Issqlcompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Issqlcompression
	}).(pulumi.BoolPtrOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o SettingsResponsePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Simple policy retention.
type SimpleRetentionPolicy struct {
	// Retention duration of the protection policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleRetentionPolicy'.
	RetentionPolicyType string `pulumi:"retentionPolicyType"`
}

// SimpleRetentionPolicyInput is an input type that accepts SimpleRetentionPolicyArgs and SimpleRetentionPolicyOutput values.
// You can construct a concrete instance of `SimpleRetentionPolicyInput` via:
//
//	SimpleRetentionPolicyArgs{...}
type SimpleRetentionPolicyInput interface {
	pulumi.Input

	ToSimpleRetentionPolicyOutput() SimpleRetentionPolicyOutput
	ToSimpleRetentionPolicyOutputWithContext(context.Context) SimpleRetentionPolicyOutput
}

// Simple policy retention.
type SimpleRetentionPolicyArgs struct {
	// Retention duration of the protection policy.
	RetentionDuration RetentionDurationPtrInput `pulumi:"retentionDuration"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleRetentionPolicy'.
	RetentionPolicyType pulumi.StringInput `pulumi:"retentionPolicyType"`
}

func (SimpleRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleRetentionPolicy)(nil)).Elem()
}

func (i SimpleRetentionPolicyArgs) ToSimpleRetentionPolicyOutput() SimpleRetentionPolicyOutput {
	return i.ToSimpleRetentionPolicyOutputWithContext(context.Background())
}

func (i SimpleRetentionPolicyArgs) ToSimpleRetentionPolicyOutputWithContext(ctx context.Context) SimpleRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleRetentionPolicyOutput)
}

func (i SimpleRetentionPolicyArgs) ToSimpleRetentionPolicyPtrOutput() SimpleRetentionPolicyPtrOutput {
	return i.ToSimpleRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i SimpleRetentionPolicyArgs) ToSimpleRetentionPolicyPtrOutputWithContext(ctx context.Context) SimpleRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleRetentionPolicyOutput).ToSimpleRetentionPolicyPtrOutputWithContext(ctx)
}

// SimpleRetentionPolicyPtrInput is an input type that accepts SimpleRetentionPolicyArgs, SimpleRetentionPolicyPtr and SimpleRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `SimpleRetentionPolicyPtrInput` via:
//
//	        SimpleRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type SimpleRetentionPolicyPtrInput interface {
	pulumi.Input

	ToSimpleRetentionPolicyPtrOutput() SimpleRetentionPolicyPtrOutput
	ToSimpleRetentionPolicyPtrOutputWithContext(context.Context) SimpleRetentionPolicyPtrOutput
}

type simpleRetentionPolicyPtrType SimpleRetentionPolicyArgs

func SimpleRetentionPolicyPtr(v *SimpleRetentionPolicyArgs) SimpleRetentionPolicyPtrInput {
	return (*simpleRetentionPolicyPtrType)(v)
}

func (*simpleRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleRetentionPolicy)(nil)).Elem()
}

func (i *simpleRetentionPolicyPtrType) ToSimpleRetentionPolicyPtrOutput() SimpleRetentionPolicyPtrOutput {
	return i.ToSimpleRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *simpleRetentionPolicyPtrType) ToSimpleRetentionPolicyPtrOutputWithContext(ctx context.Context) SimpleRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleRetentionPolicyPtrOutput)
}

// Simple policy retention.
type SimpleRetentionPolicyOutput struct{ *pulumi.OutputState }

func (SimpleRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleRetentionPolicy)(nil)).Elem()
}

func (o SimpleRetentionPolicyOutput) ToSimpleRetentionPolicyOutput() SimpleRetentionPolicyOutput {
	return o
}

func (o SimpleRetentionPolicyOutput) ToSimpleRetentionPolicyOutputWithContext(ctx context.Context) SimpleRetentionPolicyOutput {
	return o
}

func (o SimpleRetentionPolicyOutput) ToSimpleRetentionPolicyPtrOutput() SimpleRetentionPolicyPtrOutput {
	return o.ToSimpleRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o SimpleRetentionPolicyOutput) ToSimpleRetentionPolicyPtrOutputWithContext(ctx context.Context) SimpleRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SimpleRetentionPolicy) *SimpleRetentionPolicy {
		return &v
	}).(SimpleRetentionPolicyPtrOutput)
}

// Retention duration of the protection policy.
func (o SimpleRetentionPolicyOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v SimpleRetentionPolicy) *RetentionDuration { return v.RetentionDuration }).(RetentionDurationPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleRetentionPolicy'.
func (o SimpleRetentionPolicyOutput) RetentionPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v SimpleRetentionPolicy) string { return v.RetentionPolicyType }).(pulumi.StringOutput)
}

type SimpleRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (SimpleRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleRetentionPolicy)(nil)).Elem()
}

func (o SimpleRetentionPolicyPtrOutput) ToSimpleRetentionPolicyPtrOutput() SimpleRetentionPolicyPtrOutput {
	return o
}

func (o SimpleRetentionPolicyPtrOutput) ToSimpleRetentionPolicyPtrOutputWithContext(ctx context.Context) SimpleRetentionPolicyPtrOutput {
	return o
}

func (o SimpleRetentionPolicyPtrOutput) Elem() SimpleRetentionPolicyOutput {
	return o.ApplyT(func(v *SimpleRetentionPolicy) SimpleRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret SimpleRetentionPolicy
		return ret
	}).(SimpleRetentionPolicyOutput)
}

// Retention duration of the protection policy.
func (o SimpleRetentionPolicyPtrOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v *SimpleRetentionPolicy) *RetentionDuration {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleRetentionPolicy'.
func (o SimpleRetentionPolicyPtrOutput) RetentionPolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleRetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionPolicyType
	}).(pulumi.StringPtrOutput)
}

// Simple policy retention.
type SimpleRetentionPolicyResponse struct {
	// Retention duration of the protection policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleRetentionPolicy'.
	RetentionPolicyType string `pulumi:"retentionPolicyType"`
}

// Simple policy retention.
type SimpleRetentionPolicyResponseOutput struct{ *pulumi.OutputState }

func (SimpleRetentionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleRetentionPolicyResponse)(nil)).Elem()
}

func (o SimpleRetentionPolicyResponseOutput) ToSimpleRetentionPolicyResponseOutput() SimpleRetentionPolicyResponseOutput {
	return o
}

func (o SimpleRetentionPolicyResponseOutput) ToSimpleRetentionPolicyResponseOutputWithContext(ctx context.Context) SimpleRetentionPolicyResponseOutput {
	return o
}

// Retention duration of the protection policy.
func (o SimpleRetentionPolicyResponseOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v SimpleRetentionPolicyResponse) *RetentionDurationResponse { return v.RetentionDuration }).(RetentionDurationResponsePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleRetentionPolicy'.
func (o SimpleRetentionPolicyResponseOutput) RetentionPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v SimpleRetentionPolicyResponse) string { return v.RetentionPolicyType }).(pulumi.StringOutput)
}

type SimpleRetentionPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (SimpleRetentionPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleRetentionPolicyResponse)(nil)).Elem()
}

func (o SimpleRetentionPolicyResponsePtrOutput) ToSimpleRetentionPolicyResponsePtrOutput() SimpleRetentionPolicyResponsePtrOutput {
	return o
}

func (o SimpleRetentionPolicyResponsePtrOutput) ToSimpleRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) SimpleRetentionPolicyResponsePtrOutput {
	return o
}

func (o SimpleRetentionPolicyResponsePtrOutput) Elem() SimpleRetentionPolicyResponseOutput {
	return o.ApplyT(func(v *SimpleRetentionPolicyResponse) SimpleRetentionPolicyResponse {
		if v != nil {
			return *v
		}
		var ret SimpleRetentionPolicyResponse
		return ret
	}).(SimpleRetentionPolicyResponseOutput)
}

// Retention duration of the protection policy.
func (o SimpleRetentionPolicyResponsePtrOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v *SimpleRetentionPolicyResponse) *RetentionDurationResponse {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationResponsePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleRetentionPolicy'.
func (o SimpleRetentionPolicyResponsePtrOutput) RetentionPolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleRetentionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionPolicyType
	}).(pulumi.StringPtrOutput)
}

// Simple policy schedule.
type SimpleSchedulePolicy struct {
	// Hourly Schedule of this Policy
	HourlySchedule *HourlySchedule `pulumi:"hourlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
	// List of days of week this schedule has to be run.
	ScheduleRunDays []DayOfWeek `pulumi:"scheduleRunDays"`
	// Frequency of the schedule operation of this policy.
	ScheduleRunFrequency *string `pulumi:"scheduleRunFrequency"`
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
	// At every number weeks this schedule has to be run.
	ScheduleWeeklyFrequency *int `pulumi:"scheduleWeeklyFrequency"`
}

// SimpleSchedulePolicyInput is an input type that accepts SimpleSchedulePolicyArgs and SimpleSchedulePolicyOutput values.
// You can construct a concrete instance of `SimpleSchedulePolicyInput` via:
//
//	SimpleSchedulePolicyArgs{...}
type SimpleSchedulePolicyInput interface {
	pulumi.Input

	ToSimpleSchedulePolicyOutput() SimpleSchedulePolicyOutput
	ToSimpleSchedulePolicyOutputWithContext(context.Context) SimpleSchedulePolicyOutput
}

// Simple policy schedule.
type SimpleSchedulePolicyArgs struct {
	// Hourly Schedule of this Policy
	HourlySchedule HourlySchedulePtrInput `pulumi:"hourlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicy'.
	SchedulePolicyType pulumi.StringInput `pulumi:"schedulePolicyType"`
	// List of days of week this schedule has to be run.
	ScheduleRunDays DayOfWeekArrayInput `pulumi:"scheduleRunDays"`
	// Frequency of the schedule operation of this policy.
	ScheduleRunFrequency pulumi.StringPtrInput `pulumi:"scheduleRunFrequency"`
	// List of times of day this schedule has to be run.
	ScheduleRunTimes pulumi.StringArrayInput `pulumi:"scheduleRunTimes"`
	// At every number weeks this schedule has to be run.
	ScheduleWeeklyFrequency pulumi.IntPtrInput `pulumi:"scheduleWeeklyFrequency"`
}

func (SimpleSchedulePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleSchedulePolicy)(nil)).Elem()
}

func (i SimpleSchedulePolicyArgs) ToSimpleSchedulePolicyOutput() SimpleSchedulePolicyOutput {
	return i.ToSimpleSchedulePolicyOutputWithContext(context.Background())
}

func (i SimpleSchedulePolicyArgs) ToSimpleSchedulePolicyOutputWithContext(ctx context.Context) SimpleSchedulePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleSchedulePolicyOutput)
}

func (i SimpleSchedulePolicyArgs) ToSimpleSchedulePolicyPtrOutput() SimpleSchedulePolicyPtrOutput {
	return i.ToSimpleSchedulePolicyPtrOutputWithContext(context.Background())
}

func (i SimpleSchedulePolicyArgs) ToSimpleSchedulePolicyPtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleSchedulePolicyOutput).ToSimpleSchedulePolicyPtrOutputWithContext(ctx)
}

// SimpleSchedulePolicyPtrInput is an input type that accepts SimpleSchedulePolicyArgs, SimpleSchedulePolicyPtr and SimpleSchedulePolicyPtrOutput values.
// You can construct a concrete instance of `SimpleSchedulePolicyPtrInput` via:
//
//	        SimpleSchedulePolicyArgs{...}
//
//	or:
//
//	        nil
type SimpleSchedulePolicyPtrInput interface {
	pulumi.Input

	ToSimpleSchedulePolicyPtrOutput() SimpleSchedulePolicyPtrOutput
	ToSimpleSchedulePolicyPtrOutputWithContext(context.Context) SimpleSchedulePolicyPtrOutput
}

type simpleSchedulePolicyPtrType SimpleSchedulePolicyArgs

func SimpleSchedulePolicyPtr(v *SimpleSchedulePolicyArgs) SimpleSchedulePolicyPtrInput {
	return (*simpleSchedulePolicyPtrType)(v)
}

func (*simpleSchedulePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleSchedulePolicy)(nil)).Elem()
}

func (i *simpleSchedulePolicyPtrType) ToSimpleSchedulePolicyPtrOutput() SimpleSchedulePolicyPtrOutput {
	return i.ToSimpleSchedulePolicyPtrOutputWithContext(context.Background())
}

func (i *simpleSchedulePolicyPtrType) ToSimpleSchedulePolicyPtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleSchedulePolicyPtrOutput)
}

// Simple policy schedule.
type SimpleSchedulePolicyOutput struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleSchedulePolicy)(nil)).Elem()
}

func (o SimpleSchedulePolicyOutput) ToSimpleSchedulePolicyOutput() SimpleSchedulePolicyOutput {
	return o
}

func (o SimpleSchedulePolicyOutput) ToSimpleSchedulePolicyOutputWithContext(ctx context.Context) SimpleSchedulePolicyOutput {
	return o
}

func (o SimpleSchedulePolicyOutput) ToSimpleSchedulePolicyPtrOutput() SimpleSchedulePolicyPtrOutput {
	return o.ToSimpleSchedulePolicyPtrOutputWithContext(context.Background())
}

func (o SimpleSchedulePolicyOutput) ToSimpleSchedulePolicyPtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SimpleSchedulePolicy) *SimpleSchedulePolicy {
		return &v
	}).(SimpleSchedulePolicyPtrOutput)
}

// Hourly Schedule of this Policy
func (o SimpleSchedulePolicyOutput) HourlySchedule() HourlySchedulePtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicy) *HourlySchedule { return v.HourlySchedule }).(HourlySchedulePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleSchedulePolicy'.
func (o SimpleSchedulePolicyOutput) SchedulePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v SimpleSchedulePolicy) string { return v.SchedulePolicyType }).(pulumi.StringOutput)
}

// List of days of week this schedule has to be run.
func (o SimpleSchedulePolicyOutput) ScheduleRunDays() DayOfWeekArrayOutput {
	return o.ApplyT(func(v SimpleSchedulePolicy) []DayOfWeek { return v.ScheduleRunDays }).(DayOfWeekArrayOutput)
}

// Frequency of the schedule operation of this policy.
func (o SimpleSchedulePolicyOutput) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicy) *string { return v.ScheduleRunFrequency }).(pulumi.StringPtrOutput)
}

// List of times of day this schedule has to be run.
func (o SimpleSchedulePolicyOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SimpleSchedulePolicy) []string { return v.ScheduleRunTimes }).(pulumi.StringArrayOutput)
}

// At every number weeks this schedule has to be run.
func (o SimpleSchedulePolicyOutput) ScheduleWeeklyFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicy) *int { return v.ScheduleWeeklyFrequency }).(pulumi.IntPtrOutput)
}

type SimpleSchedulePolicyPtrOutput struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleSchedulePolicy)(nil)).Elem()
}

func (o SimpleSchedulePolicyPtrOutput) ToSimpleSchedulePolicyPtrOutput() SimpleSchedulePolicyPtrOutput {
	return o
}

func (o SimpleSchedulePolicyPtrOutput) ToSimpleSchedulePolicyPtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyPtrOutput {
	return o
}

func (o SimpleSchedulePolicyPtrOutput) Elem() SimpleSchedulePolicyOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicy) SimpleSchedulePolicy {
		if v != nil {
			return *v
		}
		var ret SimpleSchedulePolicy
		return ret
	}).(SimpleSchedulePolicyOutput)
}

// Hourly Schedule of this Policy
func (o SimpleSchedulePolicyPtrOutput) HourlySchedule() HourlySchedulePtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicy) *HourlySchedule {
		if v == nil {
			return nil
		}
		return v.HourlySchedule
	}).(HourlySchedulePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleSchedulePolicy'.
func (o SimpleSchedulePolicyPtrOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.SchedulePolicyType
	}).(pulumi.StringPtrOutput)
}

// List of days of week this schedule has to be run.
func (o SimpleSchedulePolicyPtrOutput) ScheduleRunDays() DayOfWeekArrayOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicy) []DayOfWeek {
		if v == nil {
			return nil
		}
		return v.ScheduleRunDays
	}).(DayOfWeekArrayOutput)
}

// Frequency of the schedule operation of this policy.
func (o SimpleSchedulePolicyPtrOutput) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicy) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunFrequency
	}).(pulumi.StringPtrOutput)
}

// List of times of day this schedule has to be run.
func (o SimpleSchedulePolicyPtrOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicy) []string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunTimes
	}).(pulumi.StringArrayOutput)
}

// At every number weeks this schedule has to be run.
func (o SimpleSchedulePolicyPtrOutput) ScheduleWeeklyFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicy) *int {
		if v == nil {
			return nil
		}
		return v.ScheduleWeeklyFrequency
	}).(pulumi.IntPtrOutput)
}

// Simple policy schedule.
type SimpleSchedulePolicyResponse struct {
	// Hourly Schedule of this Policy
	HourlySchedule *HourlyScheduleResponse `pulumi:"hourlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
	// List of days of week this schedule has to be run.
	ScheduleRunDays []string `pulumi:"scheduleRunDays"`
	// Frequency of the schedule operation of this policy.
	ScheduleRunFrequency *string `pulumi:"scheduleRunFrequency"`
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
	// At every number weeks this schedule has to be run.
	ScheduleWeeklyFrequency *int `pulumi:"scheduleWeeklyFrequency"`
}

// Simple policy schedule.
type SimpleSchedulePolicyResponseOutput struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleSchedulePolicyResponse)(nil)).Elem()
}

func (o SimpleSchedulePolicyResponseOutput) ToSimpleSchedulePolicyResponseOutput() SimpleSchedulePolicyResponseOutput {
	return o
}

func (o SimpleSchedulePolicyResponseOutput) ToSimpleSchedulePolicyResponseOutputWithContext(ctx context.Context) SimpleSchedulePolicyResponseOutput {
	return o
}

// Hourly Schedule of this Policy
func (o SimpleSchedulePolicyResponseOutput) HourlySchedule() HourlyScheduleResponsePtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) *HourlyScheduleResponse { return v.HourlySchedule }).(HourlyScheduleResponsePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleSchedulePolicy'.
func (o SimpleSchedulePolicyResponseOutput) SchedulePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) string { return v.SchedulePolicyType }).(pulumi.StringOutput)
}

// List of days of week this schedule has to be run.
func (o SimpleSchedulePolicyResponseOutput) ScheduleRunDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) []string { return v.ScheduleRunDays }).(pulumi.StringArrayOutput)
}

// Frequency of the schedule operation of this policy.
func (o SimpleSchedulePolicyResponseOutput) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) *string { return v.ScheduleRunFrequency }).(pulumi.StringPtrOutput)
}

// List of times of day this schedule has to be run.
func (o SimpleSchedulePolicyResponseOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) []string { return v.ScheduleRunTimes }).(pulumi.StringArrayOutput)
}

// At every number weeks this schedule has to be run.
func (o SimpleSchedulePolicyResponseOutput) ScheduleWeeklyFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) *int { return v.ScheduleWeeklyFrequency }).(pulumi.IntPtrOutput)
}

type SimpleSchedulePolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleSchedulePolicyResponse)(nil)).Elem()
}

func (o SimpleSchedulePolicyResponsePtrOutput) ToSimpleSchedulePolicyResponsePtrOutput() SimpleSchedulePolicyResponsePtrOutput {
	return o
}

func (o SimpleSchedulePolicyResponsePtrOutput) ToSimpleSchedulePolicyResponsePtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyResponsePtrOutput {
	return o
}

func (o SimpleSchedulePolicyResponsePtrOutput) Elem() SimpleSchedulePolicyResponseOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyResponse) SimpleSchedulePolicyResponse {
		if v != nil {
			return *v
		}
		var ret SimpleSchedulePolicyResponse
		return ret
	}).(SimpleSchedulePolicyResponseOutput)
}

// Hourly Schedule of this Policy
func (o SimpleSchedulePolicyResponsePtrOutput) HourlySchedule() HourlyScheduleResponsePtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyResponse) *HourlyScheduleResponse {
		if v == nil {
			return nil
		}
		return v.HourlySchedule
	}).(HourlyScheduleResponsePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleSchedulePolicy'.
func (o SimpleSchedulePolicyResponsePtrOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SchedulePolicyType
	}).(pulumi.StringPtrOutput)
}

// List of days of week this schedule has to be run.
func (o SimpleSchedulePolicyResponsePtrOutput) ScheduleRunDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyResponse) []string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunDays
	}).(pulumi.StringArrayOutput)
}

// Frequency of the schedule operation of this policy.
func (o SimpleSchedulePolicyResponsePtrOutput) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunFrequency
	}).(pulumi.StringPtrOutput)
}

// List of times of day this schedule has to be run.
func (o SimpleSchedulePolicyResponsePtrOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyResponse) []string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunTimes
	}).(pulumi.StringArrayOutput)
}

// At every number weeks this schedule has to be run.
func (o SimpleSchedulePolicyResponsePtrOutput) ScheduleWeeklyFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.ScheduleWeeklyFrequency
	}).(pulumi.IntPtrOutput)
}

// The V2 policy schedule for IaaS that supports hourly backups.
type SimpleSchedulePolicyV2 struct {
	// Daily schedule of this policy
	DailySchedule *DailySchedule `pulumi:"dailySchedule"`
	// hourly schedule of this policy
	HourlySchedule *HourlySchedule `pulumi:"hourlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicyV2'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
	// Frequency of the schedule operation of this policy.
	ScheduleRunFrequency *string `pulumi:"scheduleRunFrequency"`
	// Weekly schedule of this policy
	WeeklySchedule *WeeklySchedule `pulumi:"weeklySchedule"`
}

// SimpleSchedulePolicyV2Input is an input type that accepts SimpleSchedulePolicyV2Args and SimpleSchedulePolicyV2Output values.
// You can construct a concrete instance of `SimpleSchedulePolicyV2Input` via:
//
//	SimpleSchedulePolicyV2Args{...}
type SimpleSchedulePolicyV2Input interface {
	pulumi.Input

	ToSimpleSchedulePolicyV2Output() SimpleSchedulePolicyV2Output
	ToSimpleSchedulePolicyV2OutputWithContext(context.Context) SimpleSchedulePolicyV2Output
}

// The V2 policy schedule for IaaS that supports hourly backups.
type SimpleSchedulePolicyV2Args struct {
	// Daily schedule of this policy
	DailySchedule DailySchedulePtrInput `pulumi:"dailySchedule"`
	// hourly schedule of this policy
	HourlySchedule HourlySchedulePtrInput `pulumi:"hourlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicyV2'.
	SchedulePolicyType pulumi.StringInput `pulumi:"schedulePolicyType"`
	// Frequency of the schedule operation of this policy.
	ScheduleRunFrequency pulumi.StringPtrInput `pulumi:"scheduleRunFrequency"`
	// Weekly schedule of this policy
	WeeklySchedule WeeklySchedulePtrInput `pulumi:"weeklySchedule"`
}

func (SimpleSchedulePolicyV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleSchedulePolicyV2)(nil)).Elem()
}

func (i SimpleSchedulePolicyV2Args) ToSimpleSchedulePolicyV2Output() SimpleSchedulePolicyV2Output {
	return i.ToSimpleSchedulePolicyV2OutputWithContext(context.Background())
}

func (i SimpleSchedulePolicyV2Args) ToSimpleSchedulePolicyV2OutputWithContext(ctx context.Context) SimpleSchedulePolicyV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleSchedulePolicyV2Output)
}

func (i SimpleSchedulePolicyV2Args) ToSimpleSchedulePolicyV2PtrOutput() SimpleSchedulePolicyV2PtrOutput {
	return i.ToSimpleSchedulePolicyV2PtrOutputWithContext(context.Background())
}

func (i SimpleSchedulePolicyV2Args) ToSimpleSchedulePolicyV2PtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyV2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleSchedulePolicyV2Output).ToSimpleSchedulePolicyV2PtrOutputWithContext(ctx)
}

// SimpleSchedulePolicyV2PtrInput is an input type that accepts SimpleSchedulePolicyV2Args, SimpleSchedulePolicyV2Ptr and SimpleSchedulePolicyV2PtrOutput values.
// You can construct a concrete instance of `SimpleSchedulePolicyV2PtrInput` via:
//
//	        SimpleSchedulePolicyV2Args{...}
//
//	or:
//
//	        nil
type SimpleSchedulePolicyV2PtrInput interface {
	pulumi.Input

	ToSimpleSchedulePolicyV2PtrOutput() SimpleSchedulePolicyV2PtrOutput
	ToSimpleSchedulePolicyV2PtrOutputWithContext(context.Context) SimpleSchedulePolicyV2PtrOutput
}

type simpleSchedulePolicyV2PtrType SimpleSchedulePolicyV2Args

func SimpleSchedulePolicyV2Ptr(v *SimpleSchedulePolicyV2Args) SimpleSchedulePolicyV2PtrInput {
	return (*simpleSchedulePolicyV2PtrType)(v)
}

func (*simpleSchedulePolicyV2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleSchedulePolicyV2)(nil)).Elem()
}

func (i *simpleSchedulePolicyV2PtrType) ToSimpleSchedulePolicyV2PtrOutput() SimpleSchedulePolicyV2PtrOutput {
	return i.ToSimpleSchedulePolicyV2PtrOutputWithContext(context.Background())
}

func (i *simpleSchedulePolicyV2PtrType) ToSimpleSchedulePolicyV2PtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyV2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleSchedulePolicyV2PtrOutput)
}

// The V2 policy schedule for IaaS that supports hourly backups.
type SimpleSchedulePolicyV2Output struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleSchedulePolicyV2)(nil)).Elem()
}

func (o SimpleSchedulePolicyV2Output) ToSimpleSchedulePolicyV2Output() SimpleSchedulePolicyV2Output {
	return o
}

func (o SimpleSchedulePolicyV2Output) ToSimpleSchedulePolicyV2OutputWithContext(ctx context.Context) SimpleSchedulePolicyV2Output {
	return o
}

func (o SimpleSchedulePolicyV2Output) ToSimpleSchedulePolicyV2PtrOutput() SimpleSchedulePolicyV2PtrOutput {
	return o.ToSimpleSchedulePolicyV2PtrOutputWithContext(context.Background())
}

func (o SimpleSchedulePolicyV2Output) ToSimpleSchedulePolicyV2PtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyV2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SimpleSchedulePolicyV2) *SimpleSchedulePolicyV2 {
		return &v
	}).(SimpleSchedulePolicyV2PtrOutput)
}

// Daily schedule of this policy
func (o SimpleSchedulePolicyV2Output) DailySchedule() DailySchedulePtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2) *DailySchedule { return v.DailySchedule }).(DailySchedulePtrOutput)
}

// hourly schedule of this policy
func (o SimpleSchedulePolicyV2Output) HourlySchedule() HourlySchedulePtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2) *HourlySchedule { return v.HourlySchedule }).(HourlySchedulePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleSchedulePolicyV2'.
func (o SimpleSchedulePolicyV2Output) SchedulePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2) string { return v.SchedulePolicyType }).(pulumi.StringOutput)
}

// Frequency of the schedule operation of this policy.
func (o SimpleSchedulePolicyV2Output) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2) *string { return v.ScheduleRunFrequency }).(pulumi.StringPtrOutput)
}

// Weekly schedule of this policy
func (o SimpleSchedulePolicyV2Output) WeeklySchedule() WeeklySchedulePtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2) *WeeklySchedule { return v.WeeklySchedule }).(WeeklySchedulePtrOutput)
}

type SimpleSchedulePolicyV2PtrOutput struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyV2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleSchedulePolicyV2)(nil)).Elem()
}

func (o SimpleSchedulePolicyV2PtrOutput) ToSimpleSchedulePolicyV2PtrOutput() SimpleSchedulePolicyV2PtrOutput {
	return o
}

func (o SimpleSchedulePolicyV2PtrOutput) ToSimpleSchedulePolicyV2PtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyV2PtrOutput {
	return o
}

func (o SimpleSchedulePolicyV2PtrOutput) Elem() SimpleSchedulePolicyV2Output {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2) SimpleSchedulePolicyV2 {
		if v != nil {
			return *v
		}
		var ret SimpleSchedulePolicyV2
		return ret
	}).(SimpleSchedulePolicyV2Output)
}

// Daily schedule of this policy
func (o SimpleSchedulePolicyV2PtrOutput) DailySchedule() DailySchedulePtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2) *DailySchedule {
		if v == nil {
			return nil
		}
		return v.DailySchedule
	}).(DailySchedulePtrOutput)
}

// hourly schedule of this policy
func (o SimpleSchedulePolicyV2PtrOutput) HourlySchedule() HourlySchedulePtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2) *HourlySchedule {
		if v == nil {
			return nil
		}
		return v.HourlySchedule
	}).(HourlySchedulePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleSchedulePolicyV2'.
func (o SimpleSchedulePolicyV2PtrOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2) *string {
		if v == nil {
			return nil
		}
		return &v.SchedulePolicyType
	}).(pulumi.StringPtrOutput)
}

// Frequency of the schedule operation of this policy.
func (o SimpleSchedulePolicyV2PtrOutput) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunFrequency
	}).(pulumi.StringPtrOutput)
}

// Weekly schedule of this policy
func (o SimpleSchedulePolicyV2PtrOutput) WeeklySchedule() WeeklySchedulePtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2) *WeeklySchedule {
		if v == nil {
			return nil
		}
		return v.WeeklySchedule
	}).(WeeklySchedulePtrOutput)
}

// The V2 policy schedule for IaaS that supports hourly backups.
type SimpleSchedulePolicyV2Response struct {
	// Daily schedule of this policy
	DailySchedule *DailyScheduleResponse `pulumi:"dailySchedule"`
	// hourly schedule of this policy
	HourlySchedule *HourlyScheduleResponse `pulumi:"hourlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicyV2'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
	// Frequency of the schedule operation of this policy.
	ScheduleRunFrequency *string `pulumi:"scheduleRunFrequency"`
	// Weekly schedule of this policy
	WeeklySchedule *WeeklyScheduleResponse `pulumi:"weeklySchedule"`
}

// The V2 policy schedule for IaaS that supports hourly backups.
type SimpleSchedulePolicyV2ResponseOutput struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyV2ResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleSchedulePolicyV2Response)(nil)).Elem()
}

func (o SimpleSchedulePolicyV2ResponseOutput) ToSimpleSchedulePolicyV2ResponseOutput() SimpleSchedulePolicyV2ResponseOutput {
	return o
}

func (o SimpleSchedulePolicyV2ResponseOutput) ToSimpleSchedulePolicyV2ResponseOutputWithContext(ctx context.Context) SimpleSchedulePolicyV2ResponseOutput {
	return o
}

// Daily schedule of this policy
func (o SimpleSchedulePolicyV2ResponseOutput) DailySchedule() DailyScheduleResponsePtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2Response) *DailyScheduleResponse { return v.DailySchedule }).(DailyScheduleResponsePtrOutput)
}

// hourly schedule of this policy
func (o SimpleSchedulePolicyV2ResponseOutput) HourlySchedule() HourlyScheduleResponsePtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2Response) *HourlyScheduleResponse { return v.HourlySchedule }).(HourlyScheduleResponsePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleSchedulePolicyV2'.
func (o SimpleSchedulePolicyV2ResponseOutput) SchedulePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2Response) string { return v.SchedulePolicyType }).(pulumi.StringOutput)
}

// Frequency of the schedule operation of this policy.
func (o SimpleSchedulePolicyV2ResponseOutput) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2Response) *string { return v.ScheduleRunFrequency }).(pulumi.StringPtrOutput)
}

// Weekly schedule of this policy
func (o SimpleSchedulePolicyV2ResponseOutput) WeeklySchedule() WeeklyScheduleResponsePtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2Response) *WeeklyScheduleResponse { return v.WeeklySchedule }).(WeeklyScheduleResponsePtrOutput)
}

type SimpleSchedulePolicyV2ResponsePtrOutput struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyV2ResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleSchedulePolicyV2Response)(nil)).Elem()
}

func (o SimpleSchedulePolicyV2ResponsePtrOutput) ToSimpleSchedulePolicyV2ResponsePtrOutput() SimpleSchedulePolicyV2ResponsePtrOutput {
	return o
}

func (o SimpleSchedulePolicyV2ResponsePtrOutput) ToSimpleSchedulePolicyV2ResponsePtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyV2ResponsePtrOutput {
	return o
}

func (o SimpleSchedulePolicyV2ResponsePtrOutput) Elem() SimpleSchedulePolicyV2ResponseOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2Response) SimpleSchedulePolicyV2Response {
		if v != nil {
			return *v
		}
		var ret SimpleSchedulePolicyV2Response
		return ret
	}).(SimpleSchedulePolicyV2ResponseOutput)
}

// Daily schedule of this policy
func (o SimpleSchedulePolicyV2ResponsePtrOutput) DailySchedule() DailyScheduleResponsePtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2Response) *DailyScheduleResponse {
		if v == nil {
			return nil
		}
		return v.DailySchedule
	}).(DailyScheduleResponsePtrOutput)
}

// hourly schedule of this policy
func (o SimpleSchedulePolicyV2ResponsePtrOutput) HourlySchedule() HourlyScheduleResponsePtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2Response) *HourlyScheduleResponse {
		if v == nil {
			return nil
		}
		return v.HourlySchedule
	}).(HourlyScheduleResponsePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleSchedulePolicyV2'.
func (o SimpleSchedulePolicyV2ResponsePtrOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2Response) *string {
		if v == nil {
			return nil
		}
		return &v.SchedulePolicyType
	}).(pulumi.StringPtrOutput)
}

// Frequency of the schedule operation of this policy.
func (o SimpleSchedulePolicyV2ResponsePtrOutput) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2Response) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunFrequency
	}).(pulumi.StringPtrOutput)
}

// Weekly schedule of this policy
func (o SimpleSchedulePolicyV2ResponsePtrOutput) WeeklySchedule() WeeklyScheduleResponsePtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2Response) *WeeklyScheduleResponse {
		if v == nil {
			return nil
		}
		return v.WeeklySchedule
	}).(WeeklyScheduleResponsePtrOutput)
}

// Identifies the unique system identifier for each Azure resource.
type Sku struct {
	// The sku capacity
	Capacity *string `pulumi:"capacity"`
	// The sku family
	Family *string `pulumi:"family"`
	// Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
	Name string `pulumi:"name"`
	// The sku size
	Size *string `pulumi:"size"`
	// The Sku tier.
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Identifies the unique system identifier for each Azure resource.
type SkuArgs struct {
	// The sku capacity
	Capacity pulumi.StringPtrInput `pulumi:"capacity"`
	// The sku family
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
	Name pulumi.StringInput `pulumi:"name"`
	// The sku size
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The Sku tier.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// Identifies the unique system identifier for each Azure resource.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The sku capacity
func (o SkuOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Capacity }).(pulumi.StringPtrOutput)
}

// The sku family
func (o SkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The sku size
func (o SkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The Sku tier.
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// The sku capacity
func (o SkuPtrOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.StringPtrOutput)
}

// The sku family
func (o SkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The sku size
func (o SkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The Sku tier.
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Identifies the unique system identifier for each Azure resource.
type SkuResponse struct {
	// The sku capacity
	Capacity *string `pulumi:"capacity"`
	// The sku family
	Family *string `pulumi:"family"`
	// Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
	Name string `pulumi:"name"`
	// The sku size
	Size *string `pulumi:"size"`
	// The Sku tier.
	Tier *string `pulumi:"tier"`
}

// Identifies the unique system identifier for each Azure resource.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The sku capacity
func (o SkuResponseOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Capacity }).(pulumi.StringPtrOutput)
}

// The sku family
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The sku size
func (o SkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The Sku tier.
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// The sku capacity
func (o SkuResponsePtrOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.StringPtrOutput)
}

// The sku family
func (o SkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The sku size
func (o SkuResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The Sku tier.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Snapshot Backup related fields for WorkloadType SaPHanaSystem
type SnapshotBackupAdditionalDetails struct {
	InstantRPDetails              *string `pulumi:"instantRPDetails"`
	InstantRpRetentionRangeInDays *int    `pulumi:"instantRpRetentionRangeInDays"`
	// User assigned managed identity details
	UserAssignedManagedIdentityDetails *UserAssignedManagedIdentityDetails `pulumi:"userAssignedManagedIdentityDetails"`
}

// SnapshotBackupAdditionalDetailsInput is an input type that accepts SnapshotBackupAdditionalDetailsArgs and SnapshotBackupAdditionalDetailsOutput values.
// You can construct a concrete instance of `SnapshotBackupAdditionalDetailsInput` via:
//
//	SnapshotBackupAdditionalDetailsArgs{...}
type SnapshotBackupAdditionalDetailsInput interface {
	pulumi.Input

	ToSnapshotBackupAdditionalDetailsOutput() SnapshotBackupAdditionalDetailsOutput
	ToSnapshotBackupAdditionalDetailsOutputWithContext(context.Context) SnapshotBackupAdditionalDetailsOutput
}

// Snapshot Backup related fields for WorkloadType SaPHanaSystem
type SnapshotBackupAdditionalDetailsArgs struct {
	InstantRPDetails              pulumi.StringPtrInput `pulumi:"instantRPDetails"`
	InstantRpRetentionRangeInDays pulumi.IntPtrInput    `pulumi:"instantRpRetentionRangeInDays"`
	// User assigned managed identity details
	UserAssignedManagedIdentityDetails UserAssignedManagedIdentityDetailsPtrInput `pulumi:"userAssignedManagedIdentityDetails"`
}

func (SnapshotBackupAdditionalDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotBackupAdditionalDetails)(nil)).Elem()
}

func (i SnapshotBackupAdditionalDetailsArgs) ToSnapshotBackupAdditionalDetailsOutput() SnapshotBackupAdditionalDetailsOutput {
	return i.ToSnapshotBackupAdditionalDetailsOutputWithContext(context.Background())
}

func (i SnapshotBackupAdditionalDetailsArgs) ToSnapshotBackupAdditionalDetailsOutputWithContext(ctx context.Context) SnapshotBackupAdditionalDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotBackupAdditionalDetailsOutput)
}

func (i SnapshotBackupAdditionalDetailsArgs) ToSnapshotBackupAdditionalDetailsPtrOutput() SnapshotBackupAdditionalDetailsPtrOutput {
	return i.ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(context.Background())
}

func (i SnapshotBackupAdditionalDetailsArgs) ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(ctx context.Context) SnapshotBackupAdditionalDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotBackupAdditionalDetailsOutput).ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(ctx)
}

// SnapshotBackupAdditionalDetailsPtrInput is an input type that accepts SnapshotBackupAdditionalDetailsArgs, SnapshotBackupAdditionalDetailsPtr and SnapshotBackupAdditionalDetailsPtrOutput values.
// You can construct a concrete instance of `SnapshotBackupAdditionalDetailsPtrInput` via:
//
//	        SnapshotBackupAdditionalDetailsArgs{...}
//
//	or:
//
//	        nil
type SnapshotBackupAdditionalDetailsPtrInput interface {
	pulumi.Input

	ToSnapshotBackupAdditionalDetailsPtrOutput() SnapshotBackupAdditionalDetailsPtrOutput
	ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(context.Context) SnapshotBackupAdditionalDetailsPtrOutput
}

type snapshotBackupAdditionalDetailsPtrType SnapshotBackupAdditionalDetailsArgs

func SnapshotBackupAdditionalDetailsPtr(v *SnapshotBackupAdditionalDetailsArgs) SnapshotBackupAdditionalDetailsPtrInput {
	return (*snapshotBackupAdditionalDetailsPtrType)(v)
}

func (*snapshotBackupAdditionalDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotBackupAdditionalDetails)(nil)).Elem()
}

func (i *snapshotBackupAdditionalDetailsPtrType) ToSnapshotBackupAdditionalDetailsPtrOutput() SnapshotBackupAdditionalDetailsPtrOutput {
	return i.ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(context.Background())
}

func (i *snapshotBackupAdditionalDetailsPtrType) ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(ctx context.Context) SnapshotBackupAdditionalDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotBackupAdditionalDetailsPtrOutput)
}

// Snapshot Backup related fields for WorkloadType SaPHanaSystem
type SnapshotBackupAdditionalDetailsOutput struct{ *pulumi.OutputState }

func (SnapshotBackupAdditionalDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotBackupAdditionalDetails)(nil)).Elem()
}

func (o SnapshotBackupAdditionalDetailsOutput) ToSnapshotBackupAdditionalDetailsOutput() SnapshotBackupAdditionalDetailsOutput {
	return o
}

func (o SnapshotBackupAdditionalDetailsOutput) ToSnapshotBackupAdditionalDetailsOutputWithContext(ctx context.Context) SnapshotBackupAdditionalDetailsOutput {
	return o
}

func (o SnapshotBackupAdditionalDetailsOutput) ToSnapshotBackupAdditionalDetailsPtrOutput() SnapshotBackupAdditionalDetailsPtrOutput {
	return o.ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(context.Background())
}

func (o SnapshotBackupAdditionalDetailsOutput) ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(ctx context.Context) SnapshotBackupAdditionalDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotBackupAdditionalDetails) *SnapshotBackupAdditionalDetails {
		return &v
	}).(SnapshotBackupAdditionalDetailsPtrOutput)
}

func (o SnapshotBackupAdditionalDetailsOutput) InstantRPDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotBackupAdditionalDetails) *string { return v.InstantRPDetails }).(pulumi.StringPtrOutput)
}

func (o SnapshotBackupAdditionalDetailsOutput) InstantRpRetentionRangeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SnapshotBackupAdditionalDetails) *int { return v.InstantRpRetentionRangeInDays }).(pulumi.IntPtrOutput)
}

// User assigned managed identity details
func (o SnapshotBackupAdditionalDetailsOutput) UserAssignedManagedIdentityDetails() UserAssignedManagedIdentityDetailsPtrOutput {
	return o.ApplyT(func(v SnapshotBackupAdditionalDetails) *UserAssignedManagedIdentityDetails {
		return v.UserAssignedManagedIdentityDetails
	}).(UserAssignedManagedIdentityDetailsPtrOutput)
}

type SnapshotBackupAdditionalDetailsPtrOutput struct{ *pulumi.OutputState }

func (SnapshotBackupAdditionalDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotBackupAdditionalDetails)(nil)).Elem()
}

func (o SnapshotBackupAdditionalDetailsPtrOutput) ToSnapshotBackupAdditionalDetailsPtrOutput() SnapshotBackupAdditionalDetailsPtrOutput {
	return o
}

func (o SnapshotBackupAdditionalDetailsPtrOutput) ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(ctx context.Context) SnapshotBackupAdditionalDetailsPtrOutput {
	return o
}

func (o SnapshotBackupAdditionalDetailsPtrOutput) Elem() SnapshotBackupAdditionalDetailsOutput {
	return o.ApplyT(func(v *SnapshotBackupAdditionalDetails) SnapshotBackupAdditionalDetails {
		if v != nil {
			return *v
		}
		var ret SnapshotBackupAdditionalDetails
		return ret
	}).(SnapshotBackupAdditionalDetailsOutput)
}

func (o SnapshotBackupAdditionalDetailsPtrOutput) InstantRPDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotBackupAdditionalDetails) *string {
		if v == nil {
			return nil
		}
		return v.InstantRPDetails
	}).(pulumi.StringPtrOutput)
}

func (o SnapshotBackupAdditionalDetailsPtrOutput) InstantRpRetentionRangeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SnapshotBackupAdditionalDetails) *int {
		if v == nil {
			return nil
		}
		return v.InstantRpRetentionRangeInDays
	}).(pulumi.IntPtrOutput)
}

// User assigned managed identity details
func (o SnapshotBackupAdditionalDetailsPtrOutput) UserAssignedManagedIdentityDetails() UserAssignedManagedIdentityDetailsPtrOutput {
	return o.ApplyT(func(v *SnapshotBackupAdditionalDetails) *UserAssignedManagedIdentityDetails {
		if v == nil {
			return nil
		}
		return v.UserAssignedManagedIdentityDetails
	}).(UserAssignedManagedIdentityDetailsPtrOutput)
}

// Snapshot Backup related fields for WorkloadType SaPHanaSystem
type SnapshotBackupAdditionalDetailsResponse struct {
	InstantRPDetails              *string `pulumi:"instantRPDetails"`
	InstantRpRetentionRangeInDays *int    `pulumi:"instantRpRetentionRangeInDays"`
	// User assigned managed identity details
	UserAssignedManagedIdentityDetails *UserAssignedManagedIdentityDetailsResponse `pulumi:"userAssignedManagedIdentityDetails"`
}

// Snapshot Backup related fields for WorkloadType SaPHanaSystem
type SnapshotBackupAdditionalDetailsResponseOutput struct{ *pulumi.OutputState }

func (SnapshotBackupAdditionalDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotBackupAdditionalDetailsResponse)(nil)).Elem()
}

func (o SnapshotBackupAdditionalDetailsResponseOutput) ToSnapshotBackupAdditionalDetailsResponseOutput() SnapshotBackupAdditionalDetailsResponseOutput {
	return o
}

func (o SnapshotBackupAdditionalDetailsResponseOutput) ToSnapshotBackupAdditionalDetailsResponseOutputWithContext(ctx context.Context) SnapshotBackupAdditionalDetailsResponseOutput {
	return o
}

func (o SnapshotBackupAdditionalDetailsResponseOutput) InstantRPDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotBackupAdditionalDetailsResponse) *string { return v.InstantRPDetails }).(pulumi.StringPtrOutput)
}

func (o SnapshotBackupAdditionalDetailsResponseOutput) InstantRpRetentionRangeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SnapshotBackupAdditionalDetailsResponse) *int { return v.InstantRpRetentionRangeInDays }).(pulumi.IntPtrOutput)
}

// User assigned managed identity details
func (o SnapshotBackupAdditionalDetailsResponseOutput) UserAssignedManagedIdentityDetails() UserAssignedManagedIdentityDetailsResponsePtrOutput {
	return o.ApplyT(func(v SnapshotBackupAdditionalDetailsResponse) *UserAssignedManagedIdentityDetailsResponse {
		return v.UserAssignedManagedIdentityDetails
	}).(UserAssignedManagedIdentityDetailsResponsePtrOutput)
}

type SnapshotBackupAdditionalDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (SnapshotBackupAdditionalDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotBackupAdditionalDetailsResponse)(nil)).Elem()
}

func (o SnapshotBackupAdditionalDetailsResponsePtrOutput) ToSnapshotBackupAdditionalDetailsResponsePtrOutput() SnapshotBackupAdditionalDetailsResponsePtrOutput {
	return o
}

func (o SnapshotBackupAdditionalDetailsResponsePtrOutput) ToSnapshotBackupAdditionalDetailsResponsePtrOutputWithContext(ctx context.Context) SnapshotBackupAdditionalDetailsResponsePtrOutput {
	return o
}

func (o SnapshotBackupAdditionalDetailsResponsePtrOutput) Elem() SnapshotBackupAdditionalDetailsResponseOutput {
	return o.ApplyT(func(v *SnapshotBackupAdditionalDetailsResponse) SnapshotBackupAdditionalDetailsResponse {
		if v != nil {
			return *v
		}
		var ret SnapshotBackupAdditionalDetailsResponse
		return ret
	}).(SnapshotBackupAdditionalDetailsResponseOutput)
}

func (o SnapshotBackupAdditionalDetailsResponsePtrOutput) InstantRPDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotBackupAdditionalDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InstantRPDetails
	}).(pulumi.StringPtrOutput)
}

func (o SnapshotBackupAdditionalDetailsResponsePtrOutput) InstantRpRetentionRangeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SnapshotBackupAdditionalDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.InstantRpRetentionRangeInDays
	}).(pulumi.IntPtrOutput)
}

// User assigned managed identity details
func (o SnapshotBackupAdditionalDetailsResponsePtrOutput) UserAssignedManagedIdentityDetails() UserAssignedManagedIdentityDetailsResponsePtrOutput {
	return o.ApplyT(func(v *SnapshotBackupAdditionalDetailsResponse) *UserAssignedManagedIdentityDetailsResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedManagedIdentityDetails
	}).(UserAssignedManagedIdentityDetailsResponsePtrOutput)
}

// Soft delete Settings of vault
type SoftDeleteSettings struct {
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int    `pulumi:"softDeleteRetentionPeriodInDays"`
	SoftDeleteState                 *string `pulumi:"softDeleteState"`
}

// SoftDeleteSettingsInput is an input type that accepts SoftDeleteSettingsArgs and SoftDeleteSettingsOutput values.
// You can construct a concrete instance of `SoftDeleteSettingsInput` via:
//
//	SoftDeleteSettingsArgs{...}
type SoftDeleteSettingsInput interface {
	pulumi.Input

	ToSoftDeleteSettingsOutput() SoftDeleteSettingsOutput
	ToSoftDeleteSettingsOutputWithContext(context.Context) SoftDeleteSettingsOutput
}

// Soft delete Settings of vault
type SoftDeleteSettingsArgs struct {
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput    `pulumi:"softDeleteRetentionPeriodInDays"`
	SoftDeleteState                 pulumi.StringPtrInput `pulumi:"softDeleteState"`
}

func (SoftDeleteSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftDeleteSettings)(nil)).Elem()
}

func (i SoftDeleteSettingsArgs) ToSoftDeleteSettingsOutput() SoftDeleteSettingsOutput {
	return i.ToSoftDeleteSettingsOutputWithContext(context.Background())
}

func (i SoftDeleteSettingsArgs) ToSoftDeleteSettingsOutputWithContext(ctx context.Context) SoftDeleteSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftDeleteSettingsOutput)
}

func (i SoftDeleteSettingsArgs) ToSoftDeleteSettingsPtrOutput() SoftDeleteSettingsPtrOutput {
	return i.ToSoftDeleteSettingsPtrOutputWithContext(context.Background())
}

func (i SoftDeleteSettingsArgs) ToSoftDeleteSettingsPtrOutputWithContext(ctx context.Context) SoftDeleteSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftDeleteSettingsOutput).ToSoftDeleteSettingsPtrOutputWithContext(ctx)
}

// SoftDeleteSettingsPtrInput is an input type that accepts SoftDeleteSettingsArgs, SoftDeleteSettingsPtr and SoftDeleteSettingsPtrOutput values.
// You can construct a concrete instance of `SoftDeleteSettingsPtrInput` via:
//
//	        SoftDeleteSettingsArgs{...}
//
//	or:
//
//	        nil
type SoftDeleteSettingsPtrInput interface {
	pulumi.Input

	ToSoftDeleteSettingsPtrOutput() SoftDeleteSettingsPtrOutput
	ToSoftDeleteSettingsPtrOutputWithContext(context.Context) SoftDeleteSettingsPtrOutput
}

type softDeleteSettingsPtrType SoftDeleteSettingsArgs

func SoftDeleteSettingsPtr(v *SoftDeleteSettingsArgs) SoftDeleteSettingsPtrInput {
	return (*softDeleteSettingsPtrType)(v)
}

func (*softDeleteSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftDeleteSettings)(nil)).Elem()
}

func (i *softDeleteSettingsPtrType) ToSoftDeleteSettingsPtrOutput() SoftDeleteSettingsPtrOutput {
	return i.ToSoftDeleteSettingsPtrOutputWithContext(context.Background())
}

func (i *softDeleteSettingsPtrType) ToSoftDeleteSettingsPtrOutputWithContext(ctx context.Context) SoftDeleteSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftDeleteSettingsPtrOutput)
}

// Soft delete Settings of vault
type SoftDeleteSettingsOutput struct{ *pulumi.OutputState }

func (SoftDeleteSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftDeleteSettings)(nil)).Elem()
}

func (o SoftDeleteSettingsOutput) ToSoftDeleteSettingsOutput() SoftDeleteSettingsOutput {
	return o
}

func (o SoftDeleteSettingsOutput) ToSoftDeleteSettingsOutputWithContext(ctx context.Context) SoftDeleteSettingsOutput {
	return o
}

func (o SoftDeleteSettingsOutput) ToSoftDeleteSettingsPtrOutput() SoftDeleteSettingsPtrOutput {
	return o.ToSoftDeleteSettingsPtrOutputWithContext(context.Background())
}

func (o SoftDeleteSettingsOutput) ToSoftDeleteSettingsPtrOutputWithContext(ctx context.Context) SoftDeleteSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SoftDeleteSettings) *SoftDeleteSettings {
		return &v
	}).(SoftDeleteSettingsPtrOutput)
}

// Soft delete retention period in days
func (o SoftDeleteSettingsOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoftDeleteSettings) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

func (o SoftDeleteSettingsOutput) SoftDeleteState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoftDeleteSettings) *string { return v.SoftDeleteState }).(pulumi.StringPtrOutput)
}

type SoftDeleteSettingsPtrOutput struct{ *pulumi.OutputState }

func (SoftDeleteSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftDeleteSettings)(nil)).Elem()
}

func (o SoftDeleteSettingsPtrOutput) ToSoftDeleteSettingsPtrOutput() SoftDeleteSettingsPtrOutput {
	return o
}

func (o SoftDeleteSettingsPtrOutput) ToSoftDeleteSettingsPtrOutputWithContext(ctx context.Context) SoftDeleteSettingsPtrOutput {
	return o
}

func (o SoftDeleteSettingsPtrOutput) Elem() SoftDeleteSettingsOutput {
	return o.ApplyT(func(v *SoftDeleteSettings) SoftDeleteSettings {
		if v != nil {
			return *v
		}
		var ret SoftDeleteSettings
		return ret
	}).(SoftDeleteSettingsOutput)
}

// Soft delete retention period in days
func (o SoftDeleteSettingsPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoftDeleteSettings) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

func (o SoftDeleteSettingsPtrOutput) SoftDeleteState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoftDeleteSettings) *string {
		if v == nil {
			return nil
		}
		return v.SoftDeleteState
	}).(pulumi.StringPtrOutput)
}

// Soft delete Settings of vault
type SoftDeleteSettingsResponse struct {
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int    `pulumi:"softDeleteRetentionPeriodInDays"`
	SoftDeleteState                 *string `pulumi:"softDeleteState"`
}

// Soft delete Settings of vault
type SoftDeleteSettingsResponseOutput struct{ *pulumi.OutputState }

func (SoftDeleteSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftDeleteSettingsResponse)(nil)).Elem()
}

func (o SoftDeleteSettingsResponseOutput) ToSoftDeleteSettingsResponseOutput() SoftDeleteSettingsResponseOutput {
	return o
}

func (o SoftDeleteSettingsResponseOutput) ToSoftDeleteSettingsResponseOutputWithContext(ctx context.Context) SoftDeleteSettingsResponseOutput {
	return o
}

// Soft delete retention period in days
func (o SoftDeleteSettingsResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoftDeleteSettingsResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

func (o SoftDeleteSettingsResponseOutput) SoftDeleteState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoftDeleteSettingsResponse) *string { return v.SoftDeleteState }).(pulumi.StringPtrOutput)
}

type SoftDeleteSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (SoftDeleteSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftDeleteSettingsResponse)(nil)).Elem()
}

func (o SoftDeleteSettingsResponsePtrOutput) ToSoftDeleteSettingsResponsePtrOutput() SoftDeleteSettingsResponsePtrOutput {
	return o
}

func (o SoftDeleteSettingsResponsePtrOutput) ToSoftDeleteSettingsResponsePtrOutputWithContext(ctx context.Context) SoftDeleteSettingsResponsePtrOutput {
	return o
}

func (o SoftDeleteSettingsResponsePtrOutput) Elem() SoftDeleteSettingsResponseOutput {
	return o.ApplyT(func(v *SoftDeleteSettingsResponse) SoftDeleteSettingsResponse {
		if v != nil {
			return *v
		}
		var ret SoftDeleteSettingsResponse
		return ret
	}).(SoftDeleteSettingsResponseOutput)
}

// Soft delete retention period in days
func (o SoftDeleteSettingsResponsePtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoftDeleteSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

func (o SoftDeleteSettingsResponsePtrOutput) SoftDeleteState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoftDeleteSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SoftDeleteState
	}).(pulumi.StringPtrOutput)
}

// Storage mapping properties.
type StorageClassificationMappingPropertiesResponse struct {
	// Target storage object Id.
	TargetStorageClassificationId *string `pulumi:"targetStorageClassificationId"`
}

// Storage mapping properties.
type StorageClassificationMappingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageClassificationMappingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClassificationMappingPropertiesResponse)(nil)).Elem()
}

func (o StorageClassificationMappingPropertiesResponseOutput) ToStorageClassificationMappingPropertiesResponseOutput() StorageClassificationMappingPropertiesResponseOutput {
	return o
}

func (o StorageClassificationMappingPropertiesResponseOutput) ToStorageClassificationMappingPropertiesResponseOutputWithContext(ctx context.Context) StorageClassificationMappingPropertiesResponseOutput {
	return o
}

// Target storage object Id.
func (o StorageClassificationMappingPropertiesResponseOutput) TargetStorageClassificationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageClassificationMappingPropertiesResponse) *string { return v.TargetStorageClassificationId }).(pulumi.StringPtrOutput)
}

// Storage mapping input properties.
type StorageMappingInputProperties struct {
	// The ID of the storage object.
	TargetStorageClassificationId *string `pulumi:"targetStorageClassificationId"`
}

// StorageMappingInputPropertiesInput is an input type that accepts StorageMappingInputPropertiesArgs and StorageMappingInputPropertiesOutput values.
// You can construct a concrete instance of `StorageMappingInputPropertiesInput` via:
//
//	StorageMappingInputPropertiesArgs{...}
type StorageMappingInputPropertiesInput interface {
	pulumi.Input

	ToStorageMappingInputPropertiesOutput() StorageMappingInputPropertiesOutput
	ToStorageMappingInputPropertiesOutputWithContext(context.Context) StorageMappingInputPropertiesOutput
}

// Storage mapping input properties.
type StorageMappingInputPropertiesArgs struct {
	// The ID of the storage object.
	TargetStorageClassificationId pulumi.StringPtrInput `pulumi:"targetStorageClassificationId"`
}

func (StorageMappingInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageMappingInputProperties)(nil)).Elem()
}

func (i StorageMappingInputPropertiesArgs) ToStorageMappingInputPropertiesOutput() StorageMappingInputPropertiesOutput {
	return i.ToStorageMappingInputPropertiesOutputWithContext(context.Background())
}

func (i StorageMappingInputPropertiesArgs) ToStorageMappingInputPropertiesOutputWithContext(ctx context.Context) StorageMappingInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageMappingInputPropertiesOutput)
}

func (i StorageMappingInputPropertiesArgs) ToStorageMappingInputPropertiesPtrOutput() StorageMappingInputPropertiesPtrOutput {
	return i.ToStorageMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i StorageMappingInputPropertiesArgs) ToStorageMappingInputPropertiesPtrOutputWithContext(ctx context.Context) StorageMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageMappingInputPropertiesOutput).ToStorageMappingInputPropertiesPtrOutputWithContext(ctx)
}

// StorageMappingInputPropertiesPtrInput is an input type that accepts StorageMappingInputPropertiesArgs, StorageMappingInputPropertiesPtr and StorageMappingInputPropertiesPtrOutput values.
// You can construct a concrete instance of `StorageMappingInputPropertiesPtrInput` via:
//
//	        StorageMappingInputPropertiesArgs{...}
//
//	or:
//
//	        nil
type StorageMappingInputPropertiesPtrInput interface {
	pulumi.Input

	ToStorageMappingInputPropertiesPtrOutput() StorageMappingInputPropertiesPtrOutput
	ToStorageMappingInputPropertiesPtrOutputWithContext(context.Context) StorageMappingInputPropertiesPtrOutput
}

type storageMappingInputPropertiesPtrType StorageMappingInputPropertiesArgs

func StorageMappingInputPropertiesPtr(v *StorageMappingInputPropertiesArgs) StorageMappingInputPropertiesPtrInput {
	return (*storageMappingInputPropertiesPtrType)(v)
}

func (*storageMappingInputPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageMappingInputProperties)(nil)).Elem()
}

func (i *storageMappingInputPropertiesPtrType) ToStorageMappingInputPropertiesPtrOutput() StorageMappingInputPropertiesPtrOutput {
	return i.ToStorageMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (i *storageMappingInputPropertiesPtrType) ToStorageMappingInputPropertiesPtrOutputWithContext(ctx context.Context) StorageMappingInputPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageMappingInputPropertiesPtrOutput)
}

// Storage mapping input properties.
type StorageMappingInputPropertiesOutput struct{ *pulumi.OutputState }

func (StorageMappingInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageMappingInputProperties)(nil)).Elem()
}

func (o StorageMappingInputPropertiesOutput) ToStorageMappingInputPropertiesOutput() StorageMappingInputPropertiesOutput {
	return o
}

func (o StorageMappingInputPropertiesOutput) ToStorageMappingInputPropertiesOutputWithContext(ctx context.Context) StorageMappingInputPropertiesOutput {
	return o
}

func (o StorageMappingInputPropertiesOutput) ToStorageMappingInputPropertiesPtrOutput() StorageMappingInputPropertiesPtrOutput {
	return o.ToStorageMappingInputPropertiesPtrOutputWithContext(context.Background())
}

func (o StorageMappingInputPropertiesOutput) ToStorageMappingInputPropertiesPtrOutputWithContext(ctx context.Context) StorageMappingInputPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageMappingInputProperties) *StorageMappingInputProperties {
		return &v
	}).(StorageMappingInputPropertiesPtrOutput)
}

// The ID of the storage object.
func (o StorageMappingInputPropertiesOutput) TargetStorageClassificationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageMappingInputProperties) *string { return v.TargetStorageClassificationId }).(pulumi.StringPtrOutput)
}

type StorageMappingInputPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StorageMappingInputPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageMappingInputProperties)(nil)).Elem()
}

func (o StorageMappingInputPropertiesPtrOutput) ToStorageMappingInputPropertiesPtrOutput() StorageMappingInputPropertiesPtrOutput {
	return o
}

func (o StorageMappingInputPropertiesPtrOutput) ToStorageMappingInputPropertiesPtrOutputWithContext(ctx context.Context) StorageMappingInputPropertiesPtrOutput {
	return o
}

func (o StorageMappingInputPropertiesPtrOutput) Elem() StorageMappingInputPropertiesOutput {
	return o.ApplyT(func(v *StorageMappingInputProperties) StorageMappingInputProperties {
		if v != nil {
			return *v
		}
		var ret StorageMappingInputProperties
		return ret
	}).(StorageMappingInputPropertiesOutput)
}

// The ID of the storage object.
func (o StorageMappingInputPropertiesPtrOutput) TargetStorageClassificationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageMappingInputProperties) *string {
		if v == nil {
			return nil
		}
		return v.TargetStorageClassificationId
	}).(pulumi.StringPtrOutput)
}

// Sub-protection policy which includes schedule and retention
type SubProtectionPolicy struct {
	// Type of backup policy type
	PolicyType *string `pulumi:"policyType"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
	// Snapshot Backup related fields for WorkloadType SaPHanaSystem
	SnapshotBackupAdditionalDetails *SnapshotBackupAdditionalDetails `pulumi:"snapshotBackupAdditionalDetails"`
	// Tiering policy to automatically move RPs to another tier.
	// Key is Target Tier, defined in RecoveryPointTierType enum.
	// Tiering policy specifies the criteria to move RP to the target tier.
	TieringPolicy map[string]TieringPolicy `pulumi:"tieringPolicy"`
}

// SubProtectionPolicyInput is an input type that accepts SubProtectionPolicyArgs and SubProtectionPolicyOutput values.
// You can construct a concrete instance of `SubProtectionPolicyInput` via:
//
//	SubProtectionPolicyArgs{...}
type SubProtectionPolicyInput interface {
	pulumi.Input

	ToSubProtectionPolicyOutput() SubProtectionPolicyOutput
	ToSubProtectionPolicyOutputWithContext(context.Context) SubProtectionPolicyOutput
}

// Sub-protection policy which includes schedule and retention
type SubProtectionPolicyArgs struct {
	// Type of backup policy type
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy pulumi.Input `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy pulumi.Input `pulumi:"schedulePolicy"`
	// Snapshot Backup related fields for WorkloadType SaPHanaSystem
	SnapshotBackupAdditionalDetails SnapshotBackupAdditionalDetailsPtrInput `pulumi:"snapshotBackupAdditionalDetails"`
	// Tiering policy to automatically move RPs to another tier.
	// Key is Target Tier, defined in RecoveryPointTierType enum.
	// Tiering policy specifies the criteria to move RP to the target tier.
	TieringPolicy TieringPolicyMapInput `pulumi:"tieringPolicy"`
}

func (SubProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubProtectionPolicy)(nil)).Elem()
}

func (i SubProtectionPolicyArgs) ToSubProtectionPolicyOutput() SubProtectionPolicyOutput {
	return i.ToSubProtectionPolicyOutputWithContext(context.Background())
}

func (i SubProtectionPolicyArgs) ToSubProtectionPolicyOutputWithContext(ctx context.Context) SubProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubProtectionPolicyOutput)
}

// SubProtectionPolicyArrayInput is an input type that accepts SubProtectionPolicyArray and SubProtectionPolicyArrayOutput values.
// You can construct a concrete instance of `SubProtectionPolicyArrayInput` via:
//
//	SubProtectionPolicyArray{ SubProtectionPolicyArgs{...} }
type SubProtectionPolicyArrayInput interface {
	pulumi.Input

	ToSubProtectionPolicyArrayOutput() SubProtectionPolicyArrayOutput
	ToSubProtectionPolicyArrayOutputWithContext(context.Context) SubProtectionPolicyArrayOutput
}

type SubProtectionPolicyArray []SubProtectionPolicyInput

func (SubProtectionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubProtectionPolicy)(nil)).Elem()
}

func (i SubProtectionPolicyArray) ToSubProtectionPolicyArrayOutput() SubProtectionPolicyArrayOutput {
	return i.ToSubProtectionPolicyArrayOutputWithContext(context.Background())
}

func (i SubProtectionPolicyArray) ToSubProtectionPolicyArrayOutputWithContext(ctx context.Context) SubProtectionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubProtectionPolicyArrayOutput)
}

// Sub-protection policy which includes schedule and retention
type SubProtectionPolicyOutput struct{ *pulumi.OutputState }

func (SubProtectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubProtectionPolicy)(nil)).Elem()
}

func (o SubProtectionPolicyOutput) ToSubProtectionPolicyOutput() SubProtectionPolicyOutput {
	return o
}

func (o SubProtectionPolicyOutput) ToSubProtectionPolicyOutputWithContext(ctx context.Context) SubProtectionPolicyOutput {
	return o
}

// Type of backup policy type
func (o SubProtectionPolicyOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubProtectionPolicy) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

// Retention policy with the details on backup copy retention ranges.
func (o SubProtectionPolicyOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v SubProtectionPolicy) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Backup schedule specified as part of backup policy.
func (o SubProtectionPolicyOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v SubProtectionPolicy) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

// Snapshot Backup related fields for WorkloadType SaPHanaSystem
func (o SubProtectionPolicyOutput) SnapshotBackupAdditionalDetails() SnapshotBackupAdditionalDetailsPtrOutput {
	return o.ApplyT(func(v SubProtectionPolicy) *SnapshotBackupAdditionalDetails { return v.SnapshotBackupAdditionalDetails }).(SnapshotBackupAdditionalDetailsPtrOutput)
}

// Tiering policy to automatically move RPs to another tier.
// Key is Target Tier, defined in RecoveryPointTierType enum.
// Tiering policy specifies the criteria to move RP to the target tier.
func (o SubProtectionPolicyOutput) TieringPolicy() TieringPolicyMapOutput {
	return o.ApplyT(func(v SubProtectionPolicy) map[string]TieringPolicy { return v.TieringPolicy }).(TieringPolicyMapOutput)
}

type SubProtectionPolicyArrayOutput struct{ *pulumi.OutputState }

func (SubProtectionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubProtectionPolicy)(nil)).Elem()
}

func (o SubProtectionPolicyArrayOutput) ToSubProtectionPolicyArrayOutput() SubProtectionPolicyArrayOutput {
	return o
}

func (o SubProtectionPolicyArrayOutput) ToSubProtectionPolicyArrayOutputWithContext(ctx context.Context) SubProtectionPolicyArrayOutput {
	return o
}

func (o SubProtectionPolicyArrayOutput) Index(i pulumi.IntInput) SubProtectionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubProtectionPolicy {
		return vs[0].([]SubProtectionPolicy)[vs[1].(int)]
	}).(SubProtectionPolicyOutput)
}

// Sub-protection policy which includes schedule and retention
type SubProtectionPolicyResponse struct {
	// Type of backup policy type
	PolicyType *string `pulumi:"policyType"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
	// Snapshot Backup related fields for WorkloadType SaPHanaSystem
	SnapshotBackupAdditionalDetails *SnapshotBackupAdditionalDetailsResponse `pulumi:"snapshotBackupAdditionalDetails"`
	// Tiering policy to automatically move RPs to another tier.
	// Key is Target Tier, defined in RecoveryPointTierType enum.
	// Tiering policy specifies the criteria to move RP to the target tier.
	TieringPolicy map[string]TieringPolicyResponse `pulumi:"tieringPolicy"`
}

// Sub-protection policy which includes schedule and retention
type SubProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (SubProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubProtectionPolicyResponse)(nil)).Elem()
}

func (o SubProtectionPolicyResponseOutput) ToSubProtectionPolicyResponseOutput() SubProtectionPolicyResponseOutput {
	return o
}

func (o SubProtectionPolicyResponseOutput) ToSubProtectionPolicyResponseOutputWithContext(ctx context.Context) SubProtectionPolicyResponseOutput {
	return o
}

// Type of backup policy type
func (o SubProtectionPolicyResponseOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubProtectionPolicyResponse) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

// Retention policy with the details on backup copy retention ranges.
func (o SubProtectionPolicyResponseOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v SubProtectionPolicyResponse) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Backup schedule specified as part of backup policy.
func (o SubProtectionPolicyResponseOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v SubProtectionPolicyResponse) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

// Snapshot Backup related fields for WorkloadType SaPHanaSystem
func (o SubProtectionPolicyResponseOutput) SnapshotBackupAdditionalDetails() SnapshotBackupAdditionalDetailsResponsePtrOutput {
	return o.ApplyT(func(v SubProtectionPolicyResponse) *SnapshotBackupAdditionalDetailsResponse {
		return v.SnapshotBackupAdditionalDetails
	}).(SnapshotBackupAdditionalDetailsResponsePtrOutput)
}

// Tiering policy to automatically move RPs to another tier.
// Key is Target Tier, defined in RecoveryPointTierType enum.
// Tiering policy specifies the criteria to move RP to the target tier.
func (o SubProtectionPolicyResponseOutput) TieringPolicy() TieringPolicyResponseMapOutput {
	return o.ApplyT(func(v SubProtectionPolicyResponse) map[string]TieringPolicyResponse { return v.TieringPolicy }).(TieringPolicyResponseMapOutput)
}

type SubProtectionPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (SubProtectionPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubProtectionPolicyResponse)(nil)).Elem()
}

func (o SubProtectionPolicyResponseArrayOutput) ToSubProtectionPolicyResponseArrayOutput() SubProtectionPolicyResponseArrayOutput {
	return o
}

func (o SubProtectionPolicyResponseArrayOutput) ToSubProtectionPolicyResponseArrayOutputWithContext(ctx context.Context) SubProtectionPolicyResponseArrayOutput {
	return o
}

func (o SubProtectionPolicyResponseArrayOutput) Index(i pulumi.IntInput) SubProtectionPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubProtectionPolicyResponse {
		return vs[0].([]SubProtectionPolicyResponse)[vs[1].(int)]
	}).(SubProtectionPolicyResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The type of identity that last modified the resource.
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Tiering Policy for a target tier.
// If the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier
type TieringPolicy struct {
	// Number of days/weeks/months/years to retain backups in current tier before tiering.
	// Used only if TieringMode is set to TierAfter
	Duration *int `pulumi:"duration"`
	// Retention duration type: days/weeks/months/years
	// Used only if TieringMode is set to TierAfter
	DurationType *string `pulumi:"durationType"`
	// Tiering Mode to control automatic tiering of recovery points. Supported values are:
	// 1. TierRecommended: Tier all recovery points recommended to be tiered
	// 2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.
	// 3. DoNotTier: Do not tier any recovery points
	TieringMode *string `pulumi:"tieringMode"`
}

// TieringPolicyInput is an input type that accepts TieringPolicyArgs and TieringPolicyOutput values.
// You can construct a concrete instance of `TieringPolicyInput` via:
//
//	TieringPolicyArgs{...}
type TieringPolicyInput interface {
	pulumi.Input

	ToTieringPolicyOutput() TieringPolicyOutput
	ToTieringPolicyOutputWithContext(context.Context) TieringPolicyOutput
}

// Tiering Policy for a target tier.
// If the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier
type TieringPolicyArgs struct {
	// Number of days/weeks/months/years to retain backups in current tier before tiering.
	// Used only if TieringMode is set to TierAfter
	Duration pulumi.IntPtrInput `pulumi:"duration"`
	// Retention duration type: days/weeks/months/years
	// Used only if TieringMode is set to TierAfter
	DurationType pulumi.StringPtrInput `pulumi:"durationType"`
	// Tiering Mode to control automatic tiering of recovery points. Supported values are:
	// 1. TierRecommended: Tier all recovery points recommended to be tiered
	// 2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.
	// 3. DoNotTier: Do not tier any recovery points
	TieringMode pulumi.StringPtrInput `pulumi:"tieringMode"`
}

func (TieringPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TieringPolicy)(nil)).Elem()
}

func (i TieringPolicyArgs) ToTieringPolicyOutput() TieringPolicyOutput {
	return i.ToTieringPolicyOutputWithContext(context.Background())
}

func (i TieringPolicyArgs) ToTieringPolicyOutputWithContext(ctx context.Context) TieringPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TieringPolicyOutput)
}

// TieringPolicyMapInput is an input type that accepts TieringPolicyMap and TieringPolicyMapOutput values.
// You can construct a concrete instance of `TieringPolicyMapInput` via:
//
//	TieringPolicyMap{ "key": TieringPolicyArgs{...} }
type TieringPolicyMapInput interface {
	pulumi.Input

	ToTieringPolicyMapOutput() TieringPolicyMapOutput
	ToTieringPolicyMapOutputWithContext(context.Context) TieringPolicyMapOutput
}

type TieringPolicyMap map[string]TieringPolicyInput

func (TieringPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]TieringPolicy)(nil)).Elem()
}

func (i TieringPolicyMap) ToTieringPolicyMapOutput() TieringPolicyMapOutput {
	return i.ToTieringPolicyMapOutputWithContext(context.Background())
}

func (i TieringPolicyMap) ToTieringPolicyMapOutputWithContext(ctx context.Context) TieringPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TieringPolicyMapOutput)
}

// Tiering Policy for a target tier.
// If the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier
type TieringPolicyOutput struct{ *pulumi.OutputState }

func (TieringPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TieringPolicy)(nil)).Elem()
}

func (o TieringPolicyOutput) ToTieringPolicyOutput() TieringPolicyOutput {
	return o
}

func (o TieringPolicyOutput) ToTieringPolicyOutputWithContext(ctx context.Context) TieringPolicyOutput {
	return o
}

// Number of days/weeks/months/years to retain backups in current tier before tiering.
// Used only if TieringMode is set to TierAfter
func (o TieringPolicyOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TieringPolicy) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

// Retention duration type: days/weeks/months/years
// Used only if TieringMode is set to TierAfter
func (o TieringPolicyOutput) DurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TieringPolicy) *string { return v.DurationType }).(pulumi.StringPtrOutput)
}

// Tiering Mode to control automatic tiering of recovery points. Supported values are:
// 1. TierRecommended: Tier all recovery points recommended to be tiered
// 2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.
// 3. DoNotTier: Do not tier any recovery points
func (o TieringPolicyOutput) TieringMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TieringPolicy) *string { return v.TieringMode }).(pulumi.StringPtrOutput)
}

type TieringPolicyMapOutput struct{ *pulumi.OutputState }

func (TieringPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]TieringPolicy)(nil)).Elem()
}

func (o TieringPolicyMapOutput) ToTieringPolicyMapOutput() TieringPolicyMapOutput {
	return o
}

func (o TieringPolicyMapOutput) ToTieringPolicyMapOutputWithContext(ctx context.Context) TieringPolicyMapOutput {
	return o
}

func (o TieringPolicyMapOutput) MapIndex(k pulumi.StringInput) TieringPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) TieringPolicy {
		return vs[0].(map[string]TieringPolicy)[vs[1].(string)]
	}).(TieringPolicyOutput)
}

// Tiering Policy for a target tier.
// If the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier
type TieringPolicyResponse struct {
	// Number of days/weeks/months/years to retain backups in current tier before tiering.
	// Used only if TieringMode is set to TierAfter
	Duration *int `pulumi:"duration"`
	// Retention duration type: days/weeks/months/years
	// Used only if TieringMode is set to TierAfter
	DurationType *string `pulumi:"durationType"`
	// Tiering Mode to control automatic tiering of recovery points. Supported values are:
	// 1. TierRecommended: Tier all recovery points recommended to be tiered
	// 2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.
	// 3. DoNotTier: Do not tier any recovery points
	TieringMode *string `pulumi:"tieringMode"`
}

// Tiering Policy for a target tier.
// If the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier
type TieringPolicyResponseOutput struct{ *pulumi.OutputState }

func (TieringPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TieringPolicyResponse)(nil)).Elem()
}

func (o TieringPolicyResponseOutput) ToTieringPolicyResponseOutput() TieringPolicyResponseOutput {
	return o
}

func (o TieringPolicyResponseOutput) ToTieringPolicyResponseOutputWithContext(ctx context.Context) TieringPolicyResponseOutput {
	return o
}

// Number of days/weeks/months/years to retain backups in current tier before tiering.
// Used only if TieringMode is set to TierAfter
func (o TieringPolicyResponseOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TieringPolicyResponse) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

// Retention duration type: days/weeks/months/years
// Used only if TieringMode is set to TierAfter
func (o TieringPolicyResponseOutput) DurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TieringPolicyResponse) *string { return v.DurationType }).(pulumi.StringPtrOutput)
}

// Tiering Mode to control automatic tiering of recovery points. Supported values are:
// 1. TierRecommended: Tier all recovery points recommended to be tiered
// 2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.
// 3. DoNotTier: Do not tier any recovery points
func (o TieringPolicyResponseOutput) TieringMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TieringPolicyResponse) *string { return v.TieringMode }).(pulumi.StringPtrOutput)
}

type TieringPolicyResponseMapOutput struct{ *pulumi.OutputState }

func (TieringPolicyResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]TieringPolicyResponse)(nil)).Elem()
}

func (o TieringPolicyResponseMapOutput) ToTieringPolicyResponseMapOutput() TieringPolicyResponseMapOutput {
	return o
}

func (o TieringPolicyResponseMapOutput) ToTieringPolicyResponseMapOutputWithContext(ctx context.Context) TieringPolicyResponseMapOutput {
	return o
}

func (o TieringPolicyResponseMapOutput) MapIndex(k pulumi.StringInput) TieringPolicyResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) TieringPolicyResponse {
		return vs[0].(map[string]TieringPolicyResponse)[vs[1].(string)]
	}).(TieringPolicyResponseOutput)
}

// Details for upgrading vault.
type UpgradeDetailsResponse struct {
	// UTC time at which the upgrade operation has ended.
	EndTimeUtc string `pulumi:"endTimeUtc"`
	// UTC time at which the upgrade operation status was last updated.
	LastUpdatedTimeUtc string `pulumi:"lastUpdatedTimeUtc"`
	// Message to the user containing information about the upgrade operation.
	Message string `pulumi:"message"`
	// ID of the vault upgrade operation.
	OperationId string `pulumi:"operationId"`
	// Resource ID of the vault before the upgrade.
	PreviousResourceId string `pulumi:"previousResourceId"`
	// UTC time at which the upgrade operation has started.
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// Status of the vault upgrade operation.
	Status string `pulumi:"status"`
	// The way the vault upgrade was triggered.
	TriggerType string `pulumi:"triggerType"`
	// Resource ID of the upgraded vault.
	UpgradedResourceId string `pulumi:"upgradedResourceId"`
}

// Details for upgrading vault.
type UpgradeDetailsResponseOutput struct{ *pulumi.OutputState }

func (UpgradeDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradeDetailsResponse)(nil)).Elem()
}

func (o UpgradeDetailsResponseOutput) ToUpgradeDetailsResponseOutput() UpgradeDetailsResponseOutput {
	return o
}

func (o UpgradeDetailsResponseOutput) ToUpgradeDetailsResponseOutputWithContext(ctx context.Context) UpgradeDetailsResponseOutput {
	return o
}

// UTC time at which the upgrade operation has ended.
func (o UpgradeDetailsResponseOutput) EndTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.EndTimeUtc }).(pulumi.StringOutput)
}

// UTC time at which the upgrade operation status was last updated.
func (o UpgradeDetailsResponseOutput) LastUpdatedTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.LastUpdatedTimeUtc }).(pulumi.StringOutput)
}

// Message to the user containing information about the upgrade operation.
func (o UpgradeDetailsResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.Message }).(pulumi.StringOutput)
}

// ID of the vault upgrade operation.
func (o UpgradeDetailsResponseOutput) OperationId() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.OperationId }).(pulumi.StringOutput)
}

// Resource ID of the vault before the upgrade.
func (o UpgradeDetailsResponseOutput) PreviousResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.PreviousResourceId }).(pulumi.StringOutput)
}

// UTC time at which the upgrade operation has started.
func (o UpgradeDetailsResponseOutput) StartTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.StartTimeUtc }).(pulumi.StringOutput)
}

// Status of the vault upgrade operation.
func (o UpgradeDetailsResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.Status }).(pulumi.StringOutput)
}

// The way the vault upgrade was triggered.
func (o UpgradeDetailsResponseOutput) TriggerType() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.TriggerType }).(pulumi.StringOutput)
}

// Resource ID of the upgraded vault.
func (o UpgradeDetailsResponseOutput) UpgradedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.UpgradedResourceId }).(pulumi.StringOutput)
}

type UpgradeDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (UpgradeDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpgradeDetailsResponse)(nil)).Elem()
}

func (o UpgradeDetailsResponsePtrOutput) ToUpgradeDetailsResponsePtrOutput() UpgradeDetailsResponsePtrOutput {
	return o
}

func (o UpgradeDetailsResponsePtrOutput) ToUpgradeDetailsResponsePtrOutputWithContext(ctx context.Context) UpgradeDetailsResponsePtrOutput {
	return o
}

func (o UpgradeDetailsResponsePtrOutput) Elem() UpgradeDetailsResponseOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) UpgradeDetailsResponse {
		if v != nil {
			return *v
		}
		var ret UpgradeDetailsResponse
		return ret
	}).(UpgradeDetailsResponseOutput)
}

// UTC time at which the upgrade operation has ended.
func (o UpgradeDetailsResponsePtrOutput) EndTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EndTimeUtc
	}).(pulumi.StringPtrOutput)
}

// UTC time at which the upgrade operation status was last updated.
func (o UpgradeDetailsResponsePtrOutput) LastUpdatedTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Message to the user containing information about the upgrade operation.
func (o UpgradeDetailsResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// ID of the vault upgrade operation.
func (o UpgradeDetailsResponsePtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OperationId
	}).(pulumi.StringPtrOutput)
}

// Resource ID of the vault before the upgrade.
func (o UpgradeDetailsResponsePtrOutput) PreviousResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PreviousResourceId
	}).(pulumi.StringPtrOutput)
}

// UTC time at which the upgrade operation has started.
func (o UpgradeDetailsResponsePtrOutput) StartTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StartTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Status of the vault upgrade operation.
func (o UpgradeDetailsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The way the vault upgrade was triggered.
func (o UpgradeDetailsResponsePtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TriggerType
	}).(pulumi.StringPtrOutput)
}

// Resource ID of the upgraded vault.
func (o UpgradeDetailsResponsePtrOutput) UpgradedResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpgradedResourceId
	}).(pulumi.StringPtrOutput)
}

// User assigned managed identity properties
type UserAssignedIdentityProperties struct {
	// The client ID of the assigned identity.
	ClientId *string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId *string `pulumi:"principalId"`
}

// UserAssignedIdentityPropertiesInput is an input type that accepts UserAssignedIdentityPropertiesArgs and UserAssignedIdentityPropertiesOutput values.
// You can construct a concrete instance of `UserAssignedIdentityPropertiesInput` via:
//
//	UserAssignedIdentityPropertiesArgs{...}
type UserAssignedIdentityPropertiesInput interface {
	pulumi.Input

	ToUserAssignedIdentityPropertiesOutput() UserAssignedIdentityPropertiesOutput
	ToUserAssignedIdentityPropertiesOutputWithContext(context.Context) UserAssignedIdentityPropertiesOutput
}

// User assigned managed identity properties
type UserAssignedIdentityPropertiesArgs struct {
	// The client ID of the assigned identity.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
}

func (UserAssignedIdentityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityProperties)(nil)).Elem()
}

func (i UserAssignedIdentityPropertiesArgs) ToUserAssignedIdentityPropertiesOutput() UserAssignedIdentityPropertiesOutput {
	return i.ToUserAssignedIdentityPropertiesOutputWithContext(context.Background())
}

func (i UserAssignedIdentityPropertiesArgs) ToUserAssignedIdentityPropertiesOutputWithContext(ctx context.Context) UserAssignedIdentityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityPropertiesOutput)
}

func (i UserAssignedIdentityPropertiesArgs) ToUserAssignedIdentityPropertiesPtrOutput() UserAssignedIdentityPropertiesPtrOutput {
	return i.ToUserAssignedIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i UserAssignedIdentityPropertiesArgs) ToUserAssignedIdentityPropertiesPtrOutputWithContext(ctx context.Context) UserAssignedIdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityPropertiesOutput).ToUserAssignedIdentityPropertiesPtrOutputWithContext(ctx)
}

// UserAssignedIdentityPropertiesPtrInput is an input type that accepts UserAssignedIdentityPropertiesArgs, UserAssignedIdentityPropertiesPtr and UserAssignedIdentityPropertiesPtrOutput values.
// You can construct a concrete instance of `UserAssignedIdentityPropertiesPtrInput` via:
//
//	        UserAssignedIdentityPropertiesArgs{...}
//
//	or:
//
//	        nil
type UserAssignedIdentityPropertiesPtrInput interface {
	pulumi.Input

	ToUserAssignedIdentityPropertiesPtrOutput() UserAssignedIdentityPropertiesPtrOutput
	ToUserAssignedIdentityPropertiesPtrOutputWithContext(context.Context) UserAssignedIdentityPropertiesPtrOutput
}

type userAssignedIdentityPropertiesPtrType UserAssignedIdentityPropertiesArgs

func UserAssignedIdentityPropertiesPtr(v *UserAssignedIdentityPropertiesArgs) UserAssignedIdentityPropertiesPtrInput {
	return (*userAssignedIdentityPropertiesPtrType)(v)
}

func (*userAssignedIdentityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedIdentityProperties)(nil)).Elem()
}

func (i *userAssignedIdentityPropertiesPtrType) ToUserAssignedIdentityPropertiesPtrOutput() UserAssignedIdentityPropertiesPtrOutput {
	return i.ToUserAssignedIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i *userAssignedIdentityPropertiesPtrType) ToUserAssignedIdentityPropertiesPtrOutputWithContext(ctx context.Context) UserAssignedIdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityPropertiesPtrOutput)
}

// User assigned managed identity properties
type UserAssignedIdentityPropertiesOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityProperties)(nil)).Elem()
}

func (o UserAssignedIdentityPropertiesOutput) ToUserAssignedIdentityPropertiesOutput() UserAssignedIdentityPropertiesOutput {
	return o
}

func (o UserAssignedIdentityPropertiesOutput) ToUserAssignedIdentityPropertiesOutputWithContext(ctx context.Context) UserAssignedIdentityPropertiesOutput {
	return o
}

func (o UserAssignedIdentityPropertiesOutput) ToUserAssignedIdentityPropertiesPtrOutput() UserAssignedIdentityPropertiesPtrOutput {
	return o.ToUserAssignedIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (o UserAssignedIdentityPropertiesOutput) ToUserAssignedIdentityPropertiesPtrOutputWithContext(ctx context.Context) UserAssignedIdentityPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserAssignedIdentityProperties) *UserAssignedIdentityProperties {
		return &v
	}).(UserAssignedIdentityPropertiesPtrOutput)
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityPropertiesOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityProperties) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityPropertiesOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityProperties) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserAssignedIdentityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedIdentityProperties)(nil)).Elem()
}

func (o UserAssignedIdentityPropertiesPtrOutput) ToUserAssignedIdentityPropertiesPtrOutput() UserAssignedIdentityPropertiesPtrOutput {
	return o
}

func (o UserAssignedIdentityPropertiesPtrOutput) ToUserAssignedIdentityPropertiesPtrOutputWithContext(ctx context.Context) UserAssignedIdentityPropertiesPtrOutput {
	return o
}

func (o UserAssignedIdentityPropertiesPtrOutput) Elem() UserAssignedIdentityPropertiesOutput {
	return o.ApplyT(func(v *UserAssignedIdentityProperties) UserAssignedIdentityProperties {
		if v != nil {
			return *v
		}
		var ret UserAssignedIdentityProperties
		return ret
	}).(UserAssignedIdentityPropertiesOutput)
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityPropertiesPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedIdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityPropertiesPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedIdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// User assigned managed identity properties
type UserAssignedIdentityPropertiesResponse struct {
	// The client ID of the assigned identity.
	ClientId *string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId *string `pulumi:"principalId"`
}

// User assigned managed identity properties
type UserAssignedIdentityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityPropertiesResponse)(nil)).Elem()
}

func (o UserAssignedIdentityPropertiesResponseOutput) ToUserAssignedIdentityPropertiesResponseOutput() UserAssignedIdentityPropertiesResponseOutput {
	return o
}

func (o UserAssignedIdentityPropertiesResponseOutput) ToUserAssignedIdentityPropertiesResponseOutputWithContext(ctx context.Context) UserAssignedIdentityPropertiesResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityPropertiesResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityPropertiesResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityPropertiesResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityPropertiesResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserAssignedIdentityPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedIdentityPropertiesResponse)(nil)).Elem()
}

func (o UserAssignedIdentityPropertiesResponsePtrOutput) ToUserAssignedIdentityPropertiesResponsePtrOutput() UserAssignedIdentityPropertiesResponsePtrOutput {
	return o
}

func (o UserAssignedIdentityPropertiesResponsePtrOutput) ToUserAssignedIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) UserAssignedIdentityPropertiesResponsePtrOutput {
	return o
}

func (o UserAssignedIdentityPropertiesResponsePtrOutput) Elem() UserAssignedIdentityPropertiesResponseOutput {
	return o.ApplyT(func(v *UserAssignedIdentityPropertiesResponse) UserAssignedIdentityPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret UserAssignedIdentityPropertiesResponse
		return ret
	}).(UserAssignedIdentityPropertiesResponseOutput)
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityPropertiesResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedIdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityPropertiesResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedIdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// User assigned managed identity details
type UserAssignedManagedIdentityDetails struct {
	// The ARM id of the assigned identity.
	IdentityArmId *string `pulumi:"identityArmId"`
	// The name of the assigned identity.
	IdentityName *string `pulumi:"identityName"`
	// User assigned managed identity properties
	UserAssignedIdentityProperties *UserAssignedIdentityProperties `pulumi:"userAssignedIdentityProperties"`
}

// UserAssignedManagedIdentityDetailsInput is an input type that accepts UserAssignedManagedIdentityDetailsArgs and UserAssignedManagedIdentityDetailsOutput values.
// You can construct a concrete instance of `UserAssignedManagedIdentityDetailsInput` via:
//
//	UserAssignedManagedIdentityDetailsArgs{...}
type UserAssignedManagedIdentityDetailsInput interface {
	pulumi.Input

	ToUserAssignedManagedIdentityDetailsOutput() UserAssignedManagedIdentityDetailsOutput
	ToUserAssignedManagedIdentityDetailsOutputWithContext(context.Context) UserAssignedManagedIdentityDetailsOutput
}

// User assigned managed identity details
type UserAssignedManagedIdentityDetailsArgs struct {
	// The ARM id of the assigned identity.
	IdentityArmId pulumi.StringPtrInput `pulumi:"identityArmId"`
	// The name of the assigned identity.
	IdentityName pulumi.StringPtrInput `pulumi:"identityName"`
	// User assigned managed identity properties
	UserAssignedIdentityProperties UserAssignedIdentityPropertiesPtrInput `pulumi:"userAssignedIdentityProperties"`
}

func (UserAssignedManagedIdentityDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedManagedIdentityDetails)(nil)).Elem()
}

func (i UserAssignedManagedIdentityDetailsArgs) ToUserAssignedManagedIdentityDetailsOutput() UserAssignedManagedIdentityDetailsOutput {
	return i.ToUserAssignedManagedIdentityDetailsOutputWithContext(context.Background())
}

func (i UserAssignedManagedIdentityDetailsArgs) ToUserAssignedManagedIdentityDetailsOutputWithContext(ctx context.Context) UserAssignedManagedIdentityDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedManagedIdentityDetailsOutput)
}

func (i UserAssignedManagedIdentityDetailsArgs) ToUserAssignedManagedIdentityDetailsPtrOutput() UserAssignedManagedIdentityDetailsPtrOutput {
	return i.ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(context.Background())
}

func (i UserAssignedManagedIdentityDetailsArgs) ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(ctx context.Context) UserAssignedManagedIdentityDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedManagedIdentityDetailsOutput).ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(ctx)
}

// UserAssignedManagedIdentityDetailsPtrInput is an input type that accepts UserAssignedManagedIdentityDetailsArgs, UserAssignedManagedIdentityDetailsPtr and UserAssignedManagedIdentityDetailsPtrOutput values.
// You can construct a concrete instance of `UserAssignedManagedIdentityDetailsPtrInput` via:
//
//	        UserAssignedManagedIdentityDetailsArgs{...}
//
//	or:
//
//	        nil
type UserAssignedManagedIdentityDetailsPtrInput interface {
	pulumi.Input

	ToUserAssignedManagedIdentityDetailsPtrOutput() UserAssignedManagedIdentityDetailsPtrOutput
	ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(context.Context) UserAssignedManagedIdentityDetailsPtrOutput
}

type userAssignedManagedIdentityDetailsPtrType UserAssignedManagedIdentityDetailsArgs

func UserAssignedManagedIdentityDetailsPtr(v *UserAssignedManagedIdentityDetailsArgs) UserAssignedManagedIdentityDetailsPtrInput {
	return (*userAssignedManagedIdentityDetailsPtrType)(v)
}

func (*userAssignedManagedIdentityDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedManagedIdentityDetails)(nil)).Elem()
}

func (i *userAssignedManagedIdentityDetailsPtrType) ToUserAssignedManagedIdentityDetailsPtrOutput() UserAssignedManagedIdentityDetailsPtrOutput {
	return i.ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(context.Background())
}

func (i *userAssignedManagedIdentityDetailsPtrType) ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(ctx context.Context) UserAssignedManagedIdentityDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedManagedIdentityDetailsPtrOutput)
}

// User assigned managed identity details
type UserAssignedManagedIdentityDetailsOutput struct{ *pulumi.OutputState }

func (UserAssignedManagedIdentityDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedManagedIdentityDetails)(nil)).Elem()
}

func (o UserAssignedManagedIdentityDetailsOutput) ToUserAssignedManagedIdentityDetailsOutput() UserAssignedManagedIdentityDetailsOutput {
	return o
}

func (o UserAssignedManagedIdentityDetailsOutput) ToUserAssignedManagedIdentityDetailsOutputWithContext(ctx context.Context) UserAssignedManagedIdentityDetailsOutput {
	return o
}

func (o UserAssignedManagedIdentityDetailsOutput) ToUserAssignedManagedIdentityDetailsPtrOutput() UserAssignedManagedIdentityDetailsPtrOutput {
	return o.ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(context.Background())
}

func (o UserAssignedManagedIdentityDetailsOutput) ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(ctx context.Context) UserAssignedManagedIdentityDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserAssignedManagedIdentityDetails) *UserAssignedManagedIdentityDetails {
		return &v
	}).(UserAssignedManagedIdentityDetailsPtrOutput)
}

// The ARM id of the assigned identity.
func (o UserAssignedManagedIdentityDetailsOutput) IdentityArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityDetails) *string { return v.IdentityArmId }).(pulumi.StringPtrOutput)
}

// The name of the assigned identity.
func (o UserAssignedManagedIdentityDetailsOutput) IdentityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityDetails) *string { return v.IdentityName }).(pulumi.StringPtrOutput)
}

// User assigned managed identity properties
func (o UserAssignedManagedIdentityDetailsOutput) UserAssignedIdentityProperties() UserAssignedIdentityPropertiesPtrOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityDetails) *UserAssignedIdentityProperties {
		return v.UserAssignedIdentityProperties
	}).(UserAssignedIdentityPropertiesPtrOutput)
}

type UserAssignedManagedIdentityDetailsPtrOutput struct{ *pulumi.OutputState }

func (UserAssignedManagedIdentityDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedManagedIdentityDetails)(nil)).Elem()
}

func (o UserAssignedManagedIdentityDetailsPtrOutput) ToUserAssignedManagedIdentityDetailsPtrOutput() UserAssignedManagedIdentityDetailsPtrOutput {
	return o
}

func (o UserAssignedManagedIdentityDetailsPtrOutput) ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(ctx context.Context) UserAssignedManagedIdentityDetailsPtrOutput {
	return o
}

func (o UserAssignedManagedIdentityDetailsPtrOutput) Elem() UserAssignedManagedIdentityDetailsOutput {
	return o.ApplyT(func(v *UserAssignedManagedIdentityDetails) UserAssignedManagedIdentityDetails {
		if v != nil {
			return *v
		}
		var ret UserAssignedManagedIdentityDetails
		return ret
	}).(UserAssignedManagedIdentityDetailsOutput)
}

// The ARM id of the assigned identity.
func (o UserAssignedManagedIdentityDetailsPtrOutput) IdentityArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedManagedIdentityDetails) *string {
		if v == nil {
			return nil
		}
		return v.IdentityArmId
	}).(pulumi.StringPtrOutput)
}

// The name of the assigned identity.
func (o UserAssignedManagedIdentityDetailsPtrOutput) IdentityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedManagedIdentityDetails) *string {
		if v == nil {
			return nil
		}
		return v.IdentityName
	}).(pulumi.StringPtrOutput)
}

// User assigned managed identity properties
func (o UserAssignedManagedIdentityDetailsPtrOutput) UserAssignedIdentityProperties() UserAssignedIdentityPropertiesPtrOutput {
	return o.ApplyT(func(v *UserAssignedManagedIdentityDetails) *UserAssignedIdentityProperties {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityProperties
	}).(UserAssignedIdentityPropertiesPtrOutput)
}

// User assigned managed identity details
type UserAssignedManagedIdentityDetailsResponse struct {
	// The ARM id of the assigned identity.
	IdentityArmId *string `pulumi:"identityArmId"`
	// The name of the assigned identity.
	IdentityName *string `pulumi:"identityName"`
	// User assigned managed identity properties
	UserAssignedIdentityProperties *UserAssignedIdentityPropertiesResponse `pulumi:"userAssignedIdentityProperties"`
}

// User assigned managed identity details
type UserAssignedManagedIdentityDetailsResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedManagedIdentityDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedManagedIdentityDetailsResponse)(nil)).Elem()
}

func (o UserAssignedManagedIdentityDetailsResponseOutput) ToUserAssignedManagedIdentityDetailsResponseOutput() UserAssignedManagedIdentityDetailsResponseOutput {
	return o
}

func (o UserAssignedManagedIdentityDetailsResponseOutput) ToUserAssignedManagedIdentityDetailsResponseOutputWithContext(ctx context.Context) UserAssignedManagedIdentityDetailsResponseOutput {
	return o
}

// The ARM id of the assigned identity.
func (o UserAssignedManagedIdentityDetailsResponseOutput) IdentityArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityDetailsResponse) *string { return v.IdentityArmId }).(pulumi.StringPtrOutput)
}

// The name of the assigned identity.
func (o UserAssignedManagedIdentityDetailsResponseOutput) IdentityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityDetailsResponse) *string { return v.IdentityName }).(pulumi.StringPtrOutput)
}

// User assigned managed identity properties
func (o UserAssignedManagedIdentityDetailsResponseOutput) UserAssignedIdentityProperties() UserAssignedIdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityDetailsResponse) *UserAssignedIdentityPropertiesResponse {
		return v.UserAssignedIdentityProperties
	}).(UserAssignedIdentityPropertiesResponsePtrOutput)
}

type UserAssignedManagedIdentityDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (UserAssignedManagedIdentityDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedManagedIdentityDetailsResponse)(nil)).Elem()
}

func (o UserAssignedManagedIdentityDetailsResponsePtrOutput) ToUserAssignedManagedIdentityDetailsResponsePtrOutput() UserAssignedManagedIdentityDetailsResponsePtrOutput {
	return o
}

func (o UserAssignedManagedIdentityDetailsResponsePtrOutput) ToUserAssignedManagedIdentityDetailsResponsePtrOutputWithContext(ctx context.Context) UserAssignedManagedIdentityDetailsResponsePtrOutput {
	return o
}

func (o UserAssignedManagedIdentityDetailsResponsePtrOutput) Elem() UserAssignedManagedIdentityDetailsResponseOutput {
	return o.ApplyT(func(v *UserAssignedManagedIdentityDetailsResponse) UserAssignedManagedIdentityDetailsResponse {
		if v != nil {
			return *v
		}
		var ret UserAssignedManagedIdentityDetailsResponse
		return ret
	}).(UserAssignedManagedIdentityDetailsResponseOutput)
}

// The ARM id of the assigned identity.
func (o UserAssignedManagedIdentityDetailsResponsePtrOutput) IdentityArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedManagedIdentityDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.IdentityArmId
	}).(pulumi.StringPtrOutput)
}

// The name of the assigned identity.
func (o UserAssignedManagedIdentityDetailsResponsePtrOutput) IdentityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedManagedIdentityDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.IdentityName
	}).(pulumi.StringPtrOutput)
}

// User assigned managed identity properties
func (o UserAssignedManagedIdentityDetailsResponsePtrOutput) UserAssignedIdentityProperties() UserAssignedIdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *UserAssignedManagedIdentityDetailsResponse) *UserAssignedIdentityPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityProperties
	}).(UserAssignedIdentityPropertiesResponsePtrOutput)
}

// A resource identity that is managed by the user of the service.
type UserIdentityResponse struct {
	// The client ID of the user-assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the user-assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// A resource identity that is managed by the user of the service.
type UserIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityResponse)(nil)).Elem()
}

func (o UserIdentityResponseOutput) ToUserIdentityResponseOutput() UserIdentityResponseOutput {
	return o
}

func (o UserIdentityResponseOutput) ToUserIdentityResponseOutputWithContext(ctx context.Context) UserIdentityResponseOutput {
	return o
}

// The client ID of the user-assigned identity.
func (o UserIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the user-assigned identity.
func (o UserIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityResponse)(nil)).Elem()
}

func (o UserIdentityResponseMapOutput) ToUserIdentityResponseMapOutput() UserIdentityResponseMapOutput {
	return o
}

func (o UserIdentityResponseMapOutput) ToUserIdentityResponseMapOutputWithContext(ctx context.Context) UserIdentityResponseMapOutput {
	return o
}

func (o UserIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserIdentityResponse {
		return vs[0].(map[string]UserIdentityResponse)[vs[1].(string)]
	}).(UserIdentityResponseOutput)
}

// vCenter properties.
type VCenterPropertiesResponse struct {
	// The VCenter discovery status.
	DiscoveryStatus *string `pulumi:"discoveryStatus"`
	// The ARM resource name of the fabric containing this VCenter.
	FabricArmResourceName *string `pulumi:"fabricArmResourceName"`
	// Friendly name of the vCenter.
	FriendlyName *string `pulumi:"friendlyName"`
	// The health errors for this VCenter.
	HealthErrors []HealthErrorResponse `pulumi:"healthErrors"`
	// The infrastructure Id of vCenter.
	InfrastructureId *string `pulumi:"infrastructureId"`
	// VCenter internal ID.
	InternalId *string `pulumi:"internalId"`
	// The IP address of the vCenter.
	IpAddress *string `pulumi:"ipAddress"`
	// The time when the last heartbeat was received by vCenter.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The port number for discovery.
	Port *string `pulumi:"port"`
	// The process server Id.
	ProcessServerId *string `pulumi:"processServerId"`
	// The account Id which has privileges to discover the vCenter.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
}

// vCenter properties.
type VCenterPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VCenterPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VCenterPropertiesResponse)(nil)).Elem()
}

func (o VCenterPropertiesResponseOutput) ToVCenterPropertiesResponseOutput() VCenterPropertiesResponseOutput {
	return o
}

func (o VCenterPropertiesResponseOutput) ToVCenterPropertiesResponseOutputWithContext(ctx context.Context) VCenterPropertiesResponseOutput {
	return o
}

// The VCenter discovery status.
func (o VCenterPropertiesResponseOutput) DiscoveryStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.DiscoveryStatus }).(pulumi.StringPtrOutput)
}

// The ARM resource name of the fabric containing this VCenter.
func (o VCenterPropertiesResponseOutput) FabricArmResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.FabricArmResourceName }).(pulumi.StringPtrOutput)
}

// Friendly name of the vCenter.
func (o VCenterPropertiesResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// The health errors for this VCenter.
func (o VCenterPropertiesResponseOutput) HealthErrors() HealthErrorResponseArrayOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) []HealthErrorResponse { return v.HealthErrors }).(HealthErrorResponseArrayOutput)
}

// The infrastructure Id of vCenter.
func (o VCenterPropertiesResponseOutput) InfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.InfrastructureId }).(pulumi.StringPtrOutput)
}

// VCenter internal ID.
func (o VCenterPropertiesResponseOutput) InternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.InternalId }).(pulumi.StringPtrOutput)
}

// The IP address of the vCenter.
func (o VCenterPropertiesResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The time when the last heartbeat was received by vCenter.
func (o VCenterPropertiesResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The port number for discovery.
func (o VCenterPropertiesResponseOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The process server Id.
func (o VCenterPropertiesResponseOutput) ProcessServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.ProcessServerId }).(pulumi.StringPtrOutput)
}

// The account Id which has privileges to discover the vCenter.
func (o VCenterPropertiesResponseOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VCenterPropertiesResponse) *string { return v.RunAsAccountId }).(pulumi.StringPtrOutput)
}

// Hyper V VM network details.
type VMNicDetailsResponse struct {
	// A value indicating whether the NIC has accelerated networking enabled.
	EnableAcceleratedNetworkingOnRecovery *bool `pulumi:"enableAcceleratedNetworkingOnRecovery"`
	// Whether the TFO NIC has accelerated networking enabled.
	EnableAcceleratedNetworkingOnTfo *bool `pulumi:"enableAcceleratedNetworkingOnTfo"`
	// The IP configurations of the NIC.
	IpConfigs []IPConfigDetailsResponse `pulumi:"ipConfigs"`
	// The nic Id.
	NicId *string `pulumi:"nicId"`
	// The id of the NSG associated with the NIC.
	RecoveryNetworkSecurityGroupId *string `pulumi:"recoveryNetworkSecurityGroupId"`
	// The name of the NIC to be used when creating target NICs.
	RecoveryNicName *string `pulumi:"recoveryNicName"`
	// The resource group of the NIC to be used when creating target NICs.
	RecoveryNicResourceGroupName *string `pulumi:"recoveryNicResourceGroupName"`
	// Recovery VM network Id.
	RecoveryVMNetworkId *string `pulumi:"recoveryVMNetworkId"`
	// The replica nic Id.
	ReplicaNicId *string `pulumi:"replicaNicId"`
	// A value indicating whether an existing NIC is allowed to be reused during failover subject to availability.
	ReuseExistingNic *bool `pulumi:"reuseExistingNic"`
	// Selection type for failover.
	SelectionType *string `pulumi:"selectionType"`
	// The source nic ARM Id.
	SourceNicArmId *string `pulumi:"sourceNicArmId"`
	// Target NIC name.
	TargetNicName *string `pulumi:"targetNicName"`
	// The NSG to be used by NIC during test failover.
	TfoNetworkSecurityGroupId *string `pulumi:"tfoNetworkSecurityGroupId"`
	// The name of the NIC to be used when creating target NICs in TFO.
	TfoRecoveryNicName *string `pulumi:"tfoRecoveryNicName"`
	// The resource group of the NIC to be used when creating target NICs in TFO.
	TfoRecoveryNicResourceGroupName *string `pulumi:"tfoRecoveryNicResourceGroupName"`
	// A value indicating whether an existing NIC is allowed to be reused during test failover subject to availability.
	TfoReuseExistingNic *bool `pulumi:"tfoReuseExistingNic"`
	// The network to be used by NIC during test failover.
	TfoVMNetworkId *string `pulumi:"tfoVMNetworkId"`
	// VM network name.
	VMNetworkName *string `pulumi:"vMNetworkName"`
}

// Defaults sets the appropriate defaults for VMNicDetailsResponse
func (val *VMNicDetailsResponse) Defaults() *VMNicDetailsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ReuseExistingNic == nil {
		reuseExistingNic_ := false
		tmp.ReuseExistingNic = &reuseExistingNic_
	}
	if tmp.TfoReuseExistingNic == nil {
		tfoReuseExistingNic_ := false
		tmp.TfoReuseExistingNic = &tfoReuseExistingNic_
	}
	return &tmp
}

// Hyper V VM network details.
type VMNicDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMNicDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMNicDetailsResponse)(nil)).Elem()
}

func (o VMNicDetailsResponseOutput) ToVMNicDetailsResponseOutput() VMNicDetailsResponseOutput {
	return o
}

func (o VMNicDetailsResponseOutput) ToVMNicDetailsResponseOutputWithContext(ctx context.Context) VMNicDetailsResponseOutput {
	return o
}

// A value indicating whether the NIC has accelerated networking enabled.
func (o VMNicDetailsResponseOutput) EnableAcceleratedNetworkingOnRecovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *bool { return v.EnableAcceleratedNetworkingOnRecovery }).(pulumi.BoolPtrOutput)
}

// Whether the TFO NIC has accelerated networking enabled.
func (o VMNicDetailsResponseOutput) EnableAcceleratedNetworkingOnTfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *bool { return v.EnableAcceleratedNetworkingOnTfo }).(pulumi.BoolPtrOutput)
}

// The IP configurations of the NIC.
func (o VMNicDetailsResponseOutput) IpConfigs() IPConfigDetailsResponseArrayOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) []IPConfigDetailsResponse { return v.IpConfigs }).(IPConfigDetailsResponseArrayOutput)
}

// The nic Id.
func (o VMNicDetailsResponseOutput) NicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.NicId }).(pulumi.StringPtrOutput)
}

// The id of the NSG associated with the NIC.
func (o VMNicDetailsResponseOutput) RecoveryNetworkSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.RecoveryNetworkSecurityGroupId }).(pulumi.StringPtrOutput)
}

// The name of the NIC to be used when creating target NICs.
func (o VMNicDetailsResponseOutput) RecoveryNicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.RecoveryNicName }).(pulumi.StringPtrOutput)
}

// The resource group of the NIC to be used when creating target NICs.
func (o VMNicDetailsResponseOutput) RecoveryNicResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.RecoveryNicResourceGroupName }).(pulumi.StringPtrOutput)
}

// Recovery VM network Id.
func (o VMNicDetailsResponseOutput) RecoveryVMNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.RecoveryVMNetworkId }).(pulumi.StringPtrOutput)
}

// The replica nic Id.
func (o VMNicDetailsResponseOutput) ReplicaNicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.ReplicaNicId }).(pulumi.StringPtrOutput)
}

// A value indicating whether an existing NIC is allowed to be reused during failover subject to availability.
func (o VMNicDetailsResponseOutput) ReuseExistingNic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *bool { return v.ReuseExistingNic }).(pulumi.BoolPtrOutput)
}

// Selection type for failover.
func (o VMNicDetailsResponseOutput) SelectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.SelectionType }).(pulumi.StringPtrOutput)
}

// The source nic ARM Id.
func (o VMNicDetailsResponseOutput) SourceNicArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.SourceNicArmId }).(pulumi.StringPtrOutput)
}

// Target NIC name.
func (o VMNicDetailsResponseOutput) TargetNicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.TargetNicName }).(pulumi.StringPtrOutput)
}

// The NSG to be used by NIC during test failover.
func (o VMNicDetailsResponseOutput) TfoNetworkSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.TfoNetworkSecurityGroupId }).(pulumi.StringPtrOutput)
}

// The name of the NIC to be used when creating target NICs in TFO.
func (o VMNicDetailsResponseOutput) TfoRecoveryNicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.TfoRecoveryNicName }).(pulumi.StringPtrOutput)
}

// The resource group of the NIC to be used when creating target NICs in TFO.
func (o VMNicDetailsResponseOutput) TfoRecoveryNicResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.TfoRecoveryNicResourceGroupName }).(pulumi.StringPtrOutput)
}

// A value indicating whether an existing NIC is allowed to be reused during test failover subject to availability.
func (o VMNicDetailsResponseOutput) TfoReuseExistingNic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *bool { return v.TfoReuseExistingNic }).(pulumi.BoolPtrOutput)
}

// The network to be used by NIC during test failover.
func (o VMNicDetailsResponseOutput) TfoVMNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.TfoVMNetworkId }).(pulumi.StringPtrOutput)
}

// VM network name.
func (o VMNicDetailsResponseOutput) VMNetworkName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMNicDetailsResponse) *string { return v.VMNetworkName }).(pulumi.StringPtrOutput)
}

type VMNicDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (VMNicDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMNicDetailsResponse)(nil)).Elem()
}

func (o VMNicDetailsResponseArrayOutput) ToVMNicDetailsResponseArrayOutput() VMNicDetailsResponseArrayOutput {
	return o
}

func (o VMNicDetailsResponseArrayOutput) ToVMNicDetailsResponseArrayOutputWithContext(ctx context.Context) VMNicDetailsResponseArrayOutput {
	return o
}

func (o VMNicDetailsResponseArrayOutput) Index(i pulumi.IntInput) VMNicDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMNicDetailsResponse {
		return vs[0].([]VMNicDetailsResponse)[vs[1].(int)]
	}).(VMNicDetailsResponseOutput)
}

// VMwareCbt container mapping input.
type VMwareCbtContainerMappingInput struct {
	// The class type.
	// Expected value is 'VMwareCbt'.
	InstanceType string `pulumi:"instanceType"`
	// The target key vault ARM Id.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// The target key vault URL.
	KeyVaultUri *string `pulumi:"keyVaultUri"`
	// The secret name of the service bus connection string.
	ServiceBusConnectionStringSecretName *string `pulumi:"serviceBusConnectionStringSecretName"`
	// The storage account ARM Id.
	StorageAccountId string `pulumi:"storageAccountId"`
	// The secret name of the storage account.
	StorageAccountSasSecretName *string `pulumi:"storageAccountSasSecretName"`
	// The target location.
	TargetLocation string `pulumi:"targetLocation"`
}

// VMwareCbtContainerMappingInputInput is an input type that accepts VMwareCbtContainerMappingInputArgs and VMwareCbtContainerMappingInputOutput values.
// You can construct a concrete instance of `VMwareCbtContainerMappingInputInput` via:
//
//	VMwareCbtContainerMappingInputArgs{...}
type VMwareCbtContainerMappingInputInput interface {
	pulumi.Input

	ToVMwareCbtContainerMappingInputOutput() VMwareCbtContainerMappingInputOutput
	ToVMwareCbtContainerMappingInputOutputWithContext(context.Context) VMwareCbtContainerMappingInputOutput
}

// VMwareCbt container mapping input.
type VMwareCbtContainerMappingInputArgs struct {
	// The class type.
	// Expected value is 'VMwareCbt'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The target key vault ARM Id.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// The target key vault URL.
	KeyVaultUri pulumi.StringPtrInput `pulumi:"keyVaultUri"`
	// The secret name of the service bus connection string.
	ServiceBusConnectionStringSecretName pulumi.StringPtrInput `pulumi:"serviceBusConnectionStringSecretName"`
	// The storage account ARM Id.
	StorageAccountId pulumi.StringInput `pulumi:"storageAccountId"`
	// The secret name of the storage account.
	StorageAccountSasSecretName pulumi.StringPtrInput `pulumi:"storageAccountSasSecretName"`
	// The target location.
	TargetLocation pulumi.StringInput `pulumi:"targetLocation"`
}

func (VMwareCbtContainerMappingInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtContainerMappingInput)(nil)).Elem()
}

func (i VMwareCbtContainerMappingInputArgs) ToVMwareCbtContainerMappingInputOutput() VMwareCbtContainerMappingInputOutput {
	return i.ToVMwareCbtContainerMappingInputOutputWithContext(context.Background())
}

func (i VMwareCbtContainerMappingInputArgs) ToVMwareCbtContainerMappingInputOutputWithContext(ctx context.Context) VMwareCbtContainerMappingInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtContainerMappingInputOutput)
}

func (i VMwareCbtContainerMappingInputArgs) ToVMwareCbtContainerMappingInputPtrOutput() VMwareCbtContainerMappingInputPtrOutput {
	return i.ToVMwareCbtContainerMappingInputPtrOutputWithContext(context.Background())
}

func (i VMwareCbtContainerMappingInputArgs) ToVMwareCbtContainerMappingInputPtrOutputWithContext(ctx context.Context) VMwareCbtContainerMappingInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtContainerMappingInputOutput).ToVMwareCbtContainerMappingInputPtrOutputWithContext(ctx)
}

// VMwareCbtContainerMappingInputPtrInput is an input type that accepts VMwareCbtContainerMappingInputArgs, VMwareCbtContainerMappingInputPtr and VMwareCbtContainerMappingInputPtrOutput values.
// You can construct a concrete instance of `VMwareCbtContainerMappingInputPtrInput` via:
//
//	        VMwareCbtContainerMappingInputArgs{...}
//
//	or:
//
//	        nil
type VMwareCbtContainerMappingInputPtrInput interface {
	pulumi.Input

	ToVMwareCbtContainerMappingInputPtrOutput() VMwareCbtContainerMappingInputPtrOutput
	ToVMwareCbtContainerMappingInputPtrOutputWithContext(context.Context) VMwareCbtContainerMappingInputPtrOutput
}

type vmwareCbtContainerMappingInputPtrType VMwareCbtContainerMappingInputArgs

func VMwareCbtContainerMappingInputPtr(v *VMwareCbtContainerMappingInputArgs) VMwareCbtContainerMappingInputPtrInput {
	return (*vmwareCbtContainerMappingInputPtrType)(v)
}

func (*vmwareCbtContainerMappingInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareCbtContainerMappingInput)(nil)).Elem()
}

func (i *vmwareCbtContainerMappingInputPtrType) ToVMwareCbtContainerMappingInputPtrOutput() VMwareCbtContainerMappingInputPtrOutput {
	return i.ToVMwareCbtContainerMappingInputPtrOutputWithContext(context.Background())
}

func (i *vmwareCbtContainerMappingInputPtrType) ToVMwareCbtContainerMappingInputPtrOutputWithContext(ctx context.Context) VMwareCbtContainerMappingInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtContainerMappingInputPtrOutput)
}

// VMwareCbt container mapping input.
type VMwareCbtContainerMappingInputOutput struct{ *pulumi.OutputState }

func (VMwareCbtContainerMappingInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtContainerMappingInput)(nil)).Elem()
}

func (o VMwareCbtContainerMappingInputOutput) ToVMwareCbtContainerMappingInputOutput() VMwareCbtContainerMappingInputOutput {
	return o
}

func (o VMwareCbtContainerMappingInputOutput) ToVMwareCbtContainerMappingInputOutputWithContext(ctx context.Context) VMwareCbtContainerMappingInputOutput {
	return o
}

func (o VMwareCbtContainerMappingInputOutput) ToVMwareCbtContainerMappingInputPtrOutput() VMwareCbtContainerMappingInputPtrOutput {
	return o.ToVMwareCbtContainerMappingInputPtrOutputWithContext(context.Background())
}

func (o VMwareCbtContainerMappingInputOutput) ToVMwareCbtContainerMappingInputPtrOutputWithContext(ctx context.Context) VMwareCbtContainerMappingInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareCbtContainerMappingInput) *VMwareCbtContainerMappingInput {
		return &v
	}).(VMwareCbtContainerMappingInputPtrOutput)
}

// The class type.
// Expected value is 'VMwareCbt'.
func (o VMwareCbtContainerMappingInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtContainerMappingInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The target key vault ARM Id.
func (o VMwareCbtContainerMappingInputOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtContainerMappingInput) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// The target key vault URL.
func (o VMwareCbtContainerMappingInputOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtContainerMappingInput) *string { return v.KeyVaultUri }).(pulumi.StringPtrOutput)
}

// The secret name of the service bus connection string.
func (o VMwareCbtContainerMappingInputOutput) ServiceBusConnectionStringSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtContainerMappingInput) *string { return v.ServiceBusConnectionStringSecretName }).(pulumi.StringPtrOutput)
}

// The storage account ARM Id.
func (o VMwareCbtContainerMappingInputOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtContainerMappingInput) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

// The secret name of the storage account.
func (o VMwareCbtContainerMappingInputOutput) StorageAccountSasSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtContainerMappingInput) *string { return v.StorageAccountSasSecretName }).(pulumi.StringPtrOutput)
}

// The target location.
func (o VMwareCbtContainerMappingInputOutput) TargetLocation() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtContainerMappingInput) string { return v.TargetLocation }).(pulumi.StringOutput)
}

type VMwareCbtContainerMappingInputPtrOutput struct{ *pulumi.OutputState }

func (VMwareCbtContainerMappingInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareCbtContainerMappingInput)(nil)).Elem()
}

func (o VMwareCbtContainerMappingInputPtrOutput) ToVMwareCbtContainerMappingInputPtrOutput() VMwareCbtContainerMappingInputPtrOutput {
	return o
}

func (o VMwareCbtContainerMappingInputPtrOutput) ToVMwareCbtContainerMappingInputPtrOutputWithContext(ctx context.Context) VMwareCbtContainerMappingInputPtrOutput {
	return o
}

func (o VMwareCbtContainerMappingInputPtrOutput) Elem() VMwareCbtContainerMappingInputOutput {
	return o.ApplyT(func(v *VMwareCbtContainerMappingInput) VMwareCbtContainerMappingInput {
		if v != nil {
			return *v
		}
		var ret VMwareCbtContainerMappingInput
		return ret
	}).(VMwareCbtContainerMappingInputOutput)
}

// The class type.
// Expected value is 'VMwareCbt'.
func (o VMwareCbtContainerMappingInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtContainerMappingInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The target key vault ARM Id.
func (o VMwareCbtContainerMappingInputPtrOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtContainerMappingInput) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultId
	}).(pulumi.StringPtrOutput)
}

// The target key vault URL.
func (o VMwareCbtContainerMappingInputPtrOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtContainerMappingInput) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultUri
	}).(pulumi.StringPtrOutput)
}

// The secret name of the service bus connection string.
func (o VMwareCbtContainerMappingInputPtrOutput) ServiceBusConnectionStringSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtContainerMappingInput) *string {
		if v == nil {
			return nil
		}
		return v.ServiceBusConnectionStringSecretName
	}).(pulumi.StringPtrOutput)
}

// The storage account ARM Id.
func (o VMwareCbtContainerMappingInputPtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtContainerMappingInput) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The secret name of the storage account.
func (o VMwareCbtContainerMappingInputPtrOutput) StorageAccountSasSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtContainerMappingInput) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountSasSecretName
	}).(pulumi.StringPtrOutput)
}

// The target location.
func (o VMwareCbtContainerMappingInputPtrOutput) TargetLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtContainerMappingInput) *string {
		if v == nil {
			return nil
		}
		return &v.TargetLocation
	}).(pulumi.StringPtrOutput)
}

// VMwareCbt disk input.
type VMwareCbtDiskInput struct {
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The disk Id.
	DiskId string `pulumi:"diskId"`
	// The disk type.
	DiskType *string `pulumi:"diskType"`
	// A value indicating whether the disk is the OS disk.
	IsOSDisk string `pulumi:"isOSDisk"`
	// The log storage account ARM Id.
	LogStorageAccountId string `pulumi:"logStorageAccountId"`
	// The key vault secret name of the log storage account.
	LogStorageAccountSasSecretName string `pulumi:"logStorageAccountSasSecretName"`
}

// VMwareCbtDiskInputInput is an input type that accepts VMwareCbtDiskInputArgs and VMwareCbtDiskInputOutput values.
// You can construct a concrete instance of `VMwareCbtDiskInputInput` via:
//
//	VMwareCbtDiskInputArgs{...}
type VMwareCbtDiskInputInput interface {
	pulumi.Input

	ToVMwareCbtDiskInputOutput() VMwareCbtDiskInputOutput
	ToVMwareCbtDiskInputOutputWithContext(context.Context) VMwareCbtDiskInputOutput
}

// VMwareCbt disk input.
type VMwareCbtDiskInputArgs struct {
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// The disk Id.
	DiskId pulumi.StringInput `pulumi:"diskId"`
	// The disk type.
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// A value indicating whether the disk is the OS disk.
	IsOSDisk pulumi.StringInput `pulumi:"isOSDisk"`
	// The log storage account ARM Id.
	LogStorageAccountId pulumi.StringInput `pulumi:"logStorageAccountId"`
	// The key vault secret name of the log storage account.
	LogStorageAccountSasSecretName pulumi.StringInput `pulumi:"logStorageAccountSasSecretName"`
}

func (VMwareCbtDiskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtDiskInput)(nil)).Elem()
}

func (i VMwareCbtDiskInputArgs) ToVMwareCbtDiskInputOutput() VMwareCbtDiskInputOutput {
	return i.ToVMwareCbtDiskInputOutputWithContext(context.Background())
}

func (i VMwareCbtDiskInputArgs) ToVMwareCbtDiskInputOutputWithContext(ctx context.Context) VMwareCbtDiskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtDiskInputOutput)
}

// VMwareCbtDiskInputArrayInput is an input type that accepts VMwareCbtDiskInputArray and VMwareCbtDiskInputArrayOutput values.
// You can construct a concrete instance of `VMwareCbtDiskInputArrayInput` via:
//
//	VMwareCbtDiskInputArray{ VMwareCbtDiskInputArgs{...} }
type VMwareCbtDiskInputArrayInput interface {
	pulumi.Input

	ToVMwareCbtDiskInputArrayOutput() VMwareCbtDiskInputArrayOutput
	ToVMwareCbtDiskInputArrayOutputWithContext(context.Context) VMwareCbtDiskInputArrayOutput
}

type VMwareCbtDiskInputArray []VMwareCbtDiskInputInput

func (VMwareCbtDiskInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareCbtDiskInput)(nil)).Elem()
}

func (i VMwareCbtDiskInputArray) ToVMwareCbtDiskInputArrayOutput() VMwareCbtDiskInputArrayOutput {
	return i.ToVMwareCbtDiskInputArrayOutputWithContext(context.Background())
}

func (i VMwareCbtDiskInputArray) ToVMwareCbtDiskInputArrayOutputWithContext(ctx context.Context) VMwareCbtDiskInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtDiskInputArrayOutput)
}

// VMwareCbt disk input.
type VMwareCbtDiskInputOutput struct{ *pulumi.OutputState }

func (VMwareCbtDiskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtDiskInput)(nil)).Elem()
}

func (o VMwareCbtDiskInputOutput) ToVMwareCbtDiskInputOutput() VMwareCbtDiskInputOutput {
	return o
}

func (o VMwareCbtDiskInputOutput) ToVMwareCbtDiskInputOutputWithContext(ctx context.Context) VMwareCbtDiskInputOutput {
	return o
}

// The DiskEncryptionSet ARM Id.
func (o VMwareCbtDiskInputOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtDiskInput) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The disk Id.
func (o VMwareCbtDiskInputOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtDiskInput) string { return v.DiskId }).(pulumi.StringOutput)
}

// The disk type.
func (o VMwareCbtDiskInputOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtDiskInput) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// A value indicating whether the disk is the OS disk.
func (o VMwareCbtDiskInputOutput) IsOSDisk() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtDiskInput) string { return v.IsOSDisk }).(pulumi.StringOutput)
}

// The log storage account ARM Id.
func (o VMwareCbtDiskInputOutput) LogStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtDiskInput) string { return v.LogStorageAccountId }).(pulumi.StringOutput)
}

// The key vault secret name of the log storage account.
func (o VMwareCbtDiskInputOutput) LogStorageAccountSasSecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtDiskInput) string { return v.LogStorageAccountSasSecretName }).(pulumi.StringOutput)
}

type VMwareCbtDiskInputArrayOutput struct{ *pulumi.OutputState }

func (VMwareCbtDiskInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareCbtDiskInput)(nil)).Elem()
}

func (o VMwareCbtDiskInputArrayOutput) ToVMwareCbtDiskInputArrayOutput() VMwareCbtDiskInputArrayOutput {
	return o
}

func (o VMwareCbtDiskInputArrayOutput) ToVMwareCbtDiskInputArrayOutputWithContext(ctx context.Context) VMwareCbtDiskInputArrayOutput {
	return o
}

func (o VMwareCbtDiskInputArrayOutput) Index(i pulumi.IntInput) VMwareCbtDiskInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareCbtDiskInput {
		return vs[0].([]VMwareCbtDiskInput)[vs[1].(int)]
	}).(VMwareCbtDiskInputOutput)
}

// VMwareCbt specific enable migration input.
type VMwareCbtEnableMigrationInput struct {
	// The confidential VM key vault Id for ADE installation.
	ConfidentialVmKeyVaultId *string `pulumi:"confidentialVmKeyVaultId"`
	// The data mover run as account Id.
	DataMoverRunAsAccountId string `pulumi:"dataMoverRunAsAccountId"`
	// The disks to include list.
	DisksToInclude []VMwareCbtDiskInput `pulumi:"disksToInclude"`
	// The class type.
	// Expected value is 'VMwareCbt'.
	InstanceType string `pulumi:"instanceType"`
	// License type.
	LicenseType *string `pulumi:"licenseType"`
	// A value indicating whether auto resync is to be done.
	PerformAutoResync *string `pulumi:"performAutoResync"`
	// A value indicating whether bulk SQL RP registration to be done.
	PerformSqlBulkRegistration *string `pulumi:"performSqlBulkRegistration"`
	// The tags for the seed disks.
	SeedDiskTags map[string]string `pulumi:"seedDiskTags"`
	// The snapshot run as account Id.
	SnapshotRunAsAccountId string `pulumi:"snapshotRunAsAccountId"`
	// The SQL Server license type.
	SqlServerLicenseType *string `pulumi:"sqlServerLicenseType"`
	// The target availability set ARM Id.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The target boot diagnostics storage account ARM Id.
	TargetBootDiagnosticsStorageAccountId *string `pulumi:"targetBootDiagnosticsStorageAccountId"`
	// The tags for the target disks.
	TargetDiskTags map[string]string `pulumi:"targetDiskTags"`
	// The target network ARM Id.
	TargetNetworkId string `pulumi:"targetNetworkId"`
	// The tags for the target NICs.
	TargetNicTags map[string]string `pulumi:"targetNicTags"`
	// The target proximity placement group ARM Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The target resource group ARM Id.
	TargetResourceGroupId string `pulumi:"targetResourceGroupId"`
	// The target subnet name.
	TargetSubnetName *string `pulumi:"targetSubnetName"`
	// The target VM name.
	TargetVmName *string `pulumi:"targetVmName"`
	// The target VM security profile.
	TargetVmSecurityProfile *VMwareCbtSecurityProfileProperties `pulumi:"targetVmSecurityProfile"`
	// The target VM size.
	TargetVmSize *string `pulumi:"targetVmSize"`
	// The target VM tags.
	TargetVmTags map[string]string `pulumi:"targetVmTags"`
	// The selected test network ARM Id.
	TestNetworkId *string `pulumi:"testNetworkId"`
	// The selected test subnet name.
	TestSubnetName *string `pulumi:"testSubnetName"`
	// The ARM Id of the VM discovered in VMware.
	VmwareMachineId string `pulumi:"vmwareMachineId"`
}

// VMwareCbtEnableMigrationInputInput is an input type that accepts VMwareCbtEnableMigrationInputArgs and VMwareCbtEnableMigrationInputOutput values.
// You can construct a concrete instance of `VMwareCbtEnableMigrationInputInput` via:
//
//	VMwareCbtEnableMigrationInputArgs{...}
type VMwareCbtEnableMigrationInputInput interface {
	pulumi.Input

	ToVMwareCbtEnableMigrationInputOutput() VMwareCbtEnableMigrationInputOutput
	ToVMwareCbtEnableMigrationInputOutputWithContext(context.Context) VMwareCbtEnableMigrationInputOutput
}

// VMwareCbt specific enable migration input.
type VMwareCbtEnableMigrationInputArgs struct {
	// The confidential VM key vault Id for ADE installation.
	ConfidentialVmKeyVaultId pulumi.StringPtrInput `pulumi:"confidentialVmKeyVaultId"`
	// The data mover run as account Id.
	DataMoverRunAsAccountId pulumi.StringInput `pulumi:"dataMoverRunAsAccountId"`
	// The disks to include list.
	DisksToInclude VMwareCbtDiskInputArrayInput `pulumi:"disksToInclude"`
	// The class type.
	// Expected value is 'VMwareCbt'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// License type.
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
	// A value indicating whether auto resync is to be done.
	PerformAutoResync pulumi.StringPtrInput `pulumi:"performAutoResync"`
	// A value indicating whether bulk SQL RP registration to be done.
	PerformSqlBulkRegistration pulumi.StringPtrInput `pulumi:"performSqlBulkRegistration"`
	// The tags for the seed disks.
	SeedDiskTags pulumi.StringMapInput `pulumi:"seedDiskTags"`
	// The snapshot run as account Id.
	SnapshotRunAsAccountId pulumi.StringInput `pulumi:"snapshotRunAsAccountId"`
	// The SQL Server license type.
	SqlServerLicenseType pulumi.StringPtrInput `pulumi:"sqlServerLicenseType"`
	// The target availability set ARM Id.
	TargetAvailabilitySetId pulumi.StringPtrInput `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone pulumi.StringPtrInput `pulumi:"targetAvailabilityZone"`
	// The target boot diagnostics storage account ARM Id.
	TargetBootDiagnosticsStorageAccountId pulumi.StringPtrInput `pulumi:"targetBootDiagnosticsStorageAccountId"`
	// The tags for the target disks.
	TargetDiskTags pulumi.StringMapInput `pulumi:"targetDiskTags"`
	// The target network ARM Id.
	TargetNetworkId pulumi.StringInput `pulumi:"targetNetworkId"`
	// The tags for the target NICs.
	TargetNicTags pulumi.StringMapInput `pulumi:"targetNicTags"`
	// The target proximity placement group ARM Id.
	TargetProximityPlacementGroupId pulumi.StringPtrInput `pulumi:"targetProximityPlacementGroupId"`
	// The target resource group ARM Id.
	TargetResourceGroupId pulumi.StringInput `pulumi:"targetResourceGroupId"`
	// The target subnet name.
	TargetSubnetName pulumi.StringPtrInput `pulumi:"targetSubnetName"`
	// The target VM name.
	TargetVmName pulumi.StringPtrInput `pulumi:"targetVmName"`
	// The target VM security profile.
	TargetVmSecurityProfile VMwareCbtSecurityProfilePropertiesPtrInput `pulumi:"targetVmSecurityProfile"`
	// The target VM size.
	TargetVmSize pulumi.StringPtrInput `pulumi:"targetVmSize"`
	// The target VM tags.
	TargetVmTags pulumi.StringMapInput `pulumi:"targetVmTags"`
	// The selected test network ARM Id.
	TestNetworkId pulumi.StringPtrInput `pulumi:"testNetworkId"`
	// The selected test subnet name.
	TestSubnetName pulumi.StringPtrInput `pulumi:"testSubnetName"`
	// The ARM Id of the VM discovered in VMware.
	VmwareMachineId pulumi.StringInput `pulumi:"vmwareMachineId"`
}

func (VMwareCbtEnableMigrationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtEnableMigrationInput)(nil)).Elem()
}

func (i VMwareCbtEnableMigrationInputArgs) ToVMwareCbtEnableMigrationInputOutput() VMwareCbtEnableMigrationInputOutput {
	return i.ToVMwareCbtEnableMigrationInputOutputWithContext(context.Background())
}

func (i VMwareCbtEnableMigrationInputArgs) ToVMwareCbtEnableMigrationInputOutputWithContext(ctx context.Context) VMwareCbtEnableMigrationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtEnableMigrationInputOutput)
}

// VMwareCbt specific enable migration input.
type VMwareCbtEnableMigrationInputOutput struct{ *pulumi.OutputState }

func (VMwareCbtEnableMigrationInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtEnableMigrationInput)(nil)).Elem()
}

func (o VMwareCbtEnableMigrationInputOutput) ToVMwareCbtEnableMigrationInputOutput() VMwareCbtEnableMigrationInputOutput {
	return o
}

func (o VMwareCbtEnableMigrationInputOutput) ToVMwareCbtEnableMigrationInputOutputWithContext(ctx context.Context) VMwareCbtEnableMigrationInputOutput {
	return o
}

// The confidential VM key vault Id for ADE installation.
func (o VMwareCbtEnableMigrationInputOutput) ConfidentialVmKeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.ConfidentialVmKeyVaultId }).(pulumi.StringPtrOutput)
}

// The data mover run as account Id.
func (o VMwareCbtEnableMigrationInputOutput) DataMoverRunAsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) string { return v.DataMoverRunAsAccountId }).(pulumi.StringOutput)
}

// The disks to include list.
func (o VMwareCbtEnableMigrationInputOutput) DisksToInclude() VMwareCbtDiskInputArrayOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) []VMwareCbtDiskInput { return v.DisksToInclude }).(VMwareCbtDiskInputArrayOutput)
}

// The class type.
// Expected value is 'VMwareCbt'.
func (o VMwareCbtEnableMigrationInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// License type.
func (o VMwareCbtEnableMigrationInputOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// A value indicating whether auto resync is to be done.
func (o VMwareCbtEnableMigrationInputOutput) PerformAutoResync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.PerformAutoResync }).(pulumi.StringPtrOutput)
}

// A value indicating whether bulk SQL RP registration to be done.
func (o VMwareCbtEnableMigrationInputOutput) PerformSqlBulkRegistration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.PerformSqlBulkRegistration }).(pulumi.StringPtrOutput)
}

// The tags for the seed disks.
func (o VMwareCbtEnableMigrationInputOutput) SeedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) map[string]string { return v.SeedDiskTags }).(pulumi.StringMapOutput)
}

// The snapshot run as account Id.
func (o VMwareCbtEnableMigrationInputOutput) SnapshotRunAsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) string { return v.SnapshotRunAsAccountId }).(pulumi.StringOutput)
}

// The SQL Server license type.
func (o VMwareCbtEnableMigrationInputOutput) SqlServerLicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.SqlServerLicenseType }).(pulumi.StringPtrOutput)
}

// The target availability set ARM Id.
func (o VMwareCbtEnableMigrationInputOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.TargetAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// The target availability zone.
func (o VMwareCbtEnableMigrationInputOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.TargetAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The target boot diagnostics storage account ARM Id.
func (o VMwareCbtEnableMigrationInputOutput) TargetBootDiagnosticsStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.TargetBootDiagnosticsStorageAccountId }).(pulumi.StringPtrOutput)
}

// The tags for the target disks.
func (o VMwareCbtEnableMigrationInputOutput) TargetDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) map[string]string { return v.TargetDiskTags }).(pulumi.StringMapOutput)
}

// The target network ARM Id.
func (o VMwareCbtEnableMigrationInputOutput) TargetNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) string { return v.TargetNetworkId }).(pulumi.StringOutput)
}

// The tags for the target NICs.
func (o VMwareCbtEnableMigrationInputOutput) TargetNicTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) map[string]string { return v.TargetNicTags }).(pulumi.StringMapOutput)
}

// The target proximity placement group ARM Id.
func (o VMwareCbtEnableMigrationInputOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.TargetProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// The target resource group ARM Id.
func (o VMwareCbtEnableMigrationInputOutput) TargetResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) string { return v.TargetResourceGroupId }).(pulumi.StringOutput)
}

// The target subnet name.
func (o VMwareCbtEnableMigrationInputOutput) TargetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.TargetSubnetName }).(pulumi.StringPtrOutput)
}

// The target VM name.
func (o VMwareCbtEnableMigrationInputOutput) TargetVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.TargetVmName }).(pulumi.StringPtrOutput)
}

// The target VM security profile.
func (o VMwareCbtEnableMigrationInputOutput) TargetVmSecurityProfile() VMwareCbtSecurityProfilePropertiesPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *VMwareCbtSecurityProfileProperties {
		return v.TargetVmSecurityProfile
	}).(VMwareCbtSecurityProfilePropertiesPtrOutput)
}

// The target VM size.
func (o VMwareCbtEnableMigrationInputOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.TargetVmSize }).(pulumi.StringPtrOutput)
}

// The target VM tags.
func (o VMwareCbtEnableMigrationInputOutput) TargetVmTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) map[string]string { return v.TargetVmTags }).(pulumi.StringMapOutput)
}

// The selected test network ARM Id.
func (o VMwareCbtEnableMigrationInputOutput) TestNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.TestNetworkId }).(pulumi.StringPtrOutput)
}

// The selected test subnet name.
func (o VMwareCbtEnableMigrationInputOutput) TestSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) *string { return v.TestSubnetName }).(pulumi.StringPtrOutput)
}

// The ARM Id of the VM discovered in VMware.
func (o VMwareCbtEnableMigrationInputOutput) VmwareMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtEnableMigrationInput) string { return v.VmwareMachineId }).(pulumi.StringOutput)
}

// VMwareCbt provider specific settings.
type VMwareCbtMigrationDetailsResponse struct {
	// A value indicating the appliance monitoring details.
	ApplianceMonitoringDetails ApplianceMonitoringDetailsResponse `pulumi:"applianceMonitoringDetails"`
	// The confidential VM key vault Id for ADE installation.
	ConfidentialVmKeyVaultId *string `pulumi:"confidentialVmKeyVaultId"`
	// The data mover run as account Id.
	DataMoverRunAsAccountId string `pulumi:"dataMoverRunAsAccountId"`
	// The delta sync progress percentage.
	DeltaSyncProgressPercentage int `pulumi:"deltaSyncProgressPercentage"`
	// The delta sync retry count.
	DeltaSyncRetryCount float64 `pulumi:"deltaSyncRetryCount"`
	// The firmware type.
	FirmwareType string `pulumi:"firmwareType"`
	// A value indicating the gateway operation details.
	GatewayOperationDetails GatewayOperationDetailsResponse `pulumi:"gatewayOperationDetails"`
	// The initial seeding progress percentage.
	InitialSeedingProgressPercentage int `pulumi:"initialSeedingProgressPercentage"`
	// The initial seeding retry count.
	InitialSeedingRetryCount float64 `pulumi:"initialSeedingRetryCount"`
	// Gets the instance type.
	// Expected value is 'VMwareCbt'.
	InstanceType string `pulumi:"instanceType"`
	// A value indicating whether checksum resync cycle is in progress.
	IsCheckSumResyncCycle string `pulumi:"isCheckSumResyncCycle"`
	// The last recovery point Id.
	LastRecoveryPointId string `pulumi:"lastRecoveryPointId"`
	// The last recovery point received time.
	LastRecoveryPointReceived string `pulumi:"lastRecoveryPointReceived"`
	// License Type of the VM to be used.
	LicenseType *string `pulumi:"licenseType"`
	// The migration progress percentage.
	MigrationProgressPercentage int `pulumi:"migrationProgressPercentage"`
	// The recovery point Id to which the VM was migrated.
	MigrationRecoveryPointId string `pulumi:"migrationRecoveryPointId"`
	// A value indicating the SRS operation name.
	OperationName string `pulumi:"operationName"`
	// The name of the OS on the VM.
	OsName string `pulumi:"osName"`
	// The type of the OS on the VM.
	OsType string `pulumi:"osType"`
	// A value indicating whether auto resync is to be done.
	PerformAutoResync *string `pulumi:"performAutoResync"`
	// The list of protected disks.
	ProtectedDisks []VMwareCbtProtectedDiskDetailsResponse `pulumi:"protectedDisks"`
	// The resume progress percentage.
	ResumeProgressPercentage int `pulumi:"resumeProgressPercentage"`
	// The resume retry count.
	ResumeRetryCount float64 `pulumi:"resumeRetryCount"`
	// The resync progress percentage.
	ResyncProgressPercentage int `pulumi:"resyncProgressPercentage"`
	// A value indicating whether resync is required.
	ResyncRequired string `pulumi:"resyncRequired"`
	// The resync retry count.
	ResyncRetryCount float64 `pulumi:"resyncRetryCount"`
	// The resync state.
	ResyncState string `pulumi:"resyncState"`
	// The tags for the seed disks.
	SeedDiskTags map[string]string `pulumi:"seedDiskTags"`
	// The snapshot run as account Id.
	SnapshotRunAsAccountId string `pulumi:"snapshotRunAsAccountId"`
	// The SQL Server license type.
	SqlServerLicenseType *string `pulumi:"sqlServerLicenseType"`
	// The replication storage account ARM Id. This is applicable only for the blob based replication test hook.
	StorageAccountId string `pulumi:"storageAccountId"`
	// A value indicating the inplace OS Upgrade version.
	SupportedOSVersions []string `pulumi:"supportedOSVersions"`
	// The target availability set Id.
	TargetAvailabilitySetId *string `pulumi:"targetAvailabilitySetId"`
	// The target availability zone.
	TargetAvailabilityZone *string `pulumi:"targetAvailabilityZone"`
	// The target boot diagnostics storage account ARM Id.
	TargetBootDiagnosticsStorageAccountId *string `pulumi:"targetBootDiagnosticsStorageAccountId"`
	// The tags for the target disks.
	TargetDiskTags map[string]string `pulumi:"targetDiskTags"`
	// The target generation.
	TargetGeneration string `pulumi:"targetGeneration"`
	// The target location.
	TargetLocation string `pulumi:"targetLocation"`
	// The target network Id.
	TargetNetworkId *string `pulumi:"targetNetworkId"`
	// The tags for the target NICs.
	TargetNicTags map[string]string `pulumi:"targetNicTags"`
	// The target proximity placement group Id.
	TargetProximityPlacementGroupId *string `pulumi:"targetProximityPlacementGroupId"`
	// The target resource group Id.
	TargetResourceGroupId *string `pulumi:"targetResourceGroupId"`
	// Target VM name.
	TargetVmName *string `pulumi:"targetVmName"`
	// The target VM security profile.
	TargetVmSecurityProfile *VMwareCbtSecurityProfilePropertiesResponse `pulumi:"targetVmSecurityProfile"`
	// The target VM size.
	TargetVmSize *string `pulumi:"targetVmSize"`
	// The target VM tags.
	TargetVmTags map[string]string `pulumi:"targetVmTags"`
	// The test network Id.
	TestNetworkId *string `pulumi:"testNetworkId"`
	// The network details.
	VmNics []VMwareCbtNicDetailsResponse `pulumi:"vmNics"`
	// The ARM Id of the VM discovered in VMware.
	VmwareMachineId string `pulumi:"vmwareMachineId"`
}

// VMwareCbt provider specific settings.
type VMwareCbtMigrationDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareCbtMigrationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtMigrationDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtMigrationDetailsResponseOutput) ToVMwareCbtMigrationDetailsResponseOutput() VMwareCbtMigrationDetailsResponseOutput {
	return o
}

func (o VMwareCbtMigrationDetailsResponseOutput) ToVMwareCbtMigrationDetailsResponseOutputWithContext(ctx context.Context) VMwareCbtMigrationDetailsResponseOutput {
	return o
}

// A value indicating the appliance monitoring details.
func (o VMwareCbtMigrationDetailsResponseOutput) ApplianceMonitoringDetails() ApplianceMonitoringDetailsResponseOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) ApplianceMonitoringDetailsResponse {
		return v.ApplianceMonitoringDetails
	}).(ApplianceMonitoringDetailsResponseOutput)
}

// The confidential VM key vault Id for ADE installation.
func (o VMwareCbtMigrationDetailsResponseOutput) ConfidentialVmKeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.ConfidentialVmKeyVaultId }).(pulumi.StringPtrOutput)
}

// The data mover run as account Id.
func (o VMwareCbtMigrationDetailsResponseOutput) DataMoverRunAsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.DataMoverRunAsAccountId }).(pulumi.StringOutput)
}

// The delta sync progress percentage.
func (o VMwareCbtMigrationDetailsResponseOutput) DeltaSyncProgressPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) int { return v.DeltaSyncProgressPercentage }).(pulumi.IntOutput)
}

// The delta sync retry count.
func (o VMwareCbtMigrationDetailsResponseOutput) DeltaSyncRetryCount() pulumi.Float64Output {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) float64 { return v.DeltaSyncRetryCount }).(pulumi.Float64Output)
}

// The firmware type.
func (o VMwareCbtMigrationDetailsResponseOutput) FirmwareType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.FirmwareType }).(pulumi.StringOutput)
}

// A value indicating the gateway operation details.
func (o VMwareCbtMigrationDetailsResponseOutput) GatewayOperationDetails() GatewayOperationDetailsResponseOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) GatewayOperationDetailsResponse {
		return v.GatewayOperationDetails
	}).(GatewayOperationDetailsResponseOutput)
}

// The initial seeding progress percentage.
func (o VMwareCbtMigrationDetailsResponseOutput) InitialSeedingProgressPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) int { return v.InitialSeedingProgressPercentage }).(pulumi.IntOutput)
}

// The initial seeding retry count.
func (o VMwareCbtMigrationDetailsResponseOutput) InitialSeedingRetryCount() pulumi.Float64Output {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) float64 { return v.InitialSeedingRetryCount }).(pulumi.Float64Output)
}

// Gets the instance type.
// Expected value is 'VMwareCbt'.
func (o VMwareCbtMigrationDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A value indicating whether checksum resync cycle is in progress.
func (o VMwareCbtMigrationDetailsResponseOutput) IsCheckSumResyncCycle() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.IsCheckSumResyncCycle }).(pulumi.StringOutput)
}

// The last recovery point Id.
func (o VMwareCbtMigrationDetailsResponseOutput) LastRecoveryPointId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.LastRecoveryPointId }).(pulumi.StringOutput)
}

// The last recovery point received time.
func (o VMwareCbtMigrationDetailsResponseOutput) LastRecoveryPointReceived() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.LastRecoveryPointReceived }).(pulumi.StringOutput)
}

// License Type of the VM to be used.
func (o VMwareCbtMigrationDetailsResponseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

// The migration progress percentage.
func (o VMwareCbtMigrationDetailsResponseOutput) MigrationProgressPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) int { return v.MigrationProgressPercentage }).(pulumi.IntOutput)
}

// The recovery point Id to which the VM was migrated.
func (o VMwareCbtMigrationDetailsResponseOutput) MigrationRecoveryPointId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.MigrationRecoveryPointId }).(pulumi.StringOutput)
}

// A value indicating the SRS operation name.
func (o VMwareCbtMigrationDetailsResponseOutput) OperationName() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.OperationName }).(pulumi.StringOutput)
}

// The name of the OS on the VM.
func (o VMwareCbtMigrationDetailsResponseOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.OsName }).(pulumi.StringOutput)
}

// The type of the OS on the VM.
func (o VMwareCbtMigrationDetailsResponseOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.OsType }).(pulumi.StringOutput)
}

// A value indicating whether auto resync is to be done.
func (o VMwareCbtMigrationDetailsResponseOutput) PerformAutoResync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.PerformAutoResync }).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o VMwareCbtMigrationDetailsResponseOutput) ProtectedDisks() VMwareCbtProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) []VMwareCbtProtectedDiskDetailsResponse {
		return v.ProtectedDisks
	}).(VMwareCbtProtectedDiskDetailsResponseArrayOutput)
}

// The resume progress percentage.
func (o VMwareCbtMigrationDetailsResponseOutput) ResumeProgressPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) int { return v.ResumeProgressPercentage }).(pulumi.IntOutput)
}

// The resume retry count.
func (o VMwareCbtMigrationDetailsResponseOutput) ResumeRetryCount() pulumi.Float64Output {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) float64 { return v.ResumeRetryCount }).(pulumi.Float64Output)
}

// The resync progress percentage.
func (o VMwareCbtMigrationDetailsResponseOutput) ResyncProgressPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) int { return v.ResyncProgressPercentage }).(pulumi.IntOutput)
}

// A value indicating whether resync is required.
func (o VMwareCbtMigrationDetailsResponseOutput) ResyncRequired() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.ResyncRequired }).(pulumi.StringOutput)
}

// The resync retry count.
func (o VMwareCbtMigrationDetailsResponseOutput) ResyncRetryCount() pulumi.Float64Output {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) float64 { return v.ResyncRetryCount }).(pulumi.Float64Output)
}

// The resync state.
func (o VMwareCbtMigrationDetailsResponseOutput) ResyncState() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.ResyncState }).(pulumi.StringOutput)
}

// The tags for the seed disks.
func (o VMwareCbtMigrationDetailsResponseOutput) SeedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) map[string]string { return v.SeedDiskTags }).(pulumi.StringMapOutput)
}

// The snapshot run as account Id.
func (o VMwareCbtMigrationDetailsResponseOutput) SnapshotRunAsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.SnapshotRunAsAccountId }).(pulumi.StringOutput)
}

// The SQL Server license type.
func (o VMwareCbtMigrationDetailsResponseOutput) SqlServerLicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.SqlServerLicenseType }).(pulumi.StringPtrOutput)
}

// The replication storage account ARM Id. This is applicable only for the blob based replication test hook.
func (o VMwareCbtMigrationDetailsResponseOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

// A value indicating the inplace OS Upgrade version.
func (o VMwareCbtMigrationDetailsResponseOutput) SupportedOSVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) []string { return v.SupportedOSVersions }).(pulumi.StringArrayOutput)
}

// The target availability set Id.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetAvailabilitySetId }).(pulumi.StringPtrOutput)
}

// The target availability zone.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The target boot diagnostics storage account ARM Id.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetBootDiagnosticsStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetBootDiagnosticsStorageAccountId }).(pulumi.StringPtrOutput)
}

// The tags for the target disks.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) map[string]string { return v.TargetDiskTags }).(pulumi.StringMapOutput)
}

// The target generation.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetGeneration() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.TargetGeneration }).(pulumi.StringOutput)
}

// The target location.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetLocation() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.TargetLocation }).(pulumi.StringOutput)
}

// The target network Id.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetNetworkId }).(pulumi.StringPtrOutput)
}

// The tags for the target NICs.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetNicTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) map[string]string { return v.TargetNicTags }).(pulumi.StringMapOutput)
}

// The target proximity placement group Id.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// The target resource group Id.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetResourceGroupId }).(pulumi.StringPtrOutput)
}

// Target VM name.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetVmName }).(pulumi.StringPtrOutput)
}

// The target VM security profile.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetVmSecurityProfile() VMwareCbtSecurityProfilePropertiesResponsePtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *VMwareCbtSecurityProfilePropertiesResponse {
		return v.TargetVmSecurityProfile
	}).(VMwareCbtSecurityProfilePropertiesResponsePtrOutput)
}

// The target VM size.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TargetVmSize }).(pulumi.StringPtrOutput)
}

// The target VM tags.
func (o VMwareCbtMigrationDetailsResponseOutput) TargetVmTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) map[string]string { return v.TargetVmTags }).(pulumi.StringMapOutput)
}

// The test network Id.
func (o VMwareCbtMigrationDetailsResponseOutput) TestNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) *string { return v.TestNetworkId }).(pulumi.StringPtrOutput)
}

// The network details.
func (o VMwareCbtMigrationDetailsResponseOutput) VmNics() VMwareCbtNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) []VMwareCbtNicDetailsResponse { return v.VmNics }).(VMwareCbtNicDetailsResponseArrayOutput)
}

// The ARM Id of the VM discovered in VMware.
func (o VMwareCbtMigrationDetailsResponseOutput) VmwareMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtMigrationDetailsResponse) string { return v.VmwareMachineId }).(pulumi.StringOutput)
}

type VMwareCbtMigrationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (VMwareCbtMigrationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareCbtMigrationDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtMigrationDetailsResponsePtrOutput) ToVMwareCbtMigrationDetailsResponsePtrOutput() VMwareCbtMigrationDetailsResponsePtrOutput {
	return o
}

func (o VMwareCbtMigrationDetailsResponsePtrOutput) ToVMwareCbtMigrationDetailsResponsePtrOutputWithContext(ctx context.Context) VMwareCbtMigrationDetailsResponsePtrOutput {
	return o
}

func (o VMwareCbtMigrationDetailsResponsePtrOutput) Elem() VMwareCbtMigrationDetailsResponseOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) VMwareCbtMigrationDetailsResponse {
		if v != nil {
			return *v
		}
		var ret VMwareCbtMigrationDetailsResponse
		return ret
	}).(VMwareCbtMigrationDetailsResponseOutput)
}

// A value indicating the appliance monitoring details.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) ApplianceMonitoringDetails() ApplianceMonitoringDetailsResponsePtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *ApplianceMonitoringDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.ApplianceMonitoringDetails
	}).(ApplianceMonitoringDetailsResponsePtrOutput)
}

// The confidential VM key vault Id for ADE installation.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) ConfidentialVmKeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConfidentialVmKeyVaultId
	}).(pulumi.StringPtrOutput)
}

// The data mover run as account Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) DataMoverRunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataMoverRunAsAccountId
	}).(pulumi.StringPtrOutput)
}

// The delta sync progress percentage.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) DeltaSyncProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.DeltaSyncProgressPercentage
	}).(pulumi.IntPtrOutput)
}

// The delta sync retry count.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) DeltaSyncRetryCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.DeltaSyncRetryCount
	}).(pulumi.Float64PtrOutput)
}

// The firmware type.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) FirmwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FirmwareType
	}).(pulumi.StringPtrOutput)
}

// A value indicating the gateway operation details.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) GatewayOperationDetails() GatewayOperationDetailsResponsePtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *GatewayOperationDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.GatewayOperationDetails
	}).(GatewayOperationDetailsResponsePtrOutput)
}

// The initial seeding progress percentage.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) InitialSeedingProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.InitialSeedingProgressPercentage
	}).(pulumi.IntPtrOutput)
}

// The initial seeding retry count.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) InitialSeedingRetryCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.InitialSeedingRetryCount
	}).(pulumi.Float64PtrOutput)
}

// Gets the instance type.
// Expected value is 'VMwareCbt'.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether checksum resync cycle is in progress.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) IsCheckSumResyncCycle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IsCheckSumResyncCycle
	}).(pulumi.StringPtrOutput)
}

// The last recovery point Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) LastRecoveryPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastRecoveryPointId
	}).(pulumi.StringPtrOutput)
}

// The last recovery point received time.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) LastRecoveryPointReceived() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastRecoveryPointReceived
	}).(pulumi.StringPtrOutput)
}

// License Type of the VM to be used.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LicenseType
	}).(pulumi.StringPtrOutput)
}

// The migration progress percentage.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) MigrationProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MigrationProgressPercentage
	}).(pulumi.IntPtrOutput)
}

// The recovery point Id to which the VM was migrated.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) MigrationRecoveryPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MigrationRecoveryPointId
	}).(pulumi.StringPtrOutput)
}

// A value indicating the SRS operation name.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) OperationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OperationName
	}).(pulumi.StringPtrOutput)
}

// The name of the OS on the VM.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) OsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OsName
	}).(pulumi.StringPtrOutput)
}

// The type of the OS on the VM.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OsType
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether auto resync is to be done.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) PerformAutoResync() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PerformAutoResync
	}).(pulumi.StringPtrOutput)
}

// The list of protected disks.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) ProtectedDisks() VMwareCbtProtectedDiskDetailsResponseArrayOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) []VMwareCbtProtectedDiskDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProtectedDisks
	}).(VMwareCbtProtectedDiskDetailsResponseArrayOutput)
}

// The resume progress percentage.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) ResumeProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ResumeProgressPercentage
	}).(pulumi.IntPtrOutput)
}

// The resume retry count.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) ResumeRetryCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.ResumeRetryCount
	}).(pulumi.Float64PtrOutput)
}

// The resync progress percentage.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) ResyncProgressPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ResyncProgressPercentage
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether resync is required.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) ResyncRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResyncRequired
	}).(pulumi.StringPtrOutput)
}

// The resync retry count.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) ResyncRetryCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.ResyncRetryCount
	}).(pulumi.Float64PtrOutput)
}

// The resync state.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) ResyncState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResyncState
	}).(pulumi.StringPtrOutput)
}

// The tags for the seed disks.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) SeedDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.SeedDiskTags
	}).(pulumi.StringMapOutput)
}

// The snapshot run as account Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) SnapshotRunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SnapshotRunAsAccountId
	}).(pulumi.StringPtrOutput)
}

// The SQL Server license type.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) SqlServerLicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SqlServerLicenseType
	}).(pulumi.StringPtrOutput)
}

// The replication storage account ARM Id. This is applicable only for the blob based replication test hook.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// A value indicating the inplace OS Upgrade version.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) SupportedOSVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.SupportedOSVersions
	}).(pulumi.StringArrayOutput)
}

// The target availability set Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetAvailabilitySetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetAvailabilitySetId
	}).(pulumi.StringPtrOutput)
}

// The target availability zone.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetAvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// The target boot diagnostics storage account ARM Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetBootDiagnosticsStorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetBootDiagnosticsStorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The tags for the target disks.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetDiskTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetDiskTags
	}).(pulumi.StringMapOutput)
}

// The target generation.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetGeneration
	}).(pulumi.StringPtrOutput)
}

// The target location.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetLocation
	}).(pulumi.StringPtrOutput)
}

// The target network Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetNetworkId
	}).(pulumi.StringPtrOutput)
}

// The tags for the target NICs.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetNicTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetNicTags
	}).(pulumi.StringMapOutput)
}

// The target proximity placement group Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetProximityPlacementGroupId
	}).(pulumi.StringPtrOutput)
}

// The target resource group Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetResourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetResourceGroupId
	}).(pulumi.StringPtrOutput)
}

// Target VM name.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetVmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetVmName
	}).(pulumi.StringPtrOutput)
}

// The target VM security profile.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetVmSecurityProfile() VMwareCbtSecurityProfilePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *VMwareCbtSecurityProfilePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.TargetVmSecurityProfile
	}).(VMwareCbtSecurityProfilePropertiesResponsePtrOutput)
}

// The target VM size.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetVmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetVmSize
	}).(pulumi.StringPtrOutput)
}

// The target VM tags.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TargetVmTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.TargetVmTags
	}).(pulumi.StringMapOutput)
}

// The test network Id.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) TestNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TestNetworkId
	}).(pulumi.StringPtrOutput)
}

// The network details.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) VmNics() VMwareCbtNicDetailsResponseArrayOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) []VMwareCbtNicDetailsResponse {
		if v == nil {
			return nil
		}
		return v.VmNics
	}).(VMwareCbtNicDetailsResponseArrayOutput)
}

// The ARM Id of the VM discovered in VMware.
func (o VMwareCbtMigrationDetailsResponsePtrOutput) VmwareMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtMigrationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmwareMachineId
	}).(pulumi.StringPtrOutput)
}

// VMwareCbt NIC details.
type VMwareCbtNicDetailsResponse struct {
	// A value indicating whether this is the primary NIC.
	IsPrimaryNic *string `pulumi:"isPrimaryNic"`
	// A value indicating whether this NIC is selected for migration.
	IsSelectedForMigration *string `pulumi:"isSelectedForMigration"`
	// The NIC Id.
	NicId string `pulumi:"nicId"`
	// The source IP address.
	SourceIPAddress string `pulumi:"sourceIPAddress"`
	// The source IP address type.
	SourceIPAddressType string `pulumi:"sourceIPAddressType"`
	// Source network Id.
	SourceNetworkId string `pulumi:"sourceNetworkId"`
	// The target IP address.
	TargetIPAddress *string `pulumi:"targetIPAddress"`
	// The target IP address type.
	TargetIPAddressType *string `pulumi:"targetIPAddressType"`
	// Target NIC name.
	TargetNicName *string `pulumi:"targetNicName"`
	// Target subnet name.
	TargetSubnetName *string `pulumi:"targetSubnetName"`
	// The test IP address.
	TestIPAddress *string `pulumi:"testIPAddress"`
	// The test IP address type.
	TestIPAddressType *string `pulumi:"testIPAddressType"`
	// Source network Id.
	TestNetworkId *string `pulumi:"testNetworkId"`
	// Test subnet name.
	TestSubnetName *string `pulumi:"testSubnetName"`
}

// VMwareCbt NIC details.
type VMwareCbtNicDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareCbtNicDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtNicDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtNicDetailsResponseOutput) ToVMwareCbtNicDetailsResponseOutput() VMwareCbtNicDetailsResponseOutput {
	return o
}

func (o VMwareCbtNicDetailsResponseOutput) ToVMwareCbtNicDetailsResponseOutputWithContext(ctx context.Context) VMwareCbtNicDetailsResponseOutput {
	return o
}

// A value indicating whether this is the primary NIC.
func (o VMwareCbtNicDetailsResponseOutput) IsPrimaryNic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.IsPrimaryNic }).(pulumi.StringPtrOutput)
}

// A value indicating whether this NIC is selected for migration.
func (o VMwareCbtNicDetailsResponseOutput) IsSelectedForMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.IsSelectedForMigration }).(pulumi.StringPtrOutput)
}

// The NIC Id.
func (o VMwareCbtNicDetailsResponseOutput) NicId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) string { return v.NicId }).(pulumi.StringOutput)
}

// The source IP address.
func (o VMwareCbtNicDetailsResponseOutput) SourceIPAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) string { return v.SourceIPAddress }).(pulumi.StringOutput)
}

// The source IP address type.
func (o VMwareCbtNicDetailsResponseOutput) SourceIPAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) string { return v.SourceIPAddressType }).(pulumi.StringOutput)
}

// Source network Id.
func (o VMwareCbtNicDetailsResponseOutput) SourceNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) string { return v.SourceNetworkId }).(pulumi.StringOutput)
}

// The target IP address.
func (o VMwareCbtNicDetailsResponseOutput) TargetIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.TargetIPAddress }).(pulumi.StringPtrOutput)
}

// The target IP address type.
func (o VMwareCbtNicDetailsResponseOutput) TargetIPAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.TargetIPAddressType }).(pulumi.StringPtrOutput)
}

// Target NIC name.
func (o VMwareCbtNicDetailsResponseOutput) TargetNicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.TargetNicName }).(pulumi.StringPtrOutput)
}

// Target subnet name.
func (o VMwareCbtNicDetailsResponseOutput) TargetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.TargetSubnetName }).(pulumi.StringPtrOutput)
}

// The test IP address.
func (o VMwareCbtNicDetailsResponseOutput) TestIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.TestIPAddress }).(pulumi.StringPtrOutput)
}

// The test IP address type.
func (o VMwareCbtNicDetailsResponseOutput) TestIPAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.TestIPAddressType }).(pulumi.StringPtrOutput)
}

// Source network Id.
func (o VMwareCbtNicDetailsResponseOutput) TestNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.TestNetworkId }).(pulumi.StringPtrOutput)
}

// Test subnet name.
func (o VMwareCbtNicDetailsResponseOutput) TestSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtNicDetailsResponse) *string { return v.TestSubnetName }).(pulumi.StringPtrOutput)
}

type VMwareCbtNicDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (VMwareCbtNicDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareCbtNicDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtNicDetailsResponseArrayOutput) ToVMwareCbtNicDetailsResponseArrayOutput() VMwareCbtNicDetailsResponseArrayOutput {
	return o
}

func (o VMwareCbtNicDetailsResponseArrayOutput) ToVMwareCbtNicDetailsResponseArrayOutputWithContext(ctx context.Context) VMwareCbtNicDetailsResponseArrayOutput {
	return o
}

func (o VMwareCbtNicDetailsResponseArrayOutput) Index(i pulumi.IntInput) VMwareCbtNicDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareCbtNicDetailsResponse {
		return vs[0].([]VMwareCbtNicDetailsResponse)[vs[1].(int)]
	}).(VMwareCbtNicDetailsResponseOutput)
}

// VMware Cbt policy creation input.
type VMwareCbtPolicyCreationInput struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	// Expected value is 'VMwareCbt'.
	InstanceType string `pulumi:"instanceType"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistoryInMinutes *int `pulumi:"recoveryPointHistoryInMinutes"`
}

// VMwareCbtPolicyCreationInputInput is an input type that accepts VMwareCbtPolicyCreationInputArgs and VMwareCbtPolicyCreationInputOutput values.
// You can construct a concrete instance of `VMwareCbtPolicyCreationInputInput` via:
//
//	VMwareCbtPolicyCreationInputArgs{...}
type VMwareCbtPolicyCreationInputInput interface {
	pulumi.Input

	ToVMwareCbtPolicyCreationInputOutput() VMwareCbtPolicyCreationInputOutput
	ToVMwareCbtPolicyCreationInputOutputWithContext(context.Context) VMwareCbtPolicyCreationInputOutput
}

// VMware Cbt policy creation input.
type VMwareCbtPolicyCreationInputArgs struct {
	// The app consistent snapshot frequency (in minutes).
	AppConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency (in minutes).
	CrashConsistentFrequencyInMinutes pulumi.IntPtrInput `pulumi:"crashConsistentFrequencyInMinutes"`
	// The class type.
	// Expected value is 'VMwareCbt'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistoryInMinutes pulumi.IntPtrInput `pulumi:"recoveryPointHistoryInMinutes"`
}

func (VMwareCbtPolicyCreationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtPolicyCreationInput)(nil)).Elem()
}

func (i VMwareCbtPolicyCreationInputArgs) ToVMwareCbtPolicyCreationInputOutput() VMwareCbtPolicyCreationInputOutput {
	return i.ToVMwareCbtPolicyCreationInputOutputWithContext(context.Background())
}

func (i VMwareCbtPolicyCreationInputArgs) ToVMwareCbtPolicyCreationInputOutputWithContext(ctx context.Context) VMwareCbtPolicyCreationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtPolicyCreationInputOutput)
}

func (i VMwareCbtPolicyCreationInputArgs) ToVMwareCbtPolicyCreationInputPtrOutput() VMwareCbtPolicyCreationInputPtrOutput {
	return i.ToVMwareCbtPolicyCreationInputPtrOutputWithContext(context.Background())
}

func (i VMwareCbtPolicyCreationInputArgs) ToVMwareCbtPolicyCreationInputPtrOutputWithContext(ctx context.Context) VMwareCbtPolicyCreationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtPolicyCreationInputOutput).ToVMwareCbtPolicyCreationInputPtrOutputWithContext(ctx)
}

// VMwareCbtPolicyCreationInputPtrInput is an input type that accepts VMwareCbtPolicyCreationInputArgs, VMwareCbtPolicyCreationInputPtr and VMwareCbtPolicyCreationInputPtrOutput values.
// You can construct a concrete instance of `VMwareCbtPolicyCreationInputPtrInput` via:
//
//	        VMwareCbtPolicyCreationInputArgs{...}
//
//	or:
//
//	        nil
type VMwareCbtPolicyCreationInputPtrInput interface {
	pulumi.Input

	ToVMwareCbtPolicyCreationInputPtrOutput() VMwareCbtPolicyCreationInputPtrOutput
	ToVMwareCbtPolicyCreationInputPtrOutputWithContext(context.Context) VMwareCbtPolicyCreationInputPtrOutput
}

type vmwareCbtPolicyCreationInputPtrType VMwareCbtPolicyCreationInputArgs

func VMwareCbtPolicyCreationInputPtr(v *VMwareCbtPolicyCreationInputArgs) VMwareCbtPolicyCreationInputPtrInput {
	return (*vmwareCbtPolicyCreationInputPtrType)(v)
}

func (*vmwareCbtPolicyCreationInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareCbtPolicyCreationInput)(nil)).Elem()
}

func (i *vmwareCbtPolicyCreationInputPtrType) ToVMwareCbtPolicyCreationInputPtrOutput() VMwareCbtPolicyCreationInputPtrOutput {
	return i.ToVMwareCbtPolicyCreationInputPtrOutputWithContext(context.Background())
}

func (i *vmwareCbtPolicyCreationInputPtrType) ToVMwareCbtPolicyCreationInputPtrOutputWithContext(ctx context.Context) VMwareCbtPolicyCreationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtPolicyCreationInputPtrOutput)
}

// VMware Cbt policy creation input.
type VMwareCbtPolicyCreationInputOutput struct{ *pulumi.OutputState }

func (VMwareCbtPolicyCreationInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtPolicyCreationInput)(nil)).Elem()
}

func (o VMwareCbtPolicyCreationInputOutput) ToVMwareCbtPolicyCreationInputOutput() VMwareCbtPolicyCreationInputOutput {
	return o
}

func (o VMwareCbtPolicyCreationInputOutput) ToVMwareCbtPolicyCreationInputOutputWithContext(ctx context.Context) VMwareCbtPolicyCreationInputOutput {
	return o
}

func (o VMwareCbtPolicyCreationInputOutput) ToVMwareCbtPolicyCreationInputPtrOutput() VMwareCbtPolicyCreationInputPtrOutput {
	return o.ToVMwareCbtPolicyCreationInputPtrOutputWithContext(context.Background())
}

func (o VMwareCbtPolicyCreationInputOutput) ToVMwareCbtPolicyCreationInputPtrOutputWithContext(ctx context.Context) VMwareCbtPolicyCreationInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareCbtPolicyCreationInput) *VMwareCbtPolicyCreationInput {
		return &v
	}).(VMwareCbtPolicyCreationInputPtrOutput)
}

// The app consistent snapshot frequency (in minutes).
func (o VMwareCbtPolicyCreationInputOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareCbtPolicyCreationInput) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency (in minutes).
func (o VMwareCbtPolicyCreationInputOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareCbtPolicyCreationInput) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The class type.
// Expected value is 'VMwareCbt'.
func (o VMwareCbtPolicyCreationInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtPolicyCreationInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o VMwareCbtPolicyCreationInputOutput) RecoveryPointHistoryInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareCbtPolicyCreationInput) *int { return v.RecoveryPointHistoryInMinutes }).(pulumi.IntPtrOutput)
}

type VMwareCbtPolicyCreationInputPtrOutput struct{ *pulumi.OutputState }

func (VMwareCbtPolicyCreationInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareCbtPolicyCreationInput)(nil)).Elem()
}

func (o VMwareCbtPolicyCreationInputPtrOutput) ToVMwareCbtPolicyCreationInputPtrOutput() VMwareCbtPolicyCreationInputPtrOutput {
	return o
}

func (o VMwareCbtPolicyCreationInputPtrOutput) ToVMwareCbtPolicyCreationInputPtrOutputWithContext(ctx context.Context) VMwareCbtPolicyCreationInputPtrOutput {
	return o
}

func (o VMwareCbtPolicyCreationInputPtrOutput) Elem() VMwareCbtPolicyCreationInputOutput {
	return o.ApplyT(func(v *VMwareCbtPolicyCreationInput) VMwareCbtPolicyCreationInput {
		if v != nil {
			return *v
		}
		var ret VMwareCbtPolicyCreationInput
		return ret
	}).(VMwareCbtPolicyCreationInputOutput)
}

// The app consistent snapshot frequency (in minutes).
func (o VMwareCbtPolicyCreationInputPtrOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareCbtPolicyCreationInput) *int {
		if v == nil {
			return nil
		}
		return v.AppConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency (in minutes).
func (o VMwareCbtPolicyCreationInputPtrOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareCbtPolicyCreationInput) *int {
		if v == nil {
			return nil
		}
		return v.CrashConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// The class type.
// Expected value is 'VMwareCbt'.
func (o VMwareCbtPolicyCreationInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtPolicyCreationInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o VMwareCbtPolicyCreationInputPtrOutput) RecoveryPointHistoryInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareCbtPolicyCreationInput) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointHistoryInMinutes
	}).(pulumi.IntPtrOutput)
}

// VMwareCbt protected disk details.
type VMwareCbtProtectedDiskDetailsResponse struct {
	// The disk capacity in bytes.
	CapacityInBytes float64 `pulumi:"capacityInBytes"`
	// The DiskEncryptionSet ARM Id.
	DiskEncryptionSetId string `pulumi:"diskEncryptionSetId"`
	// The disk id.
	DiskId string `pulumi:"diskId"`
	// The disk name.
	DiskName string `pulumi:"diskName"`
	// The disk path.
	DiskPath string `pulumi:"diskPath"`
	// The disk type.
	DiskType *string `pulumi:"diskType"`
	// A value indicating the gateway operation details.
	GatewayOperationDetails GatewayOperationDetailsResponse `pulumi:"gatewayOperationDetails"`
	// A value indicating whether the disk is the OS disk.
	IsOSDisk string `pulumi:"isOSDisk"`
	// The log storage account ARM Id.
	LogStorageAccountId string `pulumi:"logStorageAccountId"`
	// The key vault secret name of the log storage account.
	LogStorageAccountSasSecretName string `pulumi:"logStorageAccountSasSecretName"`
	// The uri of the seed blob.
	SeedBlobUri string `pulumi:"seedBlobUri"`
	// The ARM Id of the seed managed disk.
	SeedManagedDiskId string `pulumi:"seedManagedDiskId"`
	// The uri of the target blob.
	TargetBlobUri string `pulumi:"targetBlobUri"`
	// The name for the target managed disk.
	TargetDiskName *string `pulumi:"targetDiskName"`
	// The ARM Id of the target managed disk.
	TargetManagedDiskId string `pulumi:"targetManagedDiskId"`
}

// VMwareCbt protected disk details.
type VMwareCbtProtectedDiskDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareCbtProtectedDiskDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtProtectedDiskDetailsResponseOutput) ToVMwareCbtProtectedDiskDetailsResponseOutput() VMwareCbtProtectedDiskDetailsResponseOutput {
	return o
}

func (o VMwareCbtProtectedDiskDetailsResponseOutput) ToVMwareCbtProtectedDiskDetailsResponseOutputWithContext(ctx context.Context) VMwareCbtProtectedDiskDetailsResponseOutput {
	return o
}

// The disk capacity in bytes.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) CapacityInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) float64 { return v.CapacityInBytes }).(pulumi.Float64Output)
}

// The DiskEncryptionSet ARM Id.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) DiskEncryptionSetId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.DiskEncryptionSetId }).(pulumi.StringOutput)
}

// The disk id.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.DiskId }).(pulumi.StringOutput)
}

// The disk name.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) DiskName() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.DiskName }).(pulumi.StringOutput)
}

// The disk path.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) DiskPath() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.DiskPath }).(pulumi.StringOutput)
}

// The disk type.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// A value indicating the gateway operation details.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) GatewayOperationDetails() GatewayOperationDetailsResponseOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) GatewayOperationDetailsResponse {
		return v.GatewayOperationDetails
	}).(GatewayOperationDetailsResponseOutput)
}

// A value indicating whether the disk is the OS disk.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) IsOSDisk() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.IsOSDisk }).(pulumi.StringOutput)
}

// The log storage account ARM Id.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) LogStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.LogStorageAccountId }).(pulumi.StringOutput)
}

// The key vault secret name of the log storage account.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) LogStorageAccountSasSecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.LogStorageAccountSasSecretName }).(pulumi.StringOutput)
}

// The uri of the seed blob.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) SeedBlobUri() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.SeedBlobUri }).(pulumi.StringOutput)
}

// The ARM Id of the seed managed disk.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) SeedManagedDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.SeedManagedDiskId }).(pulumi.StringOutput)
}

// The uri of the target blob.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) TargetBlobUri() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.TargetBlobUri }).(pulumi.StringOutput)
}

// The name for the target managed disk.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) TargetDiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) *string { return v.TargetDiskName }).(pulumi.StringPtrOutput)
}

// The ARM Id of the target managed disk.
func (o VMwareCbtProtectedDiskDetailsResponseOutput) TargetManagedDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectedDiskDetailsResponse) string { return v.TargetManagedDiskId }).(pulumi.StringOutput)
}

type VMwareCbtProtectedDiskDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (VMwareCbtProtectedDiskDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMwareCbtProtectedDiskDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtProtectedDiskDetailsResponseArrayOutput) ToVMwareCbtProtectedDiskDetailsResponseArrayOutput() VMwareCbtProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o VMwareCbtProtectedDiskDetailsResponseArrayOutput) ToVMwareCbtProtectedDiskDetailsResponseArrayOutputWithContext(ctx context.Context) VMwareCbtProtectedDiskDetailsResponseArrayOutput {
	return o
}

func (o VMwareCbtProtectedDiskDetailsResponseArrayOutput) Index(i pulumi.IntInput) VMwareCbtProtectedDiskDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMwareCbtProtectedDiskDetailsResponse {
		return vs[0].([]VMwareCbtProtectedDiskDetailsResponse)[vs[1].(int)]
	}).(VMwareCbtProtectedDiskDetailsResponseOutput)
}

// VMwareCbt provider specific container mapping details.
type VMwareCbtProtectionContainerMappingDetailsResponse struct {
	// The SKUs to be excluded.
	ExcludedSkus []string `pulumi:"excludedSkus"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'VMwareCbt'.
	InstanceType string `pulumi:"instanceType"`
	// The target key vault ARM Id.
	KeyVaultId string `pulumi:"keyVaultId"`
	// The target key vault URI.
	KeyVaultUri string `pulumi:"keyVaultUri"`
	// The role size to NIC count map.
	RoleSizeToNicCountMap map[string]int `pulumi:"roleSizeToNicCountMap"`
	// The secret name of the service bus connection string.
	ServiceBusConnectionStringSecretName string `pulumi:"serviceBusConnectionStringSecretName"`
	// The storage account ARM Id.
	StorageAccountId string `pulumi:"storageAccountId"`
	// The secret name of the storage account.
	StorageAccountSasSecretName string `pulumi:"storageAccountSasSecretName"`
	// The target location.
	TargetLocation string `pulumi:"targetLocation"`
}

// VMwareCbt provider specific container mapping details.
type VMwareCbtProtectionContainerMappingDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareCbtProtectionContainerMappingDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtProtectionContainerMappingDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) ToVMwareCbtProtectionContainerMappingDetailsResponseOutput() VMwareCbtProtectionContainerMappingDetailsResponseOutput {
	return o
}

func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) ToVMwareCbtProtectionContainerMappingDetailsResponseOutputWithContext(ctx context.Context) VMwareCbtProtectionContainerMappingDetailsResponseOutput {
	return o
}

// The SKUs to be excluded.
func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) ExcludedSkus() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMwareCbtProtectionContainerMappingDetailsResponse) []string { return v.ExcludedSkus }).(pulumi.StringArrayOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'VMwareCbt'.
func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectionContainerMappingDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The target key vault ARM Id.
func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectionContainerMappingDetailsResponse) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// The target key vault URI.
func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) KeyVaultUri() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectionContainerMappingDetailsResponse) string { return v.KeyVaultUri }).(pulumi.StringOutput)
}

// The role size to NIC count map.
func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) RoleSizeToNicCountMap() pulumi.IntMapOutput {
	return o.ApplyT(func(v VMwareCbtProtectionContainerMappingDetailsResponse) map[string]int {
		return v.RoleSizeToNicCountMap
	}).(pulumi.IntMapOutput)
}

// The secret name of the service bus connection string.
func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) ServiceBusConnectionStringSecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectionContainerMappingDetailsResponse) string {
		return v.ServiceBusConnectionStringSecretName
	}).(pulumi.StringOutput)
}

// The storage account ARM Id.
func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectionContainerMappingDetailsResponse) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

// The secret name of the storage account.
func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) StorageAccountSasSecretName() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectionContainerMappingDetailsResponse) string {
		return v.StorageAccountSasSecretName
	}).(pulumi.StringOutput)
}

// The target location.
func (o VMwareCbtProtectionContainerMappingDetailsResponseOutput) TargetLocation() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareCbtProtectionContainerMappingDetailsResponse) string { return v.TargetLocation }).(pulumi.StringOutput)
}

type VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareCbtProtectionContainerMappingDetailsResponse)(nil)).Elem()
}

func (o VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput) ToVMwareCbtProtectionContainerMappingDetailsResponsePtrOutput() VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput {
	return o
}

func (o VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput) ToVMwareCbtProtectionContainerMappingDetailsResponsePtrOutputWithContext(ctx context.Context) VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput {
	return o
}

func (o VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput) Elem() VMwareCbtProtectionContainerMappingDetailsResponseOutput {
	return o.ApplyT(func(v *VMwareCbtProtectionContainerMappingDetailsResponse) VMwareCbtProtectionContainerMappingDetailsResponse {
		if v != nil {
			return *v
		}
		var ret VMwareCbtProtectionContainerMappingDetailsResponse
		return ret
	}).(VMwareCbtProtectionContainerMappingDetailsResponseOutput)
}

// The SKUs to be excluded.
func (o VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput) ExcludedSkus() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMwareCbtProtectionContainerMappingDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedSkus
	}).(pulumi.StringArrayOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'VMwareCbt'.
func (o VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtProtectionContainerMappingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The target key vault ARM Id.
func (o VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtProtectionContainerMappingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultId
	}).(pulumi.StringPtrOutput)
}

// The target key vault URI.
func (o VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtProtectionContainerMappingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultUri
	}).(pulumi.StringPtrOutput)
}

// The role size to NIC count map.
func (o VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput) RoleSizeToNicCountMap() pulumi.IntMapOutput {
	return o.ApplyT(func(v *VMwareCbtProtectionContainerMappingDetailsResponse) map[string]int {
		if v == nil {
			return nil
		}
		return v.RoleSizeToNicCountMap
	}).(pulumi.IntMapOutput)
}

// The secret name of the service bus connection string.
func (o VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput) ServiceBusConnectionStringSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtProtectionContainerMappingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceBusConnectionStringSecretName
	}).(pulumi.StringPtrOutput)
}

// The storage account ARM Id.
func (o VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtProtectionContainerMappingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The secret name of the storage account.
func (o VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput) StorageAccountSasSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtProtectionContainerMappingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountSasSecretName
	}).(pulumi.StringPtrOutput)
}

// The target location.
func (o VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput) TargetLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtProtectionContainerMappingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TargetLocation
	}).(pulumi.StringPtrOutput)
}

// VMwareCbt security profile input.
type VMwareCbtSecurityProfileProperties struct {
	// A value indicating whether confidential compute encryption to be enabled.
	IsTargetVmConfidentialEncryptionEnabled *string `pulumi:"isTargetVmConfidentialEncryptionEnabled"`
	// A value indicating whether integrity monitoring to be enabled.
	IsTargetVmIntegrityMonitoringEnabled *string `pulumi:"isTargetVmIntegrityMonitoringEnabled"`
	// A value indicating whether secure boot to be enabled.
	IsTargetVmSecureBootEnabled *string `pulumi:"isTargetVmSecureBootEnabled"`
	// A value indicating whether trusted platform module to be enabled.
	IsTargetVmTpmEnabled *string `pulumi:"isTargetVmTpmEnabled"`
	// The target VM security type.
	TargetVmSecurityType *string `pulumi:"targetVmSecurityType"`
}

// VMwareCbtSecurityProfilePropertiesInput is an input type that accepts VMwareCbtSecurityProfilePropertiesArgs and VMwareCbtSecurityProfilePropertiesOutput values.
// You can construct a concrete instance of `VMwareCbtSecurityProfilePropertiesInput` via:
//
//	VMwareCbtSecurityProfilePropertiesArgs{...}
type VMwareCbtSecurityProfilePropertiesInput interface {
	pulumi.Input

	ToVMwareCbtSecurityProfilePropertiesOutput() VMwareCbtSecurityProfilePropertiesOutput
	ToVMwareCbtSecurityProfilePropertiesOutputWithContext(context.Context) VMwareCbtSecurityProfilePropertiesOutput
}

// VMwareCbt security profile input.
type VMwareCbtSecurityProfilePropertiesArgs struct {
	// A value indicating whether confidential compute encryption to be enabled.
	IsTargetVmConfidentialEncryptionEnabled pulumi.StringPtrInput `pulumi:"isTargetVmConfidentialEncryptionEnabled"`
	// A value indicating whether integrity monitoring to be enabled.
	IsTargetVmIntegrityMonitoringEnabled pulumi.StringPtrInput `pulumi:"isTargetVmIntegrityMonitoringEnabled"`
	// A value indicating whether secure boot to be enabled.
	IsTargetVmSecureBootEnabled pulumi.StringPtrInput `pulumi:"isTargetVmSecureBootEnabled"`
	// A value indicating whether trusted platform module to be enabled.
	IsTargetVmTpmEnabled pulumi.StringPtrInput `pulumi:"isTargetVmTpmEnabled"`
	// The target VM security type.
	TargetVmSecurityType pulumi.StringPtrInput `pulumi:"targetVmSecurityType"`
}

func (VMwareCbtSecurityProfilePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtSecurityProfileProperties)(nil)).Elem()
}

func (i VMwareCbtSecurityProfilePropertiesArgs) ToVMwareCbtSecurityProfilePropertiesOutput() VMwareCbtSecurityProfilePropertiesOutput {
	return i.ToVMwareCbtSecurityProfilePropertiesOutputWithContext(context.Background())
}

func (i VMwareCbtSecurityProfilePropertiesArgs) ToVMwareCbtSecurityProfilePropertiesOutputWithContext(ctx context.Context) VMwareCbtSecurityProfilePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtSecurityProfilePropertiesOutput)
}

func (i VMwareCbtSecurityProfilePropertiesArgs) ToVMwareCbtSecurityProfilePropertiesPtrOutput() VMwareCbtSecurityProfilePropertiesPtrOutput {
	return i.ToVMwareCbtSecurityProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i VMwareCbtSecurityProfilePropertiesArgs) ToVMwareCbtSecurityProfilePropertiesPtrOutputWithContext(ctx context.Context) VMwareCbtSecurityProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtSecurityProfilePropertiesOutput).ToVMwareCbtSecurityProfilePropertiesPtrOutputWithContext(ctx)
}

// VMwareCbtSecurityProfilePropertiesPtrInput is an input type that accepts VMwareCbtSecurityProfilePropertiesArgs, VMwareCbtSecurityProfilePropertiesPtr and VMwareCbtSecurityProfilePropertiesPtrOutput values.
// You can construct a concrete instance of `VMwareCbtSecurityProfilePropertiesPtrInput` via:
//
//	        VMwareCbtSecurityProfilePropertiesArgs{...}
//
//	or:
//
//	        nil
type VMwareCbtSecurityProfilePropertiesPtrInput interface {
	pulumi.Input

	ToVMwareCbtSecurityProfilePropertiesPtrOutput() VMwareCbtSecurityProfilePropertiesPtrOutput
	ToVMwareCbtSecurityProfilePropertiesPtrOutputWithContext(context.Context) VMwareCbtSecurityProfilePropertiesPtrOutput
}

type vmwareCbtSecurityProfilePropertiesPtrType VMwareCbtSecurityProfilePropertiesArgs

func VMwareCbtSecurityProfilePropertiesPtr(v *VMwareCbtSecurityProfilePropertiesArgs) VMwareCbtSecurityProfilePropertiesPtrInput {
	return (*vmwareCbtSecurityProfilePropertiesPtrType)(v)
}

func (*vmwareCbtSecurityProfilePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareCbtSecurityProfileProperties)(nil)).Elem()
}

func (i *vmwareCbtSecurityProfilePropertiesPtrType) ToVMwareCbtSecurityProfilePropertiesPtrOutput() VMwareCbtSecurityProfilePropertiesPtrOutput {
	return i.ToVMwareCbtSecurityProfilePropertiesPtrOutputWithContext(context.Background())
}

func (i *vmwareCbtSecurityProfilePropertiesPtrType) ToVMwareCbtSecurityProfilePropertiesPtrOutputWithContext(ctx context.Context) VMwareCbtSecurityProfilePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareCbtSecurityProfilePropertiesPtrOutput)
}

// VMwareCbt security profile input.
type VMwareCbtSecurityProfilePropertiesOutput struct{ *pulumi.OutputState }

func (VMwareCbtSecurityProfilePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtSecurityProfileProperties)(nil)).Elem()
}

func (o VMwareCbtSecurityProfilePropertiesOutput) ToVMwareCbtSecurityProfilePropertiesOutput() VMwareCbtSecurityProfilePropertiesOutput {
	return o
}

func (o VMwareCbtSecurityProfilePropertiesOutput) ToVMwareCbtSecurityProfilePropertiesOutputWithContext(ctx context.Context) VMwareCbtSecurityProfilePropertiesOutput {
	return o
}

func (o VMwareCbtSecurityProfilePropertiesOutput) ToVMwareCbtSecurityProfilePropertiesPtrOutput() VMwareCbtSecurityProfilePropertiesPtrOutput {
	return o.ToVMwareCbtSecurityProfilePropertiesPtrOutputWithContext(context.Background())
}

func (o VMwareCbtSecurityProfilePropertiesOutput) ToVMwareCbtSecurityProfilePropertiesPtrOutputWithContext(ctx context.Context) VMwareCbtSecurityProfilePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareCbtSecurityProfileProperties) *VMwareCbtSecurityProfileProperties {
		return &v
	}).(VMwareCbtSecurityProfilePropertiesPtrOutput)
}

// A value indicating whether confidential compute encryption to be enabled.
func (o VMwareCbtSecurityProfilePropertiesOutput) IsTargetVmConfidentialEncryptionEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtSecurityProfileProperties) *string { return v.IsTargetVmConfidentialEncryptionEnabled }).(pulumi.StringPtrOutput)
}

// A value indicating whether integrity monitoring to be enabled.
func (o VMwareCbtSecurityProfilePropertiesOutput) IsTargetVmIntegrityMonitoringEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtSecurityProfileProperties) *string { return v.IsTargetVmIntegrityMonitoringEnabled }).(pulumi.StringPtrOutput)
}

// A value indicating whether secure boot to be enabled.
func (o VMwareCbtSecurityProfilePropertiesOutput) IsTargetVmSecureBootEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtSecurityProfileProperties) *string { return v.IsTargetVmSecureBootEnabled }).(pulumi.StringPtrOutput)
}

// A value indicating whether trusted platform module to be enabled.
func (o VMwareCbtSecurityProfilePropertiesOutput) IsTargetVmTpmEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtSecurityProfileProperties) *string { return v.IsTargetVmTpmEnabled }).(pulumi.StringPtrOutput)
}

// The target VM security type.
func (o VMwareCbtSecurityProfilePropertiesOutput) TargetVmSecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtSecurityProfileProperties) *string { return v.TargetVmSecurityType }).(pulumi.StringPtrOutput)
}

type VMwareCbtSecurityProfilePropertiesPtrOutput struct{ *pulumi.OutputState }

func (VMwareCbtSecurityProfilePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareCbtSecurityProfileProperties)(nil)).Elem()
}

func (o VMwareCbtSecurityProfilePropertiesPtrOutput) ToVMwareCbtSecurityProfilePropertiesPtrOutput() VMwareCbtSecurityProfilePropertiesPtrOutput {
	return o
}

func (o VMwareCbtSecurityProfilePropertiesPtrOutput) ToVMwareCbtSecurityProfilePropertiesPtrOutputWithContext(ctx context.Context) VMwareCbtSecurityProfilePropertiesPtrOutput {
	return o
}

func (o VMwareCbtSecurityProfilePropertiesPtrOutput) Elem() VMwareCbtSecurityProfilePropertiesOutput {
	return o.ApplyT(func(v *VMwareCbtSecurityProfileProperties) VMwareCbtSecurityProfileProperties {
		if v != nil {
			return *v
		}
		var ret VMwareCbtSecurityProfileProperties
		return ret
	}).(VMwareCbtSecurityProfilePropertiesOutput)
}

// A value indicating whether confidential compute encryption to be enabled.
func (o VMwareCbtSecurityProfilePropertiesPtrOutput) IsTargetVmConfidentialEncryptionEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtSecurityProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.IsTargetVmConfidentialEncryptionEnabled
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether integrity monitoring to be enabled.
func (o VMwareCbtSecurityProfilePropertiesPtrOutput) IsTargetVmIntegrityMonitoringEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtSecurityProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.IsTargetVmIntegrityMonitoringEnabled
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether secure boot to be enabled.
func (o VMwareCbtSecurityProfilePropertiesPtrOutput) IsTargetVmSecureBootEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtSecurityProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.IsTargetVmSecureBootEnabled
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether trusted platform module to be enabled.
func (o VMwareCbtSecurityProfilePropertiesPtrOutput) IsTargetVmTpmEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtSecurityProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.IsTargetVmTpmEnabled
	}).(pulumi.StringPtrOutput)
}

// The target VM security type.
func (o VMwareCbtSecurityProfilePropertiesPtrOutput) TargetVmSecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtSecurityProfileProperties) *string {
		if v == nil {
			return nil
		}
		return v.TargetVmSecurityType
	}).(pulumi.StringPtrOutput)
}

// VMwareCbt security profile input.
type VMwareCbtSecurityProfilePropertiesResponse struct {
	// A value indicating whether confidential compute encryption to be enabled.
	IsTargetVmConfidentialEncryptionEnabled *string `pulumi:"isTargetVmConfidentialEncryptionEnabled"`
	// A value indicating whether integrity monitoring to be enabled.
	IsTargetVmIntegrityMonitoringEnabled *string `pulumi:"isTargetVmIntegrityMonitoringEnabled"`
	// A value indicating whether secure boot to be enabled.
	IsTargetVmSecureBootEnabled *string `pulumi:"isTargetVmSecureBootEnabled"`
	// A value indicating whether trusted platform module to be enabled.
	IsTargetVmTpmEnabled *string `pulumi:"isTargetVmTpmEnabled"`
	// The target VM security type.
	TargetVmSecurityType *string `pulumi:"targetVmSecurityType"`
}

// VMwareCbt security profile input.
type VMwareCbtSecurityProfilePropertiesResponseOutput struct{ *pulumi.OutputState }

func (VMwareCbtSecurityProfilePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareCbtSecurityProfilePropertiesResponse)(nil)).Elem()
}

func (o VMwareCbtSecurityProfilePropertiesResponseOutput) ToVMwareCbtSecurityProfilePropertiesResponseOutput() VMwareCbtSecurityProfilePropertiesResponseOutput {
	return o
}

func (o VMwareCbtSecurityProfilePropertiesResponseOutput) ToVMwareCbtSecurityProfilePropertiesResponseOutputWithContext(ctx context.Context) VMwareCbtSecurityProfilePropertiesResponseOutput {
	return o
}

// A value indicating whether confidential compute encryption to be enabled.
func (o VMwareCbtSecurityProfilePropertiesResponseOutput) IsTargetVmConfidentialEncryptionEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtSecurityProfilePropertiesResponse) *string {
		return v.IsTargetVmConfidentialEncryptionEnabled
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether integrity monitoring to be enabled.
func (o VMwareCbtSecurityProfilePropertiesResponseOutput) IsTargetVmIntegrityMonitoringEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtSecurityProfilePropertiesResponse) *string {
		return v.IsTargetVmIntegrityMonitoringEnabled
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether secure boot to be enabled.
func (o VMwareCbtSecurityProfilePropertiesResponseOutput) IsTargetVmSecureBootEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtSecurityProfilePropertiesResponse) *string { return v.IsTargetVmSecureBootEnabled }).(pulumi.StringPtrOutput)
}

// A value indicating whether trusted platform module to be enabled.
func (o VMwareCbtSecurityProfilePropertiesResponseOutput) IsTargetVmTpmEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtSecurityProfilePropertiesResponse) *string { return v.IsTargetVmTpmEnabled }).(pulumi.StringPtrOutput)
}

// The target VM security type.
func (o VMwareCbtSecurityProfilePropertiesResponseOutput) TargetVmSecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareCbtSecurityProfilePropertiesResponse) *string { return v.TargetVmSecurityType }).(pulumi.StringPtrOutput)
}

type VMwareCbtSecurityProfilePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VMwareCbtSecurityProfilePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareCbtSecurityProfilePropertiesResponse)(nil)).Elem()
}

func (o VMwareCbtSecurityProfilePropertiesResponsePtrOutput) ToVMwareCbtSecurityProfilePropertiesResponsePtrOutput() VMwareCbtSecurityProfilePropertiesResponsePtrOutput {
	return o
}

func (o VMwareCbtSecurityProfilePropertiesResponsePtrOutput) ToVMwareCbtSecurityProfilePropertiesResponsePtrOutputWithContext(ctx context.Context) VMwareCbtSecurityProfilePropertiesResponsePtrOutput {
	return o
}

func (o VMwareCbtSecurityProfilePropertiesResponsePtrOutput) Elem() VMwareCbtSecurityProfilePropertiesResponseOutput {
	return o.ApplyT(func(v *VMwareCbtSecurityProfilePropertiesResponse) VMwareCbtSecurityProfilePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret VMwareCbtSecurityProfilePropertiesResponse
		return ret
	}).(VMwareCbtSecurityProfilePropertiesResponseOutput)
}

// A value indicating whether confidential compute encryption to be enabled.
func (o VMwareCbtSecurityProfilePropertiesResponsePtrOutput) IsTargetVmConfidentialEncryptionEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtSecurityProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IsTargetVmConfidentialEncryptionEnabled
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether integrity monitoring to be enabled.
func (o VMwareCbtSecurityProfilePropertiesResponsePtrOutput) IsTargetVmIntegrityMonitoringEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtSecurityProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IsTargetVmIntegrityMonitoringEnabled
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether secure boot to be enabled.
func (o VMwareCbtSecurityProfilePropertiesResponsePtrOutput) IsTargetVmSecureBootEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtSecurityProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IsTargetVmSecureBootEnabled
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether trusted platform module to be enabled.
func (o VMwareCbtSecurityProfilePropertiesResponsePtrOutput) IsTargetVmTpmEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtSecurityProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IsTargetVmTpmEnabled
	}).(pulumi.StringPtrOutput)
}

// The target VM security type.
func (o VMwareCbtSecurityProfilePropertiesResponsePtrOutput) TargetVmSecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareCbtSecurityProfilePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetVmSecurityType
	}).(pulumi.StringPtrOutput)
}

// Store the fabric details specific to the VMware fabric.
type VMwareDetailsResponse struct {
	// The number of source and target servers configured to talk to this CS.
	AgentCount *string `pulumi:"agentCount"`
	// Agent expiry date.
	AgentExpiryDate *string `pulumi:"agentExpiryDate"`
	// The agent Version.
	AgentVersion *string `pulumi:"agentVersion"`
	// The agent version details.
	AgentVersionDetails *VersionDetailsResponse `pulumi:"agentVersionDetails"`
	// The available memory.
	AvailableMemoryInBytes *float64 `pulumi:"availableMemoryInBytes"`
	// The available space.
	AvailableSpaceInBytes *float64 `pulumi:"availableSpaceInBytes"`
	// The percentage of the CPU load.
	CpuLoad *string `pulumi:"cpuLoad"`
	// The CPU load status.
	CpuLoadStatus *string `pulumi:"cpuLoadStatus"`
	// The CS service status.
	CsServiceStatus *string `pulumi:"csServiceStatus"`
	// The database server load.
	DatabaseServerLoad *string `pulumi:"databaseServerLoad"`
	// The database server load status.
	DatabaseServerLoadStatus *string `pulumi:"databaseServerLoadStatus"`
	// The host name.
	HostName *string `pulumi:"hostName"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'VMware'.
	InstanceType string `pulumi:"instanceType"`
	// The IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// The last heartbeat received from CS server.
	LastHeartbeat *string `pulumi:"lastHeartbeat"`
	// The list of Master Target servers associated with the fabric.
	MasterTargetServers []MasterTargetServerResponse `pulumi:"masterTargetServers"`
	// The memory usage status.
	MemoryUsageStatus *string `pulumi:"memoryUsageStatus"`
	// The number of process servers.
	ProcessServerCount *string `pulumi:"processServerCount"`
	// The list of Process Servers associated with the fabric.
	ProcessServers []ProcessServerResponse `pulumi:"processServers"`
	// The number of protected servers.
	ProtectedServers *string `pulumi:"protectedServers"`
	// PS template version.
	PsTemplateVersion *string `pulumi:"psTemplateVersion"`
	// The number of replication pairs configured in this CS.
	ReplicationPairCount *string `pulumi:"replicationPairCount"`
	// The list of run as accounts created on the server.
	RunAsAccounts []RunAsAccountResponse `pulumi:"runAsAccounts"`
	// The space usage status.
	SpaceUsageStatus *string `pulumi:"spaceUsageStatus"`
	// CS SSL cert expiry date.
	SslCertExpiryDate *string `pulumi:"sslCertExpiryDate"`
	// CS SSL cert expiry date.
	SslCertExpiryRemainingDays *int `pulumi:"sslCertExpiryRemainingDays"`
	// The switch provider blocking error information.
	SwitchProviderBlockingErrorDetails []InMageFabricSwitchProviderBlockingErrorDetailsResponse `pulumi:"switchProviderBlockingErrorDetails"`
	// The percentage of the system load.
	SystemLoad *string `pulumi:"systemLoad"`
	// The system load status.
	SystemLoadStatus *string `pulumi:"systemLoadStatus"`
	// The total memory.
	TotalMemoryInBytes *float64 `pulumi:"totalMemoryInBytes"`
	// The total space.
	TotalSpaceInBytes *float64 `pulumi:"totalSpaceInBytes"`
	// Version status.
	VersionStatus *string `pulumi:"versionStatus"`
	// The web load.
	WebLoad *string `pulumi:"webLoad"`
	// The web load status.
	WebLoadStatus *string `pulumi:"webLoadStatus"`
}

// Store the fabric details specific to the VMware fabric.
type VMwareDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareDetailsResponse)(nil)).Elem()
}

func (o VMwareDetailsResponseOutput) ToVMwareDetailsResponseOutput() VMwareDetailsResponseOutput {
	return o
}

func (o VMwareDetailsResponseOutput) ToVMwareDetailsResponseOutputWithContext(ctx context.Context) VMwareDetailsResponseOutput {
	return o
}

// The number of source and target servers configured to talk to this CS.
func (o VMwareDetailsResponseOutput) AgentCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.AgentCount }).(pulumi.StringPtrOutput)
}

// Agent expiry date.
func (o VMwareDetailsResponseOutput) AgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.AgentExpiryDate }).(pulumi.StringPtrOutput)
}

// The agent Version.
func (o VMwareDetailsResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// The agent version details.
func (o VMwareDetailsResponseOutput) AgentVersionDetails() VersionDetailsResponsePtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *VersionDetailsResponse { return v.AgentVersionDetails }).(VersionDetailsResponsePtrOutput)
}

// The available memory.
func (o VMwareDetailsResponseOutput) AvailableMemoryInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *float64 { return v.AvailableMemoryInBytes }).(pulumi.Float64PtrOutput)
}

// The available space.
func (o VMwareDetailsResponseOutput) AvailableSpaceInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *float64 { return v.AvailableSpaceInBytes }).(pulumi.Float64PtrOutput)
}

// The percentage of the CPU load.
func (o VMwareDetailsResponseOutput) CpuLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.CpuLoad }).(pulumi.StringPtrOutput)
}

// The CPU load status.
func (o VMwareDetailsResponseOutput) CpuLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.CpuLoadStatus }).(pulumi.StringPtrOutput)
}

// The CS service status.
func (o VMwareDetailsResponseOutput) CsServiceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.CsServiceStatus }).(pulumi.StringPtrOutput)
}

// The database server load.
func (o VMwareDetailsResponseOutput) DatabaseServerLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.DatabaseServerLoad }).(pulumi.StringPtrOutput)
}

// The database server load status.
func (o VMwareDetailsResponseOutput) DatabaseServerLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.DatabaseServerLoadStatus }).(pulumi.StringPtrOutput)
}

// The host name.
func (o VMwareDetailsResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'VMware'.
func (o VMwareDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The IP address.
func (o VMwareDetailsResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The last heartbeat received from CS server.
func (o VMwareDetailsResponseOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.LastHeartbeat }).(pulumi.StringPtrOutput)
}

// The list of Master Target servers associated with the fabric.
func (o VMwareDetailsResponseOutput) MasterTargetServers() MasterTargetServerResponseArrayOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) []MasterTargetServerResponse { return v.MasterTargetServers }).(MasterTargetServerResponseArrayOutput)
}

// The memory usage status.
func (o VMwareDetailsResponseOutput) MemoryUsageStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.MemoryUsageStatus }).(pulumi.StringPtrOutput)
}

// The number of process servers.
func (o VMwareDetailsResponseOutput) ProcessServerCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.ProcessServerCount }).(pulumi.StringPtrOutput)
}

// The list of Process Servers associated with the fabric.
func (o VMwareDetailsResponseOutput) ProcessServers() ProcessServerResponseArrayOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) []ProcessServerResponse { return v.ProcessServers }).(ProcessServerResponseArrayOutput)
}

// The number of protected servers.
func (o VMwareDetailsResponseOutput) ProtectedServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.ProtectedServers }).(pulumi.StringPtrOutput)
}

// PS template version.
func (o VMwareDetailsResponseOutput) PsTemplateVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.PsTemplateVersion }).(pulumi.StringPtrOutput)
}

// The number of replication pairs configured in this CS.
func (o VMwareDetailsResponseOutput) ReplicationPairCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.ReplicationPairCount }).(pulumi.StringPtrOutput)
}

// The list of run as accounts created on the server.
func (o VMwareDetailsResponseOutput) RunAsAccounts() RunAsAccountResponseArrayOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) []RunAsAccountResponse { return v.RunAsAccounts }).(RunAsAccountResponseArrayOutput)
}

// The space usage status.
func (o VMwareDetailsResponseOutput) SpaceUsageStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.SpaceUsageStatus }).(pulumi.StringPtrOutput)
}

// CS SSL cert expiry date.
func (o VMwareDetailsResponseOutput) SslCertExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.SslCertExpiryDate }).(pulumi.StringPtrOutput)
}

// CS SSL cert expiry date.
func (o VMwareDetailsResponseOutput) SslCertExpiryRemainingDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *int { return v.SslCertExpiryRemainingDays }).(pulumi.IntPtrOutput)
}

// The switch provider blocking error information.
func (o VMwareDetailsResponseOutput) SwitchProviderBlockingErrorDetails() InMageFabricSwitchProviderBlockingErrorDetailsResponseArrayOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) []InMageFabricSwitchProviderBlockingErrorDetailsResponse {
		return v.SwitchProviderBlockingErrorDetails
	}).(InMageFabricSwitchProviderBlockingErrorDetailsResponseArrayOutput)
}

// The percentage of the system load.
func (o VMwareDetailsResponseOutput) SystemLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.SystemLoad }).(pulumi.StringPtrOutput)
}

// The system load status.
func (o VMwareDetailsResponseOutput) SystemLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.SystemLoadStatus }).(pulumi.StringPtrOutput)
}

// The total memory.
func (o VMwareDetailsResponseOutput) TotalMemoryInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *float64 { return v.TotalMemoryInBytes }).(pulumi.Float64PtrOutput)
}

// The total space.
func (o VMwareDetailsResponseOutput) TotalSpaceInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *float64 { return v.TotalSpaceInBytes }).(pulumi.Float64PtrOutput)
}

// Version status.
func (o VMwareDetailsResponseOutput) VersionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.VersionStatus }).(pulumi.StringPtrOutput)
}

// The web load.
func (o VMwareDetailsResponseOutput) WebLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.WebLoad }).(pulumi.StringPtrOutput)
}

// The web load status.
func (o VMwareDetailsResponseOutput) WebLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareDetailsResponse) *string { return v.WebLoadStatus }).(pulumi.StringPtrOutput)
}

type VMwareDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (VMwareDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareDetailsResponse)(nil)).Elem()
}

func (o VMwareDetailsResponsePtrOutput) ToVMwareDetailsResponsePtrOutput() VMwareDetailsResponsePtrOutput {
	return o
}

func (o VMwareDetailsResponsePtrOutput) ToVMwareDetailsResponsePtrOutputWithContext(ctx context.Context) VMwareDetailsResponsePtrOutput {
	return o
}

func (o VMwareDetailsResponsePtrOutput) Elem() VMwareDetailsResponseOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) VMwareDetailsResponse {
		if v != nil {
			return *v
		}
		var ret VMwareDetailsResponse
		return ret
	}).(VMwareDetailsResponseOutput)
}

// The number of source and target servers configured to talk to this CS.
func (o VMwareDetailsResponsePtrOutput) AgentCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentCount
	}).(pulumi.StringPtrOutput)
}

// Agent expiry date.
func (o VMwareDetailsResponsePtrOutput) AgentExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentExpiryDate
	}).(pulumi.StringPtrOutput)
}

// The agent Version.
func (o VMwareDetailsResponsePtrOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AgentVersion
	}).(pulumi.StringPtrOutput)
}

// The agent version details.
func (o VMwareDetailsResponsePtrOutput) AgentVersionDetails() VersionDetailsResponsePtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *VersionDetailsResponse {
		if v == nil {
			return nil
		}
		return v.AgentVersionDetails
	}).(VersionDetailsResponsePtrOutput)
}

// The available memory.
func (o VMwareDetailsResponsePtrOutput) AvailableMemoryInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.AvailableMemoryInBytes
	}).(pulumi.Float64PtrOutput)
}

// The available space.
func (o VMwareDetailsResponsePtrOutput) AvailableSpaceInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.AvailableSpaceInBytes
	}).(pulumi.Float64PtrOutput)
}

// The percentage of the CPU load.
func (o VMwareDetailsResponsePtrOutput) CpuLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CpuLoad
	}).(pulumi.StringPtrOutput)
}

// The CPU load status.
func (o VMwareDetailsResponsePtrOutput) CpuLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CpuLoadStatus
	}).(pulumi.StringPtrOutput)
}

// The CS service status.
func (o VMwareDetailsResponsePtrOutput) CsServiceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CsServiceStatus
	}).(pulumi.StringPtrOutput)
}

// The database server load.
func (o VMwareDetailsResponsePtrOutput) DatabaseServerLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseServerLoad
	}).(pulumi.StringPtrOutput)
}

// The database server load status.
func (o VMwareDetailsResponsePtrOutput) DatabaseServerLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseServerLoadStatus
	}).(pulumi.StringPtrOutput)
}

// The host name.
func (o VMwareDetailsResponsePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostName
	}).(pulumi.StringPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'VMware'.
func (o VMwareDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The IP address.
func (o VMwareDetailsResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The last heartbeat received from CS server.
func (o VMwareDetailsResponsePtrOutput) LastHeartbeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastHeartbeat
	}).(pulumi.StringPtrOutput)
}

// The list of Master Target servers associated with the fabric.
func (o VMwareDetailsResponsePtrOutput) MasterTargetServers() MasterTargetServerResponseArrayOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) []MasterTargetServerResponse {
		if v == nil {
			return nil
		}
		return v.MasterTargetServers
	}).(MasterTargetServerResponseArrayOutput)
}

// The memory usage status.
func (o VMwareDetailsResponsePtrOutput) MemoryUsageStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MemoryUsageStatus
	}).(pulumi.StringPtrOutput)
}

// The number of process servers.
func (o VMwareDetailsResponsePtrOutput) ProcessServerCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProcessServerCount
	}).(pulumi.StringPtrOutput)
}

// The list of Process Servers associated with the fabric.
func (o VMwareDetailsResponsePtrOutput) ProcessServers() ProcessServerResponseArrayOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) []ProcessServerResponse {
		if v == nil {
			return nil
		}
		return v.ProcessServers
	}).(ProcessServerResponseArrayOutput)
}

// The number of protected servers.
func (o VMwareDetailsResponsePtrOutput) ProtectedServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedServers
	}).(pulumi.StringPtrOutput)
}

// PS template version.
func (o VMwareDetailsResponsePtrOutput) PsTemplateVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PsTemplateVersion
	}).(pulumi.StringPtrOutput)
}

// The number of replication pairs configured in this CS.
func (o VMwareDetailsResponsePtrOutput) ReplicationPairCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReplicationPairCount
	}).(pulumi.StringPtrOutput)
}

// The list of run as accounts created on the server.
func (o VMwareDetailsResponsePtrOutput) RunAsAccounts() RunAsAccountResponseArrayOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) []RunAsAccountResponse {
		if v == nil {
			return nil
		}
		return v.RunAsAccounts
	}).(RunAsAccountResponseArrayOutput)
}

// The space usage status.
func (o VMwareDetailsResponsePtrOutput) SpaceUsageStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SpaceUsageStatus
	}).(pulumi.StringPtrOutput)
}

// CS SSL cert expiry date.
func (o VMwareDetailsResponsePtrOutput) SslCertExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SslCertExpiryDate
	}).(pulumi.StringPtrOutput)
}

// CS SSL cert expiry date.
func (o VMwareDetailsResponsePtrOutput) SslCertExpiryRemainingDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SslCertExpiryRemainingDays
	}).(pulumi.IntPtrOutput)
}

// The switch provider blocking error information.
func (o VMwareDetailsResponsePtrOutput) SwitchProviderBlockingErrorDetails() InMageFabricSwitchProviderBlockingErrorDetailsResponseArrayOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) []InMageFabricSwitchProviderBlockingErrorDetailsResponse {
		if v == nil {
			return nil
		}
		return v.SwitchProviderBlockingErrorDetails
	}).(InMageFabricSwitchProviderBlockingErrorDetailsResponseArrayOutput)
}

// The percentage of the system load.
func (o VMwareDetailsResponsePtrOutput) SystemLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SystemLoad
	}).(pulumi.StringPtrOutput)
}

// The system load status.
func (o VMwareDetailsResponsePtrOutput) SystemLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SystemLoadStatus
	}).(pulumi.StringPtrOutput)
}

// The total memory.
func (o VMwareDetailsResponsePtrOutput) TotalMemoryInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.TotalMemoryInBytes
	}).(pulumi.Float64PtrOutput)
}

// The total space.
func (o VMwareDetailsResponsePtrOutput) TotalSpaceInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.TotalSpaceInBytes
	}).(pulumi.Float64PtrOutput)
}

// Version status.
func (o VMwareDetailsResponsePtrOutput) VersionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VersionStatus
	}).(pulumi.StringPtrOutput)
}

// The web load.
func (o VMwareDetailsResponsePtrOutput) WebLoad() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.WebLoad
	}).(pulumi.StringPtrOutput)
}

// The web load status.
func (o VMwareDetailsResponsePtrOutput) WebLoadStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.WebLoadStatus
	}).(pulumi.StringPtrOutput)
}

// VMwareV2 fabric provider specific settings.
type VMwareV2FabricCreationInput struct {
	// Gets the class type.
	// Expected value is 'VMwareV2'.
	InstanceType string `pulumi:"instanceType"`
	// The ARM Id of the migration solution.
	MigrationSolutionId string `pulumi:"migrationSolutionId"`
	// The ARM Id of the physical site.
	PhysicalSiteId *string `pulumi:"physicalSiteId"`
	// The ARM Id of the VMware site.
	VmwareSiteId *string `pulumi:"vmwareSiteId"`
}

// VMwareV2FabricCreationInputInput is an input type that accepts VMwareV2FabricCreationInputArgs and VMwareV2FabricCreationInputOutput values.
// You can construct a concrete instance of `VMwareV2FabricCreationInputInput` via:
//
//	VMwareV2FabricCreationInputArgs{...}
type VMwareV2FabricCreationInputInput interface {
	pulumi.Input

	ToVMwareV2FabricCreationInputOutput() VMwareV2FabricCreationInputOutput
	ToVMwareV2FabricCreationInputOutputWithContext(context.Context) VMwareV2FabricCreationInputOutput
}

// VMwareV2 fabric provider specific settings.
type VMwareV2FabricCreationInputArgs struct {
	// Gets the class type.
	// Expected value is 'VMwareV2'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The ARM Id of the migration solution.
	MigrationSolutionId pulumi.StringInput `pulumi:"migrationSolutionId"`
	// The ARM Id of the physical site.
	PhysicalSiteId pulumi.StringPtrInput `pulumi:"physicalSiteId"`
	// The ARM Id of the VMware site.
	VmwareSiteId pulumi.StringPtrInput `pulumi:"vmwareSiteId"`
}

func (VMwareV2FabricCreationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareV2FabricCreationInput)(nil)).Elem()
}

func (i VMwareV2FabricCreationInputArgs) ToVMwareV2FabricCreationInputOutput() VMwareV2FabricCreationInputOutput {
	return i.ToVMwareV2FabricCreationInputOutputWithContext(context.Background())
}

func (i VMwareV2FabricCreationInputArgs) ToVMwareV2FabricCreationInputOutputWithContext(ctx context.Context) VMwareV2FabricCreationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareV2FabricCreationInputOutput)
}

func (i VMwareV2FabricCreationInputArgs) ToVMwareV2FabricCreationInputPtrOutput() VMwareV2FabricCreationInputPtrOutput {
	return i.ToVMwareV2FabricCreationInputPtrOutputWithContext(context.Background())
}

func (i VMwareV2FabricCreationInputArgs) ToVMwareV2FabricCreationInputPtrOutputWithContext(ctx context.Context) VMwareV2FabricCreationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareV2FabricCreationInputOutput).ToVMwareV2FabricCreationInputPtrOutputWithContext(ctx)
}

// VMwareV2FabricCreationInputPtrInput is an input type that accepts VMwareV2FabricCreationInputArgs, VMwareV2FabricCreationInputPtr and VMwareV2FabricCreationInputPtrOutput values.
// You can construct a concrete instance of `VMwareV2FabricCreationInputPtrInput` via:
//
//	        VMwareV2FabricCreationInputArgs{...}
//
//	or:
//
//	        nil
type VMwareV2FabricCreationInputPtrInput interface {
	pulumi.Input

	ToVMwareV2FabricCreationInputPtrOutput() VMwareV2FabricCreationInputPtrOutput
	ToVMwareV2FabricCreationInputPtrOutputWithContext(context.Context) VMwareV2FabricCreationInputPtrOutput
}

type vmwareV2FabricCreationInputPtrType VMwareV2FabricCreationInputArgs

func VMwareV2FabricCreationInputPtr(v *VMwareV2FabricCreationInputArgs) VMwareV2FabricCreationInputPtrInput {
	return (*vmwareV2FabricCreationInputPtrType)(v)
}

func (*vmwareV2FabricCreationInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareV2FabricCreationInput)(nil)).Elem()
}

func (i *vmwareV2FabricCreationInputPtrType) ToVMwareV2FabricCreationInputPtrOutput() VMwareV2FabricCreationInputPtrOutput {
	return i.ToVMwareV2FabricCreationInputPtrOutputWithContext(context.Background())
}

func (i *vmwareV2FabricCreationInputPtrType) ToVMwareV2FabricCreationInputPtrOutputWithContext(ctx context.Context) VMwareV2FabricCreationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMwareV2FabricCreationInputPtrOutput)
}

// VMwareV2 fabric provider specific settings.
type VMwareV2FabricCreationInputOutput struct{ *pulumi.OutputState }

func (VMwareV2FabricCreationInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareV2FabricCreationInput)(nil)).Elem()
}

func (o VMwareV2FabricCreationInputOutput) ToVMwareV2FabricCreationInputOutput() VMwareV2FabricCreationInputOutput {
	return o
}

func (o VMwareV2FabricCreationInputOutput) ToVMwareV2FabricCreationInputOutputWithContext(ctx context.Context) VMwareV2FabricCreationInputOutput {
	return o
}

func (o VMwareV2FabricCreationInputOutput) ToVMwareV2FabricCreationInputPtrOutput() VMwareV2FabricCreationInputPtrOutput {
	return o.ToVMwareV2FabricCreationInputPtrOutputWithContext(context.Background())
}

func (o VMwareV2FabricCreationInputOutput) ToVMwareV2FabricCreationInputPtrOutputWithContext(ctx context.Context) VMwareV2FabricCreationInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMwareV2FabricCreationInput) *VMwareV2FabricCreationInput {
		return &v
	}).(VMwareV2FabricCreationInputPtrOutput)
}

// Gets the class type.
// Expected value is 'VMwareV2'.
func (o VMwareV2FabricCreationInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareV2FabricCreationInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The ARM Id of the migration solution.
func (o VMwareV2FabricCreationInputOutput) MigrationSolutionId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareV2FabricCreationInput) string { return v.MigrationSolutionId }).(pulumi.StringOutput)
}

// The ARM Id of the physical site.
func (o VMwareV2FabricCreationInputOutput) PhysicalSiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareV2FabricCreationInput) *string { return v.PhysicalSiteId }).(pulumi.StringPtrOutput)
}

// The ARM Id of the VMware site.
func (o VMwareV2FabricCreationInputOutput) VmwareSiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMwareV2FabricCreationInput) *string { return v.VmwareSiteId }).(pulumi.StringPtrOutput)
}

type VMwareV2FabricCreationInputPtrOutput struct{ *pulumi.OutputState }

func (VMwareV2FabricCreationInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareV2FabricCreationInput)(nil)).Elem()
}

func (o VMwareV2FabricCreationInputPtrOutput) ToVMwareV2FabricCreationInputPtrOutput() VMwareV2FabricCreationInputPtrOutput {
	return o
}

func (o VMwareV2FabricCreationInputPtrOutput) ToVMwareV2FabricCreationInputPtrOutputWithContext(ctx context.Context) VMwareV2FabricCreationInputPtrOutput {
	return o
}

func (o VMwareV2FabricCreationInputPtrOutput) Elem() VMwareV2FabricCreationInputOutput {
	return o.ApplyT(func(v *VMwareV2FabricCreationInput) VMwareV2FabricCreationInput {
		if v != nil {
			return *v
		}
		var ret VMwareV2FabricCreationInput
		return ret
	}).(VMwareV2FabricCreationInputOutput)
}

// Gets the class type.
// Expected value is 'VMwareV2'.
func (o VMwareV2FabricCreationInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareV2FabricCreationInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The ARM Id of the migration solution.
func (o VMwareV2FabricCreationInputPtrOutput) MigrationSolutionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareV2FabricCreationInput) *string {
		if v == nil {
			return nil
		}
		return &v.MigrationSolutionId
	}).(pulumi.StringPtrOutput)
}

// The ARM Id of the physical site.
func (o VMwareV2FabricCreationInputPtrOutput) PhysicalSiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareV2FabricCreationInput) *string {
		if v == nil {
			return nil
		}
		return v.PhysicalSiteId
	}).(pulumi.StringPtrOutput)
}

// The ARM Id of the VMware site.
func (o VMwareV2FabricCreationInputPtrOutput) VmwareSiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareV2FabricCreationInput) *string {
		if v == nil {
			return nil
		}
		return v.VmwareSiteId
	}).(pulumi.StringPtrOutput)
}

// VMwareV2 fabric specific details.
type VMwareV2FabricSpecificDetailsResponse struct {
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'VMwareV2'.
	InstanceType string `pulumi:"instanceType"`
	// The Migration solution ARM Id.
	MigrationSolutionId string `pulumi:"migrationSolutionId"`
	// The ARM Id of the physical site.
	PhysicalSiteId string `pulumi:"physicalSiteId"`
	// The list of process servers.
	ProcessServers []ProcessServerDetailsResponse `pulumi:"processServers"`
	// The service container Id.
	ServiceContainerId string `pulumi:"serviceContainerId"`
	// The service endpoint.
	ServiceEndpoint string `pulumi:"serviceEndpoint"`
	// The service resource Id.
	ServiceResourceId string `pulumi:"serviceResourceId"`
	// The ARM Id of the VMware site.
	VmwareSiteId string `pulumi:"vmwareSiteId"`
}

// VMwareV2 fabric specific details.
type VMwareV2FabricSpecificDetailsResponseOutput struct{ *pulumi.OutputState }

func (VMwareV2FabricSpecificDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMwareV2FabricSpecificDetailsResponse)(nil)).Elem()
}

func (o VMwareV2FabricSpecificDetailsResponseOutput) ToVMwareV2FabricSpecificDetailsResponseOutput() VMwareV2FabricSpecificDetailsResponseOutput {
	return o
}

func (o VMwareV2FabricSpecificDetailsResponseOutput) ToVMwareV2FabricSpecificDetailsResponseOutputWithContext(ctx context.Context) VMwareV2FabricSpecificDetailsResponseOutput {
	return o
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'VMwareV2'.
func (o VMwareV2FabricSpecificDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareV2FabricSpecificDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The Migration solution ARM Id.
func (o VMwareV2FabricSpecificDetailsResponseOutput) MigrationSolutionId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareV2FabricSpecificDetailsResponse) string { return v.MigrationSolutionId }).(pulumi.StringOutput)
}

// The ARM Id of the physical site.
func (o VMwareV2FabricSpecificDetailsResponseOutput) PhysicalSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareV2FabricSpecificDetailsResponse) string { return v.PhysicalSiteId }).(pulumi.StringOutput)
}

// The list of process servers.
func (o VMwareV2FabricSpecificDetailsResponseOutput) ProcessServers() ProcessServerDetailsResponseArrayOutput {
	return o.ApplyT(func(v VMwareV2FabricSpecificDetailsResponse) []ProcessServerDetailsResponse { return v.ProcessServers }).(ProcessServerDetailsResponseArrayOutput)
}

// The service container Id.
func (o VMwareV2FabricSpecificDetailsResponseOutput) ServiceContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareV2FabricSpecificDetailsResponse) string { return v.ServiceContainerId }).(pulumi.StringOutput)
}

// The service endpoint.
func (o VMwareV2FabricSpecificDetailsResponseOutput) ServiceEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareV2FabricSpecificDetailsResponse) string { return v.ServiceEndpoint }).(pulumi.StringOutput)
}

// The service resource Id.
func (o VMwareV2FabricSpecificDetailsResponseOutput) ServiceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareV2FabricSpecificDetailsResponse) string { return v.ServiceResourceId }).(pulumi.StringOutput)
}

// The ARM Id of the VMware site.
func (o VMwareV2FabricSpecificDetailsResponseOutput) VmwareSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v VMwareV2FabricSpecificDetailsResponse) string { return v.VmwareSiteId }).(pulumi.StringOutput)
}

type VMwareV2FabricSpecificDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (VMwareV2FabricSpecificDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMwareV2FabricSpecificDetailsResponse)(nil)).Elem()
}

func (o VMwareV2FabricSpecificDetailsResponsePtrOutput) ToVMwareV2FabricSpecificDetailsResponsePtrOutput() VMwareV2FabricSpecificDetailsResponsePtrOutput {
	return o
}

func (o VMwareV2FabricSpecificDetailsResponsePtrOutput) ToVMwareV2FabricSpecificDetailsResponsePtrOutputWithContext(ctx context.Context) VMwareV2FabricSpecificDetailsResponsePtrOutput {
	return o
}

func (o VMwareV2FabricSpecificDetailsResponsePtrOutput) Elem() VMwareV2FabricSpecificDetailsResponseOutput {
	return o.ApplyT(func(v *VMwareV2FabricSpecificDetailsResponse) VMwareV2FabricSpecificDetailsResponse {
		if v != nil {
			return *v
		}
		var ret VMwareV2FabricSpecificDetailsResponse
		return ret
	}).(VMwareV2FabricSpecificDetailsResponseOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'VMwareV2'.
func (o VMwareV2FabricSpecificDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareV2FabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The Migration solution ARM Id.
func (o VMwareV2FabricSpecificDetailsResponsePtrOutput) MigrationSolutionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareV2FabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MigrationSolutionId
	}).(pulumi.StringPtrOutput)
}

// The ARM Id of the physical site.
func (o VMwareV2FabricSpecificDetailsResponsePtrOutput) PhysicalSiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareV2FabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PhysicalSiteId
	}).(pulumi.StringPtrOutput)
}

// The list of process servers.
func (o VMwareV2FabricSpecificDetailsResponsePtrOutput) ProcessServers() ProcessServerDetailsResponseArrayOutput {
	return o.ApplyT(func(v *VMwareV2FabricSpecificDetailsResponse) []ProcessServerDetailsResponse {
		if v == nil {
			return nil
		}
		return v.ProcessServers
	}).(ProcessServerDetailsResponseArrayOutput)
}

// The service container Id.
func (o VMwareV2FabricSpecificDetailsResponsePtrOutput) ServiceContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareV2FabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceContainerId
	}).(pulumi.StringPtrOutput)
}

// The service endpoint.
func (o VMwareV2FabricSpecificDetailsResponsePtrOutput) ServiceEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareV2FabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceEndpoint
	}).(pulumi.StringPtrOutput)
}

// The service resource Id.
func (o VMwareV2FabricSpecificDetailsResponsePtrOutput) ServiceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareV2FabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceResourceId
	}).(pulumi.StringPtrOutput)
}

// The ARM Id of the VMware site.
func (o VMwareV2FabricSpecificDetailsResponsePtrOutput) VmwareSiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMwareV2FabricSpecificDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmwareSiteId
	}).(pulumi.StringPtrOutput)
}

// Private Endpoint Connection Response Properties.
type VaultPrivateEndpointConnectionResponse struct {
	// Group Ids for the Private Endpoint
	GroupIds []string `pulumi:"groupIds"`
	// The Private Endpoint network resource that is linked to the Private Endpoint connection.
	PrivateEndpoint PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// Gets or sets private link service connection state.
	PrivateLinkServiceConnectionState VaultPrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// Gets or sets provisioning state of the private endpoint connection.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Private Endpoint Connection Response Properties.
type VaultPrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (VaultPrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o VaultPrivateEndpointConnectionResponseOutput) ToVaultPrivateEndpointConnectionResponseOutput() VaultPrivateEndpointConnectionResponseOutput {
	return o
}

func (o VaultPrivateEndpointConnectionResponseOutput) ToVaultPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) VaultPrivateEndpointConnectionResponseOutput {
	return o
}

// Group Ids for the Private Endpoint
func (o VaultPrivateEndpointConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VaultPrivateEndpointConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection.
func (o VaultPrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v VaultPrivateEndpointConnectionResponse) PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponseOutput)
}

// Gets or sets private link service connection state.
func (o VaultPrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() VaultPrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v VaultPrivateEndpointConnectionResponse) VaultPrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(VaultPrivateLinkServiceConnectionStateResponseOutput)
}

// Gets or sets provisioning state of the private endpoint connection.
func (o VaultPrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets or sets private link service connection state.
type VaultPrivateLinkServiceConnectionStateResponse struct {
	// Gets or sets actions required.
	ActionsRequired string `pulumi:"actionsRequired"`
	// Gets or sets description.
	Description string `pulumi:"description"`
	// Gets or sets the status.
	Status string `pulumi:"status"`
}

// Gets or sets private link service connection state.
type VaultPrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (VaultPrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o VaultPrivateLinkServiceConnectionStateResponseOutput) ToVaultPrivateLinkServiceConnectionStateResponseOutput() VaultPrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o VaultPrivateLinkServiceConnectionStateResponseOutput) ToVaultPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) VaultPrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// Gets or sets actions required.
func (o VaultPrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPrivateLinkServiceConnectionStateResponse) string { return v.ActionsRequired }).(pulumi.StringOutput)
}

// Gets or sets description.
func (o VaultPrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPrivateLinkServiceConnectionStateResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Gets or sets the status.
func (o VaultPrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPrivateLinkServiceConnectionStateResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Properties of the vault.
type VaultProperties struct {
	// Customer Managed Key details of the resource.
	Encryption *VaultPropertiesEncryption `pulumi:"encryption"`
	// Monitoring Settings of the vault
	MonitoringSettings *MonitoringSettings `pulumi:"monitoringSettings"`
	// property to enable or disable resource provider inbound network traffic from public clients
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// Restore Settings of the vault
	RestoreSettings *RestoreSettings `pulumi:"restoreSettings"`
	// Security Settings of the vault
	SecuritySettings *SecuritySettings `pulumi:"securitySettings"`
}

// VaultPropertiesInput is an input type that accepts VaultPropertiesArgs and VaultPropertiesOutput values.
// You can construct a concrete instance of `VaultPropertiesInput` via:
//
//	VaultPropertiesArgs{...}
type VaultPropertiesInput interface {
	pulumi.Input

	ToVaultPropertiesOutput() VaultPropertiesOutput
	ToVaultPropertiesOutputWithContext(context.Context) VaultPropertiesOutput
}

// Properties of the vault.
type VaultPropertiesArgs struct {
	// Customer Managed Key details of the resource.
	Encryption VaultPropertiesEncryptionPtrInput `pulumi:"encryption"`
	// Monitoring Settings of the vault
	MonitoringSettings MonitoringSettingsPtrInput `pulumi:"monitoringSettings"`
	// property to enable or disable resource provider inbound network traffic from public clients
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
	// Restore Settings of the vault
	RestoreSettings RestoreSettingsPtrInput `pulumi:"restoreSettings"`
	// Security Settings of the vault
	SecuritySettings SecuritySettingsPtrInput `pulumi:"securitySettings"`
}

func (VaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultProperties)(nil)).Elem()
}

func (i VaultPropertiesArgs) ToVaultPropertiesOutput() VaultPropertiesOutput {
	return i.ToVaultPropertiesOutputWithContext(context.Background())
}

func (i VaultPropertiesArgs) ToVaultPropertiesOutputWithContext(ctx context.Context) VaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesOutput)
}

func (i VaultPropertiesArgs) ToVaultPropertiesPtrOutput() VaultPropertiesPtrOutput {
	return i.ToVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i VaultPropertiesArgs) ToVaultPropertiesPtrOutputWithContext(ctx context.Context) VaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesOutput).ToVaultPropertiesPtrOutputWithContext(ctx)
}

// VaultPropertiesPtrInput is an input type that accepts VaultPropertiesArgs, VaultPropertiesPtr and VaultPropertiesPtrOutput values.
// You can construct a concrete instance of `VaultPropertiesPtrInput` via:
//
//	        VaultPropertiesArgs{...}
//
//	or:
//
//	        nil
type VaultPropertiesPtrInput interface {
	pulumi.Input

	ToVaultPropertiesPtrOutput() VaultPropertiesPtrOutput
	ToVaultPropertiesPtrOutputWithContext(context.Context) VaultPropertiesPtrOutput
}

type vaultPropertiesPtrType VaultPropertiesArgs

func VaultPropertiesPtr(v *VaultPropertiesArgs) VaultPropertiesPtrInput {
	return (*vaultPropertiesPtrType)(v)
}

func (*vaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultProperties)(nil)).Elem()
}

func (i *vaultPropertiesPtrType) ToVaultPropertiesPtrOutput() VaultPropertiesPtrOutput {
	return i.ToVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *vaultPropertiesPtrType) ToVaultPropertiesPtrOutputWithContext(ctx context.Context) VaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesPtrOutput)
}

// Properties of the vault.
type VaultPropertiesOutput struct{ *pulumi.OutputState }

func (VaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultProperties)(nil)).Elem()
}

func (o VaultPropertiesOutput) ToVaultPropertiesOutput() VaultPropertiesOutput {
	return o
}

func (o VaultPropertiesOutput) ToVaultPropertiesOutputWithContext(ctx context.Context) VaultPropertiesOutput {
	return o
}

func (o VaultPropertiesOutput) ToVaultPropertiesPtrOutput() VaultPropertiesPtrOutput {
	return o.ToVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o VaultPropertiesOutput) ToVaultPropertiesPtrOutputWithContext(ctx context.Context) VaultPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VaultProperties) *VaultProperties {
		return &v
	}).(VaultPropertiesPtrOutput)
}

// Customer Managed Key details of the resource.
func (o VaultPropertiesOutput) Encryption() VaultPropertiesEncryptionPtrOutput {
	return o.ApplyT(func(v VaultProperties) *VaultPropertiesEncryption { return v.Encryption }).(VaultPropertiesEncryptionPtrOutput)
}

// Monitoring Settings of the vault
func (o VaultPropertiesOutput) MonitoringSettings() MonitoringSettingsPtrOutput {
	return o.ApplyT(func(v VaultProperties) *MonitoringSettings { return v.MonitoringSettings }).(MonitoringSettingsPtrOutput)
}

// property to enable or disable resource provider inbound network traffic from public clients
func (o VaultPropertiesOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultProperties) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// Restore Settings of the vault
func (o VaultPropertiesOutput) RestoreSettings() RestoreSettingsPtrOutput {
	return o.ApplyT(func(v VaultProperties) *RestoreSettings { return v.RestoreSettings }).(RestoreSettingsPtrOutput)
}

// Security Settings of the vault
func (o VaultPropertiesOutput) SecuritySettings() SecuritySettingsPtrOutput {
	return o.ApplyT(func(v VaultProperties) *SecuritySettings { return v.SecuritySettings }).(SecuritySettingsPtrOutput)
}

type VaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultProperties)(nil)).Elem()
}

func (o VaultPropertiesPtrOutput) ToVaultPropertiesPtrOutput() VaultPropertiesPtrOutput {
	return o
}

func (o VaultPropertiesPtrOutput) ToVaultPropertiesPtrOutputWithContext(ctx context.Context) VaultPropertiesPtrOutput {
	return o
}

func (o VaultPropertiesPtrOutput) Elem() VaultPropertiesOutput {
	return o.ApplyT(func(v *VaultProperties) VaultProperties {
		if v != nil {
			return *v
		}
		var ret VaultProperties
		return ret
	}).(VaultPropertiesOutput)
}

// Customer Managed Key details of the resource.
func (o VaultPropertiesPtrOutput) Encryption() VaultPropertiesEncryptionPtrOutput {
	return o.ApplyT(func(v *VaultProperties) *VaultPropertiesEncryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(VaultPropertiesEncryptionPtrOutput)
}

// Monitoring Settings of the vault
func (o VaultPropertiesPtrOutput) MonitoringSettings() MonitoringSettingsPtrOutput {
	return o.ApplyT(func(v *VaultProperties) *MonitoringSettings {
		if v == nil {
			return nil
		}
		return v.MonitoringSettings
	}).(MonitoringSettingsPtrOutput)
}

// property to enable or disable resource provider inbound network traffic from public clients
func (o VaultPropertiesPtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

// Restore Settings of the vault
func (o VaultPropertiesPtrOutput) RestoreSettings() RestoreSettingsPtrOutput {
	return o.ApplyT(func(v *VaultProperties) *RestoreSettings {
		if v == nil {
			return nil
		}
		return v.RestoreSettings
	}).(RestoreSettingsPtrOutput)
}

// Security Settings of the vault
func (o VaultPropertiesPtrOutput) SecuritySettings() SecuritySettingsPtrOutput {
	return o.ApplyT(func(v *VaultProperties) *SecuritySettings {
		if v == nil {
			return nil
		}
		return v.SecuritySettings
	}).(SecuritySettingsPtrOutput)
}

// Customer Managed Key details of the resource.
type VaultPropertiesEncryption struct {
	// Enabling/Disabling the Double Encryption state
	InfrastructureEncryption *string `pulumi:"infrastructureEncryption"`
	// The details of the identity used for CMK
	KekIdentity *CmkKekIdentity `pulumi:"kekIdentity"`
	// The properties of the Key Vault which hosts CMK
	KeyVaultProperties *CmkKeyVaultProperties `pulumi:"keyVaultProperties"`
}

// VaultPropertiesEncryptionInput is an input type that accepts VaultPropertiesEncryptionArgs and VaultPropertiesEncryptionOutput values.
// You can construct a concrete instance of `VaultPropertiesEncryptionInput` via:
//
//	VaultPropertiesEncryptionArgs{...}
type VaultPropertiesEncryptionInput interface {
	pulumi.Input

	ToVaultPropertiesEncryptionOutput() VaultPropertiesEncryptionOutput
	ToVaultPropertiesEncryptionOutputWithContext(context.Context) VaultPropertiesEncryptionOutput
}

// Customer Managed Key details of the resource.
type VaultPropertiesEncryptionArgs struct {
	// Enabling/Disabling the Double Encryption state
	InfrastructureEncryption pulumi.StringPtrInput `pulumi:"infrastructureEncryption"`
	// The details of the identity used for CMK
	KekIdentity CmkKekIdentityPtrInput `pulumi:"kekIdentity"`
	// The properties of the Key Vault which hosts CMK
	KeyVaultProperties CmkKeyVaultPropertiesPtrInput `pulumi:"keyVaultProperties"`
}

func (VaultPropertiesEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesEncryption)(nil)).Elem()
}

func (i VaultPropertiesEncryptionArgs) ToVaultPropertiesEncryptionOutput() VaultPropertiesEncryptionOutput {
	return i.ToVaultPropertiesEncryptionOutputWithContext(context.Background())
}

func (i VaultPropertiesEncryptionArgs) ToVaultPropertiesEncryptionOutputWithContext(ctx context.Context) VaultPropertiesEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesEncryptionOutput)
}

func (i VaultPropertiesEncryptionArgs) ToVaultPropertiesEncryptionPtrOutput() VaultPropertiesEncryptionPtrOutput {
	return i.ToVaultPropertiesEncryptionPtrOutputWithContext(context.Background())
}

func (i VaultPropertiesEncryptionArgs) ToVaultPropertiesEncryptionPtrOutputWithContext(ctx context.Context) VaultPropertiesEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesEncryptionOutput).ToVaultPropertiesEncryptionPtrOutputWithContext(ctx)
}

// VaultPropertiesEncryptionPtrInput is an input type that accepts VaultPropertiesEncryptionArgs, VaultPropertiesEncryptionPtr and VaultPropertiesEncryptionPtrOutput values.
// You can construct a concrete instance of `VaultPropertiesEncryptionPtrInput` via:
//
//	        VaultPropertiesEncryptionArgs{...}
//
//	or:
//
//	        nil
type VaultPropertiesEncryptionPtrInput interface {
	pulumi.Input

	ToVaultPropertiesEncryptionPtrOutput() VaultPropertiesEncryptionPtrOutput
	ToVaultPropertiesEncryptionPtrOutputWithContext(context.Context) VaultPropertiesEncryptionPtrOutput
}

type vaultPropertiesEncryptionPtrType VaultPropertiesEncryptionArgs

func VaultPropertiesEncryptionPtr(v *VaultPropertiesEncryptionArgs) VaultPropertiesEncryptionPtrInput {
	return (*vaultPropertiesEncryptionPtrType)(v)
}

func (*vaultPropertiesEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesEncryption)(nil)).Elem()
}

func (i *vaultPropertiesEncryptionPtrType) ToVaultPropertiesEncryptionPtrOutput() VaultPropertiesEncryptionPtrOutput {
	return i.ToVaultPropertiesEncryptionPtrOutputWithContext(context.Background())
}

func (i *vaultPropertiesEncryptionPtrType) ToVaultPropertiesEncryptionPtrOutputWithContext(ctx context.Context) VaultPropertiesEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesEncryptionPtrOutput)
}

// Customer Managed Key details of the resource.
type VaultPropertiesEncryptionOutput struct{ *pulumi.OutputState }

func (VaultPropertiesEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesEncryption)(nil)).Elem()
}

func (o VaultPropertiesEncryptionOutput) ToVaultPropertiesEncryptionOutput() VaultPropertiesEncryptionOutput {
	return o
}

func (o VaultPropertiesEncryptionOutput) ToVaultPropertiesEncryptionOutputWithContext(ctx context.Context) VaultPropertiesEncryptionOutput {
	return o
}

func (o VaultPropertiesEncryptionOutput) ToVaultPropertiesEncryptionPtrOutput() VaultPropertiesEncryptionPtrOutput {
	return o.ToVaultPropertiesEncryptionPtrOutputWithContext(context.Background())
}

func (o VaultPropertiesEncryptionOutput) ToVaultPropertiesEncryptionPtrOutputWithContext(ctx context.Context) VaultPropertiesEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VaultPropertiesEncryption) *VaultPropertiesEncryption {
		return &v
	}).(VaultPropertiesEncryptionPtrOutput)
}

// Enabling/Disabling the Double Encryption state
func (o VaultPropertiesEncryptionOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultPropertiesEncryption) *string { return v.InfrastructureEncryption }).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
func (o VaultPropertiesEncryptionOutput) KekIdentity() CmkKekIdentityPtrOutput {
	return o.ApplyT(func(v VaultPropertiesEncryption) *CmkKekIdentity { return v.KekIdentity }).(CmkKekIdentityPtrOutput)
}

// The properties of the Key Vault which hosts CMK
func (o VaultPropertiesEncryptionOutput) KeyVaultProperties() CmkKeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v VaultPropertiesEncryption) *CmkKeyVaultProperties { return v.KeyVaultProperties }).(CmkKeyVaultPropertiesPtrOutput)
}

type VaultPropertiesEncryptionPtrOutput struct{ *pulumi.OutputState }

func (VaultPropertiesEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesEncryption)(nil)).Elem()
}

func (o VaultPropertiesEncryptionPtrOutput) ToVaultPropertiesEncryptionPtrOutput() VaultPropertiesEncryptionPtrOutput {
	return o
}

func (o VaultPropertiesEncryptionPtrOutput) ToVaultPropertiesEncryptionPtrOutputWithContext(ctx context.Context) VaultPropertiesEncryptionPtrOutput {
	return o
}

func (o VaultPropertiesEncryptionPtrOutput) Elem() VaultPropertiesEncryptionOutput {
	return o.ApplyT(func(v *VaultPropertiesEncryption) VaultPropertiesEncryption {
		if v != nil {
			return *v
		}
		var ret VaultPropertiesEncryption
		return ret
	}).(VaultPropertiesEncryptionOutput)
}

// Enabling/Disabling the Double Encryption state
func (o VaultPropertiesEncryptionPtrOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesEncryption) *string {
		if v == nil {
			return nil
		}
		return v.InfrastructureEncryption
	}).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
func (o VaultPropertiesEncryptionPtrOutput) KekIdentity() CmkKekIdentityPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesEncryption) *CmkKekIdentity {
		if v == nil {
			return nil
		}
		return v.KekIdentity
	}).(CmkKekIdentityPtrOutput)
}

// The properties of the Key Vault which hosts CMK
func (o VaultPropertiesEncryptionPtrOutput) KeyVaultProperties() CmkKeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesEncryption) *CmkKeyVaultProperties {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(CmkKeyVaultPropertiesPtrOutput)
}

// Properties of the vault.
type VaultPropertiesResponse struct {
	// Backup storage version
	BackupStorageVersion string `pulumi:"backupStorageVersion"`
	// Customer Managed Key details of the resource.
	Encryption *VaultPropertiesResponseEncryption `pulumi:"encryption"`
	// Monitoring Settings of the vault
	MonitoringSettings *MonitoringSettingsResponse `pulumi:"monitoringSettings"`
	// The details of the latest move operation performed on the Azure Resource
	MoveDetails *VaultPropertiesResponseMoveDetails `pulumi:"moveDetails"`
	// The State of the Resource after the move operation
	MoveState string `pulumi:"moveState"`
	// List of private endpoint connection.
	PrivateEndpointConnections []PrivateEndpointConnectionVaultPropertiesResponse `pulumi:"privateEndpointConnections"`
	// Private endpoint state for backup.
	PrivateEndpointStateForBackup string `pulumi:"privateEndpointStateForBackup"`
	// Private endpoint state for site recovery.
	PrivateEndpointStateForSiteRecovery string `pulumi:"privateEndpointStateForSiteRecovery"`
	// Provisioning State.
	ProvisioningState string `pulumi:"provisioningState"`
	// property to enable or disable resource provider inbound network traffic from public clients
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The redundancy Settings of a Vault
	RedundancySettings *VaultPropertiesResponseRedundancySettings `pulumi:"redundancySettings"`
	// Restore Settings of the vault
	RestoreSettings *RestoreSettingsResponse `pulumi:"restoreSettings"`
	// Secure Score of Recovery Services Vault
	SecureScore string `pulumi:"secureScore"`
	// Security Settings of the vault
	SecuritySettings *SecuritySettingsResponse `pulumi:"securitySettings"`
	// Details for upgrading vault.
	UpgradeDetails *UpgradeDetailsResponse `pulumi:"upgradeDetails"`
}

// Properties of the vault.
type VaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesResponse)(nil)).Elem()
}

func (o VaultPropertiesResponseOutput) ToVaultPropertiesResponseOutput() VaultPropertiesResponseOutput {
	return o
}

func (o VaultPropertiesResponseOutput) ToVaultPropertiesResponseOutputWithContext(ctx context.Context) VaultPropertiesResponseOutput {
	return o
}

// Backup storage version
func (o VaultPropertiesResponseOutput) BackupStorageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.BackupStorageVersion }).(pulumi.StringOutput)
}

// Customer Managed Key details of the resource.
func (o VaultPropertiesResponseOutput) Encryption() VaultPropertiesResponseEncryptionPtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *VaultPropertiesResponseEncryption { return v.Encryption }).(VaultPropertiesResponseEncryptionPtrOutput)
}

// Monitoring Settings of the vault
func (o VaultPropertiesResponseOutput) MonitoringSettings() MonitoringSettingsResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *MonitoringSettingsResponse { return v.MonitoringSettings }).(MonitoringSettingsResponsePtrOutput)
}

// The details of the latest move operation performed on the Azure Resource
func (o VaultPropertiesResponseOutput) MoveDetails() VaultPropertiesResponseMoveDetailsPtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *VaultPropertiesResponseMoveDetails { return v.MoveDetails }).(VaultPropertiesResponseMoveDetailsPtrOutput)
}

// The State of the Resource after the move operation
func (o VaultPropertiesResponseOutput) MoveState() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.MoveState }).(pulumi.StringOutput)
}

// List of private endpoint connection.
func (o VaultPropertiesResponseOutput) PrivateEndpointConnections() PrivateEndpointConnectionVaultPropertiesResponseArrayOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) []PrivateEndpointConnectionVaultPropertiesResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionVaultPropertiesResponseArrayOutput)
}

// Private endpoint state for backup.
func (o VaultPropertiesResponseOutput) PrivateEndpointStateForBackup() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.PrivateEndpointStateForBackup }).(pulumi.StringOutput)
}

// Private endpoint state for site recovery.
func (o VaultPropertiesResponseOutput) PrivateEndpointStateForSiteRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.PrivateEndpointStateForSiteRecovery }).(pulumi.StringOutput)
}

// Provisioning State.
func (o VaultPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// property to enable or disable resource provider inbound network traffic from public clients
func (o VaultPropertiesResponseOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// The redundancy Settings of a Vault
func (o VaultPropertiesResponseOutput) RedundancySettings() VaultPropertiesResponseRedundancySettingsPtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *VaultPropertiesResponseRedundancySettings {
		return v.RedundancySettings
	}).(VaultPropertiesResponseRedundancySettingsPtrOutput)
}

// Restore Settings of the vault
func (o VaultPropertiesResponseOutput) RestoreSettings() RestoreSettingsResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *RestoreSettingsResponse { return v.RestoreSettings }).(RestoreSettingsResponsePtrOutput)
}

// Secure Score of Recovery Services Vault
func (o VaultPropertiesResponseOutput) SecureScore() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.SecureScore }).(pulumi.StringOutput)
}

// Security Settings of the vault
func (o VaultPropertiesResponseOutput) SecuritySettings() SecuritySettingsResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *SecuritySettingsResponse { return v.SecuritySettings }).(SecuritySettingsResponsePtrOutput)
}

// Details for upgrading vault.
func (o VaultPropertiesResponseOutput) UpgradeDetails() UpgradeDetailsResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *UpgradeDetailsResponse { return v.UpgradeDetails }).(UpgradeDetailsResponsePtrOutput)
}

// Customer Managed Key details of the resource.
type VaultPropertiesResponseEncryption struct {
	// Enabling/Disabling the Double Encryption state
	InfrastructureEncryption *string `pulumi:"infrastructureEncryption"`
	// The details of the identity used for CMK
	KekIdentity *CmkKekIdentityResponse `pulumi:"kekIdentity"`
	// The properties of the Key Vault which hosts CMK
	KeyVaultProperties *CmkKeyVaultPropertiesResponse `pulumi:"keyVaultProperties"`
}

// Customer Managed Key details of the resource.
type VaultPropertiesResponseEncryptionOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesResponseEncryption)(nil)).Elem()
}

func (o VaultPropertiesResponseEncryptionOutput) ToVaultPropertiesResponseEncryptionOutput() VaultPropertiesResponseEncryptionOutput {
	return o
}

func (o VaultPropertiesResponseEncryptionOutput) ToVaultPropertiesResponseEncryptionOutputWithContext(ctx context.Context) VaultPropertiesResponseEncryptionOutput {
	return o
}

// Enabling/Disabling the Double Encryption state
func (o VaultPropertiesResponseEncryptionOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponseEncryption) *string { return v.InfrastructureEncryption }).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
func (o VaultPropertiesResponseEncryptionOutput) KekIdentity() CmkKekIdentityResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponseEncryption) *CmkKekIdentityResponse { return v.KekIdentity }).(CmkKekIdentityResponsePtrOutput)
}

// The properties of the Key Vault which hosts CMK
func (o VaultPropertiesResponseEncryptionOutput) KeyVaultProperties() CmkKeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponseEncryption) *CmkKeyVaultPropertiesResponse { return v.KeyVaultProperties }).(CmkKeyVaultPropertiesResponsePtrOutput)
}

type VaultPropertiesResponseEncryptionPtrOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesResponseEncryption)(nil)).Elem()
}

func (o VaultPropertiesResponseEncryptionPtrOutput) ToVaultPropertiesResponseEncryptionPtrOutput() VaultPropertiesResponseEncryptionPtrOutput {
	return o
}

func (o VaultPropertiesResponseEncryptionPtrOutput) ToVaultPropertiesResponseEncryptionPtrOutputWithContext(ctx context.Context) VaultPropertiesResponseEncryptionPtrOutput {
	return o
}

func (o VaultPropertiesResponseEncryptionPtrOutput) Elem() VaultPropertiesResponseEncryptionOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseEncryption) VaultPropertiesResponseEncryption {
		if v != nil {
			return *v
		}
		var ret VaultPropertiesResponseEncryption
		return ret
	}).(VaultPropertiesResponseEncryptionOutput)
}

// Enabling/Disabling the Double Encryption state
func (o VaultPropertiesResponseEncryptionPtrOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseEncryption) *string {
		if v == nil {
			return nil
		}
		return v.InfrastructureEncryption
	}).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
func (o VaultPropertiesResponseEncryptionPtrOutput) KekIdentity() CmkKekIdentityResponsePtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseEncryption) *CmkKekIdentityResponse {
		if v == nil {
			return nil
		}
		return v.KekIdentity
	}).(CmkKekIdentityResponsePtrOutput)
}

// The properties of the Key Vault which hosts CMK
func (o VaultPropertiesResponseEncryptionPtrOutput) KeyVaultProperties() CmkKeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseEncryption) *CmkKeyVaultPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(CmkKeyVaultPropertiesResponsePtrOutput)
}

// The details of the latest move operation performed on the Azure Resource
type VaultPropertiesResponseMoveDetails struct {
	// End Time of the Resource Move Operation
	CompletionTimeUtc string `pulumi:"completionTimeUtc"`
	// OperationId of the Resource Move Operation
	OperationId string `pulumi:"operationId"`
	// Source Resource of the Resource Move Operation
	SourceResourceId string `pulumi:"sourceResourceId"`
	// Start Time of the Resource Move Operation
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// Target Resource of the Resource Move Operation
	TargetResourceId string `pulumi:"targetResourceId"`
}

// The details of the latest move operation performed on the Azure Resource
type VaultPropertiesResponseMoveDetailsOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseMoveDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesResponseMoveDetails)(nil)).Elem()
}

func (o VaultPropertiesResponseMoveDetailsOutput) ToVaultPropertiesResponseMoveDetailsOutput() VaultPropertiesResponseMoveDetailsOutput {
	return o
}

func (o VaultPropertiesResponseMoveDetailsOutput) ToVaultPropertiesResponseMoveDetailsOutputWithContext(ctx context.Context) VaultPropertiesResponseMoveDetailsOutput {
	return o
}

// End Time of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsOutput) CompletionTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseMoveDetails) string { return v.CompletionTimeUtc }).(pulumi.StringOutput)
}

// OperationId of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsOutput) OperationId() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseMoveDetails) string { return v.OperationId }).(pulumi.StringOutput)
}

// Source Resource of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsOutput) SourceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseMoveDetails) string { return v.SourceResourceId }).(pulumi.StringOutput)
}

// Start Time of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsOutput) StartTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseMoveDetails) string { return v.StartTimeUtc }).(pulumi.StringOutput)
}

// Target Resource of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseMoveDetails) string { return v.TargetResourceId }).(pulumi.StringOutput)
}

type VaultPropertiesResponseMoveDetailsPtrOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseMoveDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesResponseMoveDetails)(nil)).Elem()
}

func (o VaultPropertiesResponseMoveDetailsPtrOutput) ToVaultPropertiesResponseMoveDetailsPtrOutput() VaultPropertiesResponseMoveDetailsPtrOutput {
	return o
}

func (o VaultPropertiesResponseMoveDetailsPtrOutput) ToVaultPropertiesResponseMoveDetailsPtrOutputWithContext(ctx context.Context) VaultPropertiesResponseMoveDetailsPtrOutput {
	return o
}

func (o VaultPropertiesResponseMoveDetailsPtrOutput) Elem() VaultPropertiesResponseMoveDetailsOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) VaultPropertiesResponseMoveDetails {
		if v != nil {
			return *v
		}
		var ret VaultPropertiesResponseMoveDetails
		return ret
	}).(VaultPropertiesResponseMoveDetailsOutput)
}

// End Time of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsPtrOutput) CompletionTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) *string {
		if v == nil {
			return nil
		}
		return &v.CompletionTimeUtc
	}).(pulumi.StringPtrOutput)
}

// OperationId of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsPtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) *string {
		if v == nil {
			return nil
		}
		return &v.OperationId
	}).(pulumi.StringPtrOutput)
}

// Source Resource of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) *string {
		if v == nil {
			return nil
		}
		return &v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Start Time of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsPtrOutput) StartTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) *string {
		if v == nil {
			return nil
		}
		return &v.StartTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Target Resource of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsPtrOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) *string {
		if v == nil {
			return nil
		}
		return &v.TargetResourceId
	}).(pulumi.StringPtrOutput)
}

// The redundancy Settings of a Vault
type VaultPropertiesResponseRedundancySettings struct {
	// Flag to show if Cross Region Restore is enabled on the Vault or not
	CrossRegionRestore string `pulumi:"crossRegionRestore"`
	// The storage redundancy setting of a vault
	StandardTierStorageRedundancy string `pulumi:"standardTierStorageRedundancy"`
}

// The redundancy Settings of a Vault
type VaultPropertiesResponseRedundancySettingsOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseRedundancySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesResponseRedundancySettings)(nil)).Elem()
}

func (o VaultPropertiesResponseRedundancySettingsOutput) ToVaultPropertiesResponseRedundancySettingsOutput() VaultPropertiesResponseRedundancySettingsOutput {
	return o
}

func (o VaultPropertiesResponseRedundancySettingsOutput) ToVaultPropertiesResponseRedundancySettingsOutputWithContext(ctx context.Context) VaultPropertiesResponseRedundancySettingsOutput {
	return o
}

// Flag to show if Cross Region Restore is enabled on the Vault or not
func (o VaultPropertiesResponseRedundancySettingsOutput) CrossRegionRestore() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseRedundancySettings) string { return v.CrossRegionRestore }).(pulumi.StringOutput)
}

// The storage redundancy setting of a vault
func (o VaultPropertiesResponseRedundancySettingsOutput) StandardTierStorageRedundancy() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseRedundancySettings) string { return v.StandardTierStorageRedundancy }).(pulumi.StringOutput)
}

type VaultPropertiesResponseRedundancySettingsPtrOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseRedundancySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesResponseRedundancySettings)(nil)).Elem()
}

func (o VaultPropertiesResponseRedundancySettingsPtrOutput) ToVaultPropertiesResponseRedundancySettingsPtrOutput() VaultPropertiesResponseRedundancySettingsPtrOutput {
	return o
}

func (o VaultPropertiesResponseRedundancySettingsPtrOutput) ToVaultPropertiesResponseRedundancySettingsPtrOutputWithContext(ctx context.Context) VaultPropertiesResponseRedundancySettingsPtrOutput {
	return o
}

func (o VaultPropertiesResponseRedundancySettingsPtrOutput) Elem() VaultPropertiesResponseRedundancySettingsOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseRedundancySettings) VaultPropertiesResponseRedundancySettings {
		if v != nil {
			return *v
		}
		var ret VaultPropertiesResponseRedundancySettings
		return ret
	}).(VaultPropertiesResponseRedundancySettingsOutput)
}

// Flag to show if Cross Region Restore is enabled on the Vault or not
func (o VaultPropertiesResponseRedundancySettingsPtrOutput) CrossRegionRestore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseRedundancySettings) *string {
		if v == nil {
			return nil
		}
		return &v.CrossRegionRestore
	}).(pulumi.StringPtrOutput)
}

// The storage redundancy setting of a vault
func (o VaultPropertiesResponseRedundancySettingsPtrOutput) StandardTierStorageRedundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseRedundancySettings) *string {
		if v == nil {
			return nil
		}
		return &v.StandardTierStorageRedundancy
	}).(pulumi.StringPtrOutput)
}

// Vault retention policy for AzureFileShare
type VaultRetentionPolicy struct {
	SnapshotRetentionInDays int `pulumi:"snapshotRetentionInDays"`
	// Base class for retention policy.
	VaultRetention interface{} `pulumi:"vaultRetention"`
}

// VaultRetentionPolicyInput is an input type that accepts VaultRetentionPolicyArgs and VaultRetentionPolicyOutput values.
// You can construct a concrete instance of `VaultRetentionPolicyInput` via:
//
//	VaultRetentionPolicyArgs{...}
type VaultRetentionPolicyInput interface {
	pulumi.Input

	ToVaultRetentionPolicyOutput() VaultRetentionPolicyOutput
	ToVaultRetentionPolicyOutputWithContext(context.Context) VaultRetentionPolicyOutput
}

// Vault retention policy for AzureFileShare
type VaultRetentionPolicyArgs struct {
	SnapshotRetentionInDays pulumi.IntInput `pulumi:"snapshotRetentionInDays"`
	// Base class for retention policy.
	VaultRetention pulumi.Input `pulumi:"vaultRetention"`
}

func (VaultRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultRetentionPolicy)(nil)).Elem()
}

func (i VaultRetentionPolicyArgs) ToVaultRetentionPolicyOutput() VaultRetentionPolicyOutput {
	return i.ToVaultRetentionPolicyOutputWithContext(context.Background())
}

func (i VaultRetentionPolicyArgs) ToVaultRetentionPolicyOutputWithContext(ctx context.Context) VaultRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultRetentionPolicyOutput)
}

func (i VaultRetentionPolicyArgs) ToVaultRetentionPolicyPtrOutput() VaultRetentionPolicyPtrOutput {
	return i.ToVaultRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i VaultRetentionPolicyArgs) ToVaultRetentionPolicyPtrOutputWithContext(ctx context.Context) VaultRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultRetentionPolicyOutput).ToVaultRetentionPolicyPtrOutputWithContext(ctx)
}

// VaultRetentionPolicyPtrInput is an input type that accepts VaultRetentionPolicyArgs, VaultRetentionPolicyPtr and VaultRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `VaultRetentionPolicyPtrInput` via:
//
//	        VaultRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type VaultRetentionPolicyPtrInput interface {
	pulumi.Input

	ToVaultRetentionPolicyPtrOutput() VaultRetentionPolicyPtrOutput
	ToVaultRetentionPolicyPtrOutputWithContext(context.Context) VaultRetentionPolicyPtrOutput
}

type vaultRetentionPolicyPtrType VaultRetentionPolicyArgs

func VaultRetentionPolicyPtr(v *VaultRetentionPolicyArgs) VaultRetentionPolicyPtrInput {
	return (*vaultRetentionPolicyPtrType)(v)
}

func (*vaultRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultRetentionPolicy)(nil)).Elem()
}

func (i *vaultRetentionPolicyPtrType) ToVaultRetentionPolicyPtrOutput() VaultRetentionPolicyPtrOutput {
	return i.ToVaultRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *vaultRetentionPolicyPtrType) ToVaultRetentionPolicyPtrOutputWithContext(ctx context.Context) VaultRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultRetentionPolicyPtrOutput)
}

// Vault retention policy for AzureFileShare
type VaultRetentionPolicyOutput struct{ *pulumi.OutputState }

func (VaultRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultRetentionPolicy)(nil)).Elem()
}

func (o VaultRetentionPolicyOutput) ToVaultRetentionPolicyOutput() VaultRetentionPolicyOutput {
	return o
}

func (o VaultRetentionPolicyOutput) ToVaultRetentionPolicyOutputWithContext(ctx context.Context) VaultRetentionPolicyOutput {
	return o
}

func (o VaultRetentionPolicyOutput) ToVaultRetentionPolicyPtrOutput() VaultRetentionPolicyPtrOutput {
	return o.ToVaultRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o VaultRetentionPolicyOutput) ToVaultRetentionPolicyPtrOutputWithContext(ctx context.Context) VaultRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VaultRetentionPolicy) *VaultRetentionPolicy {
		return &v
	}).(VaultRetentionPolicyPtrOutput)
}

func (o VaultRetentionPolicyOutput) SnapshotRetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v VaultRetentionPolicy) int { return v.SnapshotRetentionInDays }).(pulumi.IntOutput)
}

// Base class for retention policy.
func (o VaultRetentionPolicyOutput) VaultRetention() pulumi.AnyOutput {
	return o.ApplyT(func(v VaultRetentionPolicy) interface{} { return v.VaultRetention }).(pulumi.AnyOutput)
}

type VaultRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (VaultRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultRetentionPolicy)(nil)).Elem()
}

func (o VaultRetentionPolicyPtrOutput) ToVaultRetentionPolicyPtrOutput() VaultRetentionPolicyPtrOutput {
	return o
}

func (o VaultRetentionPolicyPtrOutput) ToVaultRetentionPolicyPtrOutputWithContext(ctx context.Context) VaultRetentionPolicyPtrOutput {
	return o
}

func (o VaultRetentionPolicyPtrOutput) Elem() VaultRetentionPolicyOutput {
	return o.ApplyT(func(v *VaultRetentionPolicy) VaultRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret VaultRetentionPolicy
		return ret
	}).(VaultRetentionPolicyOutput)
}

func (o VaultRetentionPolicyPtrOutput) SnapshotRetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VaultRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.SnapshotRetentionInDays
	}).(pulumi.IntPtrOutput)
}

// Base class for retention policy.
func (o VaultRetentionPolicyPtrOutput) VaultRetention() pulumi.AnyOutput {
	return o.ApplyT(func(v *VaultRetentionPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.VaultRetention
	}).(pulumi.AnyOutput)
}

// Vault retention policy for AzureFileShare
type VaultRetentionPolicyResponse struct {
	SnapshotRetentionInDays int `pulumi:"snapshotRetentionInDays"`
	// Base class for retention policy.
	VaultRetention interface{} `pulumi:"vaultRetention"`
}

// Vault retention policy for AzureFileShare
type VaultRetentionPolicyResponseOutput struct{ *pulumi.OutputState }

func (VaultRetentionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultRetentionPolicyResponse)(nil)).Elem()
}

func (o VaultRetentionPolicyResponseOutput) ToVaultRetentionPolicyResponseOutput() VaultRetentionPolicyResponseOutput {
	return o
}

func (o VaultRetentionPolicyResponseOutput) ToVaultRetentionPolicyResponseOutputWithContext(ctx context.Context) VaultRetentionPolicyResponseOutput {
	return o
}

func (o VaultRetentionPolicyResponseOutput) SnapshotRetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v VaultRetentionPolicyResponse) int { return v.SnapshotRetentionInDays }).(pulumi.IntOutput)
}

// Base class for retention policy.
func (o VaultRetentionPolicyResponseOutput) VaultRetention() pulumi.AnyOutput {
	return o.ApplyT(func(v VaultRetentionPolicyResponse) interface{} { return v.VaultRetention }).(pulumi.AnyOutput)
}

type VaultRetentionPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (VaultRetentionPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultRetentionPolicyResponse)(nil)).Elem()
}

func (o VaultRetentionPolicyResponsePtrOutput) ToVaultRetentionPolicyResponsePtrOutput() VaultRetentionPolicyResponsePtrOutput {
	return o
}

func (o VaultRetentionPolicyResponsePtrOutput) ToVaultRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) VaultRetentionPolicyResponsePtrOutput {
	return o
}

func (o VaultRetentionPolicyResponsePtrOutput) Elem() VaultRetentionPolicyResponseOutput {
	return o.ApplyT(func(v *VaultRetentionPolicyResponse) VaultRetentionPolicyResponse {
		if v != nil {
			return *v
		}
		var ret VaultRetentionPolicyResponse
		return ret
	}).(VaultRetentionPolicyResponseOutput)
}

func (o VaultRetentionPolicyResponsePtrOutput) SnapshotRetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VaultRetentionPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return &v.SnapshotRetentionInDays
	}).(pulumi.IntPtrOutput)
}

// Base class for retention policy.
func (o VaultRetentionPolicyResponsePtrOutput) VaultRetention() pulumi.AnyOutput {
	return o.ApplyT(func(v *VaultRetentionPolicyResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.VaultRetention
	}).(pulumi.AnyOutput)
}

// Version related details.
type VersionDetailsResponse struct {
	// Version expiry date.
	ExpiryDate *string `pulumi:"expiryDate"`
	// A value indicating whether security update required.
	Status *string `pulumi:"status"`
	// The agent version.
	Version *string `pulumi:"version"`
}

// Version related details.
type VersionDetailsResponseOutput struct{ *pulumi.OutputState }

func (VersionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VersionDetailsResponse)(nil)).Elem()
}

func (o VersionDetailsResponseOutput) ToVersionDetailsResponseOutput() VersionDetailsResponseOutput {
	return o
}

func (o VersionDetailsResponseOutput) ToVersionDetailsResponseOutputWithContext(ctx context.Context) VersionDetailsResponseOutput {
	return o
}

// Version expiry date.
func (o VersionDetailsResponseOutput) ExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VersionDetailsResponse) *string { return v.ExpiryDate }).(pulumi.StringPtrOutput)
}

// A value indicating whether security update required.
func (o VersionDetailsResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VersionDetailsResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The agent version.
func (o VersionDetailsResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VersionDetailsResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type VersionDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (VersionDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VersionDetailsResponse)(nil)).Elem()
}

func (o VersionDetailsResponsePtrOutput) ToVersionDetailsResponsePtrOutput() VersionDetailsResponsePtrOutput {
	return o
}

func (o VersionDetailsResponsePtrOutput) ToVersionDetailsResponsePtrOutputWithContext(ctx context.Context) VersionDetailsResponsePtrOutput {
	return o
}

func (o VersionDetailsResponsePtrOutput) Elem() VersionDetailsResponseOutput {
	return o.ApplyT(func(v *VersionDetailsResponse) VersionDetailsResponse {
		if v != nil {
			return *v
		}
		var ret VersionDetailsResponse
		return ret
	}).(VersionDetailsResponseOutput)
}

// Version expiry date.
func (o VersionDetailsResponsePtrOutput) ExpiryDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VersionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExpiryDate
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether security update required.
func (o VersionDetailsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VersionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The agent version.
func (o VersionDetailsResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VersionDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// VMM fabric specific details.
type VmmDetailsResponse struct {
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'VMM'.
	InstanceType string `pulumi:"instanceType"`
}

// VMM fabric specific details.
type VmmDetailsResponseOutput struct{ *pulumi.OutputState }

func (VmmDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmDetailsResponse)(nil)).Elem()
}

func (o VmmDetailsResponseOutput) ToVmmDetailsResponseOutput() VmmDetailsResponseOutput {
	return o
}

func (o VmmDetailsResponseOutput) ToVmmDetailsResponseOutputWithContext(ctx context.Context) VmmDetailsResponseOutput {
	return o
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'VMM'.
func (o VmmDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VmmDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

type VmmDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (VmmDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmmDetailsResponse)(nil)).Elem()
}

func (o VmmDetailsResponsePtrOutput) ToVmmDetailsResponsePtrOutput() VmmDetailsResponsePtrOutput {
	return o
}

func (o VmmDetailsResponsePtrOutput) ToVmmDetailsResponsePtrOutputWithContext(ctx context.Context) VmmDetailsResponsePtrOutput {
	return o
}

func (o VmmDetailsResponsePtrOutput) Elem() VmmDetailsResponseOutput {
	return o.ApplyT(func(v *VmmDetailsResponse) VmmDetailsResponse {
		if v != nil {
			return *v
		}
		var ret VmmDetailsResponse
		return ret
	}).(VmmDetailsResponseOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'VMM'.
func (o VmmDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmmDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// Create network mappings input properties/behavior specific to Vmm to Azure Network mapping.
type VmmToAzureCreateNetworkMappingInput struct {
	// The instance type.
	// Expected value is 'VmmToAzure'.
	InstanceType string `pulumi:"instanceType"`
}

// VmmToAzureCreateNetworkMappingInputInput is an input type that accepts VmmToAzureCreateNetworkMappingInputArgs and VmmToAzureCreateNetworkMappingInputOutput values.
// You can construct a concrete instance of `VmmToAzureCreateNetworkMappingInputInput` via:
//
//	VmmToAzureCreateNetworkMappingInputArgs{...}
type VmmToAzureCreateNetworkMappingInputInput interface {
	pulumi.Input

	ToVmmToAzureCreateNetworkMappingInputOutput() VmmToAzureCreateNetworkMappingInputOutput
	ToVmmToAzureCreateNetworkMappingInputOutputWithContext(context.Context) VmmToAzureCreateNetworkMappingInputOutput
}

// Create network mappings input properties/behavior specific to Vmm to Azure Network mapping.
type VmmToAzureCreateNetworkMappingInputArgs struct {
	// The instance type.
	// Expected value is 'VmmToAzure'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
}

func (VmmToAzureCreateNetworkMappingInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmToAzureCreateNetworkMappingInput)(nil)).Elem()
}

func (i VmmToAzureCreateNetworkMappingInputArgs) ToVmmToAzureCreateNetworkMappingInputOutput() VmmToAzureCreateNetworkMappingInputOutput {
	return i.ToVmmToAzureCreateNetworkMappingInputOutputWithContext(context.Background())
}

func (i VmmToAzureCreateNetworkMappingInputArgs) ToVmmToAzureCreateNetworkMappingInputOutputWithContext(ctx context.Context) VmmToAzureCreateNetworkMappingInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmmToAzureCreateNetworkMappingInputOutput)
}

func (i VmmToAzureCreateNetworkMappingInputArgs) ToVmmToAzureCreateNetworkMappingInputPtrOutput() VmmToAzureCreateNetworkMappingInputPtrOutput {
	return i.ToVmmToAzureCreateNetworkMappingInputPtrOutputWithContext(context.Background())
}

func (i VmmToAzureCreateNetworkMappingInputArgs) ToVmmToAzureCreateNetworkMappingInputPtrOutputWithContext(ctx context.Context) VmmToAzureCreateNetworkMappingInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmmToAzureCreateNetworkMappingInputOutput).ToVmmToAzureCreateNetworkMappingInputPtrOutputWithContext(ctx)
}

// VmmToAzureCreateNetworkMappingInputPtrInput is an input type that accepts VmmToAzureCreateNetworkMappingInputArgs, VmmToAzureCreateNetworkMappingInputPtr and VmmToAzureCreateNetworkMappingInputPtrOutput values.
// You can construct a concrete instance of `VmmToAzureCreateNetworkMappingInputPtrInput` via:
//
//	        VmmToAzureCreateNetworkMappingInputArgs{...}
//
//	or:
//
//	        nil
type VmmToAzureCreateNetworkMappingInputPtrInput interface {
	pulumi.Input

	ToVmmToAzureCreateNetworkMappingInputPtrOutput() VmmToAzureCreateNetworkMappingInputPtrOutput
	ToVmmToAzureCreateNetworkMappingInputPtrOutputWithContext(context.Context) VmmToAzureCreateNetworkMappingInputPtrOutput
}

type vmmToAzureCreateNetworkMappingInputPtrType VmmToAzureCreateNetworkMappingInputArgs

func VmmToAzureCreateNetworkMappingInputPtr(v *VmmToAzureCreateNetworkMappingInputArgs) VmmToAzureCreateNetworkMappingInputPtrInput {
	return (*vmmToAzureCreateNetworkMappingInputPtrType)(v)
}

func (*vmmToAzureCreateNetworkMappingInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmmToAzureCreateNetworkMappingInput)(nil)).Elem()
}

func (i *vmmToAzureCreateNetworkMappingInputPtrType) ToVmmToAzureCreateNetworkMappingInputPtrOutput() VmmToAzureCreateNetworkMappingInputPtrOutput {
	return i.ToVmmToAzureCreateNetworkMappingInputPtrOutputWithContext(context.Background())
}

func (i *vmmToAzureCreateNetworkMappingInputPtrType) ToVmmToAzureCreateNetworkMappingInputPtrOutputWithContext(ctx context.Context) VmmToAzureCreateNetworkMappingInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmmToAzureCreateNetworkMappingInputPtrOutput)
}

// Create network mappings input properties/behavior specific to Vmm to Azure Network mapping.
type VmmToAzureCreateNetworkMappingInputOutput struct{ *pulumi.OutputState }

func (VmmToAzureCreateNetworkMappingInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmToAzureCreateNetworkMappingInput)(nil)).Elem()
}

func (o VmmToAzureCreateNetworkMappingInputOutput) ToVmmToAzureCreateNetworkMappingInputOutput() VmmToAzureCreateNetworkMappingInputOutput {
	return o
}

func (o VmmToAzureCreateNetworkMappingInputOutput) ToVmmToAzureCreateNetworkMappingInputOutputWithContext(ctx context.Context) VmmToAzureCreateNetworkMappingInputOutput {
	return o
}

func (o VmmToAzureCreateNetworkMappingInputOutput) ToVmmToAzureCreateNetworkMappingInputPtrOutput() VmmToAzureCreateNetworkMappingInputPtrOutput {
	return o.ToVmmToAzureCreateNetworkMappingInputPtrOutputWithContext(context.Background())
}

func (o VmmToAzureCreateNetworkMappingInputOutput) ToVmmToAzureCreateNetworkMappingInputPtrOutputWithContext(ctx context.Context) VmmToAzureCreateNetworkMappingInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmmToAzureCreateNetworkMappingInput) *VmmToAzureCreateNetworkMappingInput {
		return &v
	}).(VmmToAzureCreateNetworkMappingInputPtrOutput)
}

// The instance type.
// Expected value is 'VmmToAzure'.
func (o VmmToAzureCreateNetworkMappingInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VmmToAzureCreateNetworkMappingInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

type VmmToAzureCreateNetworkMappingInputPtrOutput struct{ *pulumi.OutputState }

func (VmmToAzureCreateNetworkMappingInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmmToAzureCreateNetworkMappingInput)(nil)).Elem()
}

func (o VmmToAzureCreateNetworkMappingInputPtrOutput) ToVmmToAzureCreateNetworkMappingInputPtrOutput() VmmToAzureCreateNetworkMappingInputPtrOutput {
	return o
}

func (o VmmToAzureCreateNetworkMappingInputPtrOutput) ToVmmToAzureCreateNetworkMappingInputPtrOutputWithContext(ctx context.Context) VmmToAzureCreateNetworkMappingInputPtrOutput {
	return o
}

func (o VmmToAzureCreateNetworkMappingInputPtrOutput) Elem() VmmToAzureCreateNetworkMappingInputOutput {
	return o.ApplyT(func(v *VmmToAzureCreateNetworkMappingInput) VmmToAzureCreateNetworkMappingInput {
		if v != nil {
			return *v
		}
		var ret VmmToAzureCreateNetworkMappingInput
		return ret
	}).(VmmToAzureCreateNetworkMappingInputOutput)
}

// The instance type.
// Expected value is 'VmmToAzure'.
func (o VmmToAzureCreateNetworkMappingInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmmToAzureCreateNetworkMappingInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// E2A Network Mapping fabric specific settings.
type VmmToAzureNetworkMappingSettingsResponse struct {
	// Gets the Instance type.
	// Expected value is 'VmmToAzure'.
	InstanceType string `pulumi:"instanceType"`
}

// E2A Network Mapping fabric specific settings.
type VmmToAzureNetworkMappingSettingsResponseOutput struct{ *pulumi.OutputState }

func (VmmToAzureNetworkMappingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmToAzureNetworkMappingSettingsResponse)(nil)).Elem()
}

func (o VmmToAzureNetworkMappingSettingsResponseOutput) ToVmmToAzureNetworkMappingSettingsResponseOutput() VmmToAzureNetworkMappingSettingsResponseOutput {
	return o
}

func (o VmmToAzureNetworkMappingSettingsResponseOutput) ToVmmToAzureNetworkMappingSettingsResponseOutputWithContext(ctx context.Context) VmmToAzureNetworkMappingSettingsResponseOutput {
	return o
}

// Gets the Instance type.
// Expected value is 'VmmToAzure'.
func (o VmmToAzureNetworkMappingSettingsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VmmToAzureNetworkMappingSettingsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

type VmmToAzureNetworkMappingSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (VmmToAzureNetworkMappingSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmmToAzureNetworkMappingSettingsResponse)(nil)).Elem()
}

func (o VmmToAzureNetworkMappingSettingsResponsePtrOutput) ToVmmToAzureNetworkMappingSettingsResponsePtrOutput() VmmToAzureNetworkMappingSettingsResponsePtrOutput {
	return o
}

func (o VmmToAzureNetworkMappingSettingsResponsePtrOutput) ToVmmToAzureNetworkMappingSettingsResponsePtrOutputWithContext(ctx context.Context) VmmToAzureNetworkMappingSettingsResponsePtrOutput {
	return o
}

func (o VmmToAzureNetworkMappingSettingsResponsePtrOutput) Elem() VmmToAzureNetworkMappingSettingsResponseOutput {
	return o.ApplyT(func(v *VmmToAzureNetworkMappingSettingsResponse) VmmToAzureNetworkMappingSettingsResponse {
		if v != nil {
			return *v
		}
		var ret VmmToAzureNetworkMappingSettingsResponse
		return ret
	}).(VmmToAzureNetworkMappingSettingsResponseOutput)
}

// Gets the Instance type.
// Expected value is 'VmmToAzure'.
func (o VmmToAzureNetworkMappingSettingsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmmToAzureNetworkMappingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// Create network mappings input properties/behavior specific to vmm to vmm Network mapping.
type VmmToVmmCreateNetworkMappingInput struct {
	// The instance type.
	// Expected value is 'VmmToVmm'.
	InstanceType string `pulumi:"instanceType"`
}

// VmmToVmmCreateNetworkMappingInputInput is an input type that accepts VmmToVmmCreateNetworkMappingInputArgs and VmmToVmmCreateNetworkMappingInputOutput values.
// You can construct a concrete instance of `VmmToVmmCreateNetworkMappingInputInput` via:
//
//	VmmToVmmCreateNetworkMappingInputArgs{...}
type VmmToVmmCreateNetworkMappingInputInput interface {
	pulumi.Input

	ToVmmToVmmCreateNetworkMappingInputOutput() VmmToVmmCreateNetworkMappingInputOutput
	ToVmmToVmmCreateNetworkMappingInputOutputWithContext(context.Context) VmmToVmmCreateNetworkMappingInputOutput
}

// Create network mappings input properties/behavior specific to vmm to vmm Network mapping.
type VmmToVmmCreateNetworkMappingInputArgs struct {
	// The instance type.
	// Expected value is 'VmmToVmm'.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
}

func (VmmToVmmCreateNetworkMappingInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmToVmmCreateNetworkMappingInput)(nil)).Elem()
}

func (i VmmToVmmCreateNetworkMappingInputArgs) ToVmmToVmmCreateNetworkMappingInputOutput() VmmToVmmCreateNetworkMappingInputOutput {
	return i.ToVmmToVmmCreateNetworkMappingInputOutputWithContext(context.Background())
}

func (i VmmToVmmCreateNetworkMappingInputArgs) ToVmmToVmmCreateNetworkMappingInputOutputWithContext(ctx context.Context) VmmToVmmCreateNetworkMappingInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmmToVmmCreateNetworkMappingInputOutput)
}

func (i VmmToVmmCreateNetworkMappingInputArgs) ToVmmToVmmCreateNetworkMappingInputPtrOutput() VmmToVmmCreateNetworkMappingInputPtrOutput {
	return i.ToVmmToVmmCreateNetworkMappingInputPtrOutputWithContext(context.Background())
}

func (i VmmToVmmCreateNetworkMappingInputArgs) ToVmmToVmmCreateNetworkMappingInputPtrOutputWithContext(ctx context.Context) VmmToVmmCreateNetworkMappingInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmmToVmmCreateNetworkMappingInputOutput).ToVmmToVmmCreateNetworkMappingInputPtrOutputWithContext(ctx)
}

// VmmToVmmCreateNetworkMappingInputPtrInput is an input type that accepts VmmToVmmCreateNetworkMappingInputArgs, VmmToVmmCreateNetworkMappingInputPtr and VmmToVmmCreateNetworkMappingInputPtrOutput values.
// You can construct a concrete instance of `VmmToVmmCreateNetworkMappingInputPtrInput` via:
//
//	        VmmToVmmCreateNetworkMappingInputArgs{...}
//
//	or:
//
//	        nil
type VmmToVmmCreateNetworkMappingInputPtrInput interface {
	pulumi.Input

	ToVmmToVmmCreateNetworkMappingInputPtrOutput() VmmToVmmCreateNetworkMappingInputPtrOutput
	ToVmmToVmmCreateNetworkMappingInputPtrOutputWithContext(context.Context) VmmToVmmCreateNetworkMappingInputPtrOutput
}

type vmmToVmmCreateNetworkMappingInputPtrType VmmToVmmCreateNetworkMappingInputArgs

func VmmToVmmCreateNetworkMappingInputPtr(v *VmmToVmmCreateNetworkMappingInputArgs) VmmToVmmCreateNetworkMappingInputPtrInput {
	return (*vmmToVmmCreateNetworkMappingInputPtrType)(v)
}

func (*vmmToVmmCreateNetworkMappingInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmmToVmmCreateNetworkMappingInput)(nil)).Elem()
}

func (i *vmmToVmmCreateNetworkMappingInputPtrType) ToVmmToVmmCreateNetworkMappingInputPtrOutput() VmmToVmmCreateNetworkMappingInputPtrOutput {
	return i.ToVmmToVmmCreateNetworkMappingInputPtrOutputWithContext(context.Background())
}

func (i *vmmToVmmCreateNetworkMappingInputPtrType) ToVmmToVmmCreateNetworkMappingInputPtrOutputWithContext(ctx context.Context) VmmToVmmCreateNetworkMappingInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmmToVmmCreateNetworkMappingInputPtrOutput)
}

// Create network mappings input properties/behavior specific to vmm to vmm Network mapping.
type VmmToVmmCreateNetworkMappingInputOutput struct{ *pulumi.OutputState }

func (VmmToVmmCreateNetworkMappingInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmToVmmCreateNetworkMappingInput)(nil)).Elem()
}

func (o VmmToVmmCreateNetworkMappingInputOutput) ToVmmToVmmCreateNetworkMappingInputOutput() VmmToVmmCreateNetworkMappingInputOutput {
	return o
}

func (o VmmToVmmCreateNetworkMappingInputOutput) ToVmmToVmmCreateNetworkMappingInputOutputWithContext(ctx context.Context) VmmToVmmCreateNetworkMappingInputOutput {
	return o
}

func (o VmmToVmmCreateNetworkMappingInputOutput) ToVmmToVmmCreateNetworkMappingInputPtrOutput() VmmToVmmCreateNetworkMappingInputPtrOutput {
	return o.ToVmmToVmmCreateNetworkMappingInputPtrOutputWithContext(context.Background())
}

func (o VmmToVmmCreateNetworkMappingInputOutput) ToVmmToVmmCreateNetworkMappingInputPtrOutputWithContext(ctx context.Context) VmmToVmmCreateNetworkMappingInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmmToVmmCreateNetworkMappingInput) *VmmToVmmCreateNetworkMappingInput {
		return &v
	}).(VmmToVmmCreateNetworkMappingInputPtrOutput)
}

// The instance type.
// Expected value is 'VmmToVmm'.
func (o VmmToVmmCreateNetworkMappingInputOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VmmToVmmCreateNetworkMappingInput) string { return v.InstanceType }).(pulumi.StringOutput)
}

type VmmToVmmCreateNetworkMappingInputPtrOutput struct{ *pulumi.OutputState }

func (VmmToVmmCreateNetworkMappingInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmmToVmmCreateNetworkMappingInput)(nil)).Elem()
}

func (o VmmToVmmCreateNetworkMappingInputPtrOutput) ToVmmToVmmCreateNetworkMappingInputPtrOutput() VmmToVmmCreateNetworkMappingInputPtrOutput {
	return o
}

func (o VmmToVmmCreateNetworkMappingInputPtrOutput) ToVmmToVmmCreateNetworkMappingInputPtrOutputWithContext(ctx context.Context) VmmToVmmCreateNetworkMappingInputPtrOutput {
	return o
}

func (o VmmToVmmCreateNetworkMappingInputPtrOutput) Elem() VmmToVmmCreateNetworkMappingInputOutput {
	return o.ApplyT(func(v *VmmToVmmCreateNetworkMappingInput) VmmToVmmCreateNetworkMappingInput {
		if v != nil {
			return *v
		}
		var ret VmmToVmmCreateNetworkMappingInput
		return ret
	}).(VmmToVmmCreateNetworkMappingInputOutput)
}

// The instance type.
// Expected value is 'VmmToVmm'.
func (o VmmToVmmCreateNetworkMappingInputPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmmToVmmCreateNetworkMappingInput) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// E2E Network Mapping fabric specific settings.
type VmmToVmmNetworkMappingSettingsResponse struct {
	// Gets the Instance type.
	// Expected value is 'VmmToVmm'.
	InstanceType string `pulumi:"instanceType"`
}

// E2E Network Mapping fabric specific settings.
type VmmToVmmNetworkMappingSettingsResponseOutput struct{ *pulumi.OutputState }

func (VmmToVmmNetworkMappingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmmToVmmNetworkMappingSettingsResponse)(nil)).Elem()
}

func (o VmmToVmmNetworkMappingSettingsResponseOutput) ToVmmToVmmNetworkMappingSettingsResponseOutput() VmmToVmmNetworkMappingSettingsResponseOutput {
	return o
}

func (o VmmToVmmNetworkMappingSettingsResponseOutput) ToVmmToVmmNetworkMappingSettingsResponseOutputWithContext(ctx context.Context) VmmToVmmNetworkMappingSettingsResponseOutput {
	return o
}

// Gets the Instance type.
// Expected value is 'VmmToVmm'.
func (o VmmToVmmNetworkMappingSettingsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VmmToVmmNetworkMappingSettingsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

type VmmToVmmNetworkMappingSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (VmmToVmmNetworkMappingSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmmToVmmNetworkMappingSettingsResponse)(nil)).Elem()
}

func (o VmmToVmmNetworkMappingSettingsResponsePtrOutput) ToVmmToVmmNetworkMappingSettingsResponsePtrOutput() VmmToVmmNetworkMappingSettingsResponsePtrOutput {
	return o
}

func (o VmmToVmmNetworkMappingSettingsResponsePtrOutput) ToVmmToVmmNetworkMappingSettingsResponsePtrOutputWithContext(ctx context.Context) VmmToVmmNetworkMappingSettingsResponsePtrOutput {
	return o
}

func (o VmmToVmmNetworkMappingSettingsResponsePtrOutput) Elem() VmmToVmmNetworkMappingSettingsResponseOutput {
	return o.ApplyT(func(v *VmmToVmmNetworkMappingSettingsResponse) VmmToVmmNetworkMappingSettingsResponse {
		if v != nil {
			return *v
		}
		var ret VmmToVmmNetworkMappingSettingsResponse
		return ret
	}).(VmmToVmmNetworkMappingSettingsResponseOutput)
}

// Gets the Instance type.
// Expected value is 'VmmToVmm'.
func (o VmmToVmmNetworkMappingSettingsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmmToVmmNetworkMappingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// VMware Cbt specific policy details.
type VmwareCbtPolicyDetailsResponse struct {
	// The app consistent snapshot frequency in minutes.
	AppConsistentFrequencyInMinutes *int `pulumi:"appConsistentFrequencyInMinutes"`
	// The crash consistent snapshot frequency in minutes.
	CrashConsistentFrequencyInMinutes *int `pulumi:"crashConsistentFrequencyInMinutes"`
	// Gets the class type. Overridden in derived classes.
	// Expected value is 'VMwareCbt'.
	InstanceType string `pulumi:"instanceType"`
	// The duration in minutes until which the recovery points need to be stored.
	RecoveryPointHistoryInMinutes *int `pulumi:"recoveryPointHistoryInMinutes"`
}

// VMware Cbt specific policy details.
type VmwareCbtPolicyDetailsResponseOutput struct{ *pulumi.OutputState }

func (VmwareCbtPolicyDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareCbtPolicyDetailsResponse)(nil)).Elem()
}

func (o VmwareCbtPolicyDetailsResponseOutput) ToVmwareCbtPolicyDetailsResponseOutput() VmwareCbtPolicyDetailsResponseOutput {
	return o
}

func (o VmwareCbtPolicyDetailsResponseOutput) ToVmwareCbtPolicyDetailsResponseOutputWithContext(ctx context.Context) VmwareCbtPolicyDetailsResponseOutput {
	return o
}

// The app consistent snapshot frequency in minutes.
func (o VmwareCbtPolicyDetailsResponseOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmwareCbtPolicyDetailsResponse) *int { return v.AppConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o VmwareCbtPolicyDetailsResponseOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmwareCbtPolicyDetailsResponse) *int { return v.CrashConsistentFrequencyInMinutes }).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'VMwareCbt'.
func (o VmwareCbtPolicyDetailsResponseOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v VmwareCbtPolicyDetailsResponse) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o VmwareCbtPolicyDetailsResponseOutput) RecoveryPointHistoryInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VmwareCbtPolicyDetailsResponse) *int { return v.RecoveryPointHistoryInMinutes }).(pulumi.IntPtrOutput)
}

type VmwareCbtPolicyDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (VmwareCbtPolicyDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareCbtPolicyDetailsResponse)(nil)).Elem()
}

func (o VmwareCbtPolicyDetailsResponsePtrOutput) ToVmwareCbtPolicyDetailsResponsePtrOutput() VmwareCbtPolicyDetailsResponsePtrOutput {
	return o
}

func (o VmwareCbtPolicyDetailsResponsePtrOutput) ToVmwareCbtPolicyDetailsResponsePtrOutputWithContext(ctx context.Context) VmwareCbtPolicyDetailsResponsePtrOutput {
	return o
}

func (o VmwareCbtPolicyDetailsResponsePtrOutput) Elem() VmwareCbtPolicyDetailsResponseOutput {
	return o.ApplyT(func(v *VmwareCbtPolicyDetailsResponse) VmwareCbtPolicyDetailsResponse {
		if v != nil {
			return *v
		}
		var ret VmwareCbtPolicyDetailsResponse
		return ret
	}).(VmwareCbtPolicyDetailsResponseOutput)
}

// The app consistent snapshot frequency in minutes.
func (o VmwareCbtPolicyDetailsResponsePtrOutput) AppConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmwareCbtPolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.AppConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// The crash consistent snapshot frequency in minutes.
func (o VmwareCbtPolicyDetailsResponsePtrOutput) CrashConsistentFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmwareCbtPolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.CrashConsistentFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

// Gets the class type. Overridden in derived classes.
// Expected value is 'VMwareCbt'.
func (o VmwareCbtPolicyDetailsResponsePtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmwareCbtPolicyDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// The duration in minutes until which the recovery points need to be stored.
func (o VmwareCbtPolicyDetailsResponsePtrOutput) RecoveryPointHistoryInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmwareCbtPolicyDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointHistoryInMinutes
	}).(pulumi.IntPtrOutput)
}

// Weekly retention format.
type WeeklyRetentionFormat struct {
	// List of days of the week.
	DaysOfTheWeek []DayOfWeek `pulumi:"daysOfTheWeek"`
	// List of weeks of month.
	WeeksOfTheMonth []WeekOfMonth `pulumi:"weeksOfTheMonth"`
}

// WeeklyRetentionFormatInput is an input type that accepts WeeklyRetentionFormatArgs and WeeklyRetentionFormatOutput values.
// You can construct a concrete instance of `WeeklyRetentionFormatInput` via:
//
//	WeeklyRetentionFormatArgs{...}
type WeeklyRetentionFormatInput interface {
	pulumi.Input

	ToWeeklyRetentionFormatOutput() WeeklyRetentionFormatOutput
	ToWeeklyRetentionFormatOutputWithContext(context.Context) WeeklyRetentionFormatOutput
}

// Weekly retention format.
type WeeklyRetentionFormatArgs struct {
	// List of days of the week.
	DaysOfTheWeek DayOfWeekArrayInput `pulumi:"daysOfTheWeek"`
	// List of weeks of month.
	WeeksOfTheMonth WeekOfMonthArrayInput `pulumi:"weeksOfTheMonth"`
}

func (WeeklyRetentionFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyRetentionFormat)(nil)).Elem()
}

func (i WeeklyRetentionFormatArgs) ToWeeklyRetentionFormatOutput() WeeklyRetentionFormatOutput {
	return i.ToWeeklyRetentionFormatOutputWithContext(context.Background())
}

func (i WeeklyRetentionFormatArgs) ToWeeklyRetentionFormatOutputWithContext(ctx context.Context) WeeklyRetentionFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionFormatOutput)
}

func (i WeeklyRetentionFormatArgs) ToWeeklyRetentionFormatPtrOutput() WeeklyRetentionFormatPtrOutput {
	return i.ToWeeklyRetentionFormatPtrOutputWithContext(context.Background())
}

func (i WeeklyRetentionFormatArgs) ToWeeklyRetentionFormatPtrOutputWithContext(ctx context.Context) WeeklyRetentionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionFormatOutput).ToWeeklyRetentionFormatPtrOutputWithContext(ctx)
}

// WeeklyRetentionFormatPtrInput is an input type that accepts WeeklyRetentionFormatArgs, WeeklyRetentionFormatPtr and WeeklyRetentionFormatPtrOutput values.
// You can construct a concrete instance of `WeeklyRetentionFormatPtrInput` via:
//
//	        WeeklyRetentionFormatArgs{...}
//
//	or:
//
//	        nil
type WeeklyRetentionFormatPtrInput interface {
	pulumi.Input

	ToWeeklyRetentionFormatPtrOutput() WeeklyRetentionFormatPtrOutput
	ToWeeklyRetentionFormatPtrOutputWithContext(context.Context) WeeklyRetentionFormatPtrOutput
}

type weeklyRetentionFormatPtrType WeeklyRetentionFormatArgs

func WeeklyRetentionFormatPtr(v *WeeklyRetentionFormatArgs) WeeklyRetentionFormatPtrInput {
	return (*weeklyRetentionFormatPtrType)(v)
}

func (*weeklyRetentionFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyRetentionFormat)(nil)).Elem()
}

func (i *weeklyRetentionFormatPtrType) ToWeeklyRetentionFormatPtrOutput() WeeklyRetentionFormatPtrOutput {
	return i.ToWeeklyRetentionFormatPtrOutputWithContext(context.Background())
}

func (i *weeklyRetentionFormatPtrType) ToWeeklyRetentionFormatPtrOutputWithContext(ctx context.Context) WeeklyRetentionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionFormatPtrOutput)
}

// Weekly retention format.
type WeeklyRetentionFormatOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyRetentionFormat)(nil)).Elem()
}

func (o WeeklyRetentionFormatOutput) ToWeeklyRetentionFormatOutput() WeeklyRetentionFormatOutput {
	return o
}

func (o WeeklyRetentionFormatOutput) ToWeeklyRetentionFormatOutputWithContext(ctx context.Context) WeeklyRetentionFormatOutput {
	return o
}

func (o WeeklyRetentionFormatOutput) ToWeeklyRetentionFormatPtrOutput() WeeklyRetentionFormatPtrOutput {
	return o.ToWeeklyRetentionFormatPtrOutputWithContext(context.Background())
}

func (o WeeklyRetentionFormatOutput) ToWeeklyRetentionFormatPtrOutputWithContext(ctx context.Context) WeeklyRetentionFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WeeklyRetentionFormat) *WeeklyRetentionFormat {
		return &v
	}).(WeeklyRetentionFormatPtrOutput)
}

// List of days of the week.
func (o WeeklyRetentionFormatOutput) DaysOfTheWeek() DayOfWeekArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionFormat) []DayOfWeek { return v.DaysOfTheWeek }).(DayOfWeekArrayOutput)
}

// List of weeks of month.
func (o WeeklyRetentionFormatOutput) WeeksOfTheMonth() WeekOfMonthArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionFormat) []WeekOfMonth { return v.WeeksOfTheMonth }).(WeekOfMonthArrayOutput)
}

type WeeklyRetentionFormatPtrOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyRetentionFormat)(nil)).Elem()
}

func (o WeeklyRetentionFormatPtrOutput) ToWeeklyRetentionFormatPtrOutput() WeeklyRetentionFormatPtrOutput {
	return o
}

func (o WeeklyRetentionFormatPtrOutput) ToWeeklyRetentionFormatPtrOutputWithContext(ctx context.Context) WeeklyRetentionFormatPtrOutput {
	return o
}

func (o WeeklyRetentionFormatPtrOutput) Elem() WeeklyRetentionFormatOutput {
	return o.ApplyT(func(v *WeeklyRetentionFormat) WeeklyRetentionFormat {
		if v != nil {
			return *v
		}
		var ret WeeklyRetentionFormat
		return ret
	}).(WeeklyRetentionFormatOutput)
}

// List of days of the week.
func (o WeeklyRetentionFormatPtrOutput) DaysOfTheWeek() DayOfWeekArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionFormat) []DayOfWeek {
		if v == nil {
			return nil
		}
		return v.DaysOfTheWeek
	}).(DayOfWeekArrayOutput)
}

// List of weeks of month.
func (o WeeklyRetentionFormatPtrOutput) WeeksOfTheMonth() WeekOfMonthArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionFormat) []WeekOfMonth {
		if v == nil {
			return nil
		}
		return v.WeeksOfTheMonth
	}).(WeekOfMonthArrayOutput)
}

// Weekly retention format.
type WeeklyRetentionFormatResponse struct {
	// List of days of the week.
	DaysOfTheWeek []string `pulumi:"daysOfTheWeek"`
	// List of weeks of month.
	WeeksOfTheMonth []string `pulumi:"weeksOfTheMonth"`
}

// Weekly retention format.
type WeeklyRetentionFormatResponseOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyRetentionFormatResponse)(nil)).Elem()
}

func (o WeeklyRetentionFormatResponseOutput) ToWeeklyRetentionFormatResponseOutput() WeeklyRetentionFormatResponseOutput {
	return o
}

func (o WeeklyRetentionFormatResponseOutput) ToWeeklyRetentionFormatResponseOutputWithContext(ctx context.Context) WeeklyRetentionFormatResponseOutput {
	return o
}

// List of days of the week.
func (o WeeklyRetentionFormatResponseOutput) DaysOfTheWeek() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionFormatResponse) []string { return v.DaysOfTheWeek }).(pulumi.StringArrayOutput)
}

// List of weeks of month.
func (o WeeklyRetentionFormatResponseOutput) WeeksOfTheMonth() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionFormatResponse) []string { return v.WeeksOfTheMonth }).(pulumi.StringArrayOutput)
}

type WeeklyRetentionFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyRetentionFormatResponse)(nil)).Elem()
}

func (o WeeklyRetentionFormatResponsePtrOutput) ToWeeklyRetentionFormatResponsePtrOutput() WeeklyRetentionFormatResponsePtrOutput {
	return o
}

func (o WeeklyRetentionFormatResponsePtrOutput) ToWeeklyRetentionFormatResponsePtrOutputWithContext(ctx context.Context) WeeklyRetentionFormatResponsePtrOutput {
	return o
}

func (o WeeklyRetentionFormatResponsePtrOutput) Elem() WeeklyRetentionFormatResponseOutput {
	return o.ApplyT(func(v *WeeklyRetentionFormatResponse) WeeklyRetentionFormatResponse {
		if v != nil {
			return *v
		}
		var ret WeeklyRetentionFormatResponse
		return ret
	}).(WeeklyRetentionFormatResponseOutput)
}

// List of days of the week.
func (o WeeklyRetentionFormatResponsePtrOutput) DaysOfTheWeek() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionFormatResponse) []string {
		if v == nil {
			return nil
		}
		return v.DaysOfTheWeek
	}).(pulumi.StringArrayOutput)
}

// List of weeks of month.
func (o WeeklyRetentionFormatResponsePtrOutput) WeeksOfTheMonth() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionFormatResponse) []string {
		if v == nil {
			return nil
		}
		return v.WeeksOfTheMonth
	}).(pulumi.StringArrayOutput)
}

// Weekly retention schedule.
type WeeklyRetentionSchedule struct {
	// List of days of week for weekly retention policy.
	DaysOfTheWeek []DayOfWeek `pulumi:"daysOfTheWeek"`
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// WeeklyRetentionScheduleInput is an input type that accepts WeeklyRetentionScheduleArgs and WeeklyRetentionScheduleOutput values.
// You can construct a concrete instance of `WeeklyRetentionScheduleInput` via:
//
//	WeeklyRetentionScheduleArgs{...}
type WeeklyRetentionScheduleInput interface {
	pulumi.Input

	ToWeeklyRetentionScheduleOutput() WeeklyRetentionScheduleOutput
	ToWeeklyRetentionScheduleOutputWithContext(context.Context) WeeklyRetentionScheduleOutput
}

// Weekly retention schedule.
type WeeklyRetentionScheduleArgs struct {
	// List of days of week for weekly retention policy.
	DaysOfTheWeek DayOfWeekArrayInput `pulumi:"daysOfTheWeek"`
	// Retention duration of retention Policy.
	RetentionDuration RetentionDurationPtrInput `pulumi:"retentionDuration"`
	// Retention times of retention policy.
	RetentionTimes pulumi.StringArrayInput `pulumi:"retentionTimes"`
}

func (WeeklyRetentionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyRetentionSchedule)(nil)).Elem()
}

func (i WeeklyRetentionScheduleArgs) ToWeeklyRetentionScheduleOutput() WeeklyRetentionScheduleOutput {
	return i.ToWeeklyRetentionScheduleOutputWithContext(context.Background())
}

func (i WeeklyRetentionScheduleArgs) ToWeeklyRetentionScheduleOutputWithContext(ctx context.Context) WeeklyRetentionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionScheduleOutput)
}

func (i WeeklyRetentionScheduleArgs) ToWeeklyRetentionSchedulePtrOutput() WeeklyRetentionSchedulePtrOutput {
	return i.ToWeeklyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i WeeklyRetentionScheduleArgs) ToWeeklyRetentionSchedulePtrOutputWithContext(ctx context.Context) WeeklyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionScheduleOutput).ToWeeklyRetentionSchedulePtrOutputWithContext(ctx)
}

// WeeklyRetentionSchedulePtrInput is an input type that accepts WeeklyRetentionScheduleArgs, WeeklyRetentionSchedulePtr and WeeklyRetentionSchedulePtrOutput values.
// You can construct a concrete instance of `WeeklyRetentionSchedulePtrInput` via:
//
//	        WeeklyRetentionScheduleArgs{...}
//
//	or:
//
//	        nil
type WeeklyRetentionSchedulePtrInput interface {
	pulumi.Input

	ToWeeklyRetentionSchedulePtrOutput() WeeklyRetentionSchedulePtrOutput
	ToWeeklyRetentionSchedulePtrOutputWithContext(context.Context) WeeklyRetentionSchedulePtrOutput
}

type weeklyRetentionSchedulePtrType WeeklyRetentionScheduleArgs

func WeeklyRetentionSchedulePtr(v *WeeklyRetentionScheduleArgs) WeeklyRetentionSchedulePtrInput {
	return (*weeklyRetentionSchedulePtrType)(v)
}

func (*weeklyRetentionSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyRetentionSchedule)(nil)).Elem()
}

func (i *weeklyRetentionSchedulePtrType) ToWeeklyRetentionSchedulePtrOutput() WeeklyRetentionSchedulePtrOutput {
	return i.ToWeeklyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i *weeklyRetentionSchedulePtrType) ToWeeklyRetentionSchedulePtrOutputWithContext(ctx context.Context) WeeklyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionSchedulePtrOutput)
}

// Weekly retention schedule.
type WeeklyRetentionScheduleOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyRetentionSchedule)(nil)).Elem()
}

func (o WeeklyRetentionScheduleOutput) ToWeeklyRetentionScheduleOutput() WeeklyRetentionScheduleOutput {
	return o
}

func (o WeeklyRetentionScheduleOutput) ToWeeklyRetentionScheduleOutputWithContext(ctx context.Context) WeeklyRetentionScheduleOutput {
	return o
}

func (o WeeklyRetentionScheduleOutput) ToWeeklyRetentionSchedulePtrOutput() WeeklyRetentionSchedulePtrOutput {
	return o.ToWeeklyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (o WeeklyRetentionScheduleOutput) ToWeeklyRetentionSchedulePtrOutputWithContext(ctx context.Context) WeeklyRetentionSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WeeklyRetentionSchedule) *WeeklyRetentionSchedule {
		return &v
	}).(WeeklyRetentionSchedulePtrOutput)
}

// List of days of week for weekly retention policy.
func (o WeeklyRetentionScheduleOutput) DaysOfTheWeek() DayOfWeekArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionSchedule) []DayOfWeek { return v.DaysOfTheWeek }).(DayOfWeekArrayOutput)
}

// Retention duration of retention Policy.
func (o WeeklyRetentionScheduleOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v WeeklyRetentionSchedule) *RetentionDuration { return v.RetentionDuration }).(RetentionDurationPtrOutput)
}

// Retention times of retention policy.
func (o WeeklyRetentionScheduleOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionSchedule) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type WeeklyRetentionSchedulePtrOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyRetentionSchedule)(nil)).Elem()
}

func (o WeeklyRetentionSchedulePtrOutput) ToWeeklyRetentionSchedulePtrOutput() WeeklyRetentionSchedulePtrOutput {
	return o
}

func (o WeeklyRetentionSchedulePtrOutput) ToWeeklyRetentionSchedulePtrOutputWithContext(ctx context.Context) WeeklyRetentionSchedulePtrOutput {
	return o
}

func (o WeeklyRetentionSchedulePtrOutput) Elem() WeeklyRetentionScheduleOutput {
	return o.ApplyT(func(v *WeeklyRetentionSchedule) WeeklyRetentionSchedule {
		if v != nil {
			return *v
		}
		var ret WeeklyRetentionSchedule
		return ret
	}).(WeeklyRetentionScheduleOutput)
}

// List of days of week for weekly retention policy.
func (o WeeklyRetentionSchedulePtrOutput) DaysOfTheWeek() DayOfWeekArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionSchedule) []DayOfWeek {
		if v == nil {
			return nil
		}
		return v.DaysOfTheWeek
	}).(DayOfWeekArrayOutput)
}

// Retention duration of retention Policy.
func (o WeeklyRetentionSchedulePtrOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v *WeeklyRetentionSchedule) *RetentionDuration {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationPtrOutput)
}

// Retention times of retention policy.
func (o WeeklyRetentionSchedulePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionSchedule) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

// Weekly retention schedule.
type WeeklyRetentionScheduleResponse struct {
	// List of days of week for weekly retention policy.
	DaysOfTheWeek []string `pulumi:"daysOfTheWeek"`
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Weekly retention schedule.
type WeeklyRetentionScheduleResponseOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyRetentionScheduleResponse)(nil)).Elem()
}

func (o WeeklyRetentionScheduleResponseOutput) ToWeeklyRetentionScheduleResponseOutput() WeeklyRetentionScheduleResponseOutput {
	return o
}

func (o WeeklyRetentionScheduleResponseOutput) ToWeeklyRetentionScheduleResponseOutputWithContext(ctx context.Context) WeeklyRetentionScheduleResponseOutput {
	return o
}

// List of days of week for weekly retention policy.
func (o WeeklyRetentionScheduleResponseOutput) DaysOfTheWeek() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionScheduleResponse) []string { return v.DaysOfTheWeek }).(pulumi.StringArrayOutput)
}

// Retention duration of retention Policy.
func (o WeeklyRetentionScheduleResponseOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v WeeklyRetentionScheduleResponse) *RetentionDurationResponse { return v.RetentionDuration }).(RetentionDurationResponsePtrOutput)
}

// Retention times of retention policy.
func (o WeeklyRetentionScheduleResponseOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionScheduleResponse) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type WeeklyRetentionScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyRetentionScheduleResponse)(nil)).Elem()
}

func (o WeeklyRetentionScheduleResponsePtrOutput) ToWeeklyRetentionScheduleResponsePtrOutput() WeeklyRetentionScheduleResponsePtrOutput {
	return o
}

func (o WeeklyRetentionScheduleResponsePtrOutput) ToWeeklyRetentionScheduleResponsePtrOutputWithContext(ctx context.Context) WeeklyRetentionScheduleResponsePtrOutput {
	return o
}

func (o WeeklyRetentionScheduleResponsePtrOutput) Elem() WeeklyRetentionScheduleResponseOutput {
	return o.ApplyT(func(v *WeeklyRetentionScheduleResponse) WeeklyRetentionScheduleResponse {
		if v != nil {
			return *v
		}
		var ret WeeklyRetentionScheduleResponse
		return ret
	}).(WeeklyRetentionScheduleResponseOutput)
}

// List of days of week for weekly retention policy.
func (o WeeklyRetentionScheduleResponsePtrOutput) DaysOfTheWeek() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.DaysOfTheWeek
	}).(pulumi.StringArrayOutput)
}

// Retention duration of retention Policy.
func (o WeeklyRetentionScheduleResponsePtrOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v *WeeklyRetentionScheduleResponse) *RetentionDurationResponse {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationResponsePtrOutput)
}

// Retention times of retention policy.
func (o WeeklyRetentionScheduleResponsePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

type WeeklySchedule struct {
	ScheduleRunDays []DayOfWeek `pulumi:"scheduleRunDays"`
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
}

// WeeklyScheduleInput is an input type that accepts WeeklyScheduleArgs and WeeklyScheduleOutput values.
// You can construct a concrete instance of `WeeklyScheduleInput` via:
//
//	WeeklyScheduleArgs{...}
type WeeklyScheduleInput interface {
	pulumi.Input

	ToWeeklyScheduleOutput() WeeklyScheduleOutput
	ToWeeklyScheduleOutputWithContext(context.Context) WeeklyScheduleOutput
}

type WeeklyScheduleArgs struct {
	ScheduleRunDays DayOfWeekArrayInput `pulumi:"scheduleRunDays"`
	// List of times of day this schedule has to be run.
	ScheduleRunTimes pulumi.StringArrayInput `pulumi:"scheduleRunTimes"`
}

func (WeeklyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklySchedule)(nil)).Elem()
}

func (i WeeklyScheduleArgs) ToWeeklyScheduleOutput() WeeklyScheduleOutput {
	return i.ToWeeklyScheduleOutputWithContext(context.Background())
}

func (i WeeklyScheduleArgs) ToWeeklyScheduleOutputWithContext(ctx context.Context) WeeklyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyScheduleOutput)
}

func (i WeeklyScheduleArgs) ToWeeklySchedulePtrOutput() WeeklySchedulePtrOutput {
	return i.ToWeeklySchedulePtrOutputWithContext(context.Background())
}

func (i WeeklyScheduleArgs) ToWeeklySchedulePtrOutputWithContext(ctx context.Context) WeeklySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyScheduleOutput).ToWeeklySchedulePtrOutputWithContext(ctx)
}

// WeeklySchedulePtrInput is an input type that accepts WeeklyScheduleArgs, WeeklySchedulePtr and WeeklySchedulePtrOutput values.
// You can construct a concrete instance of `WeeklySchedulePtrInput` via:
//
//	        WeeklyScheduleArgs{...}
//
//	or:
//
//	        nil
type WeeklySchedulePtrInput interface {
	pulumi.Input

	ToWeeklySchedulePtrOutput() WeeklySchedulePtrOutput
	ToWeeklySchedulePtrOutputWithContext(context.Context) WeeklySchedulePtrOutput
}

type weeklySchedulePtrType WeeklyScheduleArgs

func WeeklySchedulePtr(v *WeeklyScheduleArgs) WeeklySchedulePtrInput {
	return (*weeklySchedulePtrType)(v)
}

func (*weeklySchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklySchedule)(nil)).Elem()
}

func (i *weeklySchedulePtrType) ToWeeklySchedulePtrOutput() WeeklySchedulePtrOutput {
	return i.ToWeeklySchedulePtrOutputWithContext(context.Background())
}

func (i *weeklySchedulePtrType) ToWeeklySchedulePtrOutputWithContext(ctx context.Context) WeeklySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklySchedulePtrOutput)
}

type WeeklyScheduleOutput struct{ *pulumi.OutputState }

func (WeeklyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklySchedule)(nil)).Elem()
}

func (o WeeklyScheduleOutput) ToWeeklyScheduleOutput() WeeklyScheduleOutput {
	return o
}

func (o WeeklyScheduleOutput) ToWeeklyScheduleOutputWithContext(ctx context.Context) WeeklyScheduleOutput {
	return o
}

func (o WeeklyScheduleOutput) ToWeeklySchedulePtrOutput() WeeklySchedulePtrOutput {
	return o.ToWeeklySchedulePtrOutputWithContext(context.Background())
}

func (o WeeklyScheduleOutput) ToWeeklySchedulePtrOutputWithContext(ctx context.Context) WeeklySchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WeeklySchedule) *WeeklySchedule {
		return &v
	}).(WeeklySchedulePtrOutput)
}

func (o WeeklyScheduleOutput) ScheduleRunDays() DayOfWeekArrayOutput {
	return o.ApplyT(func(v WeeklySchedule) []DayOfWeek { return v.ScheduleRunDays }).(DayOfWeekArrayOutput)
}

// List of times of day this schedule has to be run.
func (o WeeklyScheduleOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklySchedule) []string { return v.ScheduleRunTimes }).(pulumi.StringArrayOutput)
}

type WeeklySchedulePtrOutput struct{ *pulumi.OutputState }

func (WeeklySchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklySchedule)(nil)).Elem()
}

func (o WeeklySchedulePtrOutput) ToWeeklySchedulePtrOutput() WeeklySchedulePtrOutput {
	return o
}

func (o WeeklySchedulePtrOutput) ToWeeklySchedulePtrOutputWithContext(ctx context.Context) WeeklySchedulePtrOutput {
	return o
}

func (o WeeklySchedulePtrOutput) Elem() WeeklyScheduleOutput {
	return o.ApplyT(func(v *WeeklySchedule) WeeklySchedule {
		if v != nil {
			return *v
		}
		var ret WeeklySchedule
		return ret
	}).(WeeklyScheduleOutput)
}

func (o WeeklySchedulePtrOutput) ScheduleRunDays() DayOfWeekArrayOutput {
	return o.ApplyT(func(v *WeeklySchedule) []DayOfWeek {
		if v == nil {
			return nil
		}
		return v.ScheduleRunDays
	}).(DayOfWeekArrayOutput)
}

// List of times of day this schedule has to be run.
func (o WeeklySchedulePtrOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklySchedule) []string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunTimes
	}).(pulumi.StringArrayOutput)
}

type WeeklyScheduleResponse struct {
	ScheduleRunDays []string `pulumi:"scheduleRunDays"`
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
}

type WeeklyScheduleResponseOutput struct{ *pulumi.OutputState }

func (WeeklyScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyScheduleResponse)(nil)).Elem()
}

func (o WeeklyScheduleResponseOutput) ToWeeklyScheduleResponseOutput() WeeklyScheduleResponseOutput {
	return o
}

func (o WeeklyScheduleResponseOutput) ToWeeklyScheduleResponseOutputWithContext(ctx context.Context) WeeklyScheduleResponseOutput {
	return o
}

func (o WeeklyScheduleResponseOutput) ScheduleRunDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyScheduleResponse) []string { return v.ScheduleRunDays }).(pulumi.StringArrayOutput)
}

// List of times of day this schedule has to be run.
func (o WeeklyScheduleResponseOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyScheduleResponse) []string { return v.ScheduleRunTimes }).(pulumi.StringArrayOutput)
}

type WeeklyScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (WeeklyScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyScheduleResponse)(nil)).Elem()
}

func (o WeeklyScheduleResponsePtrOutput) ToWeeklyScheduleResponsePtrOutput() WeeklyScheduleResponsePtrOutput {
	return o
}

func (o WeeklyScheduleResponsePtrOutput) ToWeeklyScheduleResponsePtrOutputWithContext(ctx context.Context) WeeklyScheduleResponsePtrOutput {
	return o
}

func (o WeeklyScheduleResponsePtrOutput) Elem() WeeklyScheduleResponseOutput {
	return o.ApplyT(func(v *WeeklyScheduleResponse) WeeklyScheduleResponse {
		if v != nil {
			return *v
		}
		var ret WeeklyScheduleResponse
		return ret
	}).(WeeklyScheduleResponseOutput)
}

func (o WeeklyScheduleResponsePtrOutput) ScheduleRunDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunDays
	}).(pulumi.StringArrayOutput)
}

// List of times of day this schedule has to be run.
func (o WeeklyScheduleResponsePtrOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunTimes
	}).(pulumi.StringArrayOutput)
}

// Details of an inquired protectable item.
type WorkloadInquiryDetails struct {
	// Inquiry validation such as permissions and other backup validations.
	InquiryValidation *InquiryValidation `pulumi:"inquiryValidation"`
	// Contains the protectable item Count inside this Container.
	ItemCount *float64 `pulumi:"itemCount"`
	// Type of the Workload such as SQL, Oracle etc.
	Type *string `pulumi:"type"`
}

// WorkloadInquiryDetailsInput is an input type that accepts WorkloadInquiryDetailsArgs and WorkloadInquiryDetailsOutput values.
// You can construct a concrete instance of `WorkloadInquiryDetailsInput` via:
//
//	WorkloadInquiryDetailsArgs{...}
type WorkloadInquiryDetailsInput interface {
	pulumi.Input

	ToWorkloadInquiryDetailsOutput() WorkloadInquiryDetailsOutput
	ToWorkloadInquiryDetailsOutputWithContext(context.Context) WorkloadInquiryDetailsOutput
}

// Details of an inquired protectable item.
type WorkloadInquiryDetailsArgs struct {
	// Inquiry validation such as permissions and other backup validations.
	InquiryValidation InquiryValidationPtrInput `pulumi:"inquiryValidation"`
	// Contains the protectable item Count inside this Container.
	ItemCount pulumi.Float64PtrInput `pulumi:"itemCount"`
	// Type of the Workload such as SQL, Oracle etc.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (WorkloadInquiryDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadInquiryDetails)(nil)).Elem()
}

func (i WorkloadInquiryDetailsArgs) ToWorkloadInquiryDetailsOutput() WorkloadInquiryDetailsOutput {
	return i.ToWorkloadInquiryDetailsOutputWithContext(context.Background())
}

func (i WorkloadInquiryDetailsArgs) ToWorkloadInquiryDetailsOutputWithContext(ctx context.Context) WorkloadInquiryDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadInquiryDetailsOutput)
}

// WorkloadInquiryDetailsArrayInput is an input type that accepts WorkloadInquiryDetailsArray and WorkloadInquiryDetailsArrayOutput values.
// You can construct a concrete instance of `WorkloadInquiryDetailsArrayInput` via:
//
//	WorkloadInquiryDetailsArray{ WorkloadInquiryDetailsArgs{...} }
type WorkloadInquiryDetailsArrayInput interface {
	pulumi.Input

	ToWorkloadInquiryDetailsArrayOutput() WorkloadInquiryDetailsArrayOutput
	ToWorkloadInquiryDetailsArrayOutputWithContext(context.Context) WorkloadInquiryDetailsArrayOutput
}

type WorkloadInquiryDetailsArray []WorkloadInquiryDetailsInput

func (WorkloadInquiryDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadInquiryDetails)(nil)).Elem()
}

func (i WorkloadInquiryDetailsArray) ToWorkloadInquiryDetailsArrayOutput() WorkloadInquiryDetailsArrayOutput {
	return i.ToWorkloadInquiryDetailsArrayOutputWithContext(context.Background())
}

func (i WorkloadInquiryDetailsArray) ToWorkloadInquiryDetailsArrayOutputWithContext(ctx context.Context) WorkloadInquiryDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadInquiryDetailsArrayOutput)
}

// Details of an inquired protectable item.
type WorkloadInquiryDetailsOutput struct{ *pulumi.OutputState }

func (WorkloadInquiryDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadInquiryDetails)(nil)).Elem()
}

func (o WorkloadInquiryDetailsOutput) ToWorkloadInquiryDetailsOutput() WorkloadInquiryDetailsOutput {
	return o
}

func (o WorkloadInquiryDetailsOutput) ToWorkloadInquiryDetailsOutputWithContext(ctx context.Context) WorkloadInquiryDetailsOutput {
	return o
}

// Inquiry validation such as permissions and other backup validations.
func (o WorkloadInquiryDetailsOutput) InquiryValidation() InquiryValidationPtrOutput {
	return o.ApplyT(func(v WorkloadInquiryDetails) *InquiryValidation { return v.InquiryValidation }).(InquiryValidationPtrOutput)
}

// Contains the protectable item Count inside this Container.
func (o WorkloadInquiryDetailsOutput) ItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadInquiryDetails) *float64 { return v.ItemCount }).(pulumi.Float64PtrOutput)
}

// Type of the Workload such as SQL, Oracle etc.
func (o WorkloadInquiryDetailsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadInquiryDetails) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WorkloadInquiryDetailsArrayOutput struct{ *pulumi.OutputState }

func (WorkloadInquiryDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadInquiryDetails)(nil)).Elem()
}

func (o WorkloadInquiryDetailsArrayOutput) ToWorkloadInquiryDetailsArrayOutput() WorkloadInquiryDetailsArrayOutput {
	return o
}

func (o WorkloadInquiryDetailsArrayOutput) ToWorkloadInquiryDetailsArrayOutputWithContext(ctx context.Context) WorkloadInquiryDetailsArrayOutput {
	return o
}

func (o WorkloadInquiryDetailsArrayOutput) Index(i pulumi.IntInput) WorkloadInquiryDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadInquiryDetails {
		return vs[0].([]WorkloadInquiryDetails)[vs[1].(int)]
	}).(WorkloadInquiryDetailsOutput)
}

// Details of an inquired protectable item.
type WorkloadInquiryDetailsResponse struct {
	// Inquiry validation such as permissions and other backup validations.
	InquiryValidation *InquiryValidationResponse `pulumi:"inquiryValidation"`
	// Contains the protectable item Count inside this Container.
	ItemCount *float64 `pulumi:"itemCount"`
	// Type of the Workload such as SQL, Oracle etc.
	Type *string `pulumi:"type"`
}

// Details of an inquired protectable item.
type WorkloadInquiryDetailsResponseOutput struct{ *pulumi.OutputState }

func (WorkloadInquiryDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadInquiryDetailsResponse)(nil)).Elem()
}

func (o WorkloadInquiryDetailsResponseOutput) ToWorkloadInquiryDetailsResponseOutput() WorkloadInquiryDetailsResponseOutput {
	return o
}

func (o WorkloadInquiryDetailsResponseOutput) ToWorkloadInquiryDetailsResponseOutputWithContext(ctx context.Context) WorkloadInquiryDetailsResponseOutput {
	return o
}

// Inquiry validation such as permissions and other backup validations.
func (o WorkloadInquiryDetailsResponseOutput) InquiryValidation() InquiryValidationResponsePtrOutput {
	return o.ApplyT(func(v WorkloadInquiryDetailsResponse) *InquiryValidationResponse { return v.InquiryValidation }).(InquiryValidationResponsePtrOutput)
}

// Contains the protectable item Count inside this Container.
func (o WorkloadInquiryDetailsResponseOutput) ItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadInquiryDetailsResponse) *float64 { return v.ItemCount }).(pulumi.Float64PtrOutput)
}

// Type of the Workload such as SQL, Oracle etc.
func (o WorkloadInquiryDetailsResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadInquiryDetailsResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WorkloadInquiryDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (WorkloadInquiryDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadInquiryDetailsResponse)(nil)).Elem()
}

func (o WorkloadInquiryDetailsResponseArrayOutput) ToWorkloadInquiryDetailsResponseArrayOutput() WorkloadInquiryDetailsResponseArrayOutput {
	return o
}

func (o WorkloadInquiryDetailsResponseArrayOutput) ToWorkloadInquiryDetailsResponseArrayOutputWithContext(ctx context.Context) WorkloadInquiryDetailsResponseArrayOutput {
	return o
}

func (o WorkloadInquiryDetailsResponseArrayOutput) Index(i pulumi.IntInput) WorkloadInquiryDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadInquiryDetailsResponse {
		return vs[0].([]WorkloadInquiryDetailsResponse)[vs[1].(int)]
	}).(WorkloadInquiryDetailsResponseOutput)
}

// Yearly retention schedule.
type YearlyRetentionSchedule struct {
	// List of months of year of yearly retention policy.
	MonthsOfYear []MonthOfYear `pulumi:"monthsOfYear"`
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Daily retention format for yearly retention policy.
	RetentionScheduleDaily *DailyRetentionFormat `pulumi:"retentionScheduleDaily"`
	// Retention schedule format for yearly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for yearly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormat `pulumi:"retentionScheduleWeekly"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// YearlyRetentionScheduleInput is an input type that accepts YearlyRetentionScheduleArgs and YearlyRetentionScheduleOutput values.
// You can construct a concrete instance of `YearlyRetentionScheduleInput` via:
//
//	YearlyRetentionScheduleArgs{...}
type YearlyRetentionScheduleInput interface {
	pulumi.Input

	ToYearlyRetentionScheduleOutput() YearlyRetentionScheduleOutput
	ToYearlyRetentionScheduleOutputWithContext(context.Context) YearlyRetentionScheduleOutput
}

// Yearly retention schedule.
type YearlyRetentionScheduleArgs struct {
	// List of months of year of yearly retention policy.
	MonthsOfYear MonthOfYearArrayInput `pulumi:"monthsOfYear"`
	// Retention duration of retention Policy.
	RetentionDuration RetentionDurationPtrInput `pulumi:"retentionDuration"`
	// Daily retention format for yearly retention policy.
	RetentionScheduleDaily DailyRetentionFormatPtrInput `pulumi:"retentionScheduleDaily"`
	// Retention schedule format for yearly retention policy.
	RetentionScheduleFormatType pulumi.StringPtrInput `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for yearly retention policy.
	RetentionScheduleWeekly WeeklyRetentionFormatPtrInput `pulumi:"retentionScheduleWeekly"`
	// Retention times of retention policy.
	RetentionTimes pulumi.StringArrayInput `pulumi:"retentionTimes"`
}

func (YearlyRetentionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*YearlyRetentionSchedule)(nil)).Elem()
}

func (i YearlyRetentionScheduleArgs) ToYearlyRetentionScheduleOutput() YearlyRetentionScheduleOutput {
	return i.ToYearlyRetentionScheduleOutputWithContext(context.Background())
}

func (i YearlyRetentionScheduleArgs) ToYearlyRetentionScheduleOutputWithContext(ctx context.Context) YearlyRetentionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YearlyRetentionScheduleOutput)
}

func (i YearlyRetentionScheduleArgs) ToYearlyRetentionSchedulePtrOutput() YearlyRetentionSchedulePtrOutput {
	return i.ToYearlyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i YearlyRetentionScheduleArgs) ToYearlyRetentionSchedulePtrOutputWithContext(ctx context.Context) YearlyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YearlyRetentionScheduleOutput).ToYearlyRetentionSchedulePtrOutputWithContext(ctx)
}

// YearlyRetentionSchedulePtrInput is an input type that accepts YearlyRetentionScheduleArgs, YearlyRetentionSchedulePtr and YearlyRetentionSchedulePtrOutput values.
// You can construct a concrete instance of `YearlyRetentionSchedulePtrInput` via:
//
//	        YearlyRetentionScheduleArgs{...}
//
//	or:
//
//	        nil
type YearlyRetentionSchedulePtrInput interface {
	pulumi.Input

	ToYearlyRetentionSchedulePtrOutput() YearlyRetentionSchedulePtrOutput
	ToYearlyRetentionSchedulePtrOutputWithContext(context.Context) YearlyRetentionSchedulePtrOutput
}

type yearlyRetentionSchedulePtrType YearlyRetentionScheduleArgs

func YearlyRetentionSchedulePtr(v *YearlyRetentionScheduleArgs) YearlyRetentionSchedulePtrInput {
	return (*yearlyRetentionSchedulePtrType)(v)
}

func (*yearlyRetentionSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**YearlyRetentionSchedule)(nil)).Elem()
}

func (i *yearlyRetentionSchedulePtrType) ToYearlyRetentionSchedulePtrOutput() YearlyRetentionSchedulePtrOutput {
	return i.ToYearlyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i *yearlyRetentionSchedulePtrType) ToYearlyRetentionSchedulePtrOutputWithContext(ctx context.Context) YearlyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YearlyRetentionSchedulePtrOutput)
}

// Yearly retention schedule.
type YearlyRetentionScheduleOutput struct{ *pulumi.OutputState }

func (YearlyRetentionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*YearlyRetentionSchedule)(nil)).Elem()
}

func (o YearlyRetentionScheduleOutput) ToYearlyRetentionScheduleOutput() YearlyRetentionScheduleOutput {
	return o
}

func (o YearlyRetentionScheduleOutput) ToYearlyRetentionScheduleOutputWithContext(ctx context.Context) YearlyRetentionScheduleOutput {
	return o
}

func (o YearlyRetentionScheduleOutput) ToYearlyRetentionSchedulePtrOutput() YearlyRetentionSchedulePtrOutput {
	return o.ToYearlyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (o YearlyRetentionScheduleOutput) ToYearlyRetentionSchedulePtrOutputWithContext(ctx context.Context) YearlyRetentionSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v YearlyRetentionSchedule) *YearlyRetentionSchedule {
		return &v
	}).(YearlyRetentionSchedulePtrOutput)
}

// List of months of year of yearly retention policy.
func (o YearlyRetentionScheduleOutput) MonthsOfYear() MonthOfYearArrayOutput {
	return o.ApplyT(func(v YearlyRetentionSchedule) []MonthOfYear { return v.MonthsOfYear }).(MonthOfYearArrayOutput)
}

// Retention duration of retention Policy.
func (o YearlyRetentionScheduleOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v YearlyRetentionSchedule) *RetentionDuration { return v.RetentionDuration }).(RetentionDurationPtrOutput)
}

// Daily retention format for yearly retention policy.
func (o YearlyRetentionScheduleOutput) RetentionScheduleDaily() DailyRetentionFormatPtrOutput {
	return o.ApplyT(func(v YearlyRetentionSchedule) *DailyRetentionFormat { return v.RetentionScheduleDaily }).(DailyRetentionFormatPtrOutput)
}

// Retention schedule format for yearly retention policy.
func (o YearlyRetentionScheduleOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v YearlyRetentionSchedule) *string { return v.RetentionScheduleFormatType }).(pulumi.StringPtrOutput)
}

// Weekly retention format for yearly retention policy.
func (o YearlyRetentionScheduleOutput) RetentionScheduleWeekly() WeeklyRetentionFormatPtrOutput {
	return o.ApplyT(func(v YearlyRetentionSchedule) *WeeklyRetentionFormat { return v.RetentionScheduleWeekly }).(WeeklyRetentionFormatPtrOutput)
}

// Retention times of retention policy.
func (o YearlyRetentionScheduleOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v YearlyRetentionSchedule) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type YearlyRetentionSchedulePtrOutput struct{ *pulumi.OutputState }

func (YearlyRetentionSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**YearlyRetentionSchedule)(nil)).Elem()
}

func (o YearlyRetentionSchedulePtrOutput) ToYearlyRetentionSchedulePtrOutput() YearlyRetentionSchedulePtrOutput {
	return o
}

func (o YearlyRetentionSchedulePtrOutput) ToYearlyRetentionSchedulePtrOutputWithContext(ctx context.Context) YearlyRetentionSchedulePtrOutput {
	return o
}

func (o YearlyRetentionSchedulePtrOutput) Elem() YearlyRetentionScheduleOutput {
	return o.ApplyT(func(v *YearlyRetentionSchedule) YearlyRetentionSchedule {
		if v != nil {
			return *v
		}
		var ret YearlyRetentionSchedule
		return ret
	}).(YearlyRetentionScheduleOutput)
}

// List of months of year of yearly retention policy.
func (o YearlyRetentionSchedulePtrOutput) MonthsOfYear() MonthOfYearArrayOutput {
	return o.ApplyT(func(v *YearlyRetentionSchedule) []MonthOfYear {
		if v == nil {
			return nil
		}
		return v.MonthsOfYear
	}).(MonthOfYearArrayOutput)
}

// Retention duration of retention Policy.
func (o YearlyRetentionSchedulePtrOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v *YearlyRetentionSchedule) *RetentionDuration {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationPtrOutput)
}

// Daily retention format for yearly retention policy.
func (o YearlyRetentionSchedulePtrOutput) RetentionScheduleDaily() DailyRetentionFormatPtrOutput {
	return o.ApplyT(func(v *YearlyRetentionSchedule) *DailyRetentionFormat {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleDaily
	}).(DailyRetentionFormatPtrOutput)
}

// Retention schedule format for yearly retention policy.
func (o YearlyRetentionSchedulePtrOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *YearlyRetentionSchedule) *string {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleFormatType
	}).(pulumi.StringPtrOutput)
}

// Weekly retention format for yearly retention policy.
func (o YearlyRetentionSchedulePtrOutput) RetentionScheduleWeekly() WeeklyRetentionFormatPtrOutput {
	return o.ApplyT(func(v *YearlyRetentionSchedule) *WeeklyRetentionFormat {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleWeekly
	}).(WeeklyRetentionFormatPtrOutput)
}

// Retention times of retention policy.
func (o YearlyRetentionSchedulePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *YearlyRetentionSchedule) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

// Yearly retention schedule.
type YearlyRetentionScheduleResponse struct {
	// List of months of year of yearly retention policy.
	MonthsOfYear []string `pulumi:"monthsOfYear"`
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Daily retention format for yearly retention policy.
	RetentionScheduleDaily *DailyRetentionFormatResponse `pulumi:"retentionScheduleDaily"`
	// Retention schedule format for yearly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for yearly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormatResponse `pulumi:"retentionScheduleWeekly"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Yearly retention schedule.
type YearlyRetentionScheduleResponseOutput struct{ *pulumi.OutputState }

func (YearlyRetentionScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*YearlyRetentionScheduleResponse)(nil)).Elem()
}

func (o YearlyRetentionScheduleResponseOutput) ToYearlyRetentionScheduleResponseOutput() YearlyRetentionScheduleResponseOutput {
	return o
}

func (o YearlyRetentionScheduleResponseOutput) ToYearlyRetentionScheduleResponseOutputWithContext(ctx context.Context) YearlyRetentionScheduleResponseOutput {
	return o
}

// List of months of year of yearly retention policy.
func (o YearlyRetentionScheduleResponseOutput) MonthsOfYear() pulumi.StringArrayOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) []string { return v.MonthsOfYear }).(pulumi.StringArrayOutput)
}

// Retention duration of retention Policy.
func (o YearlyRetentionScheduleResponseOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) *RetentionDurationResponse { return v.RetentionDuration }).(RetentionDurationResponsePtrOutput)
}

// Daily retention format for yearly retention policy.
func (o YearlyRetentionScheduleResponseOutput) RetentionScheduleDaily() DailyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) *DailyRetentionFormatResponse { return v.RetentionScheduleDaily }).(DailyRetentionFormatResponsePtrOutput)
}

// Retention schedule format for yearly retention policy.
func (o YearlyRetentionScheduleResponseOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) *string { return v.RetentionScheduleFormatType }).(pulumi.StringPtrOutput)
}

// Weekly retention format for yearly retention policy.
func (o YearlyRetentionScheduleResponseOutput) RetentionScheduleWeekly() WeeklyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) *WeeklyRetentionFormatResponse {
		return v.RetentionScheduleWeekly
	}).(WeeklyRetentionFormatResponsePtrOutput)
}

// Retention times of retention policy.
func (o YearlyRetentionScheduleResponseOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type YearlyRetentionScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (YearlyRetentionScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**YearlyRetentionScheduleResponse)(nil)).Elem()
}

func (o YearlyRetentionScheduleResponsePtrOutput) ToYearlyRetentionScheduleResponsePtrOutput() YearlyRetentionScheduleResponsePtrOutput {
	return o
}

func (o YearlyRetentionScheduleResponsePtrOutput) ToYearlyRetentionScheduleResponsePtrOutputWithContext(ctx context.Context) YearlyRetentionScheduleResponsePtrOutput {
	return o
}

func (o YearlyRetentionScheduleResponsePtrOutput) Elem() YearlyRetentionScheduleResponseOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) YearlyRetentionScheduleResponse {
		if v != nil {
			return *v
		}
		var ret YearlyRetentionScheduleResponse
		return ret
	}).(YearlyRetentionScheduleResponseOutput)
}

// List of months of year of yearly retention policy.
func (o YearlyRetentionScheduleResponsePtrOutput) MonthsOfYear() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.MonthsOfYear
	}).(pulumi.StringArrayOutput)
}

// Retention duration of retention Policy.
func (o YearlyRetentionScheduleResponsePtrOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) *RetentionDurationResponse {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationResponsePtrOutput)
}

// Daily retention format for yearly retention policy.
func (o YearlyRetentionScheduleResponsePtrOutput) RetentionScheduleDaily() DailyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) *DailyRetentionFormatResponse {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleDaily
	}).(DailyRetentionFormatResponsePtrOutput)
}

// Retention schedule format for yearly retention policy.
func (o YearlyRetentionScheduleResponsePtrOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleFormatType
	}).(pulumi.StringPtrOutput)
}

// Weekly retention format for yearly retention policy.
func (o YearlyRetentionScheduleResponsePtrOutput) RetentionScheduleWeekly() WeeklyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) *WeeklyRetentionFormatResponse {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleWeekly
	}).(WeeklyRetentionFormatResponsePtrOutput)
}

// Retention times of retention policy.
func (o YearlyRetentionScheduleResponsePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(A2AContainerMappingInputOutput{})
	pulumi.RegisterOutputType(A2AContainerMappingInputPtrOutput{})
	pulumi.RegisterOutputType(A2ACrossClusterMigrationEnableProtectionInputOutput{})
	pulumi.RegisterOutputType(A2ACrossClusterMigrationEnableProtectionInputPtrOutput{})
	pulumi.RegisterOutputType(A2ACrossClusterMigrationPolicyCreationInputOutput{})
	pulumi.RegisterOutputType(A2ACrossClusterMigrationPolicyCreationInputPtrOutput{})
	pulumi.RegisterOutputType(A2ACrossClusterMigrationReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2ACrossClusterMigrationReplicationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(A2AEnableProtectionInputOutput{})
	pulumi.RegisterOutputType(A2AEnableProtectionInputPtrOutput{})
	pulumi.RegisterOutputType(A2AExtendedLocationDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AExtendedLocationDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(A2AFabricSpecificLocationDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AFabricSpecificLocationDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(A2APolicyCreationInputOutput{})
	pulumi.RegisterOutputType(A2APolicyCreationInputPtrOutput{})
	pulumi.RegisterOutputType(A2APolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2APolicyDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(A2AProtectedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AProtectedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(A2AProtectedManagedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AProtectedManagedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(A2AProtectionContainerMappingDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AProtectionContainerMappingDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(A2AReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AReplicationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(A2AUnprotectedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AUnprotectedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(A2AVmDiskInputDetailsOutput{})
	pulumi.RegisterOutputType(A2AVmDiskInputDetailsArrayOutput{})
	pulumi.RegisterOutputType(A2AVmManagedDiskInputDetailsOutput{})
	pulumi.RegisterOutputType(A2AVmManagedDiskInputDetailsArrayOutput{})
	pulumi.RegisterOutputType(A2AZoneDetailsResponseOutput{})
	pulumi.RegisterOutputType(A2AZoneDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(AddRecoveryServicesProviderInputPropertiesOutput{})
	pulumi.RegisterOutputType(AddVCenterRequestPropertiesOutput{})
	pulumi.RegisterOutputType(AddVCenterRequestPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AgentDetailsResponseOutput{})
	pulumi.RegisterOutputType(AgentDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(AgentDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(AgentDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplianceMonitoringDetailsResponseOutput{})
	pulumi.RegisterOutputType(ApplianceMonitoringDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplianceResourceDetailsResponseOutput{})
	pulumi.RegisterOutputType(ApplianceResourceDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureBackupServerContainerOutput{})
	pulumi.RegisterOutputType(AzureBackupServerContainerPtrOutput{})
	pulumi.RegisterOutputType(AzureBackupServerContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureFabricCreationInputOutput{})
	pulumi.RegisterOutputType(AzureFabricCreationInputPtrOutput{})
	pulumi.RegisterOutputType(AzureFabricSpecificDetailsResponseOutput{})
	pulumi.RegisterOutputType(AzureFabricSpecificDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFileShareProtectionPolicyOutput{})
	pulumi.RegisterOutputType(AzureFileShareProtectionPolicyPtrOutput{})
	pulumi.RegisterOutputType(AzureFileShareProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSClassicComputeVMContainerOutput{})
	pulumi.RegisterOutputType(AzureIaaSClassicComputeVMContainerPtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSClassicComputeVMContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSClassicComputeVMProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureIaaSClassicComputeVMProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSClassicComputeVMProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSComputeVMContainerOutput{})
	pulumi.RegisterOutputType(AzureIaaSComputeVMContainerPtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSComputeVMContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSComputeVMProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureIaaSComputeVMProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSComputeVMProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMHealthDetailsResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMHealthDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectionPolicyOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectionPolicyPtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(AzureMonitorAlertSettingsOutput{})
	pulumi.RegisterOutputType(AzureMonitorAlertSettingsPtrOutput{})
	pulumi.RegisterOutputType(AzureMonitorAlertSettingsResponseOutput{})
	pulumi.RegisterOutputType(AzureMonitorAlertSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureRecoveryServiceVaultProtectionIntentOutput{})
	pulumi.RegisterOutputType(AzureRecoveryServiceVaultProtectionIntentPtrOutput{})
	pulumi.RegisterOutputType(AzureRecoveryServiceVaultProtectionIntentResponseOutput{})
	pulumi.RegisterOutputType(AzureResourceProtectionIntentOutput{})
	pulumi.RegisterOutputType(AzureResourceProtectionIntentPtrOutput{})
	pulumi.RegisterOutputType(AzureResourceProtectionIntentResponseOutput{})
	pulumi.RegisterOutputType(AzureSQLAGWorkloadContainerProtectionContainerOutput{})
	pulumi.RegisterOutputType(AzureSQLAGWorkloadContainerProtectionContainerPtrOutput{})
	pulumi.RegisterOutputType(AzureSQLAGWorkloadContainerProtectionContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlContainerOutput{})
	pulumi.RegisterOutputType(AzureSqlContainerPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectionPolicyOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectionPolicyPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(AzureStorageContainerOutput{})
	pulumi.RegisterOutputType(AzureStorageContainerPtrOutput{})
	pulumi.RegisterOutputType(AzureStorageContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureToAzureCreateNetworkMappingInputOutput{})
	pulumi.RegisterOutputType(AzureToAzureCreateNetworkMappingInputPtrOutput{})
	pulumi.RegisterOutputType(AzureToAzureNetworkMappingSettingsResponseOutput{})
	pulumi.RegisterOutputType(AzureToAzureNetworkMappingSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureToAzureVmSyncedConfigDetailsResponseOutput{})
	pulumi.RegisterOutputType(AzureToAzureVmSyncedConfigDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureVMAppContainerProtectionContainerOutput{})
	pulumi.RegisterOutputType(AzureVMAppContainerProtectionContainerPtrOutput{})
	pulumi.RegisterOutputType(AzureVMAppContainerProtectionContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureVmDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(AzureVmDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectionPolicyOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectionPolicyPtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPAseDatabaseProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSQLDatabaseProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureWorkloadAutoProtectionIntentOutput{})
	pulumi.RegisterOutputType(AzureWorkloadAutoProtectionIntentPtrOutput{})
	pulumi.RegisterOutputType(AzureWorkloadAutoProtectionIntentResponseOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerPtrOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerAutoProtectionIntentOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerAutoProtectionIntentPtrOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerAutoProtectionIntentResponseOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerExtendedInfoOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureWorkloadSQLAutoProtectionIntentOutput{})
	pulumi.RegisterOutputType(AzureWorkloadSQLAutoProtectionIntentPtrOutput{})
	pulumi.RegisterOutputType(AzureWorkloadSQLAutoProtectionIntentResponseOutput{})
	pulumi.RegisterOutputType(ClassicAlertSettingsOutput{})
	pulumi.RegisterOutputType(ClassicAlertSettingsPtrOutput{})
	pulumi.RegisterOutputType(ClassicAlertSettingsResponseOutput{})
	pulumi.RegisterOutputType(ClassicAlertSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(CmkKekIdentityOutput{})
	pulumi.RegisterOutputType(CmkKekIdentityPtrOutput{})
	pulumi.RegisterOutputType(CmkKekIdentityResponseOutput{})
	pulumi.RegisterOutputType(CmkKekIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(CmkKeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(CmkKeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CmkKeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CmkKeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerIdentityInfoOutput{})
	pulumi.RegisterOutputType(ContainerIdentityInfoPtrOutput{})
	pulumi.RegisterOutputType(ContainerIdentityInfoResponseOutput{})
	pulumi.RegisterOutputType(ContainerIdentityInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(CreateNetworkMappingInputPropertiesOutput{})
	pulumi.RegisterOutputType(CreatePolicyInputPropertiesOutput{})
	pulumi.RegisterOutputType(CreatePolicyInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CreateProtectionContainerMappingInputPropertiesOutput{})
	pulumi.RegisterOutputType(CreateProtectionContainerMappingInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CreateRecoveryPlanInputPropertiesOutput{})
	pulumi.RegisterOutputType(CriticalJobHistoryDetailsResponseOutput{})
	pulumi.RegisterOutputType(CriticalJobHistoryDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(CrossSubscriptionRestoreSettingsOutput{})
	pulumi.RegisterOutputType(CrossSubscriptionRestoreSettingsPtrOutput{})
	pulumi.RegisterOutputType(CrossSubscriptionRestoreSettingsResponseOutput{})
	pulumi.RegisterOutputType(CrossSubscriptionRestoreSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(CurrentJobDetailsResponseOutput{})
	pulumi.RegisterOutputType(CurrentScenarioDetailsResponseOutput{})
	pulumi.RegisterOutputType(CurrentScenarioDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(DPMContainerExtendedInfoOutput{})
	pulumi.RegisterOutputType(DPMContainerExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(DPMContainerExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(DPMContainerExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(DailyRetentionFormatOutput{})
	pulumi.RegisterOutputType(DailyRetentionFormatPtrOutput{})
	pulumi.RegisterOutputType(DailyRetentionFormatResponseOutput{})
	pulumi.RegisterOutputType(DailyRetentionFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(DailyRetentionScheduleOutput{})
	pulumi.RegisterOutputType(DailyRetentionSchedulePtrOutput{})
	pulumi.RegisterOutputType(DailyRetentionScheduleResponseOutput{})
	pulumi.RegisterOutputType(DailyRetentionScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(DailyScheduleOutput{})
	pulumi.RegisterOutputType(DailySchedulePtrOutput{})
	pulumi.RegisterOutputType(DailyScheduleResponseOutput{})
	pulumi.RegisterOutputType(DailyScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(DataStoreResponseOutput{})
	pulumi.RegisterOutputType(DataStoreResponseArrayOutput{})
	pulumi.RegisterOutputType(DataStoreUtilizationDetailsResponseOutput{})
	pulumi.RegisterOutputType(DataStoreUtilizationDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(DayOutput{})
	pulumi.RegisterOutputType(DayArrayOutput{})
	pulumi.RegisterOutputType(DayResponseOutput{})
	pulumi.RegisterOutputType(DayResponseArrayOutput{})
	pulumi.RegisterOutputType(DiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(DiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(DiskEncryptionInfoOutput{})
	pulumi.RegisterOutputType(DiskEncryptionInfoPtrOutput{})
	pulumi.RegisterOutputType(DiskEncryptionKeyInfoOutput{})
	pulumi.RegisterOutputType(DiskEncryptionKeyInfoPtrOutput{})
	pulumi.RegisterOutputType(DiskExclusionPropertiesOutput{})
	pulumi.RegisterOutputType(DiskExclusionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DiskExclusionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DiskExclusionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DistributedNodesInfoOutput{})
	pulumi.RegisterOutputType(DistributedNodesInfoArrayOutput{})
	pulumi.RegisterOutputType(DistributedNodesInfoResponseOutput{})
	pulumi.RegisterOutputType(DistributedNodesInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(DpmContainerOutput{})
	pulumi.RegisterOutputType(DpmContainerPtrOutput{})
	pulumi.RegisterOutputType(DpmContainerResponseOutput{})
	pulumi.RegisterOutputType(DraDetailsResponseOutput{})
	pulumi.RegisterOutputType(DraDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(EnableMigrationInputPropertiesOutput{})
	pulumi.RegisterOutputType(EnableProtectionInputPropertiesOutput{})
	pulumi.RegisterOutputType(EnableProtectionInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionDetailsResponseOutput{})
	pulumi.RegisterOutputType(EncryptionDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponsePtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationOutput{})
	pulumi.RegisterOutputType(ExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponseOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(ExtendedPropertiesOutput{})
	pulumi.RegisterOutputType(ExtendedPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExtendedPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ExtendedPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(FabricCreationInputPropertiesOutput{})
	pulumi.RegisterOutputType(FabricCreationInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FabricPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GatewayOperationDetailsResponseOutput{})
	pulumi.RegisterOutputType(GatewayOperationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(GenericContainerOutput{})
	pulumi.RegisterOutputType(GenericContainerPtrOutput{})
	pulumi.RegisterOutputType(GenericContainerExtendedInfoOutput{})
	pulumi.RegisterOutputType(GenericContainerExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(GenericContainerExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(GenericContainerExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(GenericContainerResponseOutput{})
	pulumi.RegisterOutputType(GenericProtectedItemOutput{})
	pulumi.RegisterOutputType(GenericProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(GenericProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(GenericProtectionPolicyOutput{})
	pulumi.RegisterOutputType(GenericProtectionPolicyPtrOutput{})
	pulumi.RegisterOutputType(GenericProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(HealthErrorResponseOutput{})
	pulumi.RegisterOutputType(HealthErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(HourlyScheduleOutput{})
	pulumi.RegisterOutputType(HourlySchedulePtrOutput{})
	pulumi.RegisterOutputType(HourlyScheduleResponseOutput{})
	pulumi.RegisterOutputType(HourlyScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(HyperVHostDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVHostDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzureDiskInputDetailsOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzureDiskInputDetailsArrayOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzureEnableProtectionInputOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzureEnableProtectionInputPtrOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzureManagedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzureManagedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzurePolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzurePolicyDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzurePolicyInputOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzurePolicyInputPtrOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzureReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaAzureReplicationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBasePolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBasePolicyDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBaseReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBaseReplicationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBluePolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBluePolicyDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBluePolicyInputOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBluePolicyInputPtrOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBlueReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaBlueReplicationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(HyperVReplicaPolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaPolicyDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(HyperVReplicaPolicyInputOutput{})
	pulumi.RegisterOutputType(HyperVReplicaPolicyInputPtrOutput{})
	pulumi.RegisterOutputType(HyperVReplicaReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVReplicaReplicationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(HyperVSiteDetailsResponseOutput{})
	pulumi.RegisterOutputType(HyperVSiteDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(IPConfigDetailsResponseOutput{})
	pulumi.RegisterOutputType(IPConfigDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(IaaSVMContainerOutput{})
	pulumi.RegisterOutputType(IaaSVMContainerPtrOutput{})
	pulumi.RegisterOutputType(IaaSVMContainerResponseOutput{})
	pulumi.RegisterOutputType(IdentityDataOutput{})
	pulumi.RegisterOutputType(IdentityDataPtrOutput{})
	pulumi.RegisterOutputType(IdentityDataResponseOutput{})
	pulumi.RegisterOutputType(IdentityDataResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentityProviderDetailsResponseOutput{})
	pulumi.RegisterOutputType(IdentityProviderDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentityProviderInputOutput{})
	pulumi.RegisterOutputType(IdentityProviderInputPtrOutput{})
	pulumi.RegisterOutputType(ImmutabilitySettingsOutput{})
	pulumi.RegisterOutputType(ImmutabilitySettingsPtrOutput{})
	pulumi.RegisterOutputType(ImmutabilitySettingsResponseOutput{})
	pulumi.RegisterOutputType(ImmutabilitySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageAgentDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageAgentDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageAzureV2DiskInputDetailsOutput{})
	pulumi.RegisterOutputType(InMageAzureV2DiskInputDetailsArrayOutput{})
	pulumi.RegisterOutputType(InMageAzureV2EnableProtectionInputOutput{})
	pulumi.RegisterOutputType(InMageAzureV2EnableProtectionInputPtrOutput{})
	pulumi.RegisterOutputType(InMageAzureV2ManagedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageAzureV2ManagedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InMageAzureV2PolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageAzureV2PolicyDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageAzureV2PolicyInputOutput{})
	pulumi.RegisterOutputType(InMageAzureV2PolicyInputPtrOutput{})
	pulumi.RegisterOutputType(InMageAzureV2ProtectedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageAzureV2ProtectedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InMageAzureV2ReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageAzureV2ReplicationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageAzureV2SwitchProviderBlockingErrorDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageAzureV2SwitchProviderBlockingErrorDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InMageAzureV2SwitchProviderDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageAzureV2SwitchProviderDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageBasePolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageBasePolicyDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageDiskExclusionInputOutput{})
	pulumi.RegisterOutputType(InMageDiskExclusionInputPtrOutput{})
	pulumi.RegisterOutputType(InMageDiskSignatureExclusionOptionsOutput{})
	pulumi.RegisterOutputType(InMageDiskSignatureExclusionOptionsArrayOutput{})
	pulumi.RegisterOutputType(InMageEnableProtectionInputOutput{})
	pulumi.RegisterOutputType(InMageEnableProtectionInputPtrOutput{})
	pulumi.RegisterOutputType(InMageFabricSwitchProviderBlockingErrorDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageFabricSwitchProviderBlockingErrorDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InMagePolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMagePolicyDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMagePolicyInputOutput{})
	pulumi.RegisterOutputType(InMagePolicyInputPtrOutput{})
	pulumi.RegisterOutputType(InMageProtectedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageProtectedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InMageRcmAgentUpgradeBlockingErrorDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmAgentUpgradeBlockingErrorDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InMageRcmDiscoveredProtectedVmDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmDiscoveredProtectedVmDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageRcmDiskInputOutput{})
	pulumi.RegisterOutputType(InMageRcmDiskInputArrayOutput{})
	pulumi.RegisterOutputType(InMageRcmDisksDefaultInputOutput{})
	pulumi.RegisterOutputType(InMageRcmDisksDefaultInputPtrOutput{})
	pulumi.RegisterOutputType(InMageRcmEnableProtectionInputOutput{})
	pulumi.RegisterOutputType(InMageRcmEnableProtectionInputPtrOutput{})
	pulumi.RegisterOutputType(InMageRcmFabricCreationInputOutput{})
	pulumi.RegisterOutputType(InMageRcmFabricCreationInputPtrOutput{})
	pulumi.RegisterOutputType(InMageRcmFabricSpecificDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmFabricSpecificDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageRcmFailbackDiscoveredProtectedVmDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmFailbackDiscoveredProtectedVmDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageRcmFailbackMobilityAgentDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmFailbackMobilityAgentDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageRcmFailbackNicDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmFailbackNicDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InMageRcmFailbackPolicyCreationInputOutput{})
	pulumi.RegisterOutputType(InMageRcmFailbackPolicyCreationInputPtrOutput{})
	pulumi.RegisterOutputType(InMageRcmFailbackPolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmFailbackPolicyDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageRcmFailbackProtectedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmFailbackProtectedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InMageRcmFailbackReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmFailbackReplicationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageRcmFailbackSyncDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmFailbackSyncDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageRcmLastAgentUpgradeErrorDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmLastAgentUpgradeErrorDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InMageRcmMobilityAgentDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmMobilityAgentDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageRcmNicDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmNicDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InMageRcmPolicyCreationInputOutput{})
	pulumi.RegisterOutputType(InMageRcmPolicyCreationInputPtrOutput{})
	pulumi.RegisterOutputType(InMageRcmPolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmPolicyDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageRcmProtectedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmProtectedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(InMageRcmProtectionContainerMappingDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmProtectionContainerMappingDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageRcmReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmReplicationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageRcmSyncDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageRcmSyncDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(InMageReplicationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InMageVolumeExclusionOptionsOutput{})
	pulumi.RegisterOutputType(InMageVolumeExclusionOptionsArrayOutput{})
	pulumi.RegisterOutputType(InitialReplicationDetailsResponseOutput{})
	pulumi.RegisterOutputType(InitialReplicationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(InnerHealthErrorResponseOutput{})
	pulumi.RegisterOutputType(InnerHealthErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(InputEndpointResponseOutput{})
	pulumi.RegisterOutputType(InputEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(InquiryInfoOutput{})
	pulumi.RegisterOutputType(InquiryInfoPtrOutput{})
	pulumi.RegisterOutputType(InquiryInfoResponseOutput{})
	pulumi.RegisterOutputType(InquiryInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(InquiryValidationOutput{})
	pulumi.RegisterOutputType(InquiryValidationPtrOutput{})
	pulumi.RegisterOutputType(InquiryValidationResponseOutput{})
	pulumi.RegisterOutputType(InquiryValidationResponsePtrOutput{})
	pulumi.RegisterOutputType(InstantRPAdditionalDetailsOutput{})
	pulumi.RegisterOutputType(InstantRPAdditionalDetailsPtrOutput{})
	pulumi.RegisterOutputType(InstantRPAdditionalDetailsResponseOutput{})
	pulumi.RegisterOutputType(InstantRPAdditionalDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(KPIResourceHealthDetailsOutput{})
	pulumi.RegisterOutputType(KPIResourceHealthDetailsMapOutput{})
	pulumi.RegisterOutputType(KPIResourceHealthDetailsResponseOutput{})
	pulumi.RegisterOutputType(KPIResourceHealthDetailsResponseMapOutput{})
	pulumi.RegisterOutputType(KeyEncryptionKeyInfoOutput{})
	pulumi.RegisterOutputType(KeyEncryptionKeyInfoPtrOutput{})
	pulumi.RegisterOutputType(LogSchedulePolicyOutput{})
	pulumi.RegisterOutputType(LogSchedulePolicyPtrOutput{})
	pulumi.RegisterOutputType(LogSchedulePolicyResponseOutput{})
	pulumi.RegisterOutputType(LogSchedulePolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(LongTermRetentionPolicyOutput{})
	pulumi.RegisterOutputType(LongTermRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(LongTermRetentionPolicyResponseOutput{})
	pulumi.RegisterOutputType(LongTermRetentionPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(LongTermSchedulePolicyOutput{})
	pulumi.RegisterOutputType(LongTermSchedulePolicyPtrOutput{})
	pulumi.RegisterOutputType(LongTermSchedulePolicyResponseOutput{})
	pulumi.RegisterOutputType(LongTermSchedulePolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(MABContainerHealthDetailsOutput{})
	pulumi.RegisterOutputType(MABContainerHealthDetailsArrayOutput{})
	pulumi.RegisterOutputType(MABContainerHealthDetailsResponseOutput{})
	pulumi.RegisterOutputType(MABContainerHealthDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(MabContainerOutput{})
	pulumi.RegisterOutputType(MabContainerPtrOutput{})
	pulumi.RegisterOutputType(MabContainerExtendedInfoOutput{})
	pulumi.RegisterOutputType(MabContainerExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(MabContainerExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(MabContainerExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(MabContainerResponseOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(MabProtectionPolicyOutput{})
	pulumi.RegisterOutputType(MabProtectionPolicyPtrOutput{})
	pulumi.RegisterOutputType(MabProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(MarsAgentDetailsResponseOutput{})
	pulumi.RegisterOutputType(MarsAgentDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(MasterTargetServerResponseOutput{})
	pulumi.RegisterOutputType(MasterTargetServerResponseArrayOutput{})
	pulumi.RegisterOutputType(MigrationItemPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MobilityServiceUpdateResponseOutput{})
	pulumi.RegisterOutputType(MobilityServiceUpdateResponseArrayOutput{})
	pulumi.RegisterOutputType(MonitoringSettingsOutput{})
	pulumi.RegisterOutputType(MonitoringSettingsPtrOutput{})
	pulumi.RegisterOutputType(MonitoringSettingsResponseOutput{})
	pulumi.RegisterOutputType(MonitoringSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(MonthlyRetentionScheduleOutput{})
	pulumi.RegisterOutputType(MonthlyRetentionSchedulePtrOutput{})
	pulumi.RegisterOutputType(MonthlyRetentionScheduleResponseOutput{})
	pulumi.RegisterOutputType(MonthlyRetentionScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkMappingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(OSDetailsResponseOutput{})
	pulumi.RegisterOutputType(OSDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(OSDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(OSDiskDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(OSUpgradeSupportedVersionsResponseOutput{})
	pulumi.RegisterOutputType(OSUpgradeSupportedVersionsResponseArrayOutput{})
	pulumi.RegisterOutputType(PolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionTypeOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionTypePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionVaultPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(ProcessServerDetailsResponseOutput{})
	pulumi.RegisterOutputType(ProcessServerDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(ProcessServerResponseOutput{})
	pulumi.RegisterOutputType(ProcessServerResponseArrayOutput{})
	pulumi.RegisterOutputType(ProtectionContainerMappingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PushInstallerDetailsResponseOutput{})
	pulumi.RegisterOutputType(PushInstallerDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(RcmProxyDetailsResponseOutput{})
	pulumi.RegisterOutputType(RcmProxyDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanA2ADetailsResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanA2ADetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanA2AInputOutput{})
	pulumi.RegisterOutputType(RecoveryPlanA2AInputArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanActionOutput{})
	pulumi.RegisterOutputType(RecoveryPlanActionArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanActionResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanActionResponseArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanAutomationRunbookActionDetailsOutput{})
	pulumi.RegisterOutputType(RecoveryPlanAutomationRunbookActionDetailsResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanGroupOutput{})
	pulumi.RegisterOutputType(RecoveryPlanGroupArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanGroupResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanManualActionDetailsOutput{})
	pulumi.RegisterOutputType(RecoveryPlanManualActionDetailsResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProtectedItemOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProtectedItemArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(RecoveryPlanProtectedItemResponseArrayOutput{})
	pulumi.RegisterOutputType(RecoveryPlanScriptActionDetailsOutput{})
	pulumi.RegisterOutputType(RecoveryPlanScriptActionDetailsResponseOutput{})
	pulumi.RegisterOutputType(RecoveryServicesProviderPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ReplicationAgentDetailsResponseOutput{})
	pulumi.RegisterOutputType(ReplicationAgentDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(ReplicationProtectedItemPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ReprotectAgentDetailsResponseOutput{})
	pulumi.RegisterOutputType(ReprotectAgentDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceGuardOperationDetailOutput{})
	pulumi.RegisterOutputType(ResourceGuardOperationDetailArrayOutput{})
	pulumi.RegisterOutputType(ResourceGuardOperationDetailResponseOutput{})
	pulumi.RegisterOutputType(ResourceGuardOperationDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceGuardProxyBaseOutput{})
	pulumi.RegisterOutputType(ResourceGuardProxyBasePtrOutput{})
	pulumi.RegisterOutputType(ResourceGuardProxyBaseResponseOutput{})
	pulumi.RegisterOutputType(ResourceHealthDetailsResponseOutput{})
	pulumi.RegisterOutputType(ResourceHealthDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(RestoreSettingsOutput{})
	pulumi.RegisterOutputType(RestoreSettingsPtrOutput{})
	pulumi.RegisterOutputType(RestoreSettingsResponseOutput{})
	pulumi.RegisterOutputType(RestoreSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(RetentionDurationOutput{})
	pulumi.RegisterOutputType(RetentionDurationPtrOutput{})
	pulumi.RegisterOutputType(RetentionDurationResponseOutput{})
	pulumi.RegisterOutputType(RetentionDurationResponsePtrOutput{})
	pulumi.RegisterOutputType(RetentionVolumeResponseOutput{})
	pulumi.RegisterOutputType(RetentionVolumeResponseArrayOutput{})
	pulumi.RegisterOutputType(RunAsAccountResponseOutput{})
	pulumi.RegisterOutputType(RunAsAccountResponseArrayOutput{})
	pulumi.RegisterOutputType(SecuritySettingsOutput{})
	pulumi.RegisterOutputType(SecuritySettingsPtrOutput{})
	pulumi.RegisterOutputType(SecuritySettingsResponseOutput{})
	pulumi.RegisterOutputType(SecuritySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(SettingsOutput{})
	pulumi.RegisterOutputType(SettingsPtrOutput{})
	pulumi.RegisterOutputType(SettingsResponseOutput{})
	pulumi.RegisterOutputType(SettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(SimpleRetentionPolicyOutput{})
	pulumi.RegisterOutputType(SimpleRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(SimpleRetentionPolicyResponseOutput{})
	pulumi.RegisterOutputType(SimpleRetentionPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyOutput{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyPtrOutput{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyResponseOutput{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyV2Output{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyV2PtrOutput{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyV2ResponseOutput{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyV2ResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SnapshotBackupAdditionalDetailsOutput{})
	pulumi.RegisterOutputType(SnapshotBackupAdditionalDetailsPtrOutput{})
	pulumi.RegisterOutputType(SnapshotBackupAdditionalDetailsResponseOutput{})
	pulumi.RegisterOutputType(SnapshotBackupAdditionalDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(SoftDeleteSettingsOutput{})
	pulumi.RegisterOutputType(SoftDeleteSettingsPtrOutput{})
	pulumi.RegisterOutputType(SoftDeleteSettingsResponseOutput{})
	pulumi.RegisterOutputType(SoftDeleteSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageClassificationMappingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageMappingInputPropertiesOutput{})
	pulumi.RegisterOutputType(StorageMappingInputPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SubProtectionPolicyOutput{})
	pulumi.RegisterOutputType(SubProtectionPolicyArrayOutput{})
	pulumi.RegisterOutputType(SubProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(SubProtectionPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TieringPolicyOutput{})
	pulumi.RegisterOutputType(TieringPolicyMapOutput{})
	pulumi.RegisterOutputType(TieringPolicyResponseOutput{})
	pulumi.RegisterOutputType(TieringPolicyResponseMapOutput{})
	pulumi.RegisterOutputType(UpgradeDetailsResponseOutput{})
	pulumi.RegisterOutputType(UpgradeDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityPropertiesOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedManagedIdentityDetailsOutput{})
	pulumi.RegisterOutputType(UserAssignedManagedIdentityDetailsPtrOutput{})
	pulumi.RegisterOutputType(UserAssignedManagedIdentityDetailsResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedManagedIdentityDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(UserIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(VCenterPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VMNicDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMNicDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(VMwareCbtContainerMappingInputOutput{})
	pulumi.RegisterOutputType(VMwareCbtContainerMappingInputPtrOutput{})
	pulumi.RegisterOutputType(VMwareCbtDiskInputOutput{})
	pulumi.RegisterOutputType(VMwareCbtDiskInputArrayOutput{})
	pulumi.RegisterOutputType(VMwareCbtEnableMigrationInputOutput{})
	pulumi.RegisterOutputType(VMwareCbtMigrationDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMwareCbtMigrationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(VMwareCbtNicDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMwareCbtNicDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(VMwareCbtPolicyCreationInputOutput{})
	pulumi.RegisterOutputType(VMwareCbtPolicyCreationInputPtrOutput{})
	pulumi.RegisterOutputType(VMwareCbtProtectedDiskDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMwareCbtProtectedDiskDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(VMwareCbtProtectionContainerMappingDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMwareCbtProtectionContainerMappingDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(VMwareCbtSecurityProfilePropertiesOutput{})
	pulumi.RegisterOutputType(VMwareCbtSecurityProfilePropertiesPtrOutput{})
	pulumi.RegisterOutputType(VMwareCbtSecurityProfilePropertiesResponseOutput{})
	pulumi.RegisterOutputType(VMwareCbtSecurityProfilePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VMwareDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMwareDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(VMwareV2FabricCreationInputOutput{})
	pulumi.RegisterOutputType(VMwareV2FabricCreationInputPtrOutput{})
	pulumi.RegisterOutputType(VMwareV2FabricSpecificDetailsResponseOutput{})
	pulumi.RegisterOutputType(VMwareV2FabricSpecificDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(VaultPrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(VaultPrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(VaultPropertiesOutput{})
	pulumi.RegisterOutputType(VaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VaultPropertiesEncryptionOutput{})
	pulumi.RegisterOutputType(VaultPropertiesEncryptionPtrOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseEncryptionOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseEncryptionPtrOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseMoveDetailsOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseMoveDetailsPtrOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseRedundancySettingsOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseRedundancySettingsPtrOutput{})
	pulumi.RegisterOutputType(VaultRetentionPolicyOutput{})
	pulumi.RegisterOutputType(VaultRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(VaultRetentionPolicyResponseOutput{})
	pulumi.RegisterOutputType(VaultRetentionPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(VersionDetailsResponseOutput{})
	pulumi.RegisterOutputType(VersionDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(VmmDetailsResponseOutput{})
	pulumi.RegisterOutputType(VmmDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(VmmToAzureCreateNetworkMappingInputOutput{})
	pulumi.RegisterOutputType(VmmToAzureCreateNetworkMappingInputPtrOutput{})
	pulumi.RegisterOutputType(VmmToAzureNetworkMappingSettingsResponseOutput{})
	pulumi.RegisterOutputType(VmmToAzureNetworkMappingSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(VmmToVmmCreateNetworkMappingInputOutput{})
	pulumi.RegisterOutputType(VmmToVmmCreateNetworkMappingInputPtrOutput{})
	pulumi.RegisterOutputType(VmmToVmmNetworkMappingSettingsResponseOutput{})
	pulumi.RegisterOutputType(VmmToVmmNetworkMappingSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(VmwareCbtPolicyDetailsResponseOutput{})
	pulumi.RegisterOutputType(VmwareCbtPolicyDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionFormatOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionFormatPtrOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionFormatResponseOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionScheduleOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionSchedulePtrOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionScheduleResponseOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(WeeklyScheduleOutput{})
	pulumi.RegisterOutputType(WeeklySchedulePtrOutput{})
	pulumi.RegisterOutputType(WeeklyScheduleResponseOutput{})
	pulumi.RegisterOutputType(WeeklyScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkloadInquiryDetailsOutput{})
	pulumi.RegisterOutputType(WorkloadInquiryDetailsArrayOutput{})
	pulumi.RegisterOutputType(WorkloadInquiryDetailsResponseOutput{})
	pulumi.RegisterOutputType(WorkloadInquiryDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(YearlyRetentionScheduleOutput{})
	pulumi.RegisterOutputType(YearlyRetentionSchedulePtrOutput{})
	pulumi.RegisterOutputType(YearlyRetentionScheduleResponseOutput{})
	pulumi.RegisterOutputType(YearlyRetentionScheduleResponsePtrOutput{})
}
