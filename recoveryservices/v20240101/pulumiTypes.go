// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// AzureBackupServer (DPMVenus) workload-specific protection container.
type AzureBackupServerContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister *bool `pulumi:"canReRegister"`
	// ID of container.
	ContainerId *string `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureBackupServerContainer'.
	ContainerType string `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion *string `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers []string `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo *DPMContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable *bool `pulumi:"upgradeAvailable"`
}

// AzureBackupServerContainerInput is an input type that accepts AzureBackupServerContainerArgs and AzureBackupServerContainerOutput values.
// You can construct a concrete instance of `AzureBackupServerContainerInput` via:
//
//	AzureBackupServerContainerArgs{...}
type AzureBackupServerContainerInput interface {
	pulumi.Input

	ToAzureBackupServerContainerOutput() AzureBackupServerContainerOutput
	ToAzureBackupServerContainerOutputWithContext(context.Context) AzureBackupServerContainerOutput
}

// AzureBackupServer (DPMVenus) workload-specific protection container.
type AzureBackupServerContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister pulumi.BoolPtrInput `pulumi:"canReRegister"`
	// ID of container.
	ContainerId pulumi.StringPtrInput `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureBackupServerContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion pulumi.StringPtrInput `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers pulumi.StringArrayInput `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo DPMContainerExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount pulumi.Float64PtrInput `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus pulumi.StringPtrInput `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable pulumi.BoolPtrInput `pulumi:"upgradeAvailable"`
}

func (AzureBackupServerContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBackupServerContainer)(nil)).Elem()
}

func (i AzureBackupServerContainerArgs) ToAzureBackupServerContainerOutput() AzureBackupServerContainerOutput {
	return i.ToAzureBackupServerContainerOutputWithContext(context.Background())
}

func (i AzureBackupServerContainerArgs) ToAzureBackupServerContainerOutputWithContext(ctx context.Context) AzureBackupServerContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBackupServerContainerOutput)
}

func (i AzureBackupServerContainerArgs) ToAzureBackupServerContainerPtrOutput() AzureBackupServerContainerPtrOutput {
	return i.ToAzureBackupServerContainerPtrOutputWithContext(context.Background())
}

func (i AzureBackupServerContainerArgs) ToAzureBackupServerContainerPtrOutputWithContext(ctx context.Context) AzureBackupServerContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBackupServerContainerOutput).ToAzureBackupServerContainerPtrOutputWithContext(ctx)
}

// AzureBackupServerContainerPtrInput is an input type that accepts AzureBackupServerContainerArgs, AzureBackupServerContainerPtr and AzureBackupServerContainerPtrOutput values.
// You can construct a concrete instance of `AzureBackupServerContainerPtrInput` via:
//
//	        AzureBackupServerContainerArgs{...}
//
//	or:
//
//	        nil
type AzureBackupServerContainerPtrInput interface {
	pulumi.Input

	ToAzureBackupServerContainerPtrOutput() AzureBackupServerContainerPtrOutput
	ToAzureBackupServerContainerPtrOutputWithContext(context.Context) AzureBackupServerContainerPtrOutput
}

type azureBackupServerContainerPtrType AzureBackupServerContainerArgs

func AzureBackupServerContainerPtr(v *AzureBackupServerContainerArgs) AzureBackupServerContainerPtrInput {
	return (*azureBackupServerContainerPtrType)(v)
}

func (*azureBackupServerContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBackupServerContainer)(nil)).Elem()
}

func (i *azureBackupServerContainerPtrType) ToAzureBackupServerContainerPtrOutput() AzureBackupServerContainerPtrOutput {
	return i.ToAzureBackupServerContainerPtrOutputWithContext(context.Background())
}

func (i *azureBackupServerContainerPtrType) ToAzureBackupServerContainerPtrOutputWithContext(ctx context.Context) AzureBackupServerContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBackupServerContainerPtrOutput)
}

// AzureBackupServer (DPMVenus) workload-specific protection container.
type AzureBackupServerContainerOutput struct{ *pulumi.OutputState }

func (AzureBackupServerContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBackupServerContainer)(nil)).Elem()
}

func (o AzureBackupServerContainerOutput) ToAzureBackupServerContainerOutput() AzureBackupServerContainerOutput {
	return o
}

func (o AzureBackupServerContainerOutput) ToAzureBackupServerContainerOutputWithContext(ctx context.Context) AzureBackupServerContainerOutput {
	return o
}

func (o AzureBackupServerContainerOutput) ToAzureBackupServerContainerPtrOutput() AzureBackupServerContainerPtrOutput {
	return o.ToAzureBackupServerContainerPtrOutputWithContext(context.Background())
}

func (o AzureBackupServerContainerOutput) ToAzureBackupServerContainerPtrOutputWithContext(ctx context.Context) AzureBackupServerContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureBackupServerContainer) *AzureBackupServerContainer {
		return &v
	}).(AzureBackupServerContainerPtrOutput)
}

// Type of backup management for the container.
func (o AzureBackupServerContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Specifies whether the container is re-registrable.
func (o AzureBackupServerContainerOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *bool { return v.CanReRegister }).(pulumi.BoolPtrOutput)
}

// ID of container.
func (o AzureBackupServerContainerOutput) ContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *string { return v.ContainerId }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureBackupServerContainer'.
func (o AzureBackupServerContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Backup engine Agent version
func (o AzureBackupServerContainerOutput) DpmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *string { return v.DpmAgentVersion }).(pulumi.StringPtrOutput)
}

// List of BackupEngines protecting the container
func (o AzureBackupServerContainerOutput) DpmServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) []string { return v.DpmServers }).(pulumi.StringArrayOutput)
}

// Extended Info of the container.
func (o AzureBackupServerContainerOutput) ExtendedInfo() DPMContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *DPMContainerExtendedInfo { return v.ExtendedInfo }).(DPMContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o AzureBackupServerContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureBackupServerContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureBackupServerContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Number of protected items in the BackupEngine
func (o AzureBackupServerContainerOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *float64 { return v.ProtectedItemCount }).(pulumi.Float64PtrOutput)
}

// Protection status of the container.
func (o AzureBackupServerContainerOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureBackupServerContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// To check if upgrade available
func (o AzureBackupServerContainerOutput) UpgradeAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainer) *bool { return v.UpgradeAvailable }).(pulumi.BoolPtrOutput)
}

type AzureBackupServerContainerPtrOutput struct{ *pulumi.OutputState }

func (AzureBackupServerContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBackupServerContainer)(nil)).Elem()
}

func (o AzureBackupServerContainerPtrOutput) ToAzureBackupServerContainerPtrOutput() AzureBackupServerContainerPtrOutput {
	return o
}

func (o AzureBackupServerContainerPtrOutput) ToAzureBackupServerContainerPtrOutputWithContext(ctx context.Context) AzureBackupServerContainerPtrOutput {
	return o
}

func (o AzureBackupServerContainerPtrOutput) Elem() AzureBackupServerContainerOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) AzureBackupServerContainer {
		if v != nil {
			return *v
		}
		var ret AzureBackupServerContainer
		return ret
	}).(AzureBackupServerContainerOutput)
}

// Type of backup management for the container.
func (o AzureBackupServerContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the container is re-registrable.
func (o AzureBackupServerContainerPtrOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *bool {
		if v == nil {
			return nil
		}
		return v.CanReRegister
	}).(pulumi.BoolPtrOutput)
}

// ID of container.
func (o AzureBackupServerContainerPtrOutput) ContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return v.ContainerId
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureBackupServerContainer'.
func (o AzureBackupServerContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Backup engine Agent version
func (o AzureBackupServerContainerPtrOutput) DpmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return v.DpmAgentVersion
	}).(pulumi.StringPtrOutput)
}

// List of BackupEngines protecting the container
func (o AzureBackupServerContainerPtrOutput) DpmServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) []string {
		if v == nil {
			return nil
		}
		return v.DpmServers
	}).(pulumi.StringArrayOutput)
}

// Extended Info of the container.
func (o AzureBackupServerContainerPtrOutput) ExtendedInfo() DPMContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *DPMContainerExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(DPMContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o AzureBackupServerContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureBackupServerContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureBackupServerContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Number of protected items in the BackupEngine
func (o AzureBackupServerContainerPtrOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *float64 {
		if v == nil {
			return nil
		}
		return v.ProtectedItemCount
	}).(pulumi.Float64PtrOutput)
}

// Protection status of the container.
func (o AzureBackupServerContainerPtrOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionStatus
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureBackupServerContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// To check if upgrade available
func (o AzureBackupServerContainerPtrOutput) UpgradeAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureBackupServerContainer) *bool {
		if v == nil {
			return nil
		}
		return v.UpgradeAvailable
	}).(pulumi.BoolPtrOutput)
}

// AzureBackupServer (DPMVenus) workload-specific protection container.
type AzureBackupServerContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister *bool `pulumi:"canReRegister"`
	// ID of container.
	ContainerId *string `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureBackupServerContainer'.
	ContainerType string `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion *string `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers []string `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo *DPMContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable *bool `pulumi:"upgradeAvailable"`
}

// AzureBackupServer (DPMVenus) workload-specific protection container.
type AzureBackupServerContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureBackupServerContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBackupServerContainerResponse)(nil)).Elem()
}

func (o AzureBackupServerContainerResponseOutput) ToAzureBackupServerContainerResponseOutput() AzureBackupServerContainerResponseOutput {
	return o
}

func (o AzureBackupServerContainerResponseOutput) ToAzureBackupServerContainerResponseOutputWithContext(ctx context.Context) AzureBackupServerContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureBackupServerContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Specifies whether the container is re-registrable.
func (o AzureBackupServerContainerResponseOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *bool { return v.CanReRegister }).(pulumi.BoolPtrOutput)
}

// ID of container.
func (o AzureBackupServerContainerResponseOutput) ContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *string { return v.ContainerId }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureBackupServerContainer'.
func (o AzureBackupServerContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Backup engine Agent version
func (o AzureBackupServerContainerResponseOutput) DpmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *string { return v.DpmAgentVersion }).(pulumi.StringPtrOutput)
}

// List of BackupEngines protecting the container
func (o AzureBackupServerContainerResponseOutput) DpmServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) []string { return v.DpmServers }).(pulumi.StringArrayOutput)
}

// Extended Info of the container.
func (o AzureBackupServerContainerResponseOutput) ExtendedInfo() DPMContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *DPMContainerExtendedInfoResponse { return v.ExtendedInfo }).(DPMContainerExtendedInfoResponsePtrOutput)
}

// Friendly name of the container.
func (o AzureBackupServerContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureBackupServerContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureBackupServerContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Number of protected items in the BackupEngine
func (o AzureBackupServerContainerResponseOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *float64 { return v.ProtectedItemCount }).(pulumi.Float64PtrOutput)
}

// Protection status of the container.
func (o AzureBackupServerContainerResponseOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureBackupServerContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// To check if upgrade available
func (o AzureBackupServerContainerResponseOutput) UpgradeAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureBackupServerContainerResponse) *bool { return v.UpgradeAvailable }).(pulumi.BoolPtrOutput)
}

// AzureStorage backup policy.
type AzureFileShareProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureStorage'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
	// Retention policy with the details on hardened backup copy retention ranges.
	VaultRetentionPolicy *VaultRetentionPolicy `pulumi:"vaultRetentionPolicy"`
	// Type of workload for the backup management
	WorkLoadType *string `pulumi:"workLoadType"`
}

// AzureFileShareProtectionPolicyInput is an input type that accepts AzureFileShareProtectionPolicyArgs and AzureFileShareProtectionPolicyOutput values.
// You can construct a concrete instance of `AzureFileShareProtectionPolicyInput` via:
//
//	AzureFileShareProtectionPolicyArgs{...}
type AzureFileShareProtectionPolicyInput interface {
	pulumi.Input

	ToAzureFileShareProtectionPolicyOutput() AzureFileShareProtectionPolicyOutput
	ToAzureFileShareProtectionPolicyOutputWithContext(context.Context) AzureFileShareProtectionPolicyOutput
}

// AzureStorage backup policy.
type AzureFileShareProtectionPolicyArgs struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureStorage'.
	BackupManagementType pulumi.StringInput `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount pulumi.IntPtrInput `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy pulumi.Input `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy pulumi.Input `pulumi:"schedulePolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
	// Retention policy with the details on hardened backup copy retention ranges.
	VaultRetentionPolicy VaultRetentionPolicyPtrInput `pulumi:"vaultRetentionPolicy"`
	// Type of workload for the backup management
	WorkLoadType pulumi.StringPtrInput `pulumi:"workLoadType"`
}

func (AzureFileShareProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileShareProtectionPolicy)(nil)).Elem()
}

func (i AzureFileShareProtectionPolicyArgs) ToAzureFileShareProtectionPolicyOutput() AzureFileShareProtectionPolicyOutput {
	return i.ToAzureFileShareProtectionPolicyOutputWithContext(context.Background())
}

func (i AzureFileShareProtectionPolicyArgs) ToAzureFileShareProtectionPolicyOutputWithContext(ctx context.Context) AzureFileShareProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileShareProtectionPolicyOutput)
}

func (i AzureFileShareProtectionPolicyArgs) ToAzureFileShareProtectionPolicyPtrOutput() AzureFileShareProtectionPolicyPtrOutput {
	return i.ToAzureFileShareProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i AzureFileShareProtectionPolicyArgs) ToAzureFileShareProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureFileShareProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileShareProtectionPolicyOutput).ToAzureFileShareProtectionPolicyPtrOutputWithContext(ctx)
}

// AzureFileShareProtectionPolicyPtrInput is an input type that accepts AzureFileShareProtectionPolicyArgs, AzureFileShareProtectionPolicyPtr and AzureFileShareProtectionPolicyPtrOutput values.
// You can construct a concrete instance of `AzureFileShareProtectionPolicyPtrInput` via:
//
//	        AzureFileShareProtectionPolicyArgs{...}
//
//	or:
//
//	        nil
type AzureFileShareProtectionPolicyPtrInput interface {
	pulumi.Input

	ToAzureFileShareProtectionPolicyPtrOutput() AzureFileShareProtectionPolicyPtrOutput
	ToAzureFileShareProtectionPolicyPtrOutputWithContext(context.Context) AzureFileShareProtectionPolicyPtrOutput
}

type azureFileShareProtectionPolicyPtrType AzureFileShareProtectionPolicyArgs

func AzureFileShareProtectionPolicyPtr(v *AzureFileShareProtectionPolicyArgs) AzureFileShareProtectionPolicyPtrInput {
	return (*azureFileShareProtectionPolicyPtrType)(v)
}

func (*azureFileShareProtectionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileShareProtectionPolicy)(nil)).Elem()
}

func (i *azureFileShareProtectionPolicyPtrType) ToAzureFileShareProtectionPolicyPtrOutput() AzureFileShareProtectionPolicyPtrOutput {
	return i.ToAzureFileShareProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i *azureFileShareProtectionPolicyPtrType) ToAzureFileShareProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureFileShareProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileShareProtectionPolicyPtrOutput)
}

// AzureStorage backup policy.
type AzureFileShareProtectionPolicyOutput struct{ *pulumi.OutputState }

func (AzureFileShareProtectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileShareProtectionPolicy)(nil)).Elem()
}

func (o AzureFileShareProtectionPolicyOutput) ToAzureFileShareProtectionPolicyOutput() AzureFileShareProtectionPolicyOutput {
	return o
}

func (o AzureFileShareProtectionPolicyOutput) ToAzureFileShareProtectionPolicyOutputWithContext(ctx context.Context) AzureFileShareProtectionPolicyOutput {
	return o
}

func (o AzureFileShareProtectionPolicyOutput) ToAzureFileShareProtectionPolicyPtrOutput() AzureFileShareProtectionPolicyPtrOutput {
	return o.ToAzureFileShareProtectionPolicyPtrOutputWithContext(context.Background())
}

func (o AzureFileShareProtectionPolicyOutput) ToAzureFileShareProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureFileShareProtectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureFileShareProtectionPolicy) *AzureFileShareProtectionPolicy {
		return &v
	}).(AzureFileShareProtectionPolicyPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureStorage'.
func (o AzureFileShareProtectionPolicyOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicy) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Number of items associated with this policy.
func (o AzureFileShareProtectionPolicyOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicy) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureFileShareProtectionPolicyOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicy) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Retention policy with the details on backup copy retention ranges.
func (o AzureFileShareProtectionPolicyOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicy) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Backup schedule specified as part of backup policy.
func (o AzureFileShareProtectionPolicyOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicy) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o AzureFileShareProtectionPolicyOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicy) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Retention policy with the details on hardened backup copy retention ranges.
func (o AzureFileShareProtectionPolicyOutput) VaultRetentionPolicy() VaultRetentionPolicyPtrOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicy) *VaultRetentionPolicy { return v.VaultRetentionPolicy }).(VaultRetentionPolicyPtrOutput)
}

// Type of workload for the backup management
func (o AzureFileShareProtectionPolicyOutput) WorkLoadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicy) *string { return v.WorkLoadType }).(pulumi.StringPtrOutput)
}

type AzureFileShareProtectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (AzureFileShareProtectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileShareProtectionPolicy)(nil)).Elem()
}

func (o AzureFileShareProtectionPolicyPtrOutput) ToAzureFileShareProtectionPolicyPtrOutput() AzureFileShareProtectionPolicyPtrOutput {
	return o
}

func (o AzureFileShareProtectionPolicyPtrOutput) ToAzureFileShareProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureFileShareProtectionPolicyPtrOutput {
	return o
}

func (o AzureFileShareProtectionPolicyPtrOutput) Elem() AzureFileShareProtectionPolicyOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) AzureFileShareProtectionPolicy {
		if v != nil {
			return *v
		}
		var ret AzureFileShareProtectionPolicy
		return ret
	}).(AzureFileShareProtectionPolicyOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureStorage'.
func (o AzureFileShareProtectionPolicyPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o AzureFileShareProtectionPolicyPtrOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.ProtectedItemsCount
	}).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureFileShareProtectionPolicyPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Retention policy with the details on backup copy retention ranges.
func (o AzureFileShareProtectionPolicyPtrOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.RetentionPolicy
	}).(pulumi.AnyOutput)
}

// Backup schedule specified as part of backup policy.
func (o AzureFileShareProtectionPolicyPtrOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.SchedulePolicy
	}).(pulumi.AnyOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o AzureFileShareProtectionPolicyPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Retention policy with the details on hardened backup copy retention ranges.
func (o AzureFileShareProtectionPolicyPtrOutput) VaultRetentionPolicy() VaultRetentionPolicyPtrOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) *VaultRetentionPolicy {
		if v == nil {
			return nil
		}
		return v.VaultRetentionPolicy
	}).(VaultRetentionPolicyPtrOutput)
}

// Type of workload for the backup management
func (o AzureFileShareProtectionPolicyPtrOutput) WorkLoadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileShareProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.WorkLoadType
	}).(pulumi.StringPtrOutput)
}

// AzureStorage backup policy.
type AzureFileShareProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureStorage'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
	// Retention policy with the details on hardened backup copy retention ranges.
	VaultRetentionPolicy *VaultRetentionPolicyResponse `pulumi:"vaultRetentionPolicy"`
	// Type of workload for the backup management
	WorkLoadType *string `pulumi:"workLoadType"`
}

// AzureStorage backup policy.
type AzureFileShareProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (AzureFileShareProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileShareProtectionPolicyResponse)(nil)).Elem()
}

func (o AzureFileShareProtectionPolicyResponseOutput) ToAzureFileShareProtectionPolicyResponseOutput() AzureFileShareProtectionPolicyResponseOutput {
	return o
}

func (o AzureFileShareProtectionPolicyResponseOutput) ToAzureFileShareProtectionPolicyResponseOutputWithContext(ctx context.Context) AzureFileShareProtectionPolicyResponseOutput {
	return o
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureStorage'.
func (o AzureFileShareProtectionPolicyResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicyResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Number of items associated with this policy.
func (o AzureFileShareProtectionPolicyResponseOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicyResponse) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureFileShareProtectionPolicyResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicyResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Retention policy with the details on backup copy retention ranges.
func (o AzureFileShareProtectionPolicyResponseOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicyResponse) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Backup schedule specified as part of backup policy.
func (o AzureFileShareProtectionPolicyResponseOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicyResponse) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o AzureFileShareProtectionPolicyResponseOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicyResponse) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Retention policy with the details on hardened backup copy retention ranges.
func (o AzureFileShareProtectionPolicyResponseOutput) VaultRetentionPolicy() VaultRetentionPolicyResponsePtrOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicyResponse) *VaultRetentionPolicyResponse {
		return v.VaultRetentionPolicy
	}).(VaultRetentionPolicyResponsePtrOutput)
}

// Type of workload for the backup management
func (o AzureFileShareProtectionPolicyResponseOutput) WorkLoadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileShareProtectionPolicyResponse) *string { return v.WorkLoadType }).(pulumi.StringPtrOutput)
}

// Azure File Share workload-specific backup item.
type AzureFileshareProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo *AzureFileshareProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the fileshare represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'AzureFileShareProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureFileshareProtectedItemInput is an input type that accepts AzureFileshareProtectedItemArgs and AzureFileshareProtectedItemOutput values.
// You can construct a concrete instance of `AzureFileshareProtectedItemInput` via:
//
//	AzureFileshareProtectedItemArgs{...}
type AzureFileshareProtectedItemInput interface {
	pulumi.Input

	ToAzureFileshareProtectedItemOutput() AzureFileshareProtectedItemOutput
	ToAzureFileshareProtectedItemOutputWithContext(context.Context) AzureFileshareProtectedItemOutput
}

// Azure File Share workload-specific backup item.
type AzureFileshareProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo AzureFileshareProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the fileshare represented by this backup item.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'AzureFileShareProtectedItem'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus pulumi.StringPtrInput `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureFileshareProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileshareProtectedItem)(nil)).Elem()
}

func (i AzureFileshareProtectedItemArgs) ToAzureFileshareProtectedItemOutput() AzureFileshareProtectedItemOutput {
	return i.ToAzureFileshareProtectedItemOutputWithContext(context.Background())
}

func (i AzureFileshareProtectedItemArgs) ToAzureFileshareProtectedItemOutputWithContext(ctx context.Context) AzureFileshareProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileshareProtectedItemOutput)
}

func (i AzureFileshareProtectedItemArgs) ToAzureFileshareProtectedItemPtrOutput() AzureFileshareProtectedItemPtrOutput {
	return i.ToAzureFileshareProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureFileshareProtectedItemArgs) ToAzureFileshareProtectedItemPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileshareProtectedItemOutput).ToAzureFileshareProtectedItemPtrOutputWithContext(ctx)
}

// AzureFileshareProtectedItemPtrInput is an input type that accepts AzureFileshareProtectedItemArgs, AzureFileshareProtectedItemPtr and AzureFileshareProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureFileshareProtectedItemPtrInput` via:
//
//	        AzureFileshareProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureFileshareProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureFileshareProtectedItemPtrOutput() AzureFileshareProtectedItemPtrOutput
	ToAzureFileshareProtectedItemPtrOutputWithContext(context.Context) AzureFileshareProtectedItemPtrOutput
}

type azureFileshareProtectedItemPtrType AzureFileshareProtectedItemArgs

func AzureFileshareProtectedItemPtr(v *AzureFileshareProtectedItemArgs) AzureFileshareProtectedItemPtrInput {
	return (*azureFileshareProtectedItemPtrType)(v)
}

func (*azureFileshareProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileshareProtectedItem)(nil)).Elem()
}

func (i *azureFileshareProtectedItemPtrType) ToAzureFileshareProtectedItemPtrOutput() AzureFileshareProtectedItemPtrOutput {
	return i.ToAzureFileshareProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureFileshareProtectedItemPtrType) ToAzureFileshareProtectedItemPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileshareProtectedItemPtrOutput)
}

// Azure File Share workload-specific backup item.
type AzureFileshareProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileshareProtectedItem)(nil)).Elem()
}

func (o AzureFileshareProtectedItemOutput) ToAzureFileshareProtectedItemOutput() AzureFileshareProtectedItemOutput {
	return o
}

func (o AzureFileshareProtectedItemOutput) ToAzureFileshareProtectedItemOutputWithContext(ctx context.Context) AzureFileshareProtectedItemOutput {
	return o
}

func (o AzureFileshareProtectedItemOutput) ToAzureFileshareProtectedItemPtrOutput() AzureFileshareProtectedItemPtrOutput {
	return o.ToAzureFileshareProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureFileshareProtectedItemOutput) ToAzureFileshareProtectedItemPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureFileshareProtectedItem) *AzureFileshareProtectedItem {
		return &v
	}).(AzureFileshareProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureFileshareProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureFileshareProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureFileshareProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureFileshareProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureFileshareProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information with this backup item.
func (o AzureFileshareProtectedItemOutput) ExtendedInfo() AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *AzureFileshareProtectedItemExtendedInfo { return v.ExtendedInfo }).(AzureFileshareProtectedItemExtendedInfoPtrOutput)
}

// Friendly name of the fileshare represented by this backup item.
func (o AzureFileshareProtectedItemOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureFileshareProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureFileshareProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureFileshareProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureFileshareProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureFileshareProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) map[string]KPIResourceHealthDetails { return v.KpisHealths }).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureFileshareProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureFileshareProtectedItemOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureFileshareProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureFileshareProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureFileshareProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureFileShareProtectedItem'.
func (o AzureFileshareProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureFileshareProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureFileshareProtectedItemOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureFileshareProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureFileshareProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureFileshareProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureFileshareProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileshareProtectedItem)(nil)).Elem()
}

func (o AzureFileshareProtectedItemPtrOutput) ToAzureFileshareProtectedItemPtrOutput() AzureFileshareProtectedItemPtrOutput {
	return o
}

func (o AzureFileshareProtectedItemPtrOutput) ToAzureFileshareProtectedItemPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemPtrOutput {
	return o
}

func (o AzureFileshareProtectedItemPtrOutput) Elem() AzureFileshareProtectedItemOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) AzureFileshareProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureFileshareProtectedItem
		return ret
	}).(AzureFileshareProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureFileshareProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureFileshareProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureFileshareProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureFileshareProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureFileshareProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information with this backup item.
func (o AzureFileshareProtectedItemPtrOutput) ExtendedInfo() AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *AzureFileshareProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureFileshareProtectedItemExtendedInfoPtrOutput)
}

// Friendly name of the fileshare represented by this backup item.
func (o AzureFileshareProtectedItemPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureFileshareProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureFileshareProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureFileshareProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureFileshareProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureFileshareProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureFileshareProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureFileshareProtectedItemPtrOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureFileshareProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureFileshareProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureFileshareProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureFileShareProtectedItem'.
func (o AzureFileshareProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureFileshareProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureFileshareProtectedItemPtrOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionStatus
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureFileshareProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureFileshareProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureFileshareProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Additional information about Azure File Share backup item.
type AzureFileshareProtectedItemExtendedInfo struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// AzureFileshareProtectedItemExtendedInfoInput is an input type that accepts AzureFileshareProtectedItemExtendedInfoArgs and AzureFileshareProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `AzureFileshareProtectedItemExtendedInfoInput` via:
//
//	AzureFileshareProtectedItemExtendedInfoArgs{...}
type AzureFileshareProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToAzureFileshareProtectedItemExtendedInfoOutput() AzureFileshareProtectedItemExtendedInfoOutput
	ToAzureFileshareProtectedItemExtendedInfoOutputWithContext(context.Context) AzureFileshareProtectedItemExtendedInfoOutput
}

// Additional information about Azure File Share backup item.
type AzureFileshareProtectedItemExtendedInfoArgs struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState pulumi.StringPtrInput `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
}

func (AzureFileshareProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileshareProtectedItemExtendedInfo)(nil)).Elem()
}

func (i AzureFileshareProtectedItemExtendedInfoArgs) ToAzureFileshareProtectedItemExtendedInfoOutput() AzureFileshareProtectedItemExtendedInfoOutput {
	return i.ToAzureFileshareProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i AzureFileshareProtectedItemExtendedInfoArgs) ToAzureFileshareProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileshareProtectedItemExtendedInfoOutput)
}

func (i AzureFileshareProtectedItemExtendedInfoArgs) ToAzureFileshareProtectedItemExtendedInfoPtrOutput() AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i AzureFileshareProtectedItemExtendedInfoArgs) ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileshareProtectedItemExtendedInfoOutput).ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// AzureFileshareProtectedItemExtendedInfoPtrInput is an input type that accepts AzureFileshareProtectedItemExtendedInfoArgs, AzureFileshareProtectedItemExtendedInfoPtr and AzureFileshareProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `AzureFileshareProtectedItemExtendedInfoPtrInput` via:
//
//	        AzureFileshareProtectedItemExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type AzureFileshareProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToAzureFileshareProtectedItemExtendedInfoPtrOutput() AzureFileshareProtectedItemExtendedInfoPtrOutput
	ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(context.Context) AzureFileshareProtectedItemExtendedInfoPtrOutput
}

type azureFileshareProtectedItemExtendedInfoPtrType AzureFileshareProtectedItemExtendedInfoArgs

func AzureFileshareProtectedItemExtendedInfoPtr(v *AzureFileshareProtectedItemExtendedInfoArgs) AzureFileshareProtectedItemExtendedInfoPtrInput {
	return (*azureFileshareProtectedItemExtendedInfoPtrType)(v)
}

func (*azureFileshareProtectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileshareProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *azureFileshareProtectedItemExtendedInfoPtrType) ToAzureFileshareProtectedItemExtendedInfoPtrOutput() AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *azureFileshareProtectedItemExtendedInfoPtrType) ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFileshareProtectedItemExtendedInfoPtrOutput)
}

// Additional information about Azure File Share backup item.
type AzureFileshareProtectedItemExtendedInfoOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileshareProtectedItemExtendedInfo)(nil)).Elem()
}

func (o AzureFileshareProtectedItemExtendedInfoOutput) ToAzureFileshareProtectedItemExtendedInfoOutput() AzureFileshareProtectedItemExtendedInfoOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoOutput) ToAzureFileshareProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoOutput) ToAzureFileshareProtectedItemExtendedInfoPtrOutput() AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return o.ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (o AzureFileshareProtectedItemExtendedInfoOutput) ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureFileshareProtectedItemExtendedInfo) *AzureFileshareProtectedItemExtendedInfo {
		return &v
	}).(AzureFileshareProtectedItemExtendedInfoPtrOutput)
}

// The oldest backup copy available for this item in the service.
func (o AzureFileshareProtectedItemExtendedInfoOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfo) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureFileshareProtectedItemExtendedInfoOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfo) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureFileshareProtectedItemExtendedInfoOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfo) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureFileshareProtectedItemExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileshareProtectedItemExtendedInfo)(nil)).Elem()
}

func (o AzureFileshareProtectedItemExtendedInfoPtrOutput) ToAzureFileshareProtectedItemExtendedInfoPtrOutput() AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoPtrOutput) ToAzureFileshareProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoPtrOutput) Elem() AzureFileshareProtectedItemExtendedInfoOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfo) AzureFileshareProtectedItemExtendedInfo {
		if v != nil {
			return *v
		}
		var ret AzureFileshareProtectedItemExtendedInfo
		return ret
	}).(AzureFileshareProtectedItemExtendedInfoOutput)
}

// The oldest backup copy available for this item in the service.
func (o AzureFileshareProtectedItemExtendedInfoPtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureFileshareProtectedItemExtendedInfoPtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureFileshareProtectedItemExtendedInfoPtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfo) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Additional information about Azure File Share backup item.
type AzureFileshareProtectedItemExtendedInfoResponse struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
	// Indicates the state of this resource. Possible values are from enum ResourceState {Invalid, Active, SoftDeleted, Deleted}
	ResourceState string `pulumi:"resourceState"`
	// The resource state sync time for this backup item.
	ResourceStateSyncTime string `pulumi:"resourceStateSyncTime"`
}

// Additional information about Azure File Share backup item.
type AzureFileshareProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileshareProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) ToAzureFileshareProtectedItemExtendedInfoResponseOutput() AzureFileshareProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) ToAzureFileshareProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoResponseOutput {
	return o
}

// The oldest backup copy available for this item in the service.
func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfoResponse) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

// Indicates the state of this resource. Possible values are from enum ResourceState {Invalid, Active, SoftDeleted, Deleted}
func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfoResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// The resource state sync time for this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponseOutput) ResourceStateSyncTime() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemExtendedInfoResponse) string { return v.ResourceStateSyncTime }).(pulumi.StringOutput)
}

type AzureFileshareProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFileshareProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) ToAzureFileshareProtectedItemExtendedInfoResponsePtrOutput() AzureFileshareProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) ToAzureFileshareProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureFileshareProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) Elem() AzureFileshareProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) AzureFileshareProtectedItemExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret AzureFileshareProtectedItemExtendedInfoResponse
		return ret
	}).(AzureFileshareProtectedItemExtendedInfoResponseOutput)
}

// The oldest backup copy available for this item in the service.
func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Indicates the state of this resource. Possible values are from enum ResourceState {Invalid, Active, SoftDeleted, Deleted}
func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) ResourceState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceState
	}).(pulumi.StringPtrOutput)
}

// The resource state sync time for this backup item.
func (o AzureFileshareProtectedItemExtendedInfoResponsePtrOutput) ResourceStateSyncTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFileshareProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceStateSyncTime
	}).(pulumi.StringPtrOutput)
}

// Azure File Share workload-specific backup item.
type AzureFileshareProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo *AzureFileshareProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the fileshare represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'AzureFileShareProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Azure File Share workload-specific backup item.
type AzureFileshareProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureFileshareProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFileshareProtectedItemResponse)(nil)).Elem()
}

func (o AzureFileshareProtectedItemResponseOutput) ToAzureFileshareProtectedItemResponseOutput() AzureFileshareProtectedItemResponseOutput {
	return o
}

func (o AzureFileshareProtectedItemResponseOutput) ToAzureFileshareProtectedItemResponseOutputWithContext(ctx context.Context) AzureFileshareProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureFileshareProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureFileshareProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureFileshareProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureFileshareProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureFileshareProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureFileshareProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information with this backup item.
func (o AzureFileshareProtectedItemResponseOutput) ExtendedInfo() AzureFileshareProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *AzureFileshareProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureFileshareProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the fileshare represented by this backup item.
func (o AzureFileshareProtectedItemResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureFileshareProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureFileshareProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureFileshareProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureFileshareProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureFileshareProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureFileshareProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureFileshareProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureFileshareProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureFileshareProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureFileshareProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureFileShareProtectedItem'.
func (o AzureFileshareProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureFileshareProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureFileshareProtectedItemResponseOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureFileshareProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureFileshareProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureFileshareProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureFileshareProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureFileshareProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFileshareProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// IaaS VM workload-specific backup item representing a classic virtual machine.
type AzureIaaSClassicComputeVMContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// AzureIaaSClassicComputeVMContainerInput is an input type that accepts AzureIaaSClassicComputeVMContainerArgs and AzureIaaSClassicComputeVMContainerOutput values.
// You can construct a concrete instance of `AzureIaaSClassicComputeVMContainerInput` via:
//
//	AzureIaaSClassicComputeVMContainerArgs{...}
type AzureIaaSClassicComputeVMContainerInput interface {
	pulumi.Input

	ToAzureIaaSClassicComputeVMContainerOutput() AzureIaaSClassicComputeVMContainerOutput
	ToAzureIaaSClassicComputeVMContainerOutputWithContext(context.Context) AzureIaaSClassicComputeVMContainerOutput
}

// IaaS VM workload-specific backup item representing a classic virtual machine.
type AzureIaaSClassicComputeVMContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId pulumi.StringPtrInput `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion pulumi.StringPtrInput `pulumi:"virtualMachineVersion"`
}

func (AzureIaaSClassicComputeVMContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSClassicComputeVMContainer)(nil)).Elem()
}

func (i AzureIaaSClassicComputeVMContainerArgs) ToAzureIaaSClassicComputeVMContainerOutput() AzureIaaSClassicComputeVMContainerOutput {
	return i.ToAzureIaaSClassicComputeVMContainerOutputWithContext(context.Background())
}

func (i AzureIaaSClassicComputeVMContainerArgs) ToAzureIaaSClassicComputeVMContainerOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSClassicComputeVMContainerOutput)
}

func (i AzureIaaSClassicComputeVMContainerArgs) ToAzureIaaSClassicComputeVMContainerPtrOutput() AzureIaaSClassicComputeVMContainerPtrOutput {
	return i.ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(context.Background())
}

func (i AzureIaaSClassicComputeVMContainerArgs) ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSClassicComputeVMContainerOutput).ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(ctx)
}

// AzureIaaSClassicComputeVMContainerPtrInput is an input type that accepts AzureIaaSClassicComputeVMContainerArgs, AzureIaaSClassicComputeVMContainerPtr and AzureIaaSClassicComputeVMContainerPtrOutput values.
// You can construct a concrete instance of `AzureIaaSClassicComputeVMContainerPtrInput` via:
//
//	        AzureIaaSClassicComputeVMContainerArgs{...}
//
//	or:
//
//	        nil
type AzureIaaSClassicComputeVMContainerPtrInput interface {
	pulumi.Input

	ToAzureIaaSClassicComputeVMContainerPtrOutput() AzureIaaSClassicComputeVMContainerPtrOutput
	ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(context.Context) AzureIaaSClassicComputeVMContainerPtrOutput
}

type azureIaaSClassicComputeVMContainerPtrType AzureIaaSClassicComputeVMContainerArgs

func AzureIaaSClassicComputeVMContainerPtr(v *AzureIaaSClassicComputeVMContainerArgs) AzureIaaSClassicComputeVMContainerPtrInput {
	return (*azureIaaSClassicComputeVMContainerPtrType)(v)
}

func (*azureIaaSClassicComputeVMContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSClassicComputeVMContainer)(nil)).Elem()
}

func (i *azureIaaSClassicComputeVMContainerPtrType) ToAzureIaaSClassicComputeVMContainerPtrOutput() AzureIaaSClassicComputeVMContainerPtrOutput {
	return i.ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(context.Background())
}

func (i *azureIaaSClassicComputeVMContainerPtrType) ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSClassicComputeVMContainerPtrOutput)
}

// IaaS VM workload-specific backup item representing a classic virtual machine.
type AzureIaaSClassicComputeVMContainerOutput struct{ *pulumi.OutputState }

func (AzureIaaSClassicComputeVMContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSClassicComputeVMContainer)(nil)).Elem()
}

func (o AzureIaaSClassicComputeVMContainerOutput) ToAzureIaaSClassicComputeVMContainerOutput() AzureIaaSClassicComputeVMContainerOutput {
	return o
}

func (o AzureIaaSClassicComputeVMContainerOutput) ToAzureIaaSClassicComputeVMContainerOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMContainerOutput {
	return o
}

func (o AzureIaaSClassicComputeVMContainerOutput) ToAzureIaaSClassicComputeVMContainerPtrOutput() AzureIaaSClassicComputeVMContainerPtrOutput {
	return o.ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(context.Background())
}

func (o AzureIaaSClassicComputeVMContainerOutput) ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureIaaSClassicComputeVMContainer) *AzureIaaSClassicComputeVMContainer {
		return &v
	}).(AzureIaaSClassicComputeVMContainerPtrOutput)
}

// Type of backup management for the container.
func (o AzureIaaSClassicComputeVMContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
func (o AzureIaaSClassicComputeVMContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o AzureIaaSClassicComputeVMContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureIaaSClassicComputeVMContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureIaaSClassicComputeVMContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureIaaSClassicComputeVMContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureIaaSClassicComputeVMContainerOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o AzureIaaSClassicComputeVMContainerOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o AzureIaaSClassicComputeVMContainerOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainer) *string { return v.VirtualMachineVersion }).(pulumi.StringPtrOutput)
}

type AzureIaaSClassicComputeVMContainerPtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSClassicComputeVMContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSClassicComputeVMContainer)(nil)).Elem()
}

func (o AzureIaaSClassicComputeVMContainerPtrOutput) ToAzureIaaSClassicComputeVMContainerPtrOutput() AzureIaaSClassicComputeVMContainerPtrOutput {
	return o
}

func (o AzureIaaSClassicComputeVMContainerPtrOutput) ToAzureIaaSClassicComputeVMContainerPtrOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMContainerPtrOutput {
	return o
}

func (o AzureIaaSClassicComputeVMContainerPtrOutput) Elem() AzureIaaSClassicComputeVMContainerOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) AzureIaaSClassicComputeVMContainer {
		if v != nil {
			return *v
		}
		var ret AzureIaaSClassicComputeVMContainer
		return ret
	}).(AzureIaaSClassicComputeVMContainerOutput)
}

// Type of backup management for the container.
func (o AzureIaaSClassicComputeVMContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
func (o AzureIaaSClassicComputeVMContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o AzureIaaSClassicComputeVMContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureIaaSClassicComputeVMContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureIaaSClassicComputeVMContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureIaaSClassicComputeVMContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureIaaSClassicComputeVMContainerPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o AzureIaaSClassicComputeVMContainerPtrOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineId
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o AzureIaaSClassicComputeVMContainerPtrOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineVersion
	}).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific backup item representing a classic virtual machine.
type AzureIaaSClassicComputeVMContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// IaaS VM workload-specific backup item representing a classic virtual machine.
type AzureIaaSClassicComputeVMContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSClassicComputeVMContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSClassicComputeVMContainerResponse)(nil)).Elem()
}

func (o AzureIaaSClassicComputeVMContainerResponseOutput) ToAzureIaaSClassicComputeVMContainerResponseOutput() AzureIaaSClassicComputeVMContainerResponseOutput {
	return o
}

func (o AzureIaaSClassicComputeVMContainerResponseOutput) ToAzureIaaSClassicComputeVMContainerResponseOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureIaaSClassicComputeVMContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
func (o AzureIaaSClassicComputeVMContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o AzureIaaSClassicComputeVMContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureIaaSClassicComputeVMContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureIaaSClassicComputeVMContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureIaaSClassicComputeVMContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureIaaSClassicComputeVMContainerResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o AzureIaaSClassicComputeVMContainerResponseOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o AzureIaaSClassicComputeVMContainerResponseOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMContainerResponse) *string { return v.VirtualMachineVersion }).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific backup item representing the Classic Compute VM.
type AzureIaaSClassicComputeVMProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedProperties `pulumi:"extendedProperties"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureIaaSClassicComputeVMProtectedItemInput is an input type that accepts AzureIaaSClassicComputeVMProtectedItemArgs and AzureIaaSClassicComputeVMProtectedItemOutput values.
// You can construct a concrete instance of `AzureIaaSClassicComputeVMProtectedItemInput` via:
//
//	AzureIaaSClassicComputeVMProtectedItemArgs{...}
type AzureIaaSClassicComputeVMProtectedItemInput interface {
	pulumi.Input

	ToAzureIaaSClassicComputeVMProtectedItemOutput() AzureIaaSClassicComputeVMProtectedItemOutput
	ToAzureIaaSClassicComputeVMProtectedItemOutputWithContext(context.Context) AzureIaaSClassicComputeVMProtectedItemOutput
}

// IaaS VM workload-specific backup item representing the Classic Compute VM.
type AzureIaaSClassicComputeVMProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureIaaSVMProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties ExtendedPropertiesPtrInput `pulumi:"extendedProperties"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus pulumi.StringPtrInput `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureIaaSClassicComputeVMProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSClassicComputeVMProtectedItem)(nil)).Elem()
}

func (i AzureIaaSClassicComputeVMProtectedItemArgs) ToAzureIaaSClassicComputeVMProtectedItemOutput() AzureIaaSClassicComputeVMProtectedItemOutput {
	return i.ToAzureIaaSClassicComputeVMProtectedItemOutputWithContext(context.Background())
}

func (i AzureIaaSClassicComputeVMProtectedItemArgs) ToAzureIaaSClassicComputeVMProtectedItemOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSClassicComputeVMProtectedItemOutput)
}

func (i AzureIaaSClassicComputeVMProtectedItemArgs) ToAzureIaaSClassicComputeVMProtectedItemPtrOutput() AzureIaaSClassicComputeVMProtectedItemPtrOutput {
	return i.ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureIaaSClassicComputeVMProtectedItemArgs) ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSClassicComputeVMProtectedItemOutput).ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(ctx)
}

// AzureIaaSClassicComputeVMProtectedItemPtrInput is an input type that accepts AzureIaaSClassicComputeVMProtectedItemArgs, AzureIaaSClassicComputeVMProtectedItemPtr and AzureIaaSClassicComputeVMProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureIaaSClassicComputeVMProtectedItemPtrInput` via:
//
//	        AzureIaaSClassicComputeVMProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureIaaSClassicComputeVMProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureIaaSClassicComputeVMProtectedItemPtrOutput() AzureIaaSClassicComputeVMProtectedItemPtrOutput
	ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(context.Context) AzureIaaSClassicComputeVMProtectedItemPtrOutput
}

type azureIaaSClassicComputeVMProtectedItemPtrType AzureIaaSClassicComputeVMProtectedItemArgs

func AzureIaaSClassicComputeVMProtectedItemPtr(v *AzureIaaSClassicComputeVMProtectedItemArgs) AzureIaaSClassicComputeVMProtectedItemPtrInput {
	return (*azureIaaSClassicComputeVMProtectedItemPtrType)(v)
}

func (*azureIaaSClassicComputeVMProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSClassicComputeVMProtectedItem)(nil)).Elem()
}

func (i *azureIaaSClassicComputeVMProtectedItemPtrType) ToAzureIaaSClassicComputeVMProtectedItemPtrOutput() AzureIaaSClassicComputeVMProtectedItemPtrOutput {
	return i.ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureIaaSClassicComputeVMProtectedItemPtrType) ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSClassicComputeVMProtectedItemPtrOutput)
}

// IaaS VM workload-specific backup item representing the Classic Compute VM.
type AzureIaaSClassicComputeVMProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureIaaSClassicComputeVMProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSClassicComputeVMProtectedItem)(nil)).Elem()
}

func (o AzureIaaSClassicComputeVMProtectedItemOutput) ToAzureIaaSClassicComputeVMProtectedItemOutput() AzureIaaSClassicComputeVMProtectedItemOutput {
	return o
}

func (o AzureIaaSClassicComputeVMProtectedItemOutput) ToAzureIaaSClassicComputeVMProtectedItemOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMProtectedItemOutput {
	return o
}

func (o AzureIaaSClassicComputeVMProtectedItemOutput) ToAzureIaaSClassicComputeVMProtectedItemPtrOutput() AzureIaaSClassicComputeVMProtectedItemPtrOutput {
	return o.ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureIaaSClassicComputeVMProtectedItemOutput) ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureIaaSClassicComputeVMProtectedItem) *AzureIaaSClassicComputeVMProtectedItem {
		return &v
	}).(AzureIaaSClassicComputeVMProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSClassicComputeVMProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSClassicComputeVMProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSClassicComputeVMProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSClassicComputeVMProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *AzureIaaSVMProtectedItemExtendedInfo {
		return v.ExtendedInfo
	}).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) ExtendedProperties() ExtendedPropertiesPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *ExtendedProperties { return v.ExtendedProperties }).(ExtendedPropertiesPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSClassicComputeVMProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSClassicComputeVMProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSClassicComputeVMProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSClassicComputeVMProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSClassicComputeVMProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) map[string]KPIResourceHealthDetails {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSClassicComputeVMProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSClassicComputeVMProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSClassicComputeVMProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSClassicComputeVMProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureIaaSClassicComputeVMProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSClassicComputeVMProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSClassicComputeVMProtectedItem)(nil)).Elem()
}

func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ToAzureIaaSClassicComputeVMProtectedItemPtrOutput() AzureIaaSClassicComputeVMProtectedItemPtrOutput {
	return o
}

func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ToAzureIaaSClassicComputeVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMProtectedItemPtrOutput {
	return o
}

func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) Elem() AzureIaaSClassicComputeVMProtectedItemOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) AzureIaaSClassicComputeVMProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureIaaSClassicComputeVMProtectedItem
		return ret
	}).(AzureIaaSClassicComputeVMProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *AzureIaaSVMProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ExtendedProperties() ExtendedPropertiesPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *ExtendedProperties {
		if v == nil {
			return nil
		}
		return v.ExtendedProperties
	}).(ExtendedPropertiesPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionStatus
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSClassicComputeVMProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSClassicComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific backup item representing the Classic Compute VM.
type AzureIaaSClassicComputeVMProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedPropertiesResponse `pulumi:"extendedProperties"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName string `pulumi:"friendlyName"`
	// Health details on this backup item.
	HealthDetails []AzureIaaSVMHealthDetailsResponse `pulumi:"healthDetails"`
	// Health status of protected item.
	HealthStatus string `pulumi:"healthStatus"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataId string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Fully qualified ARM ID of the virtual machine represented by this item.
	VirtualMachineId string `pulumi:"virtualMachineId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// IaaS VM workload-specific backup item representing the Classic Compute VM.
type AzureIaaSClassicComputeVMProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSClassicComputeVMProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSClassicComputeVMProtectedItemResponse)(nil)).Elem()
}

func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ToAzureIaaSClassicComputeVMProtectedItemResponseOutput() AzureIaaSClassicComputeVMProtectedItemResponseOutput {
	return o
}

func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ToAzureIaaSClassicComputeVMProtectedItemResponseOutputWithContext(ctx context.Context) AzureIaaSClassicComputeVMProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *AzureIaaSVMProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ExtendedProperties() ExtendedPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *ExtendedPropertiesResponse {
		return v.ExtendedProperties
	}).(ExtendedPropertiesResponsePtrOutput)
}

// Friendly name of the VM represented by this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Health details on this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) HealthDetails() AzureIaaSVMHealthDetailsResponseArrayOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) []AzureIaaSVMHealthDetailsResponse {
		return v.HealthDetails
	}).(AzureIaaSVMHealthDetailsResponseArrayOutput)
}

// Health status of protected item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) HealthStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.HealthStatus }).(pulumi.StringOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *bool {
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Last backup operation status.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) LastBackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.LastBackupTime }).(pulumi.StringOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ProtectedItemDataId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.ProtectedItemDataId }).(pulumi.StringOutput)
}

// backup item type.
// Expected value is 'Microsoft.ClassicCompute/virtualMachines'.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) []string {
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Fully qualified ARM ID of the virtual machine represented by this item.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) VirtualMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.VirtualMachineId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureIaaSClassicComputeVMProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSClassicComputeVMProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.
type AzureIaaSComputeVMContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// AzureIaaSComputeVMContainerInput is an input type that accepts AzureIaaSComputeVMContainerArgs and AzureIaaSComputeVMContainerOutput values.
// You can construct a concrete instance of `AzureIaaSComputeVMContainerInput` via:
//
//	AzureIaaSComputeVMContainerArgs{...}
type AzureIaaSComputeVMContainerInput interface {
	pulumi.Input

	ToAzureIaaSComputeVMContainerOutput() AzureIaaSComputeVMContainerOutput
	ToAzureIaaSComputeVMContainerOutputWithContext(context.Context) AzureIaaSComputeVMContainerOutput
}

// IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.
type AzureIaaSComputeVMContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId pulumi.StringPtrInput `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion pulumi.StringPtrInput `pulumi:"virtualMachineVersion"`
}

func (AzureIaaSComputeVMContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSComputeVMContainer)(nil)).Elem()
}

func (i AzureIaaSComputeVMContainerArgs) ToAzureIaaSComputeVMContainerOutput() AzureIaaSComputeVMContainerOutput {
	return i.ToAzureIaaSComputeVMContainerOutputWithContext(context.Background())
}

func (i AzureIaaSComputeVMContainerArgs) ToAzureIaaSComputeVMContainerOutputWithContext(ctx context.Context) AzureIaaSComputeVMContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSComputeVMContainerOutput)
}

func (i AzureIaaSComputeVMContainerArgs) ToAzureIaaSComputeVMContainerPtrOutput() AzureIaaSComputeVMContainerPtrOutput {
	return i.ToAzureIaaSComputeVMContainerPtrOutputWithContext(context.Background())
}

func (i AzureIaaSComputeVMContainerArgs) ToAzureIaaSComputeVMContainerPtrOutputWithContext(ctx context.Context) AzureIaaSComputeVMContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSComputeVMContainerOutput).ToAzureIaaSComputeVMContainerPtrOutputWithContext(ctx)
}

// AzureIaaSComputeVMContainerPtrInput is an input type that accepts AzureIaaSComputeVMContainerArgs, AzureIaaSComputeVMContainerPtr and AzureIaaSComputeVMContainerPtrOutput values.
// You can construct a concrete instance of `AzureIaaSComputeVMContainerPtrInput` via:
//
//	        AzureIaaSComputeVMContainerArgs{...}
//
//	or:
//
//	        nil
type AzureIaaSComputeVMContainerPtrInput interface {
	pulumi.Input

	ToAzureIaaSComputeVMContainerPtrOutput() AzureIaaSComputeVMContainerPtrOutput
	ToAzureIaaSComputeVMContainerPtrOutputWithContext(context.Context) AzureIaaSComputeVMContainerPtrOutput
}

type azureIaaSComputeVMContainerPtrType AzureIaaSComputeVMContainerArgs

func AzureIaaSComputeVMContainerPtr(v *AzureIaaSComputeVMContainerArgs) AzureIaaSComputeVMContainerPtrInput {
	return (*azureIaaSComputeVMContainerPtrType)(v)
}

func (*azureIaaSComputeVMContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSComputeVMContainer)(nil)).Elem()
}

func (i *azureIaaSComputeVMContainerPtrType) ToAzureIaaSComputeVMContainerPtrOutput() AzureIaaSComputeVMContainerPtrOutput {
	return i.ToAzureIaaSComputeVMContainerPtrOutputWithContext(context.Background())
}

func (i *azureIaaSComputeVMContainerPtrType) ToAzureIaaSComputeVMContainerPtrOutputWithContext(ctx context.Context) AzureIaaSComputeVMContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSComputeVMContainerPtrOutput)
}

// IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.
type AzureIaaSComputeVMContainerOutput struct{ *pulumi.OutputState }

func (AzureIaaSComputeVMContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSComputeVMContainer)(nil)).Elem()
}

func (o AzureIaaSComputeVMContainerOutput) ToAzureIaaSComputeVMContainerOutput() AzureIaaSComputeVMContainerOutput {
	return o
}

func (o AzureIaaSComputeVMContainerOutput) ToAzureIaaSComputeVMContainerOutputWithContext(ctx context.Context) AzureIaaSComputeVMContainerOutput {
	return o
}

func (o AzureIaaSComputeVMContainerOutput) ToAzureIaaSComputeVMContainerPtrOutput() AzureIaaSComputeVMContainerPtrOutput {
	return o.ToAzureIaaSComputeVMContainerPtrOutputWithContext(context.Background())
}

func (o AzureIaaSComputeVMContainerOutput) ToAzureIaaSComputeVMContainerPtrOutputWithContext(ctx context.Context) AzureIaaSComputeVMContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureIaaSComputeVMContainer) *AzureIaaSComputeVMContainer {
		return &v
	}).(AzureIaaSComputeVMContainerPtrOutput)
}

// Type of backup management for the container.
func (o AzureIaaSComputeVMContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Microsoft.Compute/virtualMachines'.
func (o AzureIaaSComputeVMContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o AzureIaaSComputeVMContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureIaaSComputeVMContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureIaaSComputeVMContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureIaaSComputeVMContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureIaaSComputeVMContainerOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o AzureIaaSComputeVMContainerOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o AzureIaaSComputeVMContainerOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainer) *string { return v.VirtualMachineVersion }).(pulumi.StringPtrOutput)
}

type AzureIaaSComputeVMContainerPtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSComputeVMContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSComputeVMContainer)(nil)).Elem()
}

func (o AzureIaaSComputeVMContainerPtrOutput) ToAzureIaaSComputeVMContainerPtrOutput() AzureIaaSComputeVMContainerPtrOutput {
	return o
}

func (o AzureIaaSComputeVMContainerPtrOutput) ToAzureIaaSComputeVMContainerPtrOutputWithContext(ctx context.Context) AzureIaaSComputeVMContainerPtrOutput {
	return o
}

func (o AzureIaaSComputeVMContainerPtrOutput) Elem() AzureIaaSComputeVMContainerOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) AzureIaaSComputeVMContainer {
		if v != nil {
			return *v
		}
		var ret AzureIaaSComputeVMContainer
		return ret
	}).(AzureIaaSComputeVMContainerOutput)
}

// Type of backup management for the container.
func (o AzureIaaSComputeVMContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Microsoft.Compute/virtualMachines'.
func (o AzureIaaSComputeVMContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o AzureIaaSComputeVMContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureIaaSComputeVMContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureIaaSComputeVMContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureIaaSComputeVMContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureIaaSComputeVMContainerPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o AzureIaaSComputeVMContainerPtrOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineId
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o AzureIaaSComputeVMContainerPtrOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineVersion
	}).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.
type AzureIaaSComputeVMContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.
type AzureIaaSComputeVMContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSComputeVMContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSComputeVMContainerResponse)(nil)).Elem()
}

func (o AzureIaaSComputeVMContainerResponseOutput) ToAzureIaaSComputeVMContainerResponseOutput() AzureIaaSComputeVMContainerResponseOutput {
	return o
}

func (o AzureIaaSComputeVMContainerResponseOutput) ToAzureIaaSComputeVMContainerResponseOutputWithContext(ctx context.Context) AzureIaaSComputeVMContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureIaaSComputeVMContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Microsoft.Compute/virtualMachines'.
func (o AzureIaaSComputeVMContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o AzureIaaSComputeVMContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureIaaSComputeVMContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureIaaSComputeVMContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureIaaSComputeVMContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureIaaSComputeVMContainerResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o AzureIaaSComputeVMContainerResponseOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o AzureIaaSComputeVMContainerResponseOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMContainerResponse) *string { return v.VirtualMachineVersion }).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
type AzureIaaSComputeVMProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedProperties `pulumi:"extendedProperties"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureIaaSComputeVMProtectedItemInput is an input type that accepts AzureIaaSComputeVMProtectedItemArgs and AzureIaaSComputeVMProtectedItemOutput values.
// You can construct a concrete instance of `AzureIaaSComputeVMProtectedItemInput` via:
//
//	AzureIaaSComputeVMProtectedItemArgs{...}
type AzureIaaSComputeVMProtectedItemInput interface {
	pulumi.Input

	ToAzureIaaSComputeVMProtectedItemOutput() AzureIaaSComputeVMProtectedItemOutput
	ToAzureIaaSComputeVMProtectedItemOutputWithContext(context.Context) AzureIaaSComputeVMProtectedItemOutput
}

// IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
type AzureIaaSComputeVMProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureIaaSVMProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties ExtendedPropertiesPtrInput `pulumi:"extendedProperties"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus pulumi.StringPtrInput `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureIaaSComputeVMProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSComputeVMProtectedItem)(nil)).Elem()
}

func (i AzureIaaSComputeVMProtectedItemArgs) ToAzureIaaSComputeVMProtectedItemOutput() AzureIaaSComputeVMProtectedItemOutput {
	return i.ToAzureIaaSComputeVMProtectedItemOutputWithContext(context.Background())
}

func (i AzureIaaSComputeVMProtectedItemArgs) ToAzureIaaSComputeVMProtectedItemOutputWithContext(ctx context.Context) AzureIaaSComputeVMProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSComputeVMProtectedItemOutput)
}

func (i AzureIaaSComputeVMProtectedItemArgs) ToAzureIaaSComputeVMProtectedItemPtrOutput() AzureIaaSComputeVMProtectedItemPtrOutput {
	return i.ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureIaaSComputeVMProtectedItemArgs) ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSComputeVMProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSComputeVMProtectedItemOutput).ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(ctx)
}

// AzureIaaSComputeVMProtectedItemPtrInput is an input type that accepts AzureIaaSComputeVMProtectedItemArgs, AzureIaaSComputeVMProtectedItemPtr and AzureIaaSComputeVMProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureIaaSComputeVMProtectedItemPtrInput` via:
//
//	        AzureIaaSComputeVMProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureIaaSComputeVMProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureIaaSComputeVMProtectedItemPtrOutput() AzureIaaSComputeVMProtectedItemPtrOutput
	ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(context.Context) AzureIaaSComputeVMProtectedItemPtrOutput
}

type azureIaaSComputeVMProtectedItemPtrType AzureIaaSComputeVMProtectedItemArgs

func AzureIaaSComputeVMProtectedItemPtr(v *AzureIaaSComputeVMProtectedItemArgs) AzureIaaSComputeVMProtectedItemPtrInput {
	return (*azureIaaSComputeVMProtectedItemPtrType)(v)
}

func (*azureIaaSComputeVMProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSComputeVMProtectedItem)(nil)).Elem()
}

func (i *azureIaaSComputeVMProtectedItemPtrType) ToAzureIaaSComputeVMProtectedItemPtrOutput() AzureIaaSComputeVMProtectedItemPtrOutput {
	return i.ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureIaaSComputeVMProtectedItemPtrType) ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSComputeVMProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSComputeVMProtectedItemPtrOutput)
}

// IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
type AzureIaaSComputeVMProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureIaaSComputeVMProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSComputeVMProtectedItem)(nil)).Elem()
}

func (o AzureIaaSComputeVMProtectedItemOutput) ToAzureIaaSComputeVMProtectedItemOutput() AzureIaaSComputeVMProtectedItemOutput {
	return o
}

func (o AzureIaaSComputeVMProtectedItemOutput) ToAzureIaaSComputeVMProtectedItemOutputWithContext(ctx context.Context) AzureIaaSComputeVMProtectedItemOutput {
	return o
}

func (o AzureIaaSComputeVMProtectedItemOutput) ToAzureIaaSComputeVMProtectedItemPtrOutput() AzureIaaSComputeVMProtectedItemPtrOutput {
	return o.ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureIaaSComputeVMProtectedItemOutput) ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSComputeVMProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureIaaSComputeVMProtectedItem) *AzureIaaSComputeVMProtectedItem {
		return &v
	}).(AzureIaaSComputeVMProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSComputeVMProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSComputeVMProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSComputeVMProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSComputeVMProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSComputeVMProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSComputeVMProtectedItemOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *AzureIaaSVMProtectedItemExtendedInfo { return v.ExtendedInfo }).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSComputeVMProtectedItemOutput) ExtendedProperties() ExtendedPropertiesPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *ExtendedProperties { return v.ExtendedProperties }).(ExtendedPropertiesPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSComputeVMProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSComputeVMProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSComputeVMProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSComputeVMProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSComputeVMProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) map[string]KPIResourceHealthDetails { return v.KpisHealths }).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status.
func (o AzureIaaSComputeVMProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSComputeVMProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSComputeVMProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSComputeVMProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'Microsoft.Compute/virtualMachines'.
func (o AzureIaaSComputeVMProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureIaaSComputeVMProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSComputeVMProtectedItemOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSComputeVMProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSComputeVMProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSComputeVMProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureIaaSComputeVMProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSComputeVMProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSComputeVMProtectedItem)(nil)).Elem()
}

func (o AzureIaaSComputeVMProtectedItemPtrOutput) ToAzureIaaSComputeVMProtectedItemPtrOutput() AzureIaaSComputeVMProtectedItemPtrOutput {
	return o
}

func (o AzureIaaSComputeVMProtectedItemPtrOutput) ToAzureIaaSComputeVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSComputeVMProtectedItemPtrOutput {
	return o
}

func (o AzureIaaSComputeVMProtectedItemPtrOutput) Elem() AzureIaaSComputeVMProtectedItemOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) AzureIaaSComputeVMProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureIaaSComputeVMProtectedItem
		return ret
	}).(AzureIaaSComputeVMProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSComputeVMProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSComputeVMProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSComputeVMProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSComputeVMProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *AzureIaaSVMProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) ExtendedProperties() ExtendedPropertiesPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *ExtendedProperties {
		if v == nil {
			return nil
		}
		return v.ExtendedProperties
	}).(ExtendedPropertiesPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSComputeVMProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSComputeVMProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSComputeVMProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSComputeVMProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSComputeVMProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSComputeVMProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'Microsoft.Compute/virtualMachines'.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionStatus
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSComputeVMProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSComputeVMProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSComputeVMProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSComputeVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
type AzureIaaSComputeVMProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedPropertiesResponse `pulumi:"extendedProperties"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName string `pulumi:"friendlyName"`
	// Health details on this backup item.
	HealthDetails []AzureIaaSVMHealthDetailsResponse `pulumi:"healthDetails"`
	// Health status of protected item.
	HealthStatus string `pulumi:"healthStatus"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataId string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'Microsoft.Compute/virtualMachines'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Fully qualified ARM ID of the virtual machine represented by this item.
	VirtualMachineId string `pulumi:"virtualMachineId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
type AzureIaaSComputeVMProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSComputeVMProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSComputeVMProtectedItemResponse)(nil)).Elem()
}

func (o AzureIaaSComputeVMProtectedItemResponseOutput) ToAzureIaaSComputeVMProtectedItemResponseOutput() AzureIaaSComputeVMProtectedItemResponseOutput {
	return o
}

func (o AzureIaaSComputeVMProtectedItemResponseOutput) ToAzureIaaSComputeVMProtectedItemResponseOutputWithContext(ctx context.Context) AzureIaaSComputeVMProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSComputeVMProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSComputeVMProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSComputeVMProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSComputeVMProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *AzureIaaSVMProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) ExtendedProperties() ExtendedPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *ExtendedPropertiesResponse {
		return v.ExtendedProperties
	}).(ExtendedPropertiesResponsePtrOutput)
}

// Friendly name of the VM represented by this backup item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Health details on this backup item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) HealthDetails() AzureIaaSVMHealthDetailsResponseArrayOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) []AzureIaaSVMHealthDetailsResponse {
		return v.HealthDetails
	}).(AzureIaaSVMHealthDetailsResponseArrayOutput)
}

// Health status of protected item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) HealthStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.HealthStatus }).(pulumi.StringOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSComputeVMProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSComputeVMProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSComputeVMProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSComputeVMProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSComputeVMProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Last backup operation status.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) LastBackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.LastBackupTime }).(pulumi.StringOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSComputeVMProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) ProtectedItemDataId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.ProtectedItemDataId }).(pulumi.StringOutput)
}

// backup item type.
// Expected value is 'Microsoft.Compute/virtualMachines'.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSComputeVMProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSComputeVMProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureIaaSComputeVMProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Fully qualified ARM ID of the virtual machine represented by this item.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) VirtualMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.VirtualMachineId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureIaaSComputeVMProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSComputeVMProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Azure IaaS VM workload-specific Health Details.
type AzureIaaSVMHealthDetailsResponse struct {
	// Health Code
	Code int `pulumi:"code"`
	// Health Message
	Message string `pulumi:"message"`
	// Health Recommended Actions
	Recommendations []string `pulumi:"recommendations"`
	// Health Title
	Title string `pulumi:"title"`
}

// Azure IaaS VM workload-specific Health Details.
type AzureIaaSVMHealthDetailsResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMHealthDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMHealthDetailsResponse)(nil)).Elem()
}

func (o AzureIaaSVMHealthDetailsResponseOutput) ToAzureIaaSVMHealthDetailsResponseOutput() AzureIaaSVMHealthDetailsResponseOutput {
	return o
}

func (o AzureIaaSVMHealthDetailsResponseOutput) ToAzureIaaSVMHealthDetailsResponseOutputWithContext(ctx context.Context) AzureIaaSVMHealthDetailsResponseOutput {
	return o
}

// Health Code
func (o AzureIaaSVMHealthDetailsResponseOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v AzureIaaSVMHealthDetailsResponse) int { return v.Code }).(pulumi.IntOutput)
}

// Health Message
func (o AzureIaaSVMHealthDetailsResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMHealthDetailsResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Health Recommended Actions
func (o AzureIaaSVMHealthDetailsResponseOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSVMHealthDetailsResponse) []string { return v.Recommendations }).(pulumi.StringArrayOutput)
}

// Health Title
func (o AzureIaaSVMHealthDetailsResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMHealthDetailsResponse) string { return v.Title }).(pulumi.StringOutput)
}

type AzureIaaSVMHealthDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMHealthDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureIaaSVMHealthDetailsResponse)(nil)).Elem()
}

func (o AzureIaaSVMHealthDetailsResponseArrayOutput) ToAzureIaaSVMHealthDetailsResponseArrayOutput() AzureIaaSVMHealthDetailsResponseArrayOutput {
	return o
}

func (o AzureIaaSVMHealthDetailsResponseArrayOutput) ToAzureIaaSVMHealthDetailsResponseArrayOutputWithContext(ctx context.Context) AzureIaaSVMHealthDetailsResponseArrayOutput {
	return o
}

func (o AzureIaaSVMHealthDetailsResponseArrayOutput) Index(i pulumi.IntInput) AzureIaaSVMHealthDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureIaaSVMHealthDetailsResponse {
		return vs[0].([]AzureIaaSVMHealthDetailsResponse)[vs[1].(int)]
	}).(AzureIaaSVMHealthDetailsResponseOutput)
}

// IaaS VM workload-specific backup item.
type AzureIaaSVMProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedProperties `pulumi:"extendedProperties"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'AzureIaaSVMProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureIaaSVMProtectedItemInput is an input type that accepts AzureIaaSVMProtectedItemArgs and AzureIaaSVMProtectedItemOutput values.
// You can construct a concrete instance of `AzureIaaSVMProtectedItemInput` via:
//
//	AzureIaaSVMProtectedItemArgs{...}
type AzureIaaSVMProtectedItemInput interface {
	pulumi.Input

	ToAzureIaaSVMProtectedItemOutput() AzureIaaSVMProtectedItemOutput
	ToAzureIaaSVMProtectedItemOutputWithContext(context.Context) AzureIaaSVMProtectedItemOutput
}

// IaaS VM workload-specific backup item.
type AzureIaaSVMProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureIaaSVMProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties ExtendedPropertiesPtrInput `pulumi:"extendedProperties"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'AzureIaaSVMProtectedItem'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus pulumi.StringPtrInput `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureIaaSVMProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectedItem)(nil)).Elem()
}

func (i AzureIaaSVMProtectedItemArgs) ToAzureIaaSVMProtectedItemOutput() AzureIaaSVMProtectedItemOutput {
	return i.ToAzureIaaSVMProtectedItemOutputWithContext(context.Background())
}

func (i AzureIaaSVMProtectedItemArgs) ToAzureIaaSVMProtectedItemOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectedItemOutput)
}

func (i AzureIaaSVMProtectedItemArgs) ToAzureIaaSVMProtectedItemPtrOutput() AzureIaaSVMProtectedItemPtrOutput {
	return i.ToAzureIaaSVMProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureIaaSVMProtectedItemArgs) ToAzureIaaSVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectedItemOutput).ToAzureIaaSVMProtectedItemPtrOutputWithContext(ctx)
}

// AzureIaaSVMProtectedItemPtrInput is an input type that accepts AzureIaaSVMProtectedItemArgs, AzureIaaSVMProtectedItemPtr and AzureIaaSVMProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureIaaSVMProtectedItemPtrInput` via:
//
//	        AzureIaaSVMProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureIaaSVMProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureIaaSVMProtectedItemPtrOutput() AzureIaaSVMProtectedItemPtrOutput
	ToAzureIaaSVMProtectedItemPtrOutputWithContext(context.Context) AzureIaaSVMProtectedItemPtrOutput
}

type azureIaaSVMProtectedItemPtrType AzureIaaSVMProtectedItemArgs

func AzureIaaSVMProtectedItemPtr(v *AzureIaaSVMProtectedItemArgs) AzureIaaSVMProtectedItemPtrInput {
	return (*azureIaaSVMProtectedItemPtrType)(v)
}

func (*azureIaaSVMProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSVMProtectedItem)(nil)).Elem()
}

func (i *azureIaaSVMProtectedItemPtrType) ToAzureIaaSVMProtectedItemPtrOutput() AzureIaaSVMProtectedItemPtrOutput {
	return i.ToAzureIaaSVMProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureIaaSVMProtectedItemPtrType) ToAzureIaaSVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectedItemPtrOutput)
}

// IaaS VM workload-specific backup item.
type AzureIaaSVMProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectedItem)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemOutput) ToAzureIaaSVMProtectedItemOutput() AzureIaaSVMProtectedItemOutput {
	return o
}

func (o AzureIaaSVMProtectedItemOutput) ToAzureIaaSVMProtectedItemOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemOutput {
	return o
}

func (o AzureIaaSVMProtectedItemOutput) ToAzureIaaSVMProtectedItemPtrOutput() AzureIaaSVMProtectedItemPtrOutput {
	return o.ToAzureIaaSVMProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureIaaSVMProtectedItemOutput) ToAzureIaaSVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureIaaSVMProtectedItem) *AzureIaaSVMProtectedItem {
		return &v
	}).(AzureIaaSVMProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSVMProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSVMProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSVMProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSVMProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSVMProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSVMProtectedItemOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *AzureIaaSVMProtectedItemExtendedInfo { return v.ExtendedInfo }).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSVMProtectedItemOutput) ExtendedProperties() ExtendedPropertiesPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *ExtendedProperties { return v.ExtendedProperties }).(ExtendedPropertiesPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSVMProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSVMProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSVMProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSVMProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSVMProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) map[string]KPIResourceHealthDetails { return v.KpisHealths }).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status.
func (o AzureIaaSVMProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSVMProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSVMProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSVMProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureIaaSVMProtectedItem'.
func (o AzureIaaSVMProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureIaaSVMProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSVMProtectedItemOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSVMProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSVMProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSVMProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureIaaSVMProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSVMProtectedItem)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemPtrOutput) ToAzureIaaSVMProtectedItemPtrOutput() AzureIaaSVMProtectedItemPtrOutput {
	return o
}

func (o AzureIaaSVMProtectedItemPtrOutput) ToAzureIaaSVMProtectedItemPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemPtrOutput {
	return o
}

func (o AzureIaaSVMProtectedItemPtrOutput) Elem() AzureIaaSVMProtectedItemOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) AzureIaaSVMProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureIaaSVMProtectedItem
		return ret
	}).(AzureIaaSVMProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSVMProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSVMProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSVMProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSVMProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSVMProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSVMProtectedItemPtrOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *AzureIaaSVMProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSVMProtectedItemPtrOutput) ExtendedProperties() ExtendedPropertiesPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *ExtendedProperties {
		if v == nil {
			return nil
		}
		return v.ExtendedProperties
	}).(ExtendedPropertiesPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSVMProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSVMProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSVMProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSVMProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSVMProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status.
func (o AzureIaaSVMProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSVMProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSVMProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSVMProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureIaaSVMProtectedItem'.
func (o AzureIaaSVMProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureIaaSVMProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSVMProtectedItemPtrOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionStatus
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSVMProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSVMProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSVMProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Additional information on Azure IaaS VM specific backup item.
type AzureIaaSVMProtectedItemExtendedInfo struct {
	// The latest backup copy available for this backup item in archive tier
	NewestRecoveryPointInArchive *string `pulumi:"newestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item across all tiers.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// The oldest backup copy available for this backup item in archive tier
	OldestRecoveryPointInArchive *string `pulumi:"oldestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item in vault tier
	OldestRecoveryPointInVault *string `pulumi:"oldestRecoveryPointInVault"`
	// Specifies if backup policy associated with the backup item is inconsistent.
	PolicyInconsistent *bool `pulumi:"policyInconsistent"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// AzureIaaSVMProtectedItemExtendedInfoInput is an input type that accepts AzureIaaSVMProtectedItemExtendedInfoArgs and AzureIaaSVMProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `AzureIaaSVMProtectedItemExtendedInfoInput` via:
//
//	AzureIaaSVMProtectedItemExtendedInfoArgs{...}
type AzureIaaSVMProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToAzureIaaSVMProtectedItemExtendedInfoOutput() AzureIaaSVMProtectedItemExtendedInfoOutput
	ToAzureIaaSVMProtectedItemExtendedInfoOutputWithContext(context.Context) AzureIaaSVMProtectedItemExtendedInfoOutput
}

// Additional information on Azure IaaS VM specific backup item.
type AzureIaaSVMProtectedItemExtendedInfoArgs struct {
	// The latest backup copy available for this backup item in archive tier
	NewestRecoveryPointInArchive pulumi.StringPtrInput `pulumi:"newestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item across all tiers.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// The oldest backup copy available for this backup item in archive tier
	OldestRecoveryPointInArchive pulumi.StringPtrInput `pulumi:"oldestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item in vault tier
	OldestRecoveryPointInVault pulumi.StringPtrInput `pulumi:"oldestRecoveryPointInVault"`
	// Specifies if backup policy associated with the backup item is inconsistent.
	PolicyInconsistent pulumi.BoolPtrInput `pulumi:"policyInconsistent"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
}

func (AzureIaaSVMProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectedItemExtendedInfo)(nil)).Elem()
}

func (i AzureIaaSVMProtectedItemExtendedInfoArgs) ToAzureIaaSVMProtectedItemExtendedInfoOutput() AzureIaaSVMProtectedItemExtendedInfoOutput {
	return i.ToAzureIaaSVMProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i AzureIaaSVMProtectedItemExtendedInfoArgs) ToAzureIaaSVMProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectedItemExtendedInfoOutput)
}

func (i AzureIaaSVMProtectedItemExtendedInfoArgs) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutput() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i AzureIaaSVMProtectedItemExtendedInfoArgs) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectedItemExtendedInfoOutput).ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// AzureIaaSVMProtectedItemExtendedInfoPtrInput is an input type that accepts AzureIaaSVMProtectedItemExtendedInfoArgs, AzureIaaSVMProtectedItemExtendedInfoPtr and AzureIaaSVMProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `AzureIaaSVMProtectedItemExtendedInfoPtrInput` via:
//
//	        AzureIaaSVMProtectedItemExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type AzureIaaSVMProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToAzureIaaSVMProtectedItemExtendedInfoPtrOutput() AzureIaaSVMProtectedItemExtendedInfoPtrOutput
	ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(context.Context) AzureIaaSVMProtectedItemExtendedInfoPtrOutput
}

type azureIaaSVMProtectedItemExtendedInfoPtrType AzureIaaSVMProtectedItemExtendedInfoArgs

func AzureIaaSVMProtectedItemExtendedInfoPtr(v *AzureIaaSVMProtectedItemExtendedInfoArgs) AzureIaaSVMProtectedItemExtendedInfoPtrInput {
	return (*azureIaaSVMProtectedItemExtendedInfoPtrType)(v)
}

func (*azureIaaSVMProtectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSVMProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *azureIaaSVMProtectedItemExtendedInfoPtrType) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutput() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *azureIaaSVMProtectedItemExtendedInfoPtrType) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// Additional information on Azure IaaS VM specific backup item.
type AzureIaaSVMProtectedItemExtendedInfoOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectedItemExtendedInfo)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemExtendedInfoOutput) ToAzureIaaSVMProtectedItemExtendedInfoOutput() AzureIaaSVMProtectedItemExtendedInfoOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoOutput) ToAzureIaaSVMProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoOutput) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutput() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o.ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (o AzureIaaSVMProtectedItemExtendedInfoOutput) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureIaaSVMProtectedItemExtendedInfo) *AzureIaaSVMProtectedItemExtendedInfo {
		return &v
	}).(AzureIaaSVMProtectedItemExtendedInfoPtrOutput)
}

// The latest backup copy available for this backup item in archive tier
func (o AzureIaaSVMProtectedItemExtendedInfoOutput) NewestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfo) *string { return v.NewestRecoveryPointInArchive }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item across all tiers.
func (o AzureIaaSVMProtectedItemExtendedInfoOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfo) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in archive tier
func (o AzureIaaSVMProtectedItemExtendedInfoOutput) OldestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfo) *string { return v.OldestRecoveryPointInArchive }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in vault tier
func (o AzureIaaSVMProtectedItemExtendedInfoOutput) OldestRecoveryPointInVault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfo) *string { return v.OldestRecoveryPointInVault }).(pulumi.StringPtrOutput)
}

// Specifies if backup policy associated with the backup item is inconsistent.
func (o AzureIaaSVMProtectedItemExtendedInfoOutput) PolicyInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfo) *bool { return v.PolicyInconsistent }).(pulumi.BoolPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureIaaSVMProtectedItemExtendedInfoOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfo) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureIaaSVMProtectedItemExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSVMProtectedItemExtendedInfo)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutput() AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) ToAzureIaaSVMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) Elem() AzureIaaSVMProtectedItemExtendedInfoOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfo) AzureIaaSVMProtectedItemExtendedInfo {
		if v != nil {
			return *v
		}
		var ret AzureIaaSVMProtectedItemExtendedInfo
		return ret
	}).(AzureIaaSVMProtectedItemExtendedInfoOutput)
}

// The latest backup copy available for this backup item in archive tier
func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) NewestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.NewestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item across all tiers.
func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in archive tier
func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) OldestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in vault tier
func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) OldestRecoveryPointInVault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPointInVault
	}).(pulumi.StringPtrOutput)
}

// Specifies if backup policy associated with the backup item is inconsistent.
func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) PolicyInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfo) *bool {
		if v == nil {
			return nil
		}
		return v.PolicyInconsistent
	}).(pulumi.BoolPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureIaaSVMProtectedItemExtendedInfoPtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfo) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Additional information on Azure IaaS VM specific backup item.
type AzureIaaSVMProtectedItemExtendedInfoResponse struct {
	// The latest backup copy available for this backup item in archive tier
	NewestRecoveryPointInArchive *string `pulumi:"newestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item across all tiers.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// The oldest backup copy available for this backup item in archive tier
	OldestRecoveryPointInArchive *string `pulumi:"oldestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item in vault tier
	OldestRecoveryPointInVault *string `pulumi:"oldestRecoveryPointInVault"`
	// Specifies if backup policy associated with the backup item is inconsistent.
	PolicyInconsistent *bool `pulumi:"policyInconsistent"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information on Azure IaaS VM specific backup item.
type AzureIaaSVMProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) ToAzureIaaSVMProtectedItemExtendedInfoResponseOutput() AzureIaaSVMProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) ToAzureIaaSVMProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoResponseOutput {
	return o
}

// The latest backup copy available for this backup item in archive tier
func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) NewestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfoResponse) *string { return v.NewestRecoveryPointInArchive }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item across all tiers.
func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in archive tier
func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) OldestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPointInArchive }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in vault tier
func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) OldestRecoveryPointInVault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPointInVault }).(pulumi.StringPtrOutput)
}

// Specifies if backup policy associated with the backup item is inconsistent.
func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) PolicyInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfoResponse) *bool { return v.PolicyInconsistent }).(pulumi.BoolPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureIaaSVMProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSVMProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) ToAzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput() AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) ToAzureIaaSVMProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) Elem() AzureIaaSVMProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) AzureIaaSVMProtectedItemExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret AzureIaaSVMProtectedItemExtendedInfoResponse
		return ret
	}).(AzureIaaSVMProtectedItemExtendedInfoResponseOutput)
}

// The latest backup copy available for this backup item in archive tier
func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) NewestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.NewestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item across all tiers.
func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in archive tier
func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in vault tier
func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPointInVault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPointInVault
	}).(pulumi.StringPtrOutput)
}

// Specifies if backup policy associated with the backup item is inconsistent.
func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) PolicyInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PolicyInconsistent
	}).(pulumi.BoolPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// IaaS VM workload-specific backup item.
type AzureIaaSVMProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureIaaSVMProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Extended Properties for Azure IaasVM Backup.
	ExtendedProperties *ExtendedPropertiesResponse `pulumi:"extendedProperties"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName string `pulumi:"friendlyName"`
	// Health details on this backup item.
	HealthDetails []AzureIaaSVMHealthDetailsResponse `pulumi:"healthDetails"`
	// Health status of protected item.
	HealthStatus string `pulumi:"healthStatus"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Last backup operation status.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataId string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'AzureIaaSVMProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Fully qualified ARM ID of the virtual machine represented by this item.
	VirtualMachineId string `pulumi:"virtualMachineId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// IaaS VM workload-specific backup item.
type AzureIaaSVMProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectedItemResponse)(nil)).Elem()
}

func (o AzureIaaSVMProtectedItemResponseOutput) ToAzureIaaSVMProtectedItemResponseOutput() AzureIaaSVMProtectedItemResponseOutput {
	return o
}

func (o AzureIaaSVMProtectedItemResponseOutput) ToAzureIaaSVMProtectedItemResponseOutputWithContext(ctx context.Context) AzureIaaSVMProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureIaaSVMProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureIaaSVMProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureIaaSVMProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureIaaSVMProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureIaaSVMProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureIaaSVMProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) ExtendedInfo() AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *AzureIaaSVMProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
func (o AzureIaaSVMProtectedItemResponseOutput) ExtendedProperties() ExtendedPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *ExtendedPropertiesResponse { return v.ExtendedProperties }).(ExtendedPropertiesResponsePtrOutput)
}

// Friendly name of the VM represented by this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Health details on this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) HealthDetails() AzureIaaSVMHealthDetailsResponseArrayOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) []AzureIaaSVMHealthDetailsResponse { return v.HealthDetails }).(AzureIaaSVMHealthDetailsResponseArrayOutput)
}

// Health status of protected item.
func (o AzureIaaSVMProtectedItemResponseOutput) HealthStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.HealthStatus }).(pulumi.StringOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureIaaSVMProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureIaaSVMProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureIaaSVMProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureIaaSVMProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureIaaSVMProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Last backup operation status.
func (o AzureIaaSVMProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) LastBackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.LastBackupTime }).(pulumi.StringOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureIaaSVMProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureIaaSVMProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureIaaSVMProtectedItemResponseOutput) ProtectedItemDataId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.ProtectedItemDataId }).(pulumi.StringOutput)
}

// backup item type.
// Expected value is 'AzureIaaSVMProtectedItem'.
func (o AzureIaaSVMProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureIaaSVMProtectedItemResponseOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureIaaSVMProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureIaaSVMProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureIaaSVMProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureIaaSVMProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Fully qualified ARM ID of the virtual machine represented by this item.
func (o AzureIaaSVMProtectedItemResponseOutput) VirtualMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.VirtualMachineId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureIaaSVMProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// IaaS VM workload-specific backup policy.
type AzureIaaSVMProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureIaasVM'.
	BackupManagementType string                      `pulumi:"backupManagementType"`
	InstantRPDetails     *InstantRPAdditionalDetails `pulumi:"instantRPDetails"`
	// Instant RP retention policy range in days
	InstantRpRetentionRangeInDays *int    `pulumi:"instantRpRetentionRangeInDays"`
	PolicyType                    *string `pulumi:"policyType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy          interface{} `pulumi:"schedulePolicy"`
	SnapshotConsistencyType *string     `pulumi:"snapshotConsistencyType"`
	// Tiering policy to automatically move RPs to another tier
	// Key is Target Tier, defined in RecoveryPointTierType enum.
	// Tiering policy specifies the criteria to move RP to the target tier.
	TieringPolicy map[string]TieringPolicy `pulumi:"tieringPolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// AzureIaaSVMProtectionPolicyInput is an input type that accepts AzureIaaSVMProtectionPolicyArgs and AzureIaaSVMProtectionPolicyOutput values.
// You can construct a concrete instance of `AzureIaaSVMProtectionPolicyInput` via:
//
//	AzureIaaSVMProtectionPolicyArgs{...}
type AzureIaaSVMProtectionPolicyInput interface {
	pulumi.Input

	ToAzureIaaSVMProtectionPolicyOutput() AzureIaaSVMProtectionPolicyOutput
	ToAzureIaaSVMProtectionPolicyOutputWithContext(context.Context) AzureIaaSVMProtectionPolicyOutput
}

// IaaS VM workload-specific backup policy.
type AzureIaaSVMProtectionPolicyArgs struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureIaasVM'.
	BackupManagementType pulumi.StringInput                 `pulumi:"backupManagementType"`
	InstantRPDetails     InstantRPAdditionalDetailsPtrInput `pulumi:"instantRPDetails"`
	// Instant RP retention policy range in days
	InstantRpRetentionRangeInDays pulumi.IntPtrInput    `pulumi:"instantRpRetentionRangeInDays"`
	PolicyType                    pulumi.StringPtrInput `pulumi:"policyType"`
	// Number of items associated with this policy.
	ProtectedItemsCount pulumi.IntPtrInput `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy pulumi.Input `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy          pulumi.Input          `pulumi:"schedulePolicy"`
	SnapshotConsistencyType pulumi.StringPtrInput `pulumi:"snapshotConsistencyType"`
	// Tiering policy to automatically move RPs to another tier
	// Key is Target Tier, defined in RecoveryPointTierType enum.
	// Tiering policy specifies the criteria to move RP to the target tier.
	TieringPolicy TieringPolicyMapInput `pulumi:"tieringPolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (AzureIaaSVMProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectionPolicy)(nil)).Elem()
}

func (i AzureIaaSVMProtectionPolicyArgs) ToAzureIaaSVMProtectionPolicyOutput() AzureIaaSVMProtectionPolicyOutput {
	return i.ToAzureIaaSVMProtectionPolicyOutputWithContext(context.Background())
}

func (i AzureIaaSVMProtectionPolicyArgs) ToAzureIaaSVMProtectionPolicyOutputWithContext(ctx context.Context) AzureIaaSVMProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectionPolicyOutput)
}

func (i AzureIaaSVMProtectionPolicyArgs) ToAzureIaaSVMProtectionPolicyPtrOutput() AzureIaaSVMProtectionPolicyPtrOutput {
	return i.ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i AzureIaaSVMProtectionPolicyArgs) ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectionPolicyOutput).ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(ctx)
}

// AzureIaaSVMProtectionPolicyPtrInput is an input type that accepts AzureIaaSVMProtectionPolicyArgs, AzureIaaSVMProtectionPolicyPtr and AzureIaaSVMProtectionPolicyPtrOutput values.
// You can construct a concrete instance of `AzureIaaSVMProtectionPolicyPtrInput` via:
//
//	        AzureIaaSVMProtectionPolicyArgs{...}
//
//	or:
//
//	        nil
type AzureIaaSVMProtectionPolicyPtrInput interface {
	pulumi.Input

	ToAzureIaaSVMProtectionPolicyPtrOutput() AzureIaaSVMProtectionPolicyPtrOutput
	ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(context.Context) AzureIaaSVMProtectionPolicyPtrOutput
}

type azureIaaSVMProtectionPolicyPtrType AzureIaaSVMProtectionPolicyArgs

func AzureIaaSVMProtectionPolicyPtr(v *AzureIaaSVMProtectionPolicyArgs) AzureIaaSVMProtectionPolicyPtrInput {
	return (*azureIaaSVMProtectionPolicyPtrType)(v)
}

func (*azureIaaSVMProtectionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSVMProtectionPolicy)(nil)).Elem()
}

func (i *azureIaaSVMProtectionPolicyPtrType) ToAzureIaaSVMProtectionPolicyPtrOutput() AzureIaaSVMProtectionPolicyPtrOutput {
	return i.ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i *azureIaaSVMProtectionPolicyPtrType) ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIaaSVMProtectionPolicyPtrOutput)
}

// IaaS VM workload-specific backup policy.
type AzureIaaSVMProtectionPolicyOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectionPolicy)(nil)).Elem()
}

func (o AzureIaaSVMProtectionPolicyOutput) ToAzureIaaSVMProtectionPolicyOutput() AzureIaaSVMProtectionPolicyOutput {
	return o
}

func (o AzureIaaSVMProtectionPolicyOutput) ToAzureIaaSVMProtectionPolicyOutputWithContext(ctx context.Context) AzureIaaSVMProtectionPolicyOutput {
	return o
}

func (o AzureIaaSVMProtectionPolicyOutput) ToAzureIaaSVMProtectionPolicyPtrOutput() AzureIaaSVMProtectionPolicyPtrOutput {
	return o.ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(context.Background())
}

func (o AzureIaaSVMProtectionPolicyOutput) ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureIaaSVMProtectionPolicy) *AzureIaaSVMProtectionPolicy {
		return &v
	}).(AzureIaaSVMProtectionPolicyPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureIaasVM'.
func (o AzureIaaSVMProtectionPolicyOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

func (o AzureIaaSVMProtectionPolicyOutput) InstantRPDetails() InstantRPAdditionalDetailsPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) *InstantRPAdditionalDetails { return v.InstantRPDetails }).(InstantRPAdditionalDetailsPtrOutput)
}

// Instant RP retention policy range in days
func (o AzureIaaSVMProtectionPolicyOutput) InstantRpRetentionRangeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) *int { return v.InstantRpRetentionRangeInDays }).(pulumi.IntPtrOutput)
}

func (o AzureIaaSVMProtectionPolicyOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o AzureIaaSVMProtectionPolicyOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureIaaSVMProtectionPolicyOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Retention policy with the details on backup copy retention ranges.
func (o AzureIaaSVMProtectionPolicyOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Backup schedule specified as part of backup policy.
func (o AzureIaaSVMProtectionPolicyOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

func (o AzureIaaSVMProtectionPolicyOutput) SnapshotConsistencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) *string { return v.SnapshotConsistencyType }).(pulumi.StringPtrOutput)
}

// Tiering policy to automatically move RPs to another tier
// Key is Target Tier, defined in RecoveryPointTierType enum.
// Tiering policy specifies the criteria to move RP to the target tier.
func (o AzureIaaSVMProtectionPolicyOutput) TieringPolicy() TieringPolicyMapOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) map[string]TieringPolicy { return v.TieringPolicy }).(TieringPolicyMapOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o AzureIaaSVMProtectionPolicyOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicy) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type AzureIaaSVMProtectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIaaSVMProtectionPolicy)(nil)).Elem()
}

func (o AzureIaaSVMProtectionPolicyPtrOutput) ToAzureIaaSVMProtectionPolicyPtrOutput() AzureIaaSVMProtectionPolicyPtrOutput {
	return o
}

func (o AzureIaaSVMProtectionPolicyPtrOutput) ToAzureIaaSVMProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureIaaSVMProtectionPolicyPtrOutput {
	return o
}

func (o AzureIaaSVMProtectionPolicyPtrOutput) Elem() AzureIaaSVMProtectionPolicyOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) AzureIaaSVMProtectionPolicy {
		if v != nil {
			return *v
		}
		var ret AzureIaaSVMProtectionPolicy
		return ret
	}).(AzureIaaSVMProtectionPolicyOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureIaasVM'.
func (o AzureIaaSVMProtectionPolicyPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

func (o AzureIaaSVMProtectionPolicyPtrOutput) InstantRPDetails() InstantRPAdditionalDetailsPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) *InstantRPAdditionalDetails {
		if v == nil {
			return nil
		}
		return v.InstantRPDetails
	}).(InstantRPAdditionalDetailsPtrOutput)
}

// Instant RP retention policy range in days
func (o AzureIaaSVMProtectionPolicyPtrOutput) InstantRpRetentionRangeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.InstantRpRetentionRangeInDays
	}).(pulumi.IntPtrOutput)
}

func (o AzureIaaSVMProtectionPolicyPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o AzureIaaSVMProtectionPolicyPtrOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.ProtectedItemsCount
	}).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureIaaSVMProtectionPolicyPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Retention policy with the details on backup copy retention ranges.
func (o AzureIaaSVMProtectionPolicyPtrOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.RetentionPolicy
	}).(pulumi.AnyOutput)
}

// Backup schedule specified as part of backup policy.
func (o AzureIaaSVMProtectionPolicyPtrOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.SchedulePolicy
	}).(pulumi.AnyOutput)
}

func (o AzureIaaSVMProtectionPolicyPtrOutput) SnapshotConsistencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotConsistencyType
	}).(pulumi.StringPtrOutput)
}

// Tiering policy to automatically move RPs to another tier
// Key is Target Tier, defined in RecoveryPointTierType enum.
// Tiering policy specifies the criteria to move RP to the target tier.
func (o AzureIaaSVMProtectionPolicyPtrOutput) TieringPolicy() TieringPolicyMapOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) map[string]TieringPolicy {
		if v == nil {
			return nil
		}
		return v.TieringPolicy
	}).(TieringPolicyMapOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o AzureIaaSVMProtectionPolicyPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureIaaSVMProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific backup policy.
type AzureIaaSVMProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureIaasVM'.
	BackupManagementType string                              `pulumi:"backupManagementType"`
	InstantRPDetails     *InstantRPAdditionalDetailsResponse `pulumi:"instantRPDetails"`
	// Instant RP retention policy range in days
	InstantRpRetentionRangeInDays *int    `pulumi:"instantRpRetentionRangeInDays"`
	PolicyType                    *string `pulumi:"policyType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy          interface{} `pulumi:"schedulePolicy"`
	SnapshotConsistencyType *string     `pulumi:"snapshotConsistencyType"`
	// Tiering policy to automatically move RPs to another tier
	// Key is Target Tier, defined in RecoveryPointTierType enum.
	// Tiering policy specifies the criteria to move RP to the target tier.
	TieringPolicy map[string]TieringPolicyResponse `pulumi:"tieringPolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// IaaS VM workload-specific backup policy.
type AzureIaaSVMProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (AzureIaaSVMProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureIaaSVMProtectionPolicyResponse)(nil)).Elem()
}

func (o AzureIaaSVMProtectionPolicyResponseOutput) ToAzureIaaSVMProtectionPolicyResponseOutput() AzureIaaSVMProtectionPolicyResponseOutput {
	return o
}

func (o AzureIaaSVMProtectionPolicyResponseOutput) ToAzureIaaSVMProtectionPolicyResponseOutputWithContext(ctx context.Context) AzureIaaSVMProtectionPolicyResponseOutput {
	return o
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureIaasVM'.
func (o AzureIaaSVMProtectionPolicyResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

func (o AzureIaaSVMProtectionPolicyResponseOutput) InstantRPDetails() InstantRPAdditionalDetailsResponsePtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) *InstantRPAdditionalDetailsResponse {
		return v.InstantRPDetails
	}).(InstantRPAdditionalDetailsResponsePtrOutput)
}

// Instant RP retention policy range in days
func (o AzureIaaSVMProtectionPolicyResponseOutput) InstantRpRetentionRangeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) *int { return v.InstantRpRetentionRangeInDays }).(pulumi.IntPtrOutput)
}

func (o AzureIaaSVMProtectionPolicyResponseOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o AzureIaaSVMProtectionPolicyResponseOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureIaaSVMProtectionPolicyResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Retention policy with the details on backup copy retention ranges.
func (o AzureIaaSVMProtectionPolicyResponseOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Backup schedule specified as part of backup policy.
func (o AzureIaaSVMProtectionPolicyResponseOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

func (o AzureIaaSVMProtectionPolicyResponseOutput) SnapshotConsistencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) *string { return v.SnapshotConsistencyType }).(pulumi.StringPtrOutput)
}

// Tiering policy to automatically move RPs to another tier
// Key is Target Tier, defined in RecoveryPointTierType enum.
// Tiering policy specifies the criteria to move RP to the target tier.
func (o AzureIaaSVMProtectionPolicyResponseOutput) TieringPolicy() TieringPolicyResponseMapOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) map[string]TieringPolicyResponse { return v.TieringPolicy }).(TieringPolicyResponseMapOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o AzureIaaSVMProtectionPolicyResponseOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureIaaSVMProtectionPolicyResponse) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Settings for Azure Monitor based alerts
type AzureMonitorAlertSettings struct {
	AlertsForAllJobFailures *string `pulumi:"alertsForAllJobFailures"`
}

// AzureMonitorAlertSettingsInput is an input type that accepts AzureMonitorAlertSettingsArgs and AzureMonitorAlertSettingsOutput values.
// You can construct a concrete instance of `AzureMonitorAlertSettingsInput` via:
//
//	AzureMonitorAlertSettingsArgs{...}
type AzureMonitorAlertSettingsInput interface {
	pulumi.Input

	ToAzureMonitorAlertSettingsOutput() AzureMonitorAlertSettingsOutput
	ToAzureMonitorAlertSettingsOutputWithContext(context.Context) AzureMonitorAlertSettingsOutput
}

// Settings for Azure Monitor based alerts
type AzureMonitorAlertSettingsArgs struct {
	AlertsForAllJobFailures pulumi.StringPtrInput `pulumi:"alertsForAllJobFailures"`
}

func (AzureMonitorAlertSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMonitorAlertSettings)(nil)).Elem()
}

func (i AzureMonitorAlertSettingsArgs) ToAzureMonitorAlertSettingsOutput() AzureMonitorAlertSettingsOutput {
	return i.ToAzureMonitorAlertSettingsOutputWithContext(context.Background())
}

func (i AzureMonitorAlertSettingsArgs) ToAzureMonitorAlertSettingsOutputWithContext(ctx context.Context) AzureMonitorAlertSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMonitorAlertSettingsOutput)
}

func (i AzureMonitorAlertSettingsArgs) ToAzureMonitorAlertSettingsPtrOutput() AzureMonitorAlertSettingsPtrOutput {
	return i.ToAzureMonitorAlertSettingsPtrOutputWithContext(context.Background())
}

func (i AzureMonitorAlertSettingsArgs) ToAzureMonitorAlertSettingsPtrOutputWithContext(ctx context.Context) AzureMonitorAlertSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMonitorAlertSettingsOutput).ToAzureMonitorAlertSettingsPtrOutputWithContext(ctx)
}

// AzureMonitorAlertSettingsPtrInput is an input type that accepts AzureMonitorAlertSettingsArgs, AzureMonitorAlertSettingsPtr and AzureMonitorAlertSettingsPtrOutput values.
// You can construct a concrete instance of `AzureMonitorAlertSettingsPtrInput` via:
//
//	        AzureMonitorAlertSettingsArgs{...}
//
//	or:
//
//	        nil
type AzureMonitorAlertSettingsPtrInput interface {
	pulumi.Input

	ToAzureMonitorAlertSettingsPtrOutput() AzureMonitorAlertSettingsPtrOutput
	ToAzureMonitorAlertSettingsPtrOutputWithContext(context.Context) AzureMonitorAlertSettingsPtrOutput
}

type azureMonitorAlertSettingsPtrType AzureMonitorAlertSettingsArgs

func AzureMonitorAlertSettingsPtr(v *AzureMonitorAlertSettingsArgs) AzureMonitorAlertSettingsPtrInput {
	return (*azureMonitorAlertSettingsPtrType)(v)
}

func (*azureMonitorAlertSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMonitorAlertSettings)(nil)).Elem()
}

func (i *azureMonitorAlertSettingsPtrType) ToAzureMonitorAlertSettingsPtrOutput() AzureMonitorAlertSettingsPtrOutput {
	return i.ToAzureMonitorAlertSettingsPtrOutputWithContext(context.Background())
}

func (i *azureMonitorAlertSettingsPtrType) ToAzureMonitorAlertSettingsPtrOutputWithContext(ctx context.Context) AzureMonitorAlertSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMonitorAlertSettingsPtrOutput)
}

// Settings for Azure Monitor based alerts
type AzureMonitorAlertSettingsOutput struct{ *pulumi.OutputState }

func (AzureMonitorAlertSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMonitorAlertSettings)(nil)).Elem()
}

func (o AzureMonitorAlertSettingsOutput) ToAzureMonitorAlertSettingsOutput() AzureMonitorAlertSettingsOutput {
	return o
}

func (o AzureMonitorAlertSettingsOutput) ToAzureMonitorAlertSettingsOutputWithContext(ctx context.Context) AzureMonitorAlertSettingsOutput {
	return o
}

func (o AzureMonitorAlertSettingsOutput) ToAzureMonitorAlertSettingsPtrOutput() AzureMonitorAlertSettingsPtrOutput {
	return o.ToAzureMonitorAlertSettingsPtrOutputWithContext(context.Background())
}

func (o AzureMonitorAlertSettingsOutput) ToAzureMonitorAlertSettingsPtrOutputWithContext(ctx context.Context) AzureMonitorAlertSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureMonitorAlertSettings) *AzureMonitorAlertSettings {
		return &v
	}).(AzureMonitorAlertSettingsPtrOutput)
}

func (o AzureMonitorAlertSettingsOutput) AlertsForAllJobFailures() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMonitorAlertSettings) *string { return v.AlertsForAllJobFailures }).(pulumi.StringPtrOutput)
}

type AzureMonitorAlertSettingsPtrOutput struct{ *pulumi.OutputState }

func (AzureMonitorAlertSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMonitorAlertSettings)(nil)).Elem()
}

func (o AzureMonitorAlertSettingsPtrOutput) ToAzureMonitorAlertSettingsPtrOutput() AzureMonitorAlertSettingsPtrOutput {
	return o
}

func (o AzureMonitorAlertSettingsPtrOutput) ToAzureMonitorAlertSettingsPtrOutputWithContext(ctx context.Context) AzureMonitorAlertSettingsPtrOutput {
	return o
}

func (o AzureMonitorAlertSettingsPtrOutput) Elem() AzureMonitorAlertSettingsOutput {
	return o.ApplyT(func(v *AzureMonitorAlertSettings) AzureMonitorAlertSettings {
		if v != nil {
			return *v
		}
		var ret AzureMonitorAlertSettings
		return ret
	}).(AzureMonitorAlertSettingsOutput)
}

func (o AzureMonitorAlertSettingsPtrOutput) AlertsForAllJobFailures() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMonitorAlertSettings) *string {
		if v == nil {
			return nil
		}
		return v.AlertsForAllJobFailures
	}).(pulumi.StringPtrOutput)
}

// Settings for Azure Monitor based alerts
type AzureMonitorAlertSettingsResponse struct {
	AlertsForAllJobFailures *string `pulumi:"alertsForAllJobFailures"`
}

// Settings for Azure Monitor based alerts
type AzureMonitorAlertSettingsResponseOutput struct{ *pulumi.OutputState }

func (AzureMonitorAlertSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMonitorAlertSettingsResponse)(nil)).Elem()
}

func (o AzureMonitorAlertSettingsResponseOutput) ToAzureMonitorAlertSettingsResponseOutput() AzureMonitorAlertSettingsResponseOutput {
	return o
}

func (o AzureMonitorAlertSettingsResponseOutput) ToAzureMonitorAlertSettingsResponseOutputWithContext(ctx context.Context) AzureMonitorAlertSettingsResponseOutput {
	return o
}

func (o AzureMonitorAlertSettingsResponseOutput) AlertsForAllJobFailures() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMonitorAlertSettingsResponse) *string { return v.AlertsForAllJobFailures }).(pulumi.StringPtrOutput)
}

type AzureMonitorAlertSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureMonitorAlertSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMonitorAlertSettingsResponse)(nil)).Elem()
}

func (o AzureMonitorAlertSettingsResponsePtrOutput) ToAzureMonitorAlertSettingsResponsePtrOutput() AzureMonitorAlertSettingsResponsePtrOutput {
	return o
}

func (o AzureMonitorAlertSettingsResponsePtrOutput) ToAzureMonitorAlertSettingsResponsePtrOutputWithContext(ctx context.Context) AzureMonitorAlertSettingsResponsePtrOutput {
	return o
}

func (o AzureMonitorAlertSettingsResponsePtrOutput) Elem() AzureMonitorAlertSettingsResponseOutput {
	return o.ApplyT(func(v *AzureMonitorAlertSettingsResponse) AzureMonitorAlertSettingsResponse {
		if v != nil {
			return *v
		}
		var ret AzureMonitorAlertSettingsResponse
		return ret
	}).(AzureMonitorAlertSettingsResponseOutput)
}

func (o AzureMonitorAlertSettingsResponsePtrOutput) AlertsForAllJobFailures() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMonitorAlertSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlertsForAllJobFailures
	}).(pulumi.StringPtrOutput)
}

// Azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'RecoveryServiceVaultItem'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureRecoveryServiceVaultProtectionIntentInput is an input type that accepts AzureRecoveryServiceVaultProtectionIntentArgs and AzureRecoveryServiceVaultProtectionIntentOutput values.
// You can construct a concrete instance of `AzureRecoveryServiceVaultProtectionIntentInput` via:
//
//	AzureRecoveryServiceVaultProtectionIntentArgs{...}
type AzureRecoveryServiceVaultProtectionIntentInput interface {
	pulumi.Input

	ToAzureRecoveryServiceVaultProtectionIntentOutput() AzureRecoveryServiceVaultProtectionIntentOutput
	ToAzureRecoveryServiceVaultProtectionIntentOutputWithContext(context.Context) AzureRecoveryServiceVaultProtectionIntentOutput
}

// Azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntentArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId pulumi.StringPtrInput `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'RecoveryServiceVaultItem'.
	ProtectionIntentItemType pulumi.StringInput `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureRecoveryServiceVaultProtectionIntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureRecoveryServiceVaultProtectionIntent)(nil)).Elem()
}

func (i AzureRecoveryServiceVaultProtectionIntentArgs) ToAzureRecoveryServiceVaultProtectionIntentOutput() AzureRecoveryServiceVaultProtectionIntentOutput {
	return i.ToAzureRecoveryServiceVaultProtectionIntentOutputWithContext(context.Background())
}

func (i AzureRecoveryServiceVaultProtectionIntentArgs) ToAzureRecoveryServiceVaultProtectionIntentOutputWithContext(ctx context.Context) AzureRecoveryServiceVaultProtectionIntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureRecoveryServiceVaultProtectionIntentOutput)
}

func (i AzureRecoveryServiceVaultProtectionIntentArgs) ToAzureRecoveryServiceVaultProtectionIntentPtrOutput() AzureRecoveryServiceVaultProtectionIntentPtrOutput {
	return i.ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(context.Background())
}

func (i AzureRecoveryServiceVaultProtectionIntentArgs) ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(ctx context.Context) AzureRecoveryServiceVaultProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureRecoveryServiceVaultProtectionIntentOutput).ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(ctx)
}

// AzureRecoveryServiceVaultProtectionIntentPtrInput is an input type that accepts AzureRecoveryServiceVaultProtectionIntentArgs, AzureRecoveryServiceVaultProtectionIntentPtr and AzureRecoveryServiceVaultProtectionIntentPtrOutput values.
// You can construct a concrete instance of `AzureRecoveryServiceVaultProtectionIntentPtrInput` via:
//
//	        AzureRecoveryServiceVaultProtectionIntentArgs{...}
//
//	or:
//
//	        nil
type AzureRecoveryServiceVaultProtectionIntentPtrInput interface {
	pulumi.Input

	ToAzureRecoveryServiceVaultProtectionIntentPtrOutput() AzureRecoveryServiceVaultProtectionIntentPtrOutput
	ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(context.Context) AzureRecoveryServiceVaultProtectionIntentPtrOutput
}

type azureRecoveryServiceVaultProtectionIntentPtrType AzureRecoveryServiceVaultProtectionIntentArgs

func AzureRecoveryServiceVaultProtectionIntentPtr(v *AzureRecoveryServiceVaultProtectionIntentArgs) AzureRecoveryServiceVaultProtectionIntentPtrInput {
	return (*azureRecoveryServiceVaultProtectionIntentPtrType)(v)
}

func (*azureRecoveryServiceVaultProtectionIntentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureRecoveryServiceVaultProtectionIntent)(nil)).Elem()
}

func (i *azureRecoveryServiceVaultProtectionIntentPtrType) ToAzureRecoveryServiceVaultProtectionIntentPtrOutput() AzureRecoveryServiceVaultProtectionIntentPtrOutput {
	return i.ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(context.Background())
}

func (i *azureRecoveryServiceVaultProtectionIntentPtrType) ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(ctx context.Context) AzureRecoveryServiceVaultProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureRecoveryServiceVaultProtectionIntentPtrOutput)
}

// Azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntentOutput struct{ *pulumi.OutputState }

func (AzureRecoveryServiceVaultProtectionIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureRecoveryServiceVaultProtectionIntent)(nil)).Elem()
}

func (o AzureRecoveryServiceVaultProtectionIntentOutput) ToAzureRecoveryServiceVaultProtectionIntentOutput() AzureRecoveryServiceVaultProtectionIntentOutput {
	return o
}

func (o AzureRecoveryServiceVaultProtectionIntentOutput) ToAzureRecoveryServiceVaultProtectionIntentOutputWithContext(ctx context.Context) AzureRecoveryServiceVaultProtectionIntentOutput {
	return o
}

func (o AzureRecoveryServiceVaultProtectionIntentOutput) ToAzureRecoveryServiceVaultProtectionIntentPtrOutput() AzureRecoveryServiceVaultProtectionIntentPtrOutput {
	return o.ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(context.Background())
}

func (o AzureRecoveryServiceVaultProtectionIntentOutput) ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(ctx context.Context) AzureRecoveryServiceVaultProtectionIntentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureRecoveryServiceVaultProtectionIntent) *AzureRecoveryServiceVaultProtectionIntent {
		return &v
	}).(AzureRecoveryServiceVaultProtectionIntentPtrOutput)
}

// Type of backup management for the backed up item.
func (o AzureRecoveryServiceVaultProtectionIntentOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntent) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureRecoveryServiceVaultProtectionIntentOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntent) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureRecoveryServiceVaultProtectionIntentOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntent) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'RecoveryServiceVaultItem'.
func (o AzureRecoveryServiceVaultProtectionIntentOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntent) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureRecoveryServiceVaultProtectionIntentOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntent) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureRecoveryServiceVaultProtectionIntentOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntent) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureRecoveryServiceVaultProtectionIntentPtrOutput struct{ *pulumi.OutputState }

func (AzureRecoveryServiceVaultProtectionIntentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureRecoveryServiceVaultProtectionIntent)(nil)).Elem()
}

func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) ToAzureRecoveryServiceVaultProtectionIntentPtrOutput() AzureRecoveryServiceVaultProtectionIntentPtrOutput {
	return o
}

func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) ToAzureRecoveryServiceVaultProtectionIntentPtrOutputWithContext(ctx context.Context) AzureRecoveryServiceVaultProtectionIntentPtrOutput {
	return o
}

func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) Elem() AzureRecoveryServiceVaultProtectionIntentOutput {
	return o.ApplyT(func(v *AzureRecoveryServiceVaultProtectionIntent) AzureRecoveryServiceVaultProtectionIntent {
		if v != nil {
			return *v
		}
		var ret AzureRecoveryServiceVaultProtectionIntent
		return ret
	}).(AzureRecoveryServiceVaultProtectionIntentOutput)
}

// Type of backup management for the backed up item.
func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureRecoveryServiceVaultProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureRecoveryServiceVaultProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ItemId
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureRecoveryServiceVaultProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'RecoveryServiceVaultItem'.
func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) ProtectionIntentItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureRecoveryServiceVaultProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectionIntentItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureRecoveryServiceVaultProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureRecoveryServiceVaultProtectionIntentPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureRecoveryServiceVaultProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'RecoveryServiceVaultItem'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// Azure Recovery Services Vault specific protection intent item.
type AzureRecoveryServiceVaultProtectionIntentResponseOutput struct{ *pulumi.OutputState }

func (AzureRecoveryServiceVaultProtectionIntentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureRecoveryServiceVaultProtectionIntentResponse)(nil)).Elem()
}

func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) ToAzureRecoveryServiceVaultProtectionIntentResponseOutput() AzureRecoveryServiceVaultProtectionIntentResponseOutput {
	return o
}

func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) ToAzureRecoveryServiceVaultProtectionIntentResponseOutputWithContext(ctx context.Context) AzureRecoveryServiceVaultProtectionIntentResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'RecoveryServiceVaultItem'.
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureRecoveryServiceVaultProtectionIntentResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureRecoveryServiceVaultProtectionIntentResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// IaaS VM specific backup protection intent item.
type AzureResourceProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureResourceItem'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureResourceProtectionIntentInput is an input type that accepts AzureResourceProtectionIntentArgs and AzureResourceProtectionIntentOutput values.
// You can construct a concrete instance of `AzureResourceProtectionIntentInput` via:
//
//	AzureResourceProtectionIntentArgs{...}
type AzureResourceProtectionIntentInput interface {
	pulumi.Input

	ToAzureResourceProtectionIntentOutput() AzureResourceProtectionIntentOutput
	ToAzureResourceProtectionIntentOutputWithContext(context.Context) AzureResourceProtectionIntentOutput
}

// IaaS VM specific backup protection intent item.
type AzureResourceProtectionIntentArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId pulumi.StringPtrInput `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureResourceItem'.
	ProtectionIntentItemType pulumi.StringInput `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureResourceProtectionIntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceProtectionIntent)(nil)).Elem()
}

func (i AzureResourceProtectionIntentArgs) ToAzureResourceProtectionIntentOutput() AzureResourceProtectionIntentOutput {
	return i.ToAzureResourceProtectionIntentOutputWithContext(context.Background())
}

func (i AzureResourceProtectionIntentArgs) ToAzureResourceProtectionIntentOutputWithContext(ctx context.Context) AzureResourceProtectionIntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureResourceProtectionIntentOutput)
}

func (i AzureResourceProtectionIntentArgs) ToAzureResourceProtectionIntentPtrOutput() AzureResourceProtectionIntentPtrOutput {
	return i.ToAzureResourceProtectionIntentPtrOutputWithContext(context.Background())
}

func (i AzureResourceProtectionIntentArgs) ToAzureResourceProtectionIntentPtrOutputWithContext(ctx context.Context) AzureResourceProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureResourceProtectionIntentOutput).ToAzureResourceProtectionIntentPtrOutputWithContext(ctx)
}

// AzureResourceProtectionIntentPtrInput is an input type that accepts AzureResourceProtectionIntentArgs, AzureResourceProtectionIntentPtr and AzureResourceProtectionIntentPtrOutput values.
// You can construct a concrete instance of `AzureResourceProtectionIntentPtrInput` via:
//
//	        AzureResourceProtectionIntentArgs{...}
//
//	or:
//
//	        nil
type AzureResourceProtectionIntentPtrInput interface {
	pulumi.Input

	ToAzureResourceProtectionIntentPtrOutput() AzureResourceProtectionIntentPtrOutput
	ToAzureResourceProtectionIntentPtrOutputWithContext(context.Context) AzureResourceProtectionIntentPtrOutput
}

type azureResourceProtectionIntentPtrType AzureResourceProtectionIntentArgs

func AzureResourceProtectionIntentPtr(v *AzureResourceProtectionIntentArgs) AzureResourceProtectionIntentPtrInput {
	return (*azureResourceProtectionIntentPtrType)(v)
}

func (*azureResourceProtectionIntentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureResourceProtectionIntent)(nil)).Elem()
}

func (i *azureResourceProtectionIntentPtrType) ToAzureResourceProtectionIntentPtrOutput() AzureResourceProtectionIntentPtrOutput {
	return i.ToAzureResourceProtectionIntentPtrOutputWithContext(context.Background())
}

func (i *azureResourceProtectionIntentPtrType) ToAzureResourceProtectionIntentPtrOutputWithContext(ctx context.Context) AzureResourceProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureResourceProtectionIntentPtrOutput)
}

// IaaS VM specific backup protection intent item.
type AzureResourceProtectionIntentOutput struct{ *pulumi.OutputState }

func (AzureResourceProtectionIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceProtectionIntent)(nil)).Elem()
}

func (o AzureResourceProtectionIntentOutput) ToAzureResourceProtectionIntentOutput() AzureResourceProtectionIntentOutput {
	return o
}

func (o AzureResourceProtectionIntentOutput) ToAzureResourceProtectionIntentOutputWithContext(ctx context.Context) AzureResourceProtectionIntentOutput {
	return o
}

func (o AzureResourceProtectionIntentOutput) ToAzureResourceProtectionIntentPtrOutput() AzureResourceProtectionIntentPtrOutput {
	return o.ToAzureResourceProtectionIntentPtrOutputWithContext(context.Background())
}

func (o AzureResourceProtectionIntentOutput) ToAzureResourceProtectionIntentPtrOutputWithContext(ctx context.Context) AzureResourceProtectionIntentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureResourceProtectionIntent) *AzureResourceProtectionIntent {
		return &v
	}).(AzureResourceProtectionIntentPtrOutput)
}

// Type of backup management for the backed up item.
func (o AzureResourceProtectionIntentOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntent) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Friendly name of the VM represented by this backup item.
func (o AzureResourceProtectionIntentOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntent) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureResourceProtectionIntentOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntent) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureResourceProtectionIntentOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntent) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureResourceItem'.
func (o AzureResourceProtectionIntentOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntent) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureResourceProtectionIntentOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntent) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureResourceProtectionIntentOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntent) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureResourceProtectionIntentPtrOutput struct{ *pulumi.OutputState }

func (AzureResourceProtectionIntentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureResourceProtectionIntent)(nil)).Elem()
}

func (o AzureResourceProtectionIntentPtrOutput) ToAzureResourceProtectionIntentPtrOutput() AzureResourceProtectionIntentPtrOutput {
	return o
}

func (o AzureResourceProtectionIntentPtrOutput) ToAzureResourceProtectionIntentPtrOutputWithContext(ctx context.Context) AzureResourceProtectionIntentPtrOutput {
	return o
}

func (o AzureResourceProtectionIntentPtrOutput) Elem() AzureResourceProtectionIntentOutput {
	return o.ApplyT(func(v *AzureResourceProtectionIntent) AzureResourceProtectionIntent {
		if v != nil {
			return *v
		}
		var ret AzureResourceProtectionIntent
		return ret
	}).(AzureResourceProtectionIntentOutput)
}

// Type of backup management for the backed up item.
func (o AzureResourceProtectionIntentPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the VM represented by this backup item.
func (o AzureResourceProtectionIntentPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureResourceProtectionIntentPtrOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ItemId
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureResourceProtectionIntentPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureResourceItem'.
func (o AzureResourceProtectionIntentPtrOutput) ProtectionIntentItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectionIntentItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureResourceProtectionIntentPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureResourceProtectionIntentPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// IaaS VM specific backup protection intent item.
type AzureResourceProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Friendly name of the VM represented by this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureResourceItem'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// IaaS VM specific backup protection intent item.
type AzureResourceProtectionIntentResponseOutput struct{ *pulumi.OutputState }

func (AzureResourceProtectionIntentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceProtectionIntentResponse)(nil)).Elem()
}

func (o AzureResourceProtectionIntentResponseOutput) ToAzureResourceProtectionIntentResponseOutput() AzureResourceProtectionIntentResponseOutput {
	return o
}

func (o AzureResourceProtectionIntentResponseOutput) ToAzureResourceProtectionIntentResponseOutputWithContext(ctx context.Context) AzureResourceProtectionIntentResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureResourceProtectionIntentResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Friendly name of the VM represented by this backup item.
func (o AzureResourceProtectionIntentResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureResourceProtectionIntentResponseOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureResourceProtectionIntentResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureResourceItem'.
func (o AzureResourceProtectionIntentResponseOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureResourceProtectionIntentResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureResourceProtectionIntentResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureResourceProtectionIntentResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Container for SQL workloads under SQL Availability Group.
type AzureSQLAGWorkloadContainerProtectionContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'SQLAGWorkLoadContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// AzureSQLAGWorkloadContainerProtectionContainerInput is an input type that accepts AzureSQLAGWorkloadContainerProtectionContainerArgs and AzureSQLAGWorkloadContainerProtectionContainerOutput values.
// You can construct a concrete instance of `AzureSQLAGWorkloadContainerProtectionContainerInput` via:
//
//	AzureSQLAGWorkloadContainerProtectionContainerArgs{...}
type AzureSQLAGWorkloadContainerProtectionContainerInput interface {
	pulumi.Input

	ToAzureSQLAGWorkloadContainerProtectionContainerOutput() AzureSQLAGWorkloadContainerProtectionContainerOutput
	ToAzureSQLAGWorkloadContainerProtectionContainerOutputWithContext(context.Context) AzureSQLAGWorkloadContainerProtectionContainerOutput
}

// Container for SQL workloads under SQL Availability Group.
type AzureSQLAGWorkloadContainerProtectionContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'SQLAGWorkLoadContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo AzureWorkloadContainerExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime pulumi.StringPtrInput `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType pulumi.StringPtrInput `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (AzureSQLAGWorkloadContainerProtectionContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSQLAGWorkloadContainerProtectionContainer)(nil)).Elem()
}

func (i AzureSQLAGWorkloadContainerProtectionContainerArgs) ToAzureSQLAGWorkloadContainerProtectionContainerOutput() AzureSQLAGWorkloadContainerProtectionContainerOutput {
	return i.ToAzureSQLAGWorkloadContainerProtectionContainerOutputWithContext(context.Background())
}

func (i AzureSQLAGWorkloadContainerProtectionContainerArgs) ToAzureSQLAGWorkloadContainerProtectionContainerOutputWithContext(ctx context.Context) AzureSQLAGWorkloadContainerProtectionContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSQLAGWorkloadContainerProtectionContainerOutput)
}

func (i AzureSQLAGWorkloadContainerProtectionContainerArgs) ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutput() AzureSQLAGWorkloadContainerProtectionContainerPtrOutput {
	return i.ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(context.Background())
}

func (i AzureSQLAGWorkloadContainerProtectionContainerArgs) ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(ctx context.Context) AzureSQLAGWorkloadContainerProtectionContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSQLAGWorkloadContainerProtectionContainerOutput).ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(ctx)
}

// AzureSQLAGWorkloadContainerProtectionContainerPtrInput is an input type that accepts AzureSQLAGWorkloadContainerProtectionContainerArgs, AzureSQLAGWorkloadContainerProtectionContainerPtr and AzureSQLAGWorkloadContainerProtectionContainerPtrOutput values.
// You can construct a concrete instance of `AzureSQLAGWorkloadContainerProtectionContainerPtrInput` via:
//
//	        AzureSQLAGWorkloadContainerProtectionContainerArgs{...}
//
//	or:
//
//	        nil
type AzureSQLAGWorkloadContainerProtectionContainerPtrInput interface {
	pulumi.Input

	ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutput() AzureSQLAGWorkloadContainerProtectionContainerPtrOutput
	ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(context.Context) AzureSQLAGWorkloadContainerProtectionContainerPtrOutput
}

type azureSQLAGWorkloadContainerProtectionContainerPtrType AzureSQLAGWorkloadContainerProtectionContainerArgs

func AzureSQLAGWorkloadContainerProtectionContainerPtr(v *AzureSQLAGWorkloadContainerProtectionContainerArgs) AzureSQLAGWorkloadContainerProtectionContainerPtrInput {
	return (*azureSQLAGWorkloadContainerProtectionContainerPtrType)(v)
}

func (*azureSQLAGWorkloadContainerProtectionContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSQLAGWorkloadContainerProtectionContainer)(nil)).Elem()
}

func (i *azureSQLAGWorkloadContainerProtectionContainerPtrType) ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutput() AzureSQLAGWorkloadContainerProtectionContainerPtrOutput {
	return i.ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(context.Background())
}

func (i *azureSQLAGWorkloadContainerProtectionContainerPtrType) ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(ctx context.Context) AzureSQLAGWorkloadContainerProtectionContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSQLAGWorkloadContainerProtectionContainerPtrOutput)
}

// Container for SQL workloads under SQL Availability Group.
type AzureSQLAGWorkloadContainerProtectionContainerOutput struct{ *pulumi.OutputState }

func (AzureSQLAGWorkloadContainerProtectionContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSQLAGWorkloadContainerProtectionContainer)(nil)).Elem()
}

func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) ToAzureSQLAGWorkloadContainerProtectionContainerOutput() AzureSQLAGWorkloadContainerProtectionContainerOutput {
	return o
}

func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) ToAzureSQLAGWorkloadContainerProtectionContainerOutputWithContext(ctx context.Context) AzureSQLAGWorkloadContainerProtectionContainerOutput {
	return o
}

func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutput() AzureSQLAGWorkloadContainerProtectionContainerPtrOutput {
	return o.ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(context.Background())
}

func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(ctx context.Context) AzureSQLAGWorkloadContainerProtectionContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSQLAGWorkloadContainerProtectionContainer) *AzureSQLAGWorkloadContainerProtectionContainer {
		return &v
	}).(AzureSQLAGWorkloadContainerProtectionContainerPtrOutput)
}

// Type of backup management for the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'SQLAGWorkLoadContainer'.
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Additional details of a workload container.
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *AzureWorkloadContainerExtendedInfo {
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.OperationType }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureSQLAGWorkloadContainerProtectionContainerOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainer) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

type AzureSQLAGWorkloadContainerProtectionContainerPtrOutput struct{ *pulumi.OutputState }

func (AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSQLAGWorkloadContainerProtectionContainer)(nil)).Elem()
}

func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutput() AzureSQLAGWorkloadContainerProtectionContainerPtrOutput {
	return o
}

func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) ToAzureSQLAGWorkloadContainerProtectionContainerPtrOutputWithContext(ctx context.Context) AzureSQLAGWorkloadContainerProtectionContainerPtrOutput {
	return o
}

func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) Elem() AzureSQLAGWorkloadContainerProtectionContainerOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) AzureSQLAGWorkloadContainerProtectionContainer {
		if v != nil {
			return *v
		}
		var ret AzureSQLAGWorkloadContainerProtectionContainer
		return ret
	}).(AzureSQLAGWorkloadContainerProtectionContainerOutput)
}

// Type of backup management for the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'SQLAGWorkLoadContainer'.
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Additional details of a workload container.
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *AzureWorkloadContainerExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdatedTime
	}).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.OperationType
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureSQLAGWorkloadContainerProtectionContainerPtrOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSQLAGWorkloadContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadType
	}).(pulumi.StringPtrOutput)
}

// Container for SQL workloads under SQL Availability Group.
type AzureSQLAGWorkloadContainerProtectionContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'SQLAGWorkLoadContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// Container for SQL workloads under SQL Availability Group.
type AzureSQLAGWorkloadContainerProtectionContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSQLAGWorkloadContainerProtectionContainerResponse)(nil)).Elem()
}

func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) ToAzureSQLAGWorkloadContainerProtectionContainerResponseOutput() AzureSQLAGWorkloadContainerProtectionContainerResponseOutput {
	return o
}

func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) ToAzureSQLAGWorkloadContainerProtectionContainerResponseOutputWithContext(ctx context.Context) AzureSQLAGWorkloadContainerProtectionContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'SQLAGWorkLoadContainer'.
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Additional details of a workload container.
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *AzureWorkloadContainerExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoResponsePtrOutput)
}

// Friendly name of the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.OperationType }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureSQLAGWorkloadContainerProtectionContainerResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSQLAGWorkloadContainerProtectionContainerResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

// Azure Sql workload-specific container.
type AzureSqlContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureSqlContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// AzureSqlContainerInput is an input type that accepts AzureSqlContainerArgs and AzureSqlContainerOutput values.
// You can construct a concrete instance of `AzureSqlContainerInput` via:
//
//	AzureSqlContainerArgs{...}
type AzureSqlContainerInput interface {
	pulumi.Input

	ToAzureSqlContainerOutput() AzureSqlContainerOutput
	ToAzureSqlContainerOutputWithContext(context.Context) AzureSqlContainerOutput
}

// Azure Sql workload-specific container.
type AzureSqlContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureSqlContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
}

func (AzureSqlContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlContainer)(nil)).Elem()
}

func (i AzureSqlContainerArgs) ToAzureSqlContainerOutput() AzureSqlContainerOutput {
	return i.ToAzureSqlContainerOutputWithContext(context.Background())
}

func (i AzureSqlContainerArgs) ToAzureSqlContainerOutputWithContext(ctx context.Context) AzureSqlContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlContainerOutput)
}

func (i AzureSqlContainerArgs) ToAzureSqlContainerPtrOutput() AzureSqlContainerPtrOutput {
	return i.ToAzureSqlContainerPtrOutputWithContext(context.Background())
}

func (i AzureSqlContainerArgs) ToAzureSqlContainerPtrOutputWithContext(ctx context.Context) AzureSqlContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlContainerOutput).ToAzureSqlContainerPtrOutputWithContext(ctx)
}

// AzureSqlContainerPtrInput is an input type that accepts AzureSqlContainerArgs, AzureSqlContainerPtr and AzureSqlContainerPtrOutput values.
// You can construct a concrete instance of `AzureSqlContainerPtrInput` via:
//
//	        AzureSqlContainerArgs{...}
//
//	or:
//
//	        nil
type AzureSqlContainerPtrInput interface {
	pulumi.Input

	ToAzureSqlContainerPtrOutput() AzureSqlContainerPtrOutput
	ToAzureSqlContainerPtrOutputWithContext(context.Context) AzureSqlContainerPtrOutput
}

type azureSqlContainerPtrType AzureSqlContainerArgs

func AzureSqlContainerPtr(v *AzureSqlContainerArgs) AzureSqlContainerPtrInput {
	return (*azureSqlContainerPtrType)(v)
}

func (*azureSqlContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlContainer)(nil)).Elem()
}

func (i *azureSqlContainerPtrType) ToAzureSqlContainerPtrOutput() AzureSqlContainerPtrOutput {
	return i.ToAzureSqlContainerPtrOutputWithContext(context.Background())
}

func (i *azureSqlContainerPtrType) ToAzureSqlContainerPtrOutputWithContext(ctx context.Context) AzureSqlContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlContainerPtrOutput)
}

// Azure Sql workload-specific container.
type AzureSqlContainerOutput struct{ *pulumi.OutputState }

func (AzureSqlContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlContainer)(nil)).Elem()
}

func (o AzureSqlContainerOutput) ToAzureSqlContainerOutput() AzureSqlContainerOutput {
	return o
}

func (o AzureSqlContainerOutput) ToAzureSqlContainerOutputWithContext(ctx context.Context) AzureSqlContainerOutput {
	return o
}

func (o AzureSqlContainerOutput) ToAzureSqlContainerPtrOutput() AzureSqlContainerPtrOutput {
	return o.ToAzureSqlContainerPtrOutputWithContext(context.Background())
}

func (o AzureSqlContainerOutput) ToAzureSqlContainerPtrOutputWithContext(ctx context.Context) AzureSqlContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSqlContainer) *AzureSqlContainer {
		return &v
	}).(AzureSqlContainerPtrOutput)
}

// Type of backup management for the container.
func (o AzureSqlContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureSqlContainer'.
func (o AzureSqlContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o AzureSqlContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureSqlContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureSqlContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureSqlContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

type AzureSqlContainerPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlContainer)(nil)).Elem()
}

func (o AzureSqlContainerPtrOutput) ToAzureSqlContainerPtrOutput() AzureSqlContainerPtrOutput {
	return o
}

func (o AzureSqlContainerPtrOutput) ToAzureSqlContainerPtrOutputWithContext(ctx context.Context) AzureSqlContainerPtrOutput {
	return o
}

func (o AzureSqlContainerPtrOutput) Elem() AzureSqlContainerOutput {
	return o.ApplyT(func(v *AzureSqlContainer) AzureSqlContainer {
		if v != nil {
			return *v
		}
		var ret AzureSqlContainer
		return ret
	}).(AzureSqlContainerOutput)
}

// Type of backup management for the container.
func (o AzureSqlContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureSqlContainer'.
func (o AzureSqlContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o AzureSqlContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureSqlContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureSqlContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureSqlContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// Azure Sql workload-specific container.
type AzureSqlContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureSqlContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// Azure Sql workload-specific container.
type AzureSqlContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlContainerResponse)(nil)).Elem()
}

func (o AzureSqlContainerResponseOutput) ToAzureSqlContainerResponseOutput() AzureSqlContainerResponseOutput {
	return o
}

func (o AzureSqlContainerResponseOutput) ToAzureSqlContainerResponseOutputWithContext(ctx context.Context) AzureSqlContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureSqlContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureSqlContainer'.
func (o AzureSqlContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o AzureSqlContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureSqlContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureSqlContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureSqlContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Azure SQL workload-specific backup item.
type AzureSqlProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureSqlProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
	ProtectedItemDataId *string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'Microsoft.Sql/servers/databases'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of the backed up item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureSqlProtectedItemInput is an input type that accepts AzureSqlProtectedItemArgs and AzureSqlProtectedItemOutput values.
// You can construct a concrete instance of `AzureSqlProtectedItemInput` via:
//
//	AzureSqlProtectedItemArgs{...}
type AzureSqlProtectedItemInput interface {
	pulumi.Input

	ToAzureSqlProtectedItemOutput() AzureSqlProtectedItemOutput
	ToAzureSqlProtectedItemOutputWithContext(context.Context) AzureSqlProtectedItemOutput
}

// Azure SQL workload-specific backup item.
type AzureSqlProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureSqlProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
	ProtectedItemDataId pulumi.StringPtrInput `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'Microsoft.Sql/servers/databases'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of the backed up item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureSqlProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectedItem)(nil)).Elem()
}

func (i AzureSqlProtectedItemArgs) ToAzureSqlProtectedItemOutput() AzureSqlProtectedItemOutput {
	return i.ToAzureSqlProtectedItemOutputWithContext(context.Background())
}

func (i AzureSqlProtectedItemArgs) ToAzureSqlProtectedItemOutputWithContext(ctx context.Context) AzureSqlProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectedItemOutput)
}

func (i AzureSqlProtectedItemArgs) ToAzureSqlProtectedItemPtrOutput() AzureSqlProtectedItemPtrOutput {
	return i.ToAzureSqlProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureSqlProtectedItemArgs) ToAzureSqlProtectedItemPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectedItemOutput).ToAzureSqlProtectedItemPtrOutputWithContext(ctx)
}

// AzureSqlProtectedItemPtrInput is an input type that accepts AzureSqlProtectedItemArgs, AzureSqlProtectedItemPtr and AzureSqlProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureSqlProtectedItemPtrInput` via:
//
//	        AzureSqlProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureSqlProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureSqlProtectedItemPtrOutput() AzureSqlProtectedItemPtrOutput
	ToAzureSqlProtectedItemPtrOutputWithContext(context.Context) AzureSqlProtectedItemPtrOutput
}

type azureSqlProtectedItemPtrType AzureSqlProtectedItemArgs

func AzureSqlProtectedItemPtr(v *AzureSqlProtectedItemArgs) AzureSqlProtectedItemPtrInput {
	return (*azureSqlProtectedItemPtrType)(v)
}

func (*azureSqlProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlProtectedItem)(nil)).Elem()
}

func (i *azureSqlProtectedItemPtrType) ToAzureSqlProtectedItemPtrOutput() AzureSqlProtectedItemPtrOutput {
	return i.ToAzureSqlProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureSqlProtectedItemPtrType) ToAzureSqlProtectedItemPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectedItemPtrOutput)
}

// Azure SQL workload-specific backup item.
type AzureSqlProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectedItem)(nil)).Elem()
}

func (o AzureSqlProtectedItemOutput) ToAzureSqlProtectedItemOutput() AzureSqlProtectedItemOutput {
	return o
}

func (o AzureSqlProtectedItemOutput) ToAzureSqlProtectedItemOutputWithContext(ctx context.Context) AzureSqlProtectedItemOutput {
	return o
}

func (o AzureSqlProtectedItemOutput) ToAzureSqlProtectedItemPtrOutput() AzureSqlProtectedItemPtrOutput {
	return o.ToAzureSqlProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureSqlProtectedItemOutput) ToAzureSqlProtectedItemPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSqlProtectedItem) *AzureSqlProtectedItem {
		return &v
	}).(AzureSqlProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureSqlProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureSqlProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureSqlProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureSqlProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureSqlProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureSqlProtectedItemOutput) ExtendedInfo() AzureSqlProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *AzureSqlProtectedItemExtendedInfo { return v.ExtendedInfo }).(AzureSqlProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureSqlProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureSqlProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureSqlProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureSqlProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureSqlProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureSqlProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureSqlProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
func (o AzureSqlProtectedItemOutput) ProtectedItemDataId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.ProtectedItemDataId }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'Microsoft.Sql/servers/databases'.
func (o AzureSqlProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of the backed up item.
func (o AzureSqlProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureSqlProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureSqlProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureSqlProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureSqlProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlProtectedItem)(nil)).Elem()
}

func (o AzureSqlProtectedItemPtrOutput) ToAzureSqlProtectedItemPtrOutput() AzureSqlProtectedItemPtrOutput {
	return o
}

func (o AzureSqlProtectedItemPtrOutput) ToAzureSqlProtectedItemPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemPtrOutput {
	return o
}

func (o AzureSqlProtectedItemPtrOutput) Elem() AzureSqlProtectedItemOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) AzureSqlProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureSqlProtectedItem
		return ret
	}).(AzureSqlProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureSqlProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureSqlProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureSqlProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureSqlProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureSqlProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureSqlProtectedItemPtrOutput) ExtendedInfo() AzureSqlProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *AzureSqlProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureSqlProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureSqlProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureSqlProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureSqlProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureSqlProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureSqlProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureSqlProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureSqlProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
func (o AzureSqlProtectedItemPtrOutput) ProtectedItemDataId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemDataId
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'Microsoft.Sql/servers/databases'.
func (o AzureSqlProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of the backed up item.
func (o AzureSqlProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureSqlProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureSqlProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureSqlProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Additional information on Azure Sql specific protected item.
type AzureSqlProtectedItemExtendedInfo struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// State of the backup policy associated with this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// AzureSqlProtectedItemExtendedInfoInput is an input type that accepts AzureSqlProtectedItemExtendedInfoArgs and AzureSqlProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `AzureSqlProtectedItemExtendedInfoInput` via:
//
//	AzureSqlProtectedItemExtendedInfoArgs{...}
type AzureSqlProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToAzureSqlProtectedItemExtendedInfoOutput() AzureSqlProtectedItemExtendedInfoOutput
	ToAzureSqlProtectedItemExtendedInfoOutputWithContext(context.Context) AzureSqlProtectedItemExtendedInfoOutput
}

// Additional information on Azure Sql specific protected item.
type AzureSqlProtectedItemExtendedInfoArgs struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// State of the backup policy associated with this backup item.
	PolicyState pulumi.StringPtrInput `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
}

func (AzureSqlProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectedItemExtendedInfo)(nil)).Elem()
}

func (i AzureSqlProtectedItemExtendedInfoArgs) ToAzureSqlProtectedItemExtendedInfoOutput() AzureSqlProtectedItemExtendedInfoOutput {
	return i.ToAzureSqlProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i AzureSqlProtectedItemExtendedInfoArgs) ToAzureSqlProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectedItemExtendedInfoOutput)
}

func (i AzureSqlProtectedItemExtendedInfoArgs) ToAzureSqlProtectedItemExtendedInfoPtrOutput() AzureSqlProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i AzureSqlProtectedItemExtendedInfoArgs) ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectedItemExtendedInfoOutput).ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// AzureSqlProtectedItemExtendedInfoPtrInput is an input type that accepts AzureSqlProtectedItemExtendedInfoArgs, AzureSqlProtectedItemExtendedInfoPtr and AzureSqlProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `AzureSqlProtectedItemExtendedInfoPtrInput` via:
//
//	        AzureSqlProtectedItemExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type AzureSqlProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToAzureSqlProtectedItemExtendedInfoPtrOutput() AzureSqlProtectedItemExtendedInfoPtrOutput
	ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(context.Context) AzureSqlProtectedItemExtendedInfoPtrOutput
}

type azureSqlProtectedItemExtendedInfoPtrType AzureSqlProtectedItemExtendedInfoArgs

func AzureSqlProtectedItemExtendedInfoPtr(v *AzureSqlProtectedItemExtendedInfoArgs) AzureSqlProtectedItemExtendedInfoPtrInput {
	return (*azureSqlProtectedItemExtendedInfoPtrType)(v)
}

func (*azureSqlProtectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *azureSqlProtectedItemExtendedInfoPtrType) ToAzureSqlProtectedItemExtendedInfoPtrOutput() AzureSqlProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *azureSqlProtectedItemExtendedInfoPtrType) ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectedItemExtendedInfoPtrOutput)
}

// Additional information on Azure Sql specific protected item.
type AzureSqlProtectedItemExtendedInfoOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectedItemExtendedInfo)(nil)).Elem()
}

func (o AzureSqlProtectedItemExtendedInfoOutput) ToAzureSqlProtectedItemExtendedInfoOutput() AzureSqlProtectedItemExtendedInfoOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoOutput) ToAzureSqlProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoOutput) ToAzureSqlProtectedItemExtendedInfoPtrOutput() AzureSqlProtectedItemExtendedInfoPtrOutput {
	return o.ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (o AzureSqlProtectedItemExtendedInfoOutput) ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSqlProtectedItemExtendedInfo) *AzureSqlProtectedItemExtendedInfo {
		return &v
	}).(AzureSqlProtectedItemExtendedInfoPtrOutput)
}

// The oldest backup copy available for this item in the service.
func (o AzureSqlProtectedItemExtendedInfoOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemExtendedInfo) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// State of the backup policy associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemExtendedInfo) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemExtendedInfo) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureSqlProtectedItemExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlProtectedItemExtendedInfo)(nil)).Elem()
}

func (o AzureSqlProtectedItemExtendedInfoPtrOutput) ToAzureSqlProtectedItemExtendedInfoPtrOutput() AzureSqlProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoPtrOutput) ToAzureSqlProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoPtrOutput) Elem() AzureSqlProtectedItemExtendedInfoOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfo) AzureSqlProtectedItemExtendedInfo {
		if v != nil {
			return *v
		}
		var ret AzureSqlProtectedItemExtendedInfo
		return ret
	}).(AzureSqlProtectedItemExtendedInfoOutput)
}

// The oldest backup copy available for this item in the service.
func (o AzureSqlProtectedItemExtendedInfoPtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// State of the backup policy associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoPtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoPtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfo) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Additional information on Azure Sql specific protected item.
type AzureSqlProtectedItemExtendedInfoResponse struct {
	// The oldest backup copy available for this item in the service.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// State of the backup policy associated with this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Number of available backup copies associated with this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information on Azure Sql specific protected item.
type AzureSqlProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureSqlProtectedItemExtendedInfoResponseOutput) ToAzureSqlProtectedItemExtendedInfoResponseOutput() AzureSqlProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoResponseOutput) ToAzureSqlProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoResponseOutput {
	return o
}

// The oldest backup copy available for this item in the service.
func (o AzureSqlProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// State of the backup policy associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoResponseOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemExtendedInfoResponse) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureSqlProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) ToAzureSqlProtectedItemExtendedInfoResponsePtrOutput() AzureSqlProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) ToAzureSqlProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureSqlProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) Elem() AzureSqlProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfoResponse) AzureSqlProtectedItemExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret AzureSqlProtectedItemExtendedInfoResponse
		return ret
	}).(AzureSqlProtectedItemExtendedInfoResponseOutput)
}

// The oldest backup copy available for this item in the service.
func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// State of the backup policy associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Number of available backup copies associated with this backup item.
func (o AzureSqlProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Azure SQL workload-specific backup item.
type AzureSqlProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureSqlProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
	ProtectedItemDataId *string `pulumi:"protectedItemDataId"`
	// backup item type.
	// Expected value is 'Microsoft.Sql/servers/databases'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of the backed up item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Azure SQL workload-specific backup item.
type AzureSqlProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectedItemResponse)(nil)).Elem()
}

func (o AzureSqlProtectedItemResponseOutput) ToAzureSqlProtectedItemResponseOutput() AzureSqlProtectedItemResponseOutput {
	return o
}

func (o AzureSqlProtectedItemResponseOutput) ToAzureSqlProtectedItemResponseOutputWithContext(ctx context.Context) AzureSqlProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureSqlProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureSqlProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureSqlProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureSqlProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureSqlProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureSqlProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureSqlProtectedItemResponseOutput) ExtendedInfo() AzureSqlProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *AzureSqlProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureSqlProtectedItemExtendedInfoResponsePtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureSqlProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureSqlProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureSqlProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureSqlProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureSqlProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureSqlProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureSqlProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
func (o AzureSqlProtectedItemResponseOutput) ProtectedItemDataId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.ProtectedItemDataId }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'Microsoft.Sql/servers/databases'.
func (o AzureSqlProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of the backed up item.
func (o AzureSqlProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureSqlProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o AzureSqlProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureSqlProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureSqlProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureSqlProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureSql'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy details.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
}

// AzureSqlProtectionPolicyInput is an input type that accepts AzureSqlProtectionPolicyArgs and AzureSqlProtectionPolicyOutput values.
// You can construct a concrete instance of `AzureSqlProtectionPolicyInput` via:
//
//	AzureSqlProtectionPolicyArgs{...}
type AzureSqlProtectionPolicyInput interface {
	pulumi.Input

	ToAzureSqlProtectionPolicyOutput() AzureSqlProtectionPolicyOutput
	ToAzureSqlProtectionPolicyOutputWithContext(context.Context) AzureSqlProtectionPolicyOutput
}

// Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicyArgs struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureSql'.
	BackupManagementType pulumi.StringInput `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount pulumi.IntPtrInput `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Retention policy details.
	RetentionPolicy pulumi.Input `pulumi:"retentionPolicy"`
}

func (AzureSqlProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectionPolicy)(nil)).Elem()
}

func (i AzureSqlProtectionPolicyArgs) ToAzureSqlProtectionPolicyOutput() AzureSqlProtectionPolicyOutput {
	return i.ToAzureSqlProtectionPolicyOutputWithContext(context.Background())
}

func (i AzureSqlProtectionPolicyArgs) ToAzureSqlProtectionPolicyOutputWithContext(ctx context.Context) AzureSqlProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectionPolicyOutput)
}

func (i AzureSqlProtectionPolicyArgs) ToAzureSqlProtectionPolicyPtrOutput() AzureSqlProtectionPolicyPtrOutput {
	return i.ToAzureSqlProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i AzureSqlProtectionPolicyArgs) ToAzureSqlProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureSqlProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectionPolicyOutput).ToAzureSqlProtectionPolicyPtrOutputWithContext(ctx)
}

// AzureSqlProtectionPolicyPtrInput is an input type that accepts AzureSqlProtectionPolicyArgs, AzureSqlProtectionPolicyPtr and AzureSqlProtectionPolicyPtrOutput values.
// You can construct a concrete instance of `AzureSqlProtectionPolicyPtrInput` via:
//
//	        AzureSqlProtectionPolicyArgs{...}
//
//	or:
//
//	        nil
type AzureSqlProtectionPolicyPtrInput interface {
	pulumi.Input

	ToAzureSqlProtectionPolicyPtrOutput() AzureSqlProtectionPolicyPtrOutput
	ToAzureSqlProtectionPolicyPtrOutputWithContext(context.Context) AzureSqlProtectionPolicyPtrOutput
}

type azureSqlProtectionPolicyPtrType AzureSqlProtectionPolicyArgs

func AzureSqlProtectionPolicyPtr(v *AzureSqlProtectionPolicyArgs) AzureSqlProtectionPolicyPtrInput {
	return (*azureSqlProtectionPolicyPtrType)(v)
}

func (*azureSqlProtectionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlProtectionPolicy)(nil)).Elem()
}

func (i *azureSqlProtectionPolicyPtrType) ToAzureSqlProtectionPolicyPtrOutput() AzureSqlProtectionPolicyPtrOutput {
	return i.ToAzureSqlProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i *azureSqlProtectionPolicyPtrType) ToAzureSqlProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureSqlProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlProtectionPolicyPtrOutput)
}

// Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicyOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectionPolicy)(nil)).Elem()
}

func (o AzureSqlProtectionPolicyOutput) ToAzureSqlProtectionPolicyOutput() AzureSqlProtectionPolicyOutput {
	return o
}

func (o AzureSqlProtectionPolicyOutput) ToAzureSqlProtectionPolicyOutputWithContext(ctx context.Context) AzureSqlProtectionPolicyOutput {
	return o
}

func (o AzureSqlProtectionPolicyOutput) ToAzureSqlProtectionPolicyPtrOutput() AzureSqlProtectionPolicyPtrOutput {
	return o.ToAzureSqlProtectionPolicyPtrOutputWithContext(context.Background())
}

func (o AzureSqlProtectionPolicyOutput) ToAzureSqlProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureSqlProtectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureSqlProtectionPolicy) *AzureSqlProtectionPolicy {
		return &v
	}).(AzureSqlProtectionPolicyPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureSql'.
func (o AzureSqlProtectionPolicyOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicy) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Number of items associated with this policy.
func (o AzureSqlProtectionPolicyOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicy) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureSqlProtectionPolicyOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicy) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Retention policy details.
func (o AzureSqlProtectionPolicyOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicy) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

type AzureSqlProtectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlProtectionPolicy)(nil)).Elem()
}

func (o AzureSqlProtectionPolicyPtrOutput) ToAzureSqlProtectionPolicyPtrOutput() AzureSqlProtectionPolicyPtrOutput {
	return o
}

func (o AzureSqlProtectionPolicyPtrOutput) ToAzureSqlProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureSqlProtectionPolicyPtrOutput {
	return o
}

func (o AzureSqlProtectionPolicyPtrOutput) Elem() AzureSqlProtectionPolicyOutput {
	return o.ApplyT(func(v *AzureSqlProtectionPolicy) AzureSqlProtectionPolicy {
		if v != nil {
			return *v
		}
		var ret AzureSqlProtectionPolicy
		return ret
	}).(AzureSqlProtectionPolicyOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureSql'.
func (o AzureSqlProtectionPolicyPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o AzureSqlProtectionPolicyPtrOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureSqlProtectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.ProtectedItemsCount
	}).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureSqlProtectionPolicyPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureSqlProtectionPolicy) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Retention policy details.
func (o AzureSqlProtectionPolicyPtrOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v *AzureSqlProtectionPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.RetentionPolicy
	}).(pulumi.AnyOutput)
}

// Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureSql'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy details.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
}

// Azure SQL workload-specific backup policy.
type AzureSqlProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlProtectionPolicyResponse)(nil)).Elem()
}

func (o AzureSqlProtectionPolicyResponseOutput) ToAzureSqlProtectionPolicyResponseOutput() AzureSqlProtectionPolicyResponseOutput {
	return o
}

func (o AzureSqlProtectionPolicyResponseOutput) ToAzureSqlProtectionPolicyResponseOutputWithContext(ctx context.Context) AzureSqlProtectionPolicyResponseOutput {
	return o
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureSql'.
func (o AzureSqlProtectionPolicyResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicyResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Number of items associated with this policy.
func (o AzureSqlProtectionPolicyResponseOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicyResponse) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureSqlProtectionPolicyResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicyResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Retention policy details.
func (o AzureSqlProtectionPolicyResponseOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v AzureSqlProtectionPolicyResponse) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Azure Storage Account workload-specific container.
type AzureStorageContainer struct {
	// Whether storage account lock is to be acquired for this container or not.
	AcquireStorageAccountLock *string `pulumi:"acquireStorageAccountLock"`
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'StorageContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of items backed up in this container.
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Storage account version.
	StorageAccountVersion *string `pulumi:"storageAccountVersion"`
}

// AzureStorageContainerInput is an input type that accepts AzureStorageContainerArgs and AzureStorageContainerOutput values.
// You can construct a concrete instance of `AzureStorageContainerInput` via:
//
//	AzureStorageContainerArgs{...}
type AzureStorageContainerInput interface {
	pulumi.Input

	ToAzureStorageContainerOutput() AzureStorageContainerOutput
	ToAzureStorageContainerOutputWithContext(context.Context) AzureStorageContainerOutput
}

// Azure Storage Account workload-specific container.
type AzureStorageContainerArgs struct {
	// Whether storage account lock is to be acquired for this container or not.
	AcquireStorageAccountLock pulumi.StringPtrInput `pulumi:"acquireStorageAccountLock"`
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'StorageContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Number of items backed up in this container.
	ProtectedItemCount pulumi.Float64PtrInput `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Fully qualified ARM url.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Storage account version.
	StorageAccountVersion pulumi.StringPtrInput `pulumi:"storageAccountVersion"`
}

func (AzureStorageContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageContainer)(nil)).Elem()
}

func (i AzureStorageContainerArgs) ToAzureStorageContainerOutput() AzureStorageContainerOutput {
	return i.ToAzureStorageContainerOutputWithContext(context.Background())
}

func (i AzureStorageContainerArgs) ToAzureStorageContainerOutputWithContext(ctx context.Context) AzureStorageContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageContainerOutput)
}

func (i AzureStorageContainerArgs) ToAzureStorageContainerPtrOutput() AzureStorageContainerPtrOutput {
	return i.ToAzureStorageContainerPtrOutputWithContext(context.Background())
}

func (i AzureStorageContainerArgs) ToAzureStorageContainerPtrOutputWithContext(ctx context.Context) AzureStorageContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageContainerOutput).ToAzureStorageContainerPtrOutputWithContext(ctx)
}

// AzureStorageContainerPtrInput is an input type that accepts AzureStorageContainerArgs, AzureStorageContainerPtr and AzureStorageContainerPtrOutput values.
// You can construct a concrete instance of `AzureStorageContainerPtrInput` via:
//
//	        AzureStorageContainerArgs{...}
//
//	or:
//
//	        nil
type AzureStorageContainerPtrInput interface {
	pulumi.Input

	ToAzureStorageContainerPtrOutput() AzureStorageContainerPtrOutput
	ToAzureStorageContainerPtrOutputWithContext(context.Context) AzureStorageContainerPtrOutput
}

type azureStorageContainerPtrType AzureStorageContainerArgs

func AzureStorageContainerPtr(v *AzureStorageContainerArgs) AzureStorageContainerPtrInput {
	return (*azureStorageContainerPtrType)(v)
}

func (*azureStorageContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStorageContainer)(nil)).Elem()
}

func (i *azureStorageContainerPtrType) ToAzureStorageContainerPtrOutput() AzureStorageContainerPtrOutput {
	return i.ToAzureStorageContainerPtrOutputWithContext(context.Background())
}

func (i *azureStorageContainerPtrType) ToAzureStorageContainerPtrOutputWithContext(ctx context.Context) AzureStorageContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageContainerPtrOutput)
}

// Azure Storage Account workload-specific container.
type AzureStorageContainerOutput struct{ *pulumi.OutputState }

func (AzureStorageContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageContainer)(nil)).Elem()
}

func (o AzureStorageContainerOutput) ToAzureStorageContainerOutput() AzureStorageContainerOutput {
	return o
}

func (o AzureStorageContainerOutput) ToAzureStorageContainerOutputWithContext(ctx context.Context) AzureStorageContainerOutput {
	return o
}

func (o AzureStorageContainerOutput) ToAzureStorageContainerPtrOutput() AzureStorageContainerPtrOutput {
	return o.ToAzureStorageContainerPtrOutputWithContext(context.Background())
}

func (o AzureStorageContainerOutput) ToAzureStorageContainerPtrOutputWithContext(ctx context.Context) AzureStorageContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureStorageContainer) *AzureStorageContainer {
		return &v
	}).(AzureStorageContainerPtrOutput)
}

// Whether storage account lock is to be acquired for this container or not.
func (o AzureStorageContainerOutput) AcquireStorageAccountLock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.AcquireStorageAccountLock }).(pulumi.StringPtrOutput)
}

// Type of backup management for the container.
func (o AzureStorageContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'StorageContainer'.
func (o AzureStorageContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o AzureStorageContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureStorageContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureStorageContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Number of items backed up in this container.
func (o AzureStorageContainerOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *float64 { return v.ProtectedItemCount }).(pulumi.Float64PtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureStorageContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureStorageContainerOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url.
func (o AzureStorageContainerOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Storage account version.
func (o AzureStorageContainerOutput) StorageAccountVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainer) *string { return v.StorageAccountVersion }).(pulumi.StringPtrOutput)
}

type AzureStorageContainerPtrOutput struct{ *pulumi.OutputState }

func (AzureStorageContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStorageContainer)(nil)).Elem()
}

func (o AzureStorageContainerPtrOutput) ToAzureStorageContainerPtrOutput() AzureStorageContainerPtrOutput {
	return o
}

func (o AzureStorageContainerPtrOutput) ToAzureStorageContainerPtrOutputWithContext(ctx context.Context) AzureStorageContainerPtrOutput {
	return o
}

func (o AzureStorageContainerPtrOutput) Elem() AzureStorageContainerOutput {
	return o.ApplyT(func(v *AzureStorageContainer) AzureStorageContainer {
		if v != nil {
			return *v
		}
		var ret AzureStorageContainer
		return ret
	}).(AzureStorageContainerOutput)
}

// Whether storage account lock is to be acquired for this container or not.
func (o AzureStorageContainerPtrOutput) AcquireStorageAccountLock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.AcquireStorageAccountLock
	}).(pulumi.StringPtrOutput)
}

// Type of backup management for the container.
func (o AzureStorageContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'StorageContainer'.
func (o AzureStorageContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o AzureStorageContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureStorageContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureStorageContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Number of items backed up in this container.
func (o AzureStorageContainerPtrOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *float64 {
		if v == nil {
			return nil
		}
		return v.ProtectedItemCount
	}).(pulumi.Float64PtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureStorageContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureStorageContainerPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url.
func (o AzureStorageContainerPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Storage account version.
func (o AzureStorageContainerPtrOutput) StorageAccountVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStorageContainer) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountVersion
	}).(pulumi.StringPtrOutput)
}

// Azure Storage Account workload-specific container.
type AzureStorageContainerResponse struct {
	// Whether storage account lock is to be acquired for this container or not.
	AcquireStorageAccountLock *string `pulumi:"acquireStorageAccountLock"`
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'StorageContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of items backed up in this container.
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Storage account version.
	StorageAccountVersion *string `pulumi:"storageAccountVersion"`
}

// Azure Storage Account workload-specific container.
type AzureStorageContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureStorageContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageContainerResponse)(nil)).Elem()
}

func (o AzureStorageContainerResponseOutput) ToAzureStorageContainerResponseOutput() AzureStorageContainerResponseOutput {
	return o
}

func (o AzureStorageContainerResponseOutput) ToAzureStorageContainerResponseOutputWithContext(ctx context.Context) AzureStorageContainerResponseOutput {
	return o
}

// Whether storage account lock is to be acquired for this container or not.
func (o AzureStorageContainerResponseOutput) AcquireStorageAccountLock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.AcquireStorageAccountLock }).(pulumi.StringPtrOutput)
}

// Type of backup management for the container.
func (o AzureStorageContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'StorageContainer'.
func (o AzureStorageContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o AzureStorageContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureStorageContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureStorageContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Number of items backed up in this container.
func (o AzureStorageContainerResponseOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *float64 { return v.ProtectedItemCount }).(pulumi.Float64PtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureStorageContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o AzureStorageContainerResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url.
func (o AzureStorageContainerResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Storage account version.
func (o AzureStorageContainerResponseOutput) StorageAccountVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageContainerResponse) *string { return v.StorageAccountVersion }).(pulumi.StringPtrOutput)
}

// Container for SQL workloads under Azure Virtual Machines.
type AzureVMAppContainerProtectionContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'VMAppContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// AzureVMAppContainerProtectionContainerInput is an input type that accepts AzureVMAppContainerProtectionContainerArgs and AzureVMAppContainerProtectionContainerOutput values.
// You can construct a concrete instance of `AzureVMAppContainerProtectionContainerInput` via:
//
//	AzureVMAppContainerProtectionContainerArgs{...}
type AzureVMAppContainerProtectionContainerInput interface {
	pulumi.Input

	ToAzureVMAppContainerProtectionContainerOutput() AzureVMAppContainerProtectionContainerOutput
	ToAzureVMAppContainerProtectionContainerOutputWithContext(context.Context) AzureVMAppContainerProtectionContainerOutput
}

// Container for SQL workloads under Azure Virtual Machines.
type AzureVMAppContainerProtectionContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'VMAppContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo AzureWorkloadContainerExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime pulumi.StringPtrInput `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType pulumi.StringPtrInput `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (AzureVMAppContainerProtectionContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVMAppContainerProtectionContainer)(nil)).Elem()
}

func (i AzureVMAppContainerProtectionContainerArgs) ToAzureVMAppContainerProtectionContainerOutput() AzureVMAppContainerProtectionContainerOutput {
	return i.ToAzureVMAppContainerProtectionContainerOutputWithContext(context.Background())
}

func (i AzureVMAppContainerProtectionContainerArgs) ToAzureVMAppContainerProtectionContainerOutputWithContext(ctx context.Context) AzureVMAppContainerProtectionContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVMAppContainerProtectionContainerOutput)
}

func (i AzureVMAppContainerProtectionContainerArgs) ToAzureVMAppContainerProtectionContainerPtrOutput() AzureVMAppContainerProtectionContainerPtrOutput {
	return i.ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(context.Background())
}

func (i AzureVMAppContainerProtectionContainerArgs) ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(ctx context.Context) AzureVMAppContainerProtectionContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVMAppContainerProtectionContainerOutput).ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(ctx)
}

// AzureVMAppContainerProtectionContainerPtrInput is an input type that accepts AzureVMAppContainerProtectionContainerArgs, AzureVMAppContainerProtectionContainerPtr and AzureVMAppContainerProtectionContainerPtrOutput values.
// You can construct a concrete instance of `AzureVMAppContainerProtectionContainerPtrInput` via:
//
//	        AzureVMAppContainerProtectionContainerArgs{...}
//
//	or:
//
//	        nil
type AzureVMAppContainerProtectionContainerPtrInput interface {
	pulumi.Input

	ToAzureVMAppContainerProtectionContainerPtrOutput() AzureVMAppContainerProtectionContainerPtrOutput
	ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(context.Context) AzureVMAppContainerProtectionContainerPtrOutput
}

type azureVMAppContainerProtectionContainerPtrType AzureVMAppContainerProtectionContainerArgs

func AzureVMAppContainerProtectionContainerPtr(v *AzureVMAppContainerProtectionContainerArgs) AzureVMAppContainerProtectionContainerPtrInput {
	return (*azureVMAppContainerProtectionContainerPtrType)(v)
}

func (*azureVMAppContainerProtectionContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVMAppContainerProtectionContainer)(nil)).Elem()
}

func (i *azureVMAppContainerProtectionContainerPtrType) ToAzureVMAppContainerProtectionContainerPtrOutput() AzureVMAppContainerProtectionContainerPtrOutput {
	return i.ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(context.Background())
}

func (i *azureVMAppContainerProtectionContainerPtrType) ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(ctx context.Context) AzureVMAppContainerProtectionContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVMAppContainerProtectionContainerPtrOutput)
}

// Container for SQL workloads under Azure Virtual Machines.
type AzureVMAppContainerProtectionContainerOutput struct{ *pulumi.OutputState }

func (AzureVMAppContainerProtectionContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVMAppContainerProtectionContainer)(nil)).Elem()
}

func (o AzureVMAppContainerProtectionContainerOutput) ToAzureVMAppContainerProtectionContainerOutput() AzureVMAppContainerProtectionContainerOutput {
	return o
}

func (o AzureVMAppContainerProtectionContainerOutput) ToAzureVMAppContainerProtectionContainerOutputWithContext(ctx context.Context) AzureVMAppContainerProtectionContainerOutput {
	return o
}

func (o AzureVMAppContainerProtectionContainerOutput) ToAzureVMAppContainerProtectionContainerPtrOutput() AzureVMAppContainerProtectionContainerPtrOutput {
	return o.ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(context.Background())
}

func (o AzureVMAppContainerProtectionContainerOutput) ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(ctx context.Context) AzureVMAppContainerProtectionContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVMAppContainerProtectionContainer) *AzureVMAppContainerProtectionContainer {
		return &v
	}).(AzureVMAppContainerProtectionContainerPtrOutput)
}

// Type of backup management for the container.
func (o AzureVMAppContainerProtectionContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'VMAppContainer'.
func (o AzureVMAppContainerProtectionContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Additional details of a workload container.
func (o AzureVMAppContainerProtectionContainerOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *AzureWorkloadContainerExtendedInfo {
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o AzureVMAppContainerProtectionContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureVMAppContainerProtectionContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureVMAppContainerProtectionContainerOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureVMAppContainerProtectionContainerOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.OperationType }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureVMAppContainerProtectionContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureVMAppContainerProtectionContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureVMAppContainerProtectionContainerOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureVMAppContainerProtectionContainerOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainer) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

type AzureVMAppContainerProtectionContainerPtrOutput struct{ *pulumi.OutputState }

func (AzureVMAppContainerProtectionContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVMAppContainerProtectionContainer)(nil)).Elem()
}

func (o AzureVMAppContainerProtectionContainerPtrOutput) ToAzureVMAppContainerProtectionContainerPtrOutput() AzureVMAppContainerProtectionContainerPtrOutput {
	return o
}

func (o AzureVMAppContainerProtectionContainerPtrOutput) ToAzureVMAppContainerProtectionContainerPtrOutputWithContext(ctx context.Context) AzureVMAppContainerProtectionContainerPtrOutput {
	return o
}

func (o AzureVMAppContainerProtectionContainerPtrOutput) Elem() AzureVMAppContainerProtectionContainerOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) AzureVMAppContainerProtectionContainer {
		if v != nil {
			return *v
		}
		var ret AzureVMAppContainerProtectionContainer
		return ret
	}).(AzureVMAppContainerProtectionContainerOutput)
}

// Type of backup management for the container.
func (o AzureVMAppContainerProtectionContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'VMAppContainer'.
func (o AzureVMAppContainerProtectionContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Additional details of a workload container.
func (o AzureVMAppContainerProtectionContainerPtrOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *AzureWorkloadContainerExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o AzureVMAppContainerProtectionContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureVMAppContainerProtectionContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureVMAppContainerProtectionContainerPtrOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdatedTime
	}).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureVMAppContainerProtectionContainerPtrOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.OperationType
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureVMAppContainerProtectionContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureVMAppContainerProtectionContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureVMAppContainerProtectionContainerPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureVMAppContainerProtectionContainerPtrOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVMAppContainerProtectionContainer) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadType
	}).(pulumi.StringPtrOutput)
}

// Container for SQL workloads under Azure Virtual Machines.
type AzureVMAppContainerProtectionContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'VMAppContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// Container for SQL workloads under Azure Virtual Machines.
type AzureVMAppContainerProtectionContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureVMAppContainerProtectionContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVMAppContainerProtectionContainerResponse)(nil)).Elem()
}

func (o AzureVMAppContainerProtectionContainerResponseOutput) ToAzureVMAppContainerProtectionContainerResponseOutput() AzureVMAppContainerProtectionContainerResponseOutput {
	return o
}

func (o AzureVMAppContainerProtectionContainerResponseOutput) ToAzureVMAppContainerProtectionContainerResponseOutputWithContext(ctx context.Context) AzureVMAppContainerProtectionContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureVMAppContainerProtectionContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'VMAppContainer'.
func (o AzureVMAppContainerProtectionContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Additional details of a workload container.
func (o AzureVMAppContainerProtectionContainerResponseOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *AzureWorkloadContainerExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoResponsePtrOutput)
}

// Friendly name of the container.
func (o AzureVMAppContainerProtectionContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureVMAppContainerProtectionContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureVMAppContainerProtectionContainerResponseOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureVMAppContainerProtectionContainerResponseOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.OperationType }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureVMAppContainerProtectionContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureVMAppContainerProtectionContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureVMAppContainerProtectionContainerResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureVMAppContainerProtectionContainerResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVMAppContainerProtectionContainerResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

// Azure VM workload-specific protected item.
type AzureVmWorkloadProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfo `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureVmWorkloadProtectedItemInput is an input type that accepts AzureVmWorkloadProtectedItemArgs and AzureVmWorkloadProtectedItemOutput values.
// You can construct a concrete instance of `AzureVmWorkloadProtectedItemInput` via:
//
//	AzureVmWorkloadProtectedItemArgs{...}
type AzureVmWorkloadProtectedItemInput interface {
	pulumi.Input

	ToAzureVmWorkloadProtectedItemOutput() AzureVmWorkloadProtectedItemOutput
	ToAzureVmWorkloadProtectedItemOutputWithContext(context.Context) AzureVmWorkloadProtectedItemOutput
}

// Azure VM workload-specific protected item.
type AzureVmWorkloadProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureVmWorkloadProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList DistributedNodesInfoArrayInput `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName pulumi.StringPtrInput `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType pulumi.StringPtrInput `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId pulumi.StringPtrInput `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus pulumi.StringPtrInput `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadProtectedItem'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureVmWorkloadProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectedItem)(nil)).Elem()
}

func (i AzureVmWorkloadProtectedItemArgs) ToAzureVmWorkloadProtectedItemOutput() AzureVmWorkloadProtectedItemOutput {
	return i.ToAzureVmWorkloadProtectedItemOutputWithContext(context.Background())
}

func (i AzureVmWorkloadProtectedItemArgs) ToAzureVmWorkloadProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectedItemOutput)
}

func (i AzureVmWorkloadProtectedItemArgs) ToAzureVmWorkloadProtectedItemPtrOutput() AzureVmWorkloadProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureVmWorkloadProtectedItemArgs) ToAzureVmWorkloadProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectedItemOutput).ToAzureVmWorkloadProtectedItemPtrOutputWithContext(ctx)
}

// AzureVmWorkloadProtectedItemPtrInput is an input type that accepts AzureVmWorkloadProtectedItemArgs, AzureVmWorkloadProtectedItemPtr and AzureVmWorkloadProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureVmWorkloadProtectedItemPtrInput` via:
//
//	        AzureVmWorkloadProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureVmWorkloadProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureVmWorkloadProtectedItemPtrOutput() AzureVmWorkloadProtectedItemPtrOutput
	ToAzureVmWorkloadProtectedItemPtrOutputWithContext(context.Context) AzureVmWorkloadProtectedItemPtrOutput
}

type azureVmWorkloadProtectedItemPtrType AzureVmWorkloadProtectedItemArgs

func AzureVmWorkloadProtectedItemPtr(v *AzureVmWorkloadProtectedItemArgs) AzureVmWorkloadProtectedItemPtrInput {
	return (*azureVmWorkloadProtectedItemPtrType)(v)
}

func (*azureVmWorkloadProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadProtectedItem)(nil)).Elem()
}

func (i *azureVmWorkloadProtectedItemPtrType) ToAzureVmWorkloadProtectedItemPtrOutput() AzureVmWorkloadProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureVmWorkloadProtectedItemPtrType) ToAzureVmWorkloadProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectedItemPtrOutput)
}

// Azure VM workload-specific protected item.
type AzureVmWorkloadProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemOutput) ToAzureVmWorkloadProtectedItemOutput() AzureVmWorkloadProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemOutput) ToAzureVmWorkloadProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemOutput) ToAzureVmWorkloadProtectedItemPtrOutput() AzureVmWorkloadProtectedItemPtrOutput {
	return o.ToAzureVmWorkloadProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureVmWorkloadProtectedItemOutput) ToAzureVmWorkloadProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVmWorkloadProtectedItem) *AzureVmWorkloadProtectedItem {
		return &v
	}).(AzureVmWorkloadProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadProtectedItemOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo { return v.ExtendedInfo }).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) map[string]KPIResourceHealthDetails { return v.KpisHealths }).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadProtectedItemOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadProtectedItemOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) []DistributedNodesInfo { return v.NodesList }).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadProtectedItemOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadProtectedItemOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadProtectedItemOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadProtectedItemOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadProtectedItem'.
func (o AzureVmWorkloadProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadProtectedItemOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureVmWorkloadProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemPtrOutput) ToAzureVmWorkloadProtectedItemPtrOutput() AzureVmWorkloadProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemPtrOutput) ToAzureVmWorkloadProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemPtrOutput) Elem() AzureVmWorkloadProtectedItemOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) AzureVmWorkloadProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureVmWorkloadProtectedItem
		return ret
	}).(AzureVmWorkloadProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadProtectedItemPtrOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadProtectedItemPtrOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadProtectedItemPtrOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) []DistributedNodesInfo {
		if v == nil {
			return nil
		}
		return v.NodesList
	}).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadProtectedItemPtrOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentName
	}).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadProtectedItemPtrOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentType
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadProtectedItemPtrOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemDataSourceId
	}).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadProtectedItemPtrOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemHealthStatus
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadProtectedItem'.
func (o AzureVmWorkloadProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadProtectedItemPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Additional information on Azure Workload for SQL specific backup item.
type AzureVmWorkloadProtectedItemExtendedInfo struct {
	// The latest backup copy available for this backup item in archive tier
	NewestRecoveryPointInArchive *string `pulumi:"newestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item across all tiers.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// The oldest backup copy available for this backup item in archive tier
	OldestRecoveryPointInArchive *string `pulumi:"oldestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item in vault tier
	OldestRecoveryPointInVault *string `pulumi:"oldestRecoveryPointInVault"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Indicates consistency of policy object and policy applied to this backup item.
	RecoveryModel *string `pulumi:"recoveryModel"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// AzureVmWorkloadProtectedItemExtendedInfoInput is an input type that accepts AzureVmWorkloadProtectedItemExtendedInfoArgs and AzureVmWorkloadProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `AzureVmWorkloadProtectedItemExtendedInfoInput` via:
//
//	AzureVmWorkloadProtectedItemExtendedInfoArgs{...}
type AzureVmWorkloadProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToAzureVmWorkloadProtectedItemExtendedInfoOutput() AzureVmWorkloadProtectedItemExtendedInfoOutput
	ToAzureVmWorkloadProtectedItemExtendedInfoOutputWithContext(context.Context) AzureVmWorkloadProtectedItemExtendedInfoOutput
}

// Additional information on Azure Workload for SQL specific backup item.
type AzureVmWorkloadProtectedItemExtendedInfoArgs struct {
	// The latest backup copy available for this backup item in archive tier
	NewestRecoveryPointInArchive pulumi.StringPtrInput `pulumi:"newestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item across all tiers.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// The oldest backup copy available for this backup item in archive tier
	OldestRecoveryPointInArchive pulumi.StringPtrInput `pulumi:"oldestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item in vault tier
	OldestRecoveryPointInVault pulumi.StringPtrInput `pulumi:"oldestRecoveryPointInVault"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState pulumi.StringPtrInput `pulumi:"policyState"`
	// Indicates consistency of policy object and policy applied to this backup item.
	RecoveryModel pulumi.StringPtrInput `pulumi:"recoveryModel"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
}

func (AzureVmWorkloadProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectedItemExtendedInfo)(nil)).Elem()
}

func (i AzureVmWorkloadProtectedItemExtendedInfoArgs) ToAzureVmWorkloadProtectedItemExtendedInfoOutput() AzureVmWorkloadProtectedItemExtendedInfoOutput {
	return i.ToAzureVmWorkloadProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i AzureVmWorkloadProtectedItemExtendedInfoArgs) ToAzureVmWorkloadProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectedItemExtendedInfoOutput)
}

func (i AzureVmWorkloadProtectedItemExtendedInfoArgs) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutput() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i AzureVmWorkloadProtectedItemExtendedInfoArgs) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectedItemExtendedInfoOutput).ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// AzureVmWorkloadProtectedItemExtendedInfoPtrInput is an input type that accepts AzureVmWorkloadProtectedItemExtendedInfoArgs, AzureVmWorkloadProtectedItemExtendedInfoPtr and AzureVmWorkloadProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `AzureVmWorkloadProtectedItemExtendedInfoPtrInput` via:
//
//	        AzureVmWorkloadProtectedItemExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type AzureVmWorkloadProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutput() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput
	ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(context.Context) AzureVmWorkloadProtectedItemExtendedInfoPtrOutput
}

type azureVmWorkloadProtectedItemExtendedInfoPtrType AzureVmWorkloadProtectedItemExtendedInfoArgs

func AzureVmWorkloadProtectedItemExtendedInfoPtr(v *AzureVmWorkloadProtectedItemExtendedInfoArgs) AzureVmWorkloadProtectedItemExtendedInfoPtrInput {
	return (*azureVmWorkloadProtectedItemExtendedInfoPtrType)(v)
}

func (*azureVmWorkloadProtectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *azureVmWorkloadProtectedItemExtendedInfoPtrType) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutput() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return i.ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *azureVmWorkloadProtectedItemExtendedInfoPtrType) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Additional information on Azure Workload for SQL specific backup item.
type AzureVmWorkloadProtectedItemExtendedInfoOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectedItemExtendedInfo)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) ToAzureVmWorkloadProtectedItemExtendedInfoOutput() AzureVmWorkloadProtectedItemExtendedInfoOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) ToAzureVmWorkloadProtectedItemExtendedInfoOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutput() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVmWorkloadProtectedItemExtendedInfo) *AzureVmWorkloadProtectedItemExtendedInfo {
		return &v
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// The latest backup copy available for this backup item in archive tier
func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) NewestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfo) *string { return v.NewestRecoveryPointInArchive }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item across all tiers.
func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfo) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in archive tier
func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) OldestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfo) *string { return v.OldestRecoveryPointInArchive }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in vault tier
func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) OldestRecoveryPointInVault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfo) *string { return v.OldestRecoveryPointInVault }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfo) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) RecoveryModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfo) *string { return v.RecoveryModel }).(pulumi.StringPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfo) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureVmWorkloadProtectedItemExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadProtectedItemExtendedInfo)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutput() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) ToAzureVmWorkloadProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) Elem() AzureVmWorkloadProtectedItemExtendedInfoOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfo) AzureVmWorkloadProtectedItemExtendedInfo {
		if v != nil {
			return *v
		}
		var ret AzureVmWorkloadProtectedItemExtendedInfo
		return ret
	}).(AzureVmWorkloadProtectedItemExtendedInfoOutput)
}

// The latest backup copy available for this backup item in archive tier
func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) NewestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.NewestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item across all tiers.
func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in archive tier
func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) OldestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in vault tier
func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) OldestRecoveryPointInVault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPointInVault
	}).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) RecoveryModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryModel
	}).(pulumi.StringPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoPtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfo) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Additional information on Azure Workload for SQL specific backup item.
type AzureVmWorkloadProtectedItemExtendedInfoResponse struct {
	// The latest backup copy available for this backup item in archive tier
	NewestRecoveryPointInArchive *string `pulumi:"newestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item across all tiers.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// The oldest backup copy available for this backup item in archive tier
	OldestRecoveryPointInArchive *string `pulumi:"oldestRecoveryPointInArchive"`
	// The oldest backup copy available for this backup item in vault tier
	OldestRecoveryPointInVault *string `pulumi:"oldestRecoveryPointInVault"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Indicates consistency of policy object and policy applied to this backup item.
	RecoveryModel *string `pulumi:"recoveryModel"`
	// Number of backup copies available for this backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information on Azure Workload for SQL specific backup item.
type AzureVmWorkloadProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) ToAzureVmWorkloadProtectedItemExtendedInfoResponseOutput() AzureVmWorkloadProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) ToAzureVmWorkloadProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoResponseOutput {
	return o
}

// The latest backup copy available for this backup item in archive tier
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) NewestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		return v.NewestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item across all tiers.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in archive tier
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) OldestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		return v.OldestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in vault tier
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) OldestRecoveryPointInVault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPointInVault }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) RecoveryModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *string { return v.RecoveryModel }).(pulumi.StringPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) ToAzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput() AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) ToAzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) Elem() AzureVmWorkloadProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) AzureVmWorkloadProtectedItemExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret AzureVmWorkloadProtectedItemExtendedInfoResponse
		return ret
	}).(AzureVmWorkloadProtectedItemExtendedInfoResponseOutput)
}

// The latest backup copy available for this backup item in archive tier
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) NewestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.NewestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item across all tiers.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in archive tier
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPointInArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPointInArchive
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available for this backup item in vault tier
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPointInVault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPointInVault
	}).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) RecoveryModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryModel
	}).(pulumi.StringPtrOutput)
}

// Number of backup copies available for this backup item.
func (o AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Azure VM workload-specific protected item.
type AzureVmWorkloadProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Error details in last backup
	LastBackupErrorDetail *ErrorDetailResponse `pulumi:"lastBackupErrorDetail"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfoResponse `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Azure VM workload-specific protected item.
type AzureVmWorkloadProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectedItemResponse)(nil)).Elem()
}

func (o AzureVmWorkloadProtectedItemResponseOutput) ToAzureVmWorkloadProtectedItemResponseOutput() AzureVmWorkloadProtectedItemResponseOutput {
	return o
}

func (o AzureVmWorkloadProtectedItemResponseOutput) ToAzureVmWorkloadProtectedItemResponseOutputWithContext(ctx context.Context) AzureVmWorkloadProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureVmWorkloadProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *AzureVmWorkloadProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the DB represented by this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Error details in last backup
func (o AzureVmWorkloadProtectedItemResponseOutput) LastBackupErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *ErrorDetailResponse { return v.LastBackupErrorDetail }).(ErrorDetailResponsePtrOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadProtectedItemResponseOutput) NodesList() DistributedNodesInfoResponseArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) []DistributedNodesInfoResponse { return v.NodesList }).(DistributedNodesInfoResponseArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadProtectedItemResponseOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadProtectedItemResponseOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadProtectedItemResponseOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadProtectedItemResponseOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadProtectedItem'.
func (o AzureVmWorkloadProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureVmWorkloadProtectedItemResponseOutput) ProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) string { return v.ProtectionStatus }).(pulumi.StringOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadProtectedItemResponseOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureVmWorkloadProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureVmWorkloadProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Azure VM (Mercury) workload-specific backup policy.
type AzureVmWorkloadProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureWorkload'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Fix the policy inconsistency
	MakePolicyConsistent *bool `pulumi:"makePolicyConsistent"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Common settings for the backup management
	Settings *Settings `pulumi:"settings"`
	// List of sub-protection policies which includes schedule and retention
	SubProtectionPolicy []SubProtectionPolicy `pulumi:"subProtectionPolicy"`
	// Type of workload for the backup management
	WorkLoadType *string `pulumi:"workLoadType"`
}

// AzureVmWorkloadProtectionPolicyInput is an input type that accepts AzureVmWorkloadProtectionPolicyArgs and AzureVmWorkloadProtectionPolicyOutput values.
// You can construct a concrete instance of `AzureVmWorkloadProtectionPolicyInput` via:
//
//	AzureVmWorkloadProtectionPolicyArgs{...}
type AzureVmWorkloadProtectionPolicyInput interface {
	pulumi.Input

	ToAzureVmWorkloadProtectionPolicyOutput() AzureVmWorkloadProtectionPolicyOutput
	ToAzureVmWorkloadProtectionPolicyOutputWithContext(context.Context) AzureVmWorkloadProtectionPolicyOutput
}

// Azure VM (Mercury) workload-specific backup policy.
type AzureVmWorkloadProtectionPolicyArgs struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureWorkload'.
	BackupManagementType pulumi.StringInput `pulumi:"backupManagementType"`
	// Fix the policy inconsistency
	MakePolicyConsistent pulumi.BoolPtrInput `pulumi:"makePolicyConsistent"`
	// Number of items associated with this policy.
	ProtectedItemsCount pulumi.IntPtrInput `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Common settings for the backup management
	Settings SettingsPtrInput `pulumi:"settings"`
	// List of sub-protection policies which includes schedule and retention
	SubProtectionPolicy SubProtectionPolicyArrayInput `pulumi:"subProtectionPolicy"`
	// Type of workload for the backup management
	WorkLoadType pulumi.StringPtrInput `pulumi:"workLoadType"`
}

func (AzureVmWorkloadProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectionPolicy)(nil)).Elem()
}

func (i AzureVmWorkloadProtectionPolicyArgs) ToAzureVmWorkloadProtectionPolicyOutput() AzureVmWorkloadProtectionPolicyOutput {
	return i.ToAzureVmWorkloadProtectionPolicyOutputWithContext(context.Background())
}

func (i AzureVmWorkloadProtectionPolicyArgs) ToAzureVmWorkloadProtectionPolicyOutputWithContext(ctx context.Context) AzureVmWorkloadProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectionPolicyOutput)
}

func (i AzureVmWorkloadProtectionPolicyArgs) ToAzureVmWorkloadProtectionPolicyPtrOutput() AzureVmWorkloadProtectionPolicyPtrOutput {
	return i.ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i AzureVmWorkloadProtectionPolicyArgs) ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectionPolicyOutput).ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(ctx)
}

// AzureVmWorkloadProtectionPolicyPtrInput is an input type that accepts AzureVmWorkloadProtectionPolicyArgs, AzureVmWorkloadProtectionPolicyPtr and AzureVmWorkloadProtectionPolicyPtrOutput values.
// You can construct a concrete instance of `AzureVmWorkloadProtectionPolicyPtrInput` via:
//
//	        AzureVmWorkloadProtectionPolicyArgs{...}
//
//	or:
//
//	        nil
type AzureVmWorkloadProtectionPolicyPtrInput interface {
	pulumi.Input

	ToAzureVmWorkloadProtectionPolicyPtrOutput() AzureVmWorkloadProtectionPolicyPtrOutput
	ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(context.Context) AzureVmWorkloadProtectionPolicyPtrOutput
}

type azureVmWorkloadProtectionPolicyPtrType AzureVmWorkloadProtectionPolicyArgs

func AzureVmWorkloadProtectionPolicyPtr(v *AzureVmWorkloadProtectionPolicyArgs) AzureVmWorkloadProtectionPolicyPtrInput {
	return (*azureVmWorkloadProtectionPolicyPtrType)(v)
}

func (*azureVmWorkloadProtectionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadProtectionPolicy)(nil)).Elem()
}

func (i *azureVmWorkloadProtectionPolicyPtrType) ToAzureVmWorkloadProtectionPolicyPtrOutput() AzureVmWorkloadProtectionPolicyPtrOutput {
	return i.ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i *azureVmWorkloadProtectionPolicyPtrType) ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadProtectionPolicyPtrOutput)
}

// Azure VM (Mercury) workload-specific backup policy.
type AzureVmWorkloadProtectionPolicyOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectionPolicy)(nil)).Elem()
}

func (o AzureVmWorkloadProtectionPolicyOutput) ToAzureVmWorkloadProtectionPolicyOutput() AzureVmWorkloadProtectionPolicyOutput {
	return o
}

func (o AzureVmWorkloadProtectionPolicyOutput) ToAzureVmWorkloadProtectionPolicyOutputWithContext(ctx context.Context) AzureVmWorkloadProtectionPolicyOutput {
	return o
}

func (o AzureVmWorkloadProtectionPolicyOutput) ToAzureVmWorkloadProtectionPolicyPtrOutput() AzureVmWorkloadProtectionPolicyPtrOutput {
	return o.ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(context.Background())
}

func (o AzureVmWorkloadProtectionPolicyOutput) ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVmWorkloadProtectionPolicy) *AzureVmWorkloadProtectionPolicy {
		return &v
	}).(AzureVmWorkloadProtectionPolicyPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureWorkload'.
func (o AzureVmWorkloadProtectionPolicyOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicy) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Fix the policy inconsistency
func (o AzureVmWorkloadProtectionPolicyOutput) MakePolicyConsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicy) *bool { return v.MakePolicyConsistent }).(pulumi.BoolPtrOutput)
}

// Number of items associated with this policy.
func (o AzureVmWorkloadProtectionPolicyOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicy) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureVmWorkloadProtectionPolicyOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicy) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Common settings for the backup management
func (o AzureVmWorkloadProtectionPolicyOutput) Settings() SettingsPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicy) *Settings { return v.Settings }).(SettingsPtrOutput)
}

// List of sub-protection policies which includes schedule and retention
func (o AzureVmWorkloadProtectionPolicyOutput) SubProtectionPolicy() SubProtectionPolicyArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicy) []SubProtectionPolicy { return v.SubProtectionPolicy }).(SubProtectionPolicyArrayOutput)
}

// Type of workload for the backup management
func (o AzureVmWorkloadProtectionPolicyOutput) WorkLoadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicy) *string { return v.WorkLoadType }).(pulumi.StringPtrOutput)
}

type AzureVmWorkloadProtectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadProtectionPolicy)(nil)).Elem()
}

func (o AzureVmWorkloadProtectionPolicyPtrOutput) ToAzureVmWorkloadProtectionPolicyPtrOutput() AzureVmWorkloadProtectionPolicyPtrOutput {
	return o
}

func (o AzureVmWorkloadProtectionPolicyPtrOutput) ToAzureVmWorkloadProtectionPolicyPtrOutputWithContext(ctx context.Context) AzureVmWorkloadProtectionPolicyPtrOutput {
	return o
}

func (o AzureVmWorkloadProtectionPolicyPtrOutput) Elem() AzureVmWorkloadProtectionPolicyOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectionPolicy) AzureVmWorkloadProtectionPolicy {
		if v != nil {
			return *v
		}
		var ret AzureVmWorkloadProtectionPolicy
		return ret
	}).(AzureVmWorkloadProtectionPolicyOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureWorkload'.
func (o AzureVmWorkloadProtectionPolicyPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Fix the policy inconsistency
func (o AzureVmWorkloadProtectionPolicyPtrOutput) MakePolicyConsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectionPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.MakePolicyConsistent
	}).(pulumi.BoolPtrOutput)
}

// Number of items associated with this policy.
func (o AzureVmWorkloadProtectionPolicyPtrOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.ProtectedItemsCount
	}).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureVmWorkloadProtectionPolicyPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectionPolicy) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Common settings for the backup management
func (o AzureVmWorkloadProtectionPolicyPtrOutput) Settings() SettingsPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectionPolicy) *Settings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(SettingsPtrOutput)
}

// List of sub-protection policies which includes schedule and retention
func (o AzureVmWorkloadProtectionPolicyPtrOutput) SubProtectionPolicy() SubProtectionPolicyArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectionPolicy) []SubProtectionPolicy {
		if v == nil {
			return nil
		}
		return v.SubProtectionPolicy
	}).(SubProtectionPolicyArrayOutput)
}

// Type of workload for the backup management
func (o AzureVmWorkloadProtectionPolicyPtrOutput) WorkLoadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.WorkLoadType
	}).(pulumi.StringPtrOutput)
}

// Azure VM (Mercury) workload-specific backup policy.
type AzureVmWorkloadProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'AzureWorkload'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Fix the policy inconsistency
	MakePolicyConsistent *bool `pulumi:"makePolicyConsistent"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Common settings for the backup management
	Settings *SettingsResponse `pulumi:"settings"`
	// List of sub-protection policies which includes schedule and retention
	SubProtectionPolicy []SubProtectionPolicyResponse `pulumi:"subProtectionPolicy"`
	// Type of workload for the backup management
	WorkLoadType *string `pulumi:"workLoadType"`
}

// Azure VM (Mercury) workload-specific backup policy.
type AzureVmWorkloadProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadProtectionPolicyResponse)(nil)).Elem()
}

func (o AzureVmWorkloadProtectionPolicyResponseOutput) ToAzureVmWorkloadProtectionPolicyResponseOutput() AzureVmWorkloadProtectionPolicyResponseOutput {
	return o
}

func (o AzureVmWorkloadProtectionPolicyResponseOutput) ToAzureVmWorkloadProtectionPolicyResponseOutputWithContext(ctx context.Context) AzureVmWorkloadProtectionPolicyResponseOutput {
	return o
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'AzureWorkload'.
func (o AzureVmWorkloadProtectionPolicyResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicyResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Fix the policy inconsistency
func (o AzureVmWorkloadProtectionPolicyResponseOutput) MakePolicyConsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicyResponse) *bool { return v.MakePolicyConsistent }).(pulumi.BoolPtrOutput)
}

// Number of items associated with this policy.
func (o AzureVmWorkloadProtectionPolicyResponseOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicyResponse) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o AzureVmWorkloadProtectionPolicyResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicyResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Common settings for the backup management
func (o AzureVmWorkloadProtectionPolicyResponseOutput) Settings() SettingsResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicyResponse) *SettingsResponse { return v.Settings }).(SettingsResponsePtrOutput)
}

// List of sub-protection policies which includes schedule and retention
func (o AzureVmWorkloadProtectionPolicyResponseOutput) SubProtectionPolicy() SubProtectionPolicyResponseArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicyResponse) []SubProtectionPolicyResponse {
		return v.SubProtectionPolicy
	}).(SubProtectionPolicyResponseArrayOutput)
}

// Type of workload for the backup management
func (o AzureVmWorkloadProtectionPolicyResponseOutput) WorkLoadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadProtectionPolicyResponse) *string { return v.WorkLoadType }).(pulumi.StringPtrOutput)
}

// Azure VM workload-specific protected item representing SAP ASE Database.
type AzureVmWorkloadSAPAseDatabaseProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfo `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPAseDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureVmWorkloadSAPAseDatabaseProtectedItemInput is an input type that accepts AzureVmWorkloadSAPAseDatabaseProtectedItemArgs and AzureVmWorkloadSAPAseDatabaseProtectedItemOutput values.
// You can construct a concrete instance of `AzureVmWorkloadSAPAseDatabaseProtectedItemInput` via:
//
//	AzureVmWorkloadSAPAseDatabaseProtectedItemArgs{...}
type AzureVmWorkloadSAPAseDatabaseProtectedItemInput interface {
	pulumi.Input

	ToAzureVmWorkloadSAPAseDatabaseProtectedItemOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemOutput
	ToAzureVmWorkloadSAPAseDatabaseProtectedItemOutputWithContext(context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemOutput
}

// Azure VM workload-specific protected item representing SAP ASE Database.
type AzureVmWorkloadSAPAseDatabaseProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureVmWorkloadProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList DistributedNodesInfoArrayInput `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName pulumi.StringPtrInput `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType pulumi.StringPtrInput `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId pulumi.StringPtrInput `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus pulumi.StringPtrInput `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPAseDatabase'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureVmWorkloadSAPAseDatabaseProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPAseDatabaseProtectedItem)(nil)).Elem()
}

func (i AzureVmWorkloadSAPAseDatabaseProtectedItemArgs) ToAzureVmWorkloadSAPAseDatabaseProtectedItemOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemOutput {
	return i.ToAzureVmWorkloadSAPAseDatabaseProtectedItemOutputWithContext(context.Background())
}

func (i AzureVmWorkloadSAPAseDatabaseProtectedItemArgs) ToAzureVmWorkloadSAPAseDatabaseProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPAseDatabaseProtectedItemOutput)
}

func (i AzureVmWorkloadSAPAseDatabaseProtectedItemArgs) ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureVmWorkloadSAPAseDatabaseProtectedItemArgs) ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPAseDatabaseProtectedItemOutput).ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(ctx)
}

// AzureVmWorkloadSAPAseDatabaseProtectedItemPtrInput is an input type that accepts AzureVmWorkloadSAPAseDatabaseProtectedItemArgs, AzureVmWorkloadSAPAseDatabaseProtectedItemPtr and AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureVmWorkloadSAPAseDatabaseProtectedItemPtrInput` via:
//
//	        AzureVmWorkloadSAPAseDatabaseProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureVmWorkloadSAPAseDatabaseProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput
	ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput
}

type azureVmWorkloadSAPAseDatabaseProtectedItemPtrType AzureVmWorkloadSAPAseDatabaseProtectedItemArgs

func AzureVmWorkloadSAPAseDatabaseProtectedItemPtr(v *AzureVmWorkloadSAPAseDatabaseProtectedItemArgs) AzureVmWorkloadSAPAseDatabaseProtectedItemPtrInput {
	return (*azureVmWorkloadSAPAseDatabaseProtectedItemPtrType)(v)
}

func (*azureVmWorkloadSAPAseDatabaseProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadSAPAseDatabaseProtectedItem)(nil)).Elem()
}

func (i *azureVmWorkloadSAPAseDatabaseProtectedItemPtrType) ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureVmWorkloadSAPAseDatabaseProtectedItemPtrType) ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput)
}

// Azure VM workload-specific protected item representing SAP ASE Database.
type AzureVmWorkloadSAPAseDatabaseProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPAseDatabaseProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ToAzureVmWorkloadSAPAseDatabaseProtectedItemOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ToAzureVmWorkloadSAPAseDatabaseProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput {
	return o.ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVmWorkloadSAPAseDatabaseProtectedItem) *AzureVmWorkloadSAPAseDatabaseProtectedItem {
		return &v
	}).(AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) map[string]KPIResourceHealthDetails {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) []DistributedNodesInfo { return v.NodesList }).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPAseDatabase'.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadSAPAseDatabaseProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ToAzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) Elem() AzureVmWorkloadSAPAseDatabaseProtectedItemOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) AzureVmWorkloadSAPAseDatabaseProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureVmWorkloadSAPAseDatabaseProtectedItem
		return ret
	}).(AzureVmWorkloadSAPAseDatabaseProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) []DistributedNodesInfo {
		if v == nil {
			return nil
		}
		return v.NodesList
	}).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentName
	}).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentType
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemDataSourceId
	}).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemHealthStatus
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPAseDatabase'.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPAseDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure VM workload-specific protected item representing SAP ASE Database.
type AzureVmWorkloadSAPAseDatabaseProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Error details in last backup
	LastBackupErrorDetail *ErrorDetailResponse `pulumi:"lastBackupErrorDetail"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfoResponse `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPAseDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Azure VM workload-specific protected item representing SAP ASE Database.
type AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPAseDatabaseProtectedItemResponse)(nil)).Elem()
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ToAzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput() AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput {
	return o
}

func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ToAzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutputWithContext(ctx context.Context) AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string {
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *AzureVmWorkloadProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the DB represented by this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *bool {
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *bool {
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Error details in last backup
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) LastBackupErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *ErrorDetailResponse {
		return v.LastBackupErrorDetail
	}).(ErrorDetailResponsePtrOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) NodesList() DistributedNodesInfoResponseArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) []DistributedNodesInfoResponse {
		return v.NodesList
	}).(DistributedNodesInfoResponseArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPAseDatabase'.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) string { return v.ProtectionStatus }).(pulumi.StringOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) []string {
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *int {
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPAseDatabaseProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Azure VM workload-specific protected item representing SAP HANA DBInstance.
type AzureVmWorkloadSAPHanaDBInstanceProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfo `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPHanaDBInstance'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureVmWorkloadSAPHanaDBInstanceProtectedItemInput is an input type that accepts AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs and AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput values.
// You can construct a concrete instance of `AzureVmWorkloadSAPHanaDBInstanceProtectedItemInput` via:
//
//	AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs{...}
type AzureVmWorkloadSAPHanaDBInstanceProtectedItemInput interface {
	pulumi.Input

	ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput
	ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemOutputWithContext(context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput
}

// Azure VM workload-specific protected item representing SAP HANA DBInstance.
type AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureVmWorkloadProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList DistributedNodesInfoArrayInput `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName pulumi.StringPtrInput `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType pulumi.StringPtrInput `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId pulumi.StringPtrInput `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus pulumi.StringPtrInput `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPHanaDBInstance'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPHanaDBInstanceProtectedItem)(nil)).Elem()
}

func (i AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput {
	return i.ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemOutputWithContext(context.Background())
}

func (i AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput)
}

func (i AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput).ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(ctx)
}

// AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrInput is an input type that accepts AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs, AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtr and AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrInput` via:
//
//	        AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput
	ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput
}

type azureVmWorkloadSAPHanaDBInstanceProtectedItemPtrType AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs

func AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtr(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItemArgs) AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrInput {
	return (*azureVmWorkloadSAPHanaDBInstanceProtectedItemPtrType)(v)
}

func (*azureVmWorkloadSAPHanaDBInstanceProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadSAPHanaDBInstanceProtectedItem)(nil)).Elem()
}

func (i *azureVmWorkloadSAPHanaDBInstanceProtectedItemPtrType) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureVmWorkloadSAPHanaDBInstanceProtectedItemPtrType) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput)
}

// Azure VM workload-specific protected item representing SAP HANA DBInstance.
type AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPHanaDBInstanceProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput {
	return o.ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *AzureVmWorkloadSAPHanaDBInstanceProtectedItem {
		return &v
	}).(AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) map[string]KPIResourceHealthDetails {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) []DistributedNodesInfo { return v.NodesList }).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPHanaDBInstance'.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) []string {
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadSAPHanaDBInstanceProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) Elem() AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) AzureVmWorkloadSAPHanaDBInstanceProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureVmWorkloadSAPHanaDBInstanceProtectedItem
		return ret
	}).(AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) []DistributedNodesInfo {
		if v == nil {
			return nil
		}
		return v.NodesList
	}).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentName
	}).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentType
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemDataSourceId
	}).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemHealthStatus
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPHanaDBInstance'.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDBInstanceProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure VM workload-specific protected item representing SAP HANA DBInstance.
type AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Error details in last backup
	LastBackupErrorDetail *ErrorDetailResponse `pulumi:"lastBackupErrorDetail"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfoResponse `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPHanaDBInstance'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Azure VM workload-specific protected item representing SAP HANA DBInstance.
type AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse)(nil)).Elem()
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput() AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ToAzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string {
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string {
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *AzureVmWorkloadProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the DB represented by this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *bool {
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *bool {
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Error details in last backup
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) LastBackupErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *ErrorDetailResponse {
		return v.LastBackupErrorDetail
	}).(ErrorDetailResponsePtrOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) NodesList() DistributedNodesInfoResponseArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) []DistributedNodesInfoResponse {
		return v.NodesList
	}).(DistributedNodesInfoResponseArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string {
		return v.ProtectedItemDataSourceId
	}).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string {
		return v.ProtectedItemHealthStatus
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPHanaDBInstance'.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) string { return v.ProtectionStatus }).(pulumi.StringOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) []string {
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *int {
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Azure VM workload-specific protected item representing SAP HANA Database.
type AzureVmWorkloadSAPHanaDatabaseProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfo `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPHanaDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureVmWorkloadSAPHanaDatabaseProtectedItemInput is an input type that accepts AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs and AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput values.
// You can construct a concrete instance of `AzureVmWorkloadSAPHanaDatabaseProtectedItemInput` via:
//
//	AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs{...}
type AzureVmWorkloadSAPHanaDatabaseProtectedItemInput interface {
	pulumi.Input

	ToAzureVmWorkloadSAPHanaDatabaseProtectedItemOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput
	ToAzureVmWorkloadSAPHanaDatabaseProtectedItemOutputWithContext(context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput
}

// Azure VM workload-specific protected item representing SAP HANA Database.
type AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureVmWorkloadProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList DistributedNodesInfoArrayInput `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName pulumi.StringPtrInput `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType pulumi.StringPtrInput `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId pulumi.StringPtrInput `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus pulumi.StringPtrInput `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPHanaDatabase'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPHanaDatabaseProtectedItem)(nil)).Elem()
}

func (i AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput {
	return i.ToAzureVmWorkloadSAPHanaDatabaseProtectedItemOutputWithContext(context.Background())
}

func (i AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput)
}

func (i AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput).ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(ctx)
}

// AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrInput is an input type that accepts AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs, AzureVmWorkloadSAPHanaDatabaseProtectedItemPtr and AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrInput` via:
//
//	        AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput
	ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput
}

type azureVmWorkloadSAPHanaDatabaseProtectedItemPtrType AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs

func AzureVmWorkloadSAPHanaDatabaseProtectedItemPtr(v *AzureVmWorkloadSAPHanaDatabaseProtectedItemArgs) AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrInput {
	return (*azureVmWorkloadSAPHanaDatabaseProtectedItemPtrType)(v)
}

func (*azureVmWorkloadSAPHanaDatabaseProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadSAPHanaDatabaseProtectedItem)(nil)).Elem()
}

func (i *azureVmWorkloadSAPHanaDatabaseProtectedItemPtrType) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureVmWorkloadSAPHanaDatabaseProtectedItemPtrType) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput)
}

// Azure VM workload-specific protected item representing SAP HANA Database.
type AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPHanaDatabaseProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput {
	return o.ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *AzureVmWorkloadSAPHanaDatabaseProtectedItem {
		return &v
	}).(AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) map[string]KPIResourceHealthDetails {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) []DistributedNodesInfo { return v.NodesList }).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPHanaDatabase'.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadSAPHanaDatabaseProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) Elem() AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) AzureVmWorkloadSAPHanaDatabaseProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureVmWorkloadSAPHanaDatabaseProtectedItem
		return ret
	}).(AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) []DistributedNodesInfo {
		if v == nil {
			return nil
		}
		return v.NodesList
	}).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentName
	}).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentType
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemDataSourceId
	}).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemHealthStatus
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPHanaDatabase'.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSAPHanaDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure VM workload-specific protected item representing SAP HANA Database.
type AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Error details in last backup
	LastBackupErrorDetail *ErrorDetailResponse `pulumi:"lastBackupErrorDetail"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfoResponse `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSAPHanaDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Azure VM workload-specific protected item representing SAP HANA Database.
type AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse)(nil)).Elem()
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput() AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput {
	return o
}

func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ToAzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutputWithContext(ctx context.Context) AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string {
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *AzureVmWorkloadProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the DB represented by this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *bool {
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *bool {
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Error details in last backup
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) LastBackupErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *ErrorDetailResponse {
		return v.LastBackupErrorDetail
	}).(ErrorDetailResponsePtrOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) NodesList() DistributedNodesInfoResponseArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) []DistributedNodesInfoResponse {
		return v.NodesList
	}).(DistributedNodesInfoResponseArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string {
		return v.ProtectedItemDataSourceId
	}).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string {
		return v.ProtectedItemHealthStatus
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSAPHanaDatabase'.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) string { return v.ProtectionStatus }).(pulumi.StringOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) []string {
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *int {
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSAPHanaDatabaseProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Azure VM workload-specific protected item representing SQL Database.
type AzureVmWorkloadSQLDatabaseProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetails `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfo `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSQLDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureVmWorkloadSQLDatabaseProtectedItemInput is an input type that accepts AzureVmWorkloadSQLDatabaseProtectedItemArgs and AzureVmWorkloadSQLDatabaseProtectedItemOutput values.
// You can construct a concrete instance of `AzureVmWorkloadSQLDatabaseProtectedItemInput` via:
//
//	AzureVmWorkloadSQLDatabaseProtectedItemArgs{...}
type AzureVmWorkloadSQLDatabaseProtectedItemInput interface {
	pulumi.Input

	ToAzureVmWorkloadSQLDatabaseProtectedItemOutput() AzureVmWorkloadSQLDatabaseProtectedItemOutput
	ToAzureVmWorkloadSQLDatabaseProtectedItemOutputWithContext(context.Context) AzureVmWorkloadSQLDatabaseProtectedItemOutput
}

// Azure VM workload-specific protected item representing SQL Database.
type AzureVmWorkloadSQLDatabaseProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo AzureVmWorkloadProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths KPIResourceHealthDetailsMapInput `pulumi:"kpisHealths"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList DistributedNodesInfoArrayInput `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName pulumi.StringPtrInput `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType pulumi.StringPtrInput `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId pulumi.StringPtrInput `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus pulumi.StringPtrInput `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSQLDatabase'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureVmWorkloadSQLDatabaseProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSQLDatabaseProtectedItem)(nil)).Elem()
}

func (i AzureVmWorkloadSQLDatabaseProtectedItemArgs) ToAzureVmWorkloadSQLDatabaseProtectedItemOutput() AzureVmWorkloadSQLDatabaseProtectedItemOutput {
	return i.ToAzureVmWorkloadSQLDatabaseProtectedItemOutputWithContext(context.Background())
}

func (i AzureVmWorkloadSQLDatabaseProtectedItemArgs) ToAzureVmWorkloadSQLDatabaseProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadSQLDatabaseProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSQLDatabaseProtectedItemOutput)
}

func (i AzureVmWorkloadSQLDatabaseProtectedItemArgs) ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutput() AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (i AzureVmWorkloadSQLDatabaseProtectedItemArgs) ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSQLDatabaseProtectedItemOutput).ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(ctx)
}

// AzureVmWorkloadSQLDatabaseProtectedItemPtrInput is an input type that accepts AzureVmWorkloadSQLDatabaseProtectedItemArgs, AzureVmWorkloadSQLDatabaseProtectedItemPtr and AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput values.
// You can construct a concrete instance of `AzureVmWorkloadSQLDatabaseProtectedItemPtrInput` via:
//
//	        AzureVmWorkloadSQLDatabaseProtectedItemArgs{...}
//
//	or:
//
//	        nil
type AzureVmWorkloadSQLDatabaseProtectedItemPtrInput interface {
	pulumi.Input

	ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutput() AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput
	ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(context.Context) AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput
}

type azureVmWorkloadSQLDatabaseProtectedItemPtrType AzureVmWorkloadSQLDatabaseProtectedItemArgs

func AzureVmWorkloadSQLDatabaseProtectedItemPtr(v *AzureVmWorkloadSQLDatabaseProtectedItemArgs) AzureVmWorkloadSQLDatabaseProtectedItemPtrInput {
	return (*azureVmWorkloadSQLDatabaseProtectedItemPtrType)(v)
}

func (*azureVmWorkloadSQLDatabaseProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadSQLDatabaseProtectedItem)(nil)).Elem()
}

func (i *azureVmWorkloadSQLDatabaseProtectedItemPtrType) ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutput() AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput {
	return i.ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (i *azureVmWorkloadSQLDatabaseProtectedItemPtrType) ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput)
}

// Azure VM workload-specific protected item representing SQL Database.
type AzureVmWorkloadSQLDatabaseProtectedItemOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSQLDatabaseProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSQLDatabaseProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ToAzureVmWorkloadSQLDatabaseProtectedItemOutput() AzureVmWorkloadSQLDatabaseProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ToAzureVmWorkloadSQLDatabaseProtectedItemOutputWithContext(ctx context.Context) AzureVmWorkloadSQLDatabaseProtectedItemOutput {
	return o
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutput() AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput {
	return o.ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(context.Background())
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureVmWorkloadSQLDatabaseProtectedItem) *AzureVmWorkloadSQLDatabaseProtectedItem {
		return &v
	}).(AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) map[string]KPIResourceHealthDetails {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) []DistributedNodesInfo { return v.NodesList }).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSQLDatabase'.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSQLDatabaseProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureVmWorkloadSQLDatabaseProtectedItem)(nil)).Elem()
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutput() AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ToAzureVmWorkloadSQLDatabaseProtectedItemPtrOutputWithContext(ctx context.Context) AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput {
	return o
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) Elem() AzureVmWorkloadSQLDatabaseProtectedItemOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) AzureVmWorkloadSQLDatabaseProtectedItem {
		if v != nil {
			return *v
		}
		var ret AzureVmWorkloadSQLDatabaseProtectedItem
		return ret
	}).(AzureVmWorkloadSQLDatabaseProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *AzureVmWorkloadProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) KpisHealths() KPIResourceHealthDetailsMapOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) map[string]KPIResourceHealthDetails {
		if v == nil {
			return nil
		}
		return v.KpisHealths
	}).(KPIResourceHealthDetailsMapOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) []DistributedNodesInfo {
		if v == nil {
			return nil
		}
		return v.NodesList
	}).(DistributedNodesInfoArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentName
	}).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ParentType
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemDataSourceId
	}).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectedItemHealthStatus
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSQLDatabase'.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureVmWorkloadSQLDatabaseProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure VM workload-specific protected item representing SQL Database.
type AzureVmWorkloadSQLDatabaseProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information for this backup item.
	ExtendedInfo *AzureVmWorkloadProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the DB represented by this backup item.
	FriendlyName string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Health details of different KPIs
	KpisHealths map[string]KPIResourceHealthDetailsResponse `pulumi:"kpisHealths"`
	// Error details in last backup
	LastBackupErrorDetail *ErrorDetailResponse `pulumi:"lastBackupErrorDetail"`
	// Last backup operation status. Possible values: Healthy, Unhealthy.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfoResponse `pulumi:"nodesList"`
	// Parent name of the DB such as Instance or Availability Group.
	ParentName *string `pulumi:"parentName"`
	// Parent type of protected item, example: for a DB, standalone server or distributed
	ParentType *string `pulumi:"parentType"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Data ID of the protected item.
	ProtectedItemDataSourceId *string `pulumi:"protectedItemDataSourceId"`
	// Health status of the backup item, evaluated based on last heartbeat received
	ProtectedItemHealthStatus *string `pulumi:"protectedItemHealthStatus"`
	// backup item type.
	// Expected value is 'AzureVmWorkloadSQLDatabase'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// Backup status of this backup item.
	ProtectionStatus string `pulumi:"protectionStatus"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Host/Cluster Name for instance or AG
	ServerName *string `pulumi:"serverName"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Azure VM workload-specific protected item representing SQL Database.
type AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureVmWorkloadSQLDatabaseProtectedItemResponse)(nil)).Elem()
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ToAzureVmWorkloadSQLDatabaseProtectedItemResponseOutput() AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput {
	return o
}

func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ToAzureVmWorkloadSQLDatabaseProtectedItemResponseOutputWithContext(ctx context.Context) AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information for this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ExtendedInfo() AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *AzureVmWorkloadProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the DB represented by this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// Flag to identify whether datasource is protected in archive
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *bool {
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Health details of different KPIs
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) KpisHealths() KPIResourceHealthDetailsResponseMapOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) map[string]KPIResourceHealthDetailsResponse {
		return v.KpisHealths
	}).(KPIResourceHealthDetailsResponseMapOutput)
}

// Error details in last backup
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) LastBackupErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *ErrorDetailResponse {
		return v.LastBackupErrorDetail
	}).(ErrorDetailResponsePtrOutput)
}

// Last backup operation status. Possible values: Healthy, Unhealthy.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) NodesList() DistributedNodesInfoResponseArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) []DistributedNodesInfoResponse {
		return v.NodesList
	}).(DistributedNodesInfoResponseArrayOutput)
}

// Parent name of the DB such as Instance or Availability Group.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ParentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.ParentName }).(pulumi.StringPtrOutput)
}

// Parent type of protected item, example: for a DB, standalone server or distributed
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ParentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.ParentType }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Data ID of the protected item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ProtectedItemDataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.ProtectedItemDataSourceId }).(pulumi.StringPtrOutput)
}

// Health status of the backup item, evaluated based on last heartbeat received
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ProtectedItemHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.ProtectedItemHealthStatus }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'AzureVmWorkloadSQLDatabase'.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// Backup status of this backup item.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) string { return v.ProtectionStatus }).(pulumi.StringOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) []string {
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Host/Cluster Name for instance or AG
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureVmWorkloadSQLDatabaseProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Azure Recovery Services Vault specific protection intent item.
type AzureWorkloadAutoProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureWorkloadAutoProtectionIntentInput is an input type that accepts AzureWorkloadAutoProtectionIntentArgs and AzureWorkloadAutoProtectionIntentOutput values.
// You can construct a concrete instance of `AzureWorkloadAutoProtectionIntentInput` via:
//
//	AzureWorkloadAutoProtectionIntentArgs{...}
type AzureWorkloadAutoProtectionIntentInput interface {
	pulumi.Input

	ToAzureWorkloadAutoProtectionIntentOutput() AzureWorkloadAutoProtectionIntentOutput
	ToAzureWorkloadAutoProtectionIntentOutputWithContext(context.Context) AzureWorkloadAutoProtectionIntentOutput
}

// Azure Recovery Services Vault specific protection intent item.
type AzureWorkloadAutoProtectionIntentArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId pulumi.StringPtrInput `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadAutoProtectionIntent'.
	ProtectionIntentItemType pulumi.StringInput `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureWorkloadAutoProtectionIntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadAutoProtectionIntent)(nil)).Elem()
}

func (i AzureWorkloadAutoProtectionIntentArgs) ToAzureWorkloadAutoProtectionIntentOutput() AzureWorkloadAutoProtectionIntentOutput {
	return i.ToAzureWorkloadAutoProtectionIntentOutputWithContext(context.Background())
}

func (i AzureWorkloadAutoProtectionIntentArgs) ToAzureWorkloadAutoProtectionIntentOutputWithContext(ctx context.Context) AzureWorkloadAutoProtectionIntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadAutoProtectionIntentOutput)
}

func (i AzureWorkloadAutoProtectionIntentArgs) ToAzureWorkloadAutoProtectionIntentPtrOutput() AzureWorkloadAutoProtectionIntentPtrOutput {
	return i.ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (i AzureWorkloadAutoProtectionIntentArgs) ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadAutoProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadAutoProtectionIntentOutput).ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(ctx)
}

// AzureWorkloadAutoProtectionIntentPtrInput is an input type that accepts AzureWorkloadAutoProtectionIntentArgs, AzureWorkloadAutoProtectionIntentPtr and AzureWorkloadAutoProtectionIntentPtrOutput values.
// You can construct a concrete instance of `AzureWorkloadAutoProtectionIntentPtrInput` via:
//
//	        AzureWorkloadAutoProtectionIntentArgs{...}
//
//	or:
//
//	        nil
type AzureWorkloadAutoProtectionIntentPtrInput interface {
	pulumi.Input

	ToAzureWorkloadAutoProtectionIntentPtrOutput() AzureWorkloadAutoProtectionIntentPtrOutput
	ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(context.Context) AzureWorkloadAutoProtectionIntentPtrOutput
}

type azureWorkloadAutoProtectionIntentPtrType AzureWorkloadAutoProtectionIntentArgs

func AzureWorkloadAutoProtectionIntentPtr(v *AzureWorkloadAutoProtectionIntentArgs) AzureWorkloadAutoProtectionIntentPtrInput {
	return (*azureWorkloadAutoProtectionIntentPtrType)(v)
}

func (*azureWorkloadAutoProtectionIntentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadAutoProtectionIntent)(nil)).Elem()
}

func (i *azureWorkloadAutoProtectionIntentPtrType) ToAzureWorkloadAutoProtectionIntentPtrOutput() AzureWorkloadAutoProtectionIntentPtrOutput {
	return i.ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (i *azureWorkloadAutoProtectionIntentPtrType) ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadAutoProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadAutoProtectionIntentPtrOutput)
}

// Azure Recovery Services Vault specific protection intent item.
type AzureWorkloadAutoProtectionIntentOutput struct{ *pulumi.OutputState }

func (AzureWorkloadAutoProtectionIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadAutoProtectionIntent)(nil)).Elem()
}

func (o AzureWorkloadAutoProtectionIntentOutput) ToAzureWorkloadAutoProtectionIntentOutput() AzureWorkloadAutoProtectionIntentOutput {
	return o
}

func (o AzureWorkloadAutoProtectionIntentOutput) ToAzureWorkloadAutoProtectionIntentOutputWithContext(ctx context.Context) AzureWorkloadAutoProtectionIntentOutput {
	return o
}

func (o AzureWorkloadAutoProtectionIntentOutput) ToAzureWorkloadAutoProtectionIntentPtrOutput() AzureWorkloadAutoProtectionIntentPtrOutput {
	return o.ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (o AzureWorkloadAutoProtectionIntentOutput) ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadAutoProtectionIntentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureWorkloadAutoProtectionIntent) *AzureWorkloadAutoProtectionIntent {
		return &v
	}).(AzureWorkloadAutoProtectionIntentPtrOutput)
}

// Type of backup management for the backed up item.
func (o AzureWorkloadAutoProtectionIntentOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntent) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadAutoProtectionIntentOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntent) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadAutoProtectionIntentOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntent) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadAutoProtectionIntent'.
func (o AzureWorkloadAutoProtectionIntentOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntent) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadAutoProtectionIntentOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntent) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadAutoProtectionIntentOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntent) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureWorkloadAutoProtectionIntentPtrOutput struct{ *pulumi.OutputState }

func (AzureWorkloadAutoProtectionIntentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadAutoProtectionIntent)(nil)).Elem()
}

func (o AzureWorkloadAutoProtectionIntentPtrOutput) ToAzureWorkloadAutoProtectionIntentPtrOutput() AzureWorkloadAutoProtectionIntentPtrOutput {
	return o
}

func (o AzureWorkloadAutoProtectionIntentPtrOutput) ToAzureWorkloadAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadAutoProtectionIntentPtrOutput {
	return o
}

func (o AzureWorkloadAutoProtectionIntentPtrOutput) Elem() AzureWorkloadAutoProtectionIntentOutput {
	return o.ApplyT(func(v *AzureWorkloadAutoProtectionIntent) AzureWorkloadAutoProtectionIntent {
		if v != nil {
			return *v
		}
		var ret AzureWorkloadAutoProtectionIntent
		return ret
	}).(AzureWorkloadAutoProtectionIntentOutput)
}

// Type of backup management for the backed up item.
func (o AzureWorkloadAutoProtectionIntentPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadAutoProtectionIntentPtrOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ItemId
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadAutoProtectionIntentPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadAutoProtectionIntent'.
func (o AzureWorkloadAutoProtectionIntentPtrOutput) ProtectionIntentItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectionIntentItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadAutoProtectionIntentPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadAutoProtectionIntentPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure Recovery Services Vault specific protection intent item.
type AzureWorkloadAutoProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// Azure Recovery Services Vault specific protection intent item.
type AzureWorkloadAutoProtectionIntentResponseOutput struct{ *pulumi.OutputState }

func (AzureWorkloadAutoProtectionIntentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadAutoProtectionIntentResponse)(nil)).Elem()
}

func (o AzureWorkloadAutoProtectionIntentResponseOutput) ToAzureWorkloadAutoProtectionIntentResponseOutput() AzureWorkloadAutoProtectionIntentResponseOutput {
	return o
}

func (o AzureWorkloadAutoProtectionIntentResponseOutput) ToAzureWorkloadAutoProtectionIntentResponseOutputWithContext(ctx context.Context) AzureWorkloadAutoProtectionIntentResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureWorkloadAutoProtectionIntentResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntentResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadAutoProtectionIntentResponseOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntentResponse) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadAutoProtectionIntentResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntentResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadAutoProtectionIntent'.
func (o AzureWorkloadAutoProtectionIntentResponseOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntentResponse) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadAutoProtectionIntentResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntentResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadAutoProtectionIntentResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadAutoProtectionIntentResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Container for the workloads running inside Azure Compute or Classic Compute.
type AzureWorkloadContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureWorkloadContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// AzureWorkloadContainerInput is an input type that accepts AzureWorkloadContainerArgs and AzureWorkloadContainerOutput values.
// You can construct a concrete instance of `AzureWorkloadContainerInput` via:
//
//	AzureWorkloadContainerArgs{...}
type AzureWorkloadContainerInput interface {
	pulumi.Input

	ToAzureWorkloadContainerOutput() AzureWorkloadContainerOutput
	ToAzureWorkloadContainerOutputWithContext(context.Context) AzureWorkloadContainerOutput
}

// Container for the workloads running inside Azure Compute or Classic Compute.
type AzureWorkloadContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureWorkloadContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo AzureWorkloadContainerExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime pulumi.StringPtrInput `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType pulumi.StringPtrInput `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (AzureWorkloadContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainer)(nil)).Elem()
}

func (i AzureWorkloadContainerArgs) ToAzureWorkloadContainerOutput() AzureWorkloadContainerOutput {
	return i.ToAzureWorkloadContainerOutputWithContext(context.Background())
}

func (i AzureWorkloadContainerArgs) ToAzureWorkloadContainerOutputWithContext(ctx context.Context) AzureWorkloadContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerOutput)
}

func (i AzureWorkloadContainerArgs) ToAzureWorkloadContainerPtrOutput() AzureWorkloadContainerPtrOutput {
	return i.ToAzureWorkloadContainerPtrOutputWithContext(context.Background())
}

func (i AzureWorkloadContainerArgs) ToAzureWorkloadContainerPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerOutput).ToAzureWorkloadContainerPtrOutputWithContext(ctx)
}

// AzureWorkloadContainerPtrInput is an input type that accepts AzureWorkloadContainerArgs, AzureWorkloadContainerPtr and AzureWorkloadContainerPtrOutput values.
// You can construct a concrete instance of `AzureWorkloadContainerPtrInput` via:
//
//	        AzureWorkloadContainerArgs{...}
//
//	or:
//
//	        nil
type AzureWorkloadContainerPtrInput interface {
	pulumi.Input

	ToAzureWorkloadContainerPtrOutput() AzureWorkloadContainerPtrOutput
	ToAzureWorkloadContainerPtrOutputWithContext(context.Context) AzureWorkloadContainerPtrOutput
}

type azureWorkloadContainerPtrType AzureWorkloadContainerArgs

func AzureWorkloadContainerPtr(v *AzureWorkloadContainerArgs) AzureWorkloadContainerPtrInput {
	return (*azureWorkloadContainerPtrType)(v)
}

func (*azureWorkloadContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadContainer)(nil)).Elem()
}

func (i *azureWorkloadContainerPtrType) ToAzureWorkloadContainerPtrOutput() AzureWorkloadContainerPtrOutput {
	return i.ToAzureWorkloadContainerPtrOutputWithContext(context.Background())
}

func (i *azureWorkloadContainerPtrType) ToAzureWorkloadContainerPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerPtrOutput)
}

// Container for the workloads running inside Azure Compute or Classic Compute.
type AzureWorkloadContainerOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainer)(nil)).Elem()
}

func (o AzureWorkloadContainerOutput) ToAzureWorkloadContainerOutput() AzureWorkloadContainerOutput {
	return o
}

func (o AzureWorkloadContainerOutput) ToAzureWorkloadContainerOutputWithContext(ctx context.Context) AzureWorkloadContainerOutput {
	return o
}

func (o AzureWorkloadContainerOutput) ToAzureWorkloadContainerPtrOutput() AzureWorkloadContainerPtrOutput {
	return o.ToAzureWorkloadContainerPtrOutputWithContext(context.Background())
}

func (o AzureWorkloadContainerOutput) ToAzureWorkloadContainerPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureWorkloadContainer) *AzureWorkloadContainer {
		return &v
	}).(AzureWorkloadContainerPtrOutput)
}

// Type of backup management for the container.
func (o AzureWorkloadContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureWorkloadContainer'.
func (o AzureWorkloadContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Additional details of a workload container.
func (o AzureWorkloadContainerOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *AzureWorkloadContainerExtendedInfo { return v.ExtendedInfo }).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o AzureWorkloadContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureWorkloadContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureWorkloadContainerOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureWorkloadContainerOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.OperationType }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureWorkloadContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureWorkloadContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureWorkloadContainerOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureWorkloadContainerOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainer) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

type AzureWorkloadContainerPtrOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadContainer)(nil)).Elem()
}

func (o AzureWorkloadContainerPtrOutput) ToAzureWorkloadContainerPtrOutput() AzureWorkloadContainerPtrOutput {
	return o
}

func (o AzureWorkloadContainerPtrOutput) ToAzureWorkloadContainerPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerPtrOutput {
	return o
}

func (o AzureWorkloadContainerPtrOutput) Elem() AzureWorkloadContainerOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) AzureWorkloadContainer {
		if v != nil {
			return *v
		}
		var ret AzureWorkloadContainer
		return ret
	}).(AzureWorkloadContainerOutput)
}

// Type of backup management for the container.
func (o AzureWorkloadContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureWorkloadContainer'.
func (o AzureWorkloadContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Additional details of a workload container.
func (o AzureWorkloadContainerPtrOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *AzureWorkloadContainerExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o AzureWorkloadContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureWorkloadContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureWorkloadContainerPtrOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdatedTime
	}).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureWorkloadContainerPtrOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.OperationType
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureWorkloadContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureWorkloadContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureWorkloadContainerPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureWorkloadContainerPtrOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainer) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadType
	}).(pulumi.StringPtrOutput)
}

// Azure workload specific protection intent item.
type AzureWorkloadContainerAutoProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadContainerAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// AzureWorkloadContainerAutoProtectionIntentInput is an input type that accepts AzureWorkloadContainerAutoProtectionIntentArgs and AzureWorkloadContainerAutoProtectionIntentOutput values.
// You can construct a concrete instance of `AzureWorkloadContainerAutoProtectionIntentInput` via:
//
//	AzureWorkloadContainerAutoProtectionIntentArgs{...}
type AzureWorkloadContainerAutoProtectionIntentInput interface {
	pulumi.Input

	ToAzureWorkloadContainerAutoProtectionIntentOutput() AzureWorkloadContainerAutoProtectionIntentOutput
	ToAzureWorkloadContainerAutoProtectionIntentOutputWithContext(context.Context) AzureWorkloadContainerAutoProtectionIntentOutput
}

// Azure workload specific protection intent item.
type AzureWorkloadContainerAutoProtectionIntentArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId pulumi.StringPtrInput `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadContainerAutoProtectionIntent'.
	ProtectionIntentItemType pulumi.StringInput `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (AzureWorkloadContainerAutoProtectionIntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerAutoProtectionIntent)(nil)).Elem()
}

func (i AzureWorkloadContainerAutoProtectionIntentArgs) ToAzureWorkloadContainerAutoProtectionIntentOutput() AzureWorkloadContainerAutoProtectionIntentOutput {
	return i.ToAzureWorkloadContainerAutoProtectionIntentOutputWithContext(context.Background())
}

func (i AzureWorkloadContainerAutoProtectionIntentArgs) ToAzureWorkloadContainerAutoProtectionIntentOutputWithContext(ctx context.Context) AzureWorkloadContainerAutoProtectionIntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerAutoProtectionIntentOutput)
}

func (i AzureWorkloadContainerAutoProtectionIntentArgs) ToAzureWorkloadContainerAutoProtectionIntentPtrOutput() AzureWorkloadContainerAutoProtectionIntentPtrOutput {
	return i.ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (i AzureWorkloadContainerAutoProtectionIntentArgs) ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerAutoProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerAutoProtectionIntentOutput).ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(ctx)
}

// AzureWorkloadContainerAutoProtectionIntentPtrInput is an input type that accepts AzureWorkloadContainerAutoProtectionIntentArgs, AzureWorkloadContainerAutoProtectionIntentPtr and AzureWorkloadContainerAutoProtectionIntentPtrOutput values.
// You can construct a concrete instance of `AzureWorkloadContainerAutoProtectionIntentPtrInput` via:
//
//	        AzureWorkloadContainerAutoProtectionIntentArgs{...}
//
//	or:
//
//	        nil
type AzureWorkloadContainerAutoProtectionIntentPtrInput interface {
	pulumi.Input

	ToAzureWorkloadContainerAutoProtectionIntentPtrOutput() AzureWorkloadContainerAutoProtectionIntentPtrOutput
	ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(context.Context) AzureWorkloadContainerAutoProtectionIntentPtrOutput
}

type azureWorkloadContainerAutoProtectionIntentPtrType AzureWorkloadContainerAutoProtectionIntentArgs

func AzureWorkloadContainerAutoProtectionIntentPtr(v *AzureWorkloadContainerAutoProtectionIntentArgs) AzureWorkloadContainerAutoProtectionIntentPtrInput {
	return (*azureWorkloadContainerAutoProtectionIntentPtrType)(v)
}

func (*azureWorkloadContainerAutoProtectionIntentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadContainerAutoProtectionIntent)(nil)).Elem()
}

func (i *azureWorkloadContainerAutoProtectionIntentPtrType) ToAzureWorkloadContainerAutoProtectionIntentPtrOutput() AzureWorkloadContainerAutoProtectionIntentPtrOutput {
	return i.ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (i *azureWorkloadContainerAutoProtectionIntentPtrType) ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerAutoProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerAutoProtectionIntentPtrOutput)
}

// Azure workload specific protection intent item.
type AzureWorkloadContainerAutoProtectionIntentOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerAutoProtectionIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerAutoProtectionIntent)(nil)).Elem()
}

func (o AzureWorkloadContainerAutoProtectionIntentOutput) ToAzureWorkloadContainerAutoProtectionIntentOutput() AzureWorkloadContainerAutoProtectionIntentOutput {
	return o
}

func (o AzureWorkloadContainerAutoProtectionIntentOutput) ToAzureWorkloadContainerAutoProtectionIntentOutputWithContext(ctx context.Context) AzureWorkloadContainerAutoProtectionIntentOutput {
	return o
}

func (o AzureWorkloadContainerAutoProtectionIntentOutput) ToAzureWorkloadContainerAutoProtectionIntentPtrOutput() AzureWorkloadContainerAutoProtectionIntentPtrOutput {
	return o.ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (o AzureWorkloadContainerAutoProtectionIntentOutput) ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerAutoProtectionIntentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureWorkloadContainerAutoProtectionIntent) *AzureWorkloadContainerAutoProtectionIntent {
		return &v
	}).(AzureWorkloadContainerAutoProtectionIntentPtrOutput)
}

// Type of backup management for the backed up item.
func (o AzureWorkloadContainerAutoProtectionIntentOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntent) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadContainerAutoProtectionIntentOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntent) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadContainerAutoProtectionIntentOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntent) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadContainerAutoProtectionIntent'.
func (o AzureWorkloadContainerAutoProtectionIntentOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntent) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadContainerAutoProtectionIntentOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntent) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadContainerAutoProtectionIntentOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntent) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type AzureWorkloadContainerAutoProtectionIntentPtrOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerAutoProtectionIntentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadContainerAutoProtectionIntent)(nil)).Elem()
}

func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) ToAzureWorkloadContainerAutoProtectionIntentPtrOutput() AzureWorkloadContainerAutoProtectionIntentPtrOutput {
	return o
}

func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) ToAzureWorkloadContainerAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerAutoProtectionIntentPtrOutput {
	return o
}

func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) Elem() AzureWorkloadContainerAutoProtectionIntentOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerAutoProtectionIntent) AzureWorkloadContainerAutoProtectionIntent {
		if v != nil {
			return *v
		}
		var ret AzureWorkloadContainerAutoProtectionIntent
		return ret
	}).(AzureWorkloadContainerAutoProtectionIntentOutput)
}

// Type of backup management for the backed up item.
func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ItemId
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadContainerAutoProtectionIntent'.
func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) ProtectionIntentItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectionIntentItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadContainerAutoProtectionIntentPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure workload specific protection intent item.
type AzureWorkloadContainerAutoProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadContainerAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// Azure workload specific protection intent item.
type AzureWorkloadContainerAutoProtectionIntentResponseOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerAutoProtectionIntentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerAutoProtectionIntentResponse)(nil)).Elem()
}

func (o AzureWorkloadContainerAutoProtectionIntentResponseOutput) ToAzureWorkloadContainerAutoProtectionIntentResponseOutput() AzureWorkloadContainerAutoProtectionIntentResponseOutput {
	return o
}

func (o AzureWorkloadContainerAutoProtectionIntentResponseOutput) ToAzureWorkloadContainerAutoProtectionIntentResponseOutputWithContext(ctx context.Context) AzureWorkloadContainerAutoProtectionIntentResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureWorkloadContainerAutoProtectionIntentResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntentResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadContainerAutoProtectionIntentResponseOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntentResponse) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadContainerAutoProtectionIntentResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntentResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadContainerAutoProtectionIntent'.
func (o AzureWorkloadContainerAutoProtectionIntentResponseOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntentResponse) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadContainerAutoProtectionIntentResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntentResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadContainerAutoProtectionIntentResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerAutoProtectionIntentResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Extended information of the container.
type AzureWorkloadContainerExtendedInfo struct {
	// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
	HostServerName *string `pulumi:"hostServerName"`
	// Inquiry Status for the container.
	InquiryInfo *InquiryInfo `pulumi:"inquiryInfo"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfo `pulumi:"nodesList"`
}

// AzureWorkloadContainerExtendedInfoInput is an input type that accepts AzureWorkloadContainerExtendedInfoArgs and AzureWorkloadContainerExtendedInfoOutput values.
// You can construct a concrete instance of `AzureWorkloadContainerExtendedInfoInput` via:
//
//	AzureWorkloadContainerExtendedInfoArgs{...}
type AzureWorkloadContainerExtendedInfoInput interface {
	pulumi.Input

	ToAzureWorkloadContainerExtendedInfoOutput() AzureWorkloadContainerExtendedInfoOutput
	ToAzureWorkloadContainerExtendedInfoOutputWithContext(context.Context) AzureWorkloadContainerExtendedInfoOutput
}

// Extended information of the container.
type AzureWorkloadContainerExtendedInfoArgs struct {
	// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
	HostServerName pulumi.StringPtrInput `pulumi:"hostServerName"`
	// Inquiry Status for the container.
	InquiryInfo InquiryInfoPtrInput `pulumi:"inquiryInfo"`
	// List of the nodes in case of distributed container.
	NodesList DistributedNodesInfoArrayInput `pulumi:"nodesList"`
}

func (AzureWorkloadContainerExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerExtendedInfo)(nil)).Elem()
}

func (i AzureWorkloadContainerExtendedInfoArgs) ToAzureWorkloadContainerExtendedInfoOutput() AzureWorkloadContainerExtendedInfoOutput {
	return i.ToAzureWorkloadContainerExtendedInfoOutputWithContext(context.Background())
}

func (i AzureWorkloadContainerExtendedInfoArgs) ToAzureWorkloadContainerExtendedInfoOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerExtendedInfoOutput)
}

func (i AzureWorkloadContainerExtendedInfoArgs) ToAzureWorkloadContainerExtendedInfoPtrOutput() AzureWorkloadContainerExtendedInfoPtrOutput {
	return i.ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i AzureWorkloadContainerExtendedInfoArgs) ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerExtendedInfoOutput).ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(ctx)
}

// AzureWorkloadContainerExtendedInfoPtrInput is an input type that accepts AzureWorkloadContainerExtendedInfoArgs, AzureWorkloadContainerExtendedInfoPtr and AzureWorkloadContainerExtendedInfoPtrOutput values.
// You can construct a concrete instance of `AzureWorkloadContainerExtendedInfoPtrInput` via:
//
//	        AzureWorkloadContainerExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type AzureWorkloadContainerExtendedInfoPtrInput interface {
	pulumi.Input

	ToAzureWorkloadContainerExtendedInfoPtrOutput() AzureWorkloadContainerExtendedInfoPtrOutput
	ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(context.Context) AzureWorkloadContainerExtendedInfoPtrOutput
}

type azureWorkloadContainerExtendedInfoPtrType AzureWorkloadContainerExtendedInfoArgs

func AzureWorkloadContainerExtendedInfoPtr(v *AzureWorkloadContainerExtendedInfoArgs) AzureWorkloadContainerExtendedInfoPtrInput {
	return (*azureWorkloadContainerExtendedInfoPtrType)(v)
}

func (*azureWorkloadContainerExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadContainerExtendedInfo)(nil)).Elem()
}

func (i *azureWorkloadContainerExtendedInfoPtrType) ToAzureWorkloadContainerExtendedInfoPtrOutput() AzureWorkloadContainerExtendedInfoPtrOutput {
	return i.ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *azureWorkloadContainerExtendedInfoPtrType) ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Extended information of the container.
type AzureWorkloadContainerExtendedInfoOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerExtendedInfo)(nil)).Elem()
}

func (o AzureWorkloadContainerExtendedInfoOutput) ToAzureWorkloadContainerExtendedInfoOutput() AzureWorkloadContainerExtendedInfoOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoOutput) ToAzureWorkloadContainerExtendedInfoOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoOutput) ToAzureWorkloadContainerExtendedInfoPtrOutput() AzureWorkloadContainerExtendedInfoPtrOutput {
	return o.ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (o AzureWorkloadContainerExtendedInfoOutput) ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureWorkloadContainerExtendedInfo) *AzureWorkloadContainerExtendedInfo {
		return &v
	}).(AzureWorkloadContainerExtendedInfoPtrOutput)
}

// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoOutput) HostServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerExtendedInfo) *string { return v.HostServerName }).(pulumi.StringPtrOutput)
}

// Inquiry Status for the container.
func (o AzureWorkloadContainerExtendedInfoOutput) InquiryInfo() InquiryInfoPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerExtendedInfo) *InquiryInfo { return v.InquiryInfo }).(InquiryInfoPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v AzureWorkloadContainerExtendedInfo) []DistributedNodesInfo { return v.NodesList }).(DistributedNodesInfoArrayOutput)
}

type AzureWorkloadContainerExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadContainerExtendedInfo)(nil)).Elem()
}

func (o AzureWorkloadContainerExtendedInfoPtrOutput) ToAzureWorkloadContainerExtendedInfoPtrOutput() AzureWorkloadContainerExtendedInfoPtrOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoPtrOutput) ToAzureWorkloadContainerExtendedInfoPtrOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoPtrOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoPtrOutput) Elem() AzureWorkloadContainerExtendedInfoOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfo) AzureWorkloadContainerExtendedInfo {
		if v != nil {
			return *v
		}
		var ret AzureWorkloadContainerExtendedInfo
		return ret
	}).(AzureWorkloadContainerExtendedInfoOutput)
}

// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoPtrOutput) HostServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.HostServerName
	}).(pulumi.StringPtrOutput)
}

// Inquiry Status for the container.
func (o AzureWorkloadContainerExtendedInfoPtrOutput) InquiryInfo() InquiryInfoPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfo) *InquiryInfo {
		if v == nil {
			return nil
		}
		return v.InquiryInfo
	}).(InquiryInfoPtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoPtrOutput) NodesList() DistributedNodesInfoArrayOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfo) []DistributedNodesInfo {
		if v == nil {
			return nil
		}
		return v.NodesList
	}).(DistributedNodesInfoArrayOutput)
}

// Extended information of the container.
type AzureWorkloadContainerExtendedInfoResponse struct {
	// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
	HostServerName *string `pulumi:"hostServerName"`
	// Inquiry Status for the container.
	InquiryInfo *InquiryInfoResponse `pulumi:"inquiryInfo"`
	// List of the nodes in case of distributed container.
	NodesList []DistributedNodesInfoResponse `pulumi:"nodesList"`
}

// Extended information of the container.
type AzureWorkloadContainerExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerExtendedInfoResponse)(nil)).Elem()
}

func (o AzureWorkloadContainerExtendedInfoResponseOutput) ToAzureWorkloadContainerExtendedInfoResponseOutput() AzureWorkloadContainerExtendedInfoResponseOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoResponseOutput) ToAzureWorkloadContainerExtendedInfoResponseOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoResponseOutput {
	return o
}

// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoResponseOutput) HostServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerExtendedInfoResponse) *string { return v.HostServerName }).(pulumi.StringPtrOutput)
}

// Inquiry Status for the container.
func (o AzureWorkloadContainerExtendedInfoResponseOutput) InquiryInfo() InquiryInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerExtendedInfoResponse) *InquiryInfoResponse { return v.InquiryInfo }).(InquiryInfoResponsePtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoResponseOutput) NodesList() DistributedNodesInfoResponseArrayOutput {
	return o.ApplyT(func(v AzureWorkloadContainerExtendedInfoResponse) []DistributedNodesInfoResponse { return v.NodesList }).(DistributedNodesInfoResponseArrayOutput)
}

type AzureWorkloadContainerExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadContainerExtendedInfoResponse)(nil)).Elem()
}

func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) ToAzureWorkloadContainerExtendedInfoResponsePtrOutput() AzureWorkloadContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) ToAzureWorkloadContainerExtendedInfoResponsePtrOutputWithContext(ctx context.Context) AzureWorkloadContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) Elem() AzureWorkloadContainerExtendedInfoResponseOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfoResponse) AzureWorkloadContainerExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret AzureWorkloadContainerExtendedInfoResponse
		return ret
	}).(AzureWorkloadContainerExtendedInfoResponseOutput)
}

// Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) HostServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostServerName
	}).(pulumi.StringPtrOutput)
}

// Inquiry Status for the container.
func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) InquiryInfo() InquiryInfoResponsePtrOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfoResponse) *InquiryInfoResponse {
		if v == nil {
			return nil
		}
		return v.InquiryInfo
	}).(InquiryInfoResponsePtrOutput)
}

// List of the nodes in case of distributed container.
func (o AzureWorkloadContainerExtendedInfoResponsePtrOutput) NodesList() DistributedNodesInfoResponseArrayOutput {
	return o.ApplyT(func(v *AzureWorkloadContainerExtendedInfoResponse) []DistributedNodesInfoResponse {
		if v == nil {
			return nil
		}
		return v.NodesList
	}).(DistributedNodesInfoResponseArrayOutput)
}

// Container for the workloads running inside Azure Compute or Classic Compute.
type AzureWorkloadContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'AzureWorkloadContainer'.
	ContainerType string `pulumi:"containerType"`
	// Additional details of a workload container.
	ExtendedInfo *AzureWorkloadContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Time stamp when this container was updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Re-Do Operation
	OperationType *string `pulumi:"operationType"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// ARM ID of the virtual machine represented by this Azure Workload Container
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload type for which registration was sent.
	WorkloadType *string `pulumi:"workloadType"`
}

// Container for the workloads running inside Azure Compute or Classic Compute.
type AzureWorkloadContainerResponseOutput struct{ *pulumi.OutputState }

func (AzureWorkloadContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadContainerResponse)(nil)).Elem()
}

func (o AzureWorkloadContainerResponseOutput) ToAzureWorkloadContainerResponseOutput() AzureWorkloadContainerResponseOutput {
	return o
}

func (o AzureWorkloadContainerResponseOutput) ToAzureWorkloadContainerResponseOutputWithContext(ctx context.Context) AzureWorkloadContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o AzureWorkloadContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'AzureWorkloadContainer'.
func (o AzureWorkloadContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Additional details of a workload container.
func (o AzureWorkloadContainerResponseOutput) ExtendedInfo() AzureWorkloadContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *AzureWorkloadContainerExtendedInfoResponse {
		return v.ExtendedInfo
	}).(AzureWorkloadContainerExtendedInfoResponsePtrOutput)
}

// Friendly name of the container.
func (o AzureWorkloadContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o AzureWorkloadContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was updated.
func (o AzureWorkloadContainerResponseOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// Re-Do Operation
func (o AzureWorkloadContainerResponseOutput) OperationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.OperationType }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o AzureWorkloadContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o AzureWorkloadContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// ARM ID of the virtual machine represented by this Azure Workload Container
func (o AzureWorkloadContainerResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload type for which registration was sent.
func (o AzureWorkloadContainerResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadContainerResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

// Azure Workload SQL Auto Protection intent item.
type AzureWorkloadSQLAutoProtectionIntent struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadSQLAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload item type of the item for which intent is to be set
	WorkloadItemType *string `pulumi:"workloadItemType"`
}

// AzureWorkloadSQLAutoProtectionIntentInput is an input type that accepts AzureWorkloadSQLAutoProtectionIntentArgs and AzureWorkloadSQLAutoProtectionIntentOutput values.
// You can construct a concrete instance of `AzureWorkloadSQLAutoProtectionIntentInput` via:
//
//	AzureWorkloadSQLAutoProtectionIntentArgs{...}
type AzureWorkloadSQLAutoProtectionIntentInput interface {
	pulumi.Input

	ToAzureWorkloadSQLAutoProtectionIntentOutput() AzureWorkloadSQLAutoProtectionIntentOutput
	ToAzureWorkloadSQLAutoProtectionIntentOutputWithContext(context.Context) AzureWorkloadSQLAutoProtectionIntentOutput
}

// Azure Workload SQL Auto Protection intent item.
type AzureWorkloadSQLAutoProtectionIntentArgs struct {
	// Type of backup management for the backed up item.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId pulumi.StringPtrInput `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadSQLAutoProtectionIntent'.
	ProtectionIntentItemType pulumi.StringInput `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Workload item type of the item for which intent is to be set
	WorkloadItemType pulumi.StringPtrInput `pulumi:"workloadItemType"`
}

func (AzureWorkloadSQLAutoProtectionIntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadSQLAutoProtectionIntent)(nil)).Elem()
}

func (i AzureWorkloadSQLAutoProtectionIntentArgs) ToAzureWorkloadSQLAutoProtectionIntentOutput() AzureWorkloadSQLAutoProtectionIntentOutput {
	return i.ToAzureWorkloadSQLAutoProtectionIntentOutputWithContext(context.Background())
}

func (i AzureWorkloadSQLAutoProtectionIntentArgs) ToAzureWorkloadSQLAutoProtectionIntentOutputWithContext(ctx context.Context) AzureWorkloadSQLAutoProtectionIntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadSQLAutoProtectionIntentOutput)
}

func (i AzureWorkloadSQLAutoProtectionIntentArgs) ToAzureWorkloadSQLAutoProtectionIntentPtrOutput() AzureWorkloadSQLAutoProtectionIntentPtrOutput {
	return i.ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (i AzureWorkloadSQLAutoProtectionIntentArgs) ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadSQLAutoProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadSQLAutoProtectionIntentOutput).ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(ctx)
}

// AzureWorkloadSQLAutoProtectionIntentPtrInput is an input type that accepts AzureWorkloadSQLAutoProtectionIntentArgs, AzureWorkloadSQLAutoProtectionIntentPtr and AzureWorkloadSQLAutoProtectionIntentPtrOutput values.
// You can construct a concrete instance of `AzureWorkloadSQLAutoProtectionIntentPtrInput` via:
//
//	        AzureWorkloadSQLAutoProtectionIntentArgs{...}
//
//	or:
//
//	        nil
type AzureWorkloadSQLAutoProtectionIntentPtrInput interface {
	pulumi.Input

	ToAzureWorkloadSQLAutoProtectionIntentPtrOutput() AzureWorkloadSQLAutoProtectionIntentPtrOutput
	ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(context.Context) AzureWorkloadSQLAutoProtectionIntentPtrOutput
}

type azureWorkloadSQLAutoProtectionIntentPtrType AzureWorkloadSQLAutoProtectionIntentArgs

func AzureWorkloadSQLAutoProtectionIntentPtr(v *AzureWorkloadSQLAutoProtectionIntentArgs) AzureWorkloadSQLAutoProtectionIntentPtrInput {
	return (*azureWorkloadSQLAutoProtectionIntentPtrType)(v)
}

func (*azureWorkloadSQLAutoProtectionIntentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadSQLAutoProtectionIntent)(nil)).Elem()
}

func (i *azureWorkloadSQLAutoProtectionIntentPtrType) ToAzureWorkloadSQLAutoProtectionIntentPtrOutput() AzureWorkloadSQLAutoProtectionIntentPtrOutput {
	return i.ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (i *azureWorkloadSQLAutoProtectionIntentPtrType) ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadSQLAutoProtectionIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureWorkloadSQLAutoProtectionIntentPtrOutput)
}

// Azure Workload SQL Auto Protection intent item.
type AzureWorkloadSQLAutoProtectionIntentOutput struct{ *pulumi.OutputState }

func (AzureWorkloadSQLAutoProtectionIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadSQLAutoProtectionIntent)(nil)).Elem()
}

func (o AzureWorkloadSQLAutoProtectionIntentOutput) ToAzureWorkloadSQLAutoProtectionIntentOutput() AzureWorkloadSQLAutoProtectionIntentOutput {
	return o
}

func (o AzureWorkloadSQLAutoProtectionIntentOutput) ToAzureWorkloadSQLAutoProtectionIntentOutputWithContext(ctx context.Context) AzureWorkloadSQLAutoProtectionIntentOutput {
	return o
}

func (o AzureWorkloadSQLAutoProtectionIntentOutput) ToAzureWorkloadSQLAutoProtectionIntentPtrOutput() AzureWorkloadSQLAutoProtectionIntentPtrOutput {
	return o.ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(context.Background())
}

func (o AzureWorkloadSQLAutoProtectionIntentOutput) ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadSQLAutoProtectionIntentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureWorkloadSQLAutoProtectionIntent) *AzureWorkloadSQLAutoProtectionIntent {
		return &v
	}).(AzureWorkloadSQLAutoProtectionIntentPtrOutput)
}

// Type of backup management for the backed up item.
func (o AzureWorkloadSQLAutoProtectionIntentOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntent) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadSQLAutoProtectionIntentOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntent) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadSQLAutoProtectionIntentOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntent) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadSQLAutoProtectionIntent'.
func (o AzureWorkloadSQLAutoProtectionIntentOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntent) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadSQLAutoProtectionIntentOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntent) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadSQLAutoProtectionIntentOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntent) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload item type of the item for which intent is to be set
func (o AzureWorkloadSQLAutoProtectionIntentOutput) WorkloadItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntent) *string { return v.WorkloadItemType }).(pulumi.StringPtrOutput)
}

type AzureWorkloadSQLAutoProtectionIntentPtrOutput struct{ *pulumi.OutputState }

func (AzureWorkloadSQLAutoProtectionIntentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureWorkloadSQLAutoProtectionIntent)(nil)).Elem()
}

func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) ToAzureWorkloadSQLAutoProtectionIntentPtrOutput() AzureWorkloadSQLAutoProtectionIntentPtrOutput {
	return o
}

func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) ToAzureWorkloadSQLAutoProtectionIntentPtrOutputWithContext(ctx context.Context) AzureWorkloadSQLAutoProtectionIntentPtrOutput {
	return o
}

func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) Elem() AzureWorkloadSQLAutoProtectionIntentOutput {
	return o.ApplyT(func(v *AzureWorkloadSQLAutoProtectionIntent) AzureWorkloadSQLAutoProtectionIntent {
		if v != nil {
			return *v
		}
		var ret AzureWorkloadSQLAutoProtectionIntent
		return ret
	}).(AzureWorkloadSQLAutoProtectionIntentOutput)
}

// Type of backup management for the backed up item.
func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadSQLAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadSQLAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ItemId
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadSQLAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadSQLAutoProtectionIntent'.
func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) ProtectionIntentItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadSQLAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectionIntentItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadSQLAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadSQLAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Workload item type of the item for which intent is to be set
func (o AzureWorkloadSQLAutoProtectionIntentPtrOutput) WorkloadItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureWorkloadSQLAutoProtectionIntent) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadItemType
	}).(pulumi.StringPtrOutput)
}

// Azure Workload SQL Auto Protection intent item.
type AzureWorkloadSQLAutoProtectionIntentResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
	ItemId *string `pulumi:"itemId"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// backup protectionIntent type.
	// Expected value is 'AzureWorkloadSQLAutoProtectionIntent'.
	ProtectionIntentItemType string `pulumi:"protectionIntentItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Workload item type of the item for which intent is to be set
	WorkloadItemType *string `pulumi:"workloadItemType"`
}

// Azure Workload SQL Auto Protection intent item.
type AzureWorkloadSQLAutoProtectionIntentResponseOutput struct{ *pulumi.OutputState }

func (AzureWorkloadSQLAutoProtectionIntentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureWorkloadSQLAutoProtectionIntentResponse)(nil)).Elem()
}

func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) ToAzureWorkloadSQLAutoProtectionIntentResponseOutput() AzureWorkloadSQLAutoProtectionIntentResponseOutput {
	return o
}

func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) ToAzureWorkloadSQLAutoProtectionIntentResponseOutputWithContext(ctx context.Context) AzureWorkloadSQLAutoProtectionIntentResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntentResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) ItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntentResponse) *string { return v.ItemId }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntentResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// backup protectionIntent type.
// Expected value is 'AzureWorkloadSQLAutoProtectionIntent'.
func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) ProtectionIntentItemType() pulumi.StringOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntentResponse) string { return v.ProtectionIntentItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntentResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntentResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Workload item type of the item for which intent is to be set
func (o AzureWorkloadSQLAutoProtectionIntentResponseOutput) WorkloadItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureWorkloadSQLAutoProtectionIntentResponse) *string { return v.WorkloadItemType }).(pulumi.StringPtrOutput)
}

// Settings for classic alerts
type ClassicAlertSettings struct {
	AlertsForCriticalOperations *string `pulumi:"alertsForCriticalOperations"`
}

// ClassicAlertSettingsInput is an input type that accepts ClassicAlertSettingsArgs and ClassicAlertSettingsOutput values.
// You can construct a concrete instance of `ClassicAlertSettingsInput` via:
//
//	ClassicAlertSettingsArgs{...}
type ClassicAlertSettingsInput interface {
	pulumi.Input

	ToClassicAlertSettingsOutput() ClassicAlertSettingsOutput
	ToClassicAlertSettingsOutputWithContext(context.Context) ClassicAlertSettingsOutput
}

// Settings for classic alerts
type ClassicAlertSettingsArgs struct {
	AlertsForCriticalOperations pulumi.StringPtrInput `pulumi:"alertsForCriticalOperations"`
}

func (ClassicAlertSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassicAlertSettings)(nil)).Elem()
}

func (i ClassicAlertSettingsArgs) ToClassicAlertSettingsOutput() ClassicAlertSettingsOutput {
	return i.ToClassicAlertSettingsOutputWithContext(context.Background())
}

func (i ClassicAlertSettingsArgs) ToClassicAlertSettingsOutputWithContext(ctx context.Context) ClassicAlertSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassicAlertSettingsOutput)
}

func (i ClassicAlertSettingsArgs) ToClassicAlertSettingsPtrOutput() ClassicAlertSettingsPtrOutput {
	return i.ToClassicAlertSettingsPtrOutputWithContext(context.Background())
}

func (i ClassicAlertSettingsArgs) ToClassicAlertSettingsPtrOutputWithContext(ctx context.Context) ClassicAlertSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassicAlertSettingsOutput).ToClassicAlertSettingsPtrOutputWithContext(ctx)
}

// ClassicAlertSettingsPtrInput is an input type that accepts ClassicAlertSettingsArgs, ClassicAlertSettingsPtr and ClassicAlertSettingsPtrOutput values.
// You can construct a concrete instance of `ClassicAlertSettingsPtrInput` via:
//
//	        ClassicAlertSettingsArgs{...}
//
//	or:
//
//	        nil
type ClassicAlertSettingsPtrInput interface {
	pulumi.Input

	ToClassicAlertSettingsPtrOutput() ClassicAlertSettingsPtrOutput
	ToClassicAlertSettingsPtrOutputWithContext(context.Context) ClassicAlertSettingsPtrOutput
}

type classicAlertSettingsPtrType ClassicAlertSettingsArgs

func ClassicAlertSettingsPtr(v *ClassicAlertSettingsArgs) ClassicAlertSettingsPtrInput {
	return (*classicAlertSettingsPtrType)(v)
}

func (*classicAlertSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassicAlertSettings)(nil)).Elem()
}

func (i *classicAlertSettingsPtrType) ToClassicAlertSettingsPtrOutput() ClassicAlertSettingsPtrOutput {
	return i.ToClassicAlertSettingsPtrOutputWithContext(context.Background())
}

func (i *classicAlertSettingsPtrType) ToClassicAlertSettingsPtrOutputWithContext(ctx context.Context) ClassicAlertSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassicAlertSettingsPtrOutput)
}

// Settings for classic alerts
type ClassicAlertSettingsOutput struct{ *pulumi.OutputState }

func (ClassicAlertSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassicAlertSettings)(nil)).Elem()
}

func (o ClassicAlertSettingsOutput) ToClassicAlertSettingsOutput() ClassicAlertSettingsOutput {
	return o
}

func (o ClassicAlertSettingsOutput) ToClassicAlertSettingsOutputWithContext(ctx context.Context) ClassicAlertSettingsOutput {
	return o
}

func (o ClassicAlertSettingsOutput) ToClassicAlertSettingsPtrOutput() ClassicAlertSettingsPtrOutput {
	return o.ToClassicAlertSettingsPtrOutputWithContext(context.Background())
}

func (o ClassicAlertSettingsOutput) ToClassicAlertSettingsPtrOutputWithContext(ctx context.Context) ClassicAlertSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClassicAlertSettings) *ClassicAlertSettings {
		return &v
	}).(ClassicAlertSettingsPtrOutput)
}

func (o ClassicAlertSettingsOutput) AlertsForCriticalOperations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClassicAlertSettings) *string { return v.AlertsForCriticalOperations }).(pulumi.StringPtrOutput)
}

type ClassicAlertSettingsPtrOutput struct{ *pulumi.OutputState }

func (ClassicAlertSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassicAlertSettings)(nil)).Elem()
}

func (o ClassicAlertSettingsPtrOutput) ToClassicAlertSettingsPtrOutput() ClassicAlertSettingsPtrOutput {
	return o
}

func (o ClassicAlertSettingsPtrOutput) ToClassicAlertSettingsPtrOutputWithContext(ctx context.Context) ClassicAlertSettingsPtrOutput {
	return o
}

func (o ClassicAlertSettingsPtrOutput) Elem() ClassicAlertSettingsOutput {
	return o.ApplyT(func(v *ClassicAlertSettings) ClassicAlertSettings {
		if v != nil {
			return *v
		}
		var ret ClassicAlertSettings
		return ret
	}).(ClassicAlertSettingsOutput)
}

func (o ClassicAlertSettingsPtrOutput) AlertsForCriticalOperations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClassicAlertSettings) *string {
		if v == nil {
			return nil
		}
		return v.AlertsForCriticalOperations
	}).(pulumi.StringPtrOutput)
}

// Settings for classic alerts
type ClassicAlertSettingsResponse struct {
	AlertsForCriticalOperations *string `pulumi:"alertsForCriticalOperations"`
}

// Settings for classic alerts
type ClassicAlertSettingsResponseOutput struct{ *pulumi.OutputState }

func (ClassicAlertSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassicAlertSettingsResponse)(nil)).Elem()
}

func (o ClassicAlertSettingsResponseOutput) ToClassicAlertSettingsResponseOutput() ClassicAlertSettingsResponseOutput {
	return o
}

func (o ClassicAlertSettingsResponseOutput) ToClassicAlertSettingsResponseOutputWithContext(ctx context.Context) ClassicAlertSettingsResponseOutput {
	return o
}

func (o ClassicAlertSettingsResponseOutput) AlertsForCriticalOperations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClassicAlertSettingsResponse) *string { return v.AlertsForCriticalOperations }).(pulumi.StringPtrOutput)
}

type ClassicAlertSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ClassicAlertSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassicAlertSettingsResponse)(nil)).Elem()
}

func (o ClassicAlertSettingsResponsePtrOutput) ToClassicAlertSettingsResponsePtrOutput() ClassicAlertSettingsResponsePtrOutput {
	return o
}

func (o ClassicAlertSettingsResponsePtrOutput) ToClassicAlertSettingsResponsePtrOutputWithContext(ctx context.Context) ClassicAlertSettingsResponsePtrOutput {
	return o
}

func (o ClassicAlertSettingsResponsePtrOutput) Elem() ClassicAlertSettingsResponseOutput {
	return o.ApplyT(func(v *ClassicAlertSettingsResponse) ClassicAlertSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ClassicAlertSettingsResponse
		return ret
	}).(ClassicAlertSettingsResponseOutput)
}

func (o ClassicAlertSettingsResponsePtrOutput) AlertsForCriticalOperations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClassicAlertSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AlertsForCriticalOperations
	}).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
type CmkKekIdentity struct {
	// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
	UseSystemAssignedIdentity *bool `pulumi:"useSystemAssignedIdentity"`
	// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
	UserAssignedIdentity *string `pulumi:"userAssignedIdentity"`
}

// CmkKekIdentityInput is an input type that accepts CmkKekIdentityArgs and CmkKekIdentityOutput values.
// You can construct a concrete instance of `CmkKekIdentityInput` via:
//
//	CmkKekIdentityArgs{...}
type CmkKekIdentityInput interface {
	pulumi.Input

	ToCmkKekIdentityOutput() CmkKekIdentityOutput
	ToCmkKekIdentityOutputWithContext(context.Context) CmkKekIdentityOutput
}

// The details of the identity used for CMK
type CmkKekIdentityArgs struct {
	// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
	UseSystemAssignedIdentity pulumi.BoolPtrInput `pulumi:"useSystemAssignedIdentity"`
	// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
	UserAssignedIdentity pulumi.StringPtrInput `pulumi:"userAssignedIdentity"`
}

func (CmkKekIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKekIdentity)(nil)).Elem()
}

func (i CmkKekIdentityArgs) ToCmkKekIdentityOutput() CmkKekIdentityOutput {
	return i.ToCmkKekIdentityOutputWithContext(context.Background())
}

func (i CmkKekIdentityArgs) ToCmkKekIdentityOutputWithContext(ctx context.Context) CmkKekIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKekIdentityOutput)
}

func (i CmkKekIdentityArgs) ToCmkKekIdentityPtrOutput() CmkKekIdentityPtrOutput {
	return i.ToCmkKekIdentityPtrOutputWithContext(context.Background())
}

func (i CmkKekIdentityArgs) ToCmkKekIdentityPtrOutputWithContext(ctx context.Context) CmkKekIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKekIdentityOutput).ToCmkKekIdentityPtrOutputWithContext(ctx)
}

// CmkKekIdentityPtrInput is an input type that accepts CmkKekIdentityArgs, CmkKekIdentityPtr and CmkKekIdentityPtrOutput values.
// You can construct a concrete instance of `CmkKekIdentityPtrInput` via:
//
//	        CmkKekIdentityArgs{...}
//
//	or:
//
//	        nil
type CmkKekIdentityPtrInput interface {
	pulumi.Input

	ToCmkKekIdentityPtrOutput() CmkKekIdentityPtrOutput
	ToCmkKekIdentityPtrOutputWithContext(context.Context) CmkKekIdentityPtrOutput
}

type cmkKekIdentityPtrType CmkKekIdentityArgs

func CmkKekIdentityPtr(v *CmkKekIdentityArgs) CmkKekIdentityPtrInput {
	return (*cmkKekIdentityPtrType)(v)
}

func (*cmkKekIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKekIdentity)(nil)).Elem()
}

func (i *cmkKekIdentityPtrType) ToCmkKekIdentityPtrOutput() CmkKekIdentityPtrOutput {
	return i.ToCmkKekIdentityPtrOutputWithContext(context.Background())
}

func (i *cmkKekIdentityPtrType) ToCmkKekIdentityPtrOutputWithContext(ctx context.Context) CmkKekIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKekIdentityPtrOutput)
}

// The details of the identity used for CMK
type CmkKekIdentityOutput struct{ *pulumi.OutputState }

func (CmkKekIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKekIdentity)(nil)).Elem()
}

func (o CmkKekIdentityOutput) ToCmkKekIdentityOutput() CmkKekIdentityOutput {
	return o
}

func (o CmkKekIdentityOutput) ToCmkKekIdentityOutputWithContext(ctx context.Context) CmkKekIdentityOutput {
	return o
}

func (o CmkKekIdentityOutput) ToCmkKekIdentityPtrOutput() CmkKekIdentityPtrOutput {
	return o.ToCmkKekIdentityPtrOutputWithContext(context.Background())
}

func (o CmkKekIdentityOutput) ToCmkKekIdentityPtrOutputWithContext(ctx context.Context) CmkKekIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CmkKekIdentity) *CmkKekIdentity {
		return &v
	}).(CmkKekIdentityPtrOutput)
}

// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
func (o CmkKekIdentityOutput) UseSystemAssignedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CmkKekIdentity) *bool { return v.UseSystemAssignedIdentity }).(pulumi.BoolPtrOutput)
}

// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
func (o CmkKekIdentityOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CmkKekIdentity) *string { return v.UserAssignedIdentity }).(pulumi.StringPtrOutput)
}

type CmkKekIdentityPtrOutput struct{ *pulumi.OutputState }

func (CmkKekIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKekIdentity)(nil)).Elem()
}

func (o CmkKekIdentityPtrOutput) ToCmkKekIdentityPtrOutput() CmkKekIdentityPtrOutput {
	return o
}

func (o CmkKekIdentityPtrOutput) ToCmkKekIdentityPtrOutputWithContext(ctx context.Context) CmkKekIdentityPtrOutput {
	return o
}

func (o CmkKekIdentityPtrOutput) Elem() CmkKekIdentityOutput {
	return o.ApplyT(func(v *CmkKekIdentity) CmkKekIdentity {
		if v != nil {
			return *v
		}
		var ret CmkKekIdentity
		return ret
	}).(CmkKekIdentityOutput)
}

// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
func (o CmkKekIdentityPtrOutput) UseSystemAssignedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CmkKekIdentity) *bool {
		if v == nil {
			return nil
		}
		return v.UseSystemAssignedIdentity
	}).(pulumi.BoolPtrOutput)
}

// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
func (o CmkKekIdentityPtrOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CmkKekIdentity) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
type CmkKekIdentityResponse struct {
	// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
	UseSystemAssignedIdentity *bool `pulumi:"useSystemAssignedIdentity"`
	// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
	UserAssignedIdentity *string `pulumi:"userAssignedIdentity"`
}

// The details of the identity used for CMK
type CmkKekIdentityResponseOutput struct{ *pulumi.OutputState }

func (CmkKekIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKekIdentityResponse)(nil)).Elem()
}

func (o CmkKekIdentityResponseOutput) ToCmkKekIdentityResponseOutput() CmkKekIdentityResponseOutput {
	return o
}

func (o CmkKekIdentityResponseOutput) ToCmkKekIdentityResponseOutputWithContext(ctx context.Context) CmkKekIdentityResponseOutput {
	return o
}

// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
func (o CmkKekIdentityResponseOutput) UseSystemAssignedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CmkKekIdentityResponse) *bool { return v.UseSystemAssignedIdentity }).(pulumi.BoolPtrOutput)
}

// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
func (o CmkKekIdentityResponseOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CmkKekIdentityResponse) *string { return v.UserAssignedIdentity }).(pulumi.StringPtrOutput)
}

type CmkKekIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (CmkKekIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKekIdentityResponse)(nil)).Elem()
}

func (o CmkKekIdentityResponsePtrOutput) ToCmkKekIdentityResponsePtrOutput() CmkKekIdentityResponsePtrOutput {
	return o
}

func (o CmkKekIdentityResponsePtrOutput) ToCmkKekIdentityResponsePtrOutputWithContext(ctx context.Context) CmkKekIdentityResponsePtrOutput {
	return o
}

func (o CmkKekIdentityResponsePtrOutput) Elem() CmkKekIdentityResponseOutput {
	return o.ApplyT(func(v *CmkKekIdentityResponse) CmkKekIdentityResponse {
		if v != nil {
			return *v
		}
		var ret CmkKekIdentityResponse
		return ret
	}).(CmkKekIdentityResponseOutput)
}

// Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
func (o CmkKekIdentityResponsePtrOutput) UseSystemAssignedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CmkKekIdentityResponse) *bool {
		if v == nil {
			return nil
		}
		return v.UseSystemAssignedIdentity
	}).(pulumi.BoolPtrOutput)
}

// The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
func (o CmkKekIdentityResponsePtrOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CmkKekIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

// The properties of the Key Vault which hosts CMK
type CmkKeyVaultProperties struct {
	// The key uri of the Customer Managed Key
	KeyUri *string `pulumi:"keyUri"`
}

// CmkKeyVaultPropertiesInput is an input type that accepts CmkKeyVaultPropertiesArgs and CmkKeyVaultPropertiesOutput values.
// You can construct a concrete instance of `CmkKeyVaultPropertiesInput` via:
//
//	CmkKeyVaultPropertiesArgs{...}
type CmkKeyVaultPropertiesInput interface {
	pulumi.Input

	ToCmkKeyVaultPropertiesOutput() CmkKeyVaultPropertiesOutput
	ToCmkKeyVaultPropertiesOutputWithContext(context.Context) CmkKeyVaultPropertiesOutput
}

// The properties of the Key Vault which hosts CMK
type CmkKeyVaultPropertiesArgs struct {
	// The key uri of the Customer Managed Key
	KeyUri pulumi.StringPtrInput `pulumi:"keyUri"`
}

func (CmkKeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKeyVaultProperties)(nil)).Elem()
}

func (i CmkKeyVaultPropertiesArgs) ToCmkKeyVaultPropertiesOutput() CmkKeyVaultPropertiesOutput {
	return i.ToCmkKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i CmkKeyVaultPropertiesArgs) ToCmkKeyVaultPropertiesOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKeyVaultPropertiesOutput)
}

func (i CmkKeyVaultPropertiesArgs) ToCmkKeyVaultPropertiesPtrOutput() CmkKeyVaultPropertiesPtrOutput {
	return i.ToCmkKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i CmkKeyVaultPropertiesArgs) ToCmkKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKeyVaultPropertiesOutput).ToCmkKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// CmkKeyVaultPropertiesPtrInput is an input type that accepts CmkKeyVaultPropertiesArgs, CmkKeyVaultPropertiesPtr and CmkKeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `CmkKeyVaultPropertiesPtrInput` via:
//
//	        CmkKeyVaultPropertiesArgs{...}
//
//	or:
//
//	        nil
type CmkKeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToCmkKeyVaultPropertiesPtrOutput() CmkKeyVaultPropertiesPtrOutput
	ToCmkKeyVaultPropertiesPtrOutputWithContext(context.Context) CmkKeyVaultPropertiesPtrOutput
}

type cmkKeyVaultPropertiesPtrType CmkKeyVaultPropertiesArgs

func CmkKeyVaultPropertiesPtr(v *CmkKeyVaultPropertiesArgs) CmkKeyVaultPropertiesPtrInput {
	return (*cmkKeyVaultPropertiesPtrType)(v)
}

func (*cmkKeyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKeyVaultProperties)(nil)).Elem()
}

func (i *cmkKeyVaultPropertiesPtrType) ToCmkKeyVaultPropertiesPtrOutput() CmkKeyVaultPropertiesPtrOutput {
	return i.ToCmkKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *cmkKeyVaultPropertiesPtrType) ToCmkKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CmkKeyVaultPropertiesPtrOutput)
}

// The properties of the Key Vault which hosts CMK
type CmkKeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (CmkKeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKeyVaultProperties)(nil)).Elem()
}

func (o CmkKeyVaultPropertiesOutput) ToCmkKeyVaultPropertiesOutput() CmkKeyVaultPropertiesOutput {
	return o
}

func (o CmkKeyVaultPropertiesOutput) ToCmkKeyVaultPropertiesOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesOutput {
	return o
}

func (o CmkKeyVaultPropertiesOutput) ToCmkKeyVaultPropertiesPtrOutput() CmkKeyVaultPropertiesPtrOutput {
	return o.ToCmkKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o CmkKeyVaultPropertiesOutput) ToCmkKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CmkKeyVaultProperties) *CmkKeyVaultProperties {
		return &v
	}).(CmkKeyVaultPropertiesPtrOutput)
}

// The key uri of the Customer Managed Key
func (o CmkKeyVaultPropertiesOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CmkKeyVaultProperties) *string { return v.KeyUri }).(pulumi.StringPtrOutput)
}

type CmkKeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CmkKeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKeyVaultProperties)(nil)).Elem()
}

func (o CmkKeyVaultPropertiesPtrOutput) ToCmkKeyVaultPropertiesPtrOutput() CmkKeyVaultPropertiesPtrOutput {
	return o
}

func (o CmkKeyVaultPropertiesPtrOutput) ToCmkKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesPtrOutput {
	return o
}

func (o CmkKeyVaultPropertiesPtrOutput) Elem() CmkKeyVaultPropertiesOutput {
	return o.ApplyT(func(v *CmkKeyVaultProperties) CmkKeyVaultProperties {
		if v != nil {
			return *v
		}
		var ret CmkKeyVaultProperties
		return ret
	}).(CmkKeyVaultPropertiesOutput)
}

// The key uri of the Customer Managed Key
func (o CmkKeyVaultPropertiesPtrOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CmkKeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyUri
	}).(pulumi.StringPtrOutput)
}

// The properties of the Key Vault which hosts CMK
type CmkKeyVaultPropertiesResponse struct {
	// The key uri of the Customer Managed Key
	KeyUri *string `pulumi:"keyUri"`
}

// The properties of the Key Vault which hosts CMK
type CmkKeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CmkKeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CmkKeyVaultPropertiesResponse)(nil)).Elem()
}

func (o CmkKeyVaultPropertiesResponseOutput) ToCmkKeyVaultPropertiesResponseOutput() CmkKeyVaultPropertiesResponseOutput {
	return o
}

func (o CmkKeyVaultPropertiesResponseOutput) ToCmkKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesResponseOutput {
	return o
}

// The key uri of the Customer Managed Key
func (o CmkKeyVaultPropertiesResponseOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CmkKeyVaultPropertiesResponse) *string { return v.KeyUri }).(pulumi.StringPtrOutput)
}

type CmkKeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CmkKeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CmkKeyVaultPropertiesResponse)(nil)).Elem()
}

func (o CmkKeyVaultPropertiesResponsePtrOutput) ToCmkKeyVaultPropertiesResponsePtrOutput() CmkKeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o CmkKeyVaultPropertiesResponsePtrOutput) ToCmkKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) CmkKeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o CmkKeyVaultPropertiesResponsePtrOutput) Elem() CmkKeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *CmkKeyVaultPropertiesResponse) CmkKeyVaultPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CmkKeyVaultPropertiesResponse
		return ret
	}).(CmkKeyVaultPropertiesResponseOutput)
}

// The key uri of the Customer Managed Key
func (o CmkKeyVaultPropertiesResponsePtrOutput) KeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CmkKeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyUri
	}).(pulumi.StringPtrOutput)
}

// Container identity information
type ContainerIdentityInfo struct {
	// Protection container identity - AAD Tenant
	AadTenantId *string `pulumi:"aadTenantId"`
	// Protection container identity - Audience
	Audience *string `pulumi:"audience"`
	// Protection container identity - AAD Service Principal
	ServicePrincipalClientId *string `pulumi:"servicePrincipalClientId"`
	// Unique name of the container
	UniqueName *string `pulumi:"uniqueName"`
}

// ContainerIdentityInfoInput is an input type that accepts ContainerIdentityInfoArgs and ContainerIdentityInfoOutput values.
// You can construct a concrete instance of `ContainerIdentityInfoInput` via:
//
//	ContainerIdentityInfoArgs{...}
type ContainerIdentityInfoInput interface {
	pulumi.Input

	ToContainerIdentityInfoOutput() ContainerIdentityInfoOutput
	ToContainerIdentityInfoOutputWithContext(context.Context) ContainerIdentityInfoOutput
}

// Container identity information
type ContainerIdentityInfoArgs struct {
	// Protection container identity - AAD Tenant
	AadTenantId pulumi.StringPtrInput `pulumi:"aadTenantId"`
	// Protection container identity - Audience
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// Protection container identity - AAD Service Principal
	ServicePrincipalClientId pulumi.StringPtrInput `pulumi:"servicePrincipalClientId"`
	// Unique name of the container
	UniqueName pulumi.StringPtrInput `pulumi:"uniqueName"`
}

func (ContainerIdentityInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerIdentityInfo)(nil)).Elem()
}

func (i ContainerIdentityInfoArgs) ToContainerIdentityInfoOutput() ContainerIdentityInfoOutput {
	return i.ToContainerIdentityInfoOutputWithContext(context.Background())
}

func (i ContainerIdentityInfoArgs) ToContainerIdentityInfoOutputWithContext(ctx context.Context) ContainerIdentityInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerIdentityInfoOutput)
}

func (i ContainerIdentityInfoArgs) ToContainerIdentityInfoPtrOutput() ContainerIdentityInfoPtrOutput {
	return i.ToContainerIdentityInfoPtrOutputWithContext(context.Background())
}

func (i ContainerIdentityInfoArgs) ToContainerIdentityInfoPtrOutputWithContext(ctx context.Context) ContainerIdentityInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerIdentityInfoOutput).ToContainerIdentityInfoPtrOutputWithContext(ctx)
}

// ContainerIdentityInfoPtrInput is an input type that accepts ContainerIdentityInfoArgs, ContainerIdentityInfoPtr and ContainerIdentityInfoPtrOutput values.
// You can construct a concrete instance of `ContainerIdentityInfoPtrInput` via:
//
//	        ContainerIdentityInfoArgs{...}
//
//	or:
//
//	        nil
type ContainerIdentityInfoPtrInput interface {
	pulumi.Input

	ToContainerIdentityInfoPtrOutput() ContainerIdentityInfoPtrOutput
	ToContainerIdentityInfoPtrOutputWithContext(context.Context) ContainerIdentityInfoPtrOutput
}

type containerIdentityInfoPtrType ContainerIdentityInfoArgs

func ContainerIdentityInfoPtr(v *ContainerIdentityInfoArgs) ContainerIdentityInfoPtrInput {
	return (*containerIdentityInfoPtrType)(v)
}

func (*containerIdentityInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerIdentityInfo)(nil)).Elem()
}

func (i *containerIdentityInfoPtrType) ToContainerIdentityInfoPtrOutput() ContainerIdentityInfoPtrOutput {
	return i.ToContainerIdentityInfoPtrOutputWithContext(context.Background())
}

func (i *containerIdentityInfoPtrType) ToContainerIdentityInfoPtrOutputWithContext(ctx context.Context) ContainerIdentityInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerIdentityInfoPtrOutput)
}

// Container identity information
type ContainerIdentityInfoOutput struct{ *pulumi.OutputState }

func (ContainerIdentityInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerIdentityInfo)(nil)).Elem()
}

func (o ContainerIdentityInfoOutput) ToContainerIdentityInfoOutput() ContainerIdentityInfoOutput {
	return o
}

func (o ContainerIdentityInfoOutput) ToContainerIdentityInfoOutputWithContext(ctx context.Context) ContainerIdentityInfoOutput {
	return o
}

func (o ContainerIdentityInfoOutput) ToContainerIdentityInfoPtrOutput() ContainerIdentityInfoPtrOutput {
	return o.ToContainerIdentityInfoPtrOutputWithContext(context.Background())
}

func (o ContainerIdentityInfoOutput) ToContainerIdentityInfoPtrOutputWithContext(ctx context.Context) ContainerIdentityInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerIdentityInfo) *ContainerIdentityInfo {
		return &v
	}).(ContainerIdentityInfoPtrOutput)
}

// Protection container identity - AAD Tenant
func (o ContainerIdentityInfoOutput) AadTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfo) *string { return v.AadTenantId }).(pulumi.StringPtrOutput)
}

// Protection container identity - Audience
func (o ContainerIdentityInfoOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfo) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// Protection container identity - AAD Service Principal
func (o ContainerIdentityInfoOutput) ServicePrincipalClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfo) *string { return v.ServicePrincipalClientId }).(pulumi.StringPtrOutput)
}

// Unique name of the container
func (o ContainerIdentityInfoOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfo) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

type ContainerIdentityInfoPtrOutput struct{ *pulumi.OutputState }

func (ContainerIdentityInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerIdentityInfo)(nil)).Elem()
}

func (o ContainerIdentityInfoPtrOutput) ToContainerIdentityInfoPtrOutput() ContainerIdentityInfoPtrOutput {
	return o
}

func (o ContainerIdentityInfoPtrOutput) ToContainerIdentityInfoPtrOutputWithContext(ctx context.Context) ContainerIdentityInfoPtrOutput {
	return o
}

func (o ContainerIdentityInfoPtrOutput) Elem() ContainerIdentityInfoOutput {
	return o.ApplyT(func(v *ContainerIdentityInfo) ContainerIdentityInfo {
		if v != nil {
			return *v
		}
		var ret ContainerIdentityInfo
		return ret
	}).(ContainerIdentityInfoOutput)
}

// Protection container identity - AAD Tenant
func (o ContainerIdentityInfoPtrOutput) AadTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.AadTenantId
	}).(pulumi.StringPtrOutput)
}

// Protection container identity - Audience
func (o ContainerIdentityInfoPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// Protection container identity - AAD Service Principal
func (o ContainerIdentityInfoPtrOutput) ServicePrincipalClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.ServicePrincipalClientId
	}).(pulumi.StringPtrOutput)
}

// Unique name of the container
func (o ContainerIdentityInfoPtrOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.UniqueName
	}).(pulumi.StringPtrOutput)
}

// Container identity information
type ContainerIdentityInfoResponse struct {
	// Protection container identity - AAD Tenant
	AadTenantId *string `pulumi:"aadTenantId"`
	// Protection container identity - Audience
	Audience *string `pulumi:"audience"`
	// Protection container identity - AAD Service Principal
	ServicePrincipalClientId *string `pulumi:"servicePrincipalClientId"`
	// Unique name of the container
	UniqueName *string `pulumi:"uniqueName"`
}

// Container identity information
type ContainerIdentityInfoResponseOutput struct{ *pulumi.OutputState }

func (ContainerIdentityInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerIdentityInfoResponse)(nil)).Elem()
}

func (o ContainerIdentityInfoResponseOutput) ToContainerIdentityInfoResponseOutput() ContainerIdentityInfoResponseOutput {
	return o
}

func (o ContainerIdentityInfoResponseOutput) ToContainerIdentityInfoResponseOutputWithContext(ctx context.Context) ContainerIdentityInfoResponseOutput {
	return o
}

// Protection container identity - AAD Tenant
func (o ContainerIdentityInfoResponseOutput) AadTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfoResponse) *string { return v.AadTenantId }).(pulumi.StringPtrOutput)
}

// Protection container identity - Audience
func (o ContainerIdentityInfoResponseOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfoResponse) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// Protection container identity - AAD Service Principal
func (o ContainerIdentityInfoResponseOutput) ServicePrincipalClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfoResponse) *string { return v.ServicePrincipalClientId }).(pulumi.StringPtrOutput)
}

// Unique name of the container
func (o ContainerIdentityInfoResponseOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerIdentityInfoResponse) *string { return v.UniqueName }).(pulumi.StringPtrOutput)
}

type ContainerIdentityInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerIdentityInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerIdentityInfoResponse)(nil)).Elem()
}

func (o ContainerIdentityInfoResponsePtrOutput) ToContainerIdentityInfoResponsePtrOutput() ContainerIdentityInfoResponsePtrOutput {
	return o
}

func (o ContainerIdentityInfoResponsePtrOutput) ToContainerIdentityInfoResponsePtrOutputWithContext(ctx context.Context) ContainerIdentityInfoResponsePtrOutput {
	return o
}

func (o ContainerIdentityInfoResponsePtrOutput) Elem() ContainerIdentityInfoResponseOutput {
	return o.ApplyT(func(v *ContainerIdentityInfoResponse) ContainerIdentityInfoResponse {
		if v != nil {
			return *v
		}
		var ret ContainerIdentityInfoResponse
		return ret
	}).(ContainerIdentityInfoResponseOutput)
}

// Protection container identity - AAD Tenant
func (o ContainerIdentityInfoResponsePtrOutput) AadTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadTenantId
	}).(pulumi.StringPtrOutput)
}

// Protection container identity - Audience
func (o ContainerIdentityInfoResponsePtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// Protection container identity - AAD Service Principal
func (o ContainerIdentityInfoResponsePtrOutput) ServicePrincipalClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServicePrincipalClientId
	}).(pulumi.StringPtrOutput)
}

// Unique name of the container
func (o ContainerIdentityInfoResponsePtrOutput) UniqueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerIdentityInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UniqueName
	}).(pulumi.StringPtrOutput)
}

// Settings for Cross Subscription Restore Settings
type CrossSubscriptionRestoreSettings struct {
	CrossSubscriptionRestoreState *string `pulumi:"crossSubscriptionRestoreState"`
}

// CrossSubscriptionRestoreSettingsInput is an input type that accepts CrossSubscriptionRestoreSettingsArgs and CrossSubscriptionRestoreSettingsOutput values.
// You can construct a concrete instance of `CrossSubscriptionRestoreSettingsInput` via:
//
//	CrossSubscriptionRestoreSettingsArgs{...}
type CrossSubscriptionRestoreSettingsInput interface {
	pulumi.Input

	ToCrossSubscriptionRestoreSettingsOutput() CrossSubscriptionRestoreSettingsOutput
	ToCrossSubscriptionRestoreSettingsOutputWithContext(context.Context) CrossSubscriptionRestoreSettingsOutput
}

// Settings for Cross Subscription Restore Settings
type CrossSubscriptionRestoreSettingsArgs struct {
	CrossSubscriptionRestoreState pulumi.StringPtrInput `pulumi:"crossSubscriptionRestoreState"`
}

func (CrossSubscriptionRestoreSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CrossSubscriptionRestoreSettings)(nil)).Elem()
}

func (i CrossSubscriptionRestoreSettingsArgs) ToCrossSubscriptionRestoreSettingsOutput() CrossSubscriptionRestoreSettingsOutput {
	return i.ToCrossSubscriptionRestoreSettingsOutputWithContext(context.Background())
}

func (i CrossSubscriptionRestoreSettingsArgs) ToCrossSubscriptionRestoreSettingsOutputWithContext(ctx context.Context) CrossSubscriptionRestoreSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrossSubscriptionRestoreSettingsOutput)
}

func (i CrossSubscriptionRestoreSettingsArgs) ToCrossSubscriptionRestoreSettingsPtrOutput() CrossSubscriptionRestoreSettingsPtrOutput {
	return i.ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(context.Background())
}

func (i CrossSubscriptionRestoreSettingsArgs) ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(ctx context.Context) CrossSubscriptionRestoreSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrossSubscriptionRestoreSettingsOutput).ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(ctx)
}

// CrossSubscriptionRestoreSettingsPtrInput is an input type that accepts CrossSubscriptionRestoreSettingsArgs, CrossSubscriptionRestoreSettingsPtr and CrossSubscriptionRestoreSettingsPtrOutput values.
// You can construct a concrete instance of `CrossSubscriptionRestoreSettingsPtrInput` via:
//
//	        CrossSubscriptionRestoreSettingsArgs{...}
//
//	or:
//
//	        nil
type CrossSubscriptionRestoreSettingsPtrInput interface {
	pulumi.Input

	ToCrossSubscriptionRestoreSettingsPtrOutput() CrossSubscriptionRestoreSettingsPtrOutput
	ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(context.Context) CrossSubscriptionRestoreSettingsPtrOutput
}

type crossSubscriptionRestoreSettingsPtrType CrossSubscriptionRestoreSettingsArgs

func CrossSubscriptionRestoreSettingsPtr(v *CrossSubscriptionRestoreSettingsArgs) CrossSubscriptionRestoreSettingsPtrInput {
	return (*crossSubscriptionRestoreSettingsPtrType)(v)
}

func (*crossSubscriptionRestoreSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CrossSubscriptionRestoreSettings)(nil)).Elem()
}

func (i *crossSubscriptionRestoreSettingsPtrType) ToCrossSubscriptionRestoreSettingsPtrOutput() CrossSubscriptionRestoreSettingsPtrOutput {
	return i.ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(context.Background())
}

func (i *crossSubscriptionRestoreSettingsPtrType) ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(ctx context.Context) CrossSubscriptionRestoreSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrossSubscriptionRestoreSettingsPtrOutput)
}

// Settings for Cross Subscription Restore Settings
type CrossSubscriptionRestoreSettingsOutput struct{ *pulumi.OutputState }

func (CrossSubscriptionRestoreSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CrossSubscriptionRestoreSettings)(nil)).Elem()
}

func (o CrossSubscriptionRestoreSettingsOutput) ToCrossSubscriptionRestoreSettingsOutput() CrossSubscriptionRestoreSettingsOutput {
	return o
}

func (o CrossSubscriptionRestoreSettingsOutput) ToCrossSubscriptionRestoreSettingsOutputWithContext(ctx context.Context) CrossSubscriptionRestoreSettingsOutput {
	return o
}

func (o CrossSubscriptionRestoreSettingsOutput) ToCrossSubscriptionRestoreSettingsPtrOutput() CrossSubscriptionRestoreSettingsPtrOutput {
	return o.ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(context.Background())
}

func (o CrossSubscriptionRestoreSettingsOutput) ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(ctx context.Context) CrossSubscriptionRestoreSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CrossSubscriptionRestoreSettings) *CrossSubscriptionRestoreSettings {
		return &v
	}).(CrossSubscriptionRestoreSettingsPtrOutput)
}

func (o CrossSubscriptionRestoreSettingsOutput) CrossSubscriptionRestoreState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CrossSubscriptionRestoreSettings) *string { return v.CrossSubscriptionRestoreState }).(pulumi.StringPtrOutput)
}

type CrossSubscriptionRestoreSettingsPtrOutput struct{ *pulumi.OutputState }

func (CrossSubscriptionRestoreSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CrossSubscriptionRestoreSettings)(nil)).Elem()
}

func (o CrossSubscriptionRestoreSettingsPtrOutput) ToCrossSubscriptionRestoreSettingsPtrOutput() CrossSubscriptionRestoreSettingsPtrOutput {
	return o
}

func (o CrossSubscriptionRestoreSettingsPtrOutput) ToCrossSubscriptionRestoreSettingsPtrOutputWithContext(ctx context.Context) CrossSubscriptionRestoreSettingsPtrOutput {
	return o
}

func (o CrossSubscriptionRestoreSettingsPtrOutput) Elem() CrossSubscriptionRestoreSettingsOutput {
	return o.ApplyT(func(v *CrossSubscriptionRestoreSettings) CrossSubscriptionRestoreSettings {
		if v != nil {
			return *v
		}
		var ret CrossSubscriptionRestoreSettings
		return ret
	}).(CrossSubscriptionRestoreSettingsOutput)
}

func (o CrossSubscriptionRestoreSettingsPtrOutput) CrossSubscriptionRestoreState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CrossSubscriptionRestoreSettings) *string {
		if v == nil {
			return nil
		}
		return v.CrossSubscriptionRestoreState
	}).(pulumi.StringPtrOutput)
}

// Settings for Cross Subscription Restore Settings
type CrossSubscriptionRestoreSettingsResponse struct {
	CrossSubscriptionRestoreState *string `pulumi:"crossSubscriptionRestoreState"`
}

// Settings for Cross Subscription Restore Settings
type CrossSubscriptionRestoreSettingsResponseOutput struct{ *pulumi.OutputState }

func (CrossSubscriptionRestoreSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CrossSubscriptionRestoreSettingsResponse)(nil)).Elem()
}

func (o CrossSubscriptionRestoreSettingsResponseOutput) ToCrossSubscriptionRestoreSettingsResponseOutput() CrossSubscriptionRestoreSettingsResponseOutput {
	return o
}

func (o CrossSubscriptionRestoreSettingsResponseOutput) ToCrossSubscriptionRestoreSettingsResponseOutputWithContext(ctx context.Context) CrossSubscriptionRestoreSettingsResponseOutput {
	return o
}

func (o CrossSubscriptionRestoreSettingsResponseOutput) CrossSubscriptionRestoreState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CrossSubscriptionRestoreSettingsResponse) *string { return v.CrossSubscriptionRestoreState }).(pulumi.StringPtrOutput)
}

type CrossSubscriptionRestoreSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (CrossSubscriptionRestoreSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CrossSubscriptionRestoreSettingsResponse)(nil)).Elem()
}

func (o CrossSubscriptionRestoreSettingsResponsePtrOutput) ToCrossSubscriptionRestoreSettingsResponsePtrOutput() CrossSubscriptionRestoreSettingsResponsePtrOutput {
	return o
}

func (o CrossSubscriptionRestoreSettingsResponsePtrOutput) ToCrossSubscriptionRestoreSettingsResponsePtrOutputWithContext(ctx context.Context) CrossSubscriptionRestoreSettingsResponsePtrOutput {
	return o
}

func (o CrossSubscriptionRestoreSettingsResponsePtrOutput) Elem() CrossSubscriptionRestoreSettingsResponseOutput {
	return o.ApplyT(func(v *CrossSubscriptionRestoreSettingsResponse) CrossSubscriptionRestoreSettingsResponse {
		if v != nil {
			return *v
		}
		var ret CrossSubscriptionRestoreSettingsResponse
		return ret
	}).(CrossSubscriptionRestoreSettingsResponseOutput)
}

func (o CrossSubscriptionRestoreSettingsResponsePtrOutput) CrossSubscriptionRestoreState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CrossSubscriptionRestoreSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CrossSubscriptionRestoreState
	}).(pulumi.StringPtrOutput)
}

// Additional information of the DPMContainer.
type DPMContainerExtendedInfo struct {
	// Last refresh time of the DPMContainer.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
}

// DPMContainerExtendedInfoInput is an input type that accepts DPMContainerExtendedInfoArgs and DPMContainerExtendedInfoOutput values.
// You can construct a concrete instance of `DPMContainerExtendedInfoInput` via:
//
//	DPMContainerExtendedInfoArgs{...}
type DPMContainerExtendedInfoInput interface {
	pulumi.Input

	ToDPMContainerExtendedInfoOutput() DPMContainerExtendedInfoOutput
	ToDPMContainerExtendedInfoOutputWithContext(context.Context) DPMContainerExtendedInfoOutput
}

// Additional information of the DPMContainer.
type DPMContainerExtendedInfoArgs struct {
	// Last refresh time of the DPMContainer.
	LastRefreshedAt pulumi.StringPtrInput `pulumi:"lastRefreshedAt"`
}

func (DPMContainerExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMContainerExtendedInfo)(nil)).Elem()
}

func (i DPMContainerExtendedInfoArgs) ToDPMContainerExtendedInfoOutput() DPMContainerExtendedInfoOutput {
	return i.ToDPMContainerExtendedInfoOutputWithContext(context.Background())
}

func (i DPMContainerExtendedInfoArgs) ToDPMContainerExtendedInfoOutputWithContext(ctx context.Context) DPMContainerExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMContainerExtendedInfoOutput)
}

func (i DPMContainerExtendedInfoArgs) ToDPMContainerExtendedInfoPtrOutput() DPMContainerExtendedInfoPtrOutput {
	return i.ToDPMContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i DPMContainerExtendedInfoArgs) ToDPMContainerExtendedInfoPtrOutputWithContext(ctx context.Context) DPMContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMContainerExtendedInfoOutput).ToDPMContainerExtendedInfoPtrOutputWithContext(ctx)
}

// DPMContainerExtendedInfoPtrInput is an input type that accepts DPMContainerExtendedInfoArgs, DPMContainerExtendedInfoPtr and DPMContainerExtendedInfoPtrOutput values.
// You can construct a concrete instance of `DPMContainerExtendedInfoPtrInput` via:
//
//	        DPMContainerExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type DPMContainerExtendedInfoPtrInput interface {
	pulumi.Input

	ToDPMContainerExtendedInfoPtrOutput() DPMContainerExtendedInfoPtrOutput
	ToDPMContainerExtendedInfoPtrOutputWithContext(context.Context) DPMContainerExtendedInfoPtrOutput
}

type dpmcontainerExtendedInfoPtrType DPMContainerExtendedInfoArgs

func DPMContainerExtendedInfoPtr(v *DPMContainerExtendedInfoArgs) DPMContainerExtendedInfoPtrInput {
	return (*dpmcontainerExtendedInfoPtrType)(v)
}

func (*dpmcontainerExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMContainerExtendedInfo)(nil)).Elem()
}

func (i *dpmcontainerExtendedInfoPtrType) ToDPMContainerExtendedInfoPtrOutput() DPMContainerExtendedInfoPtrOutput {
	return i.ToDPMContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *dpmcontainerExtendedInfoPtrType) ToDPMContainerExtendedInfoPtrOutputWithContext(ctx context.Context) DPMContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMContainerExtendedInfoPtrOutput)
}

// Additional information of the DPMContainer.
type DPMContainerExtendedInfoOutput struct{ *pulumi.OutputState }

func (DPMContainerExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMContainerExtendedInfo)(nil)).Elem()
}

func (o DPMContainerExtendedInfoOutput) ToDPMContainerExtendedInfoOutput() DPMContainerExtendedInfoOutput {
	return o
}

func (o DPMContainerExtendedInfoOutput) ToDPMContainerExtendedInfoOutputWithContext(ctx context.Context) DPMContainerExtendedInfoOutput {
	return o
}

func (o DPMContainerExtendedInfoOutput) ToDPMContainerExtendedInfoPtrOutput() DPMContainerExtendedInfoPtrOutput {
	return o.ToDPMContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (o DPMContainerExtendedInfoOutput) ToDPMContainerExtendedInfoPtrOutputWithContext(ctx context.Context) DPMContainerExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DPMContainerExtendedInfo) *DPMContainerExtendedInfo {
		return &v
	}).(DPMContainerExtendedInfoPtrOutput)
}

// Last refresh time of the DPMContainer.
func (o DPMContainerExtendedInfoOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMContainerExtendedInfo) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

type DPMContainerExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (DPMContainerExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMContainerExtendedInfo)(nil)).Elem()
}

func (o DPMContainerExtendedInfoPtrOutput) ToDPMContainerExtendedInfoPtrOutput() DPMContainerExtendedInfoPtrOutput {
	return o
}

func (o DPMContainerExtendedInfoPtrOutput) ToDPMContainerExtendedInfoPtrOutputWithContext(ctx context.Context) DPMContainerExtendedInfoPtrOutput {
	return o
}

func (o DPMContainerExtendedInfoPtrOutput) Elem() DPMContainerExtendedInfoOutput {
	return o.ApplyT(func(v *DPMContainerExtendedInfo) DPMContainerExtendedInfo {
		if v != nil {
			return *v
		}
		var ret DPMContainerExtendedInfo
		return ret
	}).(DPMContainerExtendedInfoOutput)
}

// Last refresh time of the DPMContainer.
func (o DPMContainerExtendedInfoPtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMContainerExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// Additional information of the DPMContainer.
type DPMContainerExtendedInfoResponse struct {
	// Last refresh time of the DPMContainer.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
}

// Additional information of the DPMContainer.
type DPMContainerExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (DPMContainerExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMContainerExtendedInfoResponse)(nil)).Elem()
}

func (o DPMContainerExtendedInfoResponseOutput) ToDPMContainerExtendedInfoResponseOutput() DPMContainerExtendedInfoResponseOutput {
	return o
}

func (o DPMContainerExtendedInfoResponseOutput) ToDPMContainerExtendedInfoResponseOutputWithContext(ctx context.Context) DPMContainerExtendedInfoResponseOutput {
	return o
}

// Last refresh time of the DPMContainer.
func (o DPMContainerExtendedInfoResponseOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMContainerExtendedInfoResponse) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

type DPMContainerExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (DPMContainerExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMContainerExtendedInfoResponse)(nil)).Elem()
}

func (o DPMContainerExtendedInfoResponsePtrOutput) ToDPMContainerExtendedInfoResponsePtrOutput() DPMContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o DPMContainerExtendedInfoResponsePtrOutput) ToDPMContainerExtendedInfoResponsePtrOutputWithContext(ctx context.Context) DPMContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o DPMContainerExtendedInfoResponsePtrOutput) Elem() DPMContainerExtendedInfoResponseOutput {
	return o.ApplyT(func(v *DPMContainerExtendedInfoResponse) DPMContainerExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret DPMContainerExtendedInfoResponse
		return ret
	}).(DPMContainerExtendedInfoResponseOutput)
}

// Last refresh time of the DPMContainer.
func (o DPMContainerExtendedInfoResponsePtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// Additional information on Backup engine specific backup item.
type DPMProtectedItem struct {
	// Backup Management server protecting this backup item
	BackupEngineName *string `pulumi:"backupEngineName"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Extended info of the backup item.
	ExtendedInfo *DPMProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the managed item
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'DPMProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Protection state of the backup engine
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// DPMProtectedItemInput is an input type that accepts DPMProtectedItemArgs and DPMProtectedItemOutput values.
// You can construct a concrete instance of `DPMProtectedItemInput` via:
//
//	DPMProtectedItemArgs{...}
type DPMProtectedItemInput interface {
	pulumi.Input

	ToDPMProtectedItemOutput() DPMProtectedItemOutput
	ToDPMProtectedItemOutputWithContext(context.Context) DPMProtectedItemOutput
}

// Additional information on Backup engine specific backup item.
type DPMProtectedItemArgs struct {
	// Backup Management server protecting this backup item
	BackupEngineName pulumi.StringPtrInput `pulumi:"backupEngineName"`
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Extended info of the backup item.
	ExtendedInfo DPMProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the managed item
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'DPMProtectedItem'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Protection state of the backup engine
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (DPMProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMProtectedItem)(nil)).Elem()
}

func (i DPMProtectedItemArgs) ToDPMProtectedItemOutput() DPMProtectedItemOutput {
	return i.ToDPMProtectedItemOutputWithContext(context.Background())
}

func (i DPMProtectedItemArgs) ToDPMProtectedItemOutputWithContext(ctx context.Context) DPMProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMProtectedItemOutput)
}

func (i DPMProtectedItemArgs) ToDPMProtectedItemPtrOutput() DPMProtectedItemPtrOutput {
	return i.ToDPMProtectedItemPtrOutputWithContext(context.Background())
}

func (i DPMProtectedItemArgs) ToDPMProtectedItemPtrOutputWithContext(ctx context.Context) DPMProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMProtectedItemOutput).ToDPMProtectedItemPtrOutputWithContext(ctx)
}

// DPMProtectedItemPtrInput is an input type that accepts DPMProtectedItemArgs, DPMProtectedItemPtr and DPMProtectedItemPtrOutput values.
// You can construct a concrete instance of `DPMProtectedItemPtrInput` via:
//
//	        DPMProtectedItemArgs{...}
//
//	or:
//
//	        nil
type DPMProtectedItemPtrInput interface {
	pulumi.Input

	ToDPMProtectedItemPtrOutput() DPMProtectedItemPtrOutput
	ToDPMProtectedItemPtrOutputWithContext(context.Context) DPMProtectedItemPtrOutput
}

type dpmprotectedItemPtrType DPMProtectedItemArgs

func DPMProtectedItemPtr(v *DPMProtectedItemArgs) DPMProtectedItemPtrInput {
	return (*dpmprotectedItemPtrType)(v)
}

func (*dpmprotectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMProtectedItem)(nil)).Elem()
}

func (i *dpmprotectedItemPtrType) ToDPMProtectedItemPtrOutput() DPMProtectedItemPtrOutput {
	return i.ToDPMProtectedItemPtrOutputWithContext(context.Background())
}

func (i *dpmprotectedItemPtrType) ToDPMProtectedItemPtrOutputWithContext(ctx context.Context) DPMProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMProtectedItemPtrOutput)
}

// Additional information on Backup engine specific backup item.
type DPMProtectedItemOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMProtectedItem)(nil)).Elem()
}

func (o DPMProtectedItemOutput) ToDPMProtectedItemOutput() DPMProtectedItemOutput {
	return o
}

func (o DPMProtectedItemOutput) ToDPMProtectedItemOutputWithContext(ctx context.Context) DPMProtectedItemOutput {
	return o
}

func (o DPMProtectedItemOutput) ToDPMProtectedItemPtrOutput() DPMProtectedItemPtrOutput {
	return o.ToDPMProtectedItemPtrOutputWithContext(context.Background())
}

func (o DPMProtectedItemOutput) ToDPMProtectedItemPtrOutputWithContext(ctx context.Context) DPMProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DPMProtectedItem) *DPMProtectedItem {
		return &v
	}).(DPMProtectedItemPtrOutput)
}

// Backup Management server protecting this backup item
func (o DPMProtectedItemOutput) BackupEngineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.BackupEngineName }).(pulumi.StringPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o DPMProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o DPMProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o DPMProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o DPMProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o DPMProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Extended info of the backup item.
func (o DPMProtectedItemOutput) ExtendedInfo() DPMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *DPMProtectedItemExtendedInfo { return v.ExtendedInfo }).(DPMProtectedItemExtendedInfoPtrOutput)
}

// Friendly name of the managed item
func (o DPMProtectedItemOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o DPMProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o DPMProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o DPMProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o DPMProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o DPMProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o DPMProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o DPMProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'DPMProtectedItem'.
func (o DPMProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v DPMProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Protection state of the backup engine
func (o DPMProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o DPMProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DPMProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o DPMProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o DPMProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type DPMProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMProtectedItem)(nil)).Elem()
}

func (o DPMProtectedItemPtrOutput) ToDPMProtectedItemPtrOutput() DPMProtectedItemPtrOutput {
	return o
}

func (o DPMProtectedItemPtrOutput) ToDPMProtectedItemPtrOutputWithContext(ctx context.Context) DPMProtectedItemPtrOutput {
	return o
}

func (o DPMProtectedItemPtrOutput) Elem() DPMProtectedItemOutput {
	return o.ApplyT(func(v *DPMProtectedItem) DPMProtectedItem {
		if v != nil {
			return *v
		}
		var ret DPMProtectedItem
		return ret
	}).(DPMProtectedItemOutput)
}

// Backup Management server protecting this backup item
func (o DPMProtectedItemPtrOutput) BackupEngineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupEngineName
	}).(pulumi.StringPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o DPMProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o DPMProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o DPMProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o DPMProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o DPMProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Extended info of the backup item.
func (o DPMProtectedItemPtrOutput) ExtendedInfo() DPMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *DPMProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(DPMProtectedItemExtendedInfoPtrOutput)
}

// Friendly name of the managed item
func (o DPMProtectedItemPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o DPMProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o DPMProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o DPMProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o DPMProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o DPMProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o DPMProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o DPMProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'DPMProtectedItem'.
func (o DPMProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Protection state of the backup engine
func (o DPMProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o DPMProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DPMProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o DPMProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o DPMProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Additional information of DPM Protected item.
type DPMProtectedItemExtendedInfo struct {
	// Used Disk storage in bytes.
	DiskStorageUsedInBytes *string `pulumi:"diskStorageUsedInBytes"`
	// To check if backup item is collocated.
	IsCollocated *bool `pulumi:"isCollocated"`
	// To check if backup item is cloud protected.
	IsPresentOnCloud *bool `pulumi:"isPresentOnCloud"`
	// Last backup status information on backup item.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Last refresh time on backup item.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// Oldest cloud recovery point time.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// latest disk recovery point time.
	OnPremiseLatestRecoveryPoint *string `pulumi:"onPremiseLatestRecoveryPoint"`
	// Oldest disk recovery point time.
	OnPremiseOldestRecoveryPoint *string `pulumi:"onPremiseOldestRecoveryPoint"`
	// disk recovery point count.
	OnPremiseRecoveryPointCount *int `pulumi:"onPremiseRecoveryPointCount"`
	// Attribute to provide information on various DBs.
	ProtectableObjectLoadPath map[string]string `pulumi:"protectableObjectLoadPath"`
	// To check if backup item is disk protected.
	Protected *bool `pulumi:"protected"`
	// Protection group name of the backup item.
	ProtectionGroupName *string `pulumi:"protectionGroupName"`
	// cloud recovery point count.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
	// total Disk storage in bytes.
	TotalDiskStorageSizeInBytes *string `pulumi:"totalDiskStorageSizeInBytes"`
}

// DPMProtectedItemExtendedInfoInput is an input type that accepts DPMProtectedItemExtendedInfoArgs and DPMProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `DPMProtectedItemExtendedInfoInput` via:
//
//	DPMProtectedItemExtendedInfoArgs{...}
type DPMProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToDPMProtectedItemExtendedInfoOutput() DPMProtectedItemExtendedInfoOutput
	ToDPMProtectedItemExtendedInfoOutputWithContext(context.Context) DPMProtectedItemExtendedInfoOutput
}

// Additional information of DPM Protected item.
type DPMProtectedItemExtendedInfoArgs struct {
	// Used Disk storage in bytes.
	DiskStorageUsedInBytes pulumi.StringPtrInput `pulumi:"diskStorageUsedInBytes"`
	// To check if backup item is collocated.
	IsCollocated pulumi.BoolPtrInput `pulumi:"isCollocated"`
	// To check if backup item is cloud protected.
	IsPresentOnCloud pulumi.BoolPtrInput `pulumi:"isPresentOnCloud"`
	// Last backup status information on backup item.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Last refresh time on backup item.
	LastRefreshedAt pulumi.StringPtrInput `pulumi:"lastRefreshedAt"`
	// Oldest cloud recovery point time.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// latest disk recovery point time.
	OnPremiseLatestRecoveryPoint pulumi.StringPtrInput `pulumi:"onPremiseLatestRecoveryPoint"`
	// Oldest disk recovery point time.
	OnPremiseOldestRecoveryPoint pulumi.StringPtrInput `pulumi:"onPremiseOldestRecoveryPoint"`
	// disk recovery point count.
	OnPremiseRecoveryPointCount pulumi.IntPtrInput `pulumi:"onPremiseRecoveryPointCount"`
	// Attribute to provide information on various DBs.
	ProtectableObjectLoadPath pulumi.StringMapInput `pulumi:"protectableObjectLoadPath"`
	// To check if backup item is disk protected.
	Protected pulumi.BoolPtrInput `pulumi:"protected"`
	// Protection group name of the backup item.
	ProtectionGroupName pulumi.StringPtrInput `pulumi:"protectionGroupName"`
	// cloud recovery point count.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
	// total Disk storage in bytes.
	TotalDiskStorageSizeInBytes pulumi.StringPtrInput `pulumi:"totalDiskStorageSizeInBytes"`
}

func (DPMProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMProtectedItemExtendedInfo)(nil)).Elem()
}

func (i DPMProtectedItemExtendedInfoArgs) ToDPMProtectedItemExtendedInfoOutput() DPMProtectedItemExtendedInfoOutput {
	return i.ToDPMProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i DPMProtectedItemExtendedInfoArgs) ToDPMProtectedItemExtendedInfoOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMProtectedItemExtendedInfoOutput)
}

func (i DPMProtectedItemExtendedInfoArgs) ToDPMProtectedItemExtendedInfoPtrOutput() DPMProtectedItemExtendedInfoPtrOutput {
	return i.ToDPMProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i DPMProtectedItemExtendedInfoArgs) ToDPMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMProtectedItemExtendedInfoOutput).ToDPMProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// DPMProtectedItemExtendedInfoPtrInput is an input type that accepts DPMProtectedItemExtendedInfoArgs, DPMProtectedItemExtendedInfoPtr and DPMProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `DPMProtectedItemExtendedInfoPtrInput` via:
//
//	        DPMProtectedItemExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type DPMProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToDPMProtectedItemExtendedInfoPtrOutput() DPMProtectedItemExtendedInfoPtrOutput
	ToDPMProtectedItemExtendedInfoPtrOutputWithContext(context.Context) DPMProtectedItemExtendedInfoPtrOutput
}

type dpmprotectedItemExtendedInfoPtrType DPMProtectedItemExtendedInfoArgs

func DPMProtectedItemExtendedInfoPtr(v *DPMProtectedItemExtendedInfoArgs) DPMProtectedItemExtendedInfoPtrInput {
	return (*dpmprotectedItemExtendedInfoPtrType)(v)
}

func (*dpmprotectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *dpmprotectedItemExtendedInfoPtrType) ToDPMProtectedItemExtendedInfoPtrOutput() DPMProtectedItemExtendedInfoPtrOutput {
	return i.ToDPMProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *dpmprotectedItemExtendedInfoPtrType) ToDPMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DPMProtectedItemExtendedInfoPtrOutput)
}

// Additional information of DPM Protected item.
type DPMProtectedItemExtendedInfoOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMProtectedItemExtendedInfo)(nil)).Elem()
}

func (o DPMProtectedItemExtendedInfoOutput) ToDPMProtectedItemExtendedInfoOutput() DPMProtectedItemExtendedInfoOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoOutput) ToDPMProtectedItemExtendedInfoOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoOutput) ToDPMProtectedItemExtendedInfoPtrOutput() DPMProtectedItemExtendedInfoPtrOutput {
	return o.ToDPMProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (o DPMProtectedItemExtendedInfoOutput) ToDPMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DPMProtectedItemExtendedInfo) *DPMProtectedItemExtendedInfo {
		return &v
	}).(DPMProtectedItemExtendedInfoPtrOutput)
}

// Used Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoOutput) DiskStorageUsedInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *string { return v.DiskStorageUsedInBytes }).(pulumi.StringPtrOutput)
}

// To check if backup item is collocated.
func (o DPMProtectedItemExtendedInfoOutput) IsCollocated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *bool { return v.IsCollocated }).(pulumi.BoolPtrOutput)
}

// To check if backup item is cloud protected.
func (o DPMProtectedItemExtendedInfoOutput) IsPresentOnCloud() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *bool { return v.IsPresentOnCloud }).(pulumi.BoolPtrOutput)
}

// Last backup status information on backup item.
func (o DPMProtectedItemExtendedInfoOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Last refresh time on backup item.
func (o DPMProtectedItemExtendedInfoOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

// Oldest cloud recovery point time.
func (o DPMProtectedItemExtendedInfoOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// latest disk recovery point time.
func (o DPMProtectedItemExtendedInfoOutput) OnPremiseLatestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *string { return v.OnPremiseLatestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Oldest disk recovery point time.
func (o DPMProtectedItemExtendedInfoOutput) OnPremiseOldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *string { return v.OnPremiseOldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// disk recovery point count.
func (o DPMProtectedItemExtendedInfoOutput) OnPremiseRecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *int { return v.OnPremiseRecoveryPointCount }).(pulumi.IntPtrOutput)
}

// Attribute to provide information on various DBs.
func (o DPMProtectedItemExtendedInfoOutput) ProtectableObjectLoadPath() pulumi.StringMapOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) map[string]string { return v.ProtectableObjectLoadPath }).(pulumi.StringMapOutput)
}

// To check if backup item is disk protected.
func (o DPMProtectedItemExtendedInfoOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *bool { return v.Protected }).(pulumi.BoolPtrOutput)
}

// Protection group name of the backup item.
func (o DPMProtectedItemExtendedInfoOutput) ProtectionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *string { return v.ProtectionGroupName }).(pulumi.StringPtrOutput)
}

// cloud recovery point count.
func (o DPMProtectedItemExtendedInfoOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

// total Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoOutput) TotalDiskStorageSizeInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfo) *string { return v.TotalDiskStorageSizeInBytes }).(pulumi.StringPtrOutput)
}

type DPMProtectedItemExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMProtectedItemExtendedInfo)(nil)).Elem()
}

func (o DPMProtectedItemExtendedInfoPtrOutput) ToDPMProtectedItemExtendedInfoPtrOutput() DPMProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoPtrOutput) ToDPMProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoPtrOutput) Elem() DPMProtectedItemExtendedInfoOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) DPMProtectedItemExtendedInfo {
		if v != nil {
			return *v
		}
		var ret DPMProtectedItemExtendedInfo
		return ret
	}).(DPMProtectedItemExtendedInfoOutput)
}

// Used Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoPtrOutput) DiskStorageUsedInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.DiskStorageUsedInBytes
	}).(pulumi.StringPtrOutput)
}

// To check if backup item is collocated.
func (o DPMProtectedItemExtendedInfoPtrOutput) IsCollocated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *bool {
		if v == nil {
			return nil
		}
		return v.IsCollocated
	}).(pulumi.BoolPtrOutput)
}

// To check if backup item is cloud protected.
func (o DPMProtectedItemExtendedInfoPtrOutput) IsPresentOnCloud() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *bool {
		if v == nil {
			return nil
		}
		return v.IsPresentOnCloud
	}).(pulumi.BoolPtrOutput)
}

// Last backup status information on backup item.
func (o DPMProtectedItemExtendedInfoPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Last refresh time on backup item.
func (o DPMProtectedItemExtendedInfoPtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// Oldest cloud recovery point time.
func (o DPMProtectedItemExtendedInfoPtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// latest disk recovery point time.
func (o DPMProtectedItemExtendedInfoPtrOutput) OnPremiseLatestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OnPremiseLatestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Oldest disk recovery point time.
func (o DPMProtectedItemExtendedInfoPtrOutput) OnPremiseOldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OnPremiseOldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// disk recovery point count.
func (o DPMProtectedItemExtendedInfoPtrOutput) OnPremiseRecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *int {
		if v == nil {
			return nil
		}
		return v.OnPremiseRecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Attribute to provide information on various DBs.
func (o DPMProtectedItemExtendedInfoPtrOutput) ProtectableObjectLoadPath() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) map[string]string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectLoadPath
	}).(pulumi.StringMapOutput)
}

// To check if backup item is disk protected.
func (o DPMProtectedItemExtendedInfoPtrOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Protected
	}).(pulumi.BoolPtrOutput)
}

// Protection group name of the backup item.
func (o DPMProtectedItemExtendedInfoPtrOutput) ProtectionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionGroupName
	}).(pulumi.StringPtrOutput)
}

// cloud recovery point count.
func (o DPMProtectedItemExtendedInfoPtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// total Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoPtrOutput) TotalDiskStorageSizeInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.TotalDiskStorageSizeInBytes
	}).(pulumi.StringPtrOutput)
}

// Additional information of DPM Protected item.
type DPMProtectedItemExtendedInfoResponse struct {
	// Used Disk storage in bytes.
	DiskStorageUsedInBytes *string `pulumi:"diskStorageUsedInBytes"`
	// To check if backup item is collocated.
	IsCollocated *bool `pulumi:"isCollocated"`
	// To check if backup item is cloud protected.
	IsPresentOnCloud *bool `pulumi:"isPresentOnCloud"`
	// Last backup status information on backup item.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Last refresh time on backup item.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// Oldest cloud recovery point time.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// latest disk recovery point time.
	OnPremiseLatestRecoveryPoint *string `pulumi:"onPremiseLatestRecoveryPoint"`
	// Oldest disk recovery point time.
	OnPremiseOldestRecoveryPoint *string `pulumi:"onPremiseOldestRecoveryPoint"`
	// disk recovery point count.
	OnPremiseRecoveryPointCount *int `pulumi:"onPremiseRecoveryPointCount"`
	// Attribute to provide information on various DBs.
	ProtectableObjectLoadPath map[string]string `pulumi:"protectableObjectLoadPath"`
	// To check if backup item is disk protected.
	Protected *bool `pulumi:"protected"`
	// Protection group name of the backup item.
	ProtectionGroupName *string `pulumi:"protectionGroupName"`
	// cloud recovery point count.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
	// total Disk storage in bytes.
	TotalDiskStorageSizeInBytes *string `pulumi:"totalDiskStorageSizeInBytes"`
}

// Additional information of DPM Protected item.
type DPMProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o DPMProtectedItemExtendedInfoResponseOutput) ToDPMProtectedItemExtendedInfoResponseOutput() DPMProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoResponseOutput) ToDPMProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoResponseOutput {
	return o
}

// Used Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoResponseOutput) DiskStorageUsedInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.DiskStorageUsedInBytes }).(pulumi.StringPtrOutput)
}

// To check if backup item is collocated.
func (o DPMProtectedItemExtendedInfoResponseOutput) IsCollocated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *bool { return v.IsCollocated }).(pulumi.BoolPtrOutput)
}

// To check if backup item is cloud protected.
func (o DPMProtectedItemExtendedInfoResponseOutput) IsPresentOnCloud() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *bool { return v.IsPresentOnCloud }).(pulumi.BoolPtrOutput)
}

// Last backup status information on backup item.
func (o DPMProtectedItemExtendedInfoResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Last refresh time on backup item.
func (o DPMProtectedItemExtendedInfoResponseOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

// Oldest cloud recovery point time.
func (o DPMProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// latest disk recovery point time.
func (o DPMProtectedItemExtendedInfoResponseOutput) OnPremiseLatestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.OnPremiseLatestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Oldest disk recovery point time.
func (o DPMProtectedItemExtendedInfoResponseOutput) OnPremiseOldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.OnPremiseOldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// disk recovery point count.
func (o DPMProtectedItemExtendedInfoResponseOutput) OnPremiseRecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *int { return v.OnPremiseRecoveryPointCount }).(pulumi.IntPtrOutput)
}

// Attribute to provide information on various DBs.
func (o DPMProtectedItemExtendedInfoResponseOutput) ProtectableObjectLoadPath() pulumi.StringMapOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) map[string]string { return v.ProtectableObjectLoadPath }).(pulumi.StringMapOutput)
}

// To check if backup item is disk protected.
func (o DPMProtectedItemExtendedInfoResponseOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *bool { return v.Protected }).(pulumi.BoolPtrOutput)
}

// Protection group name of the backup item.
func (o DPMProtectedItemExtendedInfoResponseOutput) ProtectionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.ProtectionGroupName }).(pulumi.StringPtrOutput)
}

// cloud recovery point count.
func (o DPMProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

// total Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoResponseOutput) TotalDiskStorageSizeInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemExtendedInfoResponse) *string { return v.TotalDiskStorageSizeInBytes }).(pulumi.StringPtrOutput)
}

type DPMProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DPMProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o DPMProtectedItemExtendedInfoResponsePtrOutput) ToDPMProtectedItemExtendedInfoResponsePtrOutput() DPMProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoResponsePtrOutput) ToDPMProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) DPMProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o DPMProtectedItemExtendedInfoResponsePtrOutput) Elem() DPMProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) DPMProtectedItemExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret DPMProtectedItemExtendedInfoResponse
		return ret
	}).(DPMProtectedItemExtendedInfoResponseOutput)
}

// Used Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) DiskStorageUsedInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiskStorageUsedInBytes
	}).(pulumi.StringPtrOutput)
}

// To check if backup item is collocated.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) IsCollocated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCollocated
	}).(pulumi.BoolPtrOutput)
}

// To check if backup item is cloud protected.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) IsPresentOnCloud() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsPresentOnCloud
	}).(pulumi.BoolPtrOutput)
}

// Last backup status information on backup item.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Last refresh time on backup item.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// Oldest cloud recovery point time.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// latest disk recovery point time.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) OnPremiseLatestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OnPremiseLatestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Oldest disk recovery point time.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) OnPremiseOldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OnPremiseOldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// disk recovery point count.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) OnPremiseRecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.OnPremiseRecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Attribute to provide information on various DBs.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) ProtectableObjectLoadPath() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectLoadPath
	}).(pulumi.StringMapOutput)
}

// To check if backup item is disk protected.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) Protected() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Protected
	}).(pulumi.BoolPtrOutput)
}

// Protection group name of the backup item.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) ProtectionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionGroupName
	}).(pulumi.StringPtrOutput)
}

// cloud recovery point count.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// total Disk storage in bytes.
func (o DPMProtectedItemExtendedInfoResponsePtrOutput) TotalDiskStorageSizeInBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DPMProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.TotalDiskStorageSizeInBytes
	}).(pulumi.StringPtrOutput)
}

// Additional information on Backup engine specific backup item.
type DPMProtectedItemResponse struct {
	// Backup Management server protecting this backup item
	BackupEngineName *string `pulumi:"backupEngineName"`
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Extended info of the backup item.
	ExtendedInfo *DPMProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the managed item
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'DPMProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Protection state of the backup engine
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Additional information on Backup engine specific backup item.
type DPMProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (DPMProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DPMProtectedItemResponse)(nil)).Elem()
}

func (o DPMProtectedItemResponseOutput) ToDPMProtectedItemResponseOutput() DPMProtectedItemResponseOutput {
	return o
}

func (o DPMProtectedItemResponseOutput) ToDPMProtectedItemResponseOutputWithContext(ctx context.Context) DPMProtectedItemResponseOutput {
	return o
}

// Backup Management server protecting this backup item
func (o DPMProtectedItemResponseOutput) BackupEngineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.BackupEngineName }).(pulumi.StringPtrOutput)
}

// Type of backup management for the backed up item.
func (o DPMProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o DPMProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o DPMProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o DPMProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o DPMProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o DPMProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Extended info of the backup item.
func (o DPMProtectedItemResponseOutput) ExtendedInfo() DPMProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *DPMProtectedItemExtendedInfoResponse { return v.ExtendedInfo }).(DPMProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of the managed item
func (o DPMProtectedItemResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o DPMProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o DPMProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o DPMProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o DPMProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o DPMProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o DPMProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o DPMProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'DPMProtectedItem'.
func (o DPMProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Protection state of the backup engine
func (o DPMProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o DPMProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o DPMProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o DPMProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o DPMProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o DPMProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v DPMProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Daily retention format.
type DailyRetentionFormat struct {
	// List of days of the month.
	DaysOfTheMonth []Day `pulumi:"daysOfTheMonth"`
}

// DailyRetentionFormatInput is an input type that accepts DailyRetentionFormatArgs and DailyRetentionFormatOutput values.
// You can construct a concrete instance of `DailyRetentionFormatInput` via:
//
//	DailyRetentionFormatArgs{...}
type DailyRetentionFormatInput interface {
	pulumi.Input

	ToDailyRetentionFormatOutput() DailyRetentionFormatOutput
	ToDailyRetentionFormatOutputWithContext(context.Context) DailyRetentionFormatOutput
}

// Daily retention format.
type DailyRetentionFormatArgs struct {
	// List of days of the month.
	DaysOfTheMonth DayArrayInput `pulumi:"daysOfTheMonth"`
}

func (DailyRetentionFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyRetentionFormat)(nil)).Elem()
}

func (i DailyRetentionFormatArgs) ToDailyRetentionFormatOutput() DailyRetentionFormatOutput {
	return i.ToDailyRetentionFormatOutputWithContext(context.Background())
}

func (i DailyRetentionFormatArgs) ToDailyRetentionFormatOutputWithContext(ctx context.Context) DailyRetentionFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionFormatOutput)
}

func (i DailyRetentionFormatArgs) ToDailyRetentionFormatPtrOutput() DailyRetentionFormatPtrOutput {
	return i.ToDailyRetentionFormatPtrOutputWithContext(context.Background())
}

func (i DailyRetentionFormatArgs) ToDailyRetentionFormatPtrOutputWithContext(ctx context.Context) DailyRetentionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionFormatOutput).ToDailyRetentionFormatPtrOutputWithContext(ctx)
}

// DailyRetentionFormatPtrInput is an input type that accepts DailyRetentionFormatArgs, DailyRetentionFormatPtr and DailyRetentionFormatPtrOutput values.
// You can construct a concrete instance of `DailyRetentionFormatPtrInput` via:
//
//	        DailyRetentionFormatArgs{...}
//
//	or:
//
//	        nil
type DailyRetentionFormatPtrInput interface {
	pulumi.Input

	ToDailyRetentionFormatPtrOutput() DailyRetentionFormatPtrOutput
	ToDailyRetentionFormatPtrOutputWithContext(context.Context) DailyRetentionFormatPtrOutput
}

type dailyRetentionFormatPtrType DailyRetentionFormatArgs

func DailyRetentionFormatPtr(v *DailyRetentionFormatArgs) DailyRetentionFormatPtrInput {
	return (*dailyRetentionFormatPtrType)(v)
}

func (*dailyRetentionFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyRetentionFormat)(nil)).Elem()
}

func (i *dailyRetentionFormatPtrType) ToDailyRetentionFormatPtrOutput() DailyRetentionFormatPtrOutput {
	return i.ToDailyRetentionFormatPtrOutputWithContext(context.Background())
}

func (i *dailyRetentionFormatPtrType) ToDailyRetentionFormatPtrOutputWithContext(ctx context.Context) DailyRetentionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionFormatPtrOutput)
}

// Daily retention format.
type DailyRetentionFormatOutput struct{ *pulumi.OutputState }

func (DailyRetentionFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyRetentionFormat)(nil)).Elem()
}

func (o DailyRetentionFormatOutput) ToDailyRetentionFormatOutput() DailyRetentionFormatOutput {
	return o
}

func (o DailyRetentionFormatOutput) ToDailyRetentionFormatOutputWithContext(ctx context.Context) DailyRetentionFormatOutput {
	return o
}

func (o DailyRetentionFormatOutput) ToDailyRetentionFormatPtrOutput() DailyRetentionFormatPtrOutput {
	return o.ToDailyRetentionFormatPtrOutputWithContext(context.Background())
}

func (o DailyRetentionFormatOutput) ToDailyRetentionFormatPtrOutputWithContext(ctx context.Context) DailyRetentionFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DailyRetentionFormat) *DailyRetentionFormat {
		return &v
	}).(DailyRetentionFormatPtrOutput)
}

// List of days of the month.
func (o DailyRetentionFormatOutput) DaysOfTheMonth() DayArrayOutput {
	return o.ApplyT(func(v DailyRetentionFormat) []Day { return v.DaysOfTheMonth }).(DayArrayOutput)
}

type DailyRetentionFormatPtrOutput struct{ *pulumi.OutputState }

func (DailyRetentionFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyRetentionFormat)(nil)).Elem()
}

func (o DailyRetentionFormatPtrOutput) ToDailyRetentionFormatPtrOutput() DailyRetentionFormatPtrOutput {
	return o
}

func (o DailyRetentionFormatPtrOutput) ToDailyRetentionFormatPtrOutputWithContext(ctx context.Context) DailyRetentionFormatPtrOutput {
	return o
}

func (o DailyRetentionFormatPtrOutput) Elem() DailyRetentionFormatOutput {
	return o.ApplyT(func(v *DailyRetentionFormat) DailyRetentionFormat {
		if v != nil {
			return *v
		}
		var ret DailyRetentionFormat
		return ret
	}).(DailyRetentionFormatOutput)
}

// List of days of the month.
func (o DailyRetentionFormatPtrOutput) DaysOfTheMonth() DayArrayOutput {
	return o.ApplyT(func(v *DailyRetentionFormat) []Day {
		if v == nil {
			return nil
		}
		return v.DaysOfTheMonth
	}).(DayArrayOutput)
}

// Daily retention format.
type DailyRetentionFormatResponse struct {
	// List of days of the month.
	DaysOfTheMonth []DayResponse `pulumi:"daysOfTheMonth"`
}

// Daily retention format.
type DailyRetentionFormatResponseOutput struct{ *pulumi.OutputState }

func (DailyRetentionFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyRetentionFormatResponse)(nil)).Elem()
}

func (o DailyRetentionFormatResponseOutput) ToDailyRetentionFormatResponseOutput() DailyRetentionFormatResponseOutput {
	return o
}

func (o DailyRetentionFormatResponseOutput) ToDailyRetentionFormatResponseOutputWithContext(ctx context.Context) DailyRetentionFormatResponseOutput {
	return o
}

// List of days of the month.
func (o DailyRetentionFormatResponseOutput) DaysOfTheMonth() DayResponseArrayOutput {
	return o.ApplyT(func(v DailyRetentionFormatResponse) []DayResponse { return v.DaysOfTheMonth }).(DayResponseArrayOutput)
}

type DailyRetentionFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (DailyRetentionFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyRetentionFormatResponse)(nil)).Elem()
}

func (o DailyRetentionFormatResponsePtrOutput) ToDailyRetentionFormatResponsePtrOutput() DailyRetentionFormatResponsePtrOutput {
	return o
}

func (o DailyRetentionFormatResponsePtrOutput) ToDailyRetentionFormatResponsePtrOutputWithContext(ctx context.Context) DailyRetentionFormatResponsePtrOutput {
	return o
}

func (o DailyRetentionFormatResponsePtrOutput) Elem() DailyRetentionFormatResponseOutput {
	return o.ApplyT(func(v *DailyRetentionFormatResponse) DailyRetentionFormatResponse {
		if v != nil {
			return *v
		}
		var ret DailyRetentionFormatResponse
		return ret
	}).(DailyRetentionFormatResponseOutput)
}

// List of days of the month.
func (o DailyRetentionFormatResponsePtrOutput) DaysOfTheMonth() DayResponseArrayOutput {
	return o.ApplyT(func(v *DailyRetentionFormatResponse) []DayResponse {
		if v == nil {
			return nil
		}
		return v.DaysOfTheMonth
	}).(DayResponseArrayOutput)
}

// Daily retention schedule.
type DailyRetentionSchedule struct {
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// DailyRetentionScheduleInput is an input type that accepts DailyRetentionScheduleArgs and DailyRetentionScheduleOutput values.
// You can construct a concrete instance of `DailyRetentionScheduleInput` via:
//
//	DailyRetentionScheduleArgs{...}
type DailyRetentionScheduleInput interface {
	pulumi.Input

	ToDailyRetentionScheduleOutput() DailyRetentionScheduleOutput
	ToDailyRetentionScheduleOutputWithContext(context.Context) DailyRetentionScheduleOutput
}

// Daily retention schedule.
type DailyRetentionScheduleArgs struct {
	// Retention duration of retention Policy.
	RetentionDuration RetentionDurationPtrInput `pulumi:"retentionDuration"`
	// Retention times of retention policy.
	RetentionTimes pulumi.StringArrayInput `pulumi:"retentionTimes"`
}

func (DailyRetentionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyRetentionSchedule)(nil)).Elem()
}

func (i DailyRetentionScheduleArgs) ToDailyRetentionScheduleOutput() DailyRetentionScheduleOutput {
	return i.ToDailyRetentionScheduleOutputWithContext(context.Background())
}

func (i DailyRetentionScheduleArgs) ToDailyRetentionScheduleOutputWithContext(ctx context.Context) DailyRetentionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionScheduleOutput)
}

func (i DailyRetentionScheduleArgs) ToDailyRetentionSchedulePtrOutput() DailyRetentionSchedulePtrOutput {
	return i.ToDailyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i DailyRetentionScheduleArgs) ToDailyRetentionSchedulePtrOutputWithContext(ctx context.Context) DailyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionScheduleOutput).ToDailyRetentionSchedulePtrOutputWithContext(ctx)
}

// DailyRetentionSchedulePtrInput is an input type that accepts DailyRetentionScheduleArgs, DailyRetentionSchedulePtr and DailyRetentionSchedulePtrOutput values.
// You can construct a concrete instance of `DailyRetentionSchedulePtrInput` via:
//
//	        DailyRetentionScheduleArgs{...}
//
//	or:
//
//	        nil
type DailyRetentionSchedulePtrInput interface {
	pulumi.Input

	ToDailyRetentionSchedulePtrOutput() DailyRetentionSchedulePtrOutput
	ToDailyRetentionSchedulePtrOutputWithContext(context.Context) DailyRetentionSchedulePtrOutput
}

type dailyRetentionSchedulePtrType DailyRetentionScheduleArgs

func DailyRetentionSchedulePtr(v *DailyRetentionScheduleArgs) DailyRetentionSchedulePtrInput {
	return (*dailyRetentionSchedulePtrType)(v)
}

func (*dailyRetentionSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyRetentionSchedule)(nil)).Elem()
}

func (i *dailyRetentionSchedulePtrType) ToDailyRetentionSchedulePtrOutput() DailyRetentionSchedulePtrOutput {
	return i.ToDailyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i *dailyRetentionSchedulePtrType) ToDailyRetentionSchedulePtrOutputWithContext(ctx context.Context) DailyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyRetentionSchedulePtrOutput)
}

// Daily retention schedule.
type DailyRetentionScheduleOutput struct{ *pulumi.OutputState }

func (DailyRetentionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyRetentionSchedule)(nil)).Elem()
}

func (o DailyRetentionScheduleOutput) ToDailyRetentionScheduleOutput() DailyRetentionScheduleOutput {
	return o
}

func (o DailyRetentionScheduleOutput) ToDailyRetentionScheduleOutputWithContext(ctx context.Context) DailyRetentionScheduleOutput {
	return o
}

func (o DailyRetentionScheduleOutput) ToDailyRetentionSchedulePtrOutput() DailyRetentionSchedulePtrOutput {
	return o.ToDailyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (o DailyRetentionScheduleOutput) ToDailyRetentionSchedulePtrOutputWithContext(ctx context.Context) DailyRetentionSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DailyRetentionSchedule) *DailyRetentionSchedule {
		return &v
	}).(DailyRetentionSchedulePtrOutput)
}

// Retention duration of retention Policy.
func (o DailyRetentionScheduleOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v DailyRetentionSchedule) *RetentionDuration { return v.RetentionDuration }).(RetentionDurationPtrOutput)
}

// Retention times of retention policy.
func (o DailyRetentionScheduleOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DailyRetentionSchedule) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type DailyRetentionSchedulePtrOutput struct{ *pulumi.OutputState }

func (DailyRetentionSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyRetentionSchedule)(nil)).Elem()
}

func (o DailyRetentionSchedulePtrOutput) ToDailyRetentionSchedulePtrOutput() DailyRetentionSchedulePtrOutput {
	return o
}

func (o DailyRetentionSchedulePtrOutput) ToDailyRetentionSchedulePtrOutputWithContext(ctx context.Context) DailyRetentionSchedulePtrOutput {
	return o
}

func (o DailyRetentionSchedulePtrOutput) Elem() DailyRetentionScheduleOutput {
	return o.ApplyT(func(v *DailyRetentionSchedule) DailyRetentionSchedule {
		if v != nil {
			return *v
		}
		var ret DailyRetentionSchedule
		return ret
	}).(DailyRetentionScheduleOutput)
}

// Retention duration of retention Policy.
func (o DailyRetentionSchedulePtrOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v *DailyRetentionSchedule) *RetentionDuration {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationPtrOutput)
}

// Retention times of retention policy.
func (o DailyRetentionSchedulePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DailyRetentionSchedule) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

// Daily retention schedule.
type DailyRetentionScheduleResponse struct {
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Daily retention schedule.
type DailyRetentionScheduleResponseOutput struct{ *pulumi.OutputState }

func (DailyRetentionScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyRetentionScheduleResponse)(nil)).Elem()
}

func (o DailyRetentionScheduleResponseOutput) ToDailyRetentionScheduleResponseOutput() DailyRetentionScheduleResponseOutput {
	return o
}

func (o DailyRetentionScheduleResponseOutput) ToDailyRetentionScheduleResponseOutputWithContext(ctx context.Context) DailyRetentionScheduleResponseOutput {
	return o
}

// Retention duration of retention Policy.
func (o DailyRetentionScheduleResponseOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v DailyRetentionScheduleResponse) *RetentionDurationResponse { return v.RetentionDuration }).(RetentionDurationResponsePtrOutput)
}

// Retention times of retention policy.
func (o DailyRetentionScheduleResponseOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DailyRetentionScheduleResponse) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type DailyRetentionScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (DailyRetentionScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyRetentionScheduleResponse)(nil)).Elem()
}

func (o DailyRetentionScheduleResponsePtrOutput) ToDailyRetentionScheduleResponsePtrOutput() DailyRetentionScheduleResponsePtrOutput {
	return o
}

func (o DailyRetentionScheduleResponsePtrOutput) ToDailyRetentionScheduleResponsePtrOutputWithContext(ctx context.Context) DailyRetentionScheduleResponsePtrOutput {
	return o
}

func (o DailyRetentionScheduleResponsePtrOutput) Elem() DailyRetentionScheduleResponseOutput {
	return o.ApplyT(func(v *DailyRetentionScheduleResponse) DailyRetentionScheduleResponse {
		if v != nil {
			return *v
		}
		var ret DailyRetentionScheduleResponse
		return ret
	}).(DailyRetentionScheduleResponseOutput)
}

// Retention duration of retention Policy.
func (o DailyRetentionScheduleResponsePtrOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v *DailyRetentionScheduleResponse) *RetentionDurationResponse {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationResponsePtrOutput)
}

// Retention times of retention policy.
func (o DailyRetentionScheduleResponsePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DailyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

type DailySchedule struct {
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
}

// DailyScheduleInput is an input type that accepts DailyScheduleArgs and DailyScheduleOutput values.
// You can construct a concrete instance of `DailyScheduleInput` via:
//
//	DailyScheduleArgs{...}
type DailyScheduleInput interface {
	pulumi.Input

	ToDailyScheduleOutput() DailyScheduleOutput
	ToDailyScheduleOutputWithContext(context.Context) DailyScheduleOutput
}

type DailyScheduleArgs struct {
	// List of times of day this schedule has to be run.
	ScheduleRunTimes pulumi.StringArrayInput `pulumi:"scheduleRunTimes"`
}

func (DailyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DailySchedule)(nil)).Elem()
}

func (i DailyScheduleArgs) ToDailyScheduleOutput() DailyScheduleOutput {
	return i.ToDailyScheduleOutputWithContext(context.Background())
}

func (i DailyScheduleArgs) ToDailyScheduleOutputWithContext(ctx context.Context) DailyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyScheduleOutput)
}

func (i DailyScheduleArgs) ToDailySchedulePtrOutput() DailySchedulePtrOutput {
	return i.ToDailySchedulePtrOutputWithContext(context.Background())
}

func (i DailyScheduleArgs) ToDailySchedulePtrOutputWithContext(ctx context.Context) DailySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailyScheduleOutput).ToDailySchedulePtrOutputWithContext(ctx)
}

// DailySchedulePtrInput is an input type that accepts DailyScheduleArgs, DailySchedulePtr and DailySchedulePtrOutput values.
// You can construct a concrete instance of `DailySchedulePtrInput` via:
//
//	        DailyScheduleArgs{...}
//
//	or:
//
//	        nil
type DailySchedulePtrInput interface {
	pulumi.Input

	ToDailySchedulePtrOutput() DailySchedulePtrOutput
	ToDailySchedulePtrOutputWithContext(context.Context) DailySchedulePtrOutput
}

type dailySchedulePtrType DailyScheduleArgs

func DailySchedulePtr(v *DailyScheduleArgs) DailySchedulePtrInput {
	return (*dailySchedulePtrType)(v)
}

func (*dailySchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DailySchedule)(nil)).Elem()
}

func (i *dailySchedulePtrType) ToDailySchedulePtrOutput() DailySchedulePtrOutput {
	return i.ToDailySchedulePtrOutputWithContext(context.Background())
}

func (i *dailySchedulePtrType) ToDailySchedulePtrOutputWithContext(ctx context.Context) DailySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DailySchedulePtrOutput)
}

type DailyScheduleOutput struct{ *pulumi.OutputState }

func (DailyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DailySchedule)(nil)).Elem()
}

func (o DailyScheduleOutput) ToDailyScheduleOutput() DailyScheduleOutput {
	return o
}

func (o DailyScheduleOutput) ToDailyScheduleOutputWithContext(ctx context.Context) DailyScheduleOutput {
	return o
}

func (o DailyScheduleOutput) ToDailySchedulePtrOutput() DailySchedulePtrOutput {
	return o.ToDailySchedulePtrOutputWithContext(context.Background())
}

func (o DailyScheduleOutput) ToDailySchedulePtrOutputWithContext(ctx context.Context) DailySchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DailySchedule) *DailySchedule {
		return &v
	}).(DailySchedulePtrOutput)
}

// List of times of day this schedule has to be run.
func (o DailyScheduleOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DailySchedule) []string { return v.ScheduleRunTimes }).(pulumi.StringArrayOutput)
}

type DailySchedulePtrOutput struct{ *pulumi.OutputState }

func (DailySchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DailySchedule)(nil)).Elem()
}

func (o DailySchedulePtrOutput) ToDailySchedulePtrOutput() DailySchedulePtrOutput {
	return o
}

func (o DailySchedulePtrOutput) ToDailySchedulePtrOutputWithContext(ctx context.Context) DailySchedulePtrOutput {
	return o
}

func (o DailySchedulePtrOutput) Elem() DailyScheduleOutput {
	return o.ApplyT(func(v *DailySchedule) DailySchedule {
		if v != nil {
			return *v
		}
		var ret DailySchedule
		return ret
	}).(DailyScheduleOutput)
}

// List of times of day this schedule has to be run.
func (o DailySchedulePtrOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DailySchedule) []string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunTimes
	}).(pulumi.StringArrayOutput)
}

type DailyScheduleResponse struct {
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
}

type DailyScheduleResponseOutput struct{ *pulumi.OutputState }

func (DailyScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DailyScheduleResponse)(nil)).Elem()
}

func (o DailyScheduleResponseOutput) ToDailyScheduleResponseOutput() DailyScheduleResponseOutput {
	return o
}

func (o DailyScheduleResponseOutput) ToDailyScheduleResponseOutputWithContext(ctx context.Context) DailyScheduleResponseOutput {
	return o
}

// List of times of day this schedule has to be run.
func (o DailyScheduleResponseOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DailyScheduleResponse) []string { return v.ScheduleRunTimes }).(pulumi.StringArrayOutput)
}

type DailyScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (DailyScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DailyScheduleResponse)(nil)).Elem()
}

func (o DailyScheduleResponsePtrOutput) ToDailyScheduleResponsePtrOutput() DailyScheduleResponsePtrOutput {
	return o
}

func (o DailyScheduleResponsePtrOutput) ToDailyScheduleResponsePtrOutputWithContext(ctx context.Context) DailyScheduleResponsePtrOutput {
	return o
}

func (o DailyScheduleResponsePtrOutput) Elem() DailyScheduleResponseOutput {
	return o.ApplyT(func(v *DailyScheduleResponse) DailyScheduleResponse {
		if v != nil {
			return *v
		}
		var ret DailyScheduleResponse
		return ret
	}).(DailyScheduleResponseOutput)
}

// List of times of day this schedule has to be run.
func (o DailyScheduleResponsePtrOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DailyScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunTimes
	}).(pulumi.StringArrayOutput)
}

// Day of the week.
type Day struct {
	// Date of the month
	Date *int `pulumi:"date"`
	// Whether Date is last date of month
	IsLast *bool `pulumi:"isLast"`
}

// DayInput is an input type that accepts DayArgs and DayOutput values.
// You can construct a concrete instance of `DayInput` via:
//
//	DayArgs{...}
type DayInput interface {
	pulumi.Input

	ToDayOutput() DayOutput
	ToDayOutputWithContext(context.Context) DayOutput
}

// Day of the week.
type DayArgs struct {
	// Date of the month
	Date pulumi.IntPtrInput `pulumi:"date"`
	// Whether Date is last date of month
	IsLast pulumi.BoolPtrInput `pulumi:"isLast"`
}

func (DayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Day)(nil)).Elem()
}

func (i DayArgs) ToDayOutput() DayOutput {
	return i.ToDayOutputWithContext(context.Background())
}

func (i DayArgs) ToDayOutputWithContext(ctx context.Context) DayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayOutput)
}

// DayArrayInput is an input type that accepts DayArray and DayArrayOutput values.
// You can construct a concrete instance of `DayArrayInput` via:
//
//	DayArray{ DayArgs{...} }
type DayArrayInput interface {
	pulumi.Input

	ToDayArrayOutput() DayArrayOutput
	ToDayArrayOutputWithContext(context.Context) DayArrayOutput
}

type DayArray []DayInput

func (DayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Day)(nil)).Elem()
}

func (i DayArray) ToDayArrayOutput() DayArrayOutput {
	return i.ToDayArrayOutputWithContext(context.Background())
}

func (i DayArray) ToDayArrayOutputWithContext(ctx context.Context) DayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DayArrayOutput)
}

// Day of the week.
type DayOutput struct{ *pulumi.OutputState }

func (DayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Day)(nil)).Elem()
}

func (o DayOutput) ToDayOutput() DayOutput {
	return o
}

func (o DayOutput) ToDayOutputWithContext(ctx context.Context) DayOutput {
	return o
}

// Date of the month
func (o DayOutput) Date() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Day) *int { return v.Date }).(pulumi.IntPtrOutput)
}

// Whether Date is last date of month
func (o DayOutput) IsLast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Day) *bool { return v.IsLast }).(pulumi.BoolPtrOutput)
}

type DayArrayOutput struct{ *pulumi.OutputState }

func (DayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Day)(nil)).Elem()
}

func (o DayArrayOutput) ToDayArrayOutput() DayArrayOutput {
	return o
}

func (o DayArrayOutput) ToDayArrayOutputWithContext(ctx context.Context) DayArrayOutput {
	return o
}

func (o DayArrayOutput) Index(i pulumi.IntInput) DayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Day {
		return vs[0].([]Day)[vs[1].(int)]
	}).(DayOutput)
}

// Day of the week.
type DayResponse struct {
	// Date of the month
	Date *int `pulumi:"date"`
	// Whether Date is last date of month
	IsLast *bool `pulumi:"isLast"`
}

// Day of the week.
type DayResponseOutput struct{ *pulumi.OutputState }

func (DayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DayResponse)(nil)).Elem()
}

func (o DayResponseOutput) ToDayResponseOutput() DayResponseOutput {
	return o
}

func (o DayResponseOutput) ToDayResponseOutputWithContext(ctx context.Context) DayResponseOutput {
	return o
}

// Date of the month
func (o DayResponseOutput) Date() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DayResponse) *int { return v.Date }).(pulumi.IntPtrOutput)
}

// Whether Date is last date of month
func (o DayResponseOutput) IsLast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DayResponse) *bool { return v.IsLast }).(pulumi.BoolPtrOutput)
}

type DayResponseArrayOutput struct{ *pulumi.OutputState }

func (DayResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DayResponse)(nil)).Elem()
}

func (o DayResponseArrayOutput) ToDayResponseArrayOutput() DayResponseArrayOutput {
	return o
}

func (o DayResponseArrayOutput) ToDayResponseArrayOutputWithContext(ctx context.Context) DayResponseArrayOutput {
	return o
}

func (o DayResponseArrayOutput) Index(i pulumi.IntInput) DayResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DayResponse {
		return vs[0].([]DayResponse)[vs[1].(int)]
	}).(DayResponseOutput)
}

type DiskExclusionProperties struct {
	// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
	DiskLunList []int `pulumi:"diskLunList"`
	// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
	IsInclusionList *bool `pulumi:"isInclusionList"`
}

// DiskExclusionPropertiesInput is an input type that accepts DiskExclusionPropertiesArgs and DiskExclusionPropertiesOutput values.
// You can construct a concrete instance of `DiskExclusionPropertiesInput` via:
//
//	DiskExclusionPropertiesArgs{...}
type DiskExclusionPropertiesInput interface {
	pulumi.Input

	ToDiskExclusionPropertiesOutput() DiskExclusionPropertiesOutput
	ToDiskExclusionPropertiesOutputWithContext(context.Context) DiskExclusionPropertiesOutput
}

type DiskExclusionPropertiesArgs struct {
	// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
	DiskLunList pulumi.IntArrayInput `pulumi:"diskLunList"`
	// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
	IsInclusionList pulumi.BoolPtrInput `pulumi:"isInclusionList"`
}

func (DiskExclusionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskExclusionProperties)(nil)).Elem()
}

func (i DiskExclusionPropertiesArgs) ToDiskExclusionPropertiesOutput() DiskExclusionPropertiesOutput {
	return i.ToDiskExclusionPropertiesOutputWithContext(context.Background())
}

func (i DiskExclusionPropertiesArgs) ToDiskExclusionPropertiesOutputWithContext(ctx context.Context) DiskExclusionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskExclusionPropertiesOutput)
}

func (i DiskExclusionPropertiesArgs) ToDiskExclusionPropertiesPtrOutput() DiskExclusionPropertiesPtrOutput {
	return i.ToDiskExclusionPropertiesPtrOutputWithContext(context.Background())
}

func (i DiskExclusionPropertiesArgs) ToDiskExclusionPropertiesPtrOutputWithContext(ctx context.Context) DiskExclusionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskExclusionPropertiesOutput).ToDiskExclusionPropertiesPtrOutputWithContext(ctx)
}

// DiskExclusionPropertiesPtrInput is an input type that accepts DiskExclusionPropertiesArgs, DiskExclusionPropertiesPtr and DiskExclusionPropertiesPtrOutput values.
// You can construct a concrete instance of `DiskExclusionPropertiesPtrInput` via:
//
//	        DiskExclusionPropertiesArgs{...}
//
//	or:
//
//	        nil
type DiskExclusionPropertiesPtrInput interface {
	pulumi.Input

	ToDiskExclusionPropertiesPtrOutput() DiskExclusionPropertiesPtrOutput
	ToDiskExclusionPropertiesPtrOutputWithContext(context.Context) DiskExclusionPropertiesPtrOutput
}

type diskExclusionPropertiesPtrType DiskExclusionPropertiesArgs

func DiskExclusionPropertiesPtr(v *DiskExclusionPropertiesArgs) DiskExclusionPropertiesPtrInput {
	return (*diskExclusionPropertiesPtrType)(v)
}

func (*diskExclusionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskExclusionProperties)(nil)).Elem()
}

func (i *diskExclusionPropertiesPtrType) ToDiskExclusionPropertiesPtrOutput() DiskExclusionPropertiesPtrOutput {
	return i.ToDiskExclusionPropertiesPtrOutputWithContext(context.Background())
}

func (i *diskExclusionPropertiesPtrType) ToDiskExclusionPropertiesPtrOutputWithContext(ctx context.Context) DiskExclusionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskExclusionPropertiesPtrOutput)
}

type DiskExclusionPropertiesOutput struct{ *pulumi.OutputState }

func (DiskExclusionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskExclusionProperties)(nil)).Elem()
}

func (o DiskExclusionPropertiesOutput) ToDiskExclusionPropertiesOutput() DiskExclusionPropertiesOutput {
	return o
}

func (o DiskExclusionPropertiesOutput) ToDiskExclusionPropertiesOutputWithContext(ctx context.Context) DiskExclusionPropertiesOutput {
	return o
}

func (o DiskExclusionPropertiesOutput) ToDiskExclusionPropertiesPtrOutput() DiskExclusionPropertiesPtrOutput {
	return o.ToDiskExclusionPropertiesPtrOutputWithContext(context.Background())
}

func (o DiskExclusionPropertiesOutput) ToDiskExclusionPropertiesPtrOutputWithContext(ctx context.Context) DiskExclusionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskExclusionProperties) *DiskExclusionProperties {
		return &v
	}).(DiskExclusionPropertiesPtrOutput)
}

// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
func (o DiskExclusionPropertiesOutput) DiskLunList() pulumi.IntArrayOutput {
	return o.ApplyT(func(v DiskExclusionProperties) []int { return v.DiskLunList }).(pulumi.IntArrayOutput)
}

// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
func (o DiskExclusionPropertiesOutput) IsInclusionList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DiskExclusionProperties) *bool { return v.IsInclusionList }).(pulumi.BoolPtrOutput)
}

type DiskExclusionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DiskExclusionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskExclusionProperties)(nil)).Elem()
}

func (o DiskExclusionPropertiesPtrOutput) ToDiskExclusionPropertiesPtrOutput() DiskExclusionPropertiesPtrOutput {
	return o
}

func (o DiskExclusionPropertiesPtrOutput) ToDiskExclusionPropertiesPtrOutputWithContext(ctx context.Context) DiskExclusionPropertiesPtrOutput {
	return o
}

func (o DiskExclusionPropertiesPtrOutput) Elem() DiskExclusionPropertiesOutput {
	return o.ApplyT(func(v *DiskExclusionProperties) DiskExclusionProperties {
		if v != nil {
			return *v
		}
		var ret DiskExclusionProperties
		return ret
	}).(DiskExclusionPropertiesOutput)
}

// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
func (o DiskExclusionPropertiesPtrOutput) DiskLunList() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *DiskExclusionProperties) []int {
		if v == nil {
			return nil
		}
		return v.DiskLunList
	}).(pulumi.IntArrayOutput)
}

// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
func (o DiskExclusionPropertiesPtrOutput) IsInclusionList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DiskExclusionProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsInclusionList
	}).(pulumi.BoolPtrOutput)
}

type DiskExclusionPropertiesResponse struct {
	// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
	DiskLunList []int `pulumi:"diskLunList"`
	// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
	IsInclusionList *bool `pulumi:"isInclusionList"`
}

type DiskExclusionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DiskExclusionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskExclusionPropertiesResponse)(nil)).Elem()
}

func (o DiskExclusionPropertiesResponseOutput) ToDiskExclusionPropertiesResponseOutput() DiskExclusionPropertiesResponseOutput {
	return o
}

func (o DiskExclusionPropertiesResponseOutput) ToDiskExclusionPropertiesResponseOutputWithContext(ctx context.Context) DiskExclusionPropertiesResponseOutput {
	return o
}

// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
func (o DiskExclusionPropertiesResponseOutput) DiskLunList() pulumi.IntArrayOutput {
	return o.ApplyT(func(v DiskExclusionPropertiesResponse) []int { return v.DiskLunList }).(pulumi.IntArrayOutput)
}

// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
func (o DiskExclusionPropertiesResponseOutput) IsInclusionList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DiskExclusionPropertiesResponse) *bool { return v.IsInclusionList }).(pulumi.BoolPtrOutput)
}

type DiskExclusionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DiskExclusionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskExclusionPropertiesResponse)(nil)).Elem()
}

func (o DiskExclusionPropertiesResponsePtrOutput) ToDiskExclusionPropertiesResponsePtrOutput() DiskExclusionPropertiesResponsePtrOutput {
	return o
}

func (o DiskExclusionPropertiesResponsePtrOutput) ToDiskExclusionPropertiesResponsePtrOutputWithContext(ctx context.Context) DiskExclusionPropertiesResponsePtrOutput {
	return o
}

func (o DiskExclusionPropertiesResponsePtrOutput) Elem() DiskExclusionPropertiesResponseOutput {
	return o.ApplyT(func(v *DiskExclusionPropertiesResponse) DiskExclusionPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret DiskExclusionPropertiesResponse
		return ret
	}).(DiskExclusionPropertiesResponseOutput)
}

// List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.
func (o DiskExclusionPropertiesResponsePtrOutput) DiskLunList() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *DiskExclusionPropertiesResponse) []int {
		if v == nil {
			return nil
		}
		return v.DiskLunList
	}).(pulumi.IntArrayOutput)
}

// Flag to indicate whether DiskLunList is to be included/ excluded from backup.
func (o DiskExclusionPropertiesResponsePtrOutput) IsInclusionList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DiskExclusionPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsInclusionList
	}).(pulumi.BoolPtrOutput)
}

// This is used to represent the various nodes of the distributed container.
type DistributedNodesInfo struct {
	// Name of the node under a distributed container.
	NodeName *string `pulumi:"nodeName"`
	// ARM resource id of the node
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Status of this Node.
	// Failed | Succeeded
	Status *string `pulumi:"status"`
}

// DistributedNodesInfoInput is an input type that accepts DistributedNodesInfoArgs and DistributedNodesInfoOutput values.
// You can construct a concrete instance of `DistributedNodesInfoInput` via:
//
//	DistributedNodesInfoArgs{...}
type DistributedNodesInfoInput interface {
	pulumi.Input

	ToDistributedNodesInfoOutput() DistributedNodesInfoOutput
	ToDistributedNodesInfoOutputWithContext(context.Context) DistributedNodesInfoOutput
}

// This is used to represent the various nodes of the distributed container.
type DistributedNodesInfoArgs struct {
	// Name of the node under a distributed container.
	NodeName pulumi.StringPtrInput `pulumi:"nodeName"`
	// ARM resource id of the node
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
	// Status of this Node.
	// Failed | Succeeded
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (DistributedNodesInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributedNodesInfo)(nil)).Elem()
}

func (i DistributedNodesInfoArgs) ToDistributedNodesInfoOutput() DistributedNodesInfoOutput {
	return i.ToDistributedNodesInfoOutputWithContext(context.Background())
}

func (i DistributedNodesInfoArgs) ToDistributedNodesInfoOutputWithContext(ctx context.Context) DistributedNodesInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedNodesInfoOutput)
}

// DistributedNodesInfoArrayInput is an input type that accepts DistributedNodesInfoArray and DistributedNodesInfoArrayOutput values.
// You can construct a concrete instance of `DistributedNodesInfoArrayInput` via:
//
//	DistributedNodesInfoArray{ DistributedNodesInfoArgs{...} }
type DistributedNodesInfoArrayInput interface {
	pulumi.Input

	ToDistributedNodesInfoArrayOutput() DistributedNodesInfoArrayOutput
	ToDistributedNodesInfoArrayOutputWithContext(context.Context) DistributedNodesInfoArrayOutput
}

type DistributedNodesInfoArray []DistributedNodesInfoInput

func (DistributedNodesInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributedNodesInfo)(nil)).Elem()
}

func (i DistributedNodesInfoArray) ToDistributedNodesInfoArrayOutput() DistributedNodesInfoArrayOutput {
	return i.ToDistributedNodesInfoArrayOutputWithContext(context.Background())
}

func (i DistributedNodesInfoArray) ToDistributedNodesInfoArrayOutputWithContext(ctx context.Context) DistributedNodesInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedNodesInfoArrayOutput)
}

// This is used to represent the various nodes of the distributed container.
type DistributedNodesInfoOutput struct{ *pulumi.OutputState }

func (DistributedNodesInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributedNodesInfo)(nil)).Elem()
}

func (o DistributedNodesInfoOutput) ToDistributedNodesInfoOutput() DistributedNodesInfoOutput {
	return o
}

func (o DistributedNodesInfoOutput) ToDistributedNodesInfoOutputWithContext(ctx context.Context) DistributedNodesInfoOutput {
	return o
}

// Name of the node under a distributed container.
func (o DistributedNodesInfoOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributedNodesInfo) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

// ARM resource id of the node
func (o DistributedNodesInfoOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributedNodesInfo) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Status of this Node.
// Failed | Succeeded
func (o DistributedNodesInfoOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributedNodesInfo) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type DistributedNodesInfoArrayOutput struct{ *pulumi.OutputState }

func (DistributedNodesInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributedNodesInfo)(nil)).Elem()
}

func (o DistributedNodesInfoArrayOutput) ToDistributedNodesInfoArrayOutput() DistributedNodesInfoArrayOutput {
	return o
}

func (o DistributedNodesInfoArrayOutput) ToDistributedNodesInfoArrayOutputWithContext(ctx context.Context) DistributedNodesInfoArrayOutput {
	return o
}

func (o DistributedNodesInfoArrayOutput) Index(i pulumi.IntInput) DistributedNodesInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributedNodesInfo {
		return vs[0].([]DistributedNodesInfo)[vs[1].(int)]
	}).(DistributedNodesInfoOutput)
}

// This is used to represent the various nodes of the distributed container.
type DistributedNodesInfoResponse struct {
	// Error Details if the Status is non-success.
	ErrorDetail *ErrorDetailResponse `pulumi:"errorDetail"`
	// Name of the node under a distributed container.
	NodeName *string `pulumi:"nodeName"`
	// ARM resource id of the node
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// Status of this Node.
	// Failed | Succeeded
	Status *string `pulumi:"status"`
}

// This is used to represent the various nodes of the distributed container.
type DistributedNodesInfoResponseOutput struct{ *pulumi.OutputState }

func (DistributedNodesInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributedNodesInfoResponse)(nil)).Elem()
}

func (o DistributedNodesInfoResponseOutput) ToDistributedNodesInfoResponseOutput() DistributedNodesInfoResponseOutput {
	return o
}

func (o DistributedNodesInfoResponseOutput) ToDistributedNodesInfoResponseOutputWithContext(ctx context.Context) DistributedNodesInfoResponseOutput {
	return o
}

// Error Details if the Status is non-success.
func (o DistributedNodesInfoResponseOutput) ErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v DistributedNodesInfoResponse) *ErrorDetailResponse { return v.ErrorDetail }).(ErrorDetailResponsePtrOutput)
}

// Name of the node under a distributed container.
func (o DistributedNodesInfoResponseOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributedNodesInfoResponse) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

// ARM resource id of the node
func (o DistributedNodesInfoResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributedNodesInfoResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// Status of this Node.
// Failed | Succeeded
func (o DistributedNodesInfoResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributedNodesInfoResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type DistributedNodesInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (DistributedNodesInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributedNodesInfoResponse)(nil)).Elem()
}

func (o DistributedNodesInfoResponseArrayOutput) ToDistributedNodesInfoResponseArrayOutput() DistributedNodesInfoResponseArrayOutput {
	return o
}

func (o DistributedNodesInfoResponseArrayOutput) ToDistributedNodesInfoResponseArrayOutputWithContext(ctx context.Context) DistributedNodesInfoResponseArrayOutput {
	return o
}

func (o DistributedNodesInfoResponseArrayOutput) Index(i pulumi.IntInput) DistributedNodesInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributedNodesInfoResponse {
		return vs[0].([]DistributedNodesInfoResponse)[vs[1].(int)]
	}).(DistributedNodesInfoResponseOutput)
}

// DPM workload-specific protection container.
type DpmContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister *bool `pulumi:"canReRegister"`
	// ID of container.
	ContainerId *string `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'DPMContainer'.
	ContainerType string `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion *string `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers []string `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo *DPMContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable *bool `pulumi:"upgradeAvailable"`
}

// DpmContainerInput is an input type that accepts DpmContainerArgs and DpmContainerOutput values.
// You can construct a concrete instance of `DpmContainerInput` via:
//
//	DpmContainerArgs{...}
type DpmContainerInput interface {
	pulumi.Input

	ToDpmContainerOutput() DpmContainerOutput
	ToDpmContainerOutputWithContext(context.Context) DpmContainerOutput
}

// DPM workload-specific protection container.
type DpmContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister pulumi.BoolPtrInput `pulumi:"canReRegister"`
	// ID of container.
	ContainerId pulumi.StringPtrInput `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'DPMContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion pulumi.StringPtrInput `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers pulumi.StringArrayInput `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo DPMContainerExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount pulumi.Float64PtrInput `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus pulumi.StringPtrInput `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable pulumi.BoolPtrInput `pulumi:"upgradeAvailable"`
}

func (DpmContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DpmContainer)(nil)).Elem()
}

func (i DpmContainerArgs) ToDpmContainerOutput() DpmContainerOutput {
	return i.ToDpmContainerOutputWithContext(context.Background())
}

func (i DpmContainerArgs) ToDpmContainerOutputWithContext(ctx context.Context) DpmContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DpmContainerOutput)
}

func (i DpmContainerArgs) ToDpmContainerPtrOutput() DpmContainerPtrOutput {
	return i.ToDpmContainerPtrOutputWithContext(context.Background())
}

func (i DpmContainerArgs) ToDpmContainerPtrOutputWithContext(ctx context.Context) DpmContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DpmContainerOutput).ToDpmContainerPtrOutputWithContext(ctx)
}

// DpmContainerPtrInput is an input type that accepts DpmContainerArgs, DpmContainerPtr and DpmContainerPtrOutput values.
// You can construct a concrete instance of `DpmContainerPtrInput` via:
//
//	        DpmContainerArgs{...}
//
//	or:
//
//	        nil
type DpmContainerPtrInput interface {
	pulumi.Input

	ToDpmContainerPtrOutput() DpmContainerPtrOutput
	ToDpmContainerPtrOutputWithContext(context.Context) DpmContainerPtrOutput
}

type dpmContainerPtrType DpmContainerArgs

func DpmContainerPtr(v *DpmContainerArgs) DpmContainerPtrInput {
	return (*dpmContainerPtrType)(v)
}

func (*dpmContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DpmContainer)(nil)).Elem()
}

func (i *dpmContainerPtrType) ToDpmContainerPtrOutput() DpmContainerPtrOutput {
	return i.ToDpmContainerPtrOutputWithContext(context.Background())
}

func (i *dpmContainerPtrType) ToDpmContainerPtrOutputWithContext(ctx context.Context) DpmContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DpmContainerPtrOutput)
}

// DPM workload-specific protection container.
type DpmContainerOutput struct{ *pulumi.OutputState }

func (DpmContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DpmContainer)(nil)).Elem()
}

func (o DpmContainerOutput) ToDpmContainerOutput() DpmContainerOutput {
	return o
}

func (o DpmContainerOutput) ToDpmContainerOutputWithContext(ctx context.Context) DpmContainerOutput {
	return o
}

func (o DpmContainerOutput) ToDpmContainerPtrOutput() DpmContainerPtrOutput {
	return o.ToDpmContainerPtrOutputWithContext(context.Background())
}

func (o DpmContainerOutput) ToDpmContainerPtrOutputWithContext(ctx context.Context) DpmContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DpmContainer) *DpmContainer {
		return &v
	}).(DpmContainerPtrOutput)
}

// Type of backup management for the container.
func (o DpmContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Specifies whether the container is re-registrable.
func (o DpmContainerOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DpmContainer) *bool { return v.CanReRegister }).(pulumi.BoolPtrOutput)
}

// ID of container.
func (o DpmContainerOutput) ContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainer) *string { return v.ContainerId }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'DPMContainer'.
func (o DpmContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v DpmContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Backup engine Agent version
func (o DpmContainerOutput) DpmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainer) *string { return v.DpmAgentVersion }).(pulumi.StringPtrOutput)
}

// List of BackupEngines protecting the container
func (o DpmContainerOutput) DpmServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DpmContainer) []string { return v.DpmServers }).(pulumi.StringArrayOutput)
}

// Extended Info of the container.
func (o DpmContainerOutput) ExtendedInfo() DPMContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v DpmContainer) *DPMContainerExtendedInfo { return v.ExtendedInfo }).(DPMContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o DpmContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o DpmContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o DpmContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Number of protected items in the BackupEngine
func (o DpmContainerOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DpmContainer) *float64 { return v.ProtectedItemCount }).(pulumi.Float64PtrOutput)
}

// Protection status of the container.
func (o DpmContainerOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainer) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o DpmContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// To check if upgrade available
func (o DpmContainerOutput) UpgradeAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DpmContainer) *bool { return v.UpgradeAvailable }).(pulumi.BoolPtrOutput)
}

type DpmContainerPtrOutput struct{ *pulumi.OutputState }

func (DpmContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DpmContainer)(nil)).Elem()
}

func (o DpmContainerPtrOutput) ToDpmContainerPtrOutput() DpmContainerPtrOutput {
	return o
}

func (o DpmContainerPtrOutput) ToDpmContainerPtrOutputWithContext(ctx context.Context) DpmContainerPtrOutput {
	return o
}

func (o DpmContainerPtrOutput) Elem() DpmContainerOutput {
	return o.ApplyT(func(v *DpmContainer) DpmContainer {
		if v != nil {
			return *v
		}
		var ret DpmContainer
		return ret
	}).(DpmContainerOutput)
}

// Type of backup management for the container.
func (o DpmContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the container is re-registrable.
func (o DpmContainerPtrOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *bool {
		if v == nil {
			return nil
		}
		return v.CanReRegister
	}).(pulumi.BoolPtrOutput)
}

// ID of container.
func (o DpmContainerPtrOutput) ContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return v.ContainerId
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'DPMContainer'.
func (o DpmContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Backup engine Agent version
func (o DpmContainerPtrOutput) DpmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return v.DpmAgentVersion
	}).(pulumi.StringPtrOutput)
}

// List of BackupEngines protecting the container
func (o DpmContainerPtrOutput) DpmServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DpmContainer) []string {
		if v == nil {
			return nil
		}
		return v.DpmServers
	}).(pulumi.StringArrayOutput)
}

// Extended Info of the container.
func (o DpmContainerPtrOutput) ExtendedInfo() DPMContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *DPMContainerExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(DPMContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o DpmContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o DpmContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o DpmContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Number of protected items in the BackupEngine
func (o DpmContainerPtrOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DpmContainer) *float64 {
		if v == nil {
			return nil
		}
		return v.ProtectedItemCount
	}).(pulumi.Float64PtrOutput)
}

// Protection status of the container.
func (o DpmContainerPtrOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionStatus
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o DpmContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// To check if upgrade available
func (o DpmContainerPtrOutput) UpgradeAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DpmContainer) *bool {
		if v == nil {
			return nil
		}
		return v.UpgradeAvailable
	}).(pulumi.BoolPtrOutput)
}

// DPM workload-specific protection container.
type DpmContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Specifies whether the container is re-registrable.
	CanReRegister *bool `pulumi:"canReRegister"`
	// ID of container.
	ContainerId *string `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'DPMContainer'.
	ContainerType string `pulumi:"containerType"`
	// Backup engine Agent version
	DpmAgentVersion *string `pulumi:"dpmAgentVersion"`
	// List of BackupEngines protecting the container
	DpmServers []string `pulumi:"dpmServers"`
	// Extended Info of the container.
	ExtendedInfo *DPMContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of protected items in the BackupEngine
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Protection status of the container.
	ProtectionStatus *string `pulumi:"protectionStatus"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// To check if upgrade available
	UpgradeAvailable *bool `pulumi:"upgradeAvailable"`
}

// DPM workload-specific protection container.
type DpmContainerResponseOutput struct{ *pulumi.OutputState }

func (DpmContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DpmContainerResponse)(nil)).Elem()
}

func (o DpmContainerResponseOutput) ToDpmContainerResponseOutput() DpmContainerResponseOutput {
	return o
}

func (o DpmContainerResponseOutput) ToDpmContainerResponseOutputWithContext(ctx context.Context) DpmContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o DpmContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Specifies whether the container is re-registrable.
func (o DpmContainerResponseOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *bool { return v.CanReRegister }).(pulumi.BoolPtrOutput)
}

// ID of container.
func (o DpmContainerResponseOutput) ContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.ContainerId }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'DPMContainer'.
func (o DpmContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v DpmContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Backup engine Agent version
func (o DpmContainerResponseOutput) DpmAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.DpmAgentVersion }).(pulumi.StringPtrOutput)
}

// List of BackupEngines protecting the container
func (o DpmContainerResponseOutput) DpmServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DpmContainerResponse) []string { return v.DpmServers }).(pulumi.StringArrayOutput)
}

// Extended Info of the container.
func (o DpmContainerResponseOutput) ExtendedInfo() DPMContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *DPMContainerExtendedInfoResponse { return v.ExtendedInfo }).(DPMContainerExtendedInfoResponsePtrOutput)
}

// Friendly name of the container.
func (o DpmContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o DpmContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o DpmContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Number of protected items in the BackupEngine
func (o DpmContainerResponseOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *float64 { return v.ProtectedItemCount }).(pulumi.Float64PtrOutput)
}

// Protection status of the container.
func (o DpmContainerResponseOutput) ProtectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.ProtectionStatus }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o DpmContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// To check if upgrade available
func (o DpmContainerResponseOutput) UpgradeAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DpmContainerResponse) *bool { return v.UpgradeAvailable }).(pulumi.BoolPtrOutput)
}

// Error Detail class which encapsulates Code, Message and Recommendations.
type ErrorDetailResponse struct {
	// Error code.
	Code string `pulumi:"code"`
	// Error Message related to the Code.
	Message string `pulumi:"message"`
	// List of recommendation strings.
	Recommendations []string `pulumi:"recommendations"`
}

// Error Detail class which encapsulates Code, Message and Recommendations.
type ErrorDetailResponseOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutput() ErrorDetailResponseOutput {
	return o
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutputWithContext(ctx context.Context) ErrorDetailResponseOutput {
	return o
}

// Error code.
func (o ErrorDetailResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Error Message related to the Code.
func (o ErrorDetailResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Message }).(pulumi.StringOutput)
}

// List of recommendation strings.
func (o ErrorDetailResponseOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ErrorDetailResponse) []string { return v.Recommendations }).(pulumi.StringArrayOutput)
}

type ErrorDetailResponsePtrOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponsePtrOutput) ToErrorDetailResponsePtrOutput() ErrorDetailResponsePtrOutput {
	return o
}

func (o ErrorDetailResponsePtrOutput) ToErrorDetailResponsePtrOutputWithContext(ctx context.Context) ErrorDetailResponsePtrOutput {
	return o
}

func (o ErrorDetailResponsePtrOutput) Elem() ErrorDetailResponseOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) ErrorDetailResponse {
		if v != nil {
			return *v
		}
		var ret ErrorDetailResponse
		return ret
	}).(ErrorDetailResponseOutput)
}

// Error code.
func (o ErrorDetailResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// Error Message related to the Code.
func (o ErrorDetailResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// List of recommendation strings.
func (o ErrorDetailResponsePtrOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ErrorDetailResponse) []string {
		if v == nil {
			return nil
		}
		return v.Recommendations
	}).(pulumi.StringArrayOutput)
}

// Extended Properties for Azure IaasVM Backup.
type ExtendedProperties struct {
	// Extended Properties for Disk Exclusion.
	DiskExclusionProperties *DiskExclusionProperties `pulumi:"diskExclusionProperties"`
	// Linux VM name
	LinuxVmApplicationName *string `pulumi:"linuxVmApplicationName"`
}

// ExtendedPropertiesInput is an input type that accepts ExtendedPropertiesArgs and ExtendedPropertiesOutput values.
// You can construct a concrete instance of `ExtendedPropertiesInput` via:
//
//	ExtendedPropertiesArgs{...}
type ExtendedPropertiesInput interface {
	pulumi.Input

	ToExtendedPropertiesOutput() ExtendedPropertiesOutput
	ToExtendedPropertiesOutputWithContext(context.Context) ExtendedPropertiesOutput
}

// Extended Properties for Azure IaasVM Backup.
type ExtendedPropertiesArgs struct {
	// Extended Properties for Disk Exclusion.
	DiskExclusionProperties DiskExclusionPropertiesPtrInput `pulumi:"diskExclusionProperties"`
	// Linux VM name
	LinuxVmApplicationName pulumi.StringPtrInput `pulumi:"linuxVmApplicationName"`
}

func (ExtendedPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedProperties)(nil)).Elem()
}

func (i ExtendedPropertiesArgs) ToExtendedPropertiesOutput() ExtendedPropertiesOutput {
	return i.ToExtendedPropertiesOutputWithContext(context.Background())
}

func (i ExtendedPropertiesArgs) ToExtendedPropertiesOutputWithContext(ctx context.Context) ExtendedPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedPropertiesOutput)
}

func (i ExtendedPropertiesArgs) ToExtendedPropertiesPtrOutput() ExtendedPropertiesPtrOutput {
	return i.ToExtendedPropertiesPtrOutputWithContext(context.Background())
}

func (i ExtendedPropertiesArgs) ToExtendedPropertiesPtrOutputWithContext(ctx context.Context) ExtendedPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedPropertiesOutput).ToExtendedPropertiesPtrOutputWithContext(ctx)
}

// ExtendedPropertiesPtrInput is an input type that accepts ExtendedPropertiesArgs, ExtendedPropertiesPtr and ExtendedPropertiesPtrOutput values.
// You can construct a concrete instance of `ExtendedPropertiesPtrInput` via:
//
//	        ExtendedPropertiesArgs{...}
//
//	or:
//
//	        nil
type ExtendedPropertiesPtrInput interface {
	pulumi.Input

	ToExtendedPropertiesPtrOutput() ExtendedPropertiesPtrOutput
	ToExtendedPropertiesPtrOutputWithContext(context.Context) ExtendedPropertiesPtrOutput
}

type extendedPropertiesPtrType ExtendedPropertiesArgs

func ExtendedPropertiesPtr(v *ExtendedPropertiesArgs) ExtendedPropertiesPtrInput {
	return (*extendedPropertiesPtrType)(v)
}

func (*extendedPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedProperties)(nil)).Elem()
}

func (i *extendedPropertiesPtrType) ToExtendedPropertiesPtrOutput() ExtendedPropertiesPtrOutput {
	return i.ToExtendedPropertiesPtrOutputWithContext(context.Background())
}

func (i *extendedPropertiesPtrType) ToExtendedPropertiesPtrOutputWithContext(ctx context.Context) ExtendedPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedPropertiesPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
type ExtendedPropertiesOutput struct{ *pulumi.OutputState }

func (ExtendedPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedProperties)(nil)).Elem()
}

func (o ExtendedPropertiesOutput) ToExtendedPropertiesOutput() ExtendedPropertiesOutput {
	return o
}

func (o ExtendedPropertiesOutput) ToExtendedPropertiesOutputWithContext(ctx context.Context) ExtendedPropertiesOutput {
	return o
}

func (o ExtendedPropertiesOutput) ToExtendedPropertiesPtrOutput() ExtendedPropertiesPtrOutput {
	return o.ToExtendedPropertiesPtrOutputWithContext(context.Background())
}

func (o ExtendedPropertiesOutput) ToExtendedPropertiesPtrOutputWithContext(ctx context.Context) ExtendedPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedProperties) *ExtendedProperties {
		return &v
	}).(ExtendedPropertiesPtrOutput)
}

// Extended Properties for Disk Exclusion.
func (o ExtendedPropertiesOutput) DiskExclusionProperties() DiskExclusionPropertiesPtrOutput {
	return o.ApplyT(func(v ExtendedProperties) *DiskExclusionProperties { return v.DiskExclusionProperties }).(DiskExclusionPropertiesPtrOutput)
}

// Linux VM name
func (o ExtendedPropertiesOutput) LinuxVmApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedProperties) *string { return v.LinuxVmApplicationName }).(pulumi.StringPtrOutput)
}

type ExtendedPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ExtendedPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedProperties)(nil)).Elem()
}

func (o ExtendedPropertiesPtrOutput) ToExtendedPropertiesPtrOutput() ExtendedPropertiesPtrOutput {
	return o
}

func (o ExtendedPropertiesPtrOutput) ToExtendedPropertiesPtrOutputWithContext(ctx context.Context) ExtendedPropertiesPtrOutput {
	return o
}

func (o ExtendedPropertiesPtrOutput) Elem() ExtendedPropertiesOutput {
	return o.ApplyT(func(v *ExtendedProperties) ExtendedProperties {
		if v != nil {
			return *v
		}
		var ret ExtendedProperties
		return ret
	}).(ExtendedPropertiesOutput)
}

// Extended Properties for Disk Exclusion.
func (o ExtendedPropertiesPtrOutput) DiskExclusionProperties() DiskExclusionPropertiesPtrOutput {
	return o.ApplyT(func(v *ExtendedProperties) *DiskExclusionProperties {
		if v == nil {
			return nil
		}
		return v.DiskExclusionProperties
	}).(DiskExclusionPropertiesPtrOutput)
}

// Linux VM name
func (o ExtendedPropertiesPtrOutput) LinuxVmApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedProperties) *string {
		if v == nil {
			return nil
		}
		return v.LinuxVmApplicationName
	}).(pulumi.StringPtrOutput)
}

// Extended Properties for Azure IaasVM Backup.
type ExtendedPropertiesResponse struct {
	// Extended Properties for Disk Exclusion.
	DiskExclusionProperties *DiskExclusionPropertiesResponse `pulumi:"diskExclusionProperties"`
	// Linux VM name
	LinuxVmApplicationName *string `pulumi:"linuxVmApplicationName"`
}

// Extended Properties for Azure IaasVM Backup.
type ExtendedPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ExtendedPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedPropertiesResponse)(nil)).Elem()
}

func (o ExtendedPropertiesResponseOutput) ToExtendedPropertiesResponseOutput() ExtendedPropertiesResponseOutput {
	return o
}

func (o ExtendedPropertiesResponseOutput) ToExtendedPropertiesResponseOutputWithContext(ctx context.Context) ExtendedPropertiesResponseOutput {
	return o
}

// Extended Properties for Disk Exclusion.
func (o ExtendedPropertiesResponseOutput) DiskExclusionProperties() DiskExclusionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ExtendedPropertiesResponse) *DiskExclusionPropertiesResponse { return v.DiskExclusionProperties }).(DiskExclusionPropertiesResponsePtrOutput)
}

// Linux VM name
func (o ExtendedPropertiesResponseOutput) LinuxVmApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedPropertiesResponse) *string { return v.LinuxVmApplicationName }).(pulumi.StringPtrOutput)
}

type ExtendedPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ExtendedPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedPropertiesResponse)(nil)).Elem()
}

func (o ExtendedPropertiesResponsePtrOutput) ToExtendedPropertiesResponsePtrOutput() ExtendedPropertiesResponsePtrOutput {
	return o
}

func (o ExtendedPropertiesResponsePtrOutput) ToExtendedPropertiesResponsePtrOutputWithContext(ctx context.Context) ExtendedPropertiesResponsePtrOutput {
	return o
}

func (o ExtendedPropertiesResponsePtrOutput) Elem() ExtendedPropertiesResponseOutput {
	return o.ApplyT(func(v *ExtendedPropertiesResponse) ExtendedPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ExtendedPropertiesResponse
		return ret
	}).(ExtendedPropertiesResponseOutput)
}

// Extended Properties for Disk Exclusion.
func (o ExtendedPropertiesResponsePtrOutput) DiskExclusionProperties() DiskExclusionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *ExtendedPropertiesResponse) *DiskExclusionPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.DiskExclusionProperties
	}).(DiskExclusionPropertiesResponsePtrOutput)
}

// Linux VM name
func (o ExtendedPropertiesResponsePtrOutput) LinuxVmApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinuxVmApplicationName
	}).(pulumi.StringPtrOutput)
}

// Base class for generic container of backup items
type GenericContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'GenericContainer'.
	ContainerType string `pulumi:"containerType"`
	// Extended information (not returned in List container API calls)
	ExtendedInformation *GenericContainerExtendedInfo `pulumi:"extendedInformation"`
	// Name of the container's fabric
	FabricName *string `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// GenericContainerInput is an input type that accepts GenericContainerArgs and GenericContainerOutput values.
// You can construct a concrete instance of `GenericContainerInput` via:
//
//	GenericContainerArgs{...}
type GenericContainerInput interface {
	pulumi.Input

	ToGenericContainerOutput() GenericContainerOutput
	ToGenericContainerOutputWithContext(context.Context) GenericContainerOutput
}

// Base class for generic container of backup items
type GenericContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'GenericContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Extended information (not returned in List container API calls)
	ExtendedInformation GenericContainerExtendedInfoPtrInput `pulumi:"extendedInformation"`
	// Name of the container's fabric
	FabricName pulumi.StringPtrInput `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
}

func (GenericContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericContainer)(nil)).Elem()
}

func (i GenericContainerArgs) ToGenericContainerOutput() GenericContainerOutput {
	return i.ToGenericContainerOutputWithContext(context.Background())
}

func (i GenericContainerArgs) ToGenericContainerOutputWithContext(ctx context.Context) GenericContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericContainerOutput)
}

func (i GenericContainerArgs) ToGenericContainerPtrOutput() GenericContainerPtrOutput {
	return i.ToGenericContainerPtrOutputWithContext(context.Background())
}

func (i GenericContainerArgs) ToGenericContainerPtrOutputWithContext(ctx context.Context) GenericContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericContainerOutput).ToGenericContainerPtrOutputWithContext(ctx)
}

// GenericContainerPtrInput is an input type that accepts GenericContainerArgs, GenericContainerPtr and GenericContainerPtrOutput values.
// You can construct a concrete instance of `GenericContainerPtrInput` via:
//
//	        GenericContainerArgs{...}
//
//	or:
//
//	        nil
type GenericContainerPtrInput interface {
	pulumi.Input

	ToGenericContainerPtrOutput() GenericContainerPtrOutput
	ToGenericContainerPtrOutputWithContext(context.Context) GenericContainerPtrOutput
}

type genericContainerPtrType GenericContainerArgs

func GenericContainerPtr(v *GenericContainerArgs) GenericContainerPtrInput {
	return (*genericContainerPtrType)(v)
}

func (*genericContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericContainer)(nil)).Elem()
}

func (i *genericContainerPtrType) ToGenericContainerPtrOutput() GenericContainerPtrOutput {
	return i.ToGenericContainerPtrOutputWithContext(context.Background())
}

func (i *genericContainerPtrType) ToGenericContainerPtrOutputWithContext(ctx context.Context) GenericContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericContainerPtrOutput)
}

// Base class for generic container of backup items
type GenericContainerOutput struct{ *pulumi.OutputState }

func (GenericContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericContainer)(nil)).Elem()
}

func (o GenericContainerOutput) ToGenericContainerOutput() GenericContainerOutput {
	return o
}

func (o GenericContainerOutput) ToGenericContainerOutputWithContext(ctx context.Context) GenericContainerOutput {
	return o
}

func (o GenericContainerOutput) ToGenericContainerPtrOutput() GenericContainerPtrOutput {
	return o.ToGenericContainerPtrOutputWithContext(context.Background())
}

func (o GenericContainerOutput) ToGenericContainerPtrOutputWithContext(ctx context.Context) GenericContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GenericContainer) *GenericContainer {
		return &v
	}).(GenericContainerPtrOutput)
}

// Type of backup management for the container.
func (o GenericContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'GenericContainer'.
func (o GenericContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Extended information (not returned in List container API calls)
func (o GenericContainerOutput) ExtendedInformation() GenericContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v GenericContainer) *GenericContainerExtendedInfo { return v.ExtendedInformation }).(GenericContainerExtendedInfoPtrOutput)
}

// Name of the container's fabric
func (o GenericContainerOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainer) *string { return v.FabricName }).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o GenericContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o GenericContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o GenericContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o GenericContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

type GenericContainerPtrOutput struct{ *pulumi.OutputState }

func (GenericContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericContainer)(nil)).Elem()
}

func (o GenericContainerPtrOutput) ToGenericContainerPtrOutput() GenericContainerPtrOutput {
	return o
}

func (o GenericContainerPtrOutput) ToGenericContainerPtrOutputWithContext(ctx context.Context) GenericContainerPtrOutput {
	return o
}

func (o GenericContainerPtrOutput) Elem() GenericContainerOutput {
	return o.ApplyT(func(v *GenericContainer) GenericContainer {
		if v != nil {
			return *v
		}
		var ret GenericContainer
		return ret
	}).(GenericContainerOutput)
}

// Type of backup management for the container.
func (o GenericContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'GenericContainer'.
func (o GenericContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Extended information (not returned in List container API calls)
func (o GenericContainerPtrOutput) ExtendedInformation() GenericContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v *GenericContainer) *GenericContainerExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInformation
	}).(GenericContainerExtendedInfoPtrOutput)
}

// Name of the container's fabric
func (o GenericContainerPtrOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainer) *string {
		if v == nil {
			return nil
		}
		return v.FabricName
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o GenericContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o GenericContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o GenericContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o GenericContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// Container extended information
type GenericContainerExtendedInfo struct {
	// Container identity information
	ContainerIdentityInfo *ContainerIdentityInfo `pulumi:"containerIdentityInfo"`
	// Public key of container cert
	RawCertData *string `pulumi:"rawCertData"`
	// Azure Backup Service Endpoints for the container
	ServiceEndpoints map[string]string `pulumi:"serviceEndpoints"`
}

// GenericContainerExtendedInfoInput is an input type that accepts GenericContainerExtendedInfoArgs and GenericContainerExtendedInfoOutput values.
// You can construct a concrete instance of `GenericContainerExtendedInfoInput` via:
//
//	GenericContainerExtendedInfoArgs{...}
type GenericContainerExtendedInfoInput interface {
	pulumi.Input

	ToGenericContainerExtendedInfoOutput() GenericContainerExtendedInfoOutput
	ToGenericContainerExtendedInfoOutputWithContext(context.Context) GenericContainerExtendedInfoOutput
}

// Container extended information
type GenericContainerExtendedInfoArgs struct {
	// Container identity information
	ContainerIdentityInfo ContainerIdentityInfoPtrInput `pulumi:"containerIdentityInfo"`
	// Public key of container cert
	RawCertData pulumi.StringPtrInput `pulumi:"rawCertData"`
	// Azure Backup Service Endpoints for the container
	ServiceEndpoints pulumi.StringMapInput `pulumi:"serviceEndpoints"`
}

func (GenericContainerExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericContainerExtendedInfo)(nil)).Elem()
}

func (i GenericContainerExtendedInfoArgs) ToGenericContainerExtendedInfoOutput() GenericContainerExtendedInfoOutput {
	return i.ToGenericContainerExtendedInfoOutputWithContext(context.Background())
}

func (i GenericContainerExtendedInfoArgs) ToGenericContainerExtendedInfoOutputWithContext(ctx context.Context) GenericContainerExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericContainerExtendedInfoOutput)
}

func (i GenericContainerExtendedInfoArgs) ToGenericContainerExtendedInfoPtrOutput() GenericContainerExtendedInfoPtrOutput {
	return i.ToGenericContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i GenericContainerExtendedInfoArgs) ToGenericContainerExtendedInfoPtrOutputWithContext(ctx context.Context) GenericContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericContainerExtendedInfoOutput).ToGenericContainerExtendedInfoPtrOutputWithContext(ctx)
}

// GenericContainerExtendedInfoPtrInput is an input type that accepts GenericContainerExtendedInfoArgs, GenericContainerExtendedInfoPtr and GenericContainerExtendedInfoPtrOutput values.
// You can construct a concrete instance of `GenericContainerExtendedInfoPtrInput` via:
//
//	        GenericContainerExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type GenericContainerExtendedInfoPtrInput interface {
	pulumi.Input

	ToGenericContainerExtendedInfoPtrOutput() GenericContainerExtendedInfoPtrOutput
	ToGenericContainerExtendedInfoPtrOutputWithContext(context.Context) GenericContainerExtendedInfoPtrOutput
}

type genericContainerExtendedInfoPtrType GenericContainerExtendedInfoArgs

func GenericContainerExtendedInfoPtr(v *GenericContainerExtendedInfoArgs) GenericContainerExtendedInfoPtrInput {
	return (*genericContainerExtendedInfoPtrType)(v)
}

func (*genericContainerExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericContainerExtendedInfo)(nil)).Elem()
}

func (i *genericContainerExtendedInfoPtrType) ToGenericContainerExtendedInfoPtrOutput() GenericContainerExtendedInfoPtrOutput {
	return i.ToGenericContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *genericContainerExtendedInfoPtrType) ToGenericContainerExtendedInfoPtrOutputWithContext(ctx context.Context) GenericContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericContainerExtendedInfoPtrOutput)
}

// Container extended information
type GenericContainerExtendedInfoOutput struct{ *pulumi.OutputState }

func (GenericContainerExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericContainerExtendedInfo)(nil)).Elem()
}

func (o GenericContainerExtendedInfoOutput) ToGenericContainerExtendedInfoOutput() GenericContainerExtendedInfoOutput {
	return o
}

func (o GenericContainerExtendedInfoOutput) ToGenericContainerExtendedInfoOutputWithContext(ctx context.Context) GenericContainerExtendedInfoOutput {
	return o
}

func (o GenericContainerExtendedInfoOutput) ToGenericContainerExtendedInfoPtrOutput() GenericContainerExtendedInfoPtrOutput {
	return o.ToGenericContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (o GenericContainerExtendedInfoOutput) ToGenericContainerExtendedInfoPtrOutputWithContext(ctx context.Context) GenericContainerExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GenericContainerExtendedInfo) *GenericContainerExtendedInfo {
		return &v
	}).(GenericContainerExtendedInfoPtrOutput)
}

// Container identity information
func (o GenericContainerExtendedInfoOutput) ContainerIdentityInfo() ContainerIdentityInfoPtrOutput {
	return o.ApplyT(func(v GenericContainerExtendedInfo) *ContainerIdentityInfo { return v.ContainerIdentityInfo }).(ContainerIdentityInfoPtrOutput)
}

// Public key of container cert
func (o GenericContainerExtendedInfoOutput) RawCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerExtendedInfo) *string { return v.RawCertData }).(pulumi.StringPtrOutput)
}

// Azure Backup Service Endpoints for the container
func (o GenericContainerExtendedInfoOutput) ServiceEndpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v GenericContainerExtendedInfo) map[string]string { return v.ServiceEndpoints }).(pulumi.StringMapOutput)
}

type GenericContainerExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (GenericContainerExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericContainerExtendedInfo)(nil)).Elem()
}

func (o GenericContainerExtendedInfoPtrOutput) ToGenericContainerExtendedInfoPtrOutput() GenericContainerExtendedInfoPtrOutput {
	return o
}

func (o GenericContainerExtendedInfoPtrOutput) ToGenericContainerExtendedInfoPtrOutputWithContext(ctx context.Context) GenericContainerExtendedInfoPtrOutput {
	return o
}

func (o GenericContainerExtendedInfoPtrOutput) Elem() GenericContainerExtendedInfoOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfo) GenericContainerExtendedInfo {
		if v != nil {
			return *v
		}
		var ret GenericContainerExtendedInfo
		return ret
	}).(GenericContainerExtendedInfoOutput)
}

// Container identity information
func (o GenericContainerExtendedInfoPtrOutput) ContainerIdentityInfo() ContainerIdentityInfoPtrOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfo) *ContainerIdentityInfo {
		if v == nil {
			return nil
		}
		return v.ContainerIdentityInfo
	}).(ContainerIdentityInfoPtrOutput)
}

// Public key of container cert
func (o GenericContainerExtendedInfoPtrOutput) RawCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.RawCertData
	}).(pulumi.StringPtrOutput)
}

// Azure Backup Service Endpoints for the container
func (o GenericContainerExtendedInfoPtrOutput) ServiceEndpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfo) map[string]string {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(pulumi.StringMapOutput)
}

// Container extended information
type GenericContainerExtendedInfoResponse struct {
	// Container identity information
	ContainerIdentityInfo *ContainerIdentityInfoResponse `pulumi:"containerIdentityInfo"`
	// Public key of container cert
	RawCertData *string `pulumi:"rawCertData"`
	// Azure Backup Service Endpoints for the container
	ServiceEndpoints map[string]string `pulumi:"serviceEndpoints"`
}

// Container extended information
type GenericContainerExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (GenericContainerExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericContainerExtendedInfoResponse)(nil)).Elem()
}

func (o GenericContainerExtendedInfoResponseOutput) ToGenericContainerExtendedInfoResponseOutput() GenericContainerExtendedInfoResponseOutput {
	return o
}

func (o GenericContainerExtendedInfoResponseOutput) ToGenericContainerExtendedInfoResponseOutputWithContext(ctx context.Context) GenericContainerExtendedInfoResponseOutput {
	return o
}

// Container identity information
func (o GenericContainerExtendedInfoResponseOutput) ContainerIdentityInfo() ContainerIdentityInfoResponsePtrOutput {
	return o.ApplyT(func(v GenericContainerExtendedInfoResponse) *ContainerIdentityInfoResponse {
		return v.ContainerIdentityInfo
	}).(ContainerIdentityInfoResponsePtrOutput)
}

// Public key of container cert
func (o GenericContainerExtendedInfoResponseOutput) RawCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerExtendedInfoResponse) *string { return v.RawCertData }).(pulumi.StringPtrOutput)
}

// Azure Backup Service Endpoints for the container
func (o GenericContainerExtendedInfoResponseOutput) ServiceEndpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v GenericContainerExtendedInfoResponse) map[string]string { return v.ServiceEndpoints }).(pulumi.StringMapOutput)
}

type GenericContainerExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (GenericContainerExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericContainerExtendedInfoResponse)(nil)).Elem()
}

func (o GenericContainerExtendedInfoResponsePtrOutput) ToGenericContainerExtendedInfoResponsePtrOutput() GenericContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o GenericContainerExtendedInfoResponsePtrOutput) ToGenericContainerExtendedInfoResponsePtrOutputWithContext(ctx context.Context) GenericContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o GenericContainerExtendedInfoResponsePtrOutput) Elem() GenericContainerExtendedInfoResponseOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfoResponse) GenericContainerExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret GenericContainerExtendedInfoResponse
		return ret
	}).(GenericContainerExtendedInfoResponseOutput)
}

// Container identity information
func (o GenericContainerExtendedInfoResponsePtrOutput) ContainerIdentityInfo() ContainerIdentityInfoResponsePtrOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfoResponse) *ContainerIdentityInfoResponse {
		if v == nil {
			return nil
		}
		return v.ContainerIdentityInfo
	}).(ContainerIdentityInfoResponsePtrOutput)
}

// Public key of container cert
func (o GenericContainerExtendedInfoResponsePtrOutput) RawCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.RawCertData
	}).(pulumi.StringPtrOutput)
}

// Azure Backup Service Endpoints for the container
func (o GenericContainerExtendedInfoResponsePtrOutput) ServiceEndpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GenericContainerExtendedInfoResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(pulumi.StringMapOutput)
}

// Base class for generic container of backup items
type GenericContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'GenericContainer'.
	ContainerType string `pulumi:"containerType"`
	// Extended information (not returned in List container API calls)
	ExtendedInformation *GenericContainerExtendedInfoResponse `pulumi:"extendedInformation"`
	// Name of the container's fabric
	FabricName *string `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// Base class for generic container of backup items
type GenericContainerResponseOutput struct{ *pulumi.OutputState }

func (GenericContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericContainerResponse)(nil)).Elem()
}

func (o GenericContainerResponseOutput) ToGenericContainerResponseOutput() GenericContainerResponseOutput {
	return o
}

func (o GenericContainerResponseOutput) ToGenericContainerResponseOutputWithContext(ctx context.Context) GenericContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o GenericContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'GenericContainer'.
func (o GenericContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Extended information (not returned in List container API calls)
func (o GenericContainerResponseOutput) ExtendedInformation() GenericContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *GenericContainerExtendedInfoResponse { return v.ExtendedInformation }).(GenericContainerExtendedInfoResponsePtrOutput)
}

// Name of the container's fabric
func (o GenericContainerResponseOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.FabricName }).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o GenericContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o GenericContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o GenericContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o GenericContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Base class for backup items.
type GenericProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Name of this backup item's fabric.
	FabricName *string `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Data Plane Service ID of the protected item.
	ProtectedItemId *float64 `pulumi:"protectedItemId"`
	// backup item type.
	// Expected value is 'GenericProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// Loosely coupled (type, value) associations (example - parent of a protected item)
	SourceAssociations map[string]string `pulumi:"sourceAssociations"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// GenericProtectedItemInput is an input type that accepts GenericProtectedItemArgs and GenericProtectedItemOutput values.
// You can construct a concrete instance of `GenericProtectedItemInput` via:
//
//	GenericProtectedItemArgs{...}
type GenericProtectedItemInput interface {
	pulumi.Input

	ToGenericProtectedItemOutput() GenericProtectedItemOutput
	ToGenericProtectedItemOutputWithContext(context.Context) GenericProtectedItemOutput
}

// Base class for backup items.
type GenericProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Name of this backup item's fabric.
	FabricName pulumi.StringPtrInput `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState pulumi.StringPtrInput `pulumi:"policyState"`
	// Data Plane Service ID of the protected item.
	ProtectedItemId pulumi.Float64PtrInput `pulumi:"protectedItemId"`
	// backup item type.
	// Expected value is 'GenericProtectedItem'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// Loosely coupled (type, value) associations (example - parent of a protected item)
	SourceAssociations pulumi.StringMapInput `pulumi:"sourceAssociations"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (GenericProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericProtectedItem)(nil)).Elem()
}

func (i GenericProtectedItemArgs) ToGenericProtectedItemOutput() GenericProtectedItemOutput {
	return i.ToGenericProtectedItemOutputWithContext(context.Background())
}

func (i GenericProtectedItemArgs) ToGenericProtectedItemOutputWithContext(ctx context.Context) GenericProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericProtectedItemOutput)
}

func (i GenericProtectedItemArgs) ToGenericProtectedItemPtrOutput() GenericProtectedItemPtrOutput {
	return i.ToGenericProtectedItemPtrOutputWithContext(context.Background())
}

func (i GenericProtectedItemArgs) ToGenericProtectedItemPtrOutputWithContext(ctx context.Context) GenericProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericProtectedItemOutput).ToGenericProtectedItemPtrOutputWithContext(ctx)
}

// GenericProtectedItemPtrInput is an input type that accepts GenericProtectedItemArgs, GenericProtectedItemPtr and GenericProtectedItemPtrOutput values.
// You can construct a concrete instance of `GenericProtectedItemPtrInput` via:
//
//	        GenericProtectedItemArgs{...}
//
//	or:
//
//	        nil
type GenericProtectedItemPtrInput interface {
	pulumi.Input

	ToGenericProtectedItemPtrOutput() GenericProtectedItemPtrOutput
	ToGenericProtectedItemPtrOutputWithContext(context.Context) GenericProtectedItemPtrOutput
}

type genericProtectedItemPtrType GenericProtectedItemArgs

func GenericProtectedItemPtr(v *GenericProtectedItemArgs) GenericProtectedItemPtrInput {
	return (*genericProtectedItemPtrType)(v)
}

func (*genericProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericProtectedItem)(nil)).Elem()
}

func (i *genericProtectedItemPtrType) ToGenericProtectedItemPtrOutput() GenericProtectedItemPtrOutput {
	return i.ToGenericProtectedItemPtrOutputWithContext(context.Background())
}

func (i *genericProtectedItemPtrType) ToGenericProtectedItemPtrOutputWithContext(ctx context.Context) GenericProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericProtectedItemPtrOutput)
}

// Base class for backup items.
type GenericProtectedItemOutput struct{ *pulumi.OutputState }

func (GenericProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericProtectedItem)(nil)).Elem()
}

func (o GenericProtectedItemOutput) ToGenericProtectedItemOutput() GenericProtectedItemOutput {
	return o
}

func (o GenericProtectedItemOutput) ToGenericProtectedItemOutputWithContext(ctx context.Context) GenericProtectedItemOutput {
	return o
}

func (o GenericProtectedItemOutput) ToGenericProtectedItemPtrOutput() GenericProtectedItemPtrOutput {
	return o.ToGenericProtectedItemPtrOutputWithContext(context.Background())
}

func (o GenericProtectedItemOutput) ToGenericProtectedItemPtrOutputWithContext(ctx context.Context) GenericProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GenericProtectedItem) *GenericProtectedItem {
		return &v
	}).(GenericProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o GenericProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o GenericProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o GenericProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o GenericProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o GenericProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Name of this backup item's fabric.
func (o GenericProtectedItemOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.FabricName }).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o GenericProtectedItemOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o GenericProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o GenericProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o GenericProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o GenericProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o GenericProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o GenericProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o GenericProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o GenericProtectedItemOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Data Plane Service ID of the protected item.
func (o GenericProtectedItemOutput) ProtectedItemId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *float64 { return v.ProtectedItemId }).(pulumi.Float64PtrOutput)
}

// backup item type.
// Expected value is 'GenericProtectedItem'.
func (o GenericProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o GenericProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o GenericProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GenericProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o GenericProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// Loosely coupled (type, value) associations (example - parent of a protected item)
func (o GenericProtectedItemOutput) SourceAssociations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GenericProtectedItem) map[string]string { return v.SourceAssociations }).(pulumi.StringMapOutput)
}

// ARM ID of the resource to be backed up.
func (o GenericProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type GenericProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (GenericProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericProtectedItem)(nil)).Elem()
}

func (o GenericProtectedItemPtrOutput) ToGenericProtectedItemPtrOutput() GenericProtectedItemPtrOutput {
	return o
}

func (o GenericProtectedItemPtrOutput) ToGenericProtectedItemPtrOutputWithContext(ctx context.Context) GenericProtectedItemPtrOutput {
	return o
}

func (o GenericProtectedItemPtrOutput) Elem() GenericProtectedItemOutput {
	return o.ApplyT(func(v *GenericProtectedItem) GenericProtectedItem {
		if v != nil {
			return *v
		}
		var ret GenericProtectedItem
		return ret
	}).(GenericProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o GenericProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o GenericProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o GenericProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o GenericProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o GenericProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Name of this backup item's fabric.
func (o GenericProtectedItemPtrOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.FabricName
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o GenericProtectedItemPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o GenericProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o GenericProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o GenericProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o GenericProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o GenericProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o GenericProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o GenericProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o GenericProtectedItemPtrOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyState
	}).(pulumi.StringPtrOutput)
}

// Data Plane Service ID of the protected item.
func (o GenericProtectedItemPtrOutput) ProtectedItemId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *float64 {
		if v == nil {
			return nil
		}
		return v.ProtectedItemId
	}).(pulumi.Float64PtrOutput)
}

// backup item type.
// Expected value is 'GenericProtectedItem'.
func (o GenericProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Backup state of this backup item.
func (o GenericProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o GenericProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GenericProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o GenericProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// Loosely coupled (type, value) associations (example - parent of a protected item)
func (o GenericProtectedItemPtrOutput) SourceAssociations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GenericProtectedItem) map[string]string {
		if v == nil {
			return nil
		}
		return v.SourceAssociations
	}).(pulumi.StringMapOutput)
}

// ARM ID of the resource to be backed up.
func (o GenericProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Base class for backup items.
type GenericProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Name of this backup item's fabric.
	FabricName *string `pulumi:"fabricName"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// Indicates consistency of policy object and policy applied to this backup item.
	PolicyState *string `pulumi:"policyState"`
	// Data Plane Service ID of the protected item.
	ProtectedItemId *float64 `pulumi:"protectedItemId"`
	// backup item type.
	// Expected value is 'GenericProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Backup state of this backup item.
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// Loosely coupled (type, value) associations (example - parent of a protected item)
	SourceAssociations map[string]string `pulumi:"sourceAssociations"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// Base class for backup items.
type GenericProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (GenericProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericProtectedItemResponse)(nil)).Elem()
}

func (o GenericProtectedItemResponseOutput) ToGenericProtectedItemResponseOutput() GenericProtectedItemResponseOutput {
	return o
}

func (o GenericProtectedItemResponseOutput) ToGenericProtectedItemResponseOutputWithContext(ctx context.Context) GenericProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o GenericProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o GenericProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o GenericProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o GenericProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Time for deferred deletion in UTC
func (o GenericProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o GenericProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Name of this backup item's fabric.
func (o GenericProtectedItemResponseOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.FabricName }).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o GenericProtectedItemResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o GenericProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o GenericProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o GenericProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o GenericProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o GenericProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o GenericProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o GenericProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Indicates consistency of policy object and policy applied to this backup item.
func (o GenericProtectedItemResponseOutput) PolicyState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.PolicyState }).(pulumi.StringPtrOutput)
}

// Data Plane Service ID of the protected item.
func (o GenericProtectedItemResponseOutput) ProtectedItemId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *float64 { return v.ProtectedItemId }).(pulumi.Float64PtrOutput)
}

// backup item type.
// Expected value is 'GenericProtectedItem'.
func (o GenericProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Backup state of this backup item.
func (o GenericProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o GenericProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o GenericProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// Loosely coupled (type, value) associations (example - parent of a protected item)
func (o GenericProtectedItemResponseOutput) SourceAssociations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) map[string]string { return v.SourceAssociations }).(pulumi.StringMapOutput)
}

// ARM ID of the resource to be backed up.
func (o GenericProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o GenericProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o GenericProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Azure VM (Mercury) workload-specific backup policy.
type GenericProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'GenericProtectionPolicy'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of this policy's fabric.
	FabricName *string `pulumi:"fabricName"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// List of sub-protection policies which includes schedule and retention
	SubProtectionPolicy []SubProtectionPolicy `pulumi:"subProtectionPolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// GenericProtectionPolicyInput is an input type that accepts GenericProtectionPolicyArgs and GenericProtectionPolicyOutput values.
// You can construct a concrete instance of `GenericProtectionPolicyInput` via:
//
//	GenericProtectionPolicyArgs{...}
type GenericProtectionPolicyInput interface {
	pulumi.Input

	ToGenericProtectionPolicyOutput() GenericProtectionPolicyOutput
	ToGenericProtectionPolicyOutputWithContext(context.Context) GenericProtectionPolicyOutput
}

// Azure VM (Mercury) workload-specific backup policy.
type GenericProtectionPolicyArgs struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'GenericProtectionPolicy'.
	BackupManagementType pulumi.StringInput `pulumi:"backupManagementType"`
	// Name of this policy's fabric.
	FabricName pulumi.StringPtrInput `pulumi:"fabricName"`
	// Number of items associated with this policy.
	ProtectedItemsCount pulumi.IntPtrInput `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// List of sub-protection policies which includes schedule and retention
	SubProtectionPolicy SubProtectionPolicyArrayInput `pulumi:"subProtectionPolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (GenericProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericProtectionPolicy)(nil)).Elem()
}

func (i GenericProtectionPolicyArgs) ToGenericProtectionPolicyOutput() GenericProtectionPolicyOutput {
	return i.ToGenericProtectionPolicyOutputWithContext(context.Background())
}

func (i GenericProtectionPolicyArgs) ToGenericProtectionPolicyOutputWithContext(ctx context.Context) GenericProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericProtectionPolicyOutput)
}

func (i GenericProtectionPolicyArgs) ToGenericProtectionPolicyPtrOutput() GenericProtectionPolicyPtrOutput {
	return i.ToGenericProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i GenericProtectionPolicyArgs) ToGenericProtectionPolicyPtrOutputWithContext(ctx context.Context) GenericProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericProtectionPolicyOutput).ToGenericProtectionPolicyPtrOutputWithContext(ctx)
}

// GenericProtectionPolicyPtrInput is an input type that accepts GenericProtectionPolicyArgs, GenericProtectionPolicyPtr and GenericProtectionPolicyPtrOutput values.
// You can construct a concrete instance of `GenericProtectionPolicyPtrInput` via:
//
//	        GenericProtectionPolicyArgs{...}
//
//	or:
//
//	        nil
type GenericProtectionPolicyPtrInput interface {
	pulumi.Input

	ToGenericProtectionPolicyPtrOutput() GenericProtectionPolicyPtrOutput
	ToGenericProtectionPolicyPtrOutputWithContext(context.Context) GenericProtectionPolicyPtrOutput
}

type genericProtectionPolicyPtrType GenericProtectionPolicyArgs

func GenericProtectionPolicyPtr(v *GenericProtectionPolicyArgs) GenericProtectionPolicyPtrInput {
	return (*genericProtectionPolicyPtrType)(v)
}

func (*genericProtectionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericProtectionPolicy)(nil)).Elem()
}

func (i *genericProtectionPolicyPtrType) ToGenericProtectionPolicyPtrOutput() GenericProtectionPolicyPtrOutput {
	return i.ToGenericProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i *genericProtectionPolicyPtrType) ToGenericProtectionPolicyPtrOutputWithContext(ctx context.Context) GenericProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenericProtectionPolicyPtrOutput)
}

// Azure VM (Mercury) workload-specific backup policy.
type GenericProtectionPolicyOutput struct{ *pulumi.OutputState }

func (GenericProtectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericProtectionPolicy)(nil)).Elem()
}

func (o GenericProtectionPolicyOutput) ToGenericProtectionPolicyOutput() GenericProtectionPolicyOutput {
	return o
}

func (o GenericProtectionPolicyOutput) ToGenericProtectionPolicyOutputWithContext(ctx context.Context) GenericProtectionPolicyOutput {
	return o
}

func (o GenericProtectionPolicyOutput) ToGenericProtectionPolicyPtrOutput() GenericProtectionPolicyPtrOutput {
	return o.ToGenericProtectionPolicyPtrOutputWithContext(context.Background())
}

func (o GenericProtectionPolicyOutput) ToGenericProtectionPolicyPtrOutputWithContext(ctx context.Context) GenericProtectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GenericProtectionPolicy) *GenericProtectionPolicy {
		return &v
	}).(GenericProtectionPolicyPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'GenericProtectionPolicy'.
func (o GenericProtectionPolicyOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericProtectionPolicy) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of this policy's fabric.
func (o GenericProtectionPolicyOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectionPolicy) *string { return v.FabricName }).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o GenericProtectionPolicyOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GenericProtectionPolicy) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o GenericProtectionPolicyOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GenericProtectionPolicy) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// List of sub-protection policies which includes schedule and retention
func (o GenericProtectionPolicyOutput) SubProtectionPolicy() SubProtectionPolicyArrayOutput {
	return o.ApplyT(func(v GenericProtectionPolicy) []SubProtectionPolicy { return v.SubProtectionPolicy }).(SubProtectionPolicyArrayOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o GenericProtectionPolicyOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectionPolicy) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type GenericProtectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (GenericProtectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GenericProtectionPolicy)(nil)).Elem()
}

func (o GenericProtectionPolicyPtrOutput) ToGenericProtectionPolicyPtrOutput() GenericProtectionPolicyPtrOutput {
	return o
}

func (o GenericProtectionPolicyPtrOutput) ToGenericProtectionPolicyPtrOutputWithContext(ctx context.Context) GenericProtectionPolicyPtrOutput {
	return o
}

func (o GenericProtectionPolicyPtrOutput) Elem() GenericProtectionPolicyOutput {
	return o.ApplyT(func(v *GenericProtectionPolicy) GenericProtectionPolicy {
		if v != nil {
			return *v
		}
		var ret GenericProtectionPolicy
		return ret
	}).(GenericProtectionPolicyOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'GenericProtectionPolicy'.
func (o GenericProtectionPolicyPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Name of this policy's fabric.
func (o GenericProtectionPolicyPtrOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.FabricName
	}).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o GenericProtectionPolicyPtrOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GenericProtectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.ProtectedItemsCount
	}).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o GenericProtectionPolicyPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GenericProtectionPolicy) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// List of sub-protection policies which includes schedule and retention
func (o GenericProtectionPolicyPtrOutput) SubProtectionPolicy() SubProtectionPolicyArrayOutput {
	return o.ApplyT(func(v *GenericProtectionPolicy) []SubProtectionPolicy {
		if v == nil {
			return nil
		}
		return v.SubProtectionPolicy
	}).(SubProtectionPolicyArrayOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o GenericProtectionPolicyPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GenericProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Azure VM (Mercury) workload-specific backup policy.
type GenericProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'GenericProtectionPolicy'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of this policy's fabric.
	FabricName *string `pulumi:"fabricName"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// List of sub-protection policies which includes schedule and retention
	SubProtectionPolicy []SubProtectionPolicyResponse `pulumi:"subProtectionPolicy"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// Azure VM (Mercury) workload-specific backup policy.
type GenericProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (GenericProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenericProtectionPolicyResponse)(nil)).Elem()
}

func (o GenericProtectionPolicyResponseOutput) ToGenericProtectionPolicyResponseOutput() GenericProtectionPolicyResponseOutput {
	return o
}

func (o GenericProtectionPolicyResponseOutput) ToGenericProtectionPolicyResponseOutputWithContext(ctx context.Context) GenericProtectionPolicyResponseOutput {
	return o
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'GenericProtectionPolicy'.
func (o GenericProtectionPolicyResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v GenericProtectionPolicyResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of this policy's fabric.
func (o GenericProtectionPolicyResponseOutput) FabricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectionPolicyResponse) *string { return v.FabricName }).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o GenericProtectionPolicyResponseOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GenericProtectionPolicyResponse) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o GenericProtectionPolicyResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GenericProtectionPolicyResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// List of sub-protection policies which includes schedule and retention
func (o GenericProtectionPolicyResponseOutput) SubProtectionPolicy() SubProtectionPolicyResponseArrayOutput {
	return o.ApplyT(func(v GenericProtectionPolicyResponse) []SubProtectionPolicyResponse { return v.SubProtectionPolicy }).(SubProtectionPolicyResponseArrayOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o GenericProtectionPolicyResponseOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenericProtectionPolicyResponse) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type HourlySchedule struct {
	// Interval at which backup needs to be triggered. For hourly the value
	//  can be 4/6/8/12
	Interval *int `pulumi:"interval"`
	// To specify duration of the backup window
	ScheduleWindowDuration *int `pulumi:"scheduleWindowDuration"`
	// To specify start time of the backup window
	ScheduleWindowStartTime *string `pulumi:"scheduleWindowStartTime"`
}

// HourlyScheduleInput is an input type that accepts HourlyScheduleArgs and HourlyScheduleOutput values.
// You can construct a concrete instance of `HourlyScheduleInput` via:
//
//	HourlyScheduleArgs{...}
type HourlyScheduleInput interface {
	pulumi.Input

	ToHourlyScheduleOutput() HourlyScheduleOutput
	ToHourlyScheduleOutputWithContext(context.Context) HourlyScheduleOutput
}

type HourlyScheduleArgs struct {
	// Interval at which backup needs to be triggered. For hourly the value
	//  can be 4/6/8/12
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// To specify duration of the backup window
	ScheduleWindowDuration pulumi.IntPtrInput `pulumi:"scheduleWindowDuration"`
	// To specify start time of the backup window
	ScheduleWindowStartTime pulumi.StringPtrInput `pulumi:"scheduleWindowStartTime"`
}

func (HourlyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HourlySchedule)(nil)).Elem()
}

func (i HourlyScheduleArgs) ToHourlyScheduleOutput() HourlyScheduleOutput {
	return i.ToHourlyScheduleOutputWithContext(context.Background())
}

func (i HourlyScheduleArgs) ToHourlyScheduleOutputWithContext(ctx context.Context) HourlyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourlyScheduleOutput)
}

func (i HourlyScheduleArgs) ToHourlySchedulePtrOutput() HourlySchedulePtrOutput {
	return i.ToHourlySchedulePtrOutputWithContext(context.Background())
}

func (i HourlyScheduleArgs) ToHourlySchedulePtrOutputWithContext(ctx context.Context) HourlySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourlyScheduleOutput).ToHourlySchedulePtrOutputWithContext(ctx)
}

// HourlySchedulePtrInput is an input type that accepts HourlyScheduleArgs, HourlySchedulePtr and HourlySchedulePtrOutput values.
// You can construct a concrete instance of `HourlySchedulePtrInput` via:
//
//	        HourlyScheduleArgs{...}
//
//	or:
//
//	        nil
type HourlySchedulePtrInput interface {
	pulumi.Input

	ToHourlySchedulePtrOutput() HourlySchedulePtrOutput
	ToHourlySchedulePtrOutputWithContext(context.Context) HourlySchedulePtrOutput
}

type hourlySchedulePtrType HourlyScheduleArgs

func HourlySchedulePtr(v *HourlyScheduleArgs) HourlySchedulePtrInput {
	return (*hourlySchedulePtrType)(v)
}

func (*hourlySchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HourlySchedule)(nil)).Elem()
}

func (i *hourlySchedulePtrType) ToHourlySchedulePtrOutput() HourlySchedulePtrOutput {
	return i.ToHourlySchedulePtrOutputWithContext(context.Background())
}

func (i *hourlySchedulePtrType) ToHourlySchedulePtrOutputWithContext(ctx context.Context) HourlySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HourlySchedulePtrOutput)
}

type HourlyScheduleOutput struct{ *pulumi.OutputState }

func (HourlyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HourlySchedule)(nil)).Elem()
}

func (o HourlyScheduleOutput) ToHourlyScheduleOutput() HourlyScheduleOutput {
	return o
}

func (o HourlyScheduleOutput) ToHourlyScheduleOutputWithContext(ctx context.Context) HourlyScheduleOutput {
	return o
}

func (o HourlyScheduleOutput) ToHourlySchedulePtrOutput() HourlySchedulePtrOutput {
	return o.ToHourlySchedulePtrOutputWithContext(context.Background())
}

func (o HourlyScheduleOutput) ToHourlySchedulePtrOutputWithContext(ctx context.Context) HourlySchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HourlySchedule) *HourlySchedule {
		return &v
	}).(HourlySchedulePtrOutput)
}

// Interval at which backup needs to be triggered. For hourly the value
//
//	can be 4/6/8/12
func (o HourlyScheduleOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HourlySchedule) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// To specify duration of the backup window
func (o HourlyScheduleOutput) ScheduleWindowDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HourlySchedule) *int { return v.ScheduleWindowDuration }).(pulumi.IntPtrOutput)
}

// To specify start time of the backup window
func (o HourlyScheduleOutput) ScheduleWindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HourlySchedule) *string { return v.ScheduleWindowStartTime }).(pulumi.StringPtrOutput)
}

type HourlySchedulePtrOutput struct{ *pulumi.OutputState }

func (HourlySchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HourlySchedule)(nil)).Elem()
}

func (o HourlySchedulePtrOutput) ToHourlySchedulePtrOutput() HourlySchedulePtrOutput {
	return o
}

func (o HourlySchedulePtrOutput) ToHourlySchedulePtrOutputWithContext(ctx context.Context) HourlySchedulePtrOutput {
	return o
}

func (o HourlySchedulePtrOutput) Elem() HourlyScheduleOutput {
	return o.ApplyT(func(v *HourlySchedule) HourlySchedule {
		if v != nil {
			return *v
		}
		var ret HourlySchedule
		return ret
	}).(HourlyScheduleOutput)
}

// Interval at which backup needs to be triggered. For hourly the value
//
//	can be 4/6/8/12
func (o HourlySchedulePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HourlySchedule) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// To specify duration of the backup window
func (o HourlySchedulePtrOutput) ScheduleWindowDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HourlySchedule) *int {
		if v == nil {
			return nil
		}
		return v.ScheduleWindowDuration
	}).(pulumi.IntPtrOutput)
}

// To specify start time of the backup window
func (o HourlySchedulePtrOutput) ScheduleWindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HourlySchedule) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleWindowStartTime
	}).(pulumi.StringPtrOutput)
}

type HourlyScheduleResponse struct {
	// Interval at which backup needs to be triggered. For hourly the value
	//  can be 4/6/8/12
	Interval *int `pulumi:"interval"`
	// To specify duration of the backup window
	ScheduleWindowDuration *int `pulumi:"scheduleWindowDuration"`
	// To specify start time of the backup window
	ScheduleWindowStartTime *string `pulumi:"scheduleWindowStartTime"`
}

type HourlyScheduleResponseOutput struct{ *pulumi.OutputState }

func (HourlyScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HourlyScheduleResponse)(nil)).Elem()
}

func (o HourlyScheduleResponseOutput) ToHourlyScheduleResponseOutput() HourlyScheduleResponseOutput {
	return o
}

func (o HourlyScheduleResponseOutput) ToHourlyScheduleResponseOutputWithContext(ctx context.Context) HourlyScheduleResponseOutput {
	return o
}

// Interval at which backup needs to be triggered. For hourly the value
//
//	can be 4/6/8/12
func (o HourlyScheduleResponseOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HourlyScheduleResponse) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// To specify duration of the backup window
func (o HourlyScheduleResponseOutput) ScheduleWindowDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HourlyScheduleResponse) *int { return v.ScheduleWindowDuration }).(pulumi.IntPtrOutput)
}

// To specify start time of the backup window
func (o HourlyScheduleResponseOutput) ScheduleWindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HourlyScheduleResponse) *string { return v.ScheduleWindowStartTime }).(pulumi.StringPtrOutput)
}

type HourlyScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (HourlyScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HourlyScheduleResponse)(nil)).Elem()
}

func (o HourlyScheduleResponsePtrOutput) ToHourlyScheduleResponsePtrOutput() HourlyScheduleResponsePtrOutput {
	return o
}

func (o HourlyScheduleResponsePtrOutput) ToHourlyScheduleResponsePtrOutputWithContext(ctx context.Context) HourlyScheduleResponsePtrOutput {
	return o
}

func (o HourlyScheduleResponsePtrOutput) Elem() HourlyScheduleResponseOutput {
	return o.ApplyT(func(v *HourlyScheduleResponse) HourlyScheduleResponse {
		if v != nil {
			return *v
		}
		var ret HourlyScheduleResponse
		return ret
	}).(HourlyScheduleResponseOutput)
}

// Interval at which backup needs to be triggered. For hourly the value
//
//	can be 4/6/8/12
func (o HourlyScheduleResponsePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HourlyScheduleResponse) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// To specify duration of the backup window
func (o HourlyScheduleResponsePtrOutput) ScheduleWindowDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HourlyScheduleResponse) *int {
		if v == nil {
			return nil
		}
		return v.ScheduleWindowDuration
	}).(pulumi.IntPtrOutput)
}

// To specify start time of the backup window
func (o HourlyScheduleResponsePtrOutput) ScheduleWindowStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HourlyScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleWindowStartTime
	}).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific container.
type IaaSVMContainer struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'IaasVMContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// IaaSVMContainerInput is an input type that accepts IaaSVMContainerArgs and IaaSVMContainerOutput values.
// You can construct a concrete instance of `IaaSVMContainerInput` via:
//
//	IaaSVMContainerArgs{...}
type IaaSVMContainerInput interface {
	pulumi.Input

	ToIaaSVMContainerOutput() IaaSVMContainerOutput
	ToIaaSVMContainerOutputWithContext(context.Context) IaaSVMContainerOutput
}

// IaaS VM workload-specific container.
type IaaSVMContainerArgs struct {
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'IaasVMContainer'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId pulumi.StringPtrInput `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion pulumi.StringPtrInput `pulumi:"virtualMachineVersion"`
}

func (IaaSVMContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IaaSVMContainer)(nil)).Elem()
}

func (i IaaSVMContainerArgs) ToIaaSVMContainerOutput() IaaSVMContainerOutput {
	return i.ToIaaSVMContainerOutputWithContext(context.Background())
}

func (i IaaSVMContainerArgs) ToIaaSVMContainerOutputWithContext(ctx context.Context) IaaSVMContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IaaSVMContainerOutput)
}

func (i IaaSVMContainerArgs) ToIaaSVMContainerPtrOutput() IaaSVMContainerPtrOutput {
	return i.ToIaaSVMContainerPtrOutputWithContext(context.Background())
}

func (i IaaSVMContainerArgs) ToIaaSVMContainerPtrOutputWithContext(ctx context.Context) IaaSVMContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IaaSVMContainerOutput).ToIaaSVMContainerPtrOutputWithContext(ctx)
}

// IaaSVMContainerPtrInput is an input type that accepts IaaSVMContainerArgs, IaaSVMContainerPtr and IaaSVMContainerPtrOutput values.
// You can construct a concrete instance of `IaaSVMContainerPtrInput` via:
//
//	        IaaSVMContainerArgs{...}
//
//	or:
//
//	        nil
type IaaSVMContainerPtrInput interface {
	pulumi.Input

	ToIaaSVMContainerPtrOutput() IaaSVMContainerPtrOutput
	ToIaaSVMContainerPtrOutputWithContext(context.Context) IaaSVMContainerPtrOutput
}

type iaaSVMContainerPtrType IaaSVMContainerArgs

func IaaSVMContainerPtr(v *IaaSVMContainerArgs) IaaSVMContainerPtrInput {
	return (*iaaSVMContainerPtrType)(v)
}

func (*iaaSVMContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IaaSVMContainer)(nil)).Elem()
}

func (i *iaaSVMContainerPtrType) ToIaaSVMContainerPtrOutput() IaaSVMContainerPtrOutput {
	return i.ToIaaSVMContainerPtrOutputWithContext(context.Background())
}

func (i *iaaSVMContainerPtrType) ToIaaSVMContainerPtrOutputWithContext(ctx context.Context) IaaSVMContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IaaSVMContainerPtrOutput)
}

// IaaS VM workload-specific container.
type IaaSVMContainerOutput struct{ *pulumi.OutputState }

func (IaaSVMContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IaaSVMContainer)(nil)).Elem()
}

func (o IaaSVMContainerOutput) ToIaaSVMContainerOutput() IaaSVMContainerOutput {
	return o
}

func (o IaaSVMContainerOutput) ToIaaSVMContainerOutputWithContext(ctx context.Context) IaaSVMContainerOutput {
	return o
}

func (o IaaSVMContainerOutput) ToIaaSVMContainerPtrOutput() IaaSVMContainerPtrOutput {
	return o.ToIaaSVMContainerPtrOutputWithContext(context.Background())
}

func (o IaaSVMContainerOutput) ToIaaSVMContainerPtrOutputWithContext(ctx context.Context) IaaSVMContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IaaSVMContainer) *IaaSVMContainer {
		return &v
	}).(IaaSVMContainerPtrOutput)
}

// Type of backup management for the container.
func (o IaaSVMContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'IaasVMContainer'.
func (o IaaSVMContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v IaaSVMContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o IaaSVMContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o IaaSVMContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o IaaSVMContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o IaaSVMContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o IaaSVMContainerOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainer) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o IaaSVMContainerOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainer) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o IaaSVMContainerOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainer) *string { return v.VirtualMachineVersion }).(pulumi.StringPtrOutput)
}

type IaaSVMContainerPtrOutput struct{ *pulumi.OutputState }

func (IaaSVMContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IaaSVMContainer)(nil)).Elem()
}

func (o IaaSVMContainerPtrOutput) ToIaaSVMContainerPtrOutput() IaaSVMContainerPtrOutput {
	return o
}

func (o IaaSVMContainerPtrOutput) ToIaaSVMContainerPtrOutputWithContext(ctx context.Context) IaaSVMContainerPtrOutput {
	return o
}

func (o IaaSVMContainerPtrOutput) Elem() IaaSVMContainerOutput {
	return o.ApplyT(func(v *IaaSVMContainer) IaaSVMContainer {
		if v != nil {
			return *v
		}
		var ret IaaSVMContainer
		return ret
	}).(IaaSVMContainerOutput)
}

// Type of backup management for the container.
func (o IaaSVMContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'IaasVMContainer'.
func (o IaaSVMContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Friendly name of the container.
func (o IaaSVMContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o IaaSVMContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o IaaSVMContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o IaaSVMContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o IaaSVMContainerPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o IaaSVMContainerPtrOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineId
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o IaaSVMContainerPtrOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IaaSVMContainer) *string {
		if v == nil {
			return nil
		}
		return v.VirtualMachineVersion
	}).(pulumi.StringPtrOutput)
}

// IaaS VM workload-specific container.
type IaaSVMContainerResponse struct {
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'IaasVMContainer'.
	ContainerType string `pulumi:"containerType"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
	// Resource group name of Recovery Services Vault.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
	// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
	VirtualMachineVersion *string `pulumi:"virtualMachineVersion"`
}

// IaaS VM workload-specific container.
type IaaSVMContainerResponseOutput struct{ *pulumi.OutputState }

func (IaaSVMContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IaaSVMContainerResponse)(nil)).Elem()
}

func (o IaaSVMContainerResponseOutput) ToIaaSVMContainerResponseOutput() IaaSVMContainerResponseOutput {
	return o
}

func (o IaaSVMContainerResponseOutput) ToIaaSVMContainerResponseOutputWithContext(ctx context.Context) IaaSVMContainerResponseOutput {
	return o
}

// Type of backup management for the container.
func (o IaaSVMContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'IaasVMContainer'.
func (o IaaSVMContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Friendly name of the container.
func (o IaaSVMContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o IaaSVMContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Type of the protectable object associated with this container
func (o IaaSVMContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o IaaSVMContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// Resource group name of Recovery Services Vault.
func (o IaaSVMContainerResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
func (o IaaSVMContainerResponseOutput) VirtualMachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.VirtualMachineId }).(pulumi.StringPtrOutput)
}

// Specifies whether the container represents a Classic or an Azure Resource Manager VM.
func (o IaaSVMContainerResponseOutput) VirtualMachineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IaaSVMContainerResponse) *string { return v.VirtualMachineVersion }).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type IdentityData struct {
	// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
	Type string `pulumi:"type"`
	// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// IdentityDataInput is an input type that accepts IdentityDataArgs and IdentityDataOutput values.
// You can construct a concrete instance of `IdentityDataInput` via:
//
//	IdentityDataArgs{...}
type IdentityDataInput interface {
	pulumi.Input

	ToIdentityDataOutput() IdentityDataOutput
	ToIdentityDataOutputWithContext(context.Context) IdentityDataOutput
}

// Identity for the resource.
type IdentityDataArgs struct {
	// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
	Type pulumi.StringInput `pulumi:"type"`
	// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (IdentityDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityData)(nil)).Elem()
}

func (i IdentityDataArgs) ToIdentityDataOutput() IdentityDataOutput {
	return i.ToIdentityDataOutputWithContext(context.Background())
}

func (i IdentityDataArgs) ToIdentityDataOutputWithContext(ctx context.Context) IdentityDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDataOutput)
}

func (i IdentityDataArgs) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return i.ToIdentityDataPtrOutputWithContext(context.Background())
}

func (i IdentityDataArgs) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDataOutput).ToIdentityDataPtrOutputWithContext(ctx)
}

// IdentityDataPtrInput is an input type that accepts IdentityDataArgs, IdentityDataPtr and IdentityDataPtrOutput values.
// You can construct a concrete instance of `IdentityDataPtrInput` via:
//
//	        IdentityDataArgs{...}
//
//	or:
//
//	        nil
type IdentityDataPtrInput interface {
	pulumi.Input

	ToIdentityDataPtrOutput() IdentityDataPtrOutput
	ToIdentityDataPtrOutputWithContext(context.Context) IdentityDataPtrOutput
}

type identityDataPtrType IdentityDataArgs

func IdentityDataPtr(v *IdentityDataArgs) IdentityDataPtrInput {
	return (*identityDataPtrType)(v)
}

func (*identityDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityData)(nil)).Elem()
}

func (i *identityDataPtrType) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return i.ToIdentityDataPtrOutputWithContext(context.Background())
}

func (i *identityDataPtrType) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityDataPtrOutput)
}

// Identity for the resource.
type IdentityDataOutput struct{ *pulumi.OutputState }

func (IdentityDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityData)(nil)).Elem()
}

func (o IdentityDataOutput) ToIdentityDataOutput() IdentityDataOutput {
	return o
}

func (o IdentityDataOutput) ToIdentityDataOutputWithContext(ctx context.Context) IdentityDataOutput {
	return o
}

func (o IdentityDataOutput) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return o.ToIdentityDataPtrOutputWithContext(context.Background())
}

func (o IdentityDataOutput) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityData) *IdentityData {
		return &v
	}).(IdentityDataPtrOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o IdentityDataOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityData) string { return v.Type }).(pulumi.StringOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityDataOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityData) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type IdentityDataPtrOutput struct{ *pulumi.OutputState }

func (IdentityDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityData)(nil)).Elem()
}

func (o IdentityDataPtrOutput) ToIdentityDataPtrOutput() IdentityDataPtrOutput {
	return o
}

func (o IdentityDataPtrOutput) ToIdentityDataPtrOutputWithContext(ctx context.Context) IdentityDataPtrOutput {
	return o
}

func (o IdentityDataPtrOutput) Elem() IdentityDataOutput {
	return o.ApplyT(func(v *IdentityData) IdentityData {
		if v != nil {
			return *v
		}
		var ret IdentityData
		return ret
	}).(IdentityDataOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o IdentityDataPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityData) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityDataPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityData) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Identity for the resource.
type IdentityDataResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
	Type string `pulumi:"type"`
	// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]UserIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Identity for the resource.
type IdentityDataResponseOutput struct{ *pulumi.OutputState }

func (IdentityDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityDataResponse)(nil)).Elem()
}

func (o IdentityDataResponseOutput) ToIdentityDataResponseOutput() IdentityDataResponseOutput {
	return o
}

func (o IdentityDataResponseOutput) ToIdentityDataResponseOutputWithContext(ctx context.Context) IdentityDataResponseOutput {
	return o
}

// The principal ID of resource identity.
func (o IdentityDataResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDataResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityDataResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDataResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o IdentityDataResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityDataResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityDataResponseOutput) UserAssignedIdentities() UserIdentityResponseMapOutput {
	return o.ApplyT(func(v IdentityDataResponse) map[string]UserIdentityResponse { return v.UserAssignedIdentities }).(UserIdentityResponseMapOutput)
}

type IdentityDataResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityDataResponse)(nil)).Elem()
}

func (o IdentityDataResponsePtrOutput) ToIdentityDataResponsePtrOutput() IdentityDataResponsePtrOutput {
	return o
}

func (o IdentityDataResponsePtrOutput) ToIdentityDataResponsePtrOutputWithContext(ctx context.Context) IdentityDataResponsePtrOutput {
	return o
}

func (o IdentityDataResponsePtrOutput) Elem() IdentityDataResponseOutput {
	return o.ApplyT(func(v *IdentityDataResponse) IdentityDataResponse {
		if v != nil {
			return *v
		}
		var ret IdentityDataResponse
		return ret
	}).(IdentityDataResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityDataResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityDataResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
func (o IdentityDataResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityDataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o IdentityDataResponsePtrOutput) UserAssignedIdentities() UserIdentityResponseMapOutput {
	return o.ApplyT(func(v *IdentityDataResponse) map[string]UserIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserIdentityResponseMapOutput)
}

// Immutability Settings of vault
type ImmutabilitySettings struct {
	State *string `pulumi:"state"`
}

// ImmutabilitySettingsInput is an input type that accepts ImmutabilitySettingsArgs and ImmutabilitySettingsOutput values.
// You can construct a concrete instance of `ImmutabilitySettingsInput` via:
//
//	ImmutabilitySettingsArgs{...}
type ImmutabilitySettingsInput interface {
	pulumi.Input

	ToImmutabilitySettingsOutput() ImmutabilitySettingsOutput
	ToImmutabilitySettingsOutputWithContext(context.Context) ImmutabilitySettingsOutput
}

// Immutability Settings of vault
type ImmutabilitySettingsArgs struct {
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ImmutabilitySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilitySettings)(nil)).Elem()
}

func (i ImmutabilitySettingsArgs) ToImmutabilitySettingsOutput() ImmutabilitySettingsOutput {
	return i.ToImmutabilitySettingsOutputWithContext(context.Background())
}

func (i ImmutabilitySettingsArgs) ToImmutabilitySettingsOutputWithContext(ctx context.Context) ImmutabilitySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilitySettingsOutput)
}

func (i ImmutabilitySettingsArgs) ToImmutabilitySettingsPtrOutput() ImmutabilitySettingsPtrOutput {
	return i.ToImmutabilitySettingsPtrOutputWithContext(context.Background())
}

func (i ImmutabilitySettingsArgs) ToImmutabilitySettingsPtrOutputWithContext(ctx context.Context) ImmutabilitySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilitySettingsOutput).ToImmutabilitySettingsPtrOutputWithContext(ctx)
}

// ImmutabilitySettingsPtrInput is an input type that accepts ImmutabilitySettingsArgs, ImmutabilitySettingsPtr and ImmutabilitySettingsPtrOutput values.
// You can construct a concrete instance of `ImmutabilitySettingsPtrInput` via:
//
//	        ImmutabilitySettingsArgs{...}
//
//	or:
//
//	        nil
type ImmutabilitySettingsPtrInput interface {
	pulumi.Input

	ToImmutabilitySettingsPtrOutput() ImmutabilitySettingsPtrOutput
	ToImmutabilitySettingsPtrOutputWithContext(context.Context) ImmutabilitySettingsPtrOutput
}

type immutabilitySettingsPtrType ImmutabilitySettingsArgs

func ImmutabilitySettingsPtr(v *ImmutabilitySettingsArgs) ImmutabilitySettingsPtrInput {
	return (*immutabilitySettingsPtrType)(v)
}

func (*immutabilitySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImmutabilitySettings)(nil)).Elem()
}

func (i *immutabilitySettingsPtrType) ToImmutabilitySettingsPtrOutput() ImmutabilitySettingsPtrOutput {
	return i.ToImmutabilitySettingsPtrOutputWithContext(context.Background())
}

func (i *immutabilitySettingsPtrType) ToImmutabilitySettingsPtrOutputWithContext(ctx context.Context) ImmutabilitySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImmutabilitySettingsPtrOutput)
}

// Immutability Settings of vault
type ImmutabilitySettingsOutput struct{ *pulumi.OutputState }

func (ImmutabilitySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilitySettings)(nil)).Elem()
}

func (o ImmutabilitySettingsOutput) ToImmutabilitySettingsOutput() ImmutabilitySettingsOutput {
	return o
}

func (o ImmutabilitySettingsOutput) ToImmutabilitySettingsOutputWithContext(ctx context.Context) ImmutabilitySettingsOutput {
	return o
}

func (o ImmutabilitySettingsOutput) ToImmutabilitySettingsPtrOutput() ImmutabilitySettingsPtrOutput {
	return o.ToImmutabilitySettingsPtrOutputWithContext(context.Background())
}

func (o ImmutabilitySettingsOutput) ToImmutabilitySettingsPtrOutputWithContext(ctx context.Context) ImmutabilitySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImmutabilitySettings) *ImmutabilitySettings {
		return &v
	}).(ImmutabilitySettingsPtrOutput)
}

func (o ImmutabilitySettingsOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImmutabilitySettings) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ImmutabilitySettingsPtrOutput struct{ *pulumi.OutputState }

func (ImmutabilitySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImmutabilitySettings)(nil)).Elem()
}

func (o ImmutabilitySettingsPtrOutput) ToImmutabilitySettingsPtrOutput() ImmutabilitySettingsPtrOutput {
	return o
}

func (o ImmutabilitySettingsPtrOutput) ToImmutabilitySettingsPtrOutputWithContext(ctx context.Context) ImmutabilitySettingsPtrOutput {
	return o
}

func (o ImmutabilitySettingsPtrOutput) Elem() ImmutabilitySettingsOutput {
	return o.ApplyT(func(v *ImmutabilitySettings) ImmutabilitySettings {
		if v != nil {
			return *v
		}
		var ret ImmutabilitySettings
		return ret
	}).(ImmutabilitySettingsOutput)
}

func (o ImmutabilitySettingsPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImmutabilitySettings) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Immutability Settings of vault
type ImmutabilitySettingsResponse struct {
	State *string `pulumi:"state"`
}

// Immutability Settings of vault
type ImmutabilitySettingsResponseOutput struct{ *pulumi.OutputState }

func (ImmutabilitySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImmutabilitySettingsResponse)(nil)).Elem()
}

func (o ImmutabilitySettingsResponseOutput) ToImmutabilitySettingsResponseOutput() ImmutabilitySettingsResponseOutput {
	return o
}

func (o ImmutabilitySettingsResponseOutput) ToImmutabilitySettingsResponseOutputWithContext(ctx context.Context) ImmutabilitySettingsResponseOutput {
	return o
}

func (o ImmutabilitySettingsResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImmutabilitySettingsResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ImmutabilitySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ImmutabilitySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImmutabilitySettingsResponse)(nil)).Elem()
}

func (o ImmutabilitySettingsResponsePtrOutput) ToImmutabilitySettingsResponsePtrOutput() ImmutabilitySettingsResponsePtrOutput {
	return o
}

func (o ImmutabilitySettingsResponsePtrOutput) ToImmutabilitySettingsResponsePtrOutputWithContext(ctx context.Context) ImmutabilitySettingsResponsePtrOutput {
	return o
}

func (o ImmutabilitySettingsResponsePtrOutput) Elem() ImmutabilitySettingsResponseOutput {
	return o.ApplyT(func(v *ImmutabilitySettingsResponse) ImmutabilitySettingsResponse {
		if v != nil {
			return *v
		}
		var ret ImmutabilitySettingsResponse
		return ret
	}).(ImmutabilitySettingsResponseOutput)
}

func (o ImmutabilitySettingsResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImmutabilitySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Details about inquired protectable items under a given container.
type InquiryInfo struct {
	// Inquiry Details which will have workload specific details.
	// For e.g. - For SQL and oracle this will contain different details.
	InquiryDetails []WorkloadInquiryDetails `pulumi:"inquiryDetails"`
	// Inquiry Status for this container such as
	// InProgress | Failed | Succeeded
	Status *string `pulumi:"status"`
}

// InquiryInfoInput is an input type that accepts InquiryInfoArgs and InquiryInfoOutput values.
// You can construct a concrete instance of `InquiryInfoInput` via:
//
//	InquiryInfoArgs{...}
type InquiryInfoInput interface {
	pulumi.Input

	ToInquiryInfoOutput() InquiryInfoOutput
	ToInquiryInfoOutputWithContext(context.Context) InquiryInfoOutput
}

// Details about inquired protectable items under a given container.
type InquiryInfoArgs struct {
	// Inquiry Details which will have workload specific details.
	// For e.g. - For SQL and oracle this will contain different details.
	InquiryDetails WorkloadInquiryDetailsArrayInput `pulumi:"inquiryDetails"`
	// Inquiry Status for this container such as
	// InProgress | Failed | Succeeded
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (InquiryInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InquiryInfo)(nil)).Elem()
}

func (i InquiryInfoArgs) ToInquiryInfoOutput() InquiryInfoOutput {
	return i.ToInquiryInfoOutputWithContext(context.Background())
}

func (i InquiryInfoArgs) ToInquiryInfoOutputWithContext(ctx context.Context) InquiryInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryInfoOutput)
}

func (i InquiryInfoArgs) ToInquiryInfoPtrOutput() InquiryInfoPtrOutput {
	return i.ToInquiryInfoPtrOutputWithContext(context.Background())
}

func (i InquiryInfoArgs) ToInquiryInfoPtrOutputWithContext(ctx context.Context) InquiryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryInfoOutput).ToInquiryInfoPtrOutputWithContext(ctx)
}

// InquiryInfoPtrInput is an input type that accepts InquiryInfoArgs, InquiryInfoPtr and InquiryInfoPtrOutput values.
// You can construct a concrete instance of `InquiryInfoPtrInput` via:
//
//	        InquiryInfoArgs{...}
//
//	or:
//
//	        nil
type InquiryInfoPtrInput interface {
	pulumi.Input

	ToInquiryInfoPtrOutput() InquiryInfoPtrOutput
	ToInquiryInfoPtrOutputWithContext(context.Context) InquiryInfoPtrOutput
}

type inquiryInfoPtrType InquiryInfoArgs

func InquiryInfoPtr(v *InquiryInfoArgs) InquiryInfoPtrInput {
	return (*inquiryInfoPtrType)(v)
}

func (*inquiryInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InquiryInfo)(nil)).Elem()
}

func (i *inquiryInfoPtrType) ToInquiryInfoPtrOutput() InquiryInfoPtrOutput {
	return i.ToInquiryInfoPtrOutputWithContext(context.Background())
}

func (i *inquiryInfoPtrType) ToInquiryInfoPtrOutputWithContext(ctx context.Context) InquiryInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryInfoPtrOutput)
}

// Details about inquired protectable items under a given container.
type InquiryInfoOutput struct{ *pulumi.OutputState }

func (InquiryInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InquiryInfo)(nil)).Elem()
}

func (o InquiryInfoOutput) ToInquiryInfoOutput() InquiryInfoOutput {
	return o
}

func (o InquiryInfoOutput) ToInquiryInfoOutputWithContext(ctx context.Context) InquiryInfoOutput {
	return o
}

func (o InquiryInfoOutput) ToInquiryInfoPtrOutput() InquiryInfoPtrOutput {
	return o.ToInquiryInfoPtrOutputWithContext(context.Background())
}

func (o InquiryInfoOutput) ToInquiryInfoPtrOutputWithContext(ctx context.Context) InquiryInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InquiryInfo) *InquiryInfo {
		return &v
	}).(InquiryInfoPtrOutput)
}

// Inquiry Details which will have workload specific details.
// For e.g. - For SQL and oracle this will contain different details.
func (o InquiryInfoOutput) InquiryDetails() WorkloadInquiryDetailsArrayOutput {
	return o.ApplyT(func(v InquiryInfo) []WorkloadInquiryDetails { return v.InquiryDetails }).(WorkloadInquiryDetailsArrayOutput)
}

// Inquiry Status for this container such as
// InProgress | Failed | Succeeded
func (o InquiryInfoOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InquiryInfo) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type InquiryInfoPtrOutput struct{ *pulumi.OutputState }

func (InquiryInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InquiryInfo)(nil)).Elem()
}

func (o InquiryInfoPtrOutput) ToInquiryInfoPtrOutput() InquiryInfoPtrOutput {
	return o
}

func (o InquiryInfoPtrOutput) ToInquiryInfoPtrOutputWithContext(ctx context.Context) InquiryInfoPtrOutput {
	return o
}

func (o InquiryInfoPtrOutput) Elem() InquiryInfoOutput {
	return o.ApplyT(func(v *InquiryInfo) InquiryInfo {
		if v != nil {
			return *v
		}
		var ret InquiryInfo
		return ret
	}).(InquiryInfoOutput)
}

// Inquiry Details which will have workload specific details.
// For e.g. - For SQL and oracle this will contain different details.
func (o InquiryInfoPtrOutput) InquiryDetails() WorkloadInquiryDetailsArrayOutput {
	return o.ApplyT(func(v *InquiryInfo) []WorkloadInquiryDetails {
		if v == nil {
			return nil
		}
		return v.InquiryDetails
	}).(WorkloadInquiryDetailsArrayOutput)
}

// Inquiry Status for this container such as
// InProgress | Failed | Succeeded
func (o InquiryInfoPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InquiryInfo) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Details about inquired protectable items under a given container.
type InquiryInfoResponse struct {
	// Error Details if the Status is non-success.
	ErrorDetail *ErrorDetailResponse `pulumi:"errorDetail"`
	// Inquiry Details which will have workload specific details.
	// For e.g. - For SQL and oracle this will contain different details.
	InquiryDetails []WorkloadInquiryDetailsResponse `pulumi:"inquiryDetails"`
	// Inquiry Status for this container such as
	// InProgress | Failed | Succeeded
	Status *string `pulumi:"status"`
}

// Details about inquired protectable items under a given container.
type InquiryInfoResponseOutput struct{ *pulumi.OutputState }

func (InquiryInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InquiryInfoResponse)(nil)).Elem()
}

func (o InquiryInfoResponseOutput) ToInquiryInfoResponseOutput() InquiryInfoResponseOutput {
	return o
}

func (o InquiryInfoResponseOutput) ToInquiryInfoResponseOutputWithContext(ctx context.Context) InquiryInfoResponseOutput {
	return o
}

// Error Details if the Status is non-success.
func (o InquiryInfoResponseOutput) ErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v InquiryInfoResponse) *ErrorDetailResponse { return v.ErrorDetail }).(ErrorDetailResponsePtrOutput)
}

// Inquiry Details which will have workload specific details.
// For e.g. - For SQL and oracle this will contain different details.
func (o InquiryInfoResponseOutput) InquiryDetails() WorkloadInquiryDetailsResponseArrayOutput {
	return o.ApplyT(func(v InquiryInfoResponse) []WorkloadInquiryDetailsResponse { return v.InquiryDetails }).(WorkloadInquiryDetailsResponseArrayOutput)
}

// Inquiry Status for this container such as
// InProgress | Failed | Succeeded
func (o InquiryInfoResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InquiryInfoResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type InquiryInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (InquiryInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InquiryInfoResponse)(nil)).Elem()
}

func (o InquiryInfoResponsePtrOutput) ToInquiryInfoResponsePtrOutput() InquiryInfoResponsePtrOutput {
	return o
}

func (o InquiryInfoResponsePtrOutput) ToInquiryInfoResponsePtrOutputWithContext(ctx context.Context) InquiryInfoResponsePtrOutput {
	return o
}

func (o InquiryInfoResponsePtrOutput) Elem() InquiryInfoResponseOutput {
	return o.ApplyT(func(v *InquiryInfoResponse) InquiryInfoResponse {
		if v != nil {
			return *v
		}
		var ret InquiryInfoResponse
		return ret
	}).(InquiryInfoResponseOutput)
}

// Error Details if the Status is non-success.
func (o InquiryInfoResponsePtrOutput) ErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v *InquiryInfoResponse) *ErrorDetailResponse {
		if v == nil {
			return nil
		}
		return v.ErrorDetail
	}).(ErrorDetailResponsePtrOutput)
}

// Inquiry Details which will have workload specific details.
// For e.g. - For SQL and oracle this will contain different details.
func (o InquiryInfoResponsePtrOutput) InquiryDetails() WorkloadInquiryDetailsResponseArrayOutput {
	return o.ApplyT(func(v *InquiryInfoResponse) []WorkloadInquiryDetailsResponse {
		if v == nil {
			return nil
		}
		return v.InquiryDetails
	}).(WorkloadInquiryDetailsResponseArrayOutput)
}

// Inquiry Status for this container such as
// InProgress | Failed | Succeeded
func (o InquiryInfoResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InquiryInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Validation for inquired protectable items under a given container.
type InquiryValidation struct {
	// Status for the Inquiry Validation.
	Status *string `pulumi:"status"`
}

// InquiryValidationInput is an input type that accepts InquiryValidationArgs and InquiryValidationOutput values.
// You can construct a concrete instance of `InquiryValidationInput` via:
//
//	InquiryValidationArgs{...}
type InquiryValidationInput interface {
	pulumi.Input

	ToInquiryValidationOutput() InquiryValidationOutput
	ToInquiryValidationOutputWithContext(context.Context) InquiryValidationOutput
}

// Validation for inquired protectable items under a given container.
type InquiryValidationArgs struct {
	// Status for the Inquiry Validation.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (InquiryValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InquiryValidation)(nil)).Elem()
}

func (i InquiryValidationArgs) ToInquiryValidationOutput() InquiryValidationOutput {
	return i.ToInquiryValidationOutputWithContext(context.Background())
}

func (i InquiryValidationArgs) ToInquiryValidationOutputWithContext(ctx context.Context) InquiryValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryValidationOutput)
}

func (i InquiryValidationArgs) ToInquiryValidationPtrOutput() InquiryValidationPtrOutput {
	return i.ToInquiryValidationPtrOutputWithContext(context.Background())
}

func (i InquiryValidationArgs) ToInquiryValidationPtrOutputWithContext(ctx context.Context) InquiryValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryValidationOutput).ToInquiryValidationPtrOutputWithContext(ctx)
}

// InquiryValidationPtrInput is an input type that accepts InquiryValidationArgs, InquiryValidationPtr and InquiryValidationPtrOutput values.
// You can construct a concrete instance of `InquiryValidationPtrInput` via:
//
//	        InquiryValidationArgs{...}
//
//	or:
//
//	        nil
type InquiryValidationPtrInput interface {
	pulumi.Input

	ToInquiryValidationPtrOutput() InquiryValidationPtrOutput
	ToInquiryValidationPtrOutputWithContext(context.Context) InquiryValidationPtrOutput
}

type inquiryValidationPtrType InquiryValidationArgs

func InquiryValidationPtr(v *InquiryValidationArgs) InquiryValidationPtrInput {
	return (*inquiryValidationPtrType)(v)
}

func (*inquiryValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InquiryValidation)(nil)).Elem()
}

func (i *inquiryValidationPtrType) ToInquiryValidationPtrOutput() InquiryValidationPtrOutput {
	return i.ToInquiryValidationPtrOutputWithContext(context.Background())
}

func (i *inquiryValidationPtrType) ToInquiryValidationPtrOutputWithContext(ctx context.Context) InquiryValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InquiryValidationPtrOutput)
}

// Validation for inquired protectable items under a given container.
type InquiryValidationOutput struct{ *pulumi.OutputState }

func (InquiryValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InquiryValidation)(nil)).Elem()
}

func (o InquiryValidationOutput) ToInquiryValidationOutput() InquiryValidationOutput {
	return o
}

func (o InquiryValidationOutput) ToInquiryValidationOutputWithContext(ctx context.Context) InquiryValidationOutput {
	return o
}

func (o InquiryValidationOutput) ToInquiryValidationPtrOutput() InquiryValidationPtrOutput {
	return o.ToInquiryValidationPtrOutputWithContext(context.Background())
}

func (o InquiryValidationOutput) ToInquiryValidationPtrOutputWithContext(ctx context.Context) InquiryValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InquiryValidation) *InquiryValidation {
		return &v
	}).(InquiryValidationPtrOutput)
}

// Status for the Inquiry Validation.
func (o InquiryValidationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InquiryValidation) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type InquiryValidationPtrOutput struct{ *pulumi.OutputState }

func (InquiryValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InquiryValidation)(nil)).Elem()
}

func (o InquiryValidationPtrOutput) ToInquiryValidationPtrOutput() InquiryValidationPtrOutput {
	return o
}

func (o InquiryValidationPtrOutput) ToInquiryValidationPtrOutputWithContext(ctx context.Context) InquiryValidationPtrOutput {
	return o
}

func (o InquiryValidationPtrOutput) Elem() InquiryValidationOutput {
	return o.ApplyT(func(v *InquiryValidation) InquiryValidation {
		if v != nil {
			return *v
		}
		var ret InquiryValidation
		return ret
	}).(InquiryValidationOutput)
}

// Status for the Inquiry Validation.
func (o InquiryValidationPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InquiryValidation) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Validation for inquired protectable items under a given container.
type InquiryValidationResponse struct {
	// Error Additional Detail in case the status is non-success.
	AdditionalDetail string `pulumi:"additionalDetail"`
	// Error Detail in case the status is non-success.
	ErrorDetail *ErrorDetailResponse `pulumi:"errorDetail"`
	// Dictionary to store the count of ProtectableItems with key POType.
	ProtectableItemCount interface{} `pulumi:"protectableItemCount"`
	// Status for the Inquiry Validation.
	Status *string `pulumi:"status"`
}

// Validation for inquired protectable items under a given container.
type InquiryValidationResponseOutput struct{ *pulumi.OutputState }

func (InquiryValidationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InquiryValidationResponse)(nil)).Elem()
}

func (o InquiryValidationResponseOutput) ToInquiryValidationResponseOutput() InquiryValidationResponseOutput {
	return o
}

func (o InquiryValidationResponseOutput) ToInquiryValidationResponseOutputWithContext(ctx context.Context) InquiryValidationResponseOutput {
	return o
}

// Error Additional Detail in case the status is non-success.
func (o InquiryValidationResponseOutput) AdditionalDetail() pulumi.StringOutput {
	return o.ApplyT(func(v InquiryValidationResponse) string { return v.AdditionalDetail }).(pulumi.StringOutput)
}

// Error Detail in case the status is non-success.
func (o InquiryValidationResponseOutput) ErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v InquiryValidationResponse) *ErrorDetailResponse { return v.ErrorDetail }).(ErrorDetailResponsePtrOutput)
}

// Dictionary to store the count of ProtectableItems with key POType.
func (o InquiryValidationResponseOutput) ProtectableItemCount() pulumi.AnyOutput {
	return o.ApplyT(func(v InquiryValidationResponse) interface{} { return v.ProtectableItemCount }).(pulumi.AnyOutput)
}

// Status for the Inquiry Validation.
func (o InquiryValidationResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InquiryValidationResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type InquiryValidationResponsePtrOutput struct{ *pulumi.OutputState }

func (InquiryValidationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InquiryValidationResponse)(nil)).Elem()
}

func (o InquiryValidationResponsePtrOutput) ToInquiryValidationResponsePtrOutput() InquiryValidationResponsePtrOutput {
	return o
}

func (o InquiryValidationResponsePtrOutput) ToInquiryValidationResponsePtrOutputWithContext(ctx context.Context) InquiryValidationResponsePtrOutput {
	return o
}

func (o InquiryValidationResponsePtrOutput) Elem() InquiryValidationResponseOutput {
	return o.ApplyT(func(v *InquiryValidationResponse) InquiryValidationResponse {
		if v != nil {
			return *v
		}
		var ret InquiryValidationResponse
		return ret
	}).(InquiryValidationResponseOutput)
}

// Error Additional Detail in case the status is non-success.
func (o InquiryValidationResponsePtrOutput) AdditionalDetail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InquiryValidationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdditionalDetail
	}).(pulumi.StringPtrOutput)
}

// Error Detail in case the status is non-success.
func (o InquiryValidationResponsePtrOutput) ErrorDetail() ErrorDetailResponsePtrOutput {
	return o.ApplyT(func(v *InquiryValidationResponse) *ErrorDetailResponse {
		if v == nil {
			return nil
		}
		return v.ErrorDetail
	}).(ErrorDetailResponsePtrOutput)
}

// Dictionary to store the count of ProtectableItems with key POType.
func (o InquiryValidationResponsePtrOutput) ProtectableItemCount() pulumi.AnyOutput {
	return o.ApplyT(func(v *InquiryValidationResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.ProtectableItemCount
	}).(pulumi.AnyOutput)
}

// Status for the Inquiry Validation.
func (o InquiryValidationResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InquiryValidationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type InstantRPAdditionalDetails struct {
	AzureBackupRGNamePrefix *string `pulumi:"azureBackupRGNamePrefix"`
	AzureBackupRGNameSuffix *string `pulumi:"azureBackupRGNameSuffix"`
}

// InstantRPAdditionalDetailsInput is an input type that accepts InstantRPAdditionalDetailsArgs and InstantRPAdditionalDetailsOutput values.
// You can construct a concrete instance of `InstantRPAdditionalDetailsInput` via:
//
//	InstantRPAdditionalDetailsArgs{...}
type InstantRPAdditionalDetailsInput interface {
	pulumi.Input

	ToInstantRPAdditionalDetailsOutput() InstantRPAdditionalDetailsOutput
	ToInstantRPAdditionalDetailsOutputWithContext(context.Context) InstantRPAdditionalDetailsOutput
}

type InstantRPAdditionalDetailsArgs struct {
	AzureBackupRGNamePrefix pulumi.StringPtrInput `pulumi:"azureBackupRGNamePrefix"`
	AzureBackupRGNameSuffix pulumi.StringPtrInput `pulumi:"azureBackupRGNameSuffix"`
}

func (InstantRPAdditionalDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstantRPAdditionalDetails)(nil)).Elem()
}

func (i InstantRPAdditionalDetailsArgs) ToInstantRPAdditionalDetailsOutput() InstantRPAdditionalDetailsOutput {
	return i.ToInstantRPAdditionalDetailsOutputWithContext(context.Background())
}

func (i InstantRPAdditionalDetailsArgs) ToInstantRPAdditionalDetailsOutputWithContext(ctx context.Context) InstantRPAdditionalDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstantRPAdditionalDetailsOutput)
}

func (i InstantRPAdditionalDetailsArgs) ToInstantRPAdditionalDetailsPtrOutput() InstantRPAdditionalDetailsPtrOutput {
	return i.ToInstantRPAdditionalDetailsPtrOutputWithContext(context.Background())
}

func (i InstantRPAdditionalDetailsArgs) ToInstantRPAdditionalDetailsPtrOutputWithContext(ctx context.Context) InstantRPAdditionalDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstantRPAdditionalDetailsOutput).ToInstantRPAdditionalDetailsPtrOutputWithContext(ctx)
}

// InstantRPAdditionalDetailsPtrInput is an input type that accepts InstantRPAdditionalDetailsArgs, InstantRPAdditionalDetailsPtr and InstantRPAdditionalDetailsPtrOutput values.
// You can construct a concrete instance of `InstantRPAdditionalDetailsPtrInput` via:
//
//	        InstantRPAdditionalDetailsArgs{...}
//
//	or:
//
//	        nil
type InstantRPAdditionalDetailsPtrInput interface {
	pulumi.Input

	ToInstantRPAdditionalDetailsPtrOutput() InstantRPAdditionalDetailsPtrOutput
	ToInstantRPAdditionalDetailsPtrOutputWithContext(context.Context) InstantRPAdditionalDetailsPtrOutput
}

type instantRPAdditionalDetailsPtrType InstantRPAdditionalDetailsArgs

func InstantRPAdditionalDetailsPtr(v *InstantRPAdditionalDetailsArgs) InstantRPAdditionalDetailsPtrInput {
	return (*instantRPAdditionalDetailsPtrType)(v)
}

func (*instantRPAdditionalDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstantRPAdditionalDetails)(nil)).Elem()
}

func (i *instantRPAdditionalDetailsPtrType) ToInstantRPAdditionalDetailsPtrOutput() InstantRPAdditionalDetailsPtrOutput {
	return i.ToInstantRPAdditionalDetailsPtrOutputWithContext(context.Background())
}

func (i *instantRPAdditionalDetailsPtrType) ToInstantRPAdditionalDetailsPtrOutputWithContext(ctx context.Context) InstantRPAdditionalDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstantRPAdditionalDetailsPtrOutput)
}

type InstantRPAdditionalDetailsOutput struct{ *pulumi.OutputState }

func (InstantRPAdditionalDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstantRPAdditionalDetails)(nil)).Elem()
}

func (o InstantRPAdditionalDetailsOutput) ToInstantRPAdditionalDetailsOutput() InstantRPAdditionalDetailsOutput {
	return o
}

func (o InstantRPAdditionalDetailsOutput) ToInstantRPAdditionalDetailsOutputWithContext(ctx context.Context) InstantRPAdditionalDetailsOutput {
	return o
}

func (o InstantRPAdditionalDetailsOutput) ToInstantRPAdditionalDetailsPtrOutput() InstantRPAdditionalDetailsPtrOutput {
	return o.ToInstantRPAdditionalDetailsPtrOutputWithContext(context.Background())
}

func (o InstantRPAdditionalDetailsOutput) ToInstantRPAdditionalDetailsPtrOutputWithContext(ctx context.Context) InstantRPAdditionalDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstantRPAdditionalDetails) *InstantRPAdditionalDetails {
		return &v
	}).(InstantRPAdditionalDetailsPtrOutput)
}

func (o InstantRPAdditionalDetailsOutput) AzureBackupRGNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstantRPAdditionalDetails) *string { return v.AzureBackupRGNamePrefix }).(pulumi.StringPtrOutput)
}

func (o InstantRPAdditionalDetailsOutput) AzureBackupRGNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstantRPAdditionalDetails) *string { return v.AzureBackupRGNameSuffix }).(pulumi.StringPtrOutput)
}

type InstantRPAdditionalDetailsPtrOutput struct{ *pulumi.OutputState }

func (InstantRPAdditionalDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstantRPAdditionalDetails)(nil)).Elem()
}

func (o InstantRPAdditionalDetailsPtrOutput) ToInstantRPAdditionalDetailsPtrOutput() InstantRPAdditionalDetailsPtrOutput {
	return o
}

func (o InstantRPAdditionalDetailsPtrOutput) ToInstantRPAdditionalDetailsPtrOutputWithContext(ctx context.Context) InstantRPAdditionalDetailsPtrOutput {
	return o
}

func (o InstantRPAdditionalDetailsPtrOutput) Elem() InstantRPAdditionalDetailsOutput {
	return o.ApplyT(func(v *InstantRPAdditionalDetails) InstantRPAdditionalDetails {
		if v != nil {
			return *v
		}
		var ret InstantRPAdditionalDetails
		return ret
	}).(InstantRPAdditionalDetailsOutput)
}

func (o InstantRPAdditionalDetailsPtrOutput) AzureBackupRGNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstantRPAdditionalDetails) *string {
		if v == nil {
			return nil
		}
		return v.AzureBackupRGNamePrefix
	}).(pulumi.StringPtrOutput)
}

func (o InstantRPAdditionalDetailsPtrOutput) AzureBackupRGNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstantRPAdditionalDetails) *string {
		if v == nil {
			return nil
		}
		return v.AzureBackupRGNameSuffix
	}).(pulumi.StringPtrOutput)
}

type InstantRPAdditionalDetailsResponse struct {
	AzureBackupRGNamePrefix *string `pulumi:"azureBackupRGNamePrefix"`
	AzureBackupRGNameSuffix *string `pulumi:"azureBackupRGNameSuffix"`
}

type InstantRPAdditionalDetailsResponseOutput struct{ *pulumi.OutputState }

func (InstantRPAdditionalDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstantRPAdditionalDetailsResponse)(nil)).Elem()
}

func (o InstantRPAdditionalDetailsResponseOutput) ToInstantRPAdditionalDetailsResponseOutput() InstantRPAdditionalDetailsResponseOutput {
	return o
}

func (o InstantRPAdditionalDetailsResponseOutput) ToInstantRPAdditionalDetailsResponseOutputWithContext(ctx context.Context) InstantRPAdditionalDetailsResponseOutput {
	return o
}

func (o InstantRPAdditionalDetailsResponseOutput) AzureBackupRGNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstantRPAdditionalDetailsResponse) *string { return v.AzureBackupRGNamePrefix }).(pulumi.StringPtrOutput)
}

func (o InstantRPAdditionalDetailsResponseOutput) AzureBackupRGNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstantRPAdditionalDetailsResponse) *string { return v.AzureBackupRGNameSuffix }).(pulumi.StringPtrOutput)
}

type InstantRPAdditionalDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (InstantRPAdditionalDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstantRPAdditionalDetailsResponse)(nil)).Elem()
}

func (o InstantRPAdditionalDetailsResponsePtrOutput) ToInstantRPAdditionalDetailsResponsePtrOutput() InstantRPAdditionalDetailsResponsePtrOutput {
	return o
}

func (o InstantRPAdditionalDetailsResponsePtrOutput) ToInstantRPAdditionalDetailsResponsePtrOutputWithContext(ctx context.Context) InstantRPAdditionalDetailsResponsePtrOutput {
	return o
}

func (o InstantRPAdditionalDetailsResponsePtrOutput) Elem() InstantRPAdditionalDetailsResponseOutput {
	return o.ApplyT(func(v *InstantRPAdditionalDetailsResponse) InstantRPAdditionalDetailsResponse {
		if v != nil {
			return *v
		}
		var ret InstantRPAdditionalDetailsResponse
		return ret
	}).(InstantRPAdditionalDetailsResponseOutput)
}

func (o InstantRPAdditionalDetailsResponsePtrOutput) AzureBackupRGNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstantRPAdditionalDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AzureBackupRGNamePrefix
	}).(pulumi.StringPtrOutput)
}

func (o InstantRPAdditionalDetailsResponsePtrOutput) AzureBackupRGNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstantRPAdditionalDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AzureBackupRGNameSuffix
	}).(pulumi.StringPtrOutput)
}

// KPI Resource Health Details
type KPIResourceHealthDetails struct {
	// Resource Health Status
	ResourceHealthStatus *string `pulumi:"resourceHealthStatus"`
}

// KPIResourceHealthDetailsInput is an input type that accepts KPIResourceHealthDetailsArgs and KPIResourceHealthDetailsOutput values.
// You can construct a concrete instance of `KPIResourceHealthDetailsInput` via:
//
//	KPIResourceHealthDetailsArgs{...}
type KPIResourceHealthDetailsInput interface {
	pulumi.Input

	ToKPIResourceHealthDetailsOutput() KPIResourceHealthDetailsOutput
	ToKPIResourceHealthDetailsOutputWithContext(context.Context) KPIResourceHealthDetailsOutput
}

// KPI Resource Health Details
type KPIResourceHealthDetailsArgs struct {
	// Resource Health Status
	ResourceHealthStatus pulumi.StringPtrInput `pulumi:"resourceHealthStatus"`
}

func (KPIResourceHealthDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KPIResourceHealthDetails)(nil)).Elem()
}

func (i KPIResourceHealthDetailsArgs) ToKPIResourceHealthDetailsOutput() KPIResourceHealthDetailsOutput {
	return i.ToKPIResourceHealthDetailsOutputWithContext(context.Background())
}

func (i KPIResourceHealthDetailsArgs) ToKPIResourceHealthDetailsOutputWithContext(ctx context.Context) KPIResourceHealthDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KPIResourceHealthDetailsOutput)
}

// KPIResourceHealthDetailsMapInput is an input type that accepts KPIResourceHealthDetailsMap and KPIResourceHealthDetailsMapOutput values.
// You can construct a concrete instance of `KPIResourceHealthDetailsMapInput` via:
//
//	KPIResourceHealthDetailsMap{ "key": KPIResourceHealthDetailsArgs{...} }
type KPIResourceHealthDetailsMapInput interface {
	pulumi.Input

	ToKPIResourceHealthDetailsMapOutput() KPIResourceHealthDetailsMapOutput
	ToKPIResourceHealthDetailsMapOutputWithContext(context.Context) KPIResourceHealthDetailsMapOutput
}

type KPIResourceHealthDetailsMap map[string]KPIResourceHealthDetailsInput

func (KPIResourceHealthDetailsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]KPIResourceHealthDetails)(nil)).Elem()
}

func (i KPIResourceHealthDetailsMap) ToKPIResourceHealthDetailsMapOutput() KPIResourceHealthDetailsMapOutput {
	return i.ToKPIResourceHealthDetailsMapOutputWithContext(context.Background())
}

func (i KPIResourceHealthDetailsMap) ToKPIResourceHealthDetailsMapOutputWithContext(ctx context.Context) KPIResourceHealthDetailsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KPIResourceHealthDetailsMapOutput)
}

// KPI Resource Health Details
type KPIResourceHealthDetailsOutput struct{ *pulumi.OutputState }

func (KPIResourceHealthDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KPIResourceHealthDetails)(nil)).Elem()
}

func (o KPIResourceHealthDetailsOutput) ToKPIResourceHealthDetailsOutput() KPIResourceHealthDetailsOutput {
	return o
}

func (o KPIResourceHealthDetailsOutput) ToKPIResourceHealthDetailsOutputWithContext(ctx context.Context) KPIResourceHealthDetailsOutput {
	return o
}

// Resource Health Status
func (o KPIResourceHealthDetailsOutput) ResourceHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KPIResourceHealthDetails) *string { return v.ResourceHealthStatus }).(pulumi.StringPtrOutput)
}

type KPIResourceHealthDetailsMapOutput struct{ *pulumi.OutputState }

func (KPIResourceHealthDetailsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]KPIResourceHealthDetails)(nil)).Elem()
}

func (o KPIResourceHealthDetailsMapOutput) ToKPIResourceHealthDetailsMapOutput() KPIResourceHealthDetailsMapOutput {
	return o
}

func (o KPIResourceHealthDetailsMapOutput) ToKPIResourceHealthDetailsMapOutputWithContext(ctx context.Context) KPIResourceHealthDetailsMapOutput {
	return o
}

func (o KPIResourceHealthDetailsMapOutput) MapIndex(k pulumi.StringInput) KPIResourceHealthDetailsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) KPIResourceHealthDetails {
		return vs[0].(map[string]KPIResourceHealthDetails)[vs[1].(string)]
	}).(KPIResourceHealthDetailsOutput)
}

// KPI Resource Health Details
type KPIResourceHealthDetailsResponse struct {
	// Resource Health Status
	ResourceHealthDetails []ResourceHealthDetailsResponse `pulumi:"resourceHealthDetails"`
	// Resource Health Status
	ResourceHealthStatus *string `pulumi:"resourceHealthStatus"`
}

// KPI Resource Health Details
type KPIResourceHealthDetailsResponseOutput struct{ *pulumi.OutputState }

func (KPIResourceHealthDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KPIResourceHealthDetailsResponse)(nil)).Elem()
}

func (o KPIResourceHealthDetailsResponseOutput) ToKPIResourceHealthDetailsResponseOutput() KPIResourceHealthDetailsResponseOutput {
	return o
}

func (o KPIResourceHealthDetailsResponseOutput) ToKPIResourceHealthDetailsResponseOutputWithContext(ctx context.Context) KPIResourceHealthDetailsResponseOutput {
	return o
}

// Resource Health Status
func (o KPIResourceHealthDetailsResponseOutput) ResourceHealthDetails() ResourceHealthDetailsResponseArrayOutput {
	return o.ApplyT(func(v KPIResourceHealthDetailsResponse) []ResourceHealthDetailsResponse {
		return v.ResourceHealthDetails
	}).(ResourceHealthDetailsResponseArrayOutput)
}

// Resource Health Status
func (o KPIResourceHealthDetailsResponseOutput) ResourceHealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KPIResourceHealthDetailsResponse) *string { return v.ResourceHealthStatus }).(pulumi.StringPtrOutput)
}

type KPIResourceHealthDetailsResponseMapOutput struct{ *pulumi.OutputState }

func (KPIResourceHealthDetailsResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]KPIResourceHealthDetailsResponse)(nil)).Elem()
}

func (o KPIResourceHealthDetailsResponseMapOutput) ToKPIResourceHealthDetailsResponseMapOutput() KPIResourceHealthDetailsResponseMapOutput {
	return o
}

func (o KPIResourceHealthDetailsResponseMapOutput) ToKPIResourceHealthDetailsResponseMapOutputWithContext(ctx context.Context) KPIResourceHealthDetailsResponseMapOutput {
	return o
}

func (o KPIResourceHealthDetailsResponseMapOutput) MapIndex(k pulumi.StringInput) KPIResourceHealthDetailsResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) KPIResourceHealthDetailsResponse {
		return vs[0].(map[string]KPIResourceHealthDetailsResponse)[vs[1].(string)]
	}).(KPIResourceHealthDetailsResponseOutput)
}

// Log policy schedule.
type LogSchedulePolicy struct {
	// Frequency of the log schedule operation of this policy in minutes.
	ScheduleFrequencyInMins *int `pulumi:"scheduleFrequencyInMins"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LogSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
}

// LogSchedulePolicyInput is an input type that accepts LogSchedulePolicyArgs and LogSchedulePolicyOutput values.
// You can construct a concrete instance of `LogSchedulePolicyInput` via:
//
//	LogSchedulePolicyArgs{...}
type LogSchedulePolicyInput interface {
	pulumi.Input

	ToLogSchedulePolicyOutput() LogSchedulePolicyOutput
	ToLogSchedulePolicyOutputWithContext(context.Context) LogSchedulePolicyOutput
}

// Log policy schedule.
type LogSchedulePolicyArgs struct {
	// Frequency of the log schedule operation of this policy in minutes.
	ScheduleFrequencyInMins pulumi.IntPtrInput `pulumi:"scheduleFrequencyInMins"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LogSchedulePolicy'.
	SchedulePolicyType pulumi.StringInput `pulumi:"schedulePolicyType"`
}

func (LogSchedulePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSchedulePolicy)(nil)).Elem()
}

func (i LogSchedulePolicyArgs) ToLogSchedulePolicyOutput() LogSchedulePolicyOutput {
	return i.ToLogSchedulePolicyOutputWithContext(context.Background())
}

func (i LogSchedulePolicyArgs) ToLogSchedulePolicyOutputWithContext(ctx context.Context) LogSchedulePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSchedulePolicyOutput)
}

func (i LogSchedulePolicyArgs) ToLogSchedulePolicyPtrOutput() LogSchedulePolicyPtrOutput {
	return i.ToLogSchedulePolicyPtrOutputWithContext(context.Background())
}

func (i LogSchedulePolicyArgs) ToLogSchedulePolicyPtrOutputWithContext(ctx context.Context) LogSchedulePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSchedulePolicyOutput).ToLogSchedulePolicyPtrOutputWithContext(ctx)
}

// LogSchedulePolicyPtrInput is an input type that accepts LogSchedulePolicyArgs, LogSchedulePolicyPtr and LogSchedulePolicyPtrOutput values.
// You can construct a concrete instance of `LogSchedulePolicyPtrInput` via:
//
//	        LogSchedulePolicyArgs{...}
//
//	or:
//
//	        nil
type LogSchedulePolicyPtrInput interface {
	pulumi.Input

	ToLogSchedulePolicyPtrOutput() LogSchedulePolicyPtrOutput
	ToLogSchedulePolicyPtrOutputWithContext(context.Context) LogSchedulePolicyPtrOutput
}

type logSchedulePolicyPtrType LogSchedulePolicyArgs

func LogSchedulePolicyPtr(v *LogSchedulePolicyArgs) LogSchedulePolicyPtrInput {
	return (*logSchedulePolicyPtrType)(v)
}

func (*logSchedulePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSchedulePolicy)(nil)).Elem()
}

func (i *logSchedulePolicyPtrType) ToLogSchedulePolicyPtrOutput() LogSchedulePolicyPtrOutput {
	return i.ToLogSchedulePolicyPtrOutputWithContext(context.Background())
}

func (i *logSchedulePolicyPtrType) ToLogSchedulePolicyPtrOutputWithContext(ctx context.Context) LogSchedulePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSchedulePolicyPtrOutput)
}

// Log policy schedule.
type LogSchedulePolicyOutput struct{ *pulumi.OutputState }

func (LogSchedulePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSchedulePolicy)(nil)).Elem()
}

func (o LogSchedulePolicyOutput) ToLogSchedulePolicyOutput() LogSchedulePolicyOutput {
	return o
}

func (o LogSchedulePolicyOutput) ToLogSchedulePolicyOutputWithContext(ctx context.Context) LogSchedulePolicyOutput {
	return o
}

func (o LogSchedulePolicyOutput) ToLogSchedulePolicyPtrOutput() LogSchedulePolicyPtrOutput {
	return o.ToLogSchedulePolicyPtrOutputWithContext(context.Background())
}

func (o LogSchedulePolicyOutput) ToLogSchedulePolicyPtrOutputWithContext(ctx context.Context) LogSchedulePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSchedulePolicy) *LogSchedulePolicy {
		return &v
	}).(LogSchedulePolicyPtrOutput)
}

// Frequency of the log schedule operation of this policy in minutes.
func (o LogSchedulePolicyOutput) ScheduleFrequencyInMins() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSchedulePolicy) *int { return v.ScheduleFrequencyInMins }).(pulumi.IntPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LogSchedulePolicy'.
func (o LogSchedulePolicyOutput) SchedulePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v LogSchedulePolicy) string { return v.SchedulePolicyType }).(pulumi.StringOutput)
}

type LogSchedulePolicyPtrOutput struct{ *pulumi.OutputState }

func (LogSchedulePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSchedulePolicy)(nil)).Elem()
}

func (o LogSchedulePolicyPtrOutput) ToLogSchedulePolicyPtrOutput() LogSchedulePolicyPtrOutput {
	return o
}

func (o LogSchedulePolicyPtrOutput) ToLogSchedulePolicyPtrOutputWithContext(ctx context.Context) LogSchedulePolicyPtrOutput {
	return o
}

func (o LogSchedulePolicyPtrOutput) Elem() LogSchedulePolicyOutput {
	return o.ApplyT(func(v *LogSchedulePolicy) LogSchedulePolicy {
		if v != nil {
			return *v
		}
		var ret LogSchedulePolicy
		return ret
	}).(LogSchedulePolicyOutput)
}

// Frequency of the log schedule operation of this policy in minutes.
func (o LogSchedulePolicyPtrOutput) ScheduleFrequencyInMins() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogSchedulePolicy) *int {
		if v == nil {
			return nil
		}
		return v.ScheduleFrequencyInMins
	}).(pulumi.IntPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LogSchedulePolicy'.
func (o LogSchedulePolicyPtrOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSchedulePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.SchedulePolicyType
	}).(pulumi.StringPtrOutput)
}

// Log policy schedule.
type LogSchedulePolicyResponse struct {
	// Frequency of the log schedule operation of this policy in minutes.
	ScheduleFrequencyInMins *int `pulumi:"scheduleFrequencyInMins"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LogSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
}

// Log policy schedule.
type LogSchedulePolicyResponseOutput struct{ *pulumi.OutputState }

func (LogSchedulePolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSchedulePolicyResponse)(nil)).Elem()
}

func (o LogSchedulePolicyResponseOutput) ToLogSchedulePolicyResponseOutput() LogSchedulePolicyResponseOutput {
	return o
}

func (o LogSchedulePolicyResponseOutput) ToLogSchedulePolicyResponseOutputWithContext(ctx context.Context) LogSchedulePolicyResponseOutput {
	return o
}

// Frequency of the log schedule operation of this policy in minutes.
func (o LogSchedulePolicyResponseOutput) ScheduleFrequencyInMins() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSchedulePolicyResponse) *int { return v.ScheduleFrequencyInMins }).(pulumi.IntPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LogSchedulePolicy'.
func (o LogSchedulePolicyResponseOutput) SchedulePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v LogSchedulePolicyResponse) string { return v.SchedulePolicyType }).(pulumi.StringOutput)
}

type LogSchedulePolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (LogSchedulePolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSchedulePolicyResponse)(nil)).Elem()
}

func (o LogSchedulePolicyResponsePtrOutput) ToLogSchedulePolicyResponsePtrOutput() LogSchedulePolicyResponsePtrOutput {
	return o
}

func (o LogSchedulePolicyResponsePtrOutput) ToLogSchedulePolicyResponsePtrOutputWithContext(ctx context.Context) LogSchedulePolicyResponsePtrOutput {
	return o
}

func (o LogSchedulePolicyResponsePtrOutput) Elem() LogSchedulePolicyResponseOutput {
	return o.ApplyT(func(v *LogSchedulePolicyResponse) LogSchedulePolicyResponse {
		if v != nil {
			return *v
		}
		var ret LogSchedulePolicyResponse
		return ret
	}).(LogSchedulePolicyResponseOutput)
}

// Frequency of the log schedule operation of this policy in minutes.
func (o LogSchedulePolicyResponsePtrOutput) ScheduleFrequencyInMins() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogSchedulePolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.ScheduleFrequencyInMins
	}).(pulumi.IntPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LogSchedulePolicy'.
func (o LogSchedulePolicyResponsePtrOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSchedulePolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SchedulePolicyType
	}).(pulumi.StringPtrOutput)
}

// Long term retention policy.
type LongTermRetentionPolicy struct {
	// Daily retention schedule of the protection policy.
	DailySchedule *DailyRetentionSchedule `pulumi:"dailySchedule"`
	// Monthly retention schedule of the protection policy.
	MonthlySchedule *MonthlyRetentionSchedule `pulumi:"monthlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermRetentionPolicy'.
	RetentionPolicyType string `pulumi:"retentionPolicyType"`
	// Weekly retention schedule of the protection policy.
	WeeklySchedule *WeeklyRetentionSchedule `pulumi:"weeklySchedule"`
	// Yearly retention schedule of the protection policy.
	YearlySchedule *YearlyRetentionSchedule `pulumi:"yearlySchedule"`
}

// LongTermRetentionPolicyInput is an input type that accepts LongTermRetentionPolicyArgs and LongTermRetentionPolicyOutput values.
// You can construct a concrete instance of `LongTermRetentionPolicyInput` via:
//
//	LongTermRetentionPolicyArgs{...}
type LongTermRetentionPolicyInput interface {
	pulumi.Input

	ToLongTermRetentionPolicyOutput() LongTermRetentionPolicyOutput
	ToLongTermRetentionPolicyOutputWithContext(context.Context) LongTermRetentionPolicyOutput
}

// Long term retention policy.
type LongTermRetentionPolicyArgs struct {
	// Daily retention schedule of the protection policy.
	DailySchedule DailyRetentionSchedulePtrInput `pulumi:"dailySchedule"`
	// Monthly retention schedule of the protection policy.
	MonthlySchedule MonthlyRetentionSchedulePtrInput `pulumi:"monthlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermRetentionPolicy'.
	RetentionPolicyType pulumi.StringInput `pulumi:"retentionPolicyType"`
	// Weekly retention schedule of the protection policy.
	WeeklySchedule WeeklyRetentionSchedulePtrInput `pulumi:"weeklySchedule"`
	// Yearly retention schedule of the protection policy.
	YearlySchedule YearlyRetentionSchedulePtrInput `pulumi:"yearlySchedule"`
}

func (LongTermRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LongTermRetentionPolicy)(nil)).Elem()
}

func (i LongTermRetentionPolicyArgs) ToLongTermRetentionPolicyOutput() LongTermRetentionPolicyOutput {
	return i.ToLongTermRetentionPolicyOutputWithContext(context.Background())
}

func (i LongTermRetentionPolicyArgs) ToLongTermRetentionPolicyOutputWithContext(ctx context.Context) LongTermRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LongTermRetentionPolicyOutput)
}

func (i LongTermRetentionPolicyArgs) ToLongTermRetentionPolicyPtrOutput() LongTermRetentionPolicyPtrOutput {
	return i.ToLongTermRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i LongTermRetentionPolicyArgs) ToLongTermRetentionPolicyPtrOutputWithContext(ctx context.Context) LongTermRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LongTermRetentionPolicyOutput).ToLongTermRetentionPolicyPtrOutputWithContext(ctx)
}

// LongTermRetentionPolicyPtrInput is an input type that accepts LongTermRetentionPolicyArgs, LongTermRetentionPolicyPtr and LongTermRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `LongTermRetentionPolicyPtrInput` via:
//
//	        LongTermRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type LongTermRetentionPolicyPtrInput interface {
	pulumi.Input

	ToLongTermRetentionPolicyPtrOutput() LongTermRetentionPolicyPtrOutput
	ToLongTermRetentionPolicyPtrOutputWithContext(context.Context) LongTermRetentionPolicyPtrOutput
}

type longTermRetentionPolicyPtrType LongTermRetentionPolicyArgs

func LongTermRetentionPolicyPtr(v *LongTermRetentionPolicyArgs) LongTermRetentionPolicyPtrInput {
	return (*longTermRetentionPolicyPtrType)(v)
}

func (*longTermRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LongTermRetentionPolicy)(nil)).Elem()
}

func (i *longTermRetentionPolicyPtrType) ToLongTermRetentionPolicyPtrOutput() LongTermRetentionPolicyPtrOutput {
	return i.ToLongTermRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *longTermRetentionPolicyPtrType) ToLongTermRetentionPolicyPtrOutputWithContext(ctx context.Context) LongTermRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LongTermRetentionPolicyPtrOutput)
}

// Long term retention policy.
type LongTermRetentionPolicyOutput struct{ *pulumi.OutputState }

func (LongTermRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LongTermRetentionPolicy)(nil)).Elem()
}

func (o LongTermRetentionPolicyOutput) ToLongTermRetentionPolicyOutput() LongTermRetentionPolicyOutput {
	return o
}

func (o LongTermRetentionPolicyOutput) ToLongTermRetentionPolicyOutputWithContext(ctx context.Context) LongTermRetentionPolicyOutput {
	return o
}

func (o LongTermRetentionPolicyOutput) ToLongTermRetentionPolicyPtrOutput() LongTermRetentionPolicyPtrOutput {
	return o.ToLongTermRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o LongTermRetentionPolicyOutput) ToLongTermRetentionPolicyPtrOutputWithContext(ctx context.Context) LongTermRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LongTermRetentionPolicy) *LongTermRetentionPolicy {
		return &v
	}).(LongTermRetentionPolicyPtrOutput)
}

// Daily retention schedule of the protection policy.
func (o LongTermRetentionPolicyOutput) DailySchedule() DailyRetentionSchedulePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicy) *DailyRetentionSchedule { return v.DailySchedule }).(DailyRetentionSchedulePtrOutput)
}

// Monthly retention schedule of the protection policy.
func (o LongTermRetentionPolicyOutput) MonthlySchedule() MonthlyRetentionSchedulePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicy) *MonthlyRetentionSchedule { return v.MonthlySchedule }).(MonthlyRetentionSchedulePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LongTermRetentionPolicy'.
func (o LongTermRetentionPolicyOutput) RetentionPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v LongTermRetentionPolicy) string { return v.RetentionPolicyType }).(pulumi.StringOutput)
}

// Weekly retention schedule of the protection policy.
func (o LongTermRetentionPolicyOutput) WeeklySchedule() WeeklyRetentionSchedulePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicy) *WeeklyRetentionSchedule { return v.WeeklySchedule }).(WeeklyRetentionSchedulePtrOutput)
}

// Yearly retention schedule of the protection policy.
func (o LongTermRetentionPolicyOutput) YearlySchedule() YearlyRetentionSchedulePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicy) *YearlyRetentionSchedule { return v.YearlySchedule }).(YearlyRetentionSchedulePtrOutput)
}

type LongTermRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (LongTermRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LongTermRetentionPolicy)(nil)).Elem()
}

func (o LongTermRetentionPolicyPtrOutput) ToLongTermRetentionPolicyPtrOutput() LongTermRetentionPolicyPtrOutput {
	return o
}

func (o LongTermRetentionPolicyPtrOutput) ToLongTermRetentionPolicyPtrOutputWithContext(ctx context.Context) LongTermRetentionPolicyPtrOutput {
	return o
}

func (o LongTermRetentionPolicyPtrOutput) Elem() LongTermRetentionPolicyOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicy) LongTermRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret LongTermRetentionPolicy
		return ret
	}).(LongTermRetentionPolicyOutput)
}

// Daily retention schedule of the protection policy.
func (o LongTermRetentionPolicyPtrOutput) DailySchedule() DailyRetentionSchedulePtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicy) *DailyRetentionSchedule {
		if v == nil {
			return nil
		}
		return v.DailySchedule
	}).(DailyRetentionSchedulePtrOutput)
}

// Monthly retention schedule of the protection policy.
func (o LongTermRetentionPolicyPtrOutput) MonthlySchedule() MonthlyRetentionSchedulePtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicy) *MonthlyRetentionSchedule {
		if v == nil {
			return nil
		}
		return v.MonthlySchedule
	}).(MonthlyRetentionSchedulePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LongTermRetentionPolicy'.
func (o LongTermRetentionPolicyPtrOutput) RetentionPolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionPolicyType
	}).(pulumi.StringPtrOutput)
}

// Weekly retention schedule of the protection policy.
func (o LongTermRetentionPolicyPtrOutput) WeeklySchedule() WeeklyRetentionSchedulePtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicy) *WeeklyRetentionSchedule {
		if v == nil {
			return nil
		}
		return v.WeeklySchedule
	}).(WeeklyRetentionSchedulePtrOutput)
}

// Yearly retention schedule of the protection policy.
func (o LongTermRetentionPolicyPtrOutput) YearlySchedule() YearlyRetentionSchedulePtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicy) *YearlyRetentionSchedule {
		if v == nil {
			return nil
		}
		return v.YearlySchedule
	}).(YearlyRetentionSchedulePtrOutput)
}

// Long term retention policy.
type LongTermRetentionPolicyResponse struct {
	// Daily retention schedule of the protection policy.
	DailySchedule *DailyRetentionScheduleResponse `pulumi:"dailySchedule"`
	// Monthly retention schedule of the protection policy.
	MonthlySchedule *MonthlyRetentionScheduleResponse `pulumi:"monthlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermRetentionPolicy'.
	RetentionPolicyType string `pulumi:"retentionPolicyType"`
	// Weekly retention schedule of the protection policy.
	WeeklySchedule *WeeklyRetentionScheduleResponse `pulumi:"weeklySchedule"`
	// Yearly retention schedule of the protection policy.
	YearlySchedule *YearlyRetentionScheduleResponse `pulumi:"yearlySchedule"`
}

// Long term retention policy.
type LongTermRetentionPolicyResponseOutput struct{ *pulumi.OutputState }

func (LongTermRetentionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LongTermRetentionPolicyResponse)(nil)).Elem()
}

func (o LongTermRetentionPolicyResponseOutput) ToLongTermRetentionPolicyResponseOutput() LongTermRetentionPolicyResponseOutput {
	return o
}

func (o LongTermRetentionPolicyResponseOutput) ToLongTermRetentionPolicyResponseOutputWithContext(ctx context.Context) LongTermRetentionPolicyResponseOutput {
	return o
}

// Daily retention schedule of the protection policy.
func (o LongTermRetentionPolicyResponseOutput) DailySchedule() DailyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicyResponse) *DailyRetentionScheduleResponse { return v.DailySchedule }).(DailyRetentionScheduleResponsePtrOutput)
}

// Monthly retention schedule of the protection policy.
func (o LongTermRetentionPolicyResponseOutput) MonthlySchedule() MonthlyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicyResponse) *MonthlyRetentionScheduleResponse { return v.MonthlySchedule }).(MonthlyRetentionScheduleResponsePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LongTermRetentionPolicy'.
func (o LongTermRetentionPolicyResponseOutput) RetentionPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v LongTermRetentionPolicyResponse) string { return v.RetentionPolicyType }).(pulumi.StringOutput)
}

// Weekly retention schedule of the protection policy.
func (o LongTermRetentionPolicyResponseOutput) WeeklySchedule() WeeklyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicyResponse) *WeeklyRetentionScheduleResponse { return v.WeeklySchedule }).(WeeklyRetentionScheduleResponsePtrOutput)
}

// Yearly retention schedule of the protection policy.
func (o LongTermRetentionPolicyResponseOutput) YearlySchedule() YearlyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v LongTermRetentionPolicyResponse) *YearlyRetentionScheduleResponse { return v.YearlySchedule }).(YearlyRetentionScheduleResponsePtrOutput)
}

type LongTermRetentionPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (LongTermRetentionPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LongTermRetentionPolicyResponse)(nil)).Elem()
}

func (o LongTermRetentionPolicyResponsePtrOutput) ToLongTermRetentionPolicyResponsePtrOutput() LongTermRetentionPolicyResponsePtrOutput {
	return o
}

func (o LongTermRetentionPolicyResponsePtrOutput) ToLongTermRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) LongTermRetentionPolicyResponsePtrOutput {
	return o
}

func (o LongTermRetentionPolicyResponsePtrOutput) Elem() LongTermRetentionPolicyResponseOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicyResponse) LongTermRetentionPolicyResponse {
		if v != nil {
			return *v
		}
		var ret LongTermRetentionPolicyResponse
		return ret
	}).(LongTermRetentionPolicyResponseOutput)
}

// Daily retention schedule of the protection policy.
func (o LongTermRetentionPolicyResponsePtrOutput) DailySchedule() DailyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicyResponse) *DailyRetentionScheduleResponse {
		if v == nil {
			return nil
		}
		return v.DailySchedule
	}).(DailyRetentionScheduleResponsePtrOutput)
}

// Monthly retention schedule of the protection policy.
func (o LongTermRetentionPolicyResponsePtrOutput) MonthlySchedule() MonthlyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicyResponse) *MonthlyRetentionScheduleResponse {
		if v == nil {
			return nil
		}
		return v.MonthlySchedule
	}).(MonthlyRetentionScheduleResponsePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LongTermRetentionPolicy'.
func (o LongTermRetentionPolicyResponsePtrOutput) RetentionPolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionPolicyType
	}).(pulumi.StringPtrOutput)
}

// Weekly retention schedule of the protection policy.
func (o LongTermRetentionPolicyResponsePtrOutput) WeeklySchedule() WeeklyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicyResponse) *WeeklyRetentionScheduleResponse {
		if v == nil {
			return nil
		}
		return v.WeeklySchedule
	}).(WeeklyRetentionScheduleResponsePtrOutput)
}

// Yearly retention schedule of the protection policy.
func (o LongTermRetentionPolicyResponsePtrOutput) YearlySchedule() YearlyRetentionScheduleResponsePtrOutput {
	return o.ApplyT(func(v *LongTermRetentionPolicyResponse) *YearlyRetentionScheduleResponse {
		if v == nil {
			return nil
		}
		return v.YearlySchedule
	}).(YearlyRetentionScheduleResponsePtrOutput)
}

// Long term policy schedule.
type LongTermSchedulePolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
}

// LongTermSchedulePolicyInput is an input type that accepts LongTermSchedulePolicyArgs and LongTermSchedulePolicyOutput values.
// You can construct a concrete instance of `LongTermSchedulePolicyInput` via:
//
//	LongTermSchedulePolicyArgs{...}
type LongTermSchedulePolicyInput interface {
	pulumi.Input

	ToLongTermSchedulePolicyOutput() LongTermSchedulePolicyOutput
	ToLongTermSchedulePolicyOutputWithContext(context.Context) LongTermSchedulePolicyOutput
}

// Long term policy schedule.
type LongTermSchedulePolicyArgs struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermSchedulePolicy'.
	SchedulePolicyType pulumi.StringInput `pulumi:"schedulePolicyType"`
}

func (LongTermSchedulePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LongTermSchedulePolicy)(nil)).Elem()
}

func (i LongTermSchedulePolicyArgs) ToLongTermSchedulePolicyOutput() LongTermSchedulePolicyOutput {
	return i.ToLongTermSchedulePolicyOutputWithContext(context.Background())
}

func (i LongTermSchedulePolicyArgs) ToLongTermSchedulePolicyOutputWithContext(ctx context.Context) LongTermSchedulePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LongTermSchedulePolicyOutput)
}

func (i LongTermSchedulePolicyArgs) ToLongTermSchedulePolicyPtrOutput() LongTermSchedulePolicyPtrOutput {
	return i.ToLongTermSchedulePolicyPtrOutputWithContext(context.Background())
}

func (i LongTermSchedulePolicyArgs) ToLongTermSchedulePolicyPtrOutputWithContext(ctx context.Context) LongTermSchedulePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LongTermSchedulePolicyOutput).ToLongTermSchedulePolicyPtrOutputWithContext(ctx)
}

// LongTermSchedulePolicyPtrInput is an input type that accepts LongTermSchedulePolicyArgs, LongTermSchedulePolicyPtr and LongTermSchedulePolicyPtrOutput values.
// You can construct a concrete instance of `LongTermSchedulePolicyPtrInput` via:
//
//	        LongTermSchedulePolicyArgs{...}
//
//	or:
//
//	        nil
type LongTermSchedulePolicyPtrInput interface {
	pulumi.Input

	ToLongTermSchedulePolicyPtrOutput() LongTermSchedulePolicyPtrOutput
	ToLongTermSchedulePolicyPtrOutputWithContext(context.Context) LongTermSchedulePolicyPtrOutput
}

type longTermSchedulePolicyPtrType LongTermSchedulePolicyArgs

func LongTermSchedulePolicyPtr(v *LongTermSchedulePolicyArgs) LongTermSchedulePolicyPtrInput {
	return (*longTermSchedulePolicyPtrType)(v)
}

func (*longTermSchedulePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LongTermSchedulePolicy)(nil)).Elem()
}

func (i *longTermSchedulePolicyPtrType) ToLongTermSchedulePolicyPtrOutput() LongTermSchedulePolicyPtrOutput {
	return i.ToLongTermSchedulePolicyPtrOutputWithContext(context.Background())
}

func (i *longTermSchedulePolicyPtrType) ToLongTermSchedulePolicyPtrOutputWithContext(ctx context.Context) LongTermSchedulePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LongTermSchedulePolicyPtrOutput)
}

// Long term policy schedule.
type LongTermSchedulePolicyOutput struct{ *pulumi.OutputState }

func (LongTermSchedulePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LongTermSchedulePolicy)(nil)).Elem()
}

func (o LongTermSchedulePolicyOutput) ToLongTermSchedulePolicyOutput() LongTermSchedulePolicyOutput {
	return o
}

func (o LongTermSchedulePolicyOutput) ToLongTermSchedulePolicyOutputWithContext(ctx context.Context) LongTermSchedulePolicyOutput {
	return o
}

func (o LongTermSchedulePolicyOutput) ToLongTermSchedulePolicyPtrOutput() LongTermSchedulePolicyPtrOutput {
	return o.ToLongTermSchedulePolicyPtrOutputWithContext(context.Background())
}

func (o LongTermSchedulePolicyOutput) ToLongTermSchedulePolicyPtrOutputWithContext(ctx context.Context) LongTermSchedulePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LongTermSchedulePolicy) *LongTermSchedulePolicy {
		return &v
	}).(LongTermSchedulePolicyPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LongTermSchedulePolicy'.
func (o LongTermSchedulePolicyOutput) SchedulePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v LongTermSchedulePolicy) string { return v.SchedulePolicyType }).(pulumi.StringOutput)
}

type LongTermSchedulePolicyPtrOutput struct{ *pulumi.OutputState }

func (LongTermSchedulePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LongTermSchedulePolicy)(nil)).Elem()
}

func (o LongTermSchedulePolicyPtrOutput) ToLongTermSchedulePolicyPtrOutput() LongTermSchedulePolicyPtrOutput {
	return o
}

func (o LongTermSchedulePolicyPtrOutput) ToLongTermSchedulePolicyPtrOutputWithContext(ctx context.Context) LongTermSchedulePolicyPtrOutput {
	return o
}

func (o LongTermSchedulePolicyPtrOutput) Elem() LongTermSchedulePolicyOutput {
	return o.ApplyT(func(v *LongTermSchedulePolicy) LongTermSchedulePolicy {
		if v != nil {
			return *v
		}
		var ret LongTermSchedulePolicy
		return ret
	}).(LongTermSchedulePolicyOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LongTermSchedulePolicy'.
func (o LongTermSchedulePolicyPtrOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LongTermSchedulePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.SchedulePolicyType
	}).(pulumi.StringPtrOutput)
}

// Long term policy schedule.
type LongTermSchedulePolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'LongTermSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
}

// Long term policy schedule.
type LongTermSchedulePolicyResponseOutput struct{ *pulumi.OutputState }

func (LongTermSchedulePolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LongTermSchedulePolicyResponse)(nil)).Elem()
}

func (o LongTermSchedulePolicyResponseOutput) ToLongTermSchedulePolicyResponseOutput() LongTermSchedulePolicyResponseOutput {
	return o
}

func (o LongTermSchedulePolicyResponseOutput) ToLongTermSchedulePolicyResponseOutputWithContext(ctx context.Context) LongTermSchedulePolicyResponseOutput {
	return o
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LongTermSchedulePolicy'.
func (o LongTermSchedulePolicyResponseOutput) SchedulePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v LongTermSchedulePolicyResponse) string { return v.SchedulePolicyType }).(pulumi.StringOutput)
}

type LongTermSchedulePolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (LongTermSchedulePolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LongTermSchedulePolicyResponse)(nil)).Elem()
}

func (o LongTermSchedulePolicyResponsePtrOutput) ToLongTermSchedulePolicyResponsePtrOutput() LongTermSchedulePolicyResponsePtrOutput {
	return o
}

func (o LongTermSchedulePolicyResponsePtrOutput) ToLongTermSchedulePolicyResponsePtrOutputWithContext(ctx context.Context) LongTermSchedulePolicyResponsePtrOutput {
	return o
}

func (o LongTermSchedulePolicyResponsePtrOutput) Elem() LongTermSchedulePolicyResponseOutput {
	return o.ApplyT(func(v *LongTermSchedulePolicyResponse) LongTermSchedulePolicyResponse {
		if v != nil {
			return *v
		}
		var ret LongTermSchedulePolicyResponse
		return ret
	}).(LongTermSchedulePolicyResponseOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'LongTermSchedulePolicy'.
func (o LongTermSchedulePolicyResponsePtrOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LongTermSchedulePolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SchedulePolicyType
	}).(pulumi.StringPtrOutput)
}

// MAB workload-specific Health Details.
type MABContainerHealthDetails struct {
	// Health Code
	Code *int `pulumi:"code"`
	// Health Message
	Message *string `pulumi:"message"`
	// Health Recommended Actions
	Recommendations []string `pulumi:"recommendations"`
	// Health Title
	Title *string `pulumi:"title"`
}

// MABContainerHealthDetailsInput is an input type that accepts MABContainerHealthDetailsArgs and MABContainerHealthDetailsOutput values.
// You can construct a concrete instance of `MABContainerHealthDetailsInput` via:
//
//	MABContainerHealthDetailsArgs{...}
type MABContainerHealthDetailsInput interface {
	pulumi.Input

	ToMABContainerHealthDetailsOutput() MABContainerHealthDetailsOutput
	ToMABContainerHealthDetailsOutputWithContext(context.Context) MABContainerHealthDetailsOutput
}

// MAB workload-specific Health Details.
type MABContainerHealthDetailsArgs struct {
	// Health Code
	Code pulumi.IntPtrInput `pulumi:"code"`
	// Health Message
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Health Recommended Actions
	Recommendations pulumi.StringArrayInput `pulumi:"recommendations"`
	// Health Title
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (MABContainerHealthDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MABContainerHealthDetails)(nil)).Elem()
}

func (i MABContainerHealthDetailsArgs) ToMABContainerHealthDetailsOutput() MABContainerHealthDetailsOutput {
	return i.ToMABContainerHealthDetailsOutputWithContext(context.Background())
}

func (i MABContainerHealthDetailsArgs) ToMABContainerHealthDetailsOutputWithContext(ctx context.Context) MABContainerHealthDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MABContainerHealthDetailsOutput)
}

// MABContainerHealthDetailsArrayInput is an input type that accepts MABContainerHealthDetailsArray and MABContainerHealthDetailsArrayOutput values.
// You can construct a concrete instance of `MABContainerHealthDetailsArrayInput` via:
//
//	MABContainerHealthDetailsArray{ MABContainerHealthDetailsArgs{...} }
type MABContainerHealthDetailsArrayInput interface {
	pulumi.Input

	ToMABContainerHealthDetailsArrayOutput() MABContainerHealthDetailsArrayOutput
	ToMABContainerHealthDetailsArrayOutputWithContext(context.Context) MABContainerHealthDetailsArrayOutput
}

type MABContainerHealthDetailsArray []MABContainerHealthDetailsInput

func (MABContainerHealthDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MABContainerHealthDetails)(nil)).Elem()
}

func (i MABContainerHealthDetailsArray) ToMABContainerHealthDetailsArrayOutput() MABContainerHealthDetailsArrayOutput {
	return i.ToMABContainerHealthDetailsArrayOutputWithContext(context.Background())
}

func (i MABContainerHealthDetailsArray) ToMABContainerHealthDetailsArrayOutputWithContext(ctx context.Context) MABContainerHealthDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MABContainerHealthDetailsArrayOutput)
}

// MAB workload-specific Health Details.
type MABContainerHealthDetailsOutput struct{ *pulumi.OutputState }

func (MABContainerHealthDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MABContainerHealthDetails)(nil)).Elem()
}

func (o MABContainerHealthDetailsOutput) ToMABContainerHealthDetailsOutput() MABContainerHealthDetailsOutput {
	return o
}

func (o MABContainerHealthDetailsOutput) ToMABContainerHealthDetailsOutputWithContext(ctx context.Context) MABContainerHealthDetailsOutput {
	return o
}

// Health Code
func (o MABContainerHealthDetailsOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MABContainerHealthDetails) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// Health Message
func (o MABContainerHealthDetailsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MABContainerHealthDetails) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Health Recommended Actions
func (o MABContainerHealthDetailsOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MABContainerHealthDetails) []string { return v.Recommendations }).(pulumi.StringArrayOutput)
}

// Health Title
func (o MABContainerHealthDetailsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MABContainerHealthDetails) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type MABContainerHealthDetailsArrayOutput struct{ *pulumi.OutputState }

func (MABContainerHealthDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MABContainerHealthDetails)(nil)).Elem()
}

func (o MABContainerHealthDetailsArrayOutput) ToMABContainerHealthDetailsArrayOutput() MABContainerHealthDetailsArrayOutput {
	return o
}

func (o MABContainerHealthDetailsArrayOutput) ToMABContainerHealthDetailsArrayOutputWithContext(ctx context.Context) MABContainerHealthDetailsArrayOutput {
	return o
}

func (o MABContainerHealthDetailsArrayOutput) Index(i pulumi.IntInput) MABContainerHealthDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MABContainerHealthDetails {
		return vs[0].([]MABContainerHealthDetails)[vs[1].(int)]
	}).(MABContainerHealthDetailsOutput)
}

// MAB workload-specific Health Details.
type MABContainerHealthDetailsResponse struct {
	// Health Code
	Code *int `pulumi:"code"`
	// Health Message
	Message *string `pulumi:"message"`
	// Health Recommended Actions
	Recommendations []string `pulumi:"recommendations"`
	// Health Title
	Title *string `pulumi:"title"`
}

// MAB workload-specific Health Details.
type MABContainerHealthDetailsResponseOutput struct{ *pulumi.OutputState }

func (MABContainerHealthDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MABContainerHealthDetailsResponse)(nil)).Elem()
}

func (o MABContainerHealthDetailsResponseOutput) ToMABContainerHealthDetailsResponseOutput() MABContainerHealthDetailsResponseOutput {
	return o
}

func (o MABContainerHealthDetailsResponseOutput) ToMABContainerHealthDetailsResponseOutputWithContext(ctx context.Context) MABContainerHealthDetailsResponseOutput {
	return o
}

// Health Code
func (o MABContainerHealthDetailsResponseOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MABContainerHealthDetailsResponse) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// Health Message
func (o MABContainerHealthDetailsResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MABContainerHealthDetailsResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Health Recommended Actions
func (o MABContainerHealthDetailsResponseOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MABContainerHealthDetailsResponse) []string { return v.Recommendations }).(pulumi.StringArrayOutput)
}

// Health Title
func (o MABContainerHealthDetailsResponseOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MABContainerHealthDetailsResponse) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type MABContainerHealthDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (MABContainerHealthDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MABContainerHealthDetailsResponse)(nil)).Elem()
}

func (o MABContainerHealthDetailsResponseArrayOutput) ToMABContainerHealthDetailsResponseArrayOutput() MABContainerHealthDetailsResponseArrayOutput {
	return o
}

func (o MABContainerHealthDetailsResponseArrayOutput) ToMABContainerHealthDetailsResponseArrayOutputWithContext(ctx context.Context) MABContainerHealthDetailsResponseArrayOutput {
	return o
}

func (o MABContainerHealthDetailsResponseArrayOutput) Index(i pulumi.IntInput) MABContainerHealthDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MABContainerHealthDetailsResponse {
		return vs[0].([]MABContainerHealthDetailsResponse)[vs[1].(int)]
	}).(MABContainerHealthDetailsResponseOutput)
}

// Container with items backed up using MAB backup engine.
type MabContainer struct {
	// Agent version of this container.
	AgentVersion *string `pulumi:"agentVersion"`
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Can the container be registered one more time.
	CanReRegister *bool `pulumi:"canReRegister"`
	// Health state of mab container.
	ContainerHealthState *string `pulumi:"containerHealthState"`
	// ContainerID represents the container.
	ContainerId *float64 `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Windows'.
	ContainerType string `pulumi:"containerType"`
	// Additional information for this container
	ExtendedInfo *MabContainerExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Health details on this mab container.
	MabContainerHealthDetails []MABContainerHealthDetails `pulumi:"mabContainerHealthDetails"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of items backed up in this container.
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// MabContainerInput is an input type that accepts MabContainerArgs and MabContainerOutput values.
// You can construct a concrete instance of `MabContainerInput` via:
//
//	MabContainerArgs{...}
type MabContainerInput interface {
	pulumi.Input

	ToMabContainerOutput() MabContainerOutput
	ToMabContainerOutputWithContext(context.Context) MabContainerOutput
}

// Container with items backed up using MAB backup engine.
type MabContainerArgs struct {
	// Agent version of this container.
	AgentVersion pulumi.StringPtrInput `pulumi:"agentVersion"`
	// Type of backup management for the container.
	BackupManagementType pulumi.StringPtrInput `pulumi:"backupManagementType"`
	// Can the container be registered one more time.
	CanReRegister pulumi.BoolPtrInput `pulumi:"canReRegister"`
	// Health state of mab container.
	ContainerHealthState pulumi.StringPtrInput `pulumi:"containerHealthState"`
	// ContainerID represents the container.
	ContainerId pulumi.Float64PtrInput `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Windows'.
	ContainerType pulumi.StringInput `pulumi:"containerType"`
	// Additional information for this container
	ExtendedInfo MabContainerExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus pulumi.StringPtrInput `pulumi:"healthStatus"`
	// Health details on this mab container.
	MabContainerHealthDetails MABContainerHealthDetailsArrayInput `pulumi:"mabContainerHealthDetails"`
	// Type of the protectable object associated with this container
	ProtectableObjectType pulumi.StringPtrInput `pulumi:"protectableObjectType"`
	// Number of items backed up in this container.
	ProtectedItemCount pulumi.Float64PtrInput `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus pulumi.StringPtrInput `pulumi:"registrationStatus"`
}

func (MabContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MabContainer)(nil)).Elem()
}

func (i MabContainerArgs) ToMabContainerOutput() MabContainerOutput {
	return i.ToMabContainerOutputWithContext(context.Background())
}

func (i MabContainerArgs) ToMabContainerOutputWithContext(ctx context.Context) MabContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabContainerOutput)
}

func (i MabContainerArgs) ToMabContainerPtrOutput() MabContainerPtrOutput {
	return i.ToMabContainerPtrOutputWithContext(context.Background())
}

func (i MabContainerArgs) ToMabContainerPtrOutputWithContext(ctx context.Context) MabContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabContainerOutput).ToMabContainerPtrOutputWithContext(ctx)
}

// MabContainerPtrInput is an input type that accepts MabContainerArgs, MabContainerPtr and MabContainerPtrOutput values.
// You can construct a concrete instance of `MabContainerPtrInput` via:
//
//	        MabContainerArgs{...}
//
//	or:
//
//	        nil
type MabContainerPtrInput interface {
	pulumi.Input

	ToMabContainerPtrOutput() MabContainerPtrOutput
	ToMabContainerPtrOutputWithContext(context.Context) MabContainerPtrOutput
}

type mabContainerPtrType MabContainerArgs

func MabContainerPtr(v *MabContainerArgs) MabContainerPtrInput {
	return (*mabContainerPtrType)(v)
}

func (*mabContainerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MabContainer)(nil)).Elem()
}

func (i *mabContainerPtrType) ToMabContainerPtrOutput() MabContainerPtrOutput {
	return i.ToMabContainerPtrOutputWithContext(context.Background())
}

func (i *mabContainerPtrType) ToMabContainerPtrOutputWithContext(ctx context.Context) MabContainerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabContainerPtrOutput)
}

// Container with items backed up using MAB backup engine.
type MabContainerOutput struct{ *pulumi.OutputState }

func (MabContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabContainer)(nil)).Elem()
}

func (o MabContainerOutput) ToMabContainerOutput() MabContainerOutput {
	return o
}

func (o MabContainerOutput) ToMabContainerOutputWithContext(ctx context.Context) MabContainerOutput {
	return o
}

func (o MabContainerOutput) ToMabContainerPtrOutput() MabContainerPtrOutput {
	return o.ToMabContainerPtrOutputWithContext(context.Background())
}

func (o MabContainerOutput) ToMabContainerPtrOutputWithContext(ctx context.Context) MabContainerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MabContainer) *MabContainer {
		return &v
	}).(MabContainerPtrOutput)
}

// Agent version of this container.
func (o MabContainerOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainer) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// Type of backup management for the container.
func (o MabContainerOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainer) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Can the container be registered one more time.
func (o MabContainerOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabContainer) *bool { return v.CanReRegister }).(pulumi.BoolPtrOutput)
}

// Health state of mab container.
func (o MabContainerOutput) ContainerHealthState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainer) *string { return v.ContainerHealthState }).(pulumi.StringPtrOutput)
}

// ContainerID represents the container.
func (o MabContainerOutput) ContainerId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MabContainer) *float64 { return v.ContainerId }).(pulumi.Float64PtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Windows'.
func (o MabContainerOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v MabContainer) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Additional information for this container
func (o MabContainerOutput) ExtendedInfo() MabContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v MabContainer) *MabContainerExtendedInfo { return v.ExtendedInfo }).(MabContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o MabContainerOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainer) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o MabContainerOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainer) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Health details on this mab container.
func (o MabContainerOutput) MabContainerHealthDetails() MABContainerHealthDetailsArrayOutput {
	return o.ApplyT(func(v MabContainer) []MABContainerHealthDetails { return v.MabContainerHealthDetails }).(MABContainerHealthDetailsArrayOutput)
}

// Type of the protectable object associated with this container
func (o MabContainerOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainer) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Number of items backed up in this container.
func (o MabContainerOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MabContainer) *float64 { return v.ProtectedItemCount }).(pulumi.Float64PtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o MabContainerOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainer) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

type MabContainerPtrOutput struct{ *pulumi.OutputState }

func (MabContainerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MabContainer)(nil)).Elem()
}

func (o MabContainerPtrOutput) ToMabContainerPtrOutput() MabContainerPtrOutput {
	return o
}

func (o MabContainerPtrOutput) ToMabContainerPtrOutputWithContext(ctx context.Context) MabContainerPtrOutput {
	return o
}

func (o MabContainerPtrOutput) Elem() MabContainerOutput {
	return o.ApplyT(func(v *MabContainer) MabContainer {
		if v != nil {
			return *v
		}
		var ret MabContainer
		return ret
	}).(MabContainerOutput)
}

// Agent version of this container.
func (o MabContainerPtrOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainer) *string {
		if v == nil {
			return nil
		}
		return v.AgentVersion
	}).(pulumi.StringPtrOutput)
}

// Type of backup management for the container.
func (o MabContainerPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainer) *string {
		if v == nil {
			return nil
		}
		return v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Can the container be registered one more time.
func (o MabContainerPtrOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MabContainer) *bool {
		if v == nil {
			return nil
		}
		return v.CanReRegister
	}).(pulumi.BoolPtrOutput)
}

// Health state of mab container.
func (o MabContainerPtrOutput) ContainerHealthState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainer) *string {
		if v == nil {
			return nil
		}
		return v.ContainerHealthState
	}).(pulumi.StringPtrOutput)
}

// ContainerID represents the container.
func (o MabContainerPtrOutput) ContainerId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MabContainer) *float64 {
		if v == nil {
			return nil
		}
		return v.ContainerId
	}).(pulumi.Float64PtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Windows'.
func (o MabContainerPtrOutput) ContainerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainer) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerType
	}).(pulumi.StringPtrOutput)
}

// Additional information for this container
func (o MabContainerPtrOutput) ExtendedInfo() MabContainerExtendedInfoPtrOutput {
	return o.ApplyT(func(v *MabContainer) *MabContainerExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(MabContainerExtendedInfoPtrOutput)
}

// Friendly name of the container.
func (o MabContainerPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainer) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o MabContainerPtrOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainer) *string {
		if v == nil {
			return nil
		}
		return v.HealthStatus
	}).(pulumi.StringPtrOutput)
}

// Health details on this mab container.
func (o MabContainerPtrOutput) MabContainerHealthDetails() MABContainerHealthDetailsArrayOutput {
	return o.ApplyT(func(v *MabContainer) []MABContainerHealthDetails {
		if v == nil {
			return nil
		}
		return v.MabContainerHealthDetails
	}).(MABContainerHealthDetailsArrayOutput)
}

// Type of the protectable object associated with this container
func (o MabContainerPtrOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainer) *string {
		if v == nil {
			return nil
		}
		return v.ProtectableObjectType
	}).(pulumi.StringPtrOutput)
}

// Number of items backed up in this container.
func (o MabContainerPtrOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MabContainer) *float64 {
		if v == nil {
			return nil
		}
		return v.ProtectedItemCount
	}).(pulumi.Float64PtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o MabContainerPtrOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainer) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationStatus
	}).(pulumi.StringPtrOutput)
}

// Additional information of the container.
type MabContainerExtendedInfo struct {
	// Type of backup items associated with this container.
	BackupItemType *string `pulumi:"backupItemType"`
	// List of backup items associated with this container.
	BackupItems []string `pulumi:"backupItems"`
	// Latest backup status of this container.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Time stamp when this container was refreshed.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// Backup policy associated with this container.
	PolicyName *string `pulumi:"policyName"`
}

// MabContainerExtendedInfoInput is an input type that accepts MabContainerExtendedInfoArgs and MabContainerExtendedInfoOutput values.
// You can construct a concrete instance of `MabContainerExtendedInfoInput` via:
//
//	MabContainerExtendedInfoArgs{...}
type MabContainerExtendedInfoInput interface {
	pulumi.Input

	ToMabContainerExtendedInfoOutput() MabContainerExtendedInfoOutput
	ToMabContainerExtendedInfoOutputWithContext(context.Context) MabContainerExtendedInfoOutput
}

// Additional information of the container.
type MabContainerExtendedInfoArgs struct {
	// Type of backup items associated with this container.
	BackupItemType pulumi.StringPtrInput `pulumi:"backupItemType"`
	// List of backup items associated with this container.
	BackupItems pulumi.StringArrayInput `pulumi:"backupItems"`
	// Latest backup status of this container.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Time stamp when this container was refreshed.
	LastRefreshedAt pulumi.StringPtrInput `pulumi:"lastRefreshedAt"`
	// Backup policy associated with this container.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
}

func (MabContainerExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MabContainerExtendedInfo)(nil)).Elem()
}

func (i MabContainerExtendedInfoArgs) ToMabContainerExtendedInfoOutput() MabContainerExtendedInfoOutput {
	return i.ToMabContainerExtendedInfoOutputWithContext(context.Background())
}

func (i MabContainerExtendedInfoArgs) ToMabContainerExtendedInfoOutputWithContext(ctx context.Context) MabContainerExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabContainerExtendedInfoOutput)
}

func (i MabContainerExtendedInfoArgs) ToMabContainerExtendedInfoPtrOutput() MabContainerExtendedInfoPtrOutput {
	return i.ToMabContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i MabContainerExtendedInfoArgs) ToMabContainerExtendedInfoPtrOutputWithContext(ctx context.Context) MabContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabContainerExtendedInfoOutput).ToMabContainerExtendedInfoPtrOutputWithContext(ctx)
}

// MabContainerExtendedInfoPtrInput is an input type that accepts MabContainerExtendedInfoArgs, MabContainerExtendedInfoPtr and MabContainerExtendedInfoPtrOutput values.
// You can construct a concrete instance of `MabContainerExtendedInfoPtrInput` via:
//
//	        MabContainerExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type MabContainerExtendedInfoPtrInput interface {
	pulumi.Input

	ToMabContainerExtendedInfoPtrOutput() MabContainerExtendedInfoPtrOutput
	ToMabContainerExtendedInfoPtrOutputWithContext(context.Context) MabContainerExtendedInfoPtrOutput
}

type mabContainerExtendedInfoPtrType MabContainerExtendedInfoArgs

func MabContainerExtendedInfoPtr(v *MabContainerExtendedInfoArgs) MabContainerExtendedInfoPtrInput {
	return (*mabContainerExtendedInfoPtrType)(v)
}

func (*mabContainerExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MabContainerExtendedInfo)(nil)).Elem()
}

func (i *mabContainerExtendedInfoPtrType) ToMabContainerExtendedInfoPtrOutput() MabContainerExtendedInfoPtrOutput {
	return i.ToMabContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *mabContainerExtendedInfoPtrType) ToMabContainerExtendedInfoPtrOutputWithContext(ctx context.Context) MabContainerExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabContainerExtendedInfoPtrOutput)
}

// Additional information of the container.
type MabContainerExtendedInfoOutput struct{ *pulumi.OutputState }

func (MabContainerExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabContainerExtendedInfo)(nil)).Elem()
}

func (o MabContainerExtendedInfoOutput) ToMabContainerExtendedInfoOutput() MabContainerExtendedInfoOutput {
	return o
}

func (o MabContainerExtendedInfoOutput) ToMabContainerExtendedInfoOutputWithContext(ctx context.Context) MabContainerExtendedInfoOutput {
	return o
}

func (o MabContainerExtendedInfoOutput) ToMabContainerExtendedInfoPtrOutput() MabContainerExtendedInfoPtrOutput {
	return o.ToMabContainerExtendedInfoPtrOutputWithContext(context.Background())
}

func (o MabContainerExtendedInfoOutput) ToMabContainerExtendedInfoPtrOutputWithContext(ctx context.Context) MabContainerExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MabContainerExtendedInfo) *MabContainerExtendedInfo {
		return &v
	}).(MabContainerExtendedInfoPtrOutput)
}

// Type of backup items associated with this container.
func (o MabContainerExtendedInfoOutput) BackupItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfo) *string { return v.BackupItemType }).(pulumi.StringPtrOutput)
}

// List of backup items associated with this container.
func (o MabContainerExtendedInfoOutput) BackupItems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MabContainerExtendedInfo) []string { return v.BackupItems }).(pulumi.StringArrayOutput)
}

// Latest backup status of this container.
func (o MabContainerExtendedInfoOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfo) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was refreshed.
func (o MabContainerExtendedInfoOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfo) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

// Backup policy associated with this container.
func (o MabContainerExtendedInfoOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfo) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

type MabContainerExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (MabContainerExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MabContainerExtendedInfo)(nil)).Elem()
}

func (o MabContainerExtendedInfoPtrOutput) ToMabContainerExtendedInfoPtrOutput() MabContainerExtendedInfoPtrOutput {
	return o
}

func (o MabContainerExtendedInfoPtrOutput) ToMabContainerExtendedInfoPtrOutputWithContext(ctx context.Context) MabContainerExtendedInfoPtrOutput {
	return o
}

func (o MabContainerExtendedInfoPtrOutput) Elem() MabContainerExtendedInfoOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfo) MabContainerExtendedInfo {
		if v != nil {
			return *v
		}
		var ret MabContainerExtendedInfo
		return ret
	}).(MabContainerExtendedInfoOutput)
}

// Type of backup items associated with this container.
func (o MabContainerExtendedInfoPtrOutput) BackupItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.BackupItemType
	}).(pulumi.StringPtrOutput)
}

// List of backup items associated with this container.
func (o MabContainerExtendedInfoPtrOutput) BackupItems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfo) []string {
		if v == nil {
			return nil
		}
		return v.BackupItems
	}).(pulumi.StringArrayOutput)
}

// Latest backup status of this container.
func (o MabContainerExtendedInfoPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Time stamp when this container was refreshed.
func (o MabContainerExtendedInfoPtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// Backup policy associated with this container.
func (o MabContainerExtendedInfoPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Additional information of the container.
type MabContainerExtendedInfoResponse struct {
	// Type of backup items associated with this container.
	BackupItemType *string `pulumi:"backupItemType"`
	// List of backup items associated with this container.
	BackupItems []string `pulumi:"backupItems"`
	// Latest backup status of this container.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Time stamp when this container was refreshed.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// Backup policy associated with this container.
	PolicyName *string `pulumi:"policyName"`
}

// Additional information of the container.
type MabContainerExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (MabContainerExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabContainerExtendedInfoResponse)(nil)).Elem()
}

func (o MabContainerExtendedInfoResponseOutput) ToMabContainerExtendedInfoResponseOutput() MabContainerExtendedInfoResponseOutput {
	return o
}

func (o MabContainerExtendedInfoResponseOutput) ToMabContainerExtendedInfoResponseOutputWithContext(ctx context.Context) MabContainerExtendedInfoResponseOutput {
	return o
}

// Type of backup items associated with this container.
func (o MabContainerExtendedInfoResponseOutput) BackupItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfoResponse) *string { return v.BackupItemType }).(pulumi.StringPtrOutput)
}

// List of backup items associated with this container.
func (o MabContainerExtendedInfoResponseOutput) BackupItems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MabContainerExtendedInfoResponse) []string { return v.BackupItems }).(pulumi.StringArrayOutput)
}

// Latest backup status of this container.
func (o MabContainerExtendedInfoResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfoResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Time stamp when this container was refreshed.
func (o MabContainerExtendedInfoResponseOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfoResponse) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

// Backup policy associated with this container.
func (o MabContainerExtendedInfoResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerExtendedInfoResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

type MabContainerExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (MabContainerExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MabContainerExtendedInfoResponse)(nil)).Elem()
}

func (o MabContainerExtendedInfoResponsePtrOutput) ToMabContainerExtendedInfoResponsePtrOutput() MabContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o MabContainerExtendedInfoResponsePtrOutput) ToMabContainerExtendedInfoResponsePtrOutputWithContext(ctx context.Context) MabContainerExtendedInfoResponsePtrOutput {
	return o
}

func (o MabContainerExtendedInfoResponsePtrOutput) Elem() MabContainerExtendedInfoResponseOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) MabContainerExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret MabContainerExtendedInfoResponse
		return ret
	}).(MabContainerExtendedInfoResponseOutput)
}

// Type of backup items associated with this container.
func (o MabContainerExtendedInfoResponsePtrOutput) BackupItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.BackupItemType
	}).(pulumi.StringPtrOutput)
}

// List of backup items associated with this container.
func (o MabContainerExtendedInfoResponsePtrOutput) BackupItems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) []string {
		if v == nil {
			return nil
		}
		return v.BackupItems
	}).(pulumi.StringArrayOutput)
}

// Latest backup status of this container.
func (o MabContainerExtendedInfoResponsePtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Time stamp when this container was refreshed.
func (o MabContainerExtendedInfoResponsePtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// Backup policy associated with this container.
func (o MabContainerExtendedInfoResponsePtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabContainerExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Container with items backed up using MAB backup engine.
type MabContainerResponse struct {
	// Agent version of this container.
	AgentVersion *string `pulumi:"agentVersion"`
	// Type of backup management for the container.
	BackupManagementType *string `pulumi:"backupManagementType"`
	// Can the container be registered one more time.
	CanReRegister *bool `pulumi:"canReRegister"`
	// Health state of mab container.
	ContainerHealthState *string `pulumi:"containerHealthState"`
	// ContainerID represents the container.
	ContainerId *float64 `pulumi:"containerId"`
	// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
	// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
	// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
	// Backup is VMAppContainer
	// Expected value is 'Windows'.
	ContainerType string `pulumi:"containerType"`
	// Additional information for this container
	ExtendedInfo *MabContainerExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of the container.
	FriendlyName *string `pulumi:"friendlyName"`
	// Status of health of the container.
	HealthStatus *string `pulumi:"healthStatus"`
	// Health details on this mab container.
	MabContainerHealthDetails []MABContainerHealthDetailsResponse `pulumi:"mabContainerHealthDetails"`
	// Type of the protectable object associated with this container
	ProtectableObjectType *string `pulumi:"protectableObjectType"`
	// Number of items backed up in this container.
	ProtectedItemCount *float64 `pulumi:"protectedItemCount"`
	// Status of registration of the container with the Recovery Services Vault.
	RegistrationStatus *string `pulumi:"registrationStatus"`
}

// Container with items backed up using MAB backup engine.
type MabContainerResponseOutput struct{ *pulumi.OutputState }

func (MabContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabContainerResponse)(nil)).Elem()
}

func (o MabContainerResponseOutput) ToMabContainerResponseOutput() MabContainerResponseOutput {
	return o
}

func (o MabContainerResponseOutput) ToMabContainerResponseOutputWithContext(ctx context.Context) MabContainerResponseOutput {
	return o
}

// Agent version of this container.
func (o MabContainerResponseOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// Type of backup management for the container.
func (o MabContainerResponseOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.BackupManagementType }).(pulumi.StringPtrOutput)
}

// Can the container be registered one more time.
func (o MabContainerResponseOutput) CanReRegister() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *bool { return v.CanReRegister }).(pulumi.BoolPtrOutput)
}

// Health state of mab container.
func (o MabContainerResponseOutput) ContainerHealthState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.ContainerHealthState }).(pulumi.StringPtrOutput)
}

// ContainerID represents the container.
func (o MabContainerResponseOutput) ContainerId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *float64 { return v.ContainerId }).(pulumi.Float64PtrOutput)
}

// Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
// Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
// Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
// Backup is VMAppContainer
// Expected value is 'Windows'.
func (o MabContainerResponseOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v MabContainerResponse) string { return v.ContainerType }).(pulumi.StringOutput)
}

// Additional information for this container
func (o MabContainerResponseOutput) ExtendedInfo() MabContainerExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *MabContainerExtendedInfoResponse { return v.ExtendedInfo }).(MabContainerExtendedInfoResponsePtrOutput)
}

// Friendly name of the container.
func (o MabContainerResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Status of health of the container.
func (o MabContainerResponseOutput) HealthStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.HealthStatus }).(pulumi.StringPtrOutput)
}

// Health details on this mab container.
func (o MabContainerResponseOutput) MabContainerHealthDetails() MABContainerHealthDetailsResponseArrayOutput {
	return o.ApplyT(func(v MabContainerResponse) []MABContainerHealthDetailsResponse { return v.MabContainerHealthDetails }).(MABContainerHealthDetailsResponseArrayOutput)
}

// Type of the protectable object associated with this container
func (o MabContainerResponseOutput) ProtectableObjectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.ProtectableObjectType }).(pulumi.StringPtrOutput)
}

// Number of items backed up in this container.
func (o MabContainerResponseOutput) ProtectedItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *float64 { return v.ProtectedItemCount }).(pulumi.Float64PtrOutput)
}

// Status of registration of the container with the Recovery Services Vault.
func (o MabContainerResponseOutput) RegistrationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabContainerResponse) *string { return v.RegistrationStatus }).(pulumi.StringPtrOutput)
}

// MAB workload-specific backup item.
type MabFileFolderProtectedItem struct {
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Name of the computer associated with this backup item.
	ComputerName *string `pulumi:"computerName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Sync time for deferred deletion in UTC
	DeferredDeleteSyncTimeInUTC *float64 `pulumi:"deferredDeleteSyncTimeInUTC"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo *MabFileFolderProtectedItemExtendedInfo `pulumi:"extendedInfo"`
	// Friendly name of this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Status of last backup operation.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'MabFileFolderProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Protected, ProtectionStopped, IRPending or ProtectionError
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// MabFileFolderProtectedItemInput is an input type that accepts MabFileFolderProtectedItemArgs and MabFileFolderProtectedItemOutput values.
// You can construct a concrete instance of `MabFileFolderProtectedItemInput` via:
//
//	MabFileFolderProtectedItemArgs{...}
type MabFileFolderProtectedItemInput interface {
	pulumi.Input

	ToMabFileFolderProtectedItemOutput() MabFileFolderProtectedItemOutput
	ToMabFileFolderProtectedItemOutputWithContext(context.Context) MabFileFolderProtectedItemOutput
}

// MAB workload-specific backup item.
type MabFileFolderProtectedItemArgs struct {
	// Name of the backup set the backup item belongs to
	BackupSetName pulumi.StringPtrInput `pulumi:"backupSetName"`
	// Name of the computer associated with this backup item.
	ComputerName pulumi.StringPtrInput `pulumi:"computerName"`
	// Unique name of container
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode pulumi.StringPtrInput `pulumi:"createMode"`
	// Sync time for deferred deletion in UTC
	DeferredDeleteSyncTimeInUTC pulumi.Float64PtrInput `pulumi:"deferredDeleteSyncTimeInUTC"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC pulumi.StringPtrInput `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining pulumi.StringPtrInput `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo MabFileFolderProtectedItemExtendedInfoPtrInput `pulumi:"extendedInfo"`
	// Friendly name of this backup item.
	FriendlyName pulumi.StringPtrInput `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled pulumi.BoolPtrInput `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming pulumi.BoolPtrInput `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate pulumi.BoolPtrInput `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete pulumi.BoolPtrInput `pulumi:"isScheduledForDeferredDelete"`
	// Status of last backup operation.
	LastBackupStatus pulumi.StringPtrInput `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime pulumi.StringPtrInput `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint pulumi.StringPtrInput `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'MabFileFolderProtectedItem'.
	ProtectedItemType pulumi.StringInput `pulumi:"protectedItemType"`
	// Protected, ProtectionStopped, IRPending or ProtectionError
	ProtectionState pulumi.StringPtrInput `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (MabFileFolderProtectedItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MabFileFolderProtectedItem)(nil)).Elem()
}

func (i MabFileFolderProtectedItemArgs) ToMabFileFolderProtectedItemOutput() MabFileFolderProtectedItemOutput {
	return i.ToMabFileFolderProtectedItemOutputWithContext(context.Background())
}

func (i MabFileFolderProtectedItemArgs) ToMabFileFolderProtectedItemOutputWithContext(ctx context.Context) MabFileFolderProtectedItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabFileFolderProtectedItemOutput)
}

func (i MabFileFolderProtectedItemArgs) ToMabFileFolderProtectedItemPtrOutput() MabFileFolderProtectedItemPtrOutput {
	return i.ToMabFileFolderProtectedItemPtrOutputWithContext(context.Background())
}

func (i MabFileFolderProtectedItemArgs) ToMabFileFolderProtectedItemPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabFileFolderProtectedItemOutput).ToMabFileFolderProtectedItemPtrOutputWithContext(ctx)
}

// MabFileFolderProtectedItemPtrInput is an input type that accepts MabFileFolderProtectedItemArgs, MabFileFolderProtectedItemPtr and MabFileFolderProtectedItemPtrOutput values.
// You can construct a concrete instance of `MabFileFolderProtectedItemPtrInput` via:
//
//	        MabFileFolderProtectedItemArgs{...}
//
//	or:
//
//	        nil
type MabFileFolderProtectedItemPtrInput interface {
	pulumi.Input

	ToMabFileFolderProtectedItemPtrOutput() MabFileFolderProtectedItemPtrOutput
	ToMabFileFolderProtectedItemPtrOutputWithContext(context.Context) MabFileFolderProtectedItemPtrOutput
}

type mabFileFolderProtectedItemPtrType MabFileFolderProtectedItemArgs

func MabFileFolderProtectedItemPtr(v *MabFileFolderProtectedItemArgs) MabFileFolderProtectedItemPtrInput {
	return (*mabFileFolderProtectedItemPtrType)(v)
}

func (*mabFileFolderProtectedItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MabFileFolderProtectedItem)(nil)).Elem()
}

func (i *mabFileFolderProtectedItemPtrType) ToMabFileFolderProtectedItemPtrOutput() MabFileFolderProtectedItemPtrOutput {
	return i.ToMabFileFolderProtectedItemPtrOutputWithContext(context.Background())
}

func (i *mabFileFolderProtectedItemPtrType) ToMabFileFolderProtectedItemPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabFileFolderProtectedItemPtrOutput)
}

// MAB workload-specific backup item.
type MabFileFolderProtectedItemOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabFileFolderProtectedItem)(nil)).Elem()
}

func (o MabFileFolderProtectedItemOutput) ToMabFileFolderProtectedItemOutput() MabFileFolderProtectedItemOutput {
	return o
}

func (o MabFileFolderProtectedItemOutput) ToMabFileFolderProtectedItemOutputWithContext(ctx context.Context) MabFileFolderProtectedItemOutput {
	return o
}

func (o MabFileFolderProtectedItemOutput) ToMabFileFolderProtectedItemPtrOutput() MabFileFolderProtectedItemPtrOutput {
	return o.ToMabFileFolderProtectedItemPtrOutputWithContext(context.Background())
}

func (o MabFileFolderProtectedItemOutput) ToMabFileFolderProtectedItemPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MabFileFolderProtectedItem) *MabFileFolderProtectedItem {
		return &v
	}).(MabFileFolderProtectedItemPtrOutput)
}

// Name of the backup set the backup item belongs to
func (o MabFileFolderProtectedItemOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Name of the computer associated with this backup item.
func (o MabFileFolderProtectedItemOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.ComputerName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o MabFileFolderProtectedItemOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o MabFileFolderProtectedItemOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Sync time for deferred deletion in UTC
func (o MabFileFolderProtectedItemOutput) DeferredDeleteSyncTimeInUTC() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *float64 { return v.DeferredDeleteSyncTimeInUTC }).(pulumi.Float64PtrOutput)
}

// Time for deferred deletion in UTC
func (o MabFileFolderProtectedItemOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o MabFileFolderProtectedItemOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information with this backup item.
func (o MabFileFolderProtectedItemOutput) ExtendedInfo() MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *MabFileFolderProtectedItemExtendedInfo { return v.ExtendedInfo }).(MabFileFolderProtectedItemExtendedInfoPtrOutput)
}

// Friendly name of this backup item.
func (o MabFileFolderProtectedItemOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o MabFileFolderProtectedItemOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o MabFileFolderProtectedItemOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o MabFileFolderProtectedItemOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o MabFileFolderProtectedItemOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Status of last backup operation.
func (o MabFileFolderProtectedItemOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o MabFileFolderProtectedItemOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o MabFileFolderProtectedItemOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o MabFileFolderProtectedItemOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o MabFileFolderProtectedItemOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'MabFileFolderProtectedItem'.
func (o MabFileFolderProtectedItemOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Protected, ProtectionStopped, IRPending or ProtectionError
func (o MabFileFolderProtectedItemOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o MabFileFolderProtectedItemOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o MabFileFolderProtectedItemOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o MabFileFolderProtectedItemOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItem) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type MabFileFolderProtectedItemPtrOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MabFileFolderProtectedItem)(nil)).Elem()
}

func (o MabFileFolderProtectedItemPtrOutput) ToMabFileFolderProtectedItemPtrOutput() MabFileFolderProtectedItemPtrOutput {
	return o
}

func (o MabFileFolderProtectedItemPtrOutput) ToMabFileFolderProtectedItemPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemPtrOutput {
	return o
}

func (o MabFileFolderProtectedItemPtrOutput) Elem() MabFileFolderProtectedItemOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) MabFileFolderProtectedItem {
		if v != nil {
			return *v
		}
		var ret MabFileFolderProtectedItem
		return ret
	}).(MabFileFolderProtectedItemOutput)
}

// Name of the backup set the backup item belongs to
func (o MabFileFolderProtectedItemPtrOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.BackupSetName
	}).(pulumi.StringPtrOutput)
}

// Name of the computer associated with this backup item.
func (o MabFileFolderProtectedItemPtrOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ComputerName
	}).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o MabFileFolderProtectedItemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o MabFileFolderProtectedItemPtrOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.CreateMode
	}).(pulumi.StringPtrOutput)
}

// Sync time for deferred deletion in UTC
func (o MabFileFolderProtectedItemPtrOutput) DeferredDeleteSyncTimeInUTC() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *float64 {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteSyncTimeInUTC
	}).(pulumi.Float64PtrOutput)
}

// Time for deferred deletion in UTC
func (o MabFileFolderProtectedItemPtrOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeInUTC
	}).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o MabFileFolderProtectedItemPtrOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.DeferredDeleteTimeRemaining
	}).(pulumi.StringPtrOutput)
}

// Additional information with this backup item.
func (o MabFileFolderProtectedItemPtrOutput) ExtendedInfo() MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *MabFileFolderProtectedItemExtendedInfo {
		if v == nil {
			return nil
		}
		return v.ExtendedInfo
	}).(MabFileFolderProtectedItemExtendedInfoPtrOutput)
}

// Friendly name of this backup item.
func (o MabFileFolderProtectedItemPtrOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.FriendlyName
	}).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o MabFileFolderProtectedItemPtrOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsArchiveEnabled
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o MabFileFolderProtectedItemPtrOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsDeferredDeleteScheduleUpcoming
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o MabFileFolderProtectedItemPtrOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsRehydrate
	}).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o MabFileFolderProtectedItemPtrOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *bool {
		if v == nil {
			return nil
		}
		return v.IsScheduledForDeferredDelete
	}).(pulumi.BoolPtrOutput)
}

// Status of last backup operation.
func (o MabFileFolderProtectedItemPtrOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupStatus
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o MabFileFolderProtectedItemPtrOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastBackupTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o MabFileFolderProtectedItemPtrOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.LastRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o MabFileFolderProtectedItemPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o MabFileFolderProtectedItemPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'MabFileFolderProtectedItem'.
func (o MabFileFolderProtectedItemPtrOutput) ProtectedItemType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return &v.ProtectedItemType
	}).(pulumi.StringPtrOutput)
}

// Protected, ProtectionStopped, IRPending or ProtectionError
func (o MabFileFolderProtectedItemPtrOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionState
	}).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o MabFileFolderProtectedItemPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o MabFileFolderProtectedItemPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o MabFileFolderProtectedItemPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItem) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Additional information on the backed up item.
type MabFileFolderProtectedItemExtendedInfo struct {
	// Last time when the agent data synced to service.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// The oldest backup copy available.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Number of backup copies associated with the backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// MabFileFolderProtectedItemExtendedInfoInput is an input type that accepts MabFileFolderProtectedItemExtendedInfoArgs and MabFileFolderProtectedItemExtendedInfoOutput values.
// You can construct a concrete instance of `MabFileFolderProtectedItemExtendedInfoInput` via:
//
//	MabFileFolderProtectedItemExtendedInfoArgs{...}
type MabFileFolderProtectedItemExtendedInfoInput interface {
	pulumi.Input

	ToMabFileFolderProtectedItemExtendedInfoOutput() MabFileFolderProtectedItemExtendedInfoOutput
	ToMabFileFolderProtectedItemExtendedInfoOutputWithContext(context.Context) MabFileFolderProtectedItemExtendedInfoOutput
}

// Additional information on the backed up item.
type MabFileFolderProtectedItemExtendedInfoArgs struct {
	// Last time when the agent data synced to service.
	LastRefreshedAt pulumi.StringPtrInput `pulumi:"lastRefreshedAt"`
	// The oldest backup copy available.
	OldestRecoveryPoint pulumi.StringPtrInput `pulumi:"oldestRecoveryPoint"`
	// Number of backup copies associated with the backup item.
	RecoveryPointCount pulumi.IntPtrInput `pulumi:"recoveryPointCount"`
}

func (MabFileFolderProtectedItemExtendedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MabFileFolderProtectedItemExtendedInfo)(nil)).Elem()
}

func (i MabFileFolderProtectedItemExtendedInfoArgs) ToMabFileFolderProtectedItemExtendedInfoOutput() MabFileFolderProtectedItemExtendedInfoOutput {
	return i.ToMabFileFolderProtectedItemExtendedInfoOutputWithContext(context.Background())
}

func (i MabFileFolderProtectedItemExtendedInfoArgs) ToMabFileFolderProtectedItemExtendedInfoOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabFileFolderProtectedItemExtendedInfoOutput)
}

func (i MabFileFolderProtectedItemExtendedInfoArgs) ToMabFileFolderProtectedItemExtendedInfoPtrOutput() MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return i.ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i MabFileFolderProtectedItemExtendedInfoArgs) ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabFileFolderProtectedItemExtendedInfoOutput).ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(ctx)
}

// MabFileFolderProtectedItemExtendedInfoPtrInput is an input type that accepts MabFileFolderProtectedItemExtendedInfoArgs, MabFileFolderProtectedItemExtendedInfoPtr and MabFileFolderProtectedItemExtendedInfoPtrOutput values.
// You can construct a concrete instance of `MabFileFolderProtectedItemExtendedInfoPtrInput` via:
//
//	        MabFileFolderProtectedItemExtendedInfoArgs{...}
//
//	or:
//
//	        nil
type MabFileFolderProtectedItemExtendedInfoPtrInput interface {
	pulumi.Input

	ToMabFileFolderProtectedItemExtendedInfoPtrOutput() MabFileFolderProtectedItemExtendedInfoPtrOutput
	ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(context.Context) MabFileFolderProtectedItemExtendedInfoPtrOutput
}

type mabFileFolderProtectedItemExtendedInfoPtrType MabFileFolderProtectedItemExtendedInfoArgs

func MabFileFolderProtectedItemExtendedInfoPtr(v *MabFileFolderProtectedItemExtendedInfoArgs) MabFileFolderProtectedItemExtendedInfoPtrInput {
	return (*mabFileFolderProtectedItemExtendedInfoPtrType)(v)
}

func (*mabFileFolderProtectedItemExtendedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MabFileFolderProtectedItemExtendedInfo)(nil)).Elem()
}

func (i *mabFileFolderProtectedItemExtendedInfoPtrType) ToMabFileFolderProtectedItemExtendedInfoPtrOutput() MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return i.ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (i *mabFileFolderProtectedItemExtendedInfoPtrType) ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabFileFolderProtectedItemExtendedInfoPtrOutput)
}

// Additional information on the backed up item.
type MabFileFolderProtectedItemExtendedInfoOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemExtendedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabFileFolderProtectedItemExtendedInfo)(nil)).Elem()
}

func (o MabFileFolderProtectedItemExtendedInfoOutput) ToMabFileFolderProtectedItemExtendedInfoOutput() MabFileFolderProtectedItemExtendedInfoOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoOutput) ToMabFileFolderProtectedItemExtendedInfoOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoOutput) ToMabFileFolderProtectedItemExtendedInfoPtrOutput() MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return o.ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(context.Background())
}

func (o MabFileFolderProtectedItemExtendedInfoOutput) ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MabFileFolderProtectedItemExtendedInfo) *MabFileFolderProtectedItemExtendedInfo {
		return &v
	}).(MabFileFolderProtectedItemExtendedInfoPtrOutput)
}

// Last time when the agent data synced to service.
func (o MabFileFolderProtectedItemExtendedInfoOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemExtendedInfo) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available.
func (o MabFileFolderProtectedItemExtendedInfoOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemExtendedInfo) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Number of backup copies associated with the backup item.
func (o MabFileFolderProtectedItemExtendedInfoOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemExtendedInfo) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type MabFileFolderProtectedItemExtendedInfoPtrOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemExtendedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MabFileFolderProtectedItemExtendedInfo)(nil)).Elem()
}

func (o MabFileFolderProtectedItemExtendedInfoPtrOutput) ToMabFileFolderProtectedItemExtendedInfoPtrOutput() MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoPtrOutput) ToMabFileFolderProtectedItemExtendedInfoPtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoPtrOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoPtrOutput) Elem() MabFileFolderProtectedItemExtendedInfoOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfo) MabFileFolderProtectedItemExtendedInfo {
		if v != nil {
			return *v
		}
		var ret MabFileFolderProtectedItemExtendedInfo
		return ret
	}).(MabFileFolderProtectedItemExtendedInfoOutput)
}

// Last time when the agent data synced to service.
func (o MabFileFolderProtectedItemExtendedInfoPtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available.
func (o MabFileFolderProtectedItemExtendedInfoPtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfo) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Number of backup copies associated with the backup item.
func (o MabFileFolderProtectedItemExtendedInfoPtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfo) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// Additional information on the backed up item.
type MabFileFolderProtectedItemExtendedInfoResponse struct {
	// Last time when the agent data synced to service.
	LastRefreshedAt *string `pulumi:"lastRefreshedAt"`
	// The oldest backup copy available.
	OldestRecoveryPoint *string `pulumi:"oldestRecoveryPoint"`
	// Number of backup copies associated with the backup item.
	RecoveryPointCount *int `pulumi:"recoveryPointCount"`
}

// Additional information on the backed up item.
type MabFileFolderProtectedItemExtendedInfoResponseOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemExtendedInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabFileFolderProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) ToMabFileFolderProtectedItemExtendedInfoResponseOutput() MabFileFolderProtectedItemExtendedInfoResponseOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) ToMabFileFolderProtectedItemExtendedInfoResponseOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoResponseOutput {
	return o
}

// Last time when the agent data synced to service.
func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemExtendedInfoResponse) *string { return v.LastRefreshedAt }).(pulumi.StringPtrOutput)
}

// The oldest backup copy available.
func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemExtendedInfoResponse) *string { return v.OldestRecoveryPoint }).(pulumi.StringPtrOutput)
}

// Number of backup copies associated with the backup item.
func (o MabFileFolderProtectedItemExtendedInfoResponseOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemExtendedInfoResponse) *int { return v.RecoveryPointCount }).(pulumi.IntPtrOutput)
}

type MabFileFolderProtectedItemExtendedInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MabFileFolderProtectedItemExtendedInfoResponse)(nil)).Elem()
}

func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) ToMabFileFolderProtectedItemExtendedInfoResponsePtrOutput() MabFileFolderProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) ToMabFileFolderProtectedItemExtendedInfoResponsePtrOutputWithContext(ctx context.Context) MabFileFolderProtectedItemExtendedInfoResponsePtrOutput {
	return o
}

func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) Elem() MabFileFolderProtectedItemExtendedInfoResponseOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfoResponse) MabFileFolderProtectedItemExtendedInfoResponse {
		if v != nil {
			return *v
		}
		var ret MabFileFolderProtectedItemExtendedInfoResponse
		return ret
	}).(MabFileFolderProtectedItemExtendedInfoResponseOutput)
}

// Last time when the agent data synced to service.
func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) LastRefreshedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastRefreshedAt
	}).(pulumi.StringPtrOutput)
}

// The oldest backup copy available.
func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) OldestRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.OldestRecoveryPoint
	}).(pulumi.StringPtrOutput)
}

// Number of backup copies associated with the backup item.
func (o MabFileFolderProtectedItemExtendedInfoResponsePtrOutput) RecoveryPointCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MabFileFolderProtectedItemExtendedInfoResponse) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryPointCount
	}).(pulumi.IntPtrOutput)
}

// MAB workload-specific backup item.
type MabFileFolderProtectedItemResponse struct {
	// Type of backup management for the backed up item.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Name of the backup set the backup item belongs to
	BackupSetName *string `pulumi:"backupSetName"`
	// Name of the computer associated with this backup item.
	ComputerName *string `pulumi:"computerName"`
	// Unique name of container
	ContainerName *string `pulumi:"containerName"`
	// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
	CreateMode *string `pulumi:"createMode"`
	// Sync time for deferred deletion in UTC
	DeferredDeleteSyncTimeInUTC *float64 `pulumi:"deferredDeleteSyncTimeInUTC"`
	// Time for deferred deletion in UTC
	DeferredDeleteTimeInUTC *string `pulumi:"deferredDeleteTimeInUTC"`
	// Time remaining before the DS marked for deferred delete is permanently deleted
	DeferredDeleteTimeRemaining *string `pulumi:"deferredDeleteTimeRemaining"`
	// Additional information with this backup item.
	ExtendedInfo *MabFileFolderProtectedItemExtendedInfoResponse `pulumi:"extendedInfo"`
	// Friendly name of this backup item.
	FriendlyName *string `pulumi:"friendlyName"`
	// Flag to identify whether datasource is protected in archive
	IsArchiveEnabled *bool `pulumi:"isArchiveEnabled"`
	// Flag to identify whether the deferred deleted DS is to be purged soon
	IsDeferredDeleteScheduleUpcoming *bool `pulumi:"isDeferredDeleteScheduleUpcoming"`
	// Flag to identify that deferred deleted DS is to be moved into Pause state
	IsRehydrate *bool `pulumi:"isRehydrate"`
	// Flag to identify whether the DS is scheduled for deferred delete
	IsScheduledForDeferredDelete *bool `pulumi:"isScheduledForDeferredDelete"`
	// Status of last backup operation.
	LastBackupStatus *string `pulumi:"lastBackupStatus"`
	// Timestamp of the last backup operation on this backup item.
	LastBackupTime *string `pulumi:"lastBackupTime"`
	// Timestamp when the last (latest) backup copy was created for this backup item.
	LastRecoveryPoint *string `pulumi:"lastRecoveryPoint"`
	// ID of the backup policy with which this item is backed up.
	PolicyId *string `pulumi:"policyId"`
	// Name of the policy used for protection
	PolicyName *string `pulumi:"policyName"`
	// backup item type.
	// Expected value is 'MabFileFolderProtectedItem'.
	ProtectedItemType string `pulumi:"protectedItemType"`
	// Protected, ProtectionStopped, IRPending or ProtectionError
	ProtectionState *string `pulumi:"protectionState"`
	// ResourceGuardOperationRequests on which LAC check will be performed
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int `pulumi:"softDeleteRetentionPeriodInDays"`
	// ARM ID of the resource to be backed up.
	SourceResourceId *string `pulumi:"sourceResourceId"`
	// ID of the vault which protects this item
	VaultId string `pulumi:"vaultId"`
	// Type of workload this item represents.
	WorkloadType string `pulumi:"workloadType"`
}

// MAB workload-specific backup item.
type MabFileFolderProtectedItemResponseOutput struct{ *pulumi.OutputState }

func (MabFileFolderProtectedItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabFileFolderProtectedItemResponse)(nil)).Elem()
}

func (o MabFileFolderProtectedItemResponseOutput) ToMabFileFolderProtectedItemResponseOutput() MabFileFolderProtectedItemResponseOutput {
	return o
}

func (o MabFileFolderProtectedItemResponseOutput) ToMabFileFolderProtectedItemResponseOutputWithContext(ctx context.Context) MabFileFolderProtectedItemResponseOutput {
	return o
}

// Type of backup management for the backed up item.
func (o MabFileFolderProtectedItemResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Name of the backup set the backup item belongs to
func (o MabFileFolderProtectedItemResponseOutput) BackupSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.BackupSetName }).(pulumi.StringPtrOutput)
}

// Name of the computer associated with this backup item.
func (o MabFileFolderProtectedItemResponseOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.ComputerName }).(pulumi.StringPtrOutput)
}

// Unique name of container
func (o MabFileFolderProtectedItemResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Create mode to indicate recovery of existing soft deleted data source or creation of new data source.
func (o MabFileFolderProtectedItemResponseOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// Sync time for deferred deletion in UTC
func (o MabFileFolderProtectedItemResponseOutput) DeferredDeleteSyncTimeInUTC() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *float64 { return v.DeferredDeleteSyncTimeInUTC }).(pulumi.Float64PtrOutput)
}

// Time for deferred deletion in UTC
func (o MabFileFolderProtectedItemResponseOutput) DeferredDeleteTimeInUTC() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.DeferredDeleteTimeInUTC }).(pulumi.StringPtrOutput)
}

// Time remaining before the DS marked for deferred delete is permanently deleted
func (o MabFileFolderProtectedItemResponseOutput) DeferredDeleteTimeRemaining() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.DeferredDeleteTimeRemaining }).(pulumi.StringPtrOutput)
}

// Additional information with this backup item.
func (o MabFileFolderProtectedItemResponseOutput) ExtendedInfo() MabFileFolderProtectedItemExtendedInfoResponsePtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *MabFileFolderProtectedItemExtendedInfoResponse {
		return v.ExtendedInfo
	}).(MabFileFolderProtectedItemExtendedInfoResponsePtrOutput)
}

// Friendly name of this backup item.
func (o MabFileFolderProtectedItemResponseOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Flag to identify whether datasource is protected in archive
func (o MabFileFolderProtectedItemResponseOutput) IsArchiveEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *bool { return v.IsArchiveEnabled }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the deferred deleted DS is to be purged soon
func (o MabFileFolderProtectedItemResponseOutput) IsDeferredDeleteScheduleUpcoming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *bool { return v.IsDeferredDeleteScheduleUpcoming }).(pulumi.BoolPtrOutput)
}

// Flag to identify that deferred deleted DS is to be moved into Pause state
func (o MabFileFolderProtectedItemResponseOutput) IsRehydrate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *bool { return v.IsRehydrate }).(pulumi.BoolPtrOutput)
}

// Flag to identify whether the DS is scheduled for deferred delete
func (o MabFileFolderProtectedItemResponseOutput) IsScheduledForDeferredDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *bool { return v.IsScheduledForDeferredDelete }).(pulumi.BoolPtrOutput)
}

// Status of last backup operation.
func (o MabFileFolderProtectedItemResponseOutput) LastBackupStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.LastBackupStatus }).(pulumi.StringPtrOutput)
}

// Timestamp of the last backup operation on this backup item.
func (o MabFileFolderProtectedItemResponseOutput) LastBackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.LastBackupTime }).(pulumi.StringPtrOutput)
}

// Timestamp when the last (latest) backup copy was created for this backup item.
func (o MabFileFolderProtectedItemResponseOutput) LastRecoveryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.LastRecoveryPoint }).(pulumi.StringPtrOutput)
}

// ID of the backup policy with which this item is backed up.
func (o MabFileFolderProtectedItemResponseOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// Name of the policy used for protection
func (o MabFileFolderProtectedItemResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// backup item type.
// Expected value is 'MabFileFolderProtectedItem'.
func (o MabFileFolderProtectedItemResponseOutput) ProtectedItemType() pulumi.StringOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) string { return v.ProtectedItemType }).(pulumi.StringOutput)
}

// Protected, ProtectionStopped, IRPending or ProtectionError
func (o MabFileFolderProtectedItemResponseOutput) ProtectionState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.ProtectionState }).(pulumi.StringPtrOutput)
}

// ResourceGuardOperationRequests on which LAC check will be performed
func (o MabFileFolderProtectedItemResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Soft delete retention period in days
func (o MabFileFolderProtectedItemResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// ARM ID of the resource to be backed up.
func (o MabFileFolderProtectedItemResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

// ID of the vault which protects this item
func (o MabFileFolderProtectedItemResponseOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) string { return v.VaultId }).(pulumi.StringOutput)
}

// Type of workload this item represents.
func (o MabFileFolderProtectedItemResponseOutput) WorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v MabFileFolderProtectedItemResponse) string { return v.WorkloadType }).(pulumi.StringOutput)
}

// Mab container-specific backup policy.
type MabProtectionPolicy struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'MAB'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy details.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
}

// MabProtectionPolicyInput is an input type that accepts MabProtectionPolicyArgs and MabProtectionPolicyOutput values.
// You can construct a concrete instance of `MabProtectionPolicyInput` via:
//
//	MabProtectionPolicyArgs{...}
type MabProtectionPolicyInput interface {
	pulumi.Input

	ToMabProtectionPolicyOutput() MabProtectionPolicyOutput
	ToMabProtectionPolicyOutputWithContext(context.Context) MabProtectionPolicyOutput
}

// Mab container-specific backup policy.
type MabProtectionPolicyArgs struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'MAB'.
	BackupManagementType pulumi.StringInput `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount pulumi.IntPtrInput `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests pulumi.StringArrayInput `pulumi:"resourceGuardOperationRequests"`
	// Retention policy details.
	RetentionPolicy pulumi.Input `pulumi:"retentionPolicy"`
	// Backup schedule of backup policy.
	SchedulePolicy pulumi.Input `pulumi:"schedulePolicy"`
}

func (MabProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MabProtectionPolicy)(nil)).Elem()
}

func (i MabProtectionPolicyArgs) ToMabProtectionPolicyOutput() MabProtectionPolicyOutput {
	return i.ToMabProtectionPolicyOutputWithContext(context.Background())
}

func (i MabProtectionPolicyArgs) ToMabProtectionPolicyOutputWithContext(ctx context.Context) MabProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabProtectionPolicyOutput)
}

func (i MabProtectionPolicyArgs) ToMabProtectionPolicyPtrOutput() MabProtectionPolicyPtrOutput {
	return i.ToMabProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i MabProtectionPolicyArgs) ToMabProtectionPolicyPtrOutputWithContext(ctx context.Context) MabProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabProtectionPolicyOutput).ToMabProtectionPolicyPtrOutputWithContext(ctx)
}

// MabProtectionPolicyPtrInput is an input type that accepts MabProtectionPolicyArgs, MabProtectionPolicyPtr and MabProtectionPolicyPtrOutput values.
// You can construct a concrete instance of `MabProtectionPolicyPtrInput` via:
//
//	        MabProtectionPolicyArgs{...}
//
//	or:
//
//	        nil
type MabProtectionPolicyPtrInput interface {
	pulumi.Input

	ToMabProtectionPolicyPtrOutput() MabProtectionPolicyPtrOutput
	ToMabProtectionPolicyPtrOutputWithContext(context.Context) MabProtectionPolicyPtrOutput
}

type mabProtectionPolicyPtrType MabProtectionPolicyArgs

func MabProtectionPolicyPtr(v *MabProtectionPolicyArgs) MabProtectionPolicyPtrInput {
	return (*mabProtectionPolicyPtrType)(v)
}

func (*mabProtectionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MabProtectionPolicy)(nil)).Elem()
}

func (i *mabProtectionPolicyPtrType) ToMabProtectionPolicyPtrOutput() MabProtectionPolicyPtrOutput {
	return i.ToMabProtectionPolicyPtrOutputWithContext(context.Background())
}

func (i *mabProtectionPolicyPtrType) ToMabProtectionPolicyPtrOutputWithContext(ctx context.Context) MabProtectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MabProtectionPolicyPtrOutput)
}

// Mab container-specific backup policy.
type MabProtectionPolicyOutput struct{ *pulumi.OutputState }

func (MabProtectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabProtectionPolicy)(nil)).Elem()
}

func (o MabProtectionPolicyOutput) ToMabProtectionPolicyOutput() MabProtectionPolicyOutput {
	return o
}

func (o MabProtectionPolicyOutput) ToMabProtectionPolicyOutputWithContext(ctx context.Context) MabProtectionPolicyOutput {
	return o
}

func (o MabProtectionPolicyOutput) ToMabProtectionPolicyPtrOutput() MabProtectionPolicyPtrOutput {
	return o.ToMabProtectionPolicyPtrOutputWithContext(context.Background())
}

func (o MabProtectionPolicyOutput) ToMabProtectionPolicyPtrOutputWithContext(ctx context.Context) MabProtectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MabProtectionPolicy) *MabProtectionPolicy {
		return &v
	}).(MabProtectionPolicyPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'MAB'.
func (o MabProtectionPolicyOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v MabProtectionPolicy) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Number of items associated with this policy.
func (o MabProtectionPolicyOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabProtectionPolicy) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o MabProtectionPolicyOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MabProtectionPolicy) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Retention policy details.
func (o MabProtectionPolicyOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v MabProtectionPolicy) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Backup schedule of backup policy.
func (o MabProtectionPolicyOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v MabProtectionPolicy) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

type MabProtectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (MabProtectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MabProtectionPolicy)(nil)).Elem()
}

func (o MabProtectionPolicyPtrOutput) ToMabProtectionPolicyPtrOutput() MabProtectionPolicyPtrOutput {
	return o
}

func (o MabProtectionPolicyPtrOutput) ToMabProtectionPolicyPtrOutputWithContext(ctx context.Context) MabProtectionPolicyPtrOutput {
	return o
}

func (o MabProtectionPolicyPtrOutput) Elem() MabProtectionPolicyOutput {
	return o.ApplyT(func(v *MabProtectionPolicy) MabProtectionPolicy {
		if v != nil {
			return *v
		}
		var ret MabProtectionPolicy
		return ret
	}).(MabProtectionPolicyOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'MAB'.
func (o MabProtectionPolicyPtrOutput) BackupManagementType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MabProtectionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.BackupManagementType
	}).(pulumi.StringPtrOutput)
}

// Number of items associated with this policy.
func (o MabProtectionPolicyPtrOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MabProtectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.ProtectedItemsCount
	}).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o MabProtectionPolicyPtrOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MabProtectionPolicy) []string {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationRequests
	}).(pulumi.StringArrayOutput)
}

// Retention policy details.
func (o MabProtectionPolicyPtrOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v *MabProtectionPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.RetentionPolicy
	}).(pulumi.AnyOutput)
}

// Backup schedule of backup policy.
func (o MabProtectionPolicyPtrOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v *MabProtectionPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.SchedulePolicy
	}).(pulumi.AnyOutput)
}

// Mab container-specific backup policy.
type MabProtectionPolicyResponse struct {
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'MAB'.
	BackupManagementType string `pulumi:"backupManagementType"`
	// Number of items associated with this policy.
	ProtectedItemsCount *int `pulumi:"protectedItemsCount"`
	// ResourceGuard Operation Requests
	ResourceGuardOperationRequests []string `pulumi:"resourceGuardOperationRequests"`
	// Retention policy details.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
}

// Mab container-specific backup policy.
type MabProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (MabProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MabProtectionPolicyResponse)(nil)).Elem()
}

func (o MabProtectionPolicyResponseOutput) ToMabProtectionPolicyResponseOutput() MabProtectionPolicyResponseOutput {
	return o
}

func (o MabProtectionPolicyResponseOutput) ToMabProtectionPolicyResponseOutputWithContext(ctx context.Context) MabProtectionPolicyResponseOutput {
	return o
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'MAB'.
func (o MabProtectionPolicyResponseOutput) BackupManagementType() pulumi.StringOutput {
	return o.ApplyT(func(v MabProtectionPolicyResponse) string { return v.BackupManagementType }).(pulumi.StringOutput)
}

// Number of items associated with this policy.
func (o MabProtectionPolicyResponseOutput) ProtectedItemsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MabProtectionPolicyResponse) *int { return v.ProtectedItemsCount }).(pulumi.IntPtrOutput)
}

// ResourceGuard Operation Requests
func (o MabProtectionPolicyResponseOutput) ResourceGuardOperationRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MabProtectionPolicyResponse) []string { return v.ResourceGuardOperationRequests }).(pulumi.StringArrayOutput)
}

// Retention policy details.
func (o MabProtectionPolicyResponseOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v MabProtectionPolicyResponse) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Backup schedule of backup policy.
func (o MabProtectionPolicyResponseOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v MabProtectionPolicyResponse) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

// Monitoring Settings of the vault
type MonitoringSettings struct {
	// Settings for Azure Monitor based alerts
	AzureMonitorAlertSettings *AzureMonitorAlertSettings `pulumi:"azureMonitorAlertSettings"`
	// Settings for classic alerts
	ClassicAlertSettings *ClassicAlertSettings `pulumi:"classicAlertSettings"`
}

// MonitoringSettingsInput is an input type that accepts MonitoringSettingsArgs and MonitoringSettingsOutput values.
// You can construct a concrete instance of `MonitoringSettingsInput` via:
//
//	MonitoringSettingsArgs{...}
type MonitoringSettingsInput interface {
	pulumi.Input

	ToMonitoringSettingsOutput() MonitoringSettingsOutput
	ToMonitoringSettingsOutputWithContext(context.Context) MonitoringSettingsOutput
}

// Monitoring Settings of the vault
type MonitoringSettingsArgs struct {
	// Settings for Azure Monitor based alerts
	AzureMonitorAlertSettings AzureMonitorAlertSettingsPtrInput `pulumi:"azureMonitorAlertSettings"`
	// Settings for classic alerts
	ClassicAlertSettings ClassicAlertSettingsPtrInput `pulumi:"classicAlertSettings"`
}

func (MonitoringSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSettings)(nil)).Elem()
}

func (i MonitoringSettingsArgs) ToMonitoringSettingsOutput() MonitoringSettingsOutput {
	return i.ToMonitoringSettingsOutputWithContext(context.Background())
}

func (i MonitoringSettingsArgs) ToMonitoringSettingsOutputWithContext(ctx context.Context) MonitoringSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringSettingsOutput)
}

func (i MonitoringSettingsArgs) ToMonitoringSettingsPtrOutput() MonitoringSettingsPtrOutput {
	return i.ToMonitoringSettingsPtrOutputWithContext(context.Background())
}

func (i MonitoringSettingsArgs) ToMonitoringSettingsPtrOutputWithContext(ctx context.Context) MonitoringSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringSettingsOutput).ToMonitoringSettingsPtrOutputWithContext(ctx)
}

// MonitoringSettingsPtrInput is an input type that accepts MonitoringSettingsArgs, MonitoringSettingsPtr and MonitoringSettingsPtrOutput values.
// You can construct a concrete instance of `MonitoringSettingsPtrInput` via:
//
//	        MonitoringSettingsArgs{...}
//
//	or:
//
//	        nil
type MonitoringSettingsPtrInput interface {
	pulumi.Input

	ToMonitoringSettingsPtrOutput() MonitoringSettingsPtrOutput
	ToMonitoringSettingsPtrOutputWithContext(context.Context) MonitoringSettingsPtrOutput
}

type monitoringSettingsPtrType MonitoringSettingsArgs

func MonitoringSettingsPtr(v *MonitoringSettingsArgs) MonitoringSettingsPtrInput {
	return (*monitoringSettingsPtrType)(v)
}

func (*monitoringSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringSettings)(nil)).Elem()
}

func (i *monitoringSettingsPtrType) ToMonitoringSettingsPtrOutput() MonitoringSettingsPtrOutput {
	return i.ToMonitoringSettingsPtrOutputWithContext(context.Background())
}

func (i *monitoringSettingsPtrType) ToMonitoringSettingsPtrOutputWithContext(ctx context.Context) MonitoringSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringSettingsPtrOutput)
}

// Monitoring Settings of the vault
type MonitoringSettingsOutput struct{ *pulumi.OutputState }

func (MonitoringSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSettings)(nil)).Elem()
}

func (o MonitoringSettingsOutput) ToMonitoringSettingsOutput() MonitoringSettingsOutput {
	return o
}

func (o MonitoringSettingsOutput) ToMonitoringSettingsOutputWithContext(ctx context.Context) MonitoringSettingsOutput {
	return o
}

func (o MonitoringSettingsOutput) ToMonitoringSettingsPtrOutput() MonitoringSettingsPtrOutput {
	return o.ToMonitoringSettingsPtrOutputWithContext(context.Background())
}

func (o MonitoringSettingsOutput) ToMonitoringSettingsPtrOutputWithContext(ctx context.Context) MonitoringSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringSettings) *MonitoringSettings {
		return &v
	}).(MonitoringSettingsPtrOutput)
}

// Settings for Azure Monitor based alerts
func (o MonitoringSettingsOutput) AzureMonitorAlertSettings() AzureMonitorAlertSettingsPtrOutput {
	return o.ApplyT(func(v MonitoringSettings) *AzureMonitorAlertSettings { return v.AzureMonitorAlertSettings }).(AzureMonitorAlertSettingsPtrOutput)
}

// Settings for classic alerts
func (o MonitoringSettingsOutput) ClassicAlertSettings() ClassicAlertSettingsPtrOutput {
	return o.ApplyT(func(v MonitoringSettings) *ClassicAlertSettings { return v.ClassicAlertSettings }).(ClassicAlertSettingsPtrOutput)
}

type MonitoringSettingsPtrOutput struct{ *pulumi.OutputState }

func (MonitoringSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringSettings)(nil)).Elem()
}

func (o MonitoringSettingsPtrOutput) ToMonitoringSettingsPtrOutput() MonitoringSettingsPtrOutput {
	return o
}

func (o MonitoringSettingsPtrOutput) ToMonitoringSettingsPtrOutputWithContext(ctx context.Context) MonitoringSettingsPtrOutput {
	return o
}

func (o MonitoringSettingsPtrOutput) Elem() MonitoringSettingsOutput {
	return o.ApplyT(func(v *MonitoringSettings) MonitoringSettings {
		if v != nil {
			return *v
		}
		var ret MonitoringSettings
		return ret
	}).(MonitoringSettingsOutput)
}

// Settings for Azure Monitor based alerts
func (o MonitoringSettingsPtrOutput) AzureMonitorAlertSettings() AzureMonitorAlertSettingsPtrOutput {
	return o.ApplyT(func(v *MonitoringSettings) *AzureMonitorAlertSettings {
		if v == nil {
			return nil
		}
		return v.AzureMonitorAlertSettings
	}).(AzureMonitorAlertSettingsPtrOutput)
}

// Settings for classic alerts
func (o MonitoringSettingsPtrOutput) ClassicAlertSettings() ClassicAlertSettingsPtrOutput {
	return o.ApplyT(func(v *MonitoringSettings) *ClassicAlertSettings {
		if v == nil {
			return nil
		}
		return v.ClassicAlertSettings
	}).(ClassicAlertSettingsPtrOutput)
}

// Monitoring Settings of the vault
type MonitoringSettingsResponse struct {
	// Settings for Azure Monitor based alerts
	AzureMonitorAlertSettings *AzureMonitorAlertSettingsResponse `pulumi:"azureMonitorAlertSettings"`
	// Settings for classic alerts
	ClassicAlertSettings *ClassicAlertSettingsResponse `pulumi:"classicAlertSettings"`
}

// Monitoring Settings of the vault
type MonitoringSettingsResponseOutput struct{ *pulumi.OutputState }

func (MonitoringSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSettingsResponse)(nil)).Elem()
}

func (o MonitoringSettingsResponseOutput) ToMonitoringSettingsResponseOutput() MonitoringSettingsResponseOutput {
	return o
}

func (o MonitoringSettingsResponseOutput) ToMonitoringSettingsResponseOutputWithContext(ctx context.Context) MonitoringSettingsResponseOutput {
	return o
}

// Settings for Azure Monitor based alerts
func (o MonitoringSettingsResponseOutput) AzureMonitorAlertSettings() AzureMonitorAlertSettingsResponsePtrOutput {
	return o.ApplyT(func(v MonitoringSettingsResponse) *AzureMonitorAlertSettingsResponse {
		return v.AzureMonitorAlertSettings
	}).(AzureMonitorAlertSettingsResponsePtrOutput)
}

// Settings for classic alerts
func (o MonitoringSettingsResponseOutput) ClassicAlertSettings() ClassicAlertSettingsResponsePtrOutput {
	return o.ApplyT(func(v MonitoringSettingsResponse) *ClassicAlertSettingsResponse { return v.ClassicAlertSettings }).(ClassicAlertSettingsResponsePtrOutput)
}

type MonitoringSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (MonitoringSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringSettingsResponse)(nil)).Elem()
}

func (o MonitoringSettingsResponsePtrOutput) ToMonitoringSettingsResponsePtrOutput() MonitoringSettingsResponsePtrOutput {
	return o
}

func (o MonitoringSettingsResponsePtrOutput) ToMonitoringSettingsResponsePtrOutputWithContext(ctx context.Context) MonitoringSettingsResponsePtrOutput {
	return o
}

func (o MonitoringSettingsResponsePtrOutput) Elem() MonitoringSettingsResponseOutput {
	return o.ApplyT(func(v *MonitoringSettingsResponse) MonitoringSettingsResponse {
		if v != nil {
			return *v
		}
		var ret MonitoringSettingsResponse
		return ret
	}).(MonitoringSettingsResponseOutput)
}

// Settings for Azure Monitor based alerts
func (o MonitoringSettingsResponsePtrOutput) AzureMonitorAlertSettings() AzureMonitorAlertSettingsResponsePtrOutput {
	return o.ApplyT(func(v *MonitoringSettingsResponse) *AzureMonitorAlertSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AzureMonitorAlertSettings
	}).(AzureMonitorAlertSettingsResponsePtrOutput)
}

// Settings for classic alerts
func (o MonitoringSettingsResponsePtrOutput) ClassicAlertSettings() ClassicAlertSettingsResponsePtrOutput {
	return o.ApplyT(func(v *MonitoringSettingsResponse) *ClassicAlertSettingsResponse {
		if v == nil {
			return nil
		}
		return v.ClassicAlertSettings
	}).(ClassicAlertSettingsResponsePtrOutput)
}

// Monthly retention schedule.
type MonthlyRetentionSchedule struct {
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Daily retention format for monthly retention policy.
	RetentionScheduleDaily *DailyRetentionFormat `pulumi:"retentionScheduleDaily"`
	// Retention schedule format type for monthly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for monthly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormat `pulumi:"retentionScheduleWeekly"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// MonthlyRetentionScheduleInput is an input type that accepts MonthlyRetentionScheduleArgs and MonthlyRetentionScheduleOutput values.
// You can construct a concrete instance of `MonthlyRetentionScheduleInput` via:
//
//	MonthlyRetentionScheduleArgs{...}
type MonthlyRetentionScheduleInput interface {
	pulumi.Input

	ToMonthlyRetentionScheduleOutput() MonthlyRetentionScheduleOutput
	ToMonthlyRetentionScheduleOutputWithContext(context.Context) MonthlyRetentionScheduleOutput
}

// Monthly retention schedule.
type MonthlyRetentionScheduleArgs struct {
	// Retention duration of retention Policy.
	RetentionDuration RetentionDurationPtrInput `pulumi:"retentionDuration"`
	// Daily retention format for monthly retention policy.
	RetentionScheduleDaily DailyRetentionFormatPtrInput `pulumi:"retentionScheduleDaily"`
	// Retention schedule format type for monthly retention policy.
	RetentionScheduleFormatType pulumi.StringPtrInput `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for monthly retention policy.
	RetentionScheduleWeekly WeeklyRetentionFormatPtrInput `pulumi:"retentionScheduleWeekly"`
	// Retention times of retention policy.
	RetentionTimes pulumi.StringArrayInput `pulumi:"retentionTimes"`
}

func (MonthlyRetentionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonthlyRetentionSchedule)(nil)).Elem()
}

func (i MonthlyRetentionScheduleArgs) ToMonthlyRetentionScheduleOutput() MonthlyRetentionScheduleOutput {
	return i.ToMonthlyRetentionScheduleOutputWithContext(context.Background())
}

func (i MonthlyRetentionScheduleArgs) ToMonthlyRetentionScheduleOutputWithContext(ctx context.Context) MonthlyRetentionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonthlyRetentionScheduleOutput)
}

func (i MonthlyRetentionScheduleArgs) ToMonthlyRetentionSchedulePtrOutput() MonthlyRetentionSchedulePtrOutput {
	return i.ToMonthlyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i MonthlyRetentionScheduleArgs) ToMonthlyRetentionSchedulePtrOutputWithContext(ctx context.Context) MonthlyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonthlyRetentionScheduleOutput).ToMonthlyRetentionSchedulePtrOutputWithContext(ctx)
}

// MonthlyRetentionSchedulePtrInput is an input type that accepts MonthlyRetentionScheduleArgs, MonthlyRetentionSchedulePtr and MonthlyRetentionSchedulePtrOutput values.
// You can construct a concrete instance of `MonthlyRetentionSchedulePtrInput` via:
//
//	        MonthlyRetentionScheduleArgs{...}
//
//	or:
//
//	        nil
type MonthlyRetentionSchedulePtrInput interface {
	pulumi.Input

	ToMonthlyRetentionSchedulePtrOutput() MonthlyRetentionSchedulePtrOutput
	ToMonthlyRetentionSchedulePtrOutputWithContext(context.Context) MonthlyRetentionSchedulePtrOutput
}

type monthlyRetentionSchedulePtrType MonthlyRetentionScheduleArgs

func MonthlyRetentionSchedulePtr(v *MonthlyRetentionScheduleArgs) MonthlyRetentionSchedulePtrInput {
	return (*monthlyRetentionSchedulePtrType)(v)
}

func (*monthlyRetentionSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonthlyRetentionSchedule)(nil)).Elem()
}

func (i *monthlyRetentionSchedulePtrType) ToMonthlyRetentionSchedulePtrOutput() MonthlyRetentionSchedulePtrOutput {
	return i.ToMonthlyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i *monthlyRetentionSchedulePtrType) ToMonthlyRetentionSchedulePtrOutputWithContext(ctx context.Context) MonthlyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonthlyRetentionSchedulePtrOutput)
}

// Monthly retention schedule.
type MonthlyRetentionScheduleOutput struct{ *pulumi.OutputState }

func (MonthlyRetentionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonthlyRetentionSchedule)(nil)).Elem()
}

func (o MonthlyRetentionScheduleOutput) ToMonthlyRetentionScheduleOutput() MonthlyRetentionScheduleOutput {
	return o
}

func (o MonthlyRetentionScheduleOutput) ToMonthlyRetentionScheduleOutputWithContext(ctx context.Context) MonthlyRetentionScheduleOutput {
	return o
}

func (o MonthlyRetentionScheduleOutput) ToMonthlyRetentionSchedulePtrOutput() MonthlyRetentionSchedulePtrOutput {
	return o.ToMonthlyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (o MonthlyRetentionScheduleOutput) ToMonthlyRetentionSchedulePtrOutputWithContext(ctx context.Context) MonthlyRetentionSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonthlyRetentionSchedule) *MonthlyRetentionSchedule {
		return &v
	}).(MonthlyRetentionSchedulePtrOutput)
}

// Retention duration of retention Policy.
func (o MonthlyRetentionScheduleOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v MonthlyRetentionSchedule) *RetentionDuration { return v.RetentionDuration }).(RetentionDurationPtrOutput)
}

// Daily retention format for monthly retention policy.
func (o MonthlyRetentionScheduleOutput) RetentionScheduleDaily() DailyRetentionFormatPtrOutput {
	return o.ApplyT(func(v MonthlyRetentionSchedule) *DailyRetentionFormat { return v.RetentionScheduleDaily }).(DailyRetentionFormatPtrOutput)
}

// Retention schedule format type for monthly retention policy.
func (o MonthlyRetentionScheduleOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonthlyRetentionSchedule) *string { return v.RetentionScheduleFormatType }).(pulumi.StringPtrOutput)
}

// Weekly retention format for monthly retention policy.
func (o MonthlyRetentionScheduleOutput) RetentionScheduleWeekly() WeeklyRetentionFormatPtrOutput {
	return o.ApplyT(func(v MonthlyRetentionSchedule) *WeeklyRetentionFormat { return v.RetentionScheduleWeekly }).(WeeklyRetentionFormatPtrOutput)
}

// Retention times of retention policy.
func (o MonthlyRetentionScheduleOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonthlyRetentionSchedule) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type MonthlyRetentionSchedulePtrOutput struct{ *pulumi.OutputState }

func (MonthlyRetentionSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonthlyRetentionSchedule)(nil)).Elem()
}

func (o MonthlyRetentionSchedulePtrOutput) ToMonthlyRetentionSchedulePtrOutput() MonthlyRetentionSchedulePtrOutput {
	return o
}

func (o MonthlyRetentionSchedulePtrOutput) ToMonthlyRetentionSchedulePtrOutputWithContext(ctx context.Context) MonthlyRetentionSchedulePtrOutput {
	return o
}

func (o MonthlyRetentionSchedulePtrOutput) Elem() MonthlyRetentionScheduleOutput {
	return o.ApplyT(func(v *MonthlyRetentionSchedule) MonthlyRetentionSchedule {
		if v != nil {
			return *v
		}
		var ret MonthlyRetentionSchedule
		return ret
	}).(MonthlyRetentionScheduleOutput)
}

// Retention duration of retention Policy.
func (o MonthlyRetentionSchedulePtrOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionSchedule) *RetentionDuration {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationPtrOutput)
}

// Daily retention format for monthly retention policy.
func (o MonthlyRetentionSchedulePtrOutput) RetentionScheduleDaily() DailyRetentionFormatPtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionSchedule) *DailyRetentionFormat {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleDaily
	}).(DailyRetentionFormatPtrOutput)
}

// Retention schedule format type for monthly retention policy.
func (o MonthlyRetentionSchedulePtrOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionSchedule) *string {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleFormatType
	}).(pulumi.StringPtrOutput)
}

// Weekly retention format for monthly retention policy.
func (o MonthlyRetentionSchedulePtrOutput) RetentionScheduleWeekly() WeeklyRetentionFormatPtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionSchedule) *WeeklyRetentionFormat {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleWeekly
	}).(WeeklyRetentionFormatPtrOutput)
}

// Retention times of retention policy.
func (o MonthlyRetentionSchedulePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonthlyRetentionSchedule) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

// Monthly retention schedule.
type MonthlyRetentionScheduleResponse struct {
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Daily retention format for monthly retention policy.
	RetentionScheduleDaily *DailyRetentionFormatResponse `pulumi:"retentionScheduleDaily"`
	// Retention schedule format type for monthly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for monthly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormatResponse `pulumi:"retentionScheduleWeekly"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Monthly retention schedule.
type MonthlyRetentionScheduleResponseOutput struct{ *pulumi.OutputState }

func (MonthlyRetentionScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonthlyRetentionScheduleResponse)(nil)).Elem()
}

func (o MonthlyRetentionScheduleResponseOutput) ToMonthlyRetentionScheduleResponseOutput() MonthlyRetentionScheduleResponseOutput {
	return o
}

func (o MonthlyRetentionScheduleResponseOutput) ToMonthlyRetentionScheduleResponseOutputWithContext(ctx context.Context) MonthlyRetentionScheduleResponseOutput {
	return o
}

// Retention duration of retention Policy.
func (o MonthlyRetentionScheduleResponseOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v MonthlyRetentionScheduleResponse) *RetentionDurationResponse { return v.RetentionDuration }).(RetentionDurationResponsePtrOutput)
}

// Daily retention format for monthly retention policy.
func (o MonthlyRetentionScheduleResponseOutput) RetentionScheduleDaily() DailyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v MonthlyRetentionScheduleResponse) *DailyRetentionFormatResponse {
		return v.RetentionScheduleDaily
	}).(DailyRetentionFormatResponsePtrOutput)
}

// Retention schedule format type for monthly retention policy.
func (o MonthlyRetentionScheduleResponseOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonthlyRetentionScheduleResponse) *string { return v.RetentionScheduleFormatType }).(pulumi.StringPtrOutput)
}

// Weekly retention format for monthly retention policy.
func (o MonthlyRetentionScheduleResponseOutput) RetentionScheduleWeekly() WeeklyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v MonthlyRetentionScheduleResponse) *WeeklyRetentionFormatResponse {
		return v.RetentionScheduleWeekly
	}).(WeeklyRetentionFormatResponsePtrOutput)
}

// Retention times of retention policy.
func (o MonthlyRetentionScheduleResponseOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonthlyRetentionScheduleResponse) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type MonthlyRetentionScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (MonthlyRetentionScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonthlyRetentionScheduleResponse)(nil)).Elem()
}

func (o MonthlyRetentionScheduleResponsePtrOutput) ToMonthlyRetentionScheduleResponsePtrOutput() MonthlyRetentionScheduleResponsePtrOutput {
	return o
}

func (o MonthlyRetentionScheduleResponsePtrOutput) ToMonthlyRetentionScheduleResponsePtrOutputWithContext(ctx context.Context) MonthlyRetentionScheduleResponsePtrOutput {
	return o
}

func (o MonthlyRetentionScheduleResponsePtrOutput) Elem() MonthlyRetentionScheduleResponseOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) MonthlyRetentionScheduleResponse {
		if v != nil {
			return *v
		}
		var ret MonthlyRetentionScheduleResponse
		return ret
	}).(MonthlyRetentionScheduleResponseOutput)
}

// Retention duration of retention Policy.
func (o MonthlyRetentionScheduleResponsePtrOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) *RetentionDurationResponse {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationResponsePtrOutput)
}

// Daily retention format for monthly retention policy.
func (o MonthlyRetentionScheduleResponsePtrOutput) RetentionScheduleDaily() DailyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) *DailyRetentionFormatResponse {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleDaily
	}).(DailyRetentionFormatResponsePtrOutput)
}

// Retention schedule format type for monthly retention policy.
func (o MonthlyRetentionScheduleResponsePtrOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleFormatType
	}).(pulumi.StringPtrOutput)
}

// Weekly retention format for monthly retention policy.
func (o MonthlyRetentionScheduleResponsePtrOutput) RetentionScheduleWeekly() WeeklyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) *WeeklyRetentionFormatResponse {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleWeekly
	}).(WeeklyRetentionFormatResponsePtrOutput)
}

// Retention times of retention policy.
func (o MonthlyRetentionScheduleResponsePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonthlyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection
type PrivateEndpoint struct {
	// Gets or sets id
	Id *string `pulumi:"id"`
}

// PrivateEndpointInput is an input type that accepts PrivateEndpointArgs and PrivateEndpointOutput values.
// You can construct a concrete instance of `PrivateEndpointInput` via:
//
//	PrivateEndpointArgs{...}
type PrivateEndpointInput interface {
	pulumi.Input

	ToPrivateEndpointOutput() PrivateEndpointOutput
	ToPrivateEndpointOutputWithContext(context.Context) PrivateEndpointOutput
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection
type PrivateEndpointArgs struct {
	// Gets or sets id
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (PrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpoint)(nil)).Elem()
}

func (i PrivateEndpointArgs) ToPrivateEndpointOutput() PrivateEndpointOutput {
	return i.ToPrivateEndpointOutputWithContext(context.Background())
}

func (i PrivateEndpointArgs) ToPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointOutput)
}

func (i PrivateEndpointArgs) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return i.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i PrivateEndpointArgs) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointOutput).ToPrivateEndpointPtrOutputWithContext(ctx)
}

// PrivateEndpointPtrInput is an input type that accepts PrivateEndpointArgs, PrivateEndpointPtr and PrivateEndpointPtrOutput values.
// You can construct a concrete instance of `PrivateEndpointPtrInput` via:
//
//	        PrivateEndpointArgs{...}
//
//	or:
//
//	        nil
type PrivateEndpointPtrInput interface {
	pulumi.Input

	ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput
	ToPrivateEndpointPtrOutputWithContext(context.Context) PrivateEndpointPtrOutput
}

type privateEndpointPtrType PrivateEndpointArgs

func PrivateEndpointPtr(v *PrivateEndpointArgs) PrivateEndpointPtrInput {
	return (*privateEndpointPtrType)(v)
}

func (*privateEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpoint)(nil)).Elem()
}

func (i *privateEndpointPtrType) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return i.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i *privateEndpointPtrType) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointPtrOutput)
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection
type PrivateEndpointOutput struct{ *pulumi.OutputState }

func (PrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointOutput) ToPrivateEndpointOutput() PrivateEndpointOutput {
	return o
}

func (o PrivateEndpointOutput) ToPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointOutput {
	return o
}

func (o PrivateEndpointOutput) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return o.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointOutput) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpoint) *PrivateEndpoint {
		return &v
	}).(PrivateEndpointPtrOutput)
}

// Gets or sets id
func (o PrivateEndpointOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpoint) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointPtrOutput) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointPtrOutput) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointPtrOutput) Elem() PrivateEndpointOutput {
	return o.ApplyT(func(v *PrivateEndpoint) PrivateEndpoint {
		if v != nil {
			return *v
		}
		var ret PrivateEndpoint
		return ret
	}).(PrivateEndpointOutput)
}

// Gets or sets id
func (o PrivateEndpointPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionType struct {
	// Group Ids for the Private Endpoint
	GroupIds []string `pulumi:"groupIds"`
	// Gets or sets private endpoint associated with the private endpoint connection
	PrivateEndpoint *PrivateEndpoint `pulumi:"privateEndpoint"`
	// Gets or sets private link service connection state
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState `pulumi:"privateLinkServiceConnectionState"`
	// Gets or sets provisioning state of the private endpoint connection
	ProvisioningState *string `pulumi:"provisioningState"`
}

// PrivateEndpointConnectionTypeInput is an input type that accepts PrivateEndpointConnectionTypeArgs and PrivateEndpointConnectionTypeOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionTypeInput` via:
//
//	PrivateEndpointConnectionTypeArgs{...}
type PrivateEndpointConnectionTypeInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput
	ToPrivateEndpointConnectionTypeOutputWithContext(context.Context) PrivateEndpointConnectionTypeOutput
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionTypeArgs struct {
	// Group Ids for the Private Endpoint
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
	// Gets or sets private endpoint associated with the private endpoint connection
	PrivateEndpoint PrivateEndpointPtrInput `pulumi:"privateEndpoint"`
	// Gets or sets private link service connection state
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStatePtrInput `pulumi:"privateLinkServiceConnectionState"`
	// Gets or sets provisioning state of the private endpoint connection
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (PrivateEndpointConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionType)(nil)).Elem()
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput {
	return i.ToPrivateEndpointConnectionTypeOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypeOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionTypeOutput)
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput {
	return i.ToPrivateEndpointConnectionTypePtrOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionTypeArgs) ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionTypeOutput).ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx)
}

// PrivateEndpointConnectionTypePtrInput is an input type that accepts PrivateEndpointConnectionTypeArgs, PrivateEndpointConnectionTypePtr and PrivateEndpointConnectionTypePtrOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionTypePtrInput` via:
//
//	        PrivateEndpointConnectionTypeArgs{...}
//
//	or:
//
//	        nil
type PrivateEndpointConnectionTypePtrInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput
	ToPrivateEndpointConnectionTypePtrOutputWithContext(context.Context) PrivateEndpointConnectionTypePtrOutput
}

type privateEndpointConnectionTypePtrType PrivateEndpointConnectionTypeArgs

func PrivateEndpointConnectionTypePtr(v *PrivateEndpointConnectionTypeArgs) PrivateEndpointConnectionTypePtrInput {
	return (*privateEndpointConnectionTypePtrType)(v)
}

func (*privateEndpointConnectionTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionType)(nil)).Elem()
}

func (i *privateEndpointConnectionTypePtrType) ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput {
	return i.ToPrivateEndpointConnectionTypePtrOutputWithContext(context.Background())
}

func (i *privateEndpointConnectionTypePtrType) ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionTypePtrOutput)
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionTypeOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionType)(nil)).Elem()
}

func (o PrivateEndpointConnectionTypeOutput) ToPrivateEndpointConnectionTypeOutput() PrivateEndpointConnectionTypeOutput {
	return o
}

func (o PrivateEndpointConnectionTypeOutput) ToPrivateEndpointConnectionTypeOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypeOutput {
	return o
}

func (o PrivateEndpointConnectionTypeOutput) ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput {
	return o.ToPrivateEndpointConnectionTypePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointConnectionTypeOutput) ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointConnectionType) *PrivateEndpointConnectionType {
		return &v
	}).(PrivateEndpointConnectionTypePtrOutput)
}

// Group Ids for the Private Endpoint
func (o PrivateEndpointConnectionTypeOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionType) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Gets or sets private endpoint associated with the private endpoint connection
func (o PrivateEndpointConnectionTypeOutput) PrivateEndpoint() PrivateEndpointPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionType) *PrivateEndpoint { return v.PrivateEndpoint }).(PrivateEndpointPtrOutput)
}

// Gets or sets private link service connection state
func (o PrivateEndpointConnectionTypeOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionType) *PrivateLinkServiceConnectionState {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// Gets or sets provisioning state of the private endpoint connection
func (o PrivateEndpointConnectionTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type PrivateEndpointConnectionTypePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionType)(nil)).Elem()
}

func (o PrivateEndpointConnectionTypePtrOutput) ToPrivateEndpointConnectionTypePtrOutput() PrivateEndpointConnectionTypePtrOutput {
	return o
}

func (o PrivateEndpointConnectionTypePtrOutput) ToPrivateEndpointConnectionTypePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionTypePtrOutput {
	return o
}

func (o PrivateEndpointConnectionTypePtrOutput) Elem() PrivateEndpointConnectionTypeOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionType) PrivateEndpointConnectionType {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointConnectionType
		return ret
	}).(PrivateEndpointConnectionTypeOutput)
}

// Group Ids for the Private Endpoint
func (o PrivateEndpointConnectionTypePtrOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionType) []string {
		if v == nil {
			return nil
		}
		return v.GroupIds
	}).(pulumi.StringArrayOutput)
}

// Gets or sets private endpoint associated with the private endpoint connection
func (o PrivateEndpointConnectionTypePtrOutput) PrivateEndpoint() PrivateEndpointPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionType) *PrivateEndpoint {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoint
	}).(PrivateEndpointPtrOutput)
}

// Gets or sets private link service connection state
func (o PrivateEndpointConnectionTypePtrOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionType) *PrivateLinkServiceConnectionState {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// Gets or sets provisioning state of the private endpoint connection
func (o PrivateEndpointConnectionTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionResponse struct {
	// Group Ids for the Private Endpoint
	GroupIds []string `pulumi:"groupIds"`
	// Gets or sets private endpoint associated with the private endpoint connection
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// Gets or sets private link service connection state
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// Gets or sets provisioning state of the private endpoint connection
	ProvisioningState *string `pulumi:"provisioningState"`
}

// Private Endpoint Connection Response Properties
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// Group Ids for the Private Endpoint
func (o PrivateEndpointConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Gets or sets private endpoint associated with the private endpoint connection
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// Gets or sets private link service connection state
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// Gets or sets provisioning state of the private endpoint connection
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Information to be stored in Vault properties as an element of privateEndpointConnections List.
type PrivateEndpointConnectionVaultPropertiesResponse struct {
	// Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.
	Id string `pulumi:"id"`
	// The location of the private Endpoint connection
	Location string `pulumi:"location"`
	// The name of the private Endpoint Connection
	Name string `pulumi:"name"`
	// Private Endpoint Connection Response Properties.
	Properties VaultPrivateEndpointConnectionResponse `pulumi:"properties"`
	// The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections
	Type string `pulumi:"type"`
}

// Information to be stored in Vault properties as an element of privateEndpointConnections List.
type PrivateEndpointConnectionVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionVaultPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) ToPrivateEndpointConnectionVaultPropertiesResponseOutput() PrivateEndpointConnectionVaultPropertiesResponseOutput {
	return o
}

func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) ToPrivateEndpointConnectionVaultPropertiesResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionVaultPropertiesResponseOutput {
	return o
}

// Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the private Endpoint connection
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the private Endpoint Connection
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Private Endpoint Connection Response Properties.
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Properties() VaultPrivateEndpointConnectionResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) VaultPrivateEndpointConnectionResponse {
		return v.Properties
	}).(VaultPrivateEndpointConnectionResponseOutput)
}

// The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections
func (o PrivateEndpointConnectionVaultPropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionVaultPropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionVaultPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionVaultPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) ToPrivateEndpointConnectionVaultPropertiesResponseArrayOutput() PrivateEndpointConnectionVaultPropertiesResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) ToPrivateEndpointConnectionVaultPropertiesResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionVaultPropertiesResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionVaultPropertiesResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionVaultPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionVaultPropertiesResponse {
		return vs[0].([]PrivateEndpointConnectionVaultPropertiesResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionVaultPropertiesResponseOutput)
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection.
type PrivateEndpointResponse struct {
	// Gets or sets id.
	Id string `pulumi:"id"`
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// Gets or sets id.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// Gets or sets id.
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionState struct {
	// Gets or sets actions required
	ActionsRequired *string `pulumi:"actionsRequired"`
	// Gets or sets description
	Description *string `pulumi:"description"`
	// Gets or sets the status
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionStateArgs struct {
	// Gets or sets actions required
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// Gets or sets description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Gets or sets the status
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput).ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStatePtrInput is an input type that accepts PrivateLinkServiceConnectionStateArgs, PrivateLinkServiceConnectionStatePtr and PrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStatePtrInput` via:
//
//	        PrivateLinkServiceConnectionStateArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput
	ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStatePtrOutput
}

type privateLinkServiceConnectionStatePtrType PrivateLinkServiceConnectionStateArgs

func PrivateLinkServiceConnectionStatePtr(v *PrivateLinkServiceConnectionStateArgs) PrivateLinkServiceConnectionStatePtrInput {
	return (*privateLinkServiceConnectionStatePtrType)(v)
}

func (*privateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePtrOutput)
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServiceConnectionState) *PrivateLinkServiceConnectionState {
		return &v
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// Gets or sets actions required
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// Gets or sets description
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets or sets the status
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) Elem() PrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) PrivateLinkServiceConnectionState {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionState
		return ret
	}).(PrivateLinkServiceConnectionStateOutput)
}

// Gets or sets actions required
func (o PrivateLinkServiceConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// Gets or sets description
func (o PrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the status
func (o PrivateLinkServiceConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionStateResponse struct {
	// Gets or sets actions required
	ActionsRequired *string `pulumi:"actionsRequired"`
	// Gets or sets description
	Description *string `pulumi:"description"`
	// Gets or sets the status
	Status *string `pulumi:"status"`
}

// Private Link Service Connection State
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// Gets or sets actions required
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// Gets or sets description
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets or sets the status
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionStateResponse
		return ret
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// Gets or sets actions required
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// Gets or sets description
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the status
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ResourceGuardOperationDetail struct {
	DefaultResourceRequest *string `pulumi:"defaultResourceRequest"`
	VaultCriticalOperation *string `pulumi:"vaultCriticalOperation"`
}

// ResourceGuardOperationDetailInput is an input type that accepts ResourceGuardOperationDetailArgs and ResourceGuardOperationDetailOutput values.
// You can construct a concrete instance of `ResourceGuardOperationDetailInput` via:
//
//	ResourceGuardOperationDetailArgs{...}
type ResourceGuardOperationDetailInput interface {
	pulumi.Input

	ToResourceGuardOperationDetailOutput() ResourceGuardOperationDetailOutput
	ToResourceGuardOperationDetailOutputWithContext(context.Context) ResourceGuardOperationDetailOutput
}

type ResourceGuardOperationDetailArgs struct {
	DefaultResourceRequest pulumi.StringPtrInput `pulumi:"defaultResourceRequest"`
	VaultCriticalOperation pulumi.StringPtrInput `pulumi:"vaultCriticalOperation"`
}

func (ResourceGuardOperationDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGuardOperationDetail)(nil)).Elem()
}

func (i ResourceGuardOperationDetailArgs) ToResourceGuardOperationDetailOutput() ResourceGuardOperationDetailOutput {
	return i.ToResourceGuardOperationDetailOutputWithContext(context.Background())
}

func (i ResourceGuardOperationDetailArgs) ToResourceGuardOperationDetailOutputWithContext(ctx context.Context) ResourceGuardOperationDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGuardOperationDetailOutput)
}

// ResourceGuardOperationDetailArrayInput is an input type that accepts ResourceGuardOperationDetailArray and ResourceGuardOperationDetailArrayOutput values.
// You can construct a concrete instance of `ResourceGuardOperationDetailArrayInput` via:
//
//	ResourceGuardOperationDetailArray{ ResourceGuardOperationDetailArgs{...} }
type ResourceGuardOperationDetailArrayInput interface {
	pulumi.Input

	ToResourceGuardOperationDetailArrayOutput() ResourceGuardOperationDetailArrayOutput
	ToResourceGuardOperationDetailArrayOutputWithContext(context.Context) ResourceGuardOperationDetailArrayOutput
}

type ResourceGuardOperationDetailArray []ResourceGuardOperationDetailInput

func (ResourceGuardOperationDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGuardOperationDetail)(nil)).Elem()
}

func (i ResourceGuardOperationDetailArray) ToResourceGuardOperationDetailArrayOutput() ResourceGuardOperationDetailArrayOutput {
	return i.ToResourceGuardOperationDetailArrayOutputWithContext(context.Background())
}

func (i ResourceGuardOperationDetailArray) ToResourceGuardOperationDetailArrayOutputWithContext(ctx context.Context) ResourceGuardOperationDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGuardOperationDetailArrayOutput)
}

type ResourceGuardOperationDetailOutput struct{ *pulumi.OutputState }

func (ResourceGuardOperationDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGuardOperationDetail)(nil)).Elem()
}

func (o ResourceGuardOperationDetailOutput) ToResourceGuardOperationDetailOutput() ResourceGuardOperationDetailOutput {
	return o
}

func (o ResourceGuardOperationDetailOutput) ToResourceGuardOperationDetailOutputWithContext(ctx context.Context) ResourceGuardOperationDetailOutput {
	return o
}

func (o ResourceGuardOperationDetailOutput) DefaultResourceRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardOperationDetail) *string { return v.DefaultResourceRequest }).(pulumi.StringPtrOutput)
}

func (o ResourceGuardOperationDetailOutput) VaultCriticalOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardOperationDetail) *string { return v.VaultCriticalOperation }).(pulumi.StringPtrOutput)
}

type ResourceGuardOperationDetailArrayOutput struct{ *pulumi.OutputState }

func (ResourceGuardOperationDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGuardOperationDetail)(nil)).Elem()
}

func (o ResourceGuardOperationDetailArrayOutput) ToResourceGuardOperationDetailArrayOutput() ResourceGuardOperationDetailArrayOutput {
	return o
}

func (o ResourceGuardOperationDetailArrayOutput) ToResourceGuardOperationDetailArrayOutputWithContext(ctx context.Context) ResourceGuardOperationDetailArrayOutput {
	return o
}

func (o ResourceGuardOperationDetailArrayOutput) Index(i pulumi.IntInput) ResourceGuardOperationDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGuardOperationDetail {
		return vs[0].([]ResourceGuardOperationDetail)[vs[1].(int)]
	}).(ResourceGuardOperationDetailOutput)
}

type ResourceGuardOperationDetailResponse struct {
	DefaultResourceRequest *string `pulumi:"defaultResourceRequest"`
	VaultCriticalOperation *string `pulumi:"vaultCriticalOperation"`
}

type ResourceGuardOperationDetailResponseOutput struct{ *pulumi.OutputState }

func (ResourceGuardOperationDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGuardOperationDetailResponse)(nil)).Elem()
}

func (o ResourceGuardOperationDetailResponseOutput) ToResourceGuardOperationDetailResponseOutput() ResourceGuardOperationDetailResponseOutput {
	return o
}

func (o ResourceGuardOperationDetailResponseOutput) ToResourceGuardOperationDetailResponseOutputWithContext(ctx context.Context) ResourceGuardOperationDetailResponseOutput {
	return o
}

func (o ResourceGuardOperationDetailResponseOutput) DefaultResourceRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardOperationDetailResponse) *string { return v.DefaultResourceRequest }).(pulumi.StringPtrOutput)
}

func (o ResourceGuardOperationDetailResponseOutput) VaultCriticalOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardOperationDetailResponse) *string { return v.VaultCriticalOperation }).(pulumi.StringPtrOutput)
}

type ResourceGuardOperationDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceGuardOperationDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGuardOperationDetailResponse)(nil)).Elem()
}

func (o ResourceGuardOperationDetailResponseArrayOutput) ToResourceGuardOperationDetailResponseArrayOutput() ResourceGuardOperationDetailResponseArrayOutput {
	return o
}

func (o ResourceGuardOperationDetailResponseArrayOutput) ToResourceGuardOperationDetailResponseArrayOutputWithContext(ctx context.Context) ResourceGuardOperationDetailResponseArrayOutput {
	return o
}

func (o ResourceGuardOperationDetailResponseArrayOutput) Index(i pulumi.IntInput) ResourceGuardOperationDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGuardOperationDetailResponse {
		return vs[0].([]ResourceGuardOperationDetailResponse)[vs[1].(int)]
	}).(ResourceGuardOperationDetailResponseOutput)
}

type ResourceGuardProxyBase struct {
	Description                   *string                        `pulumi:"description"`
	LastUpdatedTime               *string                        `pulumi:"lastUpdatedTime"`
	ResourceGuardOperationDetails []ResourceGuardOperationDetail `pulumi:"resourceGuardOperationDetails"`
	ResourceGuardResourceId       string                         `pulumi:"resourceGuardResourceId"`
}

// ResourceGuardProxyBaseInput is an input type that accepts ResourceGuardProxyBaseArgs and ResourceGuardProxyBaseOutput values.
// You can construct a concrete instance of `ResourceGuardProxyBaseInput` via:
//
//	ResourceGuardProxyBaseArgs{...}
type ResourceGuardProxyBaseInput interface {
	pulumi.Input

	ToResourceGuardProxyBaseOutput() ResourceGuardProxyBaseOutput
	ToResourceGuardProxyBaseOutputWithContext(context.Context) ResourceGuardProxyBaseOutput
}

type ResourceGuardProxyBaseArgs struct {
	Description                   pulumi.StringPtrInput                  `pulumi:"description"`
	LastUpdatedTime               pulumi.StringPtrInput                  `pulumi:"lastUpdatedTime"`
	ResourceGuardOperationDetails ResourceGuardOperationDetailArrayInput `pulumi:"resourceGuardOperationDetails"`
	ResourceGuardResourceId       pulumi.StringInput                     `pulumi:"resourceGuardResourceId"`
}

func (ResourceGuardProxyBaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGuardProxyBase)(nil)).Elem()
}

func (i ResourceGuardProxyBaseArgs) ToResourceGuardProxyBaseOutput() ResourceGuardProxyBaseOutput {
	return i.ToResourceGuardProxyBaseOutputWithContext(context.Background())
}

func (i ResourceGuardProxyBaseArgs) ToResourceGuardProxyBaseOutputWithContext(ctx context.Context) ResourceGuardProxyBaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGuardProxyBaseOutput)
}

func (i ResourceGuardProxyBaseArgs) ToResourceGuardProxyBasePtrOutput() ResourceGuardProxyBasePtrOutput {
	return i.ToResourceGuardProxyBasePtrOutputWithContext(context.Background())
}

func (i ResourceGuardProxyBaseArgs) ToResourceGuardProxyBasePtrOutputWithContext(ctx context.Context) ResourceGuardProxyBasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGuardProxyBaseOutput).ToResourceGuardProxyBasePtrOutputWithContext(ctx)
}

// ResourceGuardProxyBasePtrInput is an input type that accepts ResourceGuardProxyBaseArgs, ResourceGuardProxyBasePtr and ResourceGuardProxyBasePtrOutput values.
// You can construct a concrete instance of `ResourceGuardProxyBasePtrInput` via:
//
//	        ResourceGuardProxyBaseArgs{...}
//
//	or:
//
//	        nil
type ResourceGuardProxyBasePtrInput interface {
	pulumi.Input

	ToResourceGuardProxyBasePtrOutput() ResourceGuardProxyBasePtrOutput
	ToResourceGuardProxyBasePtrOutputWithContext(context.Context) ResourceGuardProxyBasePtrOutput
}

type resourceGuardProxyBasePtrType ResourceGuardProxyBaseArgs

func ResourceGuardProxyBasePtr(v *ResourceGuardProxyBaseArgs) ResourceGuardProxyBasePtrInput {
	return (*resourceGuardProxyBasePtrType)(v)
}

func (*resourceGuardProxyBasePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGuardProxyBase)(nil)).Elem()
}

func (i *resourceGuardProxyBasePtrType) ToResourceGuardProxyBasePtrOutput() ResourceGuardProxyBasePtrOutput {
	return i.ToResourceGuardProxyBasePtrOutputWithContext(context.Background())
}

func (i *resourceGuardProxyBasePtrType) ToResourceGuardProxyBasePtrOutputWithContext(ctx context.Context) ResourceGuardProxyBasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGuardProxyBasePtrOutput)
}

type ResourceGuardProxyBaseOutput struct{ *pulumi.OutputState }

func (ResourceGuardProxyBaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGuardProxyBase)(nil)).Elem()
}

func (o ResourceGuardProxyBaseOutput) ToResourceGuardProxyBaseOutput() ResourceGuardProxyBaseOutput {
	return o
}

func (o ResourceGuardProxyBaseOutput) ToResourceGuardProxyBaseOutputWithContext(ctx context.Context) ResourceGuardProxyBaseOutput {
	return o
}

func (o ResourceGuardProxyBaseOutput) ToResourceGuardProxyBasePtrOutput() ResourceGuardProxyBasePtrOutput {
	return o.ToResourceGuardProxyBasePtrOutputWithContext(context.Background())
}

func (o ResourceGuardProxyBaseOutput) ToResourceGuardProxyBasePtrOutputWithContext(ctx context.Context) ResourceGuardProxyBasePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceGuardProxyBase) *ResourceGuardProxyBase {
		return &v
	}).(ResourceGuardProxyBasePtrOutput)
}

func (o ResourceGuardProxyBaseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardProxyBase) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ResourceGuardProxyBaseOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardProxyBase) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

func (o ResourceGuardProxyBaseOutput) ResourceGuardOperationDetails() ResourceGuardOperationDetailArrayOutput {
	return o.ApplyT(func(v ResourceGuardProxyBase) []ResourceGuardOperationDetail { return v.ResourceGuardOperationDetails }).(ResourceGuardOperationDetailArrayOutput)
}

func (o ResourceGuardProxyBaseOutput) ResourceGuardResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGuardProxyBase) string { return v.ResourceGuardResourceId }).(pulumi.StringOutput)
}

type ResourceGuardProxyBasePtrOutput struct{ *pulumi.OutputState }

func (ResourceGuardProxyBasePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGuardProxyBase)(nil)).Elem()
}

func (o ResourceGuardProxyBasePtrOutput) ToResourceGuardProxyBasePtrOutput() ResourceGuardProxyBasePtrOutput {
	return o
}

func (o ResourceGuardProxyBasePtrOutput) ToResourceGuardProxyBasePtrOutputWithContext(ctx context.Context) ResourceGuardProxyBasePtrOutput {
	return o
}

func (o ResourceGuardProxyBasePtrOutput) Elem() ResourceGuardProxyBaseOutput {
	return o.ApplyT(func(v *ResourceGuardProxyBase) ResourceGuardProxyBase {
		if v != nil {
			return *v
		}
		var ret ResourceGuardProxyBase
		return ret
	}).(ResourceGuardProxyBaseOutput)
}

func (o ResourceGuardProxyBasePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceGuardProxyBase) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ResourceGuardProxyBasePtrOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceGuardProxyBase) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdatedTime
	}).(pulumi.StringPtrOutput)
}

func (o ResourceGuardProxyBasePtrOutput) ResourceGuardOperationDetails() ResourceGuardOperationDetailArrayOutput {
	return o.ApplyT(func(v *ResourceGuardProxyBase) []ResourceGuardOperationDetail {
		if v == nil {
			return nil
		}
		return v.ResourceGuardOperationDetails
	}).(ResourceGuardOperationDetailArrayOutput)
}

func (o ResourceGuardProxyBasePtrOutput) ResourceGuardResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceGuardProxyBase) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuardResourceId
	}).(pulumi.StringPtrOutput)
}

type ResourceGuardProxyBaseResponse struct {
	Description                   *string                                `pulumi:"description"`
	LastUpdatedTime               *string                                `pulumi:"lastUpdatedTime"`
	ResourceGuardOperationDetails []ResourceGuardOperationDetailResponse `pulumi:"resourceGuardOperationDetails"`
	ResourceGuardResourceId       string                                 `pulumi:"resourceGuardResourceId"`
}

type ResourceGuardProxyBaseResponseOutput struct{ *pulumi.OutputState }

func (ResourceGuardProxyBaseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGuardProxyBaseResponse)(nil)).Elem()
}

func (o ResourceGuardProxyBaseResponseOutput) ToResourceGuardProxyBaseResponseOutput() ResourceGuardProxyBaseResponseOutput {
	return o
}

func (o ResourceGuardProxyBaseResponseOutput) ToResourceGuardProxyBaseResponseOutputWithContext(ctx context.Context) ResourceGuardProxyBaseResponseOutput {
	return o
}

func (o ResourceGuardProxyBaseResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardProxyBaseResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ResourceGuardProxyBaseResponseOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGuardProxyBaseResponse) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

func (o ResourceGuardProxyBaseResponseOutput) ResourceGuardOperationDetails() ResourceGuardOperationDetailResponseArrayOutput {
	return o.ApplyT(func(v ResourceGuardProxyBaseResponse) []ResourceGuardOperationDetailResponse {
		return v.ResourceGuardOperationDetails
	}).(ResourceGuardOperationDetailResponseArrayOutput)
}

func (o ResourceGuardProxyBaseResponseOutput) ResourceGuardResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGuardProxyBaseResponse) string { return v.ResourceGuardResourceId }).(pulumi.StringOutput)
}

// Health Details for backup items.
type ResourceHealthDetailsResponse struct {
	// Health Code
	Code int `pulumi:"code"`
	// Health Message
	Message string `pulumi:"message"`
	// Health Recommended Actions
	Recommendations []string `pulumi:"recommendations"`
	// Health Title
	Title string `pulumi:"title"`
}

// Health Details for backup items.
type ResourceHealthDetailsResponseOutput struct{ *pulumi.OutputState }

func (ResourceHealthDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceHealthDetailsResponse)(nil)).Elem()
}

func (o ResourceHealthDetailsResponseOutput) ToResourceHealthDetailsResponseOutput() ResourceHealthDetailsResponseOutput {
	return o
}

func (o ResourceHealthDetailsResponseOutput) ToResourceHealthDetailsResponseOutputWithContext(ctx context.Context) ResourceHealthDetailsResponseOutput {
	return o
}

// Health Code
func (o ResourceHealthDetailsResponseOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v ResourceHealthDetailsResponse) int { return v.Code }).(pulumi.IntOutput)
}

// Health Message
func (o ResourceHealthDetailsResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceHealthDetailsResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Health Recommended Actions
func (o ResourceHealthDetailsResponseOutput) Recommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceHealthDetailsResponse) []string { return v.Recommendations }).(pulumi.StringArrayOutput)
}

// Health Title
func (o ResourceHealthDetailsResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceHealthDetailsResponse) string { return v.Title }).(pulumi.StringOutput)
}

type ResourceHealthDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceHealthDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceHealthDetailsResponse)(nil)).Elem()
}

func (o ResourceHealthDetailsResponseArrayOutput) ToResourceHealthDetailsResponseArrayOutput() ResourceHealthDetailsResponseArrayOutput {
	return o
}

func (o ResourceHealthDetailsResponseArrayOutput) ToResourceHealthDetailsResponseArrayOutputWithContext(ctx context.Context) ResourceHealthDetailsResponseArrayOutput {
	return o
}

func (o ResourceHealthDetailsResponseArrayOutput) Index(i pulumi.IntInput) ResourceHealthDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceHealthDetailsResponse {
		return vs[0].([]ResourceHealthDetailsResponse)[vs[1].(int)]
	}).(ResourceHealthDetailsResponseOutput)
}

// Restore Settings  of the vault
type RestoreSettings struct {
	// Settings for CrossSubscriptionRestore
	CrossSubscriptionRestoreSettings *CrossSubscriptionRestoreSettings `pulumi:"crossSubscriptionRestoreSettings"`
}

// RestoreSettingsInput is an input type that accepts RestoreSettingsArgs and RestoreSettingsOutput values.
// You can construct a concrete instance of `RestoreSettingsInput` via:
//
//	RestoreSettingsArgs{...}
type RestoreSettingsInput interface {
	pulumi.Input

	ToRestoreSettingsOutput() RestoreSettingsOutput
	ToRestoreSettingsOutputWithContext(context.Context) RestoreSettingsOutput
}

// Restore Settings  of the vault
type RestoreSettingsArgs struct {
	// Settings for CrossSubscriptionRestore
	CrossSubscriptionRestoreSettings CrossSubscriptionRestoreSettingsPtrInput `pulumi:"crossSubscriptionRestoreSettings"`
}

func (RestoreSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreSettings)(nil)).Elem()
}

func (i RestoreSettingsArgs) ToRestoreSettingsOutput() RestoreSettingsOutput {
	return i.ToRestoreSettingsOutputWithContext(context.Background())
}

func (i RestoreSettingsArgs) ToRestoreSettingsOutputWithContext(ctx context.Context) RestoreSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreSettingsOutput)
}

func (i RestoreSettingsArgs) ToRestoreSettingsPtrOutput() RestoreSettingsPtrOutput {
	return i.ToRestoreSettingsPtrOutputWithContext(context.Background())
}

func (i RestoreSettingsArgs) ToRestoreSettingsPtrOutputWithContext(ctx context.Context) RestoreSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreSettingsOutput).ToRestoreSettingsPtrOutputWithContext(ctx)
}

// RestoreSettingsPtrInput is an input type that accepts RestoreSettingsArgs, RestoreSettingsPtr and RestoreSettingsPtrOutput values.
// You can construct a concrete instance of `RestoreSettingsPtrInput` via:
//
//	        RestoreSettingsArgs{...}
//
//	or:
//
//	        nil
type RestoreSettingsPtrInput interface {
	pulumi.Input

	ToRestoreSettingsPtrOutput() RestoreSettingsPtrOutput
	ToRestoreSettingsPtrOutputWithContext(context.Context) RestoreSettingsPtrOutput
}

type restoreSettingsPtrType RestoreSettingsArgs

func RestoreSettingsPtr(v *RestoreSettingsArgs) RestoreSettingsPtrInput {
	return (*restoreSettingsPtrType)(v)
}

func (*restoreSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreSettings)(nil)).Elem()
}

func (i *restoreSettingsPtrType) ToRestoreSettingsPtrOutput() RestoreSettingsPtrOutput {
	return i.ToRestoreSettingsPtrOutputWithContext(context.Background())
}

func (i *restoreSettingsPtrType) ToRestoreSettingsPtrOutputWithContext(ctx context.Context) RestoreSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreSettingsPtrOutput)
}

// Restore Settings  of the vault
type RestoreSettingsOutput struct{ *pulumi.OutputState }

func (RestoreSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreSettings)(nil)).Elem()
}

func (o RestoreSettingsOutput) ToRestoreSettingsOutput() RestoreSettingsOutput {
	return o
}

func (o RestoreSettingsOutput) ToRestoreSettingsOutputWithContext(ctx context.Context) RestoreSettingsOutput {
	return o
}

func (o RestoreSettingsOutput) ToRestoreSettingsPtrOutput() RestoreSettingsPtrOutput {
	return o.ToRestoreSettingsPtrOutputWithContext(context.Background())
}

func (o RestoreSettingsOutput) ToRestoreSettingsPtrOutputWithContext(ctx context.Context) RestoreSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RestoreSettings) *RestoreSettings {
		return &v
	}).(RestoreSettingsPtrOutput)
}

// Settings for CrossSubscriptionRestore
func (o RestoreSettingsOutput) CrossSubscriptionRestoreSettings() CrossSubscriptionRestoreSettingsPtrOutput {
	return o.ApplyT(func(v RestoreSettings) *CrossSubscriptionRestoreSettings { return v.CrossSubscriptionRestoreSettings }).(CrossSubscriptionRestoreSettingsPtrOutput)
}

type RestoreSettingsPtrOutput struct{ *pulumi.OutputState }

func (RestoreSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreSettings)(nil)).Elem()
}

func (o RestoreSettingsPtrOutput) ToRestoreSettingsPtrOutput() RestoreSettingsPtrOutput {
	return o
}

func (o RestoreSettingsPtrOutput) ToRestoreSettingsPtrOutputWithContext(ctx context.Context) RestoreSettingsPtrOutput {
	return o
}

func (o RestoreSettingsPtrOutput) Elem() RestoreSettingsOutput {
	return o.ApplyT(func(v *RestoreSettings) RestoreSettings {
		if v != nil {
			return *v
		}
		var ret RestoreSettings
		return ret
	}).(RestoreSettingsOutput)
}

// Settings for CrossSubscriptionRestore
func (o RestoreSettingsPtrOutput) CrossSubscriptionRestoreSettings() CrossSubscriptionRestoreSettingsPtrOutput {
	return o.ApplyT(func(v *RestoreSettings) *CrossSubscriptionRestoreSettings {
		if v == nil {
			return nil
		}
		return v.CrossSubscriptionRestoreSettings
	}).(CrossSubscriptionRestoreSettingsPtrOutput)
}

// Restore Settings  of the vault
type RestoreSettingsResponse struct {
	// Settings for CrossSubscriptionRestore
	CrossSubscriptionRestoreSettings *CrossSubscriptionRestoreSettingsResponse `pulumi:"crossSubscriptionRestoreSettings"`
}

// Restore Settings  of the vault
type RestoreSettingsResponseOutput struct{ *pulumi.OutputState }

func (RestoreSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreSettingsResponse)(nil)).Elem()
}

func (o RestoreSettingsResponseOutput) ToRestoreSettingsResponseOutput() RestoreSettingsResponseOutput {
	return o
}

func (o RestoreSettingsResponseOutput) ToRestoreSettingsResponseOutputWithContext(ctx context.Context) RestoreSettingsResponseOutput {
	return o
}

// Settings for CrossSubscriptionRestore
func (o RestoreSettingsResponseOutput) CrossSubscriptionRestoreSettings() CrossSubscriptionRestoreSettingsResponsePtrOutput {
	return o.ApplyT(func(v RestoreSettingsResponse) *CrossSubscriptionRestoreSettingsResponse {
		return v.CrossSubscriptionRestoreSettings
	}).(CrossSubscriptionRestoreSettingsResponsePtrOutput)
}

type RestoreSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (RestoreSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreSettingsResponse)(nil)).Elem()
}

func (o RestoreSettingsResponsePtrOutput) ToRestoreSettingsResponsePtrOutput() RestoreSettingsResponsePtrOutput {
	return o
}

func (o RestoreSettingsResponsePtrOutput) ToRestoreSettingsResponsePtrOutputWithContext(ctx context.Context) RestoreSettingsResponsePtrOutput {
	return o
}

func (o RestoreSettingsResponsePtrOutput) Elem() RestoreSettingsResponseOutput {
	return o.ApplyT(func(v *RestoreSettingsResponse) RestoreSettingsResponse {
		if v != nil {
			return *v
		}
		var ret RestoreSettingsResponse
		return ret
	}).(RestoreSettingsResponseOutput)
}

// Settings for CrossSubscriptionRestore
func (o RestoreSettingsResponsePtrOutput) CrossSubscriptionRestoreSettings() CrossSubscriptionRestoreSettingsResponsePtrOutput {
	return o.ApplyT(func(v *RestoreSettingsResponse) *CrossSubscriptionRestoreSettingsResponse {
		if v == nil {
			return nil
		}
		return v.CrossSubscriptionRestoreSettings
	}).(CrossSubscriptionRestoreSettingsResponsePtrOutput)
}

// Retention duration.
type RetentionDuration struct {
	// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
	// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
	Count *int `pulumi:"count"`
	// Retention duration type of retention policy.
	DurationType *string `pulumi:"durationType"`
}

// RetentionDurationInput is an input type that accepts RetentionDurationArgs and RetentionDurationOutput values.
// You can construct a concrete instance of `RetentionDurationInput` via:
//
//	RetentionDurationArgs{...}
type RetentionDurationInput interface {
	pulumi.Input

	ToRetentionDurationOutput() RetentionDurationOutput
	ToRetentionDurationOutputWithContext(context.Context) RetentionDurationOutput
}

// Retention duration.
type RetentionDurationArgs struct {
	// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
	// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Retention duration type of retention policy.
	DurationType pulumi.StringPtrInput `pulumi:"durationType"`
}

func (RetentionDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionDuration)(nil)).Elem()
}

func (i RetentionDurationArgs) ToRetentionDurationOutput() RetentionDurationOutput {
	return i.ToRetentionDurationOutputWithContext(context.Background())
}

func (i RetentionDurationArgs) ToRetentionDurationOutputWithContext(ctx context.Context) RetentionDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionDurationOutput)
}

func (i RetentionDurationArgs) ToRetentionDurationPtrOutput() RetentionDurationPtrOutput {
	return i.ToRetentionDurationPtrOutputWithContext(context.Background())
}

func (i RetentionDurationArgs) ToRetentionDurationPtrOutputWithContext(ctx context.Context) RetentionDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionDurationOutput).ToRetentionDurationPtrOutputWithContext(ctx)
}

// RetentionDurationPtrInput is an input type that accepts RetentionDurationArgs, RetentionDurationPtr and RetentionDurationPtrOutput values.
// You can construct a concrete instance of `RetentionDurationPtrInput` via:
//
//	        RetentionDurationArgs{...}
//
//	or:
//
//	        nil
type RetentionDurationPtrInput interface {
	pulumi.Input

	ToRetentionDurationPtrOutput() RetentionDurationPtrOutput
	ToRetentionDurationPtrOutputWithContext(context.Context) RetentionDurationPtrOutput
}

type retentionDurationPtrType RetentionDurationArgs

func RetentionDurationPtr(v *RetentionDurationArgs) RetentionDurationPtrInput {
	return (*retentionDurationPtrType)(v)
}

func (*retentionDurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionDuration)(nil)).Elem()
}

func (i *retentionDurationPtrType) ToRetentionDurationPtrOutput() RetentionDurationPtrOutput {
	return i.ToRetentionDurationPtrOutputWithContext(context.Background())
}

func (i *retentionDurationPtrType) ToRetentionDurationPtrOutputWithContext(ctx context.Context) RetentionDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionDurationPtrOutput)
}

// Retention duration.
type RetentionDurationOutput struct{ *pulumi.OutputState }

func (RetentionDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionDuration)(nil)).Elem()
}

func (o RetentionDurationOutput) ToRetentionDurationOutput() RetentionDurationOutput {
	return o
}

func (o RetentionDurationOutput) ToRetentionDurationOutputWithContext(ctx context.Context) RetentionDurationOutput {
	return o
}

func (o RetentionDurationOutput) ToRetentionDurationPtrOutput() RetentionDurationPtrOutput {
	return o.ToRetentionDurationPtrOutputWithContext(context.Background())
}

func (o RetentionDurationOutput) ToRetentionDurationPtrOutputWithContext(ctx context.Context) RetentionDurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RetentionDuration) *RetentionDuration {
		return &v
	}).(RetentionDurationPtrOutput)
}

// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
func (o RetentionDurationOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionDuration) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Retention duration type of retention policy.
func (o RetentionDurationOutput) DurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RetentionDuration) *string { return v.DurationType }).(pulumi.StringPtrOutput)
}

type RetentionDurationPtrOutput struct{ *pulumi.OutputState }

func (RetentionDurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionDuration)(nil)).Elem()
}

func (o RetentionDurationPtrOutput) ToRetentionDurationPtrOutput() RetentionDurationPtrOutput {
	return o
}

func (o RetentionDurationPtrOutput) ToRetentionDurationPtrOutputWithContext(ctx context.Context) RetentionDurationPtrOutput {
	return o
}

func (o RetentionDurationPtrOutput) Elem() RetentionDurationOutput {
	return o.ApplyT(func(v *RetentionDuration) RetentionDuration {
		if v != nil {
			return *v
		}
		var ret RetentionDuration
		return ret
	}).(RetentionDurationOutput)
}

// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
func (o RetentionDurationPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionDuration) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Retention duration type of retention policy.
func (o RetentionDurationPtrOutput) DurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionDuration) *string {
		if v == nil {
			return nil
		}
		return v.DurationType
	}).(pulumi.StringPtrOutput)
}

// Retention duration.
type RetentionDurationResponse struct {
	// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
	// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
	Count *int `pulumi:"count"`
	// Retention duration type of retention policy.
	DurationType *string `pulumi:"durationType"`
}

// Retention duration.
type RetentionDurationResponseOutput struct{ *pulumi.OutputState }

func (RetentionDurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionDurationResponse)(nil)).Elem()
}

func (o RetentionDurationResponseOutput) ToRetentionDurationResponseOutput() RetentionDurationResponseOutput {
	return o
}

func (o RetentionDurationResponseOutput) ToRetentionDurationResponseOutputWithContext(ctx context.Context) RetentionDurationResponseOutput {
	return o
}

// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
func (o RetentionDurationResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionDurationResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Retention duration type of retention policy.
func (o RetentionDurationResponseOutput) DurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RetentionDurationResponse) *string { return v.DurationType }).(pulumi.StringPtrOutput)
}

type RetentionDurationResponsePtrOutput struct{ *pulumi.OutputState }

func (RetentionDurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionDurationResponse)(nil)).Elem()
}

func (o RetentionDurationResponsePtrOutput) ToRetentionDurationResponsePtrOutput() RetentionDurationResponsePtrOutput {
	return o
}

func (o RetentionDurationResponsePtrOutput) ToRetentionDurationResponsePtrOutputWithContext(ctx context.Context) RetentionDurationResponsePtrOutput {
	return o
}

func (o RetentionDurationResponsePtrOutput) Elem() RetentionDurationResponseOutput {
	return o.ApplyT(func(v *RetentionDurationResponse) RetentionDurationResponse {
		if v != nil {
			return *v
		}
		var ret RetentionDurationResponse
		return ret
	}).(RetentionDurationResponseOutput)
}

// Count of duration types. Retention duration is obtained by the counting the duration type Count times.
// For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
func (o RetentionDurationResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionDurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Retention duration type of retention policy.
func (o RetentionDurationResponsePtrOutput) DurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RetentionDurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DurationType
	}).(pulumi.StringPtrOutput)
}

// Security Settings of the vault
type SecuritySettings struct {
	// Immutability Settings of a vault
	ImmutabilitySettings *ImmutabilitySettings `pulumi:"immutabilitySettings"`
	// Soft delete Settings of a vault
	SoftDeleteSettings *SoftDeleteSettings `pulumi:"softDeleteSettings"`
}

// SecuritySettingsInput is an input type that accepts SecuritySettingsArgs and SecuritySettingsOutput values.
// You can construct a concrete instance of `SecuritySettingsInput` via:
//
//	SecuritySettingsArgs{...}
type SecuritySettingsInput interface {
	pulumi.Input

	ToSecuritySettingsOutput() SecuritySettingsOutput
	ToSecuritySettingsOutputWithContext(context.Context) SecuritySettingsOutput
}

// Security Settings of the vault
type SecuritySettingsArgs struct {
	// Immutability Settings of a vault
	ImmutabilitySettings ImmutabilitySettingsPtrInput `pulumi:"immutabilitySettings"`
	// Soft delete Settings of a vault
	SoftDeleteSettings SoftDeleteSettingsPtrInput `pulumi:"softDeleteSettings"`
}

func (SecuritySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySettings)(nil)).Elem()
}

func (i SecuritySettingsArgs) ToSecuritySettingsOutput() SecuritySettingsOutput {
	return i.ToSecuritySettingsOutputWithContext(context.Background())
}

func (i SecuritySettingsArgs) ToSecuritySettingsOutputWithContext(ctx context.Context) SecuritySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySettingsOutput)
}

func (i SecuritySettingsArgs) ToSecuritySettingsPtrOutput() SecuritySettingsPtrOutput {
	return i.ToSecuritySettingsPtrOutputWithContext(context.Background())
}

func (i SecuritySettingsArgs) ToSecuritySettingsPtrOutputWithContext(ctx context.Context) SecuritySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySettingsOutput).ToSecuritySettingsPtrOutputWithContext(ctx)
}

// SecuritySettingsPtrInput is an input type that accepts SecuritySettingsArgs, SecuritySettingsPtr and SecuritySettingsPtrOutput values.
// You can construct a concrete instance of `SecuritySettingsPtrInput` via:
//
//	        SecuritySettingsArgs{...}
//
//	or:
//
//	        nil
type SecuritySettingsPtrInput interface {
	pulumi.Input

	ToSecuritySettingsPtrOutput() SecuritySettingsPtrOutput
	ToSecuritySettingsPtrOutputWithContext(context.Context) SecuritySettingsPtrOutput
}

type securitySettingsPtrType SecuritySettingsArgs

func SecuritySettingsPtr(v *SecuritySettingsArgs) SecuritySettingsPtrInput {
	return (*securitySettingsPtrType)(v)
}

func (*securitySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySettings)(nil)).Elem()
}

func (i *securitySettingsPtrType) ToSecuritySettingsPtrOutput() SecuritySettingsPtrOutput {
	return i.ToSecuritySettingsPtrOutputWithContext(context.Background())
}

func (i *securitySettingsPtrType) ToSecuritySettingsPtrOutputWithContext(ctx context.Context) SecuritySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySettingsPtrOutput)
}

// Security Settings of the vault
type SecuritySettingsOutput struct{ *pulumi.OutputState }

func (SecuritySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySettings)(nil)).Elem()
}

func (o SecuritySettingsOutput) ToSecuritySettingsOutput() SecuritySettingsOutput {
	return o
}

func (o SecuritySettingsOutput) ToSecuritySettingsOutputWithContext(ctx context.Context) SecuritySettingsOutput {
	return o
}

func (o SecuritySettingsOutput) ToSecuritySettingsPtrOutput() SecuritySettingsPtrOutput {
	return o.ToSecuritySettingsPtrOutputWithContext(context.Background())
}

func (o SecuritySettingsOutput) ToSecuritySettingsPtrOutputWithContext(ctx context.Context) SecuritySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecuritySettings) *SecuritySettings {
		return &v
	}).(SecuritySettingsPtrOutput)
}

// Immutability Settings of a vault
func (o SecuritySettingsOutput) ImmutabilitySettings() ImmutabilitySettingsPtrOutput {
	return o.ApplyT(func(v SecuritySettings) *ImmutabilitySettings { return v.ImmutabilitySettings }).(ImmutabilitySettingsPtrOutput)
}

// Soft delete Settings of a vault
func (o SecuritySettingsOutput) SoftDeleteSettings() SoftDeleteSettingsPtrOutput {
	return o.ApplyT(func(v SecuritySettings) *SoftDeleteSettings { return v.SoftDeleteSettings }).(SoftDeleteSettingsPtrOutput)
}

type SecuritySettingsPtrOutput struct{ *pulumi.OutputState }

func (SecuritySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySettings)(nil)).Elem()
}

func (o SecuritySettingsPtrOutput) ToSecuritySettingsPtrOutput() SecuritySettingsPtrOutput {
	return o
}

func (o SecuritySettingsPtrOutput) ToSecuritySettingsPtrOutputWithContext(ctx context.Context) SecuritySettingsPtrOutput {
	return o
}

func (o SecuritySettingsPtrOutput) Elem() SecuritySettingsOutput {
	return o.ApplyT(func(v *SecuritySettings) SecuritySettings {
		if v != nil {
			return *v
		}
		var ret SecuritySettings
		return ret
	}).(SecuritySettingsOutput)
}

// Immutability Settings of a vault
func (o SecuritySettingsPtrOutput) ImmutabilitySettings() ImmutabilitySettingsPtrOutput {
	return o.ApplyT(func(v *SecuritySettings) *ImmutabilitySettings {
		if v == nil {
			return nil
		}
		return v.ImmutabilitySettings
	}).(ImmutabilitySettingsPtrOutput)
}

// Soft delete Settings of a vault
func (o SecuritySettingsPtrOutput) SoftDeleteSettings() SoftDeleteSettingsPtrOutput {
	return o.ApplyT(func(v *SecuritySettings) *SoftDeleteSettings {
		if v == nil {
			return nil
		}
		return v.SoftDeleteSettings
	}).(SoftDeleteSettingsPtrOutput)
}

// Security Settings of the vault
type SecuritySettingsResponse struct {
	// Immutability Settings of a vault
	ImmutabilitySettings *ImmutabilitySettingsResponse `pulumi:"immutabilitySettings"`
	// MUA Settings of a vault
	MultiUserAuthorization string `pulumi:"multiUserAuthorization"`
	// Soft delete Settings of a vault
	SoftDeleteSettings *SoftDeleteSettingsResponse `pulumi:"softDeleteSettings"`
}

// Security Settings of the vault
type SecuritySettingsResponseOutput struct{ *pulumi.OutputState }

func (SecuritySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySettingsResponse)(nil)).Elem()
}

func (o SecuritySettingsResponseOutput) ToSecuritySettingsResponseOutput() SecuritySettingsResponseOutput {
	return o
}

func (o SecuritySettingsResponseOutput) ToSecuritySettingsResponseOutputWithContext(ctx context.Context) SecuritySettingsResponseOutput {
	return o
}

// Immutability Settings of a vault
func (o SecuritySettingsResponseOutput) ImmutabilitySettings() ImmutabilitySettingsResponsePtrOutput {
	return o.ApplyT(func(v SecuritySettingsResponse) *ImmutabilitySettingsResponse { return v.ImmutabilitySettings }).(ImmutabilitySettingsResponsePtrOutput)
}

// MUA Settings of a vault
func (o SecuritySettingsResponseOutput) MultiUserAuthorization() pulumi.StringOutput {
	return o.ApplyT(func(v SecuritySettingsResponse) string { return v.MultiUserAuthorization }).(pulumi.StringOutput)
}

// Soft delete Settings of a vault
func (o SecuritySettingsResponseOutput) SoftDeleteSettings() SoftDeleteSettingsResponsePtrOutput {
	return o.ApplyT(func(v SecuritySettingsResponse) *SoftDeleteSettingsResponse { return v.SoftDeleteSettings }).(SoftDeleteSettingsResponsePtrOutput)
}

type SecuritySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (SecuritySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySettingsResponse)(nil)).Elem()
}

func (o SecuritySettingsResponsePtrOutput) ToSecuritySettingsResponsePtrOutput() SecuritySettingsResponsePtrOutput {
	return o
}

func (o SecuritySettingsResponsePtrOutput) ToSecuritySettingsResponsePtrOutputWithContext(ctx context.Context) SecuritySettingsResponsePtrOutput {
	return o
}

func (o SecuritySettingsResponsePtrOutput) Elem() SecuritySettingsResponseOutput {
	return o.ApplyT(func(v *SecuritySettingsResponse) SecuritySettingsResponse {
		if v != nil {
			return *v
		}
		var ret SecuritySettingsResponse
		return ret
	}).(SecuritySettingsResponseOutput)
}

// Immutability Settings of a vault
func (o SecuritySettingsResponsePtrOutput) ImmutabilitySettings() ImmutabilitySettingsResponsePtrOutput {
	return o.ApplyT(func(v *SecuritySettingsResponse) *ImmutabilitySettingsResponse {
		if v == nil {
			return nil
		}
		return v.ImmutabilitySettings
	}).(ImmutabilitySettingsResponsePtrOutput)
}

// MUA Settings of a vault
func (o SecuritySettingsResponsePtrOutput) MultiUserAuthorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecuritySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MultiUserAuthorization
	}).(pulumi.StringPtrOutput)
}

// Soft delete Settings of a vault
func (o SecuritySettingsResponsePtrOutput) SoftDeleteSettings() SoftDeleteSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SecuritySettingsResponse) *SoftDeleteSettingsResponse {
		if v == nil {
			return nil
		}
		return v.SoftDeleteSettings
	}).(SoftDeleteSettingsResponsePtrOutput)
}

// Common settings field for backup management
type Settings struct {
	// Workload compression flag. This has been added so that 'isSqlCompression'
	// will be deprecated once clients upgrade to consider this flag.
	IsCompression *bool `pulumi:"isCompression"`
	// SQL compression flag
	Issqlcompression *bool `pulumi:"issqlcompression"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// SettingsInput is an input type that accepts SettingsArgs and SettingsOutput values.
// You can construct a concrete instance of `SettingsInput` via:
//
//	SettingsArgs{...}
type SettingsInput interface {
	pulumi.Input

	ToSettingsOutput() SettingsOutput
	ToSettingsOutputWithContext(context.Context) SettingsOutput
}

// Common settings field for backup management
type SettingsArgs struct {
	// Workload compression flag. This has been added so that 'isSqlCompression'
	// will be deprecated once clients upgrade to consider this flag.
	IsCompression pulumi.BoolPtrInput `pulumi:"isCompression"`
	// SQL compression flag
	Issqlcompression pulumi.BoolPtrInput `pulumi:"issqlcompression"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Settings)(nil)).Elem()
}

func (i SettingsArgs) ToSettingsOutput() SettingsOutput {
	return i.ToSettingsOutputWithContext(context.Background())
}

func (i SettingsArgs) ToSettingsOutputWithContext(ctx context.Context) SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsOutput)
}

func (i SettingsArgs) ToSettingsPtrOutput() SettingsPtrOutput {
	return i.ToSettingsPtrOutputWithContext(context.Background())
}

func (i SettingsArgs) ToSettingsPtrOutputWithContext(ctx context.Context) SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsOutput).ToSettingsPtrOutputWithContext(ctx)
}

// SettingsPtrInput is an input type that accepts SettingsArgs, SettingsPtr and SettingsPtrOutput values.
// You can construct a concrete instance of `SettingsPtrInput` via:
//
//	        SettingsArgs{...}
//
//	or:
//
//	        nil
type SettingsPtrInput interface {
	pulumi.Input

	ToSettingsPtrOutput() SettingsPtrOutput
	ToSettingsPtrOutputWithContext(context.Context) SettingsPtrOutput
}

type settingsPtrType SettingsArgs

func SettingsPtr(v *SettingsArgs) SettingsPtrInput {
	return (*settingsPtrType)(v)
}

func (*settingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Settings)(nil)).Elem()
}

func (i *settingsPtrType) ToSettingsPtrOutput() SettingsPtrOutput {
	return i.ToSettingsPtrOutputWithContext(context.Background())
}

func (i *settingsPtrType) ToSettingsPtrOutputWithContext(ctx context.Context) SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingsPtrOutput)
}

// Common settings field for backup management
type SettingsOutput struct{ *pulumi.OutputState }

func (SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Settings)(nil)).Elem()
}

func (o SettingsOutput) ToSettingsOutput() SettingsOutput {
	return o
}

func (o SettingsOutput) ToSettingsOutputWithContext(ctx context.Context) SettingsOutput {
	return o
}

func (o SettingsOutput) ToSettingsPtrOutput() SettingsPtrOutput {
	return o.ToSettingsPtrOutputWithContext(context.Background())
}

func (o SettingsOutput) ToSettingsPtrOutputWithContext(ctx context.Context) SettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Settings) *Settings {
		return &v
	}).(SettingsPtrOutput)
}

// Workload compression flag. This has been added so that 'isSqlCompression'
// will be deprecated once clients upgrade to consider this flag.
func (o SettingsOutput) IsCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Settings) *bool { return v.IsCompression }).(pulumi.BoolPtrOutput)
}

// SQL compression flag
func (o SettingsOutput) Issqlcompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Settings) *bool { return v.Issqlcompression }).(pulumi.BoolPtrOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o SettingsOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Settings) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type SettingsPtrOutput struct{ *pulumi.OutputState }

func (SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Settings)(nil)).Elem()
}

func (o SettingsPtrOutput) ToSettingsPtrOutput() SettingsPtrOutput {
	return o
}

func (o SettingsPtrOutput) ToSettingsPtrOutputWithContext(ctx context.Context) SettingsPtrOutput {
	return o
}

func (o SettingsPtrOutput) Elem() SettingsOutput {
	return o.ApplyT(func(v *Settings) Settings {
		if v != nil {
			return *v
		}
		var ret Settings
		return ret
	}).(SettingsOutput)
}

// Workload compression flag. This has been added so that 'isSqlCompression'
// will be deprecated once clients upgrade to consider this flag.
func (o SettingsPtrOutput) IsCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Settings) *bool {
		if v == nil {
			return nil
		}
		return v.IsCompression
	}).(pulumi.BoolPtrOutput)
}

// SQL compression flag
func (o SettingsPtrOutput) Issqlcompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Settings) *bool {
		if v == nil {
			return nil
		}
		return v.Issqlcompression
	}).(pulumi.BoolPtrOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o SettingsPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Settings) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Common settings field for backup management
type SettingsResponse struct {
	// Workload compression flag. This has been added so that 'isSqlCompression'
	// will be deprecated once clients upgrade to consider this flag.
	IsCompression *bool `pulumi:"isCompression"`
	// SQL compression flag
	Issqlcompression *bool `pulumi:"issqlcompression"`
	// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
	TimeZone *string `pulumi:"timeZone"`
}

// Common settings field for backup management
type SettingsResponseOutput struct{ *pulumi.OutputState }

func (SettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsResponse)(nil)).Elem()
}

func (o SettingsResponseOutput) ToSettingsResponseOutput() SettingsResponseOutput {
	return o
}

func (o SettingsResponseOutput) ToSettingsResponseOutputWithContext(ctx context.Context) SettingsResponseOutput {
	return o
}

// Workload compression flag. This has been added so that 'isSqlCompression'
// will be deprecated once clients upgrade to consider this flag.
func (o SettingsResponseOutput) IsCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingsResponse) *bool { return v.IsCompression }).(pulumi.BoolPtrOutput)
}

// SQL compression flag
func (o SettingsResponseOutput) Issqlcompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SettingsResponse) *bool { return v.Issqlcompression }).(pulumi.BoolPtrOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o SettingsResponseOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingsResponse) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type SettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (SettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsResponse)(nil)).Elem()
}

func (o SettingsResponsePtrOutput) ToSettingsResponsePtrOutput() SettingsResponsePtrOutput {
	return o
}

func (o SettingsResponsePtrOutput) ToSettingsResponsePtrOutputWithContext(ctx context.Context) SettingsResponsePtrOutput {
	return o
}

func (o SettingsResponsePtrOutput) Elem() SettingsResponseOutput {
	return o.ApplyT(func(v *SettingsResponse) SettingsResponse {
		if v != nil {
			return *v
		}
		var ret SettingsResponse
		return ret
	}).(SettingsResponseOutput)
}

// Workload compression flag. This has been added so that 'isSqlCompression'
// will be deprecated once clients upgrade to consider this flag.
func (o SettingsResponsePtrOutput) IsCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsCompression
	}).(pulumi.BoolPtrOutput)
}

// SQL compression flag
func (o SettingsResponsePtrOutput) Issqlcompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Issqlcompression
	}).(pulumi.BoolPtrOutput)
}

// TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
func (o SettingsResponsePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Simple policy retention.
type SimpleRetentionPolicy struct {
	// Retention duration of the protection policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleRetentionPolicy'.
	RetentionPolicyType string `pulumi:"retentionPolicyType"`
}

// SimpleRetentionPolicyInput is an input type that accepts SimpleRetentionPolicyArgs and SimpleRetentionPolicyOutput values.
// You can construct a concrete instance of `SimpleRetentionPolicyInput` via:
//
//	SimpleRetentionPolicyArgs{...}
type SimpleRetentionPolicyInput interface {
	pulumi.Input

	ToSimpleRetentionPolicyOutput() SimpleRetentionPolicyOutput
	ToSimpleRetentionPolicyOutputWithContext(context.Context) SimpleRetentionPolicyOutput
}

// Simple policy retention.
type SimpleRetentionPolicyArgs struct {
	// Retention duration of the protection policy.
	RetentionDuration RetentionDurationPtrInput `pulumi:"retentionDuration"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleRetentionPolicy'.
	RetentionPolicyType pulumi.StringInput `pulumi:"retentionPolicyType"`
}

func (SimpleRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleRetentionPolicy)(nil)).Elem()
}

func (i SimpleRetentionPolicyArgs) ToSimpleRetentionPolicyOutput() SimpleRetentionPolicyOutput {
	return i.ToSimpleRetentionPolicyOutputWithContext(context.Background())
}

func (i SimpleRetentionPolicyArgs) ToSimpleRetentionPolicyOutputWithContext(ctx context.Context) SimpleRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleRetentionPolicyOutput)
}

func (i SimpleRetentionPolicyArgs) ToSimpleRetentionPolicyPtrOutput() SimpleRetentionPolicyPtrOutput {
	return i.ToSimpleRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i SimpleRetentionPolicyArgs) ToSimpleRetentionPolicyPtrOutputWithContext(ctx context.Context) SimpleRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleRetentionPolicyOutput).ToSimpleRetentionPolicyPtrOutputWithContext(ctx)
}

// SimpleRetentionPolicyPtrInput is an input type that accepts SimpleRetentionPolicyArgs, SimpleRetentionPolicyPtr and SimpleRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `SimpleRetentionPolicyPtrInput` via:
//
//	        SimpleRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type SimpleRetentionPolicyPtrInput interface {
	pulumi.Input

	ToSimpleRetentionPolicyPtrOutput() SimpleRetentionPolicyPtrOutput
	ToSimpleRetentionPolicyPtrOutputWithContext(context.Context) SimpleRetentionPolicyPtrOutput
}

type simpleRetentionPolicyPtrType SimpleRetentionPolicyArgs

func SimpleRetentionPolicyPtr(v *SimpleRetentionPolicyArgs) SimpleRetentionPolicyPtrInput {
	return (*simpleRetentionPolicyPtrType)(v)
}

func (*simpleRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleRetentionPolicy)(nil)).Elem()
}

func (i *simpleRetentionPolicyPtrType) ToSimpleRetentionPolicyPtrOutput() SimpleRetentionPolicyPtrOutput {
	return i.ToSimpleRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *simpleRetentionPolicyPtrType) ToSimpleRetentionPolicyPtrOutputWithContext(ctx context.Context) SimpleRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleRetentionPolicyPtrOutput)
}

// Simple policy retention.
type SimpleRetentionPolicyOutput struct{ *pulumi.OutputState }

func (SimpleRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleRetentionPolicy)(nil)).Elem()
}

func (o SimpleRetentionPolicyOutput) ToSimpleRetentionPolicyOutput() SimpleRetentionPolicyOutput {
	return o
}

func (o SimpleRetentionPolicyOutput) ToSimpleRetentionPolicyOutputWithContext(ctx context.Context) SimpleRetentionPolicyOutput {
	return o
}

func (o SimpleRetentionPolicyOutput) ToSimpleRetentionPolicyPtrOutput() SimpleRetentionPolicyPtrOutput {
	return o.ToSimpleRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o SimpleRetentionPolicyOutput) ToSimpleRetentionPolicyPtrOutputWithContext(ctx context.Context) SimpleRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SimpleRetentionPolicy) *SimpleRetentionPolicy {
		return &v
	}).(SimpleRetentionPolicyPtrOutput)
}

// Retention duration of the protection policy.
func (o SimpleRetentionPolicyOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v SimpleRetentionPolicy) *RetentionDuration { return v.RetentionDuration }).(RetentionDurationPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleRetentionPolicy'.
func (o SimpleRetentionPolicyOutput) RetentionPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v SimpleRetentionPolicy) string { return v.RetentionPolicyType }).(pulumi.StringOutput)
}

type SimpleRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (SimpleRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleRetentionPolicy)(nil)).Elem()
}

func (o SimpleRetentionPolicyPtrOutput) ToSimpleRetentionPolicyPtrOutput() SimpleRetentionPolicyPtrOutput {
	return o
}

func (o SimpleRetentionPolicyPtrOutput) ToSimpleRetentionPolicyPtrOutputWithContext(ctx context.Context) SimpleRetentionPolicyPtrOutput {
	return o
}

func (o SimpleRetentionPolicyPtrOutput) Elem() SimpleRetentionPolicyOutput {
	return o.ApplyT(func(v *SimpleRetentionPolicy) SimpleRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret SimpleRetentionPolicy
		return ret
	}).(SimpleRetentionPolicyOutput)
}

// Retention duration of the protection policy.
func (o SimpleRetentionPolicyPtrOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v *SimpleRetentionPolicy) *RetentionDuration {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationPtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleRetentionPolicy'.
func (o SimpleRetentionPolicyPtrOutput) RetentionPolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleRetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionPolicyType
	}).(pulumi.StringPtrOutput)
}

// Simple policy retention.
type SimpleRetentionPolicyResponse struct {
	// Retention duration of the protection policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleRetentionPolicy'.
	RetentionPolicyType string `pulumi:"retentionPolicyType"`
}

// Simple policy retention.
type SimpleRetentionPolicyResponseOutput struct{ *pulumi.OutputState }

func (SimpleRetentionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleRetentionPolicyResponse)(nil)).Elem()
}

func (o SimpleRetentionPolicyResponseOutput) ToSimpleRetentionPolicyResponseOutput() SimpleRetentionPolicyResponseOutput {
	return o
}

func (o SimpleRetentionPolicyResponseOutput) ToSimpleRetentionPolicyResponseOutputWithContext(ctx context.Context) SimpleRetentionPolicyResponseOutput {
	return o
}

// Retention duration of the protection policy.
func (o SimpleRetentionPolicyResponseOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v SimpleRetentionPolicyResponse) *RetentionDurationResponse { return v.RetentionDuration }).(RetentionDurationResponsePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleRetentionPolicy'.
func (o SimpleRetentionPolicyResponseOutput) RetentionPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v SimpleRetentionPolicyResponse) string { return v.RetentionPolicyType }).(pulumi.StringOutput)
}

type SimpleRetentionPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (SimpleRetentionPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleRetentionPolicyResponse)(nil)).Elem()
}

func (o SimpleRetentionPolicyResponsePtrOutput) ToSimpleRetentionPolicyResponsePtrOutput() SimpleRetentionPolicyResponsePtrOutput {
	return o
}

func (o SimpleRetentionPolicyResponsePtrOutput) ToSimpleRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) SimpleRetentionPolicyResponsePtrOutput {
	return o
}

func (o SimpleRetentionPolicyResponsePtrOutput) Elem() SimpleRetentionPolicyResponseOutput {
	return o.ApplyT(func(v *SimpleRetentionPolicyResponse) SimpleRetentionPolicyResponse {
		if v != nil {
			return *v
		}
		var ret SimpleRetentionPolicyResponse
		return ret
	}).(SimpleRetentionPolicyResponseOutput)
}

// Retention duration of the protection policy.
func (o SimpleRetentionPolicyResponsePtrOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v *SimpleRetentionPolicyResponse) *RetentionDurationResponse {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationResponsePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleRetentionPolicy'.
func (o SimpleRetentionPolicyResponsePtrOutput) RetentionPolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleRetentionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionPolicyType
	}).(pulumi.StringPtrOutput)
}

// Simple policy schedule.
type SimpleSchedulePolicy struct {
	// Hourly Schedule of this Policy
	HourlySchedule *HourlySchedule `pulumi:"hourlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
	// List of days of week this schedule has to be run.
	ScheduleRunDays []DayOfWeek `pulumi:"scheduleRunDays"`
	// Frequency of the schedule operation of this policy.
	ScheduleRunFrequency *string `pulumi:"scheduleRunFrequency"`
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
	// At every number weeks this schedule has to be run.
	ScheduleWeeklyFrequency *int `pulumi:"scheduleWeeklyFrequency"`
}

// SimpleSchedulePolicyInput is an input type that accepts SimpleSchedulePolicyArgs and SimpleSchedulePolicyOutput values.
// You can construct a concrete instance of `SimpleSchedulePolicyInput` via:
//
//	SimpleSchedulePolicyArgs{...}
type SimpleSchedulePolicyInput interface {
	pulumi.Input

	ToSimpleSchedulePolicyOutput() SimpleSchedulePolicyOutput
	ToSimpleSchedulePolicyOutputWithContext(context.Context) SimpleSchedulePolicyOutput
}

// Simple policy schedule.
type SimpleSchedulePolicyArgs struct {
	// Hourly Schedule of this Policy
	HourlySchedule HourlySchedulePtrInput `pulumi:"hourlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicy'.
	SchedulePolicyType pulumi.StringInput `pulumi:"schedulePolicyType"`
	// List of days of week this schedule has to be run.
	ScheduleRunDays DayOfWeekArrayInput `pulumi:"scheduleRunDays"`
	// Frequency of the schedule operation of this policy.
	ScheduleRunFrequency pulumi.StringPtrInput `pulumi:"scheduleRunFrequency"`
	// List of times of day this schedule has to be run.
	ScheduleRunTimes pulumi.StringArrayInput `pulumi:"scheduleRunTimes"`
	// At every number weeks this schedule has to be run.
	ScheduleWeeklyFrequency pulumi.IntPtrInput `pulumi:"scheduleWeeklyFrequency"`
}

func (SimpleSchedulePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleSchedulePolicy)(nil)).Elem()
}

func (i SimpleSchedulePolicyArgs) ToSimpleSchedulePolicyOutput() SimpleSchedulePolicyOutput {
	return i.ToSimpleSchedulePolicyOutputWithContext(context.Background())
}

func (i SimpleSchedulePolicyArgs) ToSimpleSchedulePolicyOutputWithContext(ctx context.Context) SimpleSchedulePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleSchedulePolicyOutput)
}

func (i SimpleSchedulePolicyArgs) ToSimpleSchedulePolicyPtrOutput() SimpleSchedulePolicyPtrOutput {
	return i.ToSimpleSchedulePolicyPtrOutputWithContext(context.Background())
}

func (i SimpleSchedulePolicyArgs) ToSimpleSchedulePolicyPtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleSchedulePolicyOutput).ToSimpleSchedulePolicyPtrOutputWithContext(ctx)
}

// SimpleSchedulePolicyPtrInput is an input type that accepts SimpleSchedulePolicyArgs, SimpleSchedulePolicyPtr and SimpleSchedulePolicyPtrOutput values.
// You can construct a concrete instance of `SimpleSchedulePolicyPtrInput` via:
//
//	        SimpleSchedulePolicyArgs{...}
//
//	or:
//
//	        nil
type SimpleSchedulePolicyPtrInput interface {
	pulumi.Input

	ToSimpleSchedulePolicyPtrOutput() SimpleSchedulePolicyPtrOutput
	ToSimpleSchedulePolicyPtrOutputWithContext(context.Context) SimpleSchedulePolicyPtrOutput
}

type simpleSchedulePolicyPtrType SimpleSchedulePolicyArgs

func SimpleSchedulePolicyPtr(v *SimpleSchedulePolicyArgs) SimpleSchedulePolicyPtrInput {
	return (*simpleSchedulePolicyPtrType)(v)
}

func (*simpleSchedulePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleSchedulePolicy)(nil)).Elem()
}

func (i *simpleSchedulePolicyPtrType) ToSimpleSchedulePolicyPtrOutput() SimpleSchedulePolicyPtrOutput {
	return i.ToSimpleSchedulePolicyPtrOutputWithContext(context.Background())
}

func (i *simpleSchedulePolicyPtrType) ToSimpleSchedulePolicyPtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleSchedulePolicyPtrOutput)
}

// Simple policy schedule.
type SimpleSchedulePolicyOutput struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleSchedulePolicy)(nil)).Elem()
}

func (o SimpleSchedulePolicyOutput) ToSimpleSchedulePolicyOutput() SimpleSchedulePolicyOutput {
	return o
}

func (o SimpleSchedulePolicyOutput) ToSimpleSchedulePolicyOutputWithContext(ctx context.Context) SimpleSchedulePolicyOutput {
	return o
}

func (o SimpleSchedulePolicyOutput) ToSimpleSchedulePolicyPtrOutput() SimpleSchedulePolicyPtrOutput {
	return o.ToSimpleSchedulePolicyPtrOutputWithContext(context.Background())
}

func (o SimpleSchedulePolicyOutput) ToSimpleSchedulePolicyPtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SimpleSchedulePolicy) *SimpleSchedulePolicy {
		return &v
	}).(SimpleSchedulePolicyPtrOutput)
}

// Hourly Schedule of this Policy
func (o SimpleSchedulePolicyOutput) HourlySchedule() HourlySchedulePtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicy) *HourlySchedule { return v.HourlySchedule }).(HourlySchedulePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleSchedulePolicy'.
func (o SimpleSchedulePolicyOutput) SchedulePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v SimpleSchedulePolicy) string { return v.SchedulePolicyType }).(pulumi.StringOutput)
}

// List of days of week this schedule has to be run.
func (o SimpleSchedulePolicyOutput) ScheduleRunDays() DayOfWeekArrayOutput {
	return o.ApplyT(func(v SimpleSchedulePolicy) []DayOfWeek { return v.ScheduleRunDays }).(DayOfWeekArrayOutput)
}

// Frequency of the schedule operation of this policy.
func (o SimpleSchedulePolicyOutput) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicy) *string { return v.ScheduleRunFrequency }).(pulumi.StringPtrOutput)
}

// List of times of day this schedule has to be run.
func (o SimpleSchedulePolicyOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SimpleSchedulePolicy) []string { return v.ScheduleRunTimes }).(pulumi.StringArrayOutput)
}

// At every number weeks this schedule has to be run.
func (o SimpleSchedulePolicyOutput) ScheduleWeeklyFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicy) *int { return v.ScheduleWeeklyFrequency }).(pulumi.IntPtrOutput)
}

type SimpleSchedulePolicyPtrOutput struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleSchedulePolicy)(nil)).Elem()
}

func (o SimpleSchedulePolicyPtrOutput) ToSimpleSchedulePolicyPtrOutput() SimpleSchedulePolicyPtrOutput {
	return o
}

func (o SimpleSchedulePolicyPtrOutput) ToSimpleSchedulePolicyPtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyPtrOutput {
	return o
}

func (o SimpleSchedulePolicyPtrOutput) Elem() SimpleSchedulePolicyOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicy) SimpleSchedulePolicy {
		if v != nil {
			return *v
		}
		var ret SimpleSchedulePolicy
		return ret
	}).(SimpleSchedulePolicyOutput)
}

// Hourly Schedule of this Policy
func (o SimpleSchedulePolicyPtrOutput) HourlySchedule() HourlySchedulePtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicy) *HourlySchedule {
		if v == nil {
			return nil
		}
		return v.HourlySchedule
	}).(HourlySchedulePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleSchedulePolicy'.
func (o SimpleSchedulePolicyPtrOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.SchedulePolicyType
	}).(pulumi.StringPtrOutput)
}

// List of days of week this schedule has to be run.
func (o SimpleSchedulePolicyPtrOutput) ScheduleRunDays() DayOfWeekArrayOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicy) []DayOfWeek {
		if v == nil {
			return nil
		}
		return v.ScheduleRunDays
	}).(DayOfWeekArrayOutput)
}

// Frequency of the schedule operation of this policy.
func (o SimpleSchedulePolicyPtrOutput) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicy) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunFrequency
	}).(pulumi.StringPtrOutput)
}

// List of times of day this schedule has to be run.
func (o SimpleSchedulePolicyPtrOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicy) []string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunTimes
	}).(pulumi.StringArrayOutput)
}

// At every number weeks this schedule has to be run.
func (o SimpleSchedulePolicyPtrOutput) ScheduleWeeklyFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicy) *int {
		if v == nil {
			return nil
		}
		return v.ScheduleWeeklyFrequency
	}).(pulumi.IntPtrOutput)
}

// Simple policy schedule.
type SimpleSchedulePolicyResponse struct {
	// Hourly Schedule of this Policy
	HourlySchedule *HourlyScheduleResponse `pulumi:"hourlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicy'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
	// List of days of week this schedule has to be run.
	ScheduleRunDays []string `pulumi:"scheduleRunDays"`
	// Frequency of the schedule operation of this policy.
	ScheduleRunFrequency *string `pulumi:"scheduleRunFrequency"`
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
	// At every number weeks this schedule has to be run.
	ScheduleWeeklyFrequency *int `pulumi:"scheduleWeeklyFrequency"`
}

// Simple policy schedule.
type SimpleSchedulePolicyResponseOutput struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleSchedulePolicyResponse)(nil)).Elem()
}

func (o SimpleSchedulePolicyResponseOutput) ToSimpleSchedulePolicyResponseOutput() SimpleSchedulePolicyResponseOutput {
	return o
}

func (o SimpleSchedulePolicyResponseOutput) ToSimpleSchedulePolicyResponseOutputWithContext(ctx context.Context) SimpleSchedulePolicyResponseOutput {
	return o
}

// Hourly Schedule of this Policy
func (o SimpleSchedulePolicyResponseOutput) HourlySchedule() HourlyScheduleResponsePtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) *HourlyScheduleResponse { return v.HourlySchedule }).(HourlyScheduleResponsePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleSchedulePolicy'.
func (o SimpleSchedulePolicyResponseOutput) SchedulePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) string { return v.SchedulePolicyType }).(pulumi.StringOutput)
}

// List of days of week this schedule has to be run.
func (o SimpleSchedulePolicyResponseOutput) ScheduleRunDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) []string { return v.ScheduleRunDays }).(pulumi.StringArrayOutput)
}

// Frequency of the schedule operation of this policy.
func (o SimpleSchedulePolicyResponseOutput) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) *string { return v.ScheduleRunFrequency }).(pulumi.StringPtrOutput)
}

// List of times of day this schedule has to be run.
func (o SimpleSchedulePolicyResponseOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) []string { return v.ScheduleRunTimes }).(pulumi.StringArrayOutput)
}

// At every number weeks this schedule has to be run.
func (o SimpleSchedulePolicyResponseOutput) ScheduleWeeklyFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyResponse) *int { return v.ScheduleWeeklyFrequency }).(pulumi.IntPtrOutput)
}

type SimpleSchedulePolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleSchedulePolicyResponse)(nil)).Elem()
}

func (o SimpleSchedulePolicyResponsePtrOutput) ToSimpleSchedulePolicyResponsePtrOutput() SimpleSchedulePolicyResponsePtrOutput {
	return o
}

func (o SimpleSchedulePolicyResponsePtrOutput) ToSimpleSchedulePolicyResponsePtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyResponsePtrOutput {
	return o
}

func (o SimpleSchedulePolicyResponsePtrOutput) Elem() SimpleSchedulePolicyResponseOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyResponse) SimpleSchedulePolicyResponse {
		if v != nil {
			return *v
		}
		var ret SimpleSchedulePolicyResponse
		return ret
	}).(SimpleSchedulePolicyResponseOutput)
}

// Hourly Schedule of this Policy
func (o SimpleSchedulePolicyResponsePtrOutput) HourlySchedule() HourlyScheduleResponsePtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyResponse) *HourlyScheduleResponse {
		if v == nil {
			return nil
		}
		return v.HourlySchedule
	}).(HourlyScheduleResponsePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleSchedulePolicy'.
func (o SimpleSchedulePolicyResponsePtrOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SchedulePolicyType
	}).(pulumi.StringPtrOutput)
}

// List of days of week this schedule has to be run.
func (o SimpleSchedulePolicyResponsePtrOutput) ScheduleRunDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyResponse) []string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunDays
	}).(pulumi.StringArrayOutput)
}

// Frequency of the schedule operation of this policy.
func (o SimpleSchedulePolicyResponsePtrOutput) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunFrequency
	}).(pulumi.StringPtrOutput)
}

// List of times of day this schedule has to be run.
func (o SimpleSchedulePolicyResponsePtrOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyResponse) []string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunTimes
	}).(pulumi.StringArrayOutput)
}

// At every number weeks this schedule has to be run.
func (o SimpleSchedulePolicyResponsePtrOutput) ScheduleWeeklyFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.ScheduleWeeklyFrequency
	}).(pulumi.IntPtrOutput)
}

// The V2 policy schedule for IaaS that supports hourly backups.
type SimpleSchedulePolicyV2 struct {
	// Daily schedule of this policy
	DailySchedule *DailySchedule `pulumi:"dailySchedule"`
	// hourly schedule of this policy
	HourlySchedule *HourlySchedule `pulumi:"hourlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicyV2'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
	// Frequency of the schedule operation of this policy.
	ScheduleRunFrequency *string `pulumi:"scheduleRunFrequency"`
	// Weekly schedule of this policy
	WeeklySchedule *WeeklySchedule `pulumi:"weeklySchedule"`
}

// SimpleSchedulePolicyV2Input is an input type that accepts SimpleSchedulePolicyV2Args and SimpleSchedulePolicyV2Output values.
// You can construct a concrete instance of `SimpleSchedulePolicyV2Input` via:
//
//	SimpleSchedulePolicyV2Args{...}
type SimpleSchedulePolicyV2Input interface {
	pulumi.Input

	ToSimpleSchedulePolicyV2Output() SimpleSchedulePolicyV2Output
	ToSimpleSchedulePolicyV2OutputWithContext(context.Context) SimpleSchedulePolicyV2Output
}

// The V2 policy schedule for IaaS that supports hourly backups.
type SimpleSchedulePolicyV2Args struct {
	// Daily schedule of this policy
	DailySchedule DailySchedulePtrInput `pulumi:"dailySchedule"`
	// hourly schedule of this policy
	HourlySchedule HourlySchedulePtrInput `pulumi:"hourlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicyV2'.
	SchedulePolicyType pulumi.StringInput `pulumi:"schedulePolicyType"`
	// Frequency of the schedule operation of this policy.
	ScheduleRunFrequency pulumi.StringPtrInput `pulumi:"scheduleRunFrequency"`
	// Weekly schedule of this policy
	WeeklySchedule WeeklySchedulePtrInput `pulumi:"weeklySchedule"`
}

func (SimpleSchedulePolicyV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleSchedulePolicyV2)(nil)).Elem()
}

func (i SimpleSchedulePolicyV2Args) ToSimpleSchedulePolicyV2Output() SimpleSchedulePolicyV2Output {
	return i.ToSimpleSchedulePolicyV2OutputWithContext(context.Background())
}

func (i SimpleSchedulePolicyV2Args) ToSimpleSchedulePolicyV2OutputWithContext(ctx context.Context) SimpleSchedulePolicyV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleSchedulePolicyV2Output)
}

func (i SimpleSchedulePolicyV2Args) ToSimpleSchedulePolicyV2PtrOutput() SimpleSchedulePolicyV2PtrOutput {
	return i.ToSimpleSchedulePolicyV2PtrOutputWithContext(context.Background())
}

func (i SimpleSchedulePolicyV2Args) ToSimpleSchedulePolicyV2PtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyV2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleSchedulePolicyV2Output).ToSimpleSchedulePolicyV2PtrOutputWithContext(ctx)
}

// SimpleSchedulePolicyV2PtrInput is an input type that accepts SimpleSchedulePolicyV2Args, SimpleSchedulePolicyV2Ptr and SimpleSchedulePolicyV2PtrOutput values.
// You can construct a concrete instance of `SimpleSchedulePolicyV2PtrInput` via:
//
//	        SimpleSchedulePolicyV2Args{...}
//
//	or:
//
//	        nil
type SimpleSchedulePolicyV2PtrInput interface {
	pulumi.Input

	ToSimpleSchedulePolicyV2PtrOutput() SimpleSchedulePolicyV2PtrOutput
	ToSimpleSchedulePolicyV2PtrOutputWithContext(context.Context) SimpleSchedulePolicyV2PtrOutput
}

type simpleSchedulePolicyV2PtrType SimpleSchedulePolicyV2Args

func SimpleSchedulePolicyV2Ptr(v *SimpleSchedulePolicyV2Args) SimpleSchedulePolicyV2PtrInput {
	return (*simpleSchedulePolicyV2PtrType)(v)
}

func (*simpleSchedulePolicyV2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleSchedulePolicyV2)(nil)).Elem()
}

func (i *simpleSchedulePolicyV2PtrType) ToSimpleSchedulePolicyV2PtrOutput() SimpleSchedulePolicyV2PtrOutput {
	return i.ToSimpleSchedulePolicyV2PtrOutputWithContext(context.Background())
}

func (i *simpleSchedulePolicyV2PtrType) ToSimpleSchedulePolicyV2PtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyV2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleSchedulePolicyV2PtrOutput)
}

// The V2 policy schedule for IaaS that supports hourly backups.
type SimpleSchedulePolicyV2Output struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleSchedulePolicyV2)(nil)).Elem()
}

func (o SimpleSchedulePolicyV2Output) ToSimpleSchedulePolicyV2Output() SimpleSchedulePolicyV2Output {
	return o
}

func (o SimpleSchedulePolicyV2Output) ToSimpleSchedulePolicyV2OutputWithContext(ctx context.Context) SimpleSchedulePolicyV2Output {
	return o
}

func (o SimpleSchedulePolicyV2Output) ToSimpleSchedulePolicyV2PtrOutput() SimpleSchedulePolicyV2PtrOutput {
	return o.ToSimpleSchedulePolicyV2PtrOutputWithContext(context.Background())
}

func (o SimpleSchedulePolicyV2Output) ToSimpleSchedulePolicyV2PtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyV2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SimpleSchedulePolicyV2) *SimpleSchedulePolicyV2 {
		return &v
	}).(SimpleSchedulePolicyV2PtrOutput)
}

// Daily schedule of this policy
func (o SimpleSchedulePolicyV2Output) DailySchedule() DailySchedulePtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2) *DailySchedule { return v.DailySchedule }).(DailySchedulePtrOutput)
}

// hourly schedule of this policy
func (o SimpleSchedulePolicyV2Output) HourlySchedule() HourlySchedulePtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2) *HourlySchedule { return v.HourlySchedule }).(HourlySchedulePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleSchedulePolicyV2'.
func (o SimpleSchedulePolicyV2Output) SchedulePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2) string { return v.SchedulePolicyType }).(pulumi.StringOutput)
}

// Frequency of the schedule operation of this policy.
func (o SimpleSchedulePolicyV2Output) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2) *string { return v.ScheduleRunFrequency }).(pulumi.StringPtrOutput)
}

// Weekly schedule of this policy
func (o SimpleSchedulePolicyV2Output) WeeklySchedule() WeeklySchedulePtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2) *WeeklySchedule { return v.WeeklySchedule }).(WeeklySchedulePtrOutput)
}

type SimpleSchedulePolicyV2PtrOutput struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyV2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleSchedulePolicyV2)(nil)).Elem()
}

func (o SimpleSchedulePolicyV2PtrOutput) ToSimpleSchedulePolicyV2PtrOutput() SimpleSchedulePolicyV2PtrOutput {
	return o
}

func (o SimpleSchedulePolicyV2PtrOutput) ToSimpleSchedulePolicyV2PtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyV2PtrOutput {
	return o
}

func (o SimpleSchedulePolicyV2PtrOutput) Elem() SimpleSchedulePolicyV2Output {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2) SimpleSchedulePolicyV2 {
		if v != nil {
			return *v
		}
		var ret SimpleSchedulePolicyV2
		return ret
	}).(SimpleSchedulePolicyV2Output)
}

// Daily schedule of this policy
func (o SimpleSchedulePolicyV2PtrOutput) DailySchedule() DailySchedulePtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2) *DailySchedule {
		if v == nil {
			return nil
		}
		return v.DailySchedule
	}).(DailySchedulePtrOutput)
}

// hourly schedule of this policy
func (o SimpleSchedulePolicyV2PtrOutput) HourlySchedule() HourlySchedulePtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2) *HourlySchedule {
		if v == nil {
			return nil
		}
		return v.HourlySchedule
	}).(HourlySchedulePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleSchedulePolicyV2'.
func (o SimpleSchedulePolicyV2PtrOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2) *string {
		if v == nil {
			return nil
		}
		return &v.SchedulePolicyType
	}).(pulumi.StringPtrOutput)
}

// Frequency of the schedule operation of this policy.
func (o SimpleSchedulePolicyV2PtrOutput) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunFrequency
	}).(pulumi.StringPtrOutput)
}

// Weekly schedule of this policy
func (o SimpleSchedulePolicyV2PtrOutput) WeeklySchedule() WeeklySchedulePtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2) *WeeklySchedule {
		if v == nil {
			return nil
		}
		return v.WeeklySchedule
	}).(WeeklySchedulePtrOutput)
}

// The V2 policy schedule for IaaS that supports hourly backups.
type SimpleSchedulePolicyV2Response struct {
	// Daily schedule of this policy
	DailySchedule *DailyScheduleResponse `pulumi:"dailySchedule"`
	// hourly schedule of this policy
	HourlySchedule *HourlyScheduleResponse `pulumi:"hourlySchedule"`
	// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
	// Expected value is 'SimpleSchedulePolicyV2'.
	SchedulePolicyType string `pulumi:"schedulePolicyType"`
	// Frequency of the schedule operation of this policy.
	ScheduleRunFrequency *string `pulumi:"scheduleRunFrequency"`
	// Weekly schedule of this policy
	WeeklySchedule *WeeklyScheduleResponse `pulumi:"weeklySchedule"`
}

// The V2 policy schedule for IaaS that supports hourly backups.
type SimpleSchedulePolicyV2ResponseOutput struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyV2ResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleSchedulePolicyV2Response)(nil)).Elem()
}

func (o SimpleSchedulePolicyV2ResponseOutput) ToSimpleSchedulePolicyV2ResponseOutput() SimpleSchedulePolicyV2ResponseOutput {
	return o
}

func (o SimpleSchedulePolicyV2ResponseOutput) ToSimpleSchedulePolicyV2ResponseOutputWithContext(ctx context.Context) SimpleSchedulePolicyV2ResponseOutput {
	return o
}

// Daily schedule of this policy
func (o SimpleSchedulePolicyV2ResponseOutput) DailySchedule() DailyScheduleResponsePtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2Response) *DailyScheduleResponse { return v.DailySchedule }).(DailyScheduleResponsePtrOutput)
}

// hourly schedule of this policy
func (o SimpleSchedulePolicyV2ResponseOutput) HourlySchedule() HourlyScheduleResponsePtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2Response) *HourlyScheduleResponse { return v.HourlySchedule }).(HourlyScheduleResponsePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleSchedulePolicyV2'.
func (o SimpleSchedulePolicyV2ResponseOutput) SchedulePolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2Response) string { return v.SchedulePolicyType }).(pulumi.StringOutput)
}

// Frequency of the schedule operation of this policy.
func (o SimpleSchedulePolicyV2ResponseOutput) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2Response) *string { return v.ScheduleRunFrequency }).(pulumi.StringPtrOutput)
}

// Weekly schedule of this policy
func (o SimpleSchedulePolicyV2ResponseOutput) WeeklySchedule() WeeklyScheduleResponsePtrOutput {
	return o.ApplyT(func(v SimpleSchedulePolicyV2Response) *WeeklyScheduleResponse { return v.WeeklySchedule }).(WeeklyScheduleResponsePtrOutput)
}

type SimpleSchedulePolicyV2ResponsePtrOutput struct{ *pulumi.OutputState }

func (SimpleSchedulePolicyV2ResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleSchedulePolicyV2Response)(nil)).Elem()
}

func (o SimpleSchedulePolicyV2ResponsePtrOutput) ToSimpleSchedulePolicyV2ResponsePtrOutput() SimpleSchedulePolicyV2ResponsePtrOutput {
	return o
}

func (o SimpleSchedulePolicyV2ResponsePtrOutput) ToSimpleSchedulePolicyV2ResponsePtrOutputWithContext(ctx context.Context) SimpleSchedulePolicyV2ResponsePtrOutput {
	return o
}

func (o SimpleSchedulePolicyV2ResponsePtrOutput) Elem() SimpleSchedulePolicyV2ResponseOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2Response) SimpleSchedulePolicyV2Response {
		if v != nil {
			return *v
		}
		var ret SimpleSchedulePolicyV2Response
		return ret
	}).(SimpleSchedulePolicyV2ResponseOutput)
}

// Daily schedule of this policy
func (o SimpleSchedulePolicyV2ResponsePtrOutput) DailySchedule() DailyScheduleResponsePtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2Response) *DailyScheduleResponse {
		if v == nil {
			return nil
		}
		return v.DailySchedule
	}).(DailyScheduleResponsePtrOutput)
}

// hourly schedule of this policy
func (o SimpleSchedulePolicyV2ResponsePtrOutput) HourlySchedule() HourlyScheduleResponsePtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2Response) *HourlyScheduleResponse {
		if v == nil {
			return nil
		}
		return v.HourlySchedule
	}).(HourlyScheduleResponsePtrOutput)
}

// This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
// Expected value is 'SimpleSchedulePolicyV2'.
func (o SimpleSchedulePolicyV2ResponsePtrOutput) SchedulePolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2Response) *string {
		if v == nil {
			return nil
		}
		return &v.SchedulePolicyType
	}).(pulumi.StringPtrOutput)
}

// Frequency of the schedule operation of this policy.
func (o SimpleSchedulePolicyV2ResponsePtrOutput) ScheduleRunFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2Response) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunFrequency
	}).(pulumi.StringPtrOutput)
}

// Weekly schedule of this policy
func (o SimpleSchedulePolicyV2ResponsePtrOutput) WeeklySchedule() WeeklyScheduleResponsePtrOutput {
	return o.ApplyT(func(v *SimpleSchedulePolicyV2Response) *WeeklyScheduleResponse {
		if v == nil {
			return nil
		}
		return v.WeeklySchedule
	}).(WeeklyScheduleResponsePtrOutput)
}

// Identifies the unique system identifier for each Azure resource.
type Sku struct {
	// The sku capacity
	Capacity *string `pulumi:"capacity"`
	// The sku family
	Family *string `pulumi:"family"`
	// Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
	Name string `pulumi:"name"`
	// The sku size
	Size *string `pulumi:"size"`
	// The Sku tier.
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Identifies the unique system identifier for each Azure resource.
type SkuArgs struct {
	// The sku capacity
	Capacity pulumi.StringPtrInput `pulumi:"capacity"`
	// The sku family
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
	Name pulumi.StringInput `pulumi:"name"`
	// The sku size
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The Sku tier.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// Identifies the unique system identifier for each Azure resource.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The sku capacity
func (o SkuOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Capacity }).(pulumi.StringPtrOutput)
}

// The sku family
func (o SkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The sku size
func (o SkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The Sku tier.
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// The sku capacity
func (o SkuPtrOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.StringPtrOutput)
}

// The sku family
func (o SkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The sku size
func (o SkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The Sku tier.
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Identifies the unique system identifier for each Azure resource.
type SkuResponse struct {
	// The sku capacity
	Capacity *string `pulumi:"capacity"`
	// The sku family
	Family *string `pulumi:"family"`
	// Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
	Name string `pulumi:"name"`
	// The sku size
	Size *string `pulumi:"size"`
	// The Sku tier.
	Tier *string `pulumi:"tier"`
}

// Identifies the unique system identifier for each Azure resource.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The sku capacity
func (o SkuResponseOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Capacity }).(pulumi.StringPtrOutput)
}

// The sku family
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The sku size
func (o SkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The Sku tier.
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// The sku capacity
func (o SkuResponsePtrOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.StringPtrOutput)
}

// The sku family
func (o SkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The sku size
func (o SkuResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The Sku tier.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Snapshot Backup related fields for WorkloadType SaPHanaSystem
type SnapshotBackupAdditionalDetails struct {
	InstantRPDetails              *string `pulumi:"instantRPDetails"`
	InstantRpRetentionRangeInDays *int    `pulumi:"instantRpRetentionRangeInDays"`
	// User assigned managed identity details
	UserAssignedManagedIdentityDetails *UserAssignedManagedIdentityDetails `pulumi:"userAssignedManagedIdentityDetails"`
}

// SnapshotBackupAdditionalDetailsInput is an input type that accepts SnapshotBackupAdditionalDetailsArgs and SnapshotBackupAdditionalDetailsOutput values.
// You can construct a concrete instance of `SnapshotBackupAdditionalDetailsInput` via:
//
//	SnapshotBackupAdditionalDetailsArgs{...}
type SnapshotBackupAdditionalDetailsInput interface {
	pulumi.Input

	ToSnapshotBackupAdditionalDetailsOutput() SnapshotBackupAdditionalDetailsOutput
	ToSnapshotBackupAdditionalDetailsOutputWithContext(context.Context) SnapshotBackupAdditionalDetailsOutput
}

// Snapshot Backup related fields for WorkloadType SaPHanaSystem
type SnapshotBackupAdditionalDetailsArgs struct {
	InstantRPDetails              pulumi.StringPtrInput `pulumi:"instantRPDetails"`
	InstantRpRetentionRangeInDays pulumi.IntPtrInput    `pulumi:"instantRpRetentionRangeInDays"`
	// User assigned managed identity details
	UserAssignedManagedIdentityDetails UserAssignedManagedIdentityDetailsPtrInput `pulumi:"userAssignedManagedIdentityDetails"`
}

func (SnapshotBackupAdditionalDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotBackupAdditionalDetails)(nil)).Elem()
}

func (i SnapshotBackupAdditionalDetailsArgs) ToSnapshotBackupAdditionalDetailsOutput() SnapshotBackupAdditionalDetailsOutput {
	return i.ToSnapshotBackupAdditionalDetailsOutputWithContext(context.Background())
}

func (i SnapshotBackupAdditionalDetailsArgs) ToSnapshotBackupAdditionalDetailsOutputWithContext(ctx context.Context) SnapshotBackupAdditionalDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotBackupAdditionalDetailsOutput)
}

func (i SnapshotBackupAdditionalDetailsArgs) ToSnapshotBackupAdditionalDetailsPtrOutput() SnapshotBackupAdditionalDetailsPtrOutput {
	return i.ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(context.Background())
}

func (i SnapshotBackupAdditionalDetailsArgs) ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(ctx context.Context) SnapshotBackupAdditionalDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotBackupAdditionalDetailsOutput).ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(ctx)
}

// SnapshotBackupAdditionalDetailsPtrInput is an input type that accepts SnapshotBackupAdditionalDetailsArgs, SnapshotBackupAdditionalDetailsPtr and SnapshotBackupAdditionalDetailsPtrOutput values.
// You can construct a concrete instance of `SnapshotBackupAdditionalDetailsPtrInput` via:
//
//	        SnapshotBackupAdditionalDetailsArgs{...}
//
//	or:
//
//	        nil
type SnapshotBackupAdditionalDetailsPtrInput interface {
	pulumi.Input

	ToSnapshotBackupAdditionalDetailsPtrOutput() SnapshotBackupAdditionalDetailsPtrOutput
	ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(context.Context) SnapshotBackupAdditionalDetailsPtrOutput
}

type snapshotBackupAdditionalDetailsPtrType SnapshotBackupAdditionalDetailsArgs

func SnapshotBackupAdditionalDetailsPtr(v *SnapshotBackupAdditionalDetailsArgs) SnapshotBackupAdditionalDetailsPtrInput {
	return (*snapshotBackupAdditionalDetailsPtrType)(v)
}

func (*snapshotBackupAdditionalDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotBackupAdditionalDetails)(nil)).Elem()
}

func (i *snapshotBackupAdditionalDetailsPtrType) ToSnapshotBackupAdditionalDetailsPtrOutput() SnapshotBackupAdditionalDetailsPtrOutput {
	return i.ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(context.Background())
}

func (i *snapshotBackupAdditionalDetailsPtrType) ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(ctx context.Context) SnapshotBackupAdditionalDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotBackupAdditionalDetailsPtrOutput)
}

// Snapshot Backup related fields for WorkloadType SaPHanaSystem
type SnapshotBackupAdditionalDetailsOutput struct{ *pulumi.OutputState }

func (SnapshotBackupAdditionalDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotBackupAdditionalDetails)(nil)).Elem()
}

func (o SnapshotBackupAdditionalDetailsOutput) ToSnapshotBackupAdditionalDetailsOutput() SnapshotBackupAdditionalDetailsOutput {
	return o
}

func (o SnapshotBackupAdditionalDetailsOutput) ToSnapshotBackupAdditionalDetailsOutputWithContext(ctx context.Context) SnapshotBackupAdditionalDetailsOutput {
	return o
}

func (o SnapshotBackupAdditionalDetailsOutput) ToSnapshotBackupAdditionalDetailsPtrOutput() SnapshotBackupAdditionalDetailsPtrOutput {
	return o.ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(context.Background())
}

func (o SnapshotBackupAdditionalDetailsOutput) ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(ctx context.Context) SnapshotBackupAdditionalDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotBackupAdditionalDetails) *SnapshotBackupAdditionalDetails {
		return &v
	}).(SnapshotBackupAdditionalDetailsPtrOutput)
}

func (o SnapshotBackupAdditionalDetailsOutput) InstantRPDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotBackupAdditionalDetails) *string { return v.InstantRPDetails }).(pulumi.StringPtrOutput)
}

func (o SnapshotBackupAdditionalDetailsOutput) InstantRpRetentionRangeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SnapshotBackupAdditionalDetails) *int { return v.InstantRpRetentionRangeInDays }).(pulumi.IntPtrOutput)
}

// User assigned managed identity details
func (o SnapshotBackupAdditionalDetailsOutput) UserAssignedManagedIdentityDetails() UserAssignedManagedIdentityDetailsPtrOutput {
	return o.ApplyT(func(v SnapshotBackupAdditionalDetails) *UserAssignedManagedIdentityDetails {
		return v.UserAssignedManagedIdentityDetails
	}).(UserAssignedManagedIdentityDetailsPtrOutput)
}

type SnapshotBackupAdditionalDetailsPtrOutput struct{ *pulumi.OutputState }

func (SnapshotBackupAdditionalDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotBackupAdditionalDetails)(nil)).Elem()
}

func (o SnapshotBackupAdditionalDetailsPtrOutput) ToSnapshotBackupAdditionalDetailsPtrOutput() SnapshotBackupAdditionalDetailsPtrOutput {
	return o
}

func (o SnapshotBackupAdditionalDetailsPtrOutput) ToSnapshotBackupAdditionalDetailsPtrOutputWithContext(ctx context.Context) SnapshotBackupAdditionalDetailsPtrOutput {
	return o
}

func (o SnapshotBackupAdditionalDetailsPtrOutput) Elem() SnapshotBackupAdditionalDetailsOutput {
	return o.ApplyT(func(v *SnapshotBackupAdditionalDetails) SnapshotBackupAdditionalDetails {
		if v != nil {
			return *v
		}
		var ret SnapshotBackupAdditionalDetails
		return ret
	}).(SnapshotBackupAdditionalDetailsOutput)
}

func (o SnapshotBackupAdditionalDetailsPtrOutput) InstantRPDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotBackupAdditionalDetails) *string {
		if v == nil {
			return nil
		}
		return v.InstantRPDetails
	}).(pulumi.StringPtrOutput)
}

func (o SnapshotBackupAdditionalDetailsPtrOutput) InstantRpRetentionRangeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SnapshotBackupAdditionalDetails) *int {
		if v == nil {
			return nil
		}
		return v.InstantRpRetentionRangeInDays
	}).(pulumi.IntPtrOutput)
}

// User assigned managed identity details
func (o SnapshotBackupAdditionalDetailsPtrOutput) UserAssignedManagedIdentityDetails() UserAssignedManagedIdentityDetailsPtrOutput {
	return o.ApplyT(func(v *SnapshotBackupAdditionalDetails) *UserAssignedManagedIdentityDetails {
		if v == nil {
			return nil
		}
		return v.UserAssignedManagedIdentityDetails
	}).(UserAssignedManagedIdentityDetailsPtrOutput)
}

// Snapshot Backup related fields for WorkloadType SaPHanaSystem
type SnapshotBackupAdditionalDetailsResponse struct {
	InstantRPDetails              *string `pulumi:"instantRPDetails"`
	InstantRpRetentionRangeInDays *int    `pulumi:"instantRpRetentionRangeInDays"`
	// User assigned managed identity details
	UserAssignedManagedIdentityDetails *UserAssignedManagedIdentityDetailsResponse `pulumi:"userAssignedManagedIdentityDetails"`
}

// Snapshot Backup related fields for WorkloadType SaPHanaSystem
type SnapshotBackupAdditionalDetailsResponseOutput struct{ *pulumi.OutputState }

func (SnapshotBackupAdditionalDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotBackupAdditionalDetailsResponse)(nil)).Elem()
}

func (o SnapshotBackupAdditionalDetailsResponseOutput) ToSnapshotBackupAdditionalDetailsResponseOutput() SnapshotBackupAdditionalDetailsResponseOutput {
	return o
}

func (o SnapshotBackupAdditionalDetailsResponseOutput) ToSnapshotBackupAdditionalDetailsResponseOutputWithContext(ctx context.Context) SnapshotBackupAdditionalDetailsResponseOutput {
	return o
}

func (o SnapshotBackupAdditionalDetailsResponseOutput) InstantRPDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotBackupAdditionalDetailsResponse) *string { return v.InstantRPDetails }).(pulumi.StringPtrOutput)
}

func (o SnapshotBackupAdditionalDetailsResponseOutput) InstantRpRetentionRangeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SnapshotBackupAdditionalDetailsResponse) *int { return v.InstantRpRetentionRangeInDays }).(pulumi.IntPtrOutput)
}

// User assigned managed identity details
func (o SnapshotBackupAdditionalDetailsResponseOutput) UserAssignedManagedIdentityDetails() UserAssignedManagedIdentityDetailsResponsePtrOutput {
	return o.ApplyT(func(v SnapshotBackupAdditionalDetailsResponse) *UserAssignedManagedIdentityDetailsResponse {
		return v.UserAssignedManagedIdentityDetails
	}).(UserAssignedManagedIdentityDetailsResponsePtrOutput)
}

type SnapshotBackupAdditionalDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (SnapshotBackupAdditionalDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotBackupAdditionalDetailsResponse)(nil)).Elem()
}

func (o SnapshotBackupAdditionalDetailsResponsePtrOutput) ToSnapshotBackupAdditionalDetailsResponsePtrOutput() SnapshotBackupAdditionalDetailsResponsePtrOutput {
	return o
}

func (o SnapshotBackupAdditionalDetailsResponsePtrOutput) ToSnapshotBackupAdditionalDetailsResponsePtrOutputWithContext(ctx context.Context) SnapshotBackupAdditionalDetailsResponsePtrOutput {
	return o
}

func (o SnapshotBackupAdditionalDetailsResponsePtrOutput) Elem() SnapshotBackupAdditionalDetailsResponseOutput {
	return o.ApplyT(func(v *SnapshotBackupAdditionalDetailsResponse) SnapshotBackupAdditionalDetailsResponse {
		if v != nil {
			return *v
		}
		var ret SnapshotBackupAdditionalDetailsResponse
		return ret
	}).(SnapshotBackupAdditionalDetailsResponseOutput)
}

func (o SnapshotBackupAdditionalDetailsResponsePtrOutput) InstantRPDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotBackupAdditionalDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InstantRPDetails
	}).(pulumi.StringPtrOutput)
}

func (o SnapshotBackupAdditionalDetailsResponsePtrOutput) InstantRpRetentionRangeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SnapshotBackupAdditionalDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.InstantRpRetentionRangeInDays
	}).(pulumi.IntPtrOutput)
}

// User assigned managed identity details
func (o SnapshotBackupAdditionalDetailsResponsePtrOutput) UserAssignedManagedIdentityDetails() UserAssignedManagedIdentityDetailsResponsePtrOutput {
	return o.ApplyT(func(v *SnapshotBackupAdditionalDetailsResponse) *UserAssignedManagedIdentityDetailsResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedManagedIdentityDetails
	}).(UserAssignedManagedIdentityDetailsResponsePtrOutput)
}

// Soft delete Settings of vault
type SoftDeleteSettings struct {
	EnhancedSecurityState *string `pulumi:"enhancedSecurityState"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int    `pulumi:"softDeleteRetentionPeriodInDays"`
	SoftDeleteState                 *string `pulumi:"softDeleteState"`
}

// SoftDeleteSettingsInput is an input type that accepts SoftDeleteSettingsArgs and SoftDeleteSettingsOutput values.
// You can construct a concrete instance of `SoftDeleteSettingsInput` via:
//
//	SoftDeleteSettingsArgs{...}
type SoftDeleteSettingsInput interface {
	pulumi.Input

	ToSoftDeleteSettingsOutput() SoftDeleteSettingsOutput
	ToSoftDeleteSettingsOutputWithContext(context.Context) SoftDeleteSettingsOutput
}

// Soft delete Settings of vault
type SoftDeleteSettingsArgs struct {
	EnhancedSecurityState pulumi.StringPtrInput `pulumi:"enhancedSecurityState"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays pulumi.IntPtrInput    `pulumi:"softDeleteRetentionPeriodInDays"`
	SoftDeleteState                 pulumi.StringPtrInput `pulumi:"softDeleteState"`
}

func (SoftDeleteSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftDeleteSettings)(nil)).Elem()
}

func (i SoftDeleteSettingsArgs) ToSoftDeleteSettingsOutput() SoftDeleteSettingsOutput {
	return i.ToSoftDeleteSettingsOutputWithContext(context.Background())
}

func (i SoftDeleteSettingsArgs) ToSoftDeleteSettingsOutputWithContext(ctx context.Context) SoftDeleteSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftDeleteSettingsOutput)
}

func (i SoftDeleteSettingsArgs) ToSoftDeleteSettingsPtrOutput() SoftDeleteSettingsPtrOutput {
	return i.ToSoftDeleteSettingsPtrOutputWithContext(context.Background())
}

func (i SoftDeleteSettingsArgs) ToSoftDeleteSettingsPtrOutputWithContext(ctx context.Context) SoftDeleteSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftDeleteSettingsOutput).ToSoftDeleteSettingsPtrOutputWithContext(ctx)
}

// SoftDeleteSettingsPtrInput is an input type that accepts SoftDeleteSettingsArgs, SoftDeleteSettingsPtr and SoftDeleteSettingsPtrOutput values.
// You can construct a concrete instance of `SoftDeleteSettingsPtrInput` via:
//
//	        SoftDeleteSettingsArgs{...}
//
//	or:
//
//	        nil
type SoftDeleteSettingsPtrInput interface {
	pulumi.Input

	ToSoftDeleteSettingsPtrOutput() SoftDeleteSettingsPtrOutput
	ToSoftDeleteSettingsPtrOutputWithContext(context.Context) SoftDeleteSettingsPtrOutput
}

type softDeleteSettingsPtrType SoftDeleteSettingsArgs

func SoftDeleteSettingsPtr(v *SoftDeleteSettingsArgs) SoftDeleteSettingsPtrInput {
	return (*softDeleteSettingsPtrType)(v)
}

func (*softDeleteSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftDeleteSettings)(nil)).Elem()
}

func (i *softDeleteSettingsPtrType) ToSoftDeleteSettingsPtrOutput() SoftDeleteSettingsPtrOutput {
	return i.ToSoftDeleteSettingsPtrOutputWithContext(context.Background())
}

func (i *softDeleteSettingsPtrType) ToSoftDeleteSettingsPtrOutputWithContext(ctx context.Context) SoftDeleteSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftDeleteSettingsPtrOutput)
}

// Soft delete Settings of vault
type SoftDeleteSettingsOutput struct{ *pulumi.OutputState }

func (SoftDeleteSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftDeleteSettings)(nil)).Elem()
}

func (o SoftDeleteSettingsOutput) ToSoftDeleteSettingsOutput() SoftDeleteSettingsOutput {
	return o
}

func (o SoftDeleteSettingsOutput) ToSoftDeleteSettingsOutputWithContext(ctx context.Context) SoftDeleteSettingsOutput {
	return o
}

func (o SoftDeleteSettingsOutput) ToSoftDeleteSettingsPtrOutput() SoftDeleteSettingsPtrOutput {
	return o.ToSoftDeleteSettingsPtrOutputWithContext(context.Background())
}

func (o SoftDeleteSettingsOutput) ToSoftDeleteSettingsPtrOutputWithContext(ctx context.Context) SoftDeleteSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SoftDeleteSettings) *SoftDeleteSettings {
		return &v
	}).(SoftDeleteSettingsPtrOutput)
}

func (o SoftDeleteSettingsOutput) EnhancedSecurityState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoftDeleteSettings) *string { return v.EnhancedSecurityState }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o SoftDeleteSettingsOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoftDeleteSettings) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

func (o SoftDeleteSettingsOutput) SoftDeleteState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoftDeleteSettings) *string { return v.SoftDeleteState }).(pulumi.StringPtrOutput)
}

type SoftDeleteSettingsPtrOutput struct{ *pulumi.OutputState }

func (SoftDeleteSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftDeleteSettings)(nil)).Elem()
}

func (o SoftDeleteSettingsPtrOutput) ToSoftDeleteSettingsPtrOutput() SoftDeleteSettingsPtrOutput {
	return o
}

func (o SoftDeleteSettingsPtrOutput) ToSoftDeleteSettingsPtrOutputWithContext(ctx context.Context) SoftDeleteSettingsPtrOutput {
	return o
}

func (o SoftDeleteSettingsPtrOutput) Elem() SoftDeleteSettingsOutput {
	return o.ApplyT(func(v *SoftDeleteSettings) SoftDeleteSettings {
		if v != nil {
			return *v
		}
		var ret SoftDeleteSettings
		return ret
	}).(SoftDeleteSettingsOutput)
}

func (o SoftDeleteSettingsPtrOutput) EnhancedSecurityState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoftDeleteSettings) *string {
		if v == nil {
			return nil
		}
		return v.EnhancedSecurityState
	}).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o SoftDeleteSettingsPtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoftDeleteSettings) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

func (o SoftDeleteSettingsPtrOutput) SoftDeleteState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoftDeleteSettings) *string {
		if v == nil {
			return nil
		}
		return v.SoftDeleteState
	}).(pulumi.StringPtrOutput)
}

// Soft delete Settings of vault
type SoftDeleteSettingsResponse struct {
	EnhancedSecurityState *string `pulumi:"enhancedSecurityState"`
	// Soft delete retention period in days
	SoftDeleteRetentionPeriodInDays *int    `pulumi:"softDeleteRetentionPeriodInDays"`
	SoftDeleteState                 *string `pulumi:"softDeleteState"`
}

// Soft delete Settings of vault
type SoftDeleteSettingsResponseOutput struct{ *pulumi.OutputState }

func (SoftDeleteSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftDeleteSettingsResponse)(nil)).Elem()
}

func (o SoftDeleteSettingsResponseOutput) ToSoftDeleteSettingsResponseOutput() SoftDeleteSettingsResponseOutput {
	return o
}

func (o SoftDeleteSettingsResponseOutput) ToSoftDeleteSettingsResponseOutputWithContext(ctx context.Context) SoftDeleteSettingsResponseOutput {
	return o
}

func (o SoftDeleteSettingsResponseOutput) EnhancedSecurityState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoftDeleteSettingsResponse) *string { return v.EnhancedSecurityState }).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o SoftDeleteSettingsResponseOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoftDeleteSettingsResponse) *int { return v.SoftDeleteRetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

func (o SoftDeleteSettingsResponseOutput) SoftDeleteState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoftDeleteSettingsResponse) *string { return v.SoftDeleteState }).(pulumi.StringPtrOutput)
}

type SoftDeleteSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (SoftDeleteSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftDeleteSettingsResponse)(nil)).Elem()
}

func (o SoftDeleteSettingsResponsePtrOutput) ToSoftDeleteSettingsResponsePtrOutput() SoftDeleteSettingsResponsePtrOutput {
	return o
}

func (o SoftDeleteSettingsResponsePtrOutput) ToSoftDeleteSettingsResponsePtrOutputWithContext(ctx context.Context) SoftDeleteSettingsResponsePtrOutput {
	return o
}

func (o SoftDeleteSettingsResponsePtrOutput) Elem() SoftDeleteSettingsResponseOutput {
	return o.ApplyT(func(v *SoftDeleteSettingsResponse) SoftDeleteSettingsResponse {
		if v != nil {
			return *v
		}
		var ret SoftDeleteSettingsResponse
		return ret
	}).(SoftDeleteSettingsResponseOutput)
}

func (o SoftDeleteSettingsResponsePtrOutput) EnhancedSecurityState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoftDeleteSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnhancedSecurityState
	}).(pulumi.StringPtrOutput)
}

// Soft delete retention period in days
func (o SoftDeleteSettingsResponsePtrOutput) SoftDeleteRetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoftDeleteSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SoftDeleteRetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

func (o SoftDeleteSettingsResponsePtrOutput) SoftDeleteState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoftDeleteSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SoftDeleteState
	}).(pulumi.StringPtrOutput)
}

// Sub-protection policy which includes schedule and retention
type SubProtectionPolicy struct {
	// Type of backup policy type
	PolicyType *string `pulumi:"policyType"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
	// Snapshot Backup related fields for WorkloadType SaPHanaSystem
	SnapshotBackupAdditionalDetails *SnapshotBackupAdditionalDetails `pulumi:"snapshotBackupAdditionalDetails"`
	// Tiering policy to automatically move RPs to another tier.
	// Key is Target Tier, defined in RecoveryPointTierType enum.
	// Tiering policy specifies the criteria to move RP to the target tier.
	TieringPolicy map[string]TieringPolicy `pulumi:"tieringPolicy"`
}

// SubProtectionPolicyInput is an input type that accepts SubProtectionPolicyArgs and SubProtectionPolicyOutput values.
// You can construct a concrete instance of `SubProtectionPolicyInput` via:
//
//	SubProtectionPolicyArgs{...}
type SubProtectionPolicyInput interface {
	pulumi.Input

	ToSubProtectionPolicyOutput() SubProtectionPolicyOutput
	ToSubProtectionPolicyOutputWithContext(context.Context) SubProtectionPolicyOutput
}

// Sub-protection policy which includes schedule and retention
type SubProtectionPolicyArgs struct {
	// Type of backup policy type
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy pulumi.Input `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy pulumi.Input `pulumi:"schedulePolicy"`
	// Snapshot Backup related fields for WorkloadType SaPHanaSystem
	SnapshotBackupAdditionalDetails SnapshotBackupAdditionalDetailsPtrInput `pulumi:"snapshotBackupAdditionalDetails"`
	// Tiering policy to automatically move RPs to another tier.
	// Key is Target Tier, defined in RecoveryPointTierType enum.
	// Tiering policy specifies the criteria to move RP to the target tier.
	TieringPolicy TieringPolicyMapInput `pulumi:"tieringPolicy"`
}

func (SubProtectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubProtectionPolicy)(nil)).Elem()
}

func (i SubProtectionPolicyArgs) ToSubProtectionPolicyOutput() SubProtectionPolicyOutput {
	return i.ToSubProtectionPolicyOutputWithContext(context.Background())
}

func (i SubProtectionPolicyArgs) ToSubProtectionPolicyOutputWithContext(ctx context.Context) SubProtectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubProtectionPolicyOutput)
}

// SubProtectionPolicyArrayInput is an input type that accepts SubProtectionPolicyArray and SubProtectionPolicyArrayOutput values.
// You can construct a concrete instance of `SubProtectionPolicyArrayInput` via:
//
//	SubProtectionPolicyArray{ SubProtectionPolicyArgs{...} }
type SubProtectionPolicyArrayInput interface {
	pulumi.Input

	ToSubProtectionPolicyArrayOutput() SubProtectionPolicyArrayOutput
	ToSubProtectionPolicyArrayOutputWithContext(context.Context) SubProtectionPolicyArrayOutput
}

type SubProtectionPolicyArray []SubProtectionPolicyInput

func (SubProtectionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubProtectionPolicy)(nil)).Elem()
}

func (i SubProtectionPolicyArray) ToSubProtectionPolicyArrayOutput() SubProtectionPolicyArrayOutput {
	return i.ToSubProtectionPolicyArrayOutputWithContext(context.Background())
}

func (i SubProtectionPolicyArray) ToSubProtectionPolicyArrayOutputWithContext(ctx context.Context) SubProtectionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubProtectionPolicyArrayOutput)
}

// Sub-protection policy which includes schedule and retention
type SubProtectionPolicyOutput struct{ *pulumi.OutputState }

func (SubProtectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubProtectionPolicy)(nil)).Elem()
}

func (o SubProtectionPolicyOutput) ToSubProtectionPolicyOutput() SubProtectionPolicyOutput {
	return o
}

func (o SubProtectionPolicyOutput) ToSubProtectionPolicyOutputWithContext(ctx context.Context) SubProtectionPolicyOutput {
	return o
}

// Type of backup policy type
func (o SubProtectionPolicyOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubProtectionPolicy) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

// Retention policy with the details on backup copy retention ranges.
func (o SubProtectionPolicyOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v SubProtectionPolicy) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Backup schedule specified as part of backup policy.
func (o SubProtectionPolicyOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v SubProtectionPolicy) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

// Snapshot Backup related fields for WorkloadType SaPHanaSystem
func (o SubProtectionPolicyOutput) SnapshotBackupAdditionalDetails() SnapshotBackupAdditionalDetailsPtrOutput {
	return o.ApplyT(func(v SubProtectionPolicy) *SnapshotBackupAdditionalDetails { return v.SnapshotBackupAdditionalDetails }).(SnapshotBackupAdditionalDetailsPtrOutput)
}

// Tiering policy to automatically move RPs to another tier.
// Key is Target Tier, defined in RecoveryPointTierType enum.
// Tiering policy specifies the criteria to move RP to the target tier.
func (o SubProtectionPolicyOutput) TieringPolicy() TieringPolicyMapOutput {
	return o.ApplyT(func(v SubProtectionPolicy) map[string]TieringPolicy { return v.TieringPolicy }).(TieringPolicyMapOutput)
}

type SubProtectionPolicyArrayOutput struct{ *pulumi.OutputState }

func (SubProtectionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubProtectionPolicy)(nil)).Elem()
}

func (o SubProtectionPolicyArrayOutput) ToSubProtectionPolicyArrayOutput() SubProtectionPolicyArrayOutput {
	return o
}

func (o SubProtectionPolicyArrayOutput) ToSubProtectionPolicyArrayOutputWithContext(ctx context.Context) SubProtectionPolicyArrayOutput {
	return o
}

func (o SubProtectionPolicyArrayOutput) Index(i pulumi.IntInput) SubProtectionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubProtectionPolicy {
		return vs[0].([]SubProtectionPolicy)[vs[1].(int)]
	}).(SubProtectionPolicyOutput)
}

// Sub-protection policy which includes schedule and retention
type SubProtectionPolicyResponse struct {
	// Type of backup policy type
	PolicyType *string `pulumi:"policyType"`
	// Retention policy with the details on backup copy retention ranges.
	RetentionPolicy interface{} `pulumi:"retentionPolicy"`
	// Backup schedule specified as part of backup policy.
	SchedulePolicy interface{} `pulumi:"schedulePolicy"`
	// Snapshot Backup related fields for WorkloadType SaPHanaSystem
	SnapshotBackupAdditionalDetails *SnapshotBackupAdditionalDetailsResponse `pulumi:"snapshotBackupAdditionalDetails"`
	// Tiering policy to automatically move RPs to another tier.
	// Key is Target Tier, defined in RecoveryPointTierType enum.
	// Tiering policy specifies the criteria to move RP to the target tier.
	TieringPolicy map[string]TieringPolicyResponse `pulumi:"tieringPolicy"`
}

// Sub-protection policy which includes schedule and retention
type SubProtectionPolicyResponseOutput struct{ *pulumi.OutputState }

func (SubProtectionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubProtectionPolicyResponse)(nil)).Elem()
}

func (o SubProtectionPolicyResponseOutput) ToSubProtectionPolicyResponseOutput() SubProtectionPolicyResponseOutput {
	return o
}

func (o SubProtectionPolicyResponseOutput) ToSubProtectionPolicyResponseOutputWithContext(ctx context.Context) SubProtectionPolicyResponseOutput {
	return o
}

// Type of backup policy type
func (o SubProtectionPolicyResponseOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubProtectionPolicyResponse) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

// Retention policy with the details on backup copy retention ranges.
func (o SubProtectionPolicyResponseOutput) RetentionPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v SubProtectionPolicyResponse) interface{} { return v.RetentionPolicy }).(pulumi.AnyOutput)
}

// Backup schedule specified as part of backup policy.
func (o SubProtectionPolicyResponseOutput) SchedulePolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v SubProtectionPolicyResponse) interface{} { return v.SchedulePolicy }).(pulumi.AnyOutput)
}

// Snapshot Backup related fields for WorkloadType SaPHanaSystem
func (o SubProtectionPolicyResponseOutput) SnapshotBackupAdditionalDetails() SnapshotBackupAdditionalDetailsResponsePtrOutput {
	return o.ApplyT(func(v SubProtectionPolicyResponse) *SnapshotBackupAdditionalDetailsResponse {
		return v.SnapshotBackupAdditionalDetails
	}).(SnapshotBackupAdditionalDetailsResponsePtrOutput)
}

// Tiering policy to automatically move RPs to another tier.
// Key is Target Tier, defined in RecoveryPointTierType enum.
// Tiering policy specifies the criteria to move RP to the target tier.
func (o SubProtectionPolicyResponseOutput) TieringPolicy() TieringPolicyResponseMapOutput {
	return o.ApplyT(func(v SubProtectionPolicyResponse) map[string]TieringPolicyResponse { return v.TieringPolicy }).(TieringPolicyResponseMapOutput)
}

type SubProtectionPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (SubProtectionPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubProtectionPolicyResponse)(nil)).Elem()
}

func (o SubProtectionPolicyResponseArrayOutput) ToSubProtectionPolicyResponseArrayOutput() SubProtectionPolicyResponseArrayOutput {
	return o
}

func (o SubProtectionPolicyResponseArrayOutput) ToSubProtectionPolicyResponseArrayOutputWithContext(ctx context.Context) SubProtectionPolicyResponseArrayOutput {
	return o
}

func (o SubProtectionPolicyResponseArrayOutput) Index(i pulumi.IntInput) SubProtectionPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubProtectionPolicyResponse {
		return vs[0].([]SubProtectionPolicyResponse)[vs[1].(int)]
	}).(SubProtectionPolicyResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The type of identity that last modified the resource.
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Tiering Policy for a target tier.
// If the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier
type TieringPolicy struct {
	// Number of days/weeks/months/years to retain backups in current tier before tiering.
	// Used only if TieringMode is set to TierAfter
	Duration *int `pulumi:"duration"`
	// Retention duration type: days/weeks/months/years
	// Used only if TieringMode is set to TierAfter
	DurationType *string `pulumi:"durationType"`
	// Tiering Mode to control automatic tiering of recovery points. Supported values are:
	// 1. TierRecommended: Tier all recovery points recommended to be tiered
	// 2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.
	// 3. DoNotTier: Do not tier any recovery points
	TieringMode *string `pulumi:"tieringMode"`
}

// TieringPolicyInput is an input type that accepts TieringPolicyArgs and TieringPolicyOutput values.
// You can construct a concrete instance of `TieringPolicyInput` via:
//
//	TieringPolicyArgs{...}
type TieringPolicyInput interface {
	pulumi.Input

	ToTieringPolicyOutput() TieringPolicyOutput
	ToTieringPolicyOutputWithContext(context.Context) TieringPolicyOutput
}

// Tiering Policy for a target tier.
// If the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier
type TieringPolicyArgs struct {
	// Number of days/weeks/months/years to retain backups in current tier before tiering.
	// Used only if TieringMode is set to TierAfter
	Duration pulumi.IntPtrInput `pulumi:"duration"`
	// Retention duration type: days/weeks/months/years
	// Used only if TieringMode is set to TierAfter
	DurationType pulumi.StringPtrInput `pulumi:"durationType"`
	// Tiering Mode to control automatic tiering of recovery points. Supported values are:
	// 1. TierRecommended: Tier all recovery points recommended to be tiered
	// 2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.
	// 3. DoNotTier: Do not tier any recovery points
	TieringMode pulumi.StringPtrInput `pulumi:"tieringMode"`
}

func (TieringPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TieringPolicy)(nil)).Elem()
}

func (i TieringPolicyArgs) ToTieringPolicyOutput() TieringPolicyOutput {
	return i.ToTieringPolicyOutputWithContext(context.Background())
}

func (i TieringPolicyArgs) ToTieringPolicyOutputWithContext(ctx context.Context) TieringPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TieringPolicyOutput)
}

// TieringPolicyMapInput is an input type that accepts TieringPolicyMap and TieringPolicyMapOutput values.
// You can construct a concrete instance of `TieringPolicyMapInput` via:
//
//	TieringPolicyMap{ "key": TieringPolicyArgs{...} }
type TieringPolicyMapInput interface {
	pulumi.Input

	ToTieringPolicyMapOutput() TieringPolicyMapOutput
	ToTieringPolicyMapOutputWithContext(context.Context) TieringPolicyMapOutput
}

type TieringPolicyMap map[string]TieringPolicyInput

func (TieringPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]TieringPolicy)(nil)).Elem()
}

func (i TieringPolicyMap) ToTieringPolicyMapOutput() TieringPolicyMapOutput {
	return i.ToTieringPolicyMapOutputWithContext(context.Background())
}

func (i TieringPolicyMap) ToTieringPolicyMapOutputWithContext(ctx context.Context) TieringPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TieringPolicyMapOutput)
}

// Tiering Policy for a target tier.
// If the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier
type TieringPolicyOutput struct{ *pulumi.OutputState }

func (TieringPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TieringPolicy)(nil)).Elem()
}

func (o TieringPolicyOutput) ToTieringPolicyOutput() TieringPolicyOutput {
	return o
}

func (o TieringPolicyOutput) ToTieringPolicyOutputWithContext(ctx context.Context) TieringPolicyOutput {
	return o
}

// Number of days/weeks/months/years to retain backups in current tier before tiering.
// Used only if TieringMode is set to TierAfter
func (o TieringPolicyOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TieringPolicy) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

// Retention duration type: days/weeks/months/years
// Used only if TieringMode is set to TierAfter
func (o TieringPolicyOutput) DurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TieringPolicy) *string { return v.DurationType }).(pulumi.StringPtrOutput)
}

// Tiering Mode to control automatic tiering of recovery points. Supported values are:
// 1. TierRecommended: Tier all recovery points recommended to be tiered
// 2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.
// 3. DoNotTier: Do not tier any recovery points
func (o TieringPolicyOutput) TieringMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TieringPolicy) *string { return v.TieringMode }).(pulumi.StringPtrOutput)
}

type TieringPolicyMapOutput struct{ *pulumi.OutputState }

func (TieringPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]TieringPolicy)(nil)).Elem()
}

func (o TieringPolicyMapOutput) ToTieringPolicyMapOutput() TieringPolicyMapOutput {
	return o
}

func (o TieringPolicyMapOutput) ToTieringPolicyMapOutputWithContext(ctx context.Context) TieringPolicyMapOutput {
	return o
}

func (o TieringPolicyMapOutput) MapIndex(k pulumi.StringInput) TieringPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) TieringPolicy {
		return vs[0].(map[string]TieringPolicy)[vs[1].(string)]
	}).(TieringPolicyOutput)
}

// Tiering Policy for a target tier.
// If the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier
type TieringPolicyResponse struct {
	// Number of days/weeks/months/years to retain backups in current tier before tiering.
	// Used only if TieringMode is set to TierAfter
	Duration *int `pulumi:"duration"`
	// Retention duration type: days/weeks/months/years
	// Used only if TieringMode is set to TierAfter
	DurationType *string `pulumi:"durationType"`
	// Tiering Mode to control automatic tiering of recovery points. Supported values are:
	// 1. TierRecommended: Tier all recovery points recommended to be tiered
	// 2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.
	// 3. DoNotTier: Do not tier any recovery points
	TieringMode *string `pulumi:"tieringMode"`
}

// Tiering Policy for a target tier.
// If the policy is not specified for a given target tier, service retains the existing configured tiering policy for that tier
type TieringPolicyResponseOutput struct{ *pulumi.OutputState }

func (TieringPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TieringPolicyResponse)(nil)).Elem()
}

func (o TieringPolicyResponseOutput) ToTieringPolicyResponseOutput() TieringPolicyResponseOutput {
	return o
}

func (o TieringPolicyResponseOutput) ToTieringPolicyResponseOutputWithContext(ctx context.Context) TieringPolicyResponseOutput {
	return o
}

// Number of days/weeks/months/years to retain backups in current tier before tiering.
// Used only if TieringMode is set to TierAfter
func (o TieringPolicyResponseOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TieringPolicyResponse) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

// Retention duration type: days/weeks/months/years
// Used only if TieringMode is set to TierAfter
func (o TieringPolicyResponseOutput) DurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TieringPolicyResponse) *string { return v.DurationType }).(pulumi.StringPtrOutput)
}

// Tiering Mode to control automatic tiering of recovery points. Supported values are:
// 1. TierRecommended: Tier all recovery points recommended to be tiered
// 2. TierAfter: Tier all recovery points after a fixed period, as specified in duration + durationType below.
// 3. DoNotTier: Do not tier any recovery points
func (o TieringPolicyResponseOutput) TieringMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TieringPolicyResponse) *string { return v.TieringMode }).(pulumi.StringPtrOutput)
}

type TieringPolicyResponseMapOutput struct{ *pulumi.OutputState }

func (TieringPolicyResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]TieringPolicyResponse)(nil)).Elem()
}

func (o TieringPolicyResponseMapOutput) ToTieringPolicyResponseMapOutput() TieringPolicyResponseMapOutput {
	return o
}

func (o TieringPolicyResponseMapOutput) ToTieringPolicyResponseMapOutputWithContext(ctx context.Context) TieringPolicyResponseMapOutput {
	return o
}

func (o TieringPolicyResponseMapOutput) MapIndex(k pulumi.StringInput) TieringPolicyResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) TieringPolicyResponse {
		return vs[0].(map[string]TieringPolicyResponse)[vs[1].(string)]
	}).(TieringPolicyResponseOutput)
}

// Details for upgrading vault.
type UpgradeDetailsResponse struct {
	// UTC time at which the upgrade operation has ended.
	EndTimeUtc string `pulumi:"endTimeUtc"`
	// UTC time at which the upgrade operation status was last updated.
	LastUpdatedTimeUtc string `pulumi:"lastUpdatedTimeUtc"`
	// Message to the user containing information about the upgrade operation.
	Message string `pulumi:"message"`
	// ID of the vault upgrade operation.
	OperationId string `pulumi:"operationId"`
	// Resource ID of the vault before the upgrade.
	PreviousResourceId string `pulumi:"previousResourceId"`
	// UTC time at which the upgrade operation has started.
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// Status of the vault upgrade operation.
	Status string `pulumi:"status"`
	// The way the vault upgrade was triggered.
	TriggerType string `pulumi:"triggerType"`
	// Resource ID of the upgraded vault.
	UpgradedResourceId string `pulumi:"upgradedResourceId"`
}

// Details for upgrading vault.
type UpgradeDetailsResponseOutput struct{ *pulumi.OutputState }

func (UpgradeDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpgradeDetailsResponse)(nil)).Elem()
}

func (o UpgradeDetailsResponseOutput) ToUpgradeDetailsResponseOutput() UpgradeDetailsResponseOutput {
	return o
}

func (o UpgradeDetailsResponseOutput) ToUpgradeDetailsResponseOutputWithContext(ctx context.Context) UpgradeDetailsResponseOutput {
	return o
}

// UTC time at which the upgrade operation has ended.
func (o UpgradeDetailsResponseOutput) EndTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.EndTimeUtc }).(pulumi.StringOutput)
}

// UTC time at which the upgrade operation status was last updated.
func (o UpgradeDetailsResponseOutput) LastUpdatedTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.LastUpdatedTimeUtc }).(pulumi.StringOutput)
}

// Message to the user containing information about the upgrade operation.
func (o UpgradeDetailsResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.Message }).(pulumi.StringOutput)
}

// ID of the vault upgrade operation.
func (o UpgradeDetailsResponseOutput) OperationId() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.OperationId }).(pulumi.StringOutput)
}

// Resource ID of the vault before the upgrade.
func (o UpgradeDetailsResponseOutput) PreviousResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.PreviousResourceId }).(pulumi.StringOutput)
}

// UTC time at which the upgrade operation has started.
func (o UpgradeDetailsResponseOutput) StartTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.StartTimeUtc }).(pulumi.StringOutput)
}

// Status of the vault upgrade operation.
func (o UpgradeDetailsResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.Status }).(pulumi.StringOutput)
}

// The way the vault upgrade was triggered.
func (o UpgradeDetailsResponseOutput) TriggerType() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.TriggerType }).(pulumi.StringOutput)
}

// Resource ID of the upgraded vault.
func (o UpgradeDetailsResponseOutput) UpgradedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v UpgradeDetailsResponse) string { return v.UpgradedResourceId }).(pulumi.StringOutput)
}

type UpgradeDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (UpgradeDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpgradeDetailsResponse)(nil)).Elem()
}

func (o UpgradeDetailsResponsePtrOutput) ToUpgradeDetailsResponsePtrOutput() UpgradeDetailsResponsePtrOutput {
	return o
}

func (o UpgradeDetailsResponsePtrOutput) ToUpgradeDetailsResponsePtrOutputWithContext(ctx context.Context) UpgradeDetailsResponsePtrOutput {
	return o
}

func (o UpgradeDetailsResponsePtrOutput) Elem() UpgradeDetailsResponseOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) UpgradeDetailsResponse {
		if v != nil {
			return *v
		}
		var ret UpgradeDetailsResponse
		return ret
	}).(UpgradeDetailsResponseOutput)
}

// UTC time at which the upgrade operation has ended.
func (o UpgradeDetailsResponsePtrOutput) EndTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EndTimeUtc
	}).(pulumi.StringPtrOutput)
}

// UTC time at which the upgrade operation status was last updated.
func (o UpgradeDetailsResponsePtrOutput) LastUpdatedTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdatedTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Message to the user containing information about the upgrade operation.
func (o UpgradeDetailsResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// ID of the vault upgrade operation.
func (o UpgradeDetailsResponsePtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OperationId
	}).(pulumi.StringPtrOutput)
}

// Resource ID of the vault before the upgrade.
func (o UpgradeDetailsResponsePtrOutput) PreviousResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PreviousResourceId
	}).(pulumi.StringPtrOutput)
}

// UTC time at which the upgrade operation has started.
func (o UpgradeDetailsResponsePtrOutput) StartTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StartTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Status of the vault upgrade operation.
func (o UpgradeDetailsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The way the vault upgrade was triggered.
func (o UpgradeDetailsResponsePtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TriggerType
	}).(pulumi.StringPtrOutput)
}

// Resource ID of the upgraded vault.
func (o UpgradeDetailsResponsePtrOutput) UpgradedResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpgradeDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpgradedResourceId
	}).(pulumi.StringPtrOutput)
}

// User assigned managed identity properties
type UserAssignedIdentityProperties struct {
	// The client ID of the assigned identity.
	ClientId *string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId *string `pulumi:"principalId"`
}

// UserAssignedIdentityPropertiesInput is an input type that accepts UserAssignedIdentityPropertiesArgs and UserAssignedIdentityPropertiesOutput values.
// You can construct a concrete instance of `UserAssignedIdentityPropertiesInput` via:
//
//	UserAssignedIdentityPropertiesArgs{...}
type UserAssignedIdentityPropertiesInput interface {
	pulumi.Input

	ToUserAssignedIdentityPropertiesOutput() UserAssignedIdentityPropertiesOutput
	ToUserAssignedIdentityPropertiesOutputWithContext(context.Context) UserAssignedIdentityPropertiesOutput
}

// User assigned managed identity properties
type UserAssignedIdentityPropertiesArgs struct {
	// The client ID of the assigned identity.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
}

func (UserAssignedIdentityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityProperties)(nil)).Elem()
}

func (i UserAssignedIdentityPropertiesArgs) ToUserAssignedIdentityPropertiesOutput() UserAssignedIdentityPropertiesOutput {
	return i.ToUserAssignedIdentityPropertiesOutputWithContext(context.Background())
}

func (i UserAssignedIdentityPropertiesArgs) ToUserAssignedIdentityPropertiesOutputWithContext(ctx context.Context) UserAssignedIdentityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityPropertiesOutput)
}

func (i UserAssignedIdentityPropertiesArgs) ToUserAssignedIdentityPropertiesPtrOutput() UserAssignedIdentityPropertiesPtrOutput {
	return i.ToUserAssignedIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i UserAssignedIdentityPropertiesArgs) ToUserAssignedIdentityPropertiesPtrOutputWithContext(ctx context.Context) UserAssignedIdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityPropertiesOutput).ToUserAssignedIdentityPropertiesPtrOutputWithContext(ctx)
}

// UserAssignedIdentityPropertiesPtrInput is an input type that accepts UserAssignedIdentityPropertiesArgs, UserAssignedIdentityPropertiesPtr and UserAssignedIdentityPropertiesPtrOutput values.
// You can construct a concrete instance of `UserAssignedIdentityPropertiesPtrInput` via:
//
//	        UserAssignedIdentityPropertiesArgs{...}
//
//	or:
//
//	        nil
type UserAssignedIdentityPropertiesPtrInput interface {
	pulumi.Input

	ToUserAssignedIdentityPropertiesPtrOutput() UserAssignedIdentityPropertiesPtrOutput
	ToUserAssignedIdentityPropertiesPtrOutputWithContext(context.Context) UserAssignedIdentityPropertiesPtrOutput
}

type userAssignedIdentityPropertiesPtrType UserAssignedIdentityPropertiesArgs

func UserAssignedIdentityPropertiesPtr(v *UserAssignedIdentityPropertiesArgs) UserAssignedIdentityPropertiesPtrInput {
	return (*userAssignedIdentityPropertiesPtrType)(v)
}

func (*userAssignedIdentityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedIdentityProperties)(nil)).Elem()
}

func (i *userAssignedIdentityPropertiesPtrType) ToUserAssignedIdentityPropertiesPtrOutput() UserAssignedIdentityPropertiesPtrOutput {
	return i.ToUserAssignedIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i *userAssignedIdentityPropertiesPtrType) ToUserAssignedIdentityPropertiesPtrOutputWithContext(ctx context.Context) UserAssignedIdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityPropertiesPtrOutput)
}

// User assigned managed identity properties
type UserAssignedIdentityPropertiesOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityProperties)(nil)).Elem()
}

func (o UserAssignedIdentityPropertiesOutput) ToUserAssignedIdentityPropertiesOutput() UserAssignedIdentityPropertiesOutput {
	return o
}

func (o UserAssignedIdentityPropertiesOutput) ToUserAssignedIdentityPropertiesOutputWithContext(ctx context.Context) UserAssignedIdentityPropertiesOutput {
	return o
}

func (o UserAssignedIdentityPropertiesOutput) ToUserAssignedIdentityPropertiesPtrOutput() UserAssignedIdentityPropertiesPtrOutput {
	return o.ToUserAssignedIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (o UserAssignedIdentityPropertiesOutput) ToUserAssignedIdentityPropertiesPtrOutputWithContext(ctx context.Context) UserAssignedIdentityPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserAssignedIdentityProperties) *UserAssignedIdentityProperties {
		return &v
	}).(UserAssignedIdentityPropertiesPtrOutput)
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityPropertiesOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityProperties) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityPropertiesOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityProperties) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserAssignedIdentityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedIdentityProperties)(nil)).Elem()
}

func (o UserAssignedIdentityPropertiesPtrOutput) ToUserAssignedIdentityPropertiesPtrOutput() UserAssignedIdentityPropertiesPtrOutput {
	return o
}

func (o UserAssignedIdentityPropertiesPtrOutput) ToUserAssignedIdentityPropertiesPtrOutputWithContext(ctx context.Context) UserAssignedIdentityPropertiesPtrOutput {
	return o
}

func (o UserAssignedIdentityPropertiesPtrOutput) Elem() UserAssignedIdentityPropertiesOutput {
	return o.ApplyT(func(v *UserAssignedIdentityProperties) UserAssignedIdentityProperties {
		if v != nil {
			return *v
		}
		var ret UserAssignedIdentityProperties
		return ret
	}).(UserAssignedIdentityPropertiesOutput)
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityPropertiesPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedIdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityPropertiesPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedIdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// User assigned managed identity properties
type UserAssignedIdentityPropertiesResponse struct {
	// The client ID of the assigned identity.
	ClientId *string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId *string `pulumi:"principalId"`
}

// User assigned managed identity properties
type UserAssignedIdentityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityPropertiesResponse)(nil)).Elem()
}

func (o UserAssignedIdentityPropertiesResponseOutput) ToUserAssignedIdentityPropertiesResponseOutput() UserAssignedIdentityPropertiesResponseOutput {
	return o
}

func (o UserAssignedIdentityPropertiesResponseOutput) ToUserAssignedIdentityPropertiesResponseOutputWithContext(ctx context.Context) UserAssignedIdentityPropertiesResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityPropertiesResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityPropertiesResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityPropertiesResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityPropertiesResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserAssignedIdentityPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedIdentityPropertiesResponse)(nil)).Elem()
}

func (o UserAssignedIdentityPropertiesResponsePtrOutput) ToUserAssignedIdentityPropertiesResponsePtrOutput() UserAssignedIdentityPropertiesResponsePtrOutput {
	return o
}

func (o UserAssignedIdentityPropertiesResponsePtrOutput) ToUserAssignedIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) UserAssignedIdentityPropertiesResponsePtrOutput {
	return o
}

func (o UserAssignedIdentityPropertiesResponsePtrOutput) Elem() UserAssignedIdentityPropertiesResponseOutput {
	return o.ApplyT(func(v *UserAssignedIdentityPropertiesResponse) UserAssignedIdentityPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret UserAssignedIdentityPropertiesResponse
		return ret
	}).(UserAssignedIdentityPropertiesResponseOutput)
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityPropertiesResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedIdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityPropertiesResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedIdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// User assigned managed identity details
type UserAssignedManagedIdentityDetails struct {
	// The ARM id of the assigned identity.
	IdentityArmId *string `pulumi:"identityArmId"`
	// The name of the assigned identity.
	IdentityName *string `pulumi:"identityName"`
	// User assigned managed identity properties
	UserAssignedIdentityProperties *UserAssignedIdentityProperties `pulumi:"userAssignedIdentityProperties"`
}

// UserAssignedManagedIdentityDetailsInput is an input type that accepts UserAssignedManagedIdentityDetailsArgs and UserAssignedManagedIdentityDetailsOutput values.
// You can construct a concrete instance of `UserAssignedManagedIdentityDetailsInput` via:
//
//	UserAssignedManagedIdentityDetailsArgs{...}
type UserAssignedManagedIdentityDetailsInput interface {
	pulumi.Input

	ToUserAssignedManagedIdentityDetailsOutput() UserAssignedManagedIdentityDetailsOutput
	ToUserAssignedManagedIdentityDetailsOutputWithContext(context.Context) UserAssignedManagedIdentityDetailsOutput
}

// User assigned managed identity details
type UserAssignedManagedIdentityDetailsArgs struct {
	// The ARM id of the assigned identity.
	IdentityArmId pulumi.StringPtrInput `pulumi:"identityArmId"`
	// The name of the assigned identity.
	IdentityName pulumi.StringPtrInput `pulumi:"identityName"`
	// User assigned managed identity properties
	UserAssignedIdentityProperties UserAssignedIdentityPropertiesPtrInput `pulumi:"userAssignedIdentityProperties"`
}

func (UserAssignedManagedIdentityDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedManagedIdentityDetails)(nil)).Elem()
}

func (i UserAssignedManagedIdentityDetailsArgs) ToUserAssignedManagedIdentityDetailsOutput() UserAssignedManagedIdentityDetailsOutput {
	return i.ToUserAssignedManagedIdentityDetailsOutputWithContext(context.Background())
}

func (i UserAssignedManagedIdentityDetailsArgs) ToUserAssignedManagedIdentityDetailsOutputWithContext(ctx context.Context) UserAssignedManagedIdentityDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedManagedIdentityDetailsOutput)
}

func (i UserAssignedManagedIdentityDetailsArgs) ToUserAssignedManagedIdentityDetailsPtrOutput() UserAssignedManagedIdentityDetailsPtrOutput {
	return i.ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(context.Background())
}

func (i UserAssignedManagedIdentityDetailsArgs) ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(ctx context.Context) UserAssignedManagedIdentityDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedManagedIdentityDetailsOutput).ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(ctx)
}

// UserAssignedManagedIdentityDetailsPtrInput is an input type that accepts UserAssignedManagedIdentityDetailsArgs, UserAssignedManagedIdentityDetailsPtr and UserAssignedManagedIdentityDetailsPtrOutput values.
// You can construct a concrete instance of `UserAssignedManagedIdentityDetailsPtrInput` via:
//
//	        UserAssignedManagedIdentityDetailsArgs{...}
//
//	or:
//
//	        nil
type UserAssignedManagedIdentityDetailsPtrInput interface {
	pulumi.Input

	ToUserAssignedManagedIdentityDetailsPtrOutput() UserAssignedManagedIdentityDetailsPtrOutput
	ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(context.Context) UserAssignedManagedIdentityDetailsPtrOutput
}

type userAssignedManagedIdentityDetailsPtrType UserAssignedManagedIdentityDetailsArgs

func UserAssignedManagedIdentityDetailsPtr(v *UserAssignedManagedIdentityDetailsArgs) UserAssignedManagedIdentityDetailsPtrInput {
	return (*userAssignedManagedIdentityDetailsPtrType)(v)
}

func (*userAssignedManagedIdentityDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedManagedIdentityDetails)(nil)).Elem()
}

func (i *userAssignedManagedIdentityDetailsPtrType) ToUserAssignedManagedIdentityDetailsPtrOutput() UserAssignedManagedIdentityDetailsPtrOutput {
	return i.ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(context.Background())
}

func (i *userAssignedManagedIdentityDetailsPtrType) ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(ctx context.Context) UserAssignedManagedIdentityDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedManagedIdentityDetailsPtrOutput)
}

// User assigned managed identity details
type UserAssignedManagedIdentityDetailsOutput struct{ *pulumi.OutputState }

func (UserAssignedManagedIdentityDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedManagedIdentityDetails)(nil)).Elem()
}

func (o UserAssignedManagedIdentityDetailsOutput) ToUserAssignedManagedIdentityDetailsOutput() UserAssignedManagedIdentityDetailsOutput {
	return o
}

func (o UserAssignedManagedIdentityDetailsOutput) ToUserAssignedManagedIdentityDetailsOutputWithContext(ctx context.Context) UserAssignedManagedIdentityDetailsOutput {
	return o
}

func (o UserAssignedManagedIdentityDetailsOutput) ToUserAssignedManagedIdentityDetailsPtrOutput() UserAssignedManagedIdentityDetailsPtrOutput {
	return o.ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(context.Background())
}

func (o UserAssignedManagedIdentityDetailsOutput) ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(ctx context.Context) UserAssignedManagedIdentityDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserAssignedManagedIdentityDetails) *UserAssignedManagedIdentityDetails {
		return &v
	}).(UserAssignedManagedIdentityDetailsPtrOutput)
}

// The ARM id of the assigned identity.
func (o UserAssignedManagedIdentityDetailsOutput) IdentityArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityDetails) *string { return v.IdentityArmId }).(pulumi.StringPtrOutput)
}

// The name of the assigned identity.
func (o UserAssignedManagedIdentityDetailsOutput) IdentityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityDetails) *string { return v.IdentityName }).(pulumi.StringPtrOutput)
}

// User assigned managed identity properties
func (o UserAssignedManagedIdentityDetailsOutput) UserAssignedIdentityProperties() UserAssignedIdentityPropertiesPtrOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityDetails) *UserAssignedIdentityProperties {
		return v.UserAssignedIdentityProperties
	}).(UserAssignedIdentityPropertiesPtrOutput)
}

type UserAssignedManagedIdentityDetailsPtrOutput struct{ *pulumi.OutputState }

func (UserAssignedManagedIdentityDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedManagedIdentityDetails)(nil)).Elem()
}

func (o UserAssignedManagedIdentityDetailsPtrOutput) ToUserAssignedManagedIdentityDetailsPtrOutput() UserAssignedManagedIdentityDetailsPtrOutput {
	return o
}

func (o UserAssignedManagedIdentityDetailsPtrOutput) ToUserAssignedManagedIdentityDetailsPtrOutputWithContext(ctx context.Context) UserAssignedManagedIdentityDetailsPtrOutput {
	return o
}

func (o UserAssignedManagedIdentityDetailsPtrOutput) Elem() UserAssignedManagedIdentityDetailsOutput {
	return o.ApplyT(func(v *UserAssignedManagedIdentityDetails) UserAssignedManagedIdentityDetails {
		if v != nil {
			return *v
		}
		var ret UserAssignedManagedIdentityDetails
		return ret
	}).(UserAssignedManagedIdentityDetailsOutput)
}

// The ARM id of the assigned identity.
func (o UserAssignedManagedIdentityDetailsPtrOutput) IdentityArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedManagedIdentityDetails) *string {
		if v == nil {
			return nil
		}
		return v.IdentityArmId
	}).(pulumi.StringPtrOutput)
}

// The name of the assigned identity.
func (o UserAssignedManagedIdentityDetailsPtrOutput) IdentityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedManagedIdentityDetails) *string {
		if v == nil {
			return nil
		}
		return v.IdentityName
	}).(pulumi.StringPtrOutput)
}

// User assigned managed identity properties
func (o UserAssignedManagedIdentityDetailsPtrOutput) UserAssignedIdentityProperties() UserAssignedIdentityPropertiesPtrOutput {
	return o.ApplyT(func(v *UserAssignedManagedIdentityDetails) *UserAssignedIdentityProperties {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityProperties
	}).(UserAssignedIdentityPropertiesPtrOutput)
}

// User assigned managed identity details
type UserAssignedManagedIdentityDetailsResponse struct {
	// The ARM id of the assigned identity.
	IdentityArmId *string `pulumi:"identityArmId"`
	// The name of the assigned identity.
	IdentityName *string `pulumi:"identityName"`
	// User assigned managed identity properties
	UserAssignedIdentityProperties *UserAssignedIdentityPropertiesResponse `pulumi:"userAssignedIdentityProperties"`
}

// User assigned managed identity details
type UserAssignedManagedIdentityDetailsResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedManagedIdentityDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedManagedIdentityDetailsResponse)(nil)).Elem()
}

func (o UserAssignedManagedIdentityDetailsResponseOutput) ToUserAssignedManagedIdentityDetailsResponseOutput() UserAssignedManagedIdentityDetailsResponseOutput {
	return o
}

func (o UserAssignedManagedIdentityDetailsResponseOutput) ToUserAssignedManagedIdentityDetailsResponseOutputWithContext(ctx context.Context) UserAssignedManagedIdentityDetailsResponseOutput {
	return o
}

// The ARM id of the assigned identity.
func (o UserAssignedManagedIdentityDetailsResponseOutput) IdentityArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityDetailsResponse) *string { return v.IdentityArmId }).(pulumi.StringPtrOutput)
}

// The name of the assigned identity.
func (o UserAssignedManagedIdentityDetailsResponseOutput) IdentityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityDetailsResponse) *string { return v.IdentityName }).(pulumi.StringPtrOutput)
}

// User assigned managed identity properties
func (o UserAssignedManagedIdentityDetailsResponseOutput) UserAssignedIdentityProperties() UserAssignedIdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v UserAssignedManagedIdentityDetailsResponse) *UserAssignedIdentityPropertiesResponse {
		return v.UserAssignedIdentityProperties
	}).(UserAssignedIdentityPropertiesResponsePtrOutput)
}

type UserAssignedManagedIdentityDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (UserAssignedManagedIdentityDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedManagedIdentityDetailsResponse)(nil)).Elem()
}

func (o UserAssignedManagedIdentityDetailsResponsePtrOutput) ToUserAssignedManagedIdentityDetailsResponsePtrOutput() UserAssignedManagedIdentityDetailsResponsePtrOutput {
	return o
}

func (o UserAssignedManagedIdentityDetailsResponsePtrOutput) ToUserAssignedManagedIdentityDetailsResponsePtrOutputWithContext(ctx context.Context) UserAssignedManagedIdentityDetailsResponsePtrOutput {
	return o
}

func (o UserAssignedManagedIdentityDetailsResponsePtrOutput) Elem() UserAssignedManagedIdentityDetailsResponseOutput {
	return o.ApplyT(func(v *UserAssignedManagedIdentityDetailsResponse) UserAssignedManagedIdentityDetailsResponse {
		if v != nil {
			return *v
		}
		var ret UserAssignedManagedIdentityDetailsResponse
		return ret
	}).(UserAssignedManagedIdentityDetailsResponseOutput)
}

// The ARM id of the assigned identity.
func (o UserAssignedManagedIdentityDetailsResponsePtrOutput) IdentityArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedManagedIdentityDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.IdentityArmId
	}).(pulumi.StringPtrOutput)
}

// The name of the assigned identity.
func (o UserAssignedManagedIdentityDetailsResponsePtrOutput) IdentityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedManagedIdentityDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.IdentityName
	}).(pulumi.StringPtrOutput)
}

// User assigned managed identity properties
func (o UserAssignedManagedIdentityDetailsResponsePtrOutput) UserAssignedIdentityProperties() UserAssignedIdentityPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *UserAssignedManagedIdentityDetailsResponse) *UserAssignedIdentityPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityProperties
	}).(UserAssignedIdentityPropertiesResponsePtrOutput)
}

// A resource identity that is managed by the user of the service.
type UserIdentityResponse struct {
	// The client ID of the user-assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the user-assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// A resource identity that is managed by the user of the service.
type UserIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityResponse)(nil)).Elem()
}

func (o UserIdentityResponseOutput) ToUserIdentityResponseOutput() UserIdentityResponseOutput {
	return o
}

func (o UserIdentityResponseOutput) ToUserIdentityResponseOutputWithContext(ctx context.Context) UserIdentityResponseOutput {
	return o
}

// The client ID of the user-assigned identity.
func (o UserIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the user-assigned identity.
func (o UserIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityResponse)(nil)).Elem()
}

func (o UserIdentityResponseMapOutput) ToUserIdentityResponseMapOutput() UserIdentityResponseMapOutput {
	return o
}

func (o UserIdentityResponseMapOutput) ToUserIdentityResponseMapOutputWithContext(ctx context.Context) UserIdentityResponseMapOutput {
	return o
}

func (o UserIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserIdentityResponse {
		return vs[0].(map[string]UserIdentityResponse)[vs[1].(string)]
	}).(UserIdentityResponseOutput)
}

// Private Endpoint Connection Response Properties.
type VaultPrivateEndpointConnectionResponse struct {
	// Group Ids for the Private Endpoint
	GroupIds []string `pulumi:"groupIds"`
	// The Private Endpoint network resource that is linked to the Private Endpoint connection.
	PrivateEndpoint PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// Gets or sets private link service connection state.
	PrivateLinkServiceConnectionState VaultPrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// Gets or sets provisioning state of the private endpoint connection.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Private Endpoint Connection Response Properties.
type VaultPrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (VaultPrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o VaultPrivateEndpointConnectionResponseOutput) ToVaultPrivateEndpointConnectionResponseOutput() VaultPrivateEndpointConnectionResponseOutput {
	return o
}

func (o VaultPrivateEndpointConnectionResponseOutput) ToVaultPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) VaultPrivateEndpointConnectionResponseOutput {
	return o
}

// Group Ids for the Private Endpoint
func (o VaultPrivateEndpointConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VaultPrivateEndpointConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// The Private Endpoint network resource that is linked to the Private Endpoint connection.
func (o VaultPrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v VaultPrivateEndpointConnectionResponse) PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponseOutput)
}

// Gets or sets private link service connection state.
func (o VaultPrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() VaultPrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v VaultPrivateEndpointConnectionResponse) VaultPrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(VaultPrivateLinkServiceConnectionStateResponseOutput)
}

// Gets or sets provisioning state of the private endpoint connection.
func (o VaultPrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets or sets private link service connection state.
type VaultPrivateLinkServiceConnectionStateResponse struct {
	// Gets or sets actions required.
	ActionsRequired string `pulumi:"actionsRequired"`
	// Gets or sets description.
	Description string `pulumi:"description"`
	// Gets or sets the status.
	Status string `pulumi:"status"`
}

// Gets or sets private link service connection state.
type VaultPrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (VaultPrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o VaultPrivateLinkServiceConnectionStateResponseOutput) ToVaultPrivateLinkServiceConnectionStateResponseOutput() VaultPrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o VaultPrivateLinkServiceConnectionStateResponseOutput) ToVaultPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) VaultPrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// Gets or sets actions required.
func (o VaultPrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPrivateLinkServiceConnectionStateResponse) string { return v.ActionsRequired }).(pulumi.StringOutput)
}

// Gets or sets description.
func (o VaultPrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPrivateLinkServiceConnectionStateResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Gets or sets the status.
func (o VaultPrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPrivateLinkServiceConnectionStateResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Properties of the vault.
type VaultProperties struct {
	// Customer Managed Key details of the resource.
	Encryption *VaultPropertiesEncryption `pulumi:"encryption"`
	// Monitoring Settings of the vault
	MonitoringSettings *MonitoringSettings `pulumi:"monitoringSettings"`
	// property to enable or disable resource provider inbound network traffic from public clients
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The redundancy Settings of a Vault
	RedundancySettings *VaultPropertiesRedundancySettings `pulumi:"redundancySettings"`
	// Restore Settings of the vault
	RestoreSettings *RestoreSettings `pulumi:"restoreSettings"`
	// Security Settings of the vault
	SecuritySettings *SecuritySettings `pulumi:"securitySettings"`
}

// VaultPropertiesInput is an input type that accepts VaultPropertiesArgs and VaultPropertiesOutput values.
// You can construct a concrete instance of `VaultPropertiesInput` via:
//
//	VaultPropertiesArgs{...}
type VaultPropertiesInput interface {
	pulumi.Input

	ToVaultPropertiesOutput() VaultPropertiesOutput
	ToVaultPropertiesOutputWithContext(context.Context) VaultPropertiesOutput
}

// Properties of the vault.
type VaultPropertiesArgs struct {
	// Customer Managed Key details of the resource.
	Encryption VaultPropertiesEncryptionPtrInput `pulumi:"encryption"`
	// Monitoring Settings of the vault
	MonitoringSettings MonitoringSettingsPtrInput `pulumi:"monitoringSettings"`
	// property to enable or disable resource provider inbound network traffic from public clients
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
	// The redundancy Settings of a Vault
	RedundancySettings VaultPropertiesRedundancySettingsPtrInput `pulumi:"redundancySettings"`
	// Restore Settings of the vault
	RestoreSettings RestoreSettingsPtrInput `pulumi:"restoreSettings"`
	// Security Settings of the vault
	SecuritySettings SecuritySettingsPtrInput `pulumi:"securitySettings"`
}

func (VaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultProperties)(nil)).Elem()
}

func (i VaultPropertiesArgs) ToVaultPropertiesOutput() VaultPropertiesOutput {
	return i.ToVaultPropertiesOutputWithContext(context.Background())
}

func (i VaultPropertiesArgs) ToVaultPropertiesOutputWithContext(ctx context.Context) VaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesOutput)
}

func (i VaultPropertiesArgs) ToVaultPropertiesPtrOutput() VaultPropertiesPtrOutput {
	return i.ToVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i VaultPropertiesArgs) ToVaultPropertiesPtrOutputWithContext(ctx context.Context) VaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesOutput).ToVaultPropertiesPtrOutputWithContext(ctx)
}

// VaultPropertiesPtrInput is an input type that accepts VaultPropertiesArgs, VaultPropertiesPtr and VaultPropertiesPtrOutput values.
// You can construct a concrete instance of `VaultPropertiesPtrInput` via:
//
//	        VaultPropertiesArgs{...}
//
//	or:
//
//	        nil
type VaultPropertiesPtrInput interface {
	pulumi.Input

	ToVaultPropertiesPtrOutput() VaultPropertiesPtrOutput
	ToVaultPropertiesPtrOutputWithContext(context.Context) VaultPropertiesPtrOutput
}

type vaultPropertiesPtrType VaultPropertiesArgs

func VaultPropertiesPtr(v *VaultPropertiesArgs) VaultPropertiesPtrInput {
	return (*vaultPropertiesPtrType)(v)
}

func (*vaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultProperties)(nil)).Elem()
}

func (i *vaultPropertiesPtrType) ToVaultPropertiesPtrOutput() VaultPropertiesPtrOutput {
	return i.ToVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *vaultPropertiesPtrType) ToVaultPropertiesPtrOutputWithContext(ctx context.Context) VaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesPtrOutput)
}

// Properties of the vault.
type VaultPropertiesOutput struct{ *pulumi.OutputState }

func (VaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultProperties)(nil)).Elem()
}

func (o VaultPropertiesOutput) ToVaultPropertiesOutput() VaultPropertiesOutput {
	return o
}

func (o VaultPropertiesOutput) ToVaultPropertiesOutputWithContext(ctx context.Context) VaultPropertiesOutput {
	return o
}

func (o VaultPropertiesOutput) ToVaultPropertiesPtrOutput() VaultPropertiesPtrOutput {
	return o.ToVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o VaultPropertiesOutput) ToVaultPropertiesPtrOutputWithContext(ctx context.Context) VaultPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VaultProperties) *VaultProperties {
		return &v
	}).(VaultPropertiesPtrOutput)
}

// Customer Managed Key details of the resource.
func (o VaultPropertiesOutput) Encryption() VaultPropertiesEncryptionPtrOutput {
	return o.ApplyT(func(v VaultProperties) *VaultPropertiesEncryption { return v.Encryption }).(VaultPropertiesEncryptionPtrOutput)
}

// Monitoring Settings of the vault
func (o VaultPropertiesOutput) MonitoringSettings() MonitoringSettingsPtrOutput {
	return o.ApplyT(func(v VaultProperties) *MonitoringSettings { return v.MonitoringSettings }).(MonitoringSettingsPtrOutput)
}

// property to enable or disable resource provider inbound network traffic from public clients
func (o VaultPropertiesOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultProperties) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// The redundancy Settings of a Vault
func (o VaultPropertiesOutput) RedundancySettings() VaultPropertiesRedundancySettingsPtrOutput {
	return o.ApplyT(func(v VaultProperties) *VaultPropertiesRedundancySettings { return v.RedundancySettings }).(VaultPropertiesRedundancySettingsPtrOutput)
}

// Restore Settings of the vault
func (o VaultPropertiesOutput) RestoreSettings() RestoreSettingsPtrOutput {
	return o.ApplyT(func(v VaultProperties) *RestoreSettings { return v.RestoreSettings }).(RestoreSettingsPtrOutput)
}

// Security Settings of the vault
func (o VaultPropertiesOutput) SecuritySettings() SecuritySettingsPtrOutput {
	return o.ApplyT(func(v VaultProperties) *SecuritySettings { return v.SecuritySettings }).(SecuritySettingsPtrOutput)
}

type VaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultProperties)(nil)).Elem()
}

func (o VaultPropertiesPtrOutput) ToVaultPropertiesPtrOutput() VaultPropertiesPtrOutput {
	return o
}

func (o VaultPropertiesPtrOutput) ToVaultPropertiesPtrOutputWithContext(ctx context.Context) VaultPropertiesPtrOutput {
	return o
}

func (o VaultPropertiesPtrOutput) Elem() VaultPropertiesOutput {
	return o.ApplyT(func(v *VaultProperties) VaultProperties {
		if v != nil {
			return *v
		}
		var ret VaultProperties
		return ret
	}).(VaultPropertiesOutput)
}

// Customer Managed Key details of the resource.
func (o VaultPropertiesPtrOutput) Encryption() VaultPropertiesEncryptionPtrOutput {
	return o.ApplyT(func(v *VaultProperties) *VaultPropertiesEncryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(VaultPropertiesEncryptionPtrOutput)
}

// Monitoring Settings of the vault
func (o VaultPropertiesPtrOutput) MonitoringSettings() MonitoringSettingsPtrOutput {
	return o.ApplyT(func(v *VaultProperties) *MonitoringSettings {
		if v == nil {
			return nil
		}
		return v.MonitoringSettings
	}).(MonitoringSettingsPtrOutput)
}

// property to enable or disable resource provider inbound network traffic from public clients
func (o VaultPropertiesPtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

// The redundancy Settings of a Vault
func (o VaultPropertiesPtrOutput) RedundancySettings() VaultPropertiesRedundancySettingsPtrOutput {
	return o.ApplyT(func(v *VaultProperties) *VaultPropertiesRedundancySettings {
		if v == nil {
			return nil
		}
		return v.RedundancySettings
	}).(VaultPropertiesRedundancySettingsPtrOutput)
}

// Restore Settings of the vault
func (o VaultPropertiesPtrOutput) RestoreSettings() RestoreSettingsPtrOutput {
	return o.ApplyT(func(v *VaultProperties) *RestoreSettings {
		if v == nil {
			return nil
		}
		return v.RestoreSettings
	}).(RestoreSettingsPtrOutput)
}

// Security Settings of the vault
func (o VaultPropertiesPtrOutput) SecuritySettings() SecuritySettingsPtrOutput {
	return o.ApplyT(func(v *VaultProperties) *SecuritySettings {
		if v == nil {
			return nil
		}
		return v.SecuritySettings
	}).(SecuritySettingsPtrOutput)
}

// Customer Managed Key details of the resource.
type VaultPropertiesEncryption struct {
	// Enabling/Disabling the Double Encryption state
	InfrastructureEncryption *string `pulumi:"infrastructureEncryption"`
	// The details of the identity used for CMK
	KekIdentity *CmkKekIdentity `pulumi:"kekIdentity"`
	// The properties of the Key Vault which hosts CMK
	KeyVaultProperties *CmkKeyVaultProperties `pulumi:"keyVaultProperties"`
}

// VaultPropertiesEncryptionInput is an input type that accepts VaultPropertiesEncryptionArgs and VaultPropertiesEncryptionOutput values.
// You can construct a concrete instance of `VaultPropertiesEncryptionInput` via:
//
//	VaultPropertiesEncryptionArgs{...}
type VaultPropertiesEncryptionInput interface {
	pulumi.Input

	ToVaultPropertiesEncryptionOutput() VaultPropertiesEncryptionOutput
	ToVaultPropertiesEncryptionOutputWithContext(context.Context) VaultPropertiesEncryptionOutput
}

// Customer Managed Key details of the resource.
type VaultPropertiesEncryptionArgs struct {
	// Enabling/Disabling the Double Encryption state
	InfrastructureEncryption pulumi.StringPtrInput `pulumi:"infrastructureEncryption"`
	// The details of the identity used for CMK
	KekIdentity CmkKekIdentityPtrInput `pulumi:"kekIdentity"`
	// The properties of the Key Vault which hosts CMK
	KeyVaultProperties CmkKeyVaultPropertiesPtrInput `pulumi:"keyVaultProperties"`
}

func (VaultPropertiesEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesEncryption)(nil)).Elem()
}

func (i VaultPropertiesEncryptionArgs) ToVaultPropertiesEncryptionOutput() VaultPropertiesEncryptionOutput {
	return i.ToVaultPropertiesEncryptionOutputWithContext(context.Background())
}

func (i VaultPropertiesEncryptionArgs) ToVaultPropertiesEncryptionOutputWithContext(ctx context.Context) VaultPropertiesEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesEncryptionOutput)
}

func (i VaultPropertiesEncryptionArgs) ToVaultPropertiesEncryptionPtrOutput() VaultPropertiesEncryptionPtrOutput {
	return i.ToVaultPropertiesEncryptionPtrOutputWithContext(context.Background())
}

func (i VaultPropertiesEncryptionArgs) ToVaultPropertiesEncryptionPtrOutputWithContext(ctx context.Context) VaultPropertiesEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesEncryptionOutput).ToVaultPropertiesEncryptionPtrOutputWithContext(ctx)
}

// VaultPropertiesEncryptionPtrInput is an input type that accepts VaultPropertiesEncryptionArgs, VaultPropertiesEncryptionPtr and VaultPropertiesEncryptionPtrOutput values.
// You can construct a concrete instance of `VaultPropertiesEncryptionPtrInput` via:
//
//	        VaultPropertiesEncryptionArgs{...}
//
//	or:
//
//	        nil
type VaultPropertiesEncryptionPtrInput interface {
	pulumi.Input

	ToVaultPropertiesEncryptionPtrOutput() VaultPropertiesEncryptionPtrOutput
	ToVaultPropertiesEncryptionPtrOutputWithContext(context.Context) VaultPropertiesEncryptionPtrOutput
}

type vaultPropertiesEncryptionPtrType VaultPropertiesEncryptionArgs

func VaultPropertiesEncryptionPtr(v *VaultPropertiesEncryptionArgs) VaultPropertiesEncryptionPtrInput {
	return (*vaultPropertiesEncryptionPtrType)(v)
}

func (*vaultPropertiesEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesEncryption)(nil)).Elem()
}

func (i *vaultPropertiesEncryptionPtrType) ToVaultPropertiesEncryptionPtrOutput() VaultPropertiesEncryptionPtrOutput {
	return i.ToVaultPropertiesEncryptionPtrOutputWithContext(context.Background())
}

func (i *vaultPropertiesEncryptionPtrType) ToVaultPropertiesEncryptionPtrOutputWithContext(ctx context.Context) VaultPropertiesEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesEncryptionPtrOutput)
}

// Customer Managed Key details of the resource.
type VaultPropertiesEncryptionOutput struct{ *pulumi.OutputState }

func (VaultPropertiesEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesEncryption)(nil)).Elem()
}

func (o VaultPropertiesEncryptionOutput) ToVaultPropertiesEncryptionOutput() VaultPropertiesEncryptionOutput {
	return o
}

func (o VaultPropertiesEncryptionOutput) ToVaultPropertiesEncryptionOutputWithContext(ctx context.Context) VaultPropertiesEncryptionOutput {
	return o
}

func (o VaultPropertiesEncryptionOutput) ToVaultPropertiesEncryptionPtrOutput() VaultPropertiesEncryptionPtrOutput {
	return o.ToVaultPropertiesEncryptionPtrOutputWithContext(context.Background())
}

func (o VaultPropertiesEncryptionOutput) ToVaultPropertiesEncryptionPtrOutputWithContext(ctx context.Context) VaultPropertiesEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VaultPropertiesEncryption) *VaultPropertiesEncryption {
		return &v
	}).(VaultPropertiesEncryptionPtrOutput)
}

// Enabling/Disabling the Double Encryption state
func (o VaultPropertiesEncryptionOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultPropertiesEncryption) *string { return v.InfrastructureEncryption }).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
func (o VaultPropertiesEncryptionOutput) KekIdentity() CmkKekIdentityPtrOutput {
	return o.ApplyT(func(v VaultPropertiesEncryption) *CmkKekIdentity { return v.KekIdentity }).(CmkKekIdentityPtrOutput)
}

// The properties of the Key Vault which hosts CMK
func (o VaultPropertiesEncryptionOutput) KeyVaultProperties() CmkKeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v VaultPropertiesEncryption) *CmkKeyVaultProperties { return v.KeyVaultProperties }).(CmkKeyVaultPropertiesPtrOutput)
}

type VaultPropertiesEncryptionPtrOutput struct{ *pulumi.OutputState }

func (VaultPropertiesEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesEncryption)(nil)).Elem()
}

func (o VaultPropertiesEncryptionPtrOutput) ToVaultPropertiesEncryptionPtrOutput() VaultPropertiesEncryptionPtrOutput {
	return o
}

func (o VaultPropertiesEncryptionPtrOutput) ToVaultPropertiesEncryptionPtrOutputWithContext(ctx context.Context) VaultPropertiesEncryptionPtrOutput {
	return o
}

func (o VaultPropertiesEncryptionPtrOutput) Elem() VaultPropertiesEncryptionOutput {
	return o.ApplyT(func(v *VaultPropertiesEncryption) VaultPropertiesEncryption {
		if v != nil {
			return *v
		}
		var ret VaultPropertiesEncryption
		return ret
	}).(VaultPropertiesEncryptionOutput)
}

// Enabling/Disabling the Double Encryption state
func (o VaultPropertiesEncryptionPtrOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesEncryption) *string {
		if v == nil {
			return nil
		}
		return v.InfrastructureEncryption
	}).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
func (o VaultPropertiesEncryptionPtrOutput) KekIdentity() CmkKekIdentityPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesEncryption) *CmkKekIdentity {
		if v == nil {
			return nil
		}
		return v.KekIdentity
	}).(CmkKekIdentityPtrOutput)
}

// The properties of the Key Vault which hosts CMK
func (o VaultPropertiesEncryptionPtrOutput) KeyVaultProperties() CmkKeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesEncryption) *CmkKeyVaultProperties {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(CmkKeyVaultPropertiesPtrOutput)
}

// The redundancy Settings of a Vault
type VaultPropertiesRedundancySettings struct {
	// Flag to show if Cross Region Restore is enabled on the Vault or not
	CrossRegionRestore *string `pulumi:"crossRegionRestore"`
	// The storage redundancy setting of a vault
	StandardTierStorageRedundancy *string `pulumi:"standardTierStorageRedundancy"`
}

// VaultPropertiesRedundancySettingsInput is an input type that accepts VaultPropertiesRedundancySettingsArgs and VaultPropertiesRedundancySettingsOutput values.
// You can construct a concrete instance of `VaultPropertiesRedundancySettingsInput` via:
//
//	VaultPropertiesRedundancySettingsArgs{...}
type VaultPropertiesRedundancySettingsInput interface {
	pulumi.Input

	ToVaultPropertiesRedundancySettingsOutput() VaultPropertiesRedundancySettingsOutput
	ToVaultPropertiesRedundancySettingsOutputWithContext(context.Context) VaultPropertiesRedundancySettingsOutput
}

// The redundancy Settings of a Vault
type VaultPropertiesRedundancySettingsArgs struct {
	// Flag to show if Cross Region Restore is enabled on the Vault or not
	CrossRegionRestore pulumi.StringPtrInput `pulumi:"crossRegionRestore"`
	// The storage redundancy setting of a vault
	StandardTierStorageRedundancy pulumi.StringPtrInput `pulumi:"standardTierStorageRedundancy"`
}

func (VaultPropertiesRedundancySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesRedundancySettings)(nil)).Elem()
}

func (i VaultPropertiesRedundancySettingsArgs) ToVaultPropertiesRedundancySettingsOutput() VaultPropertiesRedundancySettingsOutput {
	return i.ToVaultPropertiesRedundancySettingsOutputWithContext(context.Background())
}

func (i VaultPropertiesRedundancySettingsArgs) ToVaultPropertiesRedundancySettingsOutputWithContext(ctx context.Context) VaultPropertiesRedundancySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesRedundancySettingsOutput)
}

func (i VaultPropertiesRedundancySettingsArgs) ToVaultPropertiesRedundancySettingsPtrOutput() VaultPropertiesRedundancySettingsPtrOutput {
	return i.ToVaultPropertiesRedundancySettingsPtrOutputWithContext(context.Background())
}

func (i VaultPropertiesRedundancySettingsArgs) ToVaultPropertiesRedundancySettingsPtrOutputWithContext(ctx context.Context) VaultPropertiesRedundancySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesRedundancySettingsOutput).ToVaultPropertiesRedundancySettingsPtrOutputWithContext(ctx)
}

// VaultPropertiesRedundancySettingsPtrInput is an input type that accepts VaultPropertiesRedundancySettingsArgs, VaultPropertiesRedundancySettingsPtr and VaultPropertiesRedundancySettingsPtrOutput values.
// You can construct a concrete instance of `VaultPropertiesRedundancySettingsPtrInput` via:
//
//	        VaultPropertiesRedundancySettingsArgs{...}
//
//	or:
//
//	        nil
type VaultPropertiesRedundancySettingsPtrInput interface {
	pulumi.Input

	ToVaultPropertiesRedundancySettingsPtrOutput() VaultPropertiesRedundancySettingsPtrOutput
	ToVaultPropertiesRedundancySettingsPtrOutputWithContext(context.Context) VaultPropertiesRedundancySettingsPtrOutput
}

type vaultPropertiesRedundancySettingsPtrType VaultPropertiesRedundancySettingsArgs

func VaultPropertiesRedundancySettingsPtr(v *VaultPropertiesRedundancySettingsArgs) VaultPropertiesRedundancySettingsPtrInput {
	return (*vaultPropertiesRedundancySettingsPtrType)(v)
}

func (*vaultPropertiesRedundancySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesRedundancySettings)(nil)).Elem()
}

func (i *vaultPropertiesRedundancySettingsPtrType) ToVaultPropertiesRedundancySettingsPtrOutput() VaultPropertiesRedundancySettingsPtrOutput {
	return i.ToVaultPropertiesRedundancySettingsPtrOutputWithContext(context.Background())
}

func (i *vaultPropertiesRedundancySettingsPtrType) ToVaultPropertiesRedundancySettingsPtrOutputWithContext(ctx context.Context) VaultPropertiesRedundancySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultPropertiesRedundancySettingsPtrOutput)
}

// The redundancy Settings of a Vault
type VaultPropertiesRedundancySettingsOutput struct{ *pulumi.OutputState }

func (VaultPropertiesRedundancySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesRedundancySettings)(nil)).Elem()
}

func (o VaultPropertiesRedundancySettingsOutput) ToVaultPropertiesRedundancySettingsOutput() VaultPropertiesRedundancySettingsOutput {
	return o
}

func (o VaultPropertiesRedundancySettingsOutput) ToVaultPropertiesRedundancySettingsOutputWithContext(ctx context.Context) VaultPropertiesRedundancySettingsOutput {
	return o
}

func (o VaultPropertiesRedundancySettingsOutput) ToVaultPropertiesRedundancySettingsPtrOutput() VaultPropertiesRedundancySettingsPtrOutput {
	return o.ToVaultPropertiesRedundancySettingsPtrOutputWithContext(context.Background())
}

func (o VaultPropertiesRedundancySettingsOutput) ToVaultPropertiesRedundancySettingsPtrOutputWithContext(ctx context.Context) VaultPropertiesRedundancySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VaultPropertiesRedundancySettings) *VaultPropertiesRedundancySettings {
		return &v
	}).(VaultPropertiesRedundancySettingsPtrOutput)
}

// Flag to show if Cross Region Restore is enabled on the Vault or not
func (o VaultPropertiesRedundancySettingsOutput) CrossRegionRestore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultPropertiesRedundancySettings) *string { return v.CrossRegionRestore }).(pulumi.StringPtrOutput)
}

// The storage redundancy setting of a vault
func (o VaultPropertiesRedundancySettingsOutput) StandardTierStorageRedundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultPropertiesRedundancySettings) *string { return v.StandardTierStorageRedundancy }).(pulumi.StringPtrOutput)
}

type VaultPropertiesRedundancySettingsPtrOutput struct{ *pulumi.OutputState }

func (VaultPropertiesRedundancySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesRedundancySettings)(nil)).Elem()
}

func (o VaultPropertiesRedundancySettingsPtrOutput) ToVaultPropertiesRedundancySettingsPtrOutput() VaultPropertiesRedundancySettingsPtrOutput {
	return o
}

func (o VaultPropertiesRedundancySettingsPtrOutput) ToVaultPropertiesRedundancySettingsPtrOutputWithContext(ctx context.Context) VaultPropertiesRedundancySettingsPtrOutput {
	return o
}

func (o VaultPropertiesRedundancySettingsPtrOutput) Elem() VaultPropertiesRedundancySettingsOutput {
	return o.ApplyT(func(v *VaultPropertiesRedundancySettings) VaultPropertiesRedundancySettings {
		if v != nil {
			return *v
		}
		var ret VaultPropertiesRedundancySettings
		return ret
	}).(VaultPropertiesRedundancySettingsOutput)
}

// Flag to show if Cross Region Restore is enabled on the Vault or not
func (o VaultPropertiesRedundancySettingsPtrOutput) CrossRegionRestore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesRedundancySettings) *string {
		if v == nil {
			return nil
		}
		return v.CrossRegionRestore
	}).(pulumi.StringPtrOutput)
}

// The storage redundancy setting of a vault
func (o VaultPropertiesRedundancySettingsPtrOutput) StandardTierStorageRedundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesRedundancySettings) *string {
		if v == nil {
			return nil
		}
		return v.StandardTierStorageRedundancy
	}).(pulumi.StringPtrOutput)
}

// Properties of the vault.
type VaultPropertiesResponse struct {
	// Backup storage version
	BackupStorageVersion string `pulumi:"backupStorageVersion"`
	// Customer Managed Key details of the resource.
	Encryption *VaultPropertiesResponseEncryption `pulumi:"encryption"`
	// Monitoring Settings of the vault
	MonitoringSettings *MonitoringSettingsResponse `pulumi:"monitoringSettings"`
	// The details of the latest move operation performed on the Azure Resource
	MoveDetails *VaultPropertiesResponseMoveDetails `pulumi:"moveDetails"`
	// The State of the Resource after the move operation
	MoveState string `pulumi:"moveState"`
	// List of private endpoint connection.
	PrivateEndpointConnections []PrivateEndpointConnectionVaultPropertiesResponse `pulumi:"privateEndpointConnections"`
	// Private endpoint state for backup.
	PrivateEndpointStateForBackup string `pulumi:"privateEndpointStateForBackup"`
	// Private endpoint state for site recovery.
	PrivateEndpointStateForSiteRecovery string `pulumi:"privateEndpointStateForSiteRecovery"`
	// Provisioning State.
	ProvisioningState string `pulumi:"provisioningState"`
	// property to enable or disable resource provider inbound network traffic from public clients
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The redundancy Settings of a Vault
	RedundancySettings *VaultPropertiesResponseRedundancySettings `pulumi:"redundancySettings"`
	// Restore Settings of the vault
	RestoreSettings *RestoreSettingsResponse `pulumi:"restoreSettings"`
	// Secure Score of Recovery Services Vault
	SecureScore string `pulumi:"secureScore"`
	// Security Settings of the vault
	SecuritySettings *SecuritySettingsResponse `pulumi:"securitySettings"`
	// Details for upgrading vault.
	UpgradeDetails *UpgradeDetailsResponse `pulumi:"upgradeDetails"`
}

// Properties of the vault.
type VaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesResponse)(nil)).Elem()
}

func (o VaultPropertiesResponseOutput) ToVaultPropertiesResponseOutput() VaultPropertiesResponseOutput {
	return o
}

func (o VaultPropertiesResponseOutput) ToVaultPropertiesResponseOutputWithContext(ctx context.Context) VaultPropertiesResponseOutput {
	return o
}

// Backup storage version
func (o VaultPropertiesResponseOutput) BackupStorageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.BackupStorageVersion }).(pulumi.StringOutput)
}

// Customer Managed Key details of the resource.
func (o VaultPropertiesResponseOutput) Encryption() VaultPropertiesResponseEncryptionPtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *VaultPropertiesResponseEncryption { return v.Encryption }).(VaultPropertiesResponseEncryptionPtrOutput)
}

// Monitoring Settings of the vault
func (o VaultPropertiesResponseOutput) MonitoringSettings() MonitoringSettingsResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *MonitoringSettingsResponse { return v.MonitoringSettings }).(MonitoringSettingsResponsePtrOutput)
}

// The details of the latest move operation performed on the Azure Resource
func (o VaultPropertiesResponseOutput) MoveDetails() VaultPropertiesResponseMoveDetailsPtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *VaultPropertiesResponseMoveDetails { return v.MoveDetails }).(VaultPropertiesResponseMoveDetailsPtrOutput)
}

// The State of the Resource after the move operation
func (o VaultPropertiesResponseOutput) MoveState() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.MoveState }).(pulumi.StringOutput)
}

// List of private endpoint connection.
func (o VaultPropertiesResponseOutput) PrivateEndpointConnections() PrivateEndpointConnectionVaultPropertiesResponseArrayOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) []PrivateEndpointConnectionVaultPropertiesResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionVaultPropertiesResponseArrayOutput)
}

// Private endpoint state for backup.
func (o VaultPropertiesResponseOutput) PrivateEndpointStateForBackup() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.PrivateEndpointStateForBackup }).(pulumi.StringOutput)
}

// Private endpoint state for site recovery.
func (o VaultPropertiesResponseOutput) PrivateEndpointStateForSiteRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.PrivateEndpointStateForSiteRecovery }).(pulumi.StringOutput)
}

// Provisioning State.
func (o VaultPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// property to enable or disable resource provider inbound network traffic from public clients
func (o VaultPropertiesResponseOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// The redundancy Settings of a Vault
func (o VaultPropertiesResponseOutput) RedundancySettings() VaultPropertiesResponseRedundancySettingsPtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *VaultPropertiesResponseRedundancySettings {
		return v.RedundancySettings
	}).(VaultPropertiesResponseRedundancySettingsPtrOutput)
}

// Restore Settings of the vault
func (o VaultPropertiesResponseOutput) RestoreSettings() RestoreSettingsResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *RestoreSettingsResponse { return v.RestoreSettings }).(RestoreSettingsResponsePtrOutput)
}

// Secure Score of Recovery Services Vault
func (o VaultPropertiesResponseOutput) SecureScore() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) string { return v.SecureScore }).(pulumi.StringOutput)
}

// Security Settings of the vault
func (o VaultPropertiesResponseOutput) SecuritySettings() SecuritySettingsResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *SecuritySettingsResponse { return v.SecuritySettings }).(SecuritySettingsResponsePtrOutput)
}

// Details for upgrading vault.
func (o VaultPropertiesResponseOutput) UpgradeDetails() UpgradeDetailsResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponse) *UpgradeDetailsResponse { return v.UpgradeDetails }).(UpgradeDetailsResponsePtrOutput)
}

// Customer Managed Key details of the resource.
type VaultPropertiesResponseEncryption struct {
	// Enabling/Disabling the Double Encryption state
	InfrastructureEncryption *string `pulumi:"infrastructureEncryption"`
	// The details of the identity used for CMK
	KekIdentity *CmkKekIdentityResponse `pulumi:"kekIdentity"`
	// The properties of the Key Vault which hosts CMK
	KeyVaultProperties *CmkKeyVaultPropertiesResponse `pulumi:"keyVaultProperties"`
}

// Customer Managed Key details of the resource.
type VaultPropertiesResponseEncryptionOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesResponseEncryption)(nil)).Elem()
}

func (o VaultPropertiesResponseEncryptionOutput) ToVaultPropertiesResponseEncryptionOutput() VaultPropertiesResponseEncryptionOutput {
	return o
}

func (o VaultPropertiesResponseEncryptionOutput) ToVaultPropertiesResponseEncryptionOutputWithContext(ctx context.Context) VaultPropertiesResponseEncryptionOutput {
	return o
}

// Enabling/Disabling the Double Encryption state
func (o VaultPropertiesResponseEncryptionOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponseEncryption) *string { return v.InfrastructureEncryption }).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
func (o VaultPropertiesResponseEncryptionOutput) KekIdentity() CmkKekIdentityResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponseEncryption) *CmkKekIdentityResponse { return v.KekIdentity }).(CmkKekIdentityResponsePtrOutput)
}

// The properties of the Key Vault which hosts CMK
func (o VaultPropertiesResponseEncryptionOutput) KeyVaultProperties() CmkKeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponseEncryption) *CmkKeyVaultPropertiesResponse { return v.KeyVaultProperties }).(CmkKeyVaultPropertiesResponsePtrOutput)
}

type VaultPropertiesResponseEncryptionPtrOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesResponseEncryption)(nil)).Elem()
}

func (o VaultPropertiesResponseEncryptionPtrOutput) ToVaultPropertiesResponseEncryptionPtrOutput() VaultPropertiesResponseEncryptionPtrOutput {
	return o
}

func (o VaultPropertiesResponseEncryptionPtrOutput) ToVaultPropertiesResponseEncryptionPtrOutputWithContext(ctx context.Context) VaultPropertiesResponseEncryptionPtrOutput {
	return o
}

func (o VaultPropertiesResponseEncryptionPtrOutput) Elem() VaultPropertiesResponseEncryptionOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseEncryption) VaultPropertiesResponseEncryption {
		if v != nil {
			return *v
		}
		var ret VaultPropertiesResponseEncryption
		return ret
	}).(VaultPropertiesResponseEncryptionOutput)
}

// Enabling/Disabling the Double Encryption state
func (o VaultPropertiesResponseEncryptionPtrOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseEncryption) *string {
		if v == nil {
			return nil
		}
		return v.InfrastructureEncryption
	}).(pulumi.StringPtrOutput)
}

// The details of the identity used for CMK
func (o VaultPropertiesResponseEncryptionPtrOutput) KekIdentity() CmkKekIdentityResponsePtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseEncryption) *CmkKekIdentityResponse {
		if v == nil {
			return nil
		}
		return v.KekIdentity
	}).(CmkKekIdentityResponsePtrOutput)
}

// The properties of the Key Vault which hosts CMK
func (o VaultPropertiesResponseEncryptionPtrOutput) KeyVaultProperties() CmkKeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseEncryption) *CmkKeyVaultPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(CmkKeyVaultPropertiesResponsePtrOutput)
}

// The details of the latest move operation performed on the Azure Resource
type VaultPropertiesResponseMoveDetails struct {
	// End Time of the Resource Move Operation
	CompletionTimeUtc string `pulumi:"completionTimeUtc"`
	// OperationId of the Resource Move Operation
	OperationId string `pulumi:"operationId"`
	// Source Resource of the Resource Move Operation
	SourceResourceId string `pulumi:"sourceResourceId"`
	// Start Time of the Resource Move Operation
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// Target Resource of the Resource Move Operation
	TargetResourceId string `pulumi:"targetResourceId"`
}

// The details of the latest move operation performed on the Azure Resource
type VaultPropertiesResponseMoveDetailsOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseMoveDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesResponseMoveDetails)(nil)).Elem()
}

func (o VaultPropertiesResponseMoveDetailsOutput) ToVaultPropertiesResponseMoveDetailsOutput() VaultPropertiesResponseMoveDetailsOutput {
	return o
}

func (o VaultPropertiesResponseMoveDetailsOutput) ToVaultPropertiesResponseMoveDetailsOutputWithContext(ctx context.Context) VaultPropertiesResponseMoveDetailsOutput {
	return o
}

// End Time of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsOutput) CompletionTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseMoveDetails) string { return v.CompletionTimeUtc }).(pulumi.StringOutput)
}

// OperationId of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsOutput) OperationId() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseMoveDetails) string { return v.OperationId }).(pulumi.StringOutput)
}

// Source Resource of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsOutput) SourceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseMoveDetails) string { return v.SourceResourceId }).(pulumi.StringOutput)
}

// Start Time of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsOutput) StartTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseMoveDetails) string { return v.StartTimeUtc }).(pulumi.StringOutput)
}

// Target Resource of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v VaultPropertiesResponseMoveDetails) string { return v.TargetResourceId }).(pulumi.StringOutput)
}

type VaultPropertiesResponseMoveDetailsPtrOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseMoveDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesResponseMoveDetails)(nil)).Elem()
}

func (o VaultPropertiesResponseMoveDetailsPtrOutput) ToVaultPropertiesResponseMoveDetailsPtrOutput() VaultPropertiesResponseMoveDetailsPtrOutput {
	return o
}

func (o VaultPropertiesResponseMoveDetailsPtrOutput) ToVaultPropertiesResponseMoveDetailsPtrOutputWithContext(ctx context.Context) VaultPropertiesResponseMoveDetailsPtrOutput {
	return o
}

func (o VaultPropertiesResponseMoveDetailsPtrOutput) Elem() VaultPropertiesResponseMoveDetailsOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) VaultPropertiesResponseMoveDetails {
		if v != nil {
			return *v
		}
		var ret VaultPropertiesResponseMoveDetails
		return ret
	}).(VaultPropertiesResponseMoveDetailsOutput)
}

// End Time of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsPtrOutput) CompletionTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) *string {
		if v == nil {
			return nil
		}
		return &v.CompletionTimeUtc
	}).(pulumi.StringPtrOutput)
}

// OperationId of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsPtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) *string {
		if v == nil {
			return nil
		}
		return &v.OperationId
	}).(pulumi.StringPtrOutput)
}

// Source Resource of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) *string {
		if v == nil {
			return nil
		}
		return &v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Start Time of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsPtrOutput) StartTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) *string {
		if v == nil {
			return nil
		}
		return &v.StartTimeUtc
	}).(pulumi.StringPtrOutput)
}

// Target Resource of the Resource Move Operation
func (o VaultPropertiesResponseMoveDetailsPtrOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseMoveDetails) *string {
		if v == nil {
			return nil
		}
		return &v.TargetResourceId
	}).(pulumi.StringPtrOutput)
}

// The redundancy Settings of a Vault
type VaultPropertiesResponseRedundancySettings struct {
	// Flag to show if Cross Region Restore is enabled on the Vault or not
	CrossRegionRestore *string `pulumi:"crossRegionRestore"`
	// The storage redundancy setting of a vault
	StandardTierStorageRedundancy *string `pulumi:"standardTierStorageRedundancy"`
}

// The redundancy Settings of a Vault
type VaultPropertiesResponseRedundancySettingsOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseRedundancySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultPropertiesResponseRedundancySettings)(nil)).Elem()
}

func (o VaultPropertiesResponseRedundancySettingsOutput) ToVaultPropertiesResponseRedundancySettingsOutput() VaultPropertiesResponseRedundancySettingsOutput {
	return o
}

func (o VaultPropertiesResponseRedundancySettingsOutput) ToVaultPropertiesResponseRedundancySettingsOutputWithContext(ctx context.Context) VaultPropertiesResponseRedundancySettingsOutput {
	return o
}

// Flag to show if Cross Region Restore is enabled on the Vault or not
func (o VaultPropertiesResponseRedundancySettingsOutput) CrossRegionRestore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponseRedundancySettings) *string { return v.CrossRegionRestore }).(pulumi.StringPtrOutput)
}

// The storage redundancy setting of a vault
func (o VaultPropertiesResponseRedundancySettingsOutput) StandardTierStorageRedundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VaultPropertiesResponseRedundancySettings) *string { return v.StandardTierStorageRedundancy }).(pulumi.StringPtrOutput)
}

type VaultPropertiesResponseRedundancySettingsPtrOutput struct{ *pulumi.OutputState }

func (VaultPropertiesResponseRedundancySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultPropertiesResponseRedundancySettings)(nil)).Elem()
}

func (o VaultPropertiesResponseRedundancySettingsPtrOutput) ToVaultPropertiesResponseRedundancySettingsPtrOutput() VaultPropertiesResponseRedundancySettingsPtrOutput {
	return o
}

func (o VaultPropertiesResponseRedundancySettingsPtrOutput) ToVaultPropertiesResponseRedundancySettingsPtrOutputWithContext(ctx context.Context) VaultPropertiesResponseRedundancySettingsPtrOutput {
	return o
}

func (o VaultPropertiesResponseRedundancySettingsPtrOutput) Elem() VaultPropertiesResponseRedundancySettingsOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseRedundancySettings) VaultPropertiesResponseRedundancySettings {
		if v != nil {
			return *v
		}
		var ret VaultPropertiesResponseRedundancySettings
		return ret
	}).(VaultPropertiesResponseRedundancySettingsOutput)
}

// Flag to show if Cross Region Restore is enabled on the Vault or not
func (o VaultPropertiesResponseRedundancySettingsPtrOutput) CrossRegionRestore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseRedundancySettings) *string {
		if v == nil {
			return nil
		}
		return v.CrossRegionRestore
	}).(pulumi.StringPtrOutput)
}

// The storage redundancy setting of a vault
func (o VaultPropertiesResponseRedundancySettingsPtrOutput) StandardTierStorageRedundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VaultPropertiesResponseRedundancySettings) *string {
		if v == nil {
			return nil
		}
		return v.StandardTierStorageRedundancy
	}).(pulumi.StringPtrOutput)
}

// Vault retention policy for AzureFileShare
type VaultRetentionPolicy struct {
	SnapshotRetentionInDays int `pulumi:"snapshotRetentionInDays"`
	// Base class for retention policy.
	VaultRetention interface{} `pulumi:"vaultRetention"`
}

// VaultRetentionPolicyInput is an input type that accepts VaultRetentionPolicyArgs and VaultRetentionPolicyOutput values.
// You can construct a concrete instance of `VaultRetentionPolicyInput` via:
//
//	VaultRetentionPolicyArgs{...}
type VaultRetentionPolicyInput interface {
	pulumi.Input

	ToVaultRetentionPolicyOutput() VaultRetentionPolicyOutput
	ToVaultRetentionPolicyOutputWithContext(context.Context) VaultRetentionPolicyOutput
}

// Vault retention policy for AzureFileShare
type VaultRetentionPolicyArgs struct {
	SnapshotRetentionInDays pulumi.IntInput `pulumi:"snapshotRetentionInDays"`
	// Base class for retention policy.
	VaultRetention pulumi.Input `pulumi:"vaultRetention"`
}

func (VaultRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultRetentionPolicy)(nil)).Elem()
}

func (i VaultRetentionPolicyArgs) ToVaultRetentionPolicyOutput() VaultRetentionPolicyOutput {
	return i.ToVaultRetentionPolicyOutputWithContext(context.Background())
}

func (i VaultRetentionPolicyArgs) ToVaultRetentionPolicyOutputWithContext(ctx context.Context) VaultRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultRetentionPolicyOutput)
}

func (i VaultRetentionPolicyArgs) ToVaultRetentionPolicyPtrOutput() VaultRetentionPolicyPtrOutput {
	return i.ToVaultRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i VaultRetentionPolicyArgs) ToVaultRetentionPolicyPtrOutputWithContext(ctx context.Context) VaultRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultRetentionPolicyOutput).ToVaultRetentionPolicyPtrOutputWithContext(ctx)
}

// VaultRetentionPolicyPtrInput is an input type that accepts VaultRetentionPolicyArgs, VaultRetentionPolicyPtr and VaultRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `VaultRetentionPolicyPtrInput` via:
//
//	        VaultRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type VaultRetentionPolicyPtrInput interface {
	pulumi.Input

	ToVaultRetentionPolicyPtrOutput() VaultRetentionPolicyPtrOutput
	ToVaultRetentionPolicyPtrOutputWithContext(context.Context) VaultRetentionPolicyPtrOutput
}

type vaultRetentionPolicyPtrType VaultRetentionPolicyArgs

func VaultRetentionPolicyPtr(v *VaultRetentionPolicyArgs) VaultRetentionPolicyPtrInput {
	return (*vaultRetentionPolicyPtrType)(v)
}

func (*vaultRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultRetentionPolicy)(nil)).Elem()
}

func (i *vaultRetentionPolicyPtrType) ToVaultRetentionPolicyPtrOutput() VaultRetentionPolicyPtrOutput {
	return i.ToVaultRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *vaultRetentionPolicyPtrType) ToVaultRetentionPolicyPtrOutputWithContext(ctx context.Context) VaultRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultRetentionPolicyPtrOutput)
}

// Vault retention policy for AzureFileShare
type VaultRetentionPolicyOutput struct{ *pulumi.OutputState }

func (VaultRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultRetentionPolicy)(nil)).Elem()
}

func (o VaultRetentionPolicyOutput) ToVaultRetentionPolicyOutput() VaultRetentionPolicyOutput {
	return o
}

func (o VaultRetentionPolicyOutput) ToVaultRetentionPolicyOutputWithContext(ctx context.Context) VaultRetentionPolicyOutput {
	return o
}

func (o VaultRetentionPolicyOutput) ToVaultRetentionPolicyPtrOutput() VaultRetentionPolicyPtrOutput {
	return o.ToVaultRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o VaultRetentionPolicyOutput) ToVaultRetentionPolicyPtrOutputWithContext(ctx context.Context) VaultRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VaultRetentionPolicy) *VaultRetentionPolicy {
		return &v
	}).(VaultRetentionPolicyPtrOutput)
}

func (o VaultRetentionPolicyOutput) SnapshotRetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v VaultRetentionPolicy) int { return v.SnapshotRetentionInDays }).(pulumi.IntOutput)
}

// Base class for retention policy.
func (o VaultRetentionPolicyOutput) VaultRetention() pulumi.AnyOutput {
	return o.ApplyT(func(v VaultRetentionPolicy) interface{} { return v.VaultRetention }).(pulumi.AnyOutput)
}

type VaultRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (VaultRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultRetentionPolicy)(nil)).Elem()
}

func (o VaultRetentionPolicyPtrOutput) ToVaultRetentionPolicyPtrOutput() VaultRetentionPolicyPtrOutput {
	return o
}

func (o VaultRetentionPolicyPtrOutput) ToVaultRetentionPolicyPtrOutputWithContext(ctx context.Context) VaultRetentionPolicyPtrOutput {
	return o
}

func (o VaultRetentionPolicyPtrOutput) Elem() VaultRetentionPolicyOutput {
	return o.ApplyT(func(v *VaultRetentionPolicy) VaultRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret VaultRetentionPolicy
		return ret
	}).(VaultRetentionPolicyOutput)
}

func (o VaultRetentionPolicyPtrOutput) SnapshotRetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VaultRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.SnapshotRetentionInDays
	}).(pulumi.IntPtrOutput)
}

// Base class for retention policy.
func (o VaultRetentionPolicyPtrOutput) VaultRetention() pulumi.AnyOutput {
	return o.ApplyT(func(v *VaultRetentionPolicy) interface{} {
		if v == nil {
			return nil
		}
		return v.VaultRetention
	}).(pulumi.AnyOutput)
}

// Vault retention policy for AzureFileShare
type VaultRetentionPolicyResponse struct {
	SnapshotRetentionInDays int `pulumi:"snapshotRetentionInDays"`
	// Base class for retention policy.
	VaultRetention interface{} `pulumi:"vaultRetention"`
}

// Vault retention policy for AzureFileShare
type VaultRetentionPolicyResponseOutput struct{ *pulumi.OutputState }

func (VaultRetentionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultRetentionPolicyResponse)(nil)).Elem()
}

func (o VaultRetentionPolicyResponseOutput) ToVaultRetentionPolicyResponseOutput() VaultRetentionPolicyResponseOutput {
	return o
}

func (o VaultRetentionPolicyResponseOutput) ToVaultRetentionPolicyResponseOutputWithContext(ctx context.Context) VaultRetentionPolicyResponseOutput {
	return o
}

func (o VaultRetentionPolicyResponseOutput) SnapshotRetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v VaultRetentionPolicyResponse) int { return v.SnapshotRetentionInDays }).(pulumi.IntOutput)
}

// Base class for retention policy.
func (o VaultRetentionPolicyResponseOutput) VaultRetention() pulumi.AnyOutput {
	return o.ApplyT(func(v VaultRetentionPolicyResponse) interface{} { return v.VaultRetention }).(pulumi.AnyOutput)
}

type VaultRetentionPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (VaultRetentionPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultRetentionPolicyResponse)(nil)).Elem()
}

func (o VaultRetentionPolicyResponsePtrOutput) ToVaultRetentionPolicyResponsePtrOutput() VaultRetentionPolicyResponsePtrOutput {
	return o
}

func (o VaultRetentionPolicyResponsePtrOutput) ToVaultRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) VaultRetentionPolicyResponsePtrOutput {
	return o
}

func (o VaultRetentionPolicyResponsePtrOutput) Elem() VaultRetentionPolicyResponseOutput {
	return o.ApplyT(func(v *VaultRetentionPolicyResponse) VaultRetentionPolicyResponse {
		if v != nil {
			return *v
		}
		var ret VaultRetentionPolicyResponse
		return ret
	}).(VaultRetentionPolicyResponseOutput)
}

func (o VaultRetentionPolicyResponsePtrOutput) SnapshotRetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VaultRetentionPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return &v.SnapshotRetentionInDays
	}).(pulumi.IntPtrOutput)
}

// Base class for retention policy.
func (o VaultRetentionPolicyResponsePtrOutput) VaultRetention() pulumi.AnyOutput {
	return o.ApplyT(func(v *VaultRetentionPolicyResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.VaultRetention
	}).(pulumi.AnyOutput)
}

// Weekly retention format.
type WeeklyRetentionFormat struct {
	// List of days of the week.
	DaysOfTheWeek []DayOfWeek `pulumi:"daysOfTheWeek"`
	// List of weeks of month.
	WeeksOfTheMonth []WeekOfMonth `pulumi:"weeksOfTheMonth"`
}

// WeeklyRetentionFormatInput is an input type that accepts WeeklyRetentionFormatArgs and WeeklyRetentionFormatOutput values.
// You can construct a concrete instance of `WeeklyRetentionFormatInput` via:
//
//	WeeklyRetentionFormatArgs{...}
type WeeklyRetentionFormatInput interface {
	pulumi.Input

	ToWeeklyRetentionFormatOutput() WeeklyRetentionFormatOutput
	ToWeeklyRetentionFormatOutputWithContext(context.Context) WeeklyRetentionFormatOutput
}

// Weekly retention format.
type WeeklyRetentionFormatArgs struct {
	// List of days of the week.
	DaysOfTheWeek DayOfWeekArrayInput `pulumi:"daysOfTheWeek"`
	// List of weeks of month.
	WeeksOfTheMonth WeekOfMonthArrayInput `pulumi:"weeksOfTheMonth"`
}

func (WeeklyRetentionFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyRetentionFormat)(nil)).Elem()
}

func (i WeeklyRetentionFormatArgs) ToWeeklyRetentionFormatOutput() WeeklyRetentionFormatOutput {
	return i.ToWeeklyRetentionFormatOutputWithContext(context.Background())
}

func (i WeeklyRetentionFormatArgs) ToWeeklyRetentionFormatOutputWithContext(ctx context.Context) WeeklyRetentionFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionFormatOutput)
}

func (i WeeklyRetentionFormatArgs) ToWeeklyRetentionFormatPtrOutput() WeeklyRetentionFormatPtrOutput {
	return i.ToWeeklyRetentionFormatPtrOutputWithContext(context.Background())
}

func (i WeeklyRetentionFormatArgs) ToWeeklyRetentionFormatPtrOutputWithContext(ctx context.Context) WeeklyRetentionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionFormatOutput).ToWeeklyRetentionFormatPtrOutputWithContext(ctx)
}

// WeeklyRetentionFormatPtrInput is an input type that accepts WeeklyRetentionFormatArgs, WeeklyRetentionFormatPtr and WeeklyRetentionFormatPtrOutput values.
// You can construct a concrete instance of `WeeklyRetentionFormatPtrInput` via:
//
//	        WeeklyRetentionFormatArgs{...}
//
//	or:
//
//	        nil
type WeeklyRetentionFormatPtrInput interface {
	pulumi.Input

	ToWeeklyRetentionFormatPtrOutput() WeeklyRetentionFormatPtrOutput
	ToWeeklyRetentionFormatPtrOutputWithContext(context.Context) WeeklyRetentionFormatPtrOutput
}

type weeklyRetentionFormatPtrType WeeklyRetentionFormatArgs

func WeeklyRetentionFormatPtr(v *WeeklyRetentionFormatArgs) WeeklyRetentionFormatPtrInput {
	return (*weeklyRetentionFormatPtrType)(v)
}

func (*weeklyRetentionFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyRetentionFormat)(nil)).Elem()
}

func (i *weeklyRetentionFormatPtrType) ToWeeklyRetentionFormatPtrOutput() WeeklyRetentionFormatPtrOutput {
	return i.ToWeeklyRetentionFormatPtrOutputWithContext(context.Background())
}

func (i *weeklyRetentionFormatPtrType) ToWeeklyRetentionFormatPtrOutputWithContext(ctx context.Context) WeeklyRetentionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionFormatPtrOutput)
}

// Weekly retention format.
type WeeklyRetentionFormatOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyRetentionFormat)(nil)).Elem()
}

func (o WeeklyRetentionFormatOutput) ToWeeklyRetentionFormatOutput() WeeklyRetentionFormatOutput {
	return o
}

func (o WeeklyRetentionFormatOutput) ToWeeklyRetentionFormatOutputWithContext(ctx context.Context) WeeklyRetentionFormatOutput {
	return o
}

func (o WeeklyRetentionFormatOutput) ToWeeklyRetentionFormatPtrOutput() WeeklyRetentionFormatPtrOutput {
	return o.ToWeeklyRetentionFormatPtrOutputWithContext(context.Background())
}

func (o WeeklyRetentionFormatOutput) ToWeeklyRetentionFormatPtrOutputWithContext(ctx context.Context) WeeklyRetentionFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WeeklyRetentionFormat) *WeeklyRetentionFormat {
		return &v
	}).(WeeklyRetentionFormatPtrOutput)
}

// List of days of the week.
func (o WeeklyRetentionFormatOutput) DaysOfTheWeek() DayOfWeekArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionFormat) []DayOfWeek { return v.DaysOfTheWeek }).(DayOfWeekArrayOutput)
}

// List of weeks of month.
func (o WeeklyRetentionFormatOutput) WeeksOfTheMonth() WeekOfMonthArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionFormat) []WeekOfMonth { return v.WeeksOfTheMonth }).(WeekOfMonthArrayOutput)
}

type WeeklyRetentionFormatPtrOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyRetentionFormat)(nil)).Elem()
}

func (o WeeklyRetentionFormatPtrOutput) ToWeeklyRetentionFormatPtrOutput() WeeklyRetentionFormatPtrOutput {
	return o
}

func (o WeeklyRetentionFormatPtrOutput) ToWeeklyRetentionFormatPtrOutputWithContext(ctx context.Context) WeeklyRetentionFormatPtrOutput {
	return o
}

func (o WeeklyRetentionFormatPtrOutput) Elem() WeeklyRetentionFormatOutput {
	return o.ApplyT(func(v *WeeklyRetentionFormat) WeeklyRetentionFormat {
		if v != nil {
			return *v
		}
		var ret WeeklyRetentionFormat
		return ret
	}).(WeeklyRetentionFormatOutput)
}

// List of days of the week.
func (o WeeklyRetentionFormatPtrOutput) DaysOfTheWeek() DayOfWeekArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionFormat) []DayOfWeek {
		if v == nil {
			return nil
		}
		return v.DaysOfTheWeek
	}).(DayOfWeekArrayOutput)
}

// List of weeks of month.
func (o WeeklyRetentionFormatPtrOutput) WeeksOfTheMonth() WeekOfMonthArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionFormat) []WeekOfMonth {
		if v == nil {
			return nil
		}
		return v.WeeksOfTheMonth
	}).(WeekOfMonthArrayOutput)
}

// Weekly retention format.
type WeeklyRetentionFormatResponse struct {
	// List of days of the week.
	DaysOfTheWeek []string `pulumi:"daysOfTheWeek"`
	// List of weeks of month.
	WeeksOfTheMonth []string `pulumi:"weeksOfTheMonth"`
}

// Weekly retention format.
type WeeklyRetentionFormatResponseOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyRetentionFormatResponse)(nil)).Elem()
}

func (o WeeklyRetentionFormatResponseOutput) ToWeeklyRetentionFormatResponseOutput() WeeklyRetentionFormatResponseOutput {
	return o
}

func (o WeeklyRetentionFormatResponseOutput) ToWeeklyRetentionFormatResponseOutputWithContext(ctx context.Context) WeeklyRetentionFormatResponseOutput {
	return o
}

// List of days of the week.
func (o WeeklyRetentionFormatResponseOutput) DaysOfTheWeek() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionFormatResponse) []string { return v.DaysOfTheWeek }).(pulumi.StringArrayOutput)
}

// List of weeks of month.
func (o WeeklyRetentionFormatResponseOutput) WeeksOfTheMonth() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionFormatResponse) []string { return v.WeeksOfTheMonth }).(pulumi.StringArrayOutput)
}

type WeeklyRetentionFormatResponsePtrOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionFormatResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyRetentionFormatResponse)(nil)).Elem()
}

func (o WeeklyRetentionFormatResponsePtrOutput) ToWeeklyRetentionFormatResponsePtrOutput() WeeklyRetentionFormatResponsePtrOutput {
	return o
}

func (o WeeklyRetentionFormatResponsePtrOutput) ToWeeklyRetentionFormatResponsePtrOutputWithContext(ctx context.Context) WeeklyRetentionFormatResponsePtrOutput {
	return o
}

func (o WeeklyRetentionFormatResponsePtrOutput) Elem() WeeklyRetentionFormatResponseOutput {
	return o.ApplyT(func(v *WeeklyRetentionFormatResponse) WeeklyRetentionFormatResponse {
		if v != nil {
			return *v
		}
		var ret WeeklyRetentionFormatResponse
		return ret
	}).(WeeklyRetentionFormatResponseOutput)
}

// List of days of the week.
func (o WeeklyRetentionFormatResponsePtrOutput) DaysOfTheWeek() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionFormatResponse) []string {
		if v == nil {
			return nil
		}
		return v.DaysOfTheWeek
	}).(pulumi.StringArrayOutput)
}

// List of weeks of month.
func (o WeeklyRetentionFormatResponsePtrOutput) WeeksOfTheMonth() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionFormatResponse) []string {
		if v == nil {
			return nil
		}
		return v.WeeksOfTheMonth
	}).(pulumi.StringArrayOutput)
}

// Weekly retention schedule.
type WeeklyRetentionSchedule struct {
	// List of days of week for weekly retention policy.
	DaysOfTheWeek []DayOfWeek `pulumi:"daysOfTheWeek"`
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// WeeklyRetentionScheduleInput is an input type that accepts WeeklyRetentionScheduleArgs and WeeklyRetentionScheduleOutput values.
// You can construct a concrete instance of `WeeklyRetentionScheduleInput` via:
//
//	WeeklyRetentionScheduleArgs{...}
type WeeklyRetentionScheduleInput interface {
	pulumi.Input

	ToWeeklyRetentionScheduleOutput() WeeklyRetentionScheduleOutput
	ToWeeklyRetentionScheduleOutputWithContext(context.Context) WeeklyRetentionScheduleOutput
}

// Weekly retention schedule.
type WeeklyRetentionScheduleArgs struct {
	// List of days of week for weekly retention policy.
	DaysOfTheWeek DayOfWeekArrayInput `pulumi:"daysOfTheWeek"`
	// Retention duration of retention Policy.
	RetentionDuration RetentionDurationPtrInput `pulumi:"retentionDuration"`
	// Retention times of retention policy.
	RetentionTimes pulumi.StringArrayInput `pulumi:"retentionTimes"`
}

func (WeeklyRetentionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyRetentionSchedule)(nil)).Elem()
}

func (i WeeklyRetentionScheduleArgs) ToWeeklyRetentionScheduleOutput() WeeklyRetentionScheduleOutput {
	return i.ToWeeklyRetentionScheduleOutputWithContext(context.Background())
}

func (i WeeklyRetentionScheduleArgs) ToWeeklyRetentionScheduleOutputWithContext(ctx context.Context) WeeklyRetentionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionScheduleOutput)
}

func (i WeeklyRetentionScheduleArgs) ToWeeklyRetentionSchedulePtrOutput() WeeklyRetentionSchedulePtrOutput {
	return i.ToWeeklyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i WeeklyRetentionScheduleArgs) ToWeeklyRetentionSchedulePtrOutputWithContext(ctx context.Context) WeeklyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionScheduleOutput).ToWeeklyRetentionSchedulePtrOutputWithContext(ctx)
}

// WeeklyRetentionSchedulePtrInput is an input type that accepts WeeklyRetentionScheduleArgs, WeeklyRetentionSchedulePtr and WeeklyRetentionSchedulePtrOutput values.
// You can construct a concrete instance of `WeeklyRetentionSchedulePtrInput` via:
//
//	        WeeklyRetentionScheduleArgs{...}
//
//	or:
//
//	        nil
type WeeklyRetentionSchedulePtrInput interface {
	pulumi.Input

	ToWeeklyRetentionSchedulePtrOutput() WeeklyRetentionSchedulePtrOutput
	ToWeeklyRetentionSchedulePtrOutputWithContext(context.Context) WeeklyRetentionSchedulePtrOutput
}

type weeklyRetentionSchedulePtrType WeeklyRetentionScheduleArgs

func WeeklyRetentionSchedulePtr(v *WeeklyRetentionScheduleArgs) WeeklyRetentionSchedulePtrInput {
	return (*weeklyRetentionSchedulePtrType)(v)
}

func (*weeklyRetentionSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyRetentionSchedule)(nil)).Elem()
}

func (i *weeklyRetentionSchedulePtrType) ToWeeklyRetentionSchedulePtrOutput() WeeklyRetentionSchedulePtrOutput {
	return i.ToWeeklyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i *weeklyRetentionSchedulePtrType) ToWeeklyRetentionSchedulePtrOutputWithContext(ctx context.Context) WeeklyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyRetentionSchedulePtrOutput)
}

// Weekly retention schedule.
type WeeklyRetentionScheduleOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyRetentionSchedule)(nil)).Elem()
}

func (o WeeklyRetentionScheduleOutput) ToWeeklyRetentionScheduleOutput() WeeklyRetentionScheduleOutput {
	return o
}

func (o WeeklyRetentionScheduleOutput) ToWeeklyRetentionScheduleOutputWithContext(ctx context.Context) WeeklyRetentionScheduleOutput {
	return o
}

func (o WeeklyRetentionScheduleOutput) ToWeeklyRetentionSchedulePtrOutput() WeeklyRetentionSchedulePtrOutput {
	return o.ToWeeklyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (o WeeklyRetentionScheduleOutput) ToWeeklyRetentionSchedulePtrOutputWithContext(ctx context.Context) WeeklyRetentionSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WeeklyRetentionSchedule) *WeeklyRetentionSchedule {
		return &v
	}).(WeeklyRetentionSchedulePtrOutput)
}

// List of days of week for weekly retention policy.
func (o WeeklyRetentionScheduleOutput) DaysOfTheWeek() DayOfWeekArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionSchedule) []DayOfWeek { return v.DaysOfTheWeek }).(DayOfWeekArrayOutput)
}

// Retention duration of retention Policy.
func (o WeeklyRetentionScheduleOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v WeeklyRetentionSchedule) *RetentionDuration { return v.RetentionDuration }).(RetentionDurationPtrOutput)
}

// Retention times of retention policy.
func (o WeeklyRetentionScheduleOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionSchedule) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type WeeklyRetentionSchedulePtrOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyRetentionSchedule)(nil)).Elem()
}

func (o WeeklyRetentionSchedulePtrOutput) ToWeeklyRetentionSchedulePtrOutput() WeeklyRetentionSchedulePtrOutput {
	return o
}

func (o WeeklyRetentionSchedulePtrOutput) ToWeeklyRetentionSchedulePtrOutputWithContext(ctx context.Context) WeeklyRetentionSchedulePtrOutput {
	return o
}

func (o WeeklyRetentionSchedulePtrOutput) Elem() WeeklyRetentionScheduleOutput {
	return o.ApplyT(func(v *WeeklyRetentionSchedule) WeeklyRetentionSchedule {
		if v != nil {
			return *v
		}
		var ret WeeklyRetentionSchedule
		return ret
	}).(WeeklyRetentionScheduleOutput)
}

// List of days of week for weekly retention policy.
func (o WeeklyRetentionSchedulePtrOutput) DaysOfTheWeek() DayOfWeekArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionSchedule) []DayOfWeek {
		if v == nil {
			return nil
		}
		return v.DaysOfTheWeek
	}).(DayOfWeekArrayOutput)
}

// Retention duration of retention Policy.
func (o WeeklyRetentionSchedulePtrOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v *WeeklyRetentionSchedule) *RetentionDuration {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationPtrOutput)
}

// Retention times of retention policy.
func (o WeeklyRetentionSchedulePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionSchedule) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

// Weekly retention schedule.
type WeeklyRetentionScheduleResponse struct {
	// List of days of week for weekly retention policy.
	DaysOfTheWeek []string `pulumi:"daysOfTheWeek"`
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Weekly retention schedule.
type WeeklyRetentionScheduleResponseOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyRetentionScheduleResponse)(nil)).Elem()
}

func (o WeeklyRetentionScheduleResponseOutput) ToWeeklyRetentionScheduleResponseOutput() WeeklyRetentionScheduleResponseOutput {
	return o
}

func (o WeeklyRetentionScheduleResponseOutput) ToWeeklyRetentionScheduleResponseOutputWithContext(ctx context.Context) WeeklyRetentionScheduleResponseOutput {
	return o
}

// List of days of week for weekly retention policy.
func (o WeeklyRetentionScheduleResponseOutput) DaysOfTheWeek() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionScheduleResponse) []string { return v.DaysOfTheWeek }).(pulumi.StringArrayOutput)
}

// Retention duration of retention Policy.
func (o WeeklyRetentionScheduleResponseOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v WeeklyRetentionScheduleResponse) *RetentionDurationResponse { return v.RetentionDuration }).(RetentionDurationResponsePtrOutput)
}

// Retention times of retention policy.
func (o WeeklyRetentionScheduleResponseOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyRetentionScheduleResponse) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type WeeklyRetentionScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (WeeklyRetentionScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyRetentionScheduleResponse)(nil)).Elem()
}

func (o WeeklyRetentionScheduleResponsePtrOutput) ToWeeklyRetentionScheduleResponsePtrOutput() WeeklyRetentionScheduleResponsePtrOutput {
	return o
}

func (o WeeklyRetentionScheduleResponsePtrOutput) ToWeeklyRetentionScheduleResponsePtrOutputWithContext(ctx context.Context) WeeklyRetentionScheduleResponsePtrOutput {
	return o
}

func (o WeeklyRetentionScheduleResponsePtrOutput) Elem() WeeklyRetentionScheduleResponseOutput {
	return o.ApplyT(func(v *WeeklyRetentionScheduleResponse) WeeklyRetentionScheduleResponse {
		if v != nil {
			return *v
		}
		var ret WeeklyRetentionScheduleResponse
		return ret
	}).(WeeklyRetentionScheduleResponseOutput)
}

// List of days of week for weekly retention policy.
func (o WeeklyRetentionScheduleResponsePtrOutput) DaysOfTheWeek() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.DaysOfTheWeek
	}).(pulumi.StringArrayOutput)
}

// Retention duration of retention Policy.
func (o WeeklyRetentionScheduleResponsePtrOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v *WeeklyRetentionScheduleResponse) *RetentionDurationResponse {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationResponsePtrOutput)
}

// Retention times of retention policy.
func (o WeeklyRetentionScheduleResponsePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

type WeeklySchedule struct {
	ScheduleRunDays []DayOfWeek `pulumi:"scheduleRunDays"`
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
}

// WeeklyScheduleInput is an input type that accepts WeeklyScheduleArgs and WeeklyScheduleOutput values.
// You can construct a concrete instance of `WeeklyScheduleInput` via:
//
//	WeeklyScheduleArgs{...}
type WeeklyScheduleInput interface {
	pulumi.Input

	ToWeeklyScheduleOutput() WeeklyScheduleOutput
	ToWeeklyScheduleOutputWithContext(context.Context) WeeklyScheduleOutput
}

type WeeklyScheduleArgs struct {
	ScheduleRunDays DayOfWeekArrayInput `pulumi:"scheduleRunDays"`
	// List of times of day this schedule has to be run.
	ScheduleRunTimes pulumi.StringArrayInput `pulumi:"scheduleRunTimes"`
}

func (WeeklyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklySchedule)(nil)).Elem()
}

func (i WeeklyScheduleArgs) ToWeeklyScheduleOutput() WeeklyScheduleOutput {
	return i.ToWeeklyScheduleOutputWithContext(context.Background())
}

func (i WeeklyScheduleArgs) ToWeeklyScheduleOutputWithContext(ctx context.Context) WeeklyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyScheduleOutput)
}

func (i WeeklyScheduleArgs) ToWeeklySchedulePtrOutput() WeeklySchedulePtrOutput {
	return i.ToWeeklySchedulePtrOutputWithContext(context.Background())
}

func (i WeeklyScheduleArgs) ToWeeklySchedulePtrOutputWithContext(ctx context.Context) WeeklySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyScheduleOutput).ToWeeklySchedulePtrOutputWithContext(ctx)
}

// WeeklySchedulePtrInput is an input type that accepts WeeklyScheduleArgs, WeeklySchedulePtr and WeeklySchedulePtrOutput values.
// You can construct a concrete instance of `WeeklySchedulePtrInput` via:
//
//	        WeeklyScheduleArgs{...}
//
//	or:
//
//	        nil
type WeeklySchedulePtrInput interface {
	pulumi.Input

	ToWeeklySchedulePtrOutput() WeeklySchedulePtrOutput
	ToWeeklySchedulePtrOutputWithContext(context.Context) WeeklySchedulePtrOutput
}

type weeklySchedulePtrType WeeklyScheduleArgs

func WeeklySchedulePtr(v *WeeklyScheduleArgs) WeeklySchedulePtrInput {
	return (*weeklySchedulePtrType)(v)
}

func (*weeklySchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklySchedule)(nil)).Elem()
}

func (i *weeklySchedulePtrType) ToWeeklySchedulePtrOutput() WeeklySchedulePtrOutput {
	return i.ToWeeklySchedulePtrOutputWithContext(context.Background())
}

func (i *weeklySchedulePtrType) ToWeeklySchedulePtrOutputWithContext(ctx context.Context) WeeklySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklySchedulePtrOutput)
}

type WeeklyScheduleOutput struct{ *pulumi.OutputState }

func (WeeklyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklySchedule)(nil)).Elem()
}

func (o WeeklyScheduleOutput) ToWeeklyScheduleOutput() WeeklyScheduleOutput {
	return o
}

func (o WeeklyScheduleOutput) ToWeeklyScheduleOutputWithContext(ctx context.Context) WeeklyScheduleOutput {
	return o
}

func (o WeeklyScheduleOutput) ToWeeklySchedulePtrOutput() WeeklySchedulePtrOutput {
	return o.ToWeeklySchedulePtrOutputWithContext(context.Background())
}

func (o WeeklyScheduleOutput) ToWeeklySchedulePtrOutputWithContext(ctx context.Context) WeeklySchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WeeklySchedule) *WeeklySchedule {
		return &v
	}).(WeeklySchedulePtrOutput)
}

func (o WeeklyScheduleOutput) ScheduleRunDays() DayOfWeekArrayOutput {
	return o.ApplyT(func(v WeeklySchedule) []DayOfWeek { return v.ScheduleRunDays }).(DayOfWeekArrayOutput)
}

// List of times of day this schedule has to be run.
func (o WeeklyScheduleOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklySchedule) []string { return v.ScheduleRunTimes }).(pulumi.StringArrayOutput)
}

type WeeklySchedulePtrOutput struct{ *pulumi.OutputState }

func (WeeklySchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklySchedule)(nil)).Elem()
}

func (o WeeklySchedulePtrOutput) ToWeeklySchedulePtrOutput() WeeklySchedulePtrOutput {
	return o
}

func (o WeeklySchedulePtrOutput) ToWeeklySchedulePtrOutputWithContext(ctx context.Context) WeeklySchedulePtrOutput {
	return o
}

func (o WeeklySchedulePtrOutput) Elem() WeeklyScheduleOutput {
	return o.ApplyT(func(v *WeeklySchedule) WeeklySchedule {
		if v != nil {
			return *v
		}
		var ret WeeklySchedule
		return ret
	}).(WeeklyScheduleOutput)
}

func (o WeeklySchedulePtrOutput) ScheduleRunDays() DayOfWeekArrayOutput {
	return o.ApplyT(func(v *WeeklySchedule) []DayOfWeek {
		if v == nil {
			return nil
		}
		return v.ScheduleRunDays
	}).(DayOfWeekArrayOutput)
}

// List of times of day this schedule has to be run.
func (o WeeklySchedulePtrOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklySchedule) []string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunTimes
	}).(pulumi.StringArrayOutput)
}

type WeeklyScheduleResponse struct {
	ScheduleRunDays []string `pulumi:"scheduleRunDays"`
	// List of times of day this schedule has to be run.
	ScheduleRunTimes []string `pulumi:"scheduleRunTimes"`
}

type WeeklyScheduleResponseOutput struct{ *pulumi.OutputState }

func (WeeklyScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyScheduleResponse)(nil)).Elem()
}

func (o WeeklyScheduleResponseOutput) ToWeeklyScheduleResponseOutput() WeeklyScheduleResponseOutput {
	return o
}

func (o WeeklyScheduleResponseOutput) ToWeeklyScheduleResponseOutputWithContext(ctx context.Context) WeeklyScheduleResponseOutput {
	return o
}

func (o WeeklyScheduleResponseOutput) ScheduleRunDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyScheduleResponse) []string { return v.ScheduleRunDays }).(pulumi.StringArrayOutput)
}

// List of times of day this schedule has to be run.
func (o WeeklyScheduleResponseOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WeeklyScheduleResponse) []string { return v.ScheduleRunTimes }).(pulumi.StringArrayOutput)
}

type WeeklyScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (WeeklyScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyScheduleResponse)(nil)).Elem()
}

func (o WeeklyScheduleResponsePtrOutput) ToWeeklyScheduleResponsePtrOutput() WeeklyScheduleResponsePtrOutput {
	return o
}

func (o WeeklyScheduleResponsePtrOutput) ToWeeklyScheduleResponsePtrOutputWithContext(ctx context.Context) WeeklyScheduleResponsePtrOutput {
	return o
}

func (o WeeklyScheduleResponsePtrOutput) Elem() WeeklyScheduleResponseOutput {
	return o.ApplyT(func(v *WeeklyScheduleResponse) WeeklyScheduleResponse {
		if v != nil {
			return *v
		}
		var ret WeeklyScheduleResponse
		return ret
	}).(WeeklyScheduleResponseOutput)
}

func (o WeeklyScheduleResponsePtrOutput) ScheduleRunDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunDays
	}).(pulumi.StringArrayOutput)
}

// List of times of day this schedule has to be run.
func (o WeeklyScheduleResponsePtrOutput) ScheduleRunTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WeeklyScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.ScheduleRunTimes
	}).(pulumi.StringArrayOutput)
}

// Details of an inquired protectable item.
type WorkloadInquiryDetails struct {
	// Inquiry validation such as permissions and other backup validations.
	InquiryValidation *InquiryValidation `pulumi:"inquiryValidation"`
	// Contains the protectable item Count inside this Container.
	ItemCount *float64 `pulumi:"itemCount"`
	// Type of the Workload such as SQL, Oracle etc.
	Type *string `pulumi:"type"`
}

// WorkloadInquiryDetailsInput is an input type that accepts WorkloadInquiryDetailsArgs and WorkloadInquiryDetailsOutput values.
// You can construct a concrete instance of `WorkloadInquiryDetailsInput` via:
//
//	WorkloadInquiryDetailsArgs{...}
type WorkloadInquiryDetailsInput interface {
	pulumi.Input

	ToWorkloadInquiryDetailsOutput() WorkloadInquiryDetailsOutput
	ToWorkloadInquiryDetailsOutputWithContext(context.Context) WorkloadInquiryDetailsOutput
}

// Details of an inquired protectable item.
type WorkloadInquiryDetailsArgs struct {
	// Inquiry validation such as permissions and other backup validations.
	InquiryValidation InquiryValidationPtrInput `pulumi:"inquiryValidation"`
	// Contains the protectable item Count inside this Container.
	ItemCount pulumi.Float64PtrInput `pulumi:"itemCount"`
	// Type of the Workload such as SQL, Oracle etc.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (WorkloadInquiryDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadInquiryDetails)(nil)).Elem()
}

func (i WorkloadInquiryDetailsArgs) ToWorkloadInquiryDetailsOutput() WorkloadInquiryDetailsOutput {
	return i.ToWorkloadInquiryDetailsOutputWithContext(context.Background())
}

func (i WorkloadInquiryDetailsArgs) ToWorkloadInquiryDetailsOutputWithContext(ctx context.Context) WorkloadInquiryDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadInquiryDetailsOutput)
}

// WorkloadInquiryDetailsArrayInput is an input type that accepts WorkloadInquiryDetailsArray and WorkloadInquiryDetailsArrayOutput values.
// You can construct a concrete instance of `WorkloadInquiryDetailsArrayInput` via:
//
//	WorkloadInquiryDetailsArray{ WorkloadInquiryDetailsArgs{...} }
type WorkloadInquiryDetailsArrayInput interface {
	pulumi.Input

	ToWorkloadInquiryDetailsArrayOutput() WorkloadInquiryDetailsArrayOutput
	ToWorkloadInquiryDetailsArrayOutputWithContext(context.Context) WorkloadInquiryDetailsArrayOutput
}

type WorkloadInquiryDetailsArray []WorkloadInquiryDetailsInput

func (WorkloadInquiryDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadInquiryDetails)(nil)).Elem()
}

func (i WorkloadInquiryDetailsArray) ToWorkloadInquiryDetailsArrayOutput() WorkloadInquiryDetailsArrayOutput {
	return i.ToWorkloadInquiryDetailsArrayOutputWithContext(context.Background())
}

func (i WorkloadInquiryDetailsArray) ToWorkloadInquiryDetailsArrayOutputWithContext(ctx context.Context) WorkloadInquiryDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadInquiryDetailsArrayOutput)
}

// Details of an inquired protectable item.
type WorkloadInquiryDetailsOutput struct{ *pulumi.OutputState }

func (WorkloadInquiryDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadInquiryDetails)(nil)).Elem()
}

func (o WorkloadInquiryDetailsOutput) ToWorkloadInquiryDetailsOutput() WorkloadInquiryDetailsOutput {
	return o
}

func (o WorkloadInquiryDetailsOutput) ToWorkloadInquiryDetailsOutputWithContext(ctx context.Context) WorkloadInquiryDetailsOutput {
	return o
}

// Inquiry validation such as permissions and other backup validations.
func (o WorkloadInquiryDetailsOutput) InquiryValidation() InquiryValidationPtrOutput {
	return o.ApplyT(func(v WorkloadInquiryDetails) *InquiryValidation { return v.InquiryValidation }).(InquiryValidationPtrOutput)
}

// Contains the protectable item Count inside this Container.
func (o WorkloadInquiryDetailsOutput) ItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadInquiryDetails) *float64 { return v.ItemCount }).(pulumi.Float64PtrOutput)
}

// Type of the Workload such as SQL, Oracle etc.
func (o WorkloadInquiryDetailsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadInquiryDetails) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WorkloadInquiryDetailsArrayOutput struct{ *pulumi.OutputState }

func (WorkloadInquiryDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadInquiryDetails)(nil)).Elem()
}

func (o WorkloadInquiryDetailsArrayOutput) ToWorkloadInquiryDetailsArrayOutput() WorkloadInquiryDetailsArrayOutput {
	return o
}

func (o WorkloadInquiryDetailsArrayOutput) ToWorkloadInquiryDetailsArrayOutputWithContext(ctx context.Context) WorkloadInquiryDetailsArrayOutput {
	return o
}

func (o WorkloadInquiryDetailsArrayOutput) Index(i pulumi.IntInput) WorkloadInquiryDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadInquiryDetails {
		return vs[0].([]WorkloadInquiryDetails)[vs[1].(int)]
	}).(WorkloadInquiryDetailsOutput)
}

// Details of an inquired protectable item.
type WorkloadInquiryDetailsResponse struct {
	// Inquiry validation such as permissions and other backup validations.
	InquiryValidation *InquiryValidationResponse `pulumi:"inquiryValidation"`
	// Contains the protectable item Count inside this Container.
	ItemCount *float64 `pulumi:"itemCount"`
	// Type of the Workload such as SQL, Oracle etc.
	Type *string `pulumi:"type"`
}

// Details of an inquired protectable item.
type WorkloadInquiryDetailsResponseOutput struct{ *pulumi.OutputState }

func (WorkloadInquiryDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadInquiryDetailsResponse)(nil)).Elem()
}

func (o WorkloadInquiryDetailsResponseOutput) ToWorkloadInquiryDetailsResponseOutput() WorkloadInquiryDetailsResponseOutput {
	return o
}

func (o WorkloadInquiryDetailsResponseOutput) ToWorkloadInquiryDetailsResponseOutputWithContext(ctx context.Context) WorkloadInquiryDetailsResponseOutput {
	return o
}

// Inquiry validation such as permissions and other backup validations.
func (o WorkloadInquiryDetailsResponseOutput) InquiryValidation() InquiryValidationResponsePtrOutput {
	return o.ApplyT(func(v WorkloadInquiryDetailsResponse) *InquiryValidationResponse { return v.InquiryValidation }).(InquiryValidationResponsePtrOutput)
}

// Contains the protectable item Count inside this Container.
func (o WorkloadInquiryDetailsResponseOutput) ItemCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadInquiryDetailsResponse) *float64 { return v.ItemCount }).(pulumi.Float64PtrOutput)
}

// Type of the Workload such as SQL, Oracle etc.
func (o WorkloadInquiryDetailsResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadInquiryDetailsResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WorkloadInquiryDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (WorkloadInquiryDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkloadInquiryDetailsResponse)(nil)).Elem()
}

func (o WorkloadInquiryDetailsResponseArrayOutput) ToWorkloadInquiryDetailsResponseArrayOutput() WorkloadInquiryDetailsResponseArrayOutput {
	return o
}

func (o WorkloadInquiryDetailsResponseArrayOutput) ToWorkloadInquiryDetailsResponseArrayOutputWithContext(ctx context.Context) WorkloadInquiryDetailsResponseArrayOutput {
	return o
}

func (o WorkloadInquiryDetailsResponseArrayOutput) Index(i pulumi.IntInput) WorkloadInquiryDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkloadInquiryDetailsResponse {
		return vs[0].([]WorkloadInquiryDetailsResponse)[vs[1].(int)]
	}).(WorkloadInquiryDetailsResponseOutput)
}

// Yearly retention schedule.
type YearlyRetentionSchedule struct {
	// List of months of year of yearly retention policy.
	MonthsOfYear []MonthOfYear `pulumi:"monthsOfYear"`
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDuration `pulumi:"retentionDuration"`
	// Daily retention format for yearly retention policy.
	RetentionScheduleDaily *DailyRetentionFormat `pulumi:"retentionScheduleDaily"`
	// Retention schedule format for yearly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for yearly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormat `pulumi:"retentionScheduleWeekly"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// YearlyRetentionScheduleInput is an input type that accepts YearlyRetentionScheduleArgs and YearlyRetentionScheduleOutput values.
// You can construct a concrete instance of `YearlyRetentionScheduleInput` via:
//
//	YearlyRetentionScheduleArgs{...}
type YearlyRetentionScheduleInput interface {
	pulumi.Input

	ToYearlyRetentionScheduleOutput() YearlyRetentionScheduleOutput
	ToYearlyRetentionScheduleOutputWithContext(context.Context) YearlyRetentionScheduleOutput
}

// Yearly retention schedule.
type YearlyRetentionScheduleArgs struct {
	// List of months of year of yearly retention policy.
	MonthsOfYear MonthOfYearArrayInput `pulumi:"monthsOfYear"`
	// Retention duration of retention Policy.
	RetentionDuration RetentionDurationPtrInput `pulumi:"retentionDuration"`
	// Daily retention format for yearly retention policy.
	RetentionScheduleDaily DailyRetentionFormatPtrInput `pulumi:"retentionScheduleDaily"`
	// Retention schedule format for yearly retention policy.
	RetentionScheduleFormatType pulumi.StringPtrInput `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for yearly retention policy.
	RetentionScheduleWeekly WeeklyRetentionFormatPtrInput `pulumi:"retentionScheduleWeekly"`
	// Retention times of retention policy.
	RetentionTimes pulumi.StringArrayInput `pulumi:"retentionTimes"`
}

func (YearlyRetentionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*YearlyRetentionSchedule)(nil)).Elem()
}

func (i YearlyRetentionScheduleArgs) ToYearlyRetentionScheduleOutput() YearlyRetentionScheduleOutput {
	return i.ToYearlyRetentionScheduleOutputWithContext(context.Background())
}

func (i YearlyRetentionScheduleArgs) ToYearlyRetentionScheduleOutputWithContext(ctx context.Context) YearlyRetentionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YearlyRetentionScheduleOutput)
}

func (i YearlyRetentionScheduleArgs) ToYearlyRetentionSchedulePtrOutput() YearlyRetentionSchedulePtrOutput {
	return i.ToYearlyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i YearlyRetentionScheduleArgs) ToYearlyRetentionSchedulePtrOutputWithContext(ctx context.Context) YearlyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YearlyRetentionScheduleOutput).ToYearlyRetentionSchedulePtrOutputWithContext(ctx)
}

// YearlyRetentionSchedulePtrInput is an input type that accepts YearlyRetentionScheduleArgs, YearlyRetentionSchedulePtr and YearlyRetentionSchedulePtrOutput values.
// You can construct a concrete instance of `YearlyRetentionSchedulePtrInput` via:
//
//	        YearlyRetentionScheduleArgs{...}
//
//	or:
//
//	        nil
type YearlyRetentionSchedulePtrInput interface {
	pulumi.Input

	ToYearlyRetentionSchedulePtrOutput() YearlyRetentionSchedulePtrOutput
	ToYearlyRetentionSchedulePtrOutputWithContext(context.Context) YearlyRetentionSchedulePtrOutput
}

type yearlyRetentionSchedulePtrType YearlyRetentionScheduleArgs

func YearlyRetentionSchedulePtr(v *YearlyRetentionScheduleArgs) YearlyRetentionSchedulePtrInput {
	return (*yearlyRetentionSchedulePtrType)(v)
}

func (*yearlyRetentionSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**YearlyRetentionSchedule)(nil)).Elem()
}

func (i *yearlyRetentionSchedulePtrType) ToYearlyRetentionSchedulePtrOutput() YearlyRetentionSchedulePtrOutput {
	return i.ToYearlyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (i *yearlyRetentionSchedulePtrType) ToYearlyRetentionSchedulePtrOutputWithContext(ctx context.Context) YearlyRetentionSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YearlyRetentionSchedulePtrOutput)
}

// Yearly retention schedule.
type YearlyRetentionScheduleOutput struct{ *pulumi.OutputState }

func (YearlyRetentionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*YearlyRetentionSchedule)(nil)).Elem()
}

func (o YearlyRetentionScheduleOutput) ToYearlyRetentionScheduleOutput() YearlyRetentionScheduleOutput {
	return o
}

func (o YearlyRetentionScheduleOutput) ToYearlyRetentionScheduleOutputWithContext(ctx context.Context) YearlyRetentionScheduleOutput {
	return o
}

func (o YearlyRetentionScheduleOutput) ToYearlyRetentionSchedulePtrOutput() YearlyRetentionSchedulePtrOutput {
	return o.ToYearlyRetentionSchedulePtrOutputWithContext(context.Background())
}

func (o YearlyRetentionScheduleOutput) ToYearlyRetentionSchedulePtrOutputWithContext(ctx context.Context) YearlyRetentionSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v YearlyRetentionSchedule) *YearlyRetentionSchedule {
		return &v
	}).(YearlyRetentionSchedulePtrOutput)
}

// List of months of year of yearly retention policy.
func (o YearlyRetentionScheduleOutput) MonthsOfYear() MonthOfYearArrayOutput {
	return o.ApplyT(func(v YearlyRetentionSchedule) []MonthOfYear { return v.MonthsOfYear }).(MonthOfYearArrayOutput)
}

// Retention duration of retention Policy.
func (o YearlyRetentionScheduleOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v YearlyRetentionSchedule) *RetentionDuration { return v.RetentionDuration }).(RetentionDurationPtrOutput)
}

// Daily retention format for yearly retention policy.
func (o YearlyRetentionScheduleOutput) RetentionScheduleDaily() DailyRetentionFormatPtrOutput {
	return o.ApplyT(func(v YearlyRetentionSchedule) *DailyRetentionFormat { return v.RetentionScheduleDaily }).(DailyRetentionFormatPtrOutput)
}

// Retention schedule format for yearly retention policy.
func (o YearlyRetentionScheduleOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v YearlyRetentionSchedule) *string { return v.RetentionScheduleFormatType }).(pulumi.StringPtrOutput)
}

// Weekly retention format for yearly retention policy.
func (o YearlyRetentionScheduleOutput) RetentionScheduleWeekly() WeeklyRetentionFormatPtrOutput {
	return o.ApplyT(func(v YearlyRetentionSchedule) *WeeklyRetentionFormat { return v.RetentionScheduleWeekly }).(WeeklyRetentionFormatPtrOutput)
}

// Retention times of retention policy.
func (o YearlyRetentionScheduleOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v YearlyRetentionSchedule) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type YearlyRetentionSchedulePtrOutput struct{ *pulumi.OutputState }

func (YearlyRetentionSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**YearlyRetentionSchedule)(nil)).Elem()
}

func (o YearlyRetentionSchedulePtrOutput) ToYearlyRetentionSchedulePtrOutput() YearlyRetentionSchedulePtrOutput {
	return o
}

func (o YearlyRetentionSchedulePtrOutput) ToYearlyRetentionSchedulePtrOutputWithContext(ctx context.Context) YearlyRetentionSchedulePtrOutput {
	return o
}

func (o YearlyRetentionSchedulePtrOutput) Elem() YearlyRetentionScheduleOutput {
	return o.ApplyT(func(v *YearlyRetentionSchedule) YearlyRetentionSchedule {
		if v != nil {
			return *v
		}
		var ret YearlyRetentionSchedule
		return ret
	}).(YearlyRetentionScheduleOutput)
}

// List of months of year of yearly retention policy.
func (o YearlyRetentionSchedulePtrOutput) MonthsOfYear() MonthOfYearArrayOutput {
	return o.ApplyT(func(v *YearlyRetentionSchedule) []MonthOfYear {
		if v == nil {
			return nil
		}
		return v.MonthsOfYear
	}).(MonthOfYearArrayOutput)
}

// Retention duration of retention Policy.
func (o YearlyRetentionSchedulePtrOutput) RetentionDuration() RetentionDurationPtrOutput {
	return o.ApplyT(func(v *YearlyRetentionSchedule) *RetentionDuration {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationPtrOutput)
}

// Daily retention format for yearly retention policy.
func (o YearlyRetentionSchedulePtrOutput) RetentionScheduleDaily() DailyRetentionFormatPtrOutput {
	return o.ApplyT(func(v *YearlyRetentionSchedule) *DailyRetentionFormat {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleDaily
	}).(DailyRetentionFormatPtrOutput)
}

// Retention schedule format for yearly retention policy.
func (o YearlyRetentionSchedulePtrOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *YearlyRetentionSchedule) *string {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleFormatType
	}).(pulumi.StringPtrOutput)
}

// Weekly retention format for yearly retention policy.
func (o YearlyRetentionSchedulePtrOutput) RetentionScheduleWeekly() WeeklyRetentionFormatPtrOutput {
	return o.ApplyT(func(v *YearlyRetentionSchedule) *WeeklyRetentionFormat {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleWeekly
	}).(WeeklyRetentionFormatPtrOutput)
}

// Retention times of retention policy.
func (o YearlyRetentionSchedulePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *YearlyRetentionSchedule) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

// Yearly retention schedule.
type YearlyRetentionScheduleResponse struct {
	// List of months of year of yearly retention policy.
	MonthsOfYear []string `pulumi:"monthsOfYear"`
	// Retention duration of retention Policy.
	RetentionDuration *RetentionDurationResponse `pulumi:"retentionDuration"`
	// Daily retention format for yearly retention policy.
	RetentionScheduleDaily *DailyRetentionFormatResponse `pulumi:"retentionScheduleDaily"`
	// Retention schedule format for yearly retention policy.
	RetentionScheduleFormatType *string `pulumi:"retentionScheduleFormatType"`
	// Weekly retention format for yearly retention policy.
	RetentionScheduleWeekly *WeeklyRetentionFormatResponse `pulumi:"retentionScheduleWeekly"`
	// Retention times of retention policy.
	RetentionTimes []string `pulumi:"retentionTimes"`
}

// Yearly retention schedule.
type YearlyRetentionScheduleResponseOutput struct{ *pulumi.OutputState }

func (YearlyRetentionScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*YearlyRetentionScheduleResponse)(nil)).Elem()
}

func (o YearlyRetentionScheduleResponseOutput) ToYearlyRetentionScheduleResponseOutput() YearlyRetentionScheduleResponseOutput {
	return o
}

func (o YearlyRetentionScheduleResponseOutput) ToYearlyRetentionScheduleResponseOutputWithContext(ctx context.Context) YearlyRetentionScheduleResponseOutput {
	return o
}

// List of months of year of yearly retention policy.
func (o YearlyRetentionScheduleResponseOutput) MonthsOfYear() pulumi.StringArrayOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) []string { return v.MonthsOfYear }).(pulumi.StringArrayOutput)
}

// Retention duration of retention Policy.
func (o YearlyRetentionScheduleResponseOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) *RetentionDurationResponse { return v.RetentionDuration }).(RetentionDurationResponsePtrOutput)
}

// Daily retention format for yearly retention policy.
func (o YearlyRetentionScheduleResponseOutput) RetentionScheduleDaily() DailyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) *DailyRetentionFormatResponse { return v.RetentionScheduleDaily }).(DailyRetentionFormatResponsePtrOutput)
}

// Retention schedule format for yearly retention policy.
func (o YearlyRetentionScheduleResponseOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) *string { return v.RetentionScheduleFormatType }).(pulumi.StringPtrOutput)
}

// Weekly retention format for yearly retention policy.
func (o YearlyRetentionScheduleResponseOutput) RetentionScheduleWeekly() WeeklyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) *WeeklyRetentionFormatResponse {
		return v.RetentionScheduleWeekly
	}).(WeeklyRetentionFormatResponsePtrOutput)
}

// Retention times of retention policy.
func (o YearlyRetentionScheduleResponseOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v YearlyRetentionScheduleResponse) []string { return v.RetentionTimes }).(pulumi.StringArrayOutput)
}

type YearlyRetentionScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (YearlyRetentionScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**YearlyRetentionScheduleResponse)(nil)).Elem()
}

func (o YearlyRetentionScheduleResponsePtrOutput) ToYearlyRetentionScheduleResponsePtrOutput() YearlyRetentionScheduleResponsePtrOutput {
	return o
}

func (o YearlyRetentionScheduleResponsePtrOutput) ToYearlyRetentionScheduleResponsePtrOutputWithContext(ctx context.Context) YearlyRetentionScheduleResponsePtrOutput {
	return o
}

func (o YearlyRetentionScheduleResponsePtrOutput) Elem() YearlyRetentionScheduleResponseOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) YearlyRetentionScheduleResponse {
		if v != nil {
			return *v
		}
		var ret YearlyRetentionScheduleResponse
		return ret
	}).(YearlyRetentionScheduleResponseOutput)
}

// List of months of year of yearly retention policy.
func (o YearlyRetentionScheduleResponsePtrOutput) MonthsOfYear() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.MonthsOfYear
	}).(pulumi.StringArrayOutput)
}

// Retention duration of retention Policy.
func (o YearlyRetentionScheduleResponsePtrOutput) RetentionDuration() RetentionDurationResponsePtrOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) *RetentionDurationResponse {
		if v == nil {
			return nil
		}
		return v.RetentionDuration
	}).(RetentionDurationResponsePtrOutput)
}

// Daily retention format for yearly retention policy.
func (o YearlyRetentionScheduleResponsePtrOutput) RetentionScheduleDaily() DailyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) *DailyRetentionFormatResponse {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleDaily
	}).(DailyRetentionFormatResponsePtrOutput)
}

// Retention schedule format for yearly retention policy.
func (o YearlyRetentionScheduleResponsePtrOutput) RetentionScheduleFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleFormatType
	}).(pulumi.StringPtrOutput)
}

// Weekly retention format for yearly retention policy.
func (o YearlyRetentionScheduleResponsePtrOutput) RetentionScheduleWeekly() WeeklyRetentionFormatResponsePtrOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) *WeeklyRetentionFormatResponse {
		if v == nil {
			return nil
		}
		return v.RetentionScheduleWeekly
	}).(WeeklyRetentionFormatResponsePtrOutput)
}

// Retention times of retention policy.
func (o YearlyRetentionScheduleResponsePtrOutput) RetentionTimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *YearlyRetentionScheduleResponse) []string {
		if v == nil {
			return nil
		}
		return v.RetentionTimes
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(AzureBackupServerContainerOutput{})
	pulumi.RegisterOutputType(AzureBackupServerContainerPtrOutput{})
	pulumi.RegisterOutputType(AzureBackupServerContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureFileShareProtectionPolicyOutput{})
	pulumi.RegisterOutputType(AzureFileShareProtectionPolicyPtrOutput{})
	pulumi.RegisterOutputType(AzureFileShareProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFileshareProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSClassicComputeVMContainerOutput{})
	pulumi.RegisterOutputType(AzureIaaSClassicComputeVMContainerPtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSClassicComputeVMContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSClassicComputeVMProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureIaaSClassicComputeVMProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSClassicComputeVMProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSComputeVMContainerOutput{})
	pulumi.RegisterOutputType(AzureIaaSComputeVMContainerPtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSComputeVMContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSComputeVMProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureIaaSComputeVMProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSComputeVMProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMHealthDetailsResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMHealthDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectionPolicyOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectionPolicyPtrOutput{})
	pulumi.RegisterOutputType(AzureIaaSVMProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(AzureMonitorAlertSettingsOutput{})
	pulumi.RegisterOutputType(AzureMonitorAlertSettingsPtrOutput{})
	pulumi.RegisterOutputType(AzureMonitorAlertSettingsResponseOutput{})
	pulumi.RegisterOutputType(AzureMonitorAlertSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureRecoveryServiceVaultProtectionIntentOutput{})
	pulumi.RegisterOutputType(AzureRecoveryServiceVaultProtectionIntentPtrOutput{})
	pulumi.RegisterOutputType(AzureRecoveryServiceVaultProtectionIntentResponseOutput{})
	pulumi.RegisterOutputType(AzureResourceProtectionIntentOutput{})
	pulumi.RegisterOutputType(AzureResourceProtectionIntentPtrOutput{})
	pulumi.RegisterOutputType(AzureResourceProtectionIntentResponseOutput{})
	pulumi.RegisterOutputType(AzureSQLAGWorkloadContainerProtectionContainerOutput{})
	pulumi.RegisterOutputType(AzureSQLAGWorkloadContainerProtectionContainerPtrOutput{})
	pulumi.RegisterOutputType(AzureSQLAGWorkloadContainerProtectionContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlContainerOutput{})
	pulumi.RegisterOutputType(AzureSqlContainerPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectionPolicyOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectionPolicyPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(AzureStorageContainerOutput{})
	pulumi.RegisterOutputType(AzureStorageContainerPtrOutput{})
	pulumi.RegisterOutputType(AzureStorageContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureVMAppContainerProtectionContainerOutput{})
	pulumi.RegisterOutputType(AzureVMAppContainerProtectionContainerPtrOutput{})
	pulumi.RegisterOutputType(AzureVMAppContainerProtectionContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectionPolicyOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectionPolicyPtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPAseDatabaseProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPAseDatabaseProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPAseDatabaseProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPHanaDBInstanceProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPHanaDBInstanceProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPHanaDBInstanceProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPHanaDatabaseProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPHanaDatabaseProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSAPHanaDatabaseProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSQLDatabaseProtectedItemOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSQLDatabaseProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(AzureVmWorkloadSQLDatabaseProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(AzureWorkloadAutoProtectionIntentOutput{})
	pulumi.RegisterOutputType(AzureWorkloadAutoProtectionIntentPtrOutput{})
	pulumi.RegisterOutputType(AzureWorkloadAutoProtectionIntentResponseOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerPtrOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerAutoProtectionIntentOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerAutoProtectionIntentPtrOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerAutoProtectionIntentResponseOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerExtendedInfoOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureWorkloadContainerResponseOutput{})
	pulumi.RegisterOutputType(AzureWorkloadSQLAutoProtectionIntentOutput{})
	pulumi.RegisterOutputType(AzureWorkloadSQLAutoProtectionIntentPtrOutput{})
	pulumi.RegisterOutputType(AzureWorkloadSQLAutoProtectionIntentResponseOutput{})
	pulumi.RegisterOutputType(ClassicAlertSettingsOutput{})
	pulumi.RegisterOutputType(ClassicAlertSettingsPtrOutput{})
	pulumi.RegisterOutputType(ClassicAlertSettingsResponseOutput{})
	pulumi.RegisterOutputType(ClassicAlertSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(CmkKekIdentityOutput{})
	pulumi.RegisterOutputType(CmkKekIdentityPtrOutput{})
	pulumi.RegisterOutputType(CmkKekIdentityResponseOutput{})
	pulumi.RegisterOutputType(CmkKekIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(CmkKeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(CmkKeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CmkKeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CmkKeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerIdentityInfoOutput{})
	pulumi.RegisterOutputType(ContainerIdentityInfoPtrOutput{})
	pulumi.RegisterOutputType(ContainerIdentityInfoResponseOutput{})
	pulumi.RegisterOutputType(ContainerIdentityInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(CrossSubscriptionRestoreSettingsOutput{})
	pulumi.RegisterOutputType(CrossSubscriptionRestoreSettingsPtrOutput{})
	pulumi.RegisterOutputType(CrossSubscriptionRestoreSettingsResponseOutput{})
	pulumi.RegisterOutputType(CrossSubscriptionRestoreSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DPMContainerExtendedInfoOutput{})
	pulumi.RegisterOutputType(DPMContainerExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(DPMContainerExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(DPMContainerExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(DPMProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(DailyRetentionFormatOutput{})
	pulumi.RegisterOutputType(DailyRetentionFormatPtrOutput{})
	pulumi.RegisterOutputType(DailyRetentionFormatResponseOutput{})
	pulumi.RegisterOutputType(DailyRetentionFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(DailyRetentionScheduleOutput{})
	pulumi.RegisterOutputType(DailyRetentionSchedulePtrOutput{})
	pulumi.RegisterOutputType(DailyRetentionScheduleResponseOutput{})
	pulumi.RegisterOutputType(DailyRetentionScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(DailyScheduleOutput{})
	pulumi.RegisterOutputType(DailySchedulePtrOutput{})
	pulumi.RegisterOutputType(DailyScheduleResponseOutput{})
	pulumi.RegisterOutputType(DailyScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(DayOutput{})
	pulumi.RegisterOutputType(DayArrayOutput{})
	pulumi.RegisterOutputType(DayResponseOutput{})
	pulumi.RegisterOutputType(DayResponseArrayOutput{})
	pulumi.RegisterOutputType(DiskExclusionPropertiesOutput{})
	pulumi.RegisterOutputType(DiskExclusionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DiskExclusionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DiskExclusionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DistributedNodesInfoOutput{})
	pulumi.RegisterOutputType(DistributedNodesInfoArrayOutput{})
	pulumi.RegisterOutputType(DistributedNodesInfoResponseOutput{})
	pulumi.RegisterOutputType(DistributedNodesInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(DpmContainerOutput{})
	pulumi.RegisterOutputType(DpmContainerPtrOutput{})
	pulumi.RegisterOutputType(DpmContainerResponseOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponsePtrOutput{})
	pulumi.RegisterOutputType(ExtendedPropertiesOutput{})
	pulumi.RegisterOutputType(ExtendedPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExtendedPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ExtendedPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(GenericContainerOutput{})
	pulumi.RegisterOutputType(GenericContainerPtrOutput{})
	pulumi.RegisterOutputType(GenericContainerExtendedInfoOutput{})
	pulumi.RegisterOutputType(GenericContainerExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(GenericContainerExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(GenericContainerExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(GenericContainerResponseOutput{})
	pulumi.RegisterOutputType(GenericProtectedItemOutput{})
	pulumi.RegisterOutputType(GenericProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(GenericProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(GenericProtectionPolicyOutput{})
	pulumi.RegisterOutputType(GenericProtectionPolicyPtrOutput{})
	pulumi.RegisterOutputType(GenericProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(HourlyScheduleOutput{})
	pulumi.RegisterOutputType(HourlySchedulePtrOutput{})
	pulumi.RegisterOutputType(HourlyScheduleResponseOutput{})
	pulumi.RegisterOutputType(HourlyScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(IaaSVMContainerOutput{})
	pulumi.RegisterOutputType(IaaSVMContainerPtrOutput{})
	pulumi.RegisterOutputType(IaaSVMContainerResponseOutput{})
	pulumi.RegisterOutputType(IdentityDataOutput{})
	pulumi.RegisterOutputType(IdentityDataPtrOutput{})
	pulumi.RegisterOutputType(IdentityDataResponseOutput{})
	pulumi.RegisterOutputType(IdentityDataResponsePtrOutput{})
	pulumi.RegisterOutputType(ImmutabilitySettingsOutput{})
	pulumi.RegisterOutputType(ImmutabilitySettingsPtrOutput{})
	pulumi.RegisterOutputType(ImmutabilitySettingsResponseOutput{})
	pulumi.RegisterOutputType(ImmutabilitySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(InquiryInfoOutput{})
	pulumi.RegisterOutputType(InquiryInfoPtrOutput{})
	pulumi.RegisterOutputType(InquiryInfoResponseOutput{})
	pulumi.RegisterOutputType(InquiryInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(InquiryValidationOutput{})
	pulumi.RegisterOutputType(InquiryValidationPtrOutput{})
	pulumi.RegisterOutputType(InquiryValidationResponseOutput{})
	pulumi.RegisterOutputType(InquiryValidationResponsePtrOutput{})
	pulumi.RegisterOutputType(InstantRPAdditionalDetailsOutput{})
	pulumi.RegisterOutputType(InstantRPAdditionalDetailsPtrOutput{})
	pulumi.RegisterOutputType(InstantRPAdditionalDetailsResponseOutput{})
	pulumi.RegisterOutputType(InstantRPAdditionalDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(KPIResourceHealthDetailsOutput{})
	pulumi.RegisterOutputType(KPIResourceHealthDetailsMapOutput{})
	pulumi.RegisterOutputType(KPIResourceHealthDetailsResponseOutput{})
	pulumi.RegisterOutputType(KPIResourceHealthDetailsResponseMapOutput{})
	pulumi.RegisterOutputType(LogSchedulePolicyOutput{})
	pulumi.RegisterOutputType(LogSchedulePolicyPtrOutput{})
	pulumi.RegisterOutputType(LogSchedulePolicyResponseOutput{})
	pulumi.RegisterOutputType(LogSchedulePolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(LongTermRetentionPolicyOutput{})
	pulumi.RegisterOutputType(LongTermRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(LongTermRetentionPolicyResponseOutput{})
	pulumi.RegisterOutputType(LongTermRetentionPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(LongTermSchedulePolicyOutput{})
	pulumi.RegisterOutputType(LongTermSchedulePolicyPtrOutput{})
	pulumi.RegisterOutputType(LongTermSchedulePolicyResponseOutput{})
	pulumi.RegisterOutputType(LongTermSchedulePolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(MABContainerHealthDetailsOutput{})
	pulumi.RegisterOutputType(MABContainerHealthDetailsArrayOutput{})
	pulumi.RegisterOutputType(MABContainerHealthDetailsResponseOutput{})
	pulumi.RegisterOutputType(MABContainerHealthDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(MabContainerOutput{})
	pulumi.RegisterOutputType(MabContainerPtrOutput{})
	pulumi.RegisterOutputType(MabContainerExtendedInfoOutput{})
	pulumi.RegisterOutputType(MabContainerExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(MabContainerExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(MabContainerExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(MabContainerResponseOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemPtrOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemExtendedInfoOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemExtendedInfoPtrOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemExtendedInfoResponseOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemExtendedInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(MabFileFolderProtectedItemResponseOutput{})
	pulumi.RegisterOutputType(MabProtectionPolicyOutput{})
	pulumi.RegisterOutputType(MabProtectionPolicyPtrOutput{})
	pulumi.RegisterOutputType(MabProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(MonitoringSettingsOutput{})
	pulumi.RegisterOutputType(MonitoringSettingsPtrOutput{})
	pulumi.RegisterOutputType(MonitoringSettingsResponseOutput{})
	pulumi.RegisterOutputType(MonitoringSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(MonthlyRetentionScheduleOutput{})
	pulumi.RegisterOutputType(MonthlyRetentionSchedulePtrOutput{})
	pulumi.RegisterOutputType(MonthlyRetentionScheduleResponseOutput{})
	pulumi.RegisterOutputType(MonthlyRetentionScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionTypeOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionTypePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionVaultPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceGuardOperationDetailOutput{})
	pulumi.RegisterOutputType(ResourceGuardOperationDetailArrayOutput{})
	pulumi.RegisterOutputType(ResourceGuardOperationDetailResponseOutput{})
	pulumi.RegisterOutputType(ResourceGuardOperationDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceGuardProxyBaseOutput{})
	pulumi.RegisterOutputType(ResourceGuardProxyBasePtrOutput{})
	pulumi.RegisterOutputType(ResourceGuardProxyBaseResponseOutput{})
	pulumi.RegisterOutputType(ResourceHealthDetailsResponseOutput{})
	pulumi.RegisterOutputType(ResourceHealthDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(RestoreSettingsOutput{})
	pulumi.RegisterOutputType(RestoreSettingsPtrOutput{})
	pulumi.RegisterOutputType(RestoreSettingsResponseOutput{})
	pulumi.RegisterOutputType(RestoreSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(RetentionDurationOutput{})
	pulumi.RegisterOutputType(RetentionDurationPtrOutput{})
	pulumi.RegisterOutputType(RetentionDurationResponseOutput{})
	pulumi.RegisterOutputType(RetentionDurationResponsePtrOutput{})
	pulumi.RegisterOutputType(SecuritySettingsOutput{})
	pulumi.RegisterOutputType(SecuritySettingsPtrOutput{})
	pulumi.RegisterOutputType(SecuritySettingsResponseOutput{})
	pulumi.RegisterOutputType(SecuritySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(SettingsOutput{})
	pulumi.RegisterOutputType(SettingsPtrOutput{})
	pulumi.RegisterOutputType(SettingsResponseOutput{})
	pulumi.RegisterOutputType(SettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(SimpleRetentionPolicyOutput{})
	pulumi.RegisterOutputType(SimpleRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(SimpleRetentionPolicyResponseOutput{})
	pulumi.RegisterOutputType(SimpleRetentionPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyOutput{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyPtrOutput{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyResponseOutput{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyV2Output{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyV2PtrOutput{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyV2ResponseOutput{})
	pulumi.RegisterOutputType(SimpleSchedulePolicyV2ResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SnapshotBackupAdditionalDetailsOutput{})
	pulumi.RegisterOutputType(SnapshotBackupAdditionalDetailsPtrOutput{})
	pulumi.RegisterOutputType(SnapshotBackupAdditionalDetailsResponseOutput{})
	pulumi.RegisterOutputType(SnapshotBackupAdditionalDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(SoftDeleteSettingsOutput{})
	pulumi.RegisterOutputType(SoftDeleteSettingsPtrOutput{})
	pulumi.RegisterOutputType(SoftDeleteSettingsResponseOutput{})
	pulumi.RegisterOutputType(SoftDeleteSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(SubProtectionPolicyOutput{})
	pulumi.RegisterOutputType(SubProtectionPolicyArrayOutput{})
	pulumi.RegisterOutputType(SubProtectionPolicyResponseOutput{})
	pulumi.RegisterOutputType(SubProtectionPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TieringPolicyOutput{})
	pulumi.RegisterOutputType(TieringPolicyMapOutput{})
	pulumi.RegisterOutputType(TieringPolicyResponseOutput{})
	pulumi.RegisterOutputType(TieringPolicyResponseMapOutput{})
	pulumi.RegisterOutputType(UpgradeDetailsResponseOutput{})
	pulumi.RegisterOutputType(UpgradeDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityPropertiesOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedManagedIdentityDetailsOutput{})
	pulumi.RegisterOutputType(UserAssignedManagedIdentityDetailsPtrOutput{})
	pulumi.RegisterOutputType(UserAssignedManagedIdentityDetailsResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedManagedIdentityDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(UserIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(VaultPrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(VaultPrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(VaultPropertiesOutput{})
	pulumi.RegisterOutputType(VaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VaultPropertiesEncryptionOutput{})
	pulumi.RegisterOutputType(VaultPropertiesEncryptionPtrOutput{})
	pulumi.RegisterOutputType(VaultPropertiesRedundancySettingsOutput{})
	pulumi.RegisterOutputType(VaultPropertiesRedundancySettingsPtrOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseEncryptionOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseEncryptionPtrOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseMoveDetailsOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseMoveDetailsPtrOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseRedundancySettingsOutput{})
	pulumi.RegisterOutputType(VaultPropertiesResponseRedundancySettingsPtrOutput{})
	pulumi.RegisterOutputType(VaultRetentionPolicyOutput{})
	pulumi.RegisterOutputType(VaultRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(VaultRetentionPolicyResponseOutput{})
	pulumi.RegisterOutputType(VaultRetentionPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionFormatOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionFormatPtrOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionFormatResponseOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionFormatResponsePtrOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionScheduleOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionSchedulePtrOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionScheduleResponseOutput{})
	pulumi.RegisterOutputType(WeeklyRetentionScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(WeeklyScheduleOutput{})
	pulumi.RegisterOutputType(WeeklySchedulePtrOutput{})
	pulumi.RegisterOutputType(WeeklyScheduleResponseOutput{})
	pulumi.RegisterOutputType(WeeklyScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(WorkloadInquiryDetailsOutput{})
	pulumi.RegisterOutputType(WorkloadInquiryDetailsArrayOutput{})
	pulumi.RegisterOutputType(WorkloadInquiryDetailsResponseOutput{})
	pulumi.RegisterOutputType(WorkloadInquiryDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(YearlyRetentionScheduleOutput{})
	pulumi.RegisterOutputType(YearlyRetentionSchedulePtrOutput{})
	pulumi.RegisterOutputType(YearlyRetentionScheduleResponseOutput{})
	pulumi.RegisterOutputType(YearlyRetentionScheduleResponsePtrOutput{})
}
