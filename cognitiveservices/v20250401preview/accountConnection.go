// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20250401preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Connection base resource schema.
type AccountConnection struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Connection property base schema.
	Properties pulumi.AnyOutput `pulumi:"properties"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAccountConnection registers a new resource with the given unique name, arguments, and options.
func NewAccountConnection(ctx *pulumi.Context,
	name string, args *AccountConnectionArgs, opts ...pulumi.ResourceOption) (*AccountConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AccountConnection
	err := ctx.RegisterResource("azure-native:cognitiveservices/v20250401preview:AccountConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountConnection gets an existing AccountConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountConnectionState, opts ...pulumi.ResourceOption) (*AccountConnection, error) {
	var resource AccountConnection
	err := ctx.ReadResource("azure-native:cognitiveservices/v20250401preview:AccountConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountConnection resources.
type accountConnectionState struct {
}

type AccountConnectionState struct {
}

func (AccountConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountConnectionState)(nil)).Elem()
}

type accountConnectionArgs struct {
	// The name of Cognitive Services account.
	AccountName string `pulumi:"accountName"`
	// Friendly name of the connection
	ConnectionName *string `pulumi:"connectionName"`
	// Connection property base schema.
	Properties interface{} `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a AccountConnection resource.
type AccountConnectionArgs struct {
	// The name of Cognitive Services account.
	AccountName pulumi.StringInput
	// Friendly name of the connection
	ConnectionName pulumi.StringPtrInput
	// Connection property base schema.
	Properties pulumi.Input
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (AccountConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountConnectionArgs)(nil)).Elem()
}

type AccountConnectionInput interface {
	pulumi.Input

	ToAccountConnectionOutput() AccountConnectionOutput
	ToAccountConnectionOutputWithContext(ctx context.Context) AccountConnectionOutput
}

func (*AccountConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountConnection)(nil)).Elem()
}

func (i *AccountConnection) ToAccountConnectionOutput() AccountConnectionOutput {
	return i.ToAccountConnectionOutputWithContext(context.Background())
}

func (i *AccountConnection) ToAccountConnectionOutputWithContext(ctx context.Context) AccountConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountConnectionOutput)
}

type AccountConnectionOutput struct{ *pulumi.OutputState }

func (AccountConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountConnection)(nil)).Elem()
}

func (o AccountConnectionOutput) ToAccountConnectionOutput() AccountConnectionOutput {
	return o
}

func (o AccountConnectionOutput) ToAccountConnectionOutputWithContext(ctx context.Context) AccountConnectionOutput {
	return o
}

// The name of the resource
func (o AccountConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Connection property base schema.
func (o AccountConnectionOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v *AccountConnection) pulumi.AnyOutput { return v.Properties }).(pulumi.AnyOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AccountConnectionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountConnection) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountConnectionOutput{})
}
