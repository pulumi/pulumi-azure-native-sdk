// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20250401preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Connection base resource schema.
type ProjectConnection struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Connection property base schema.
	Properties pulumi.AnyOutput `pulumi:"properties"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewProjectConnection registers a new resource with the given unique name, arguments, and options.
func NewProjectConnection(ctx *pulumi.Context,
	name string, args *ProjectConnectionArgs, opts ...pulumi.ResourceOption) (*ProjectConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.ProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ProjectName'")
	}
	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ProjectConnection
	err := ctx.RegisterResource("azure-native:cognitiveservices/v20250401preview:ProjectConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProjectConnection gets an existing ProjectConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProjectConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectConnectionState, opts ...pulumi.ResourceOption) (*ProjectConnection, error) {
	var resource ProjectConnection
	err := ctx.ReadResource("azure-native:cognitiveservices/v20250401preview:ProjectConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProjectConnection resources.
type projectConnectionState struct {
}

type ProjectConnectionState struct {
}

func (ProjectConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectConnectionState)(nil)).Elem()
}

type projectConnectionArgs struct {
	// The name of Cognitive Services account.
	AccountName string `pulumi:"accountName"`
	// Friendly name of the connection
	ConnectionName *string `pulumi:"connectionName"`
	// The name of Cognitive Services account's project.
	ProjectName string `pulumi:"projectName"`
	// Connection property base schema.
	Properties interface{} `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a ProjectConnection resource.
type ProjectConnectionArgs struct {
	// The name of Cognitive Services account.
	AccountName pulumi.StringInput
	// Friendly name of the connection
	ConnectionName pulumi.StringPtrInput
	// The name of Cognitive Services account's project.
	ProjectName pulumi.StringInput
	// Connection property base schema.
	Properties pulumi.Input
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
}

func (ProjectConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectConnectionArgs)(nil)).Elem()
}

type ProjectConnectionInput interface {
	pulumi.Input

	ToProjectConnectionOutput() ProjectConnectionOutput
	ToProjectConnectionOutputWithContext(ctx context.Context) ProjectConnectionOutput
}

func (*ProjectConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConnection)(nil)).Elem()
}

func (i *ProjectConnection) ToProjectConnectionOutput() ProjectConnectionOutput {
	return i.ToProjectConnectionOutputWithContext(context.Background())
}

func (i *ProjectConnection) ToProjectConnectionOutputWithContext(ctx context.Context) ProjectConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectConnectionOutput)
}

type ProjectConnectionOutput struct{ *pulumi.OutputState }

func (ProjectConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectConnection)(nil)).Elem()
}

func (o ProjectConnectionOutput) ToProjectConnectionOutput() ProjectConnectionOutput {
	return o
}

func (o ProjectConnectionOutput) ToProjectConnectionOutputWithContext(ctx context.Context) ProjectConnectionOutput {
	return o
}

// The name of the resource
func (o ProjectConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Connection property base schema.
func (o ProjectConnectionOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v *ProjectConnection) pulumi.AnyOutput { return v.Properties }).(pulumi.AnyOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ProjectConnectionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectConnection) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ProjectConnectionOutput{})
}
