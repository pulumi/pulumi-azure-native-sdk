// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognitiveservices

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Cognitive Services Rai Topic.
//
// Uses Azure REST API version 2025-07-01-preview.
//
// Other available API versions: 2025-09-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native cognitiveservices [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type RaiTopic struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Resource Etag.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of Cognitive Services Rai Topic.
	Properties RaiTopicPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRaiTopic registers a new resource with the given unique name, arguments, and options.
func NewRaiTopic(ctx *pulumi.Context,
	name string, args *RaiTopicArgs, opts ...pulumi.ResourceOption) (*RaiTopic, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:cognitiveservices/v20250701preview:RaiTopic"),
		},
		{
			Type: pulumi.String("azure-native:cognitiveservices/v20250901:RaiTopic"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource RaiTopic
	err := ctx.RegisterResource("azure-native:cognitiveservices:RaiTopic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRaiTopic gets an existing RaiTopic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRaiTopic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RaiTopicState, opts ...pulumi.ResourceOption) (*RaiTopic, error) {
	var resource RaiTopic
	err := ctx.ReadResource("azure-native:cognitiveservices:RaiTopic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RaiTopic resources.
type raiTopicState struct {
}

type RaiTopicState struct {
}

func (RaiTopicState) ElementType() reflect.Type {
	return reflect.TypeOf((*raiTopicState)(nil)).Elem()
}

type raiTopicArgs struct {
	// The name of Cognitive Services account.
	AccountName string `pulumi:"accountName"`
	// Properties of Cognitive Services Rai Topic.
	Properties *RaiTopicProperties `pulumi:"properties"`
	// The name of the Rai Topic associated with the Cognitive Services Account
	RaiTopicName *string `pulumi:"raiTopicName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a RaiTopic resource.
type RaiTopicArgs struct {
	// The name of Cognitive Services account.
	AccountName pulumi.StringInput
	// Properties of Cognitive Services Rai Topic.
	Properties RaiTopicPropertiesPtrInput
	// The name of the Rai Topic associated with the Cognitive Services Account
	RaiTopicName pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (RaiTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*raiTopicArgs)(nil)).Elem()
}

type RaiTopicInput interface {
	pulumi.Input

	ToRaiTopicOutput() RaiTopicOutput
	ToRaiTopicOutputWithContext(ctx context.Context) RaiTopicOutput
}

func (*RaiTopic) ElementType() reflect.Type {
	return reflect.TypeOf((**RaiTopic)(nil)).Elem()
}

func (i *RaiTopic) ToRaiTopicOutput() RaiTopicOutput {
	return i.ToRaiTopicOutputWithContext(context.Background())
}

func (i *RaiTopic) ToRaiTopicOutputWithContext(ctx context.Context) RaiTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiTopicOutput)
}

type RaiTopicOutput struct{ *pulumi.OutputState }

func (RaiTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RaiTopic)(nil)).Elem()
}

func (o RaiTopicOutput) ToRaiTopicOutput() RaiTopicOutput {
	return o
}

func (o RaiTopicOutput) ToRaiTopicOutputWithContext(ctx context.Context) RaiTopicOutput {
	return o
}

// The Azure API version of the resource.
func (o RaiTopicOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *RaiTopic) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Resource Etag.
func (o RaiTopicOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *RaiTopic) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The name of the resource
func (o RaiTopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RaiTopic) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Properties of Cognitive Services Rai Topic.
func (o RaiTopicOutput) Properties() RaiTopicPropertiesResponseOutput {
	return o.ApplyT(func(v *RaiTopic) RaiTopicPropertiesResponseOutput { return v.Properties }).(RaiTopicPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o RaiTopicOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *RaiTopic) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o RaiTopicOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RaiTopic) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o RaiTopicOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *RaiTopic) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(RaiTopicOutput{})
}
