// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognitiveservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Connection base resource schema.
//
// Uses Azure REST API version 2025-04-01-preview.
func LookupAccountConnection(ctx *pulumi.Context, args *LookupAccountConnectionArgs, opts ...pulumi.InvokeOption) (*LookupAccountConnectionResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupAccountConnectionResult
	err := ctx.Invoke("azure-native:cognitiveservices:getAccountConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAccountConnectionArgs struct {
	// The name of Cognitive Services account.
	AccountName string `pulumi:"accountName"`
	// Friendly name of the connection
	ConnectionName string `pulumi:"connectionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Connection base resource schema.
type LookupAccountConnectionResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Connection property base schema.
	Properties interface{} `pulumi:"properties"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupAccountConnectionOutput(ctx *pulumi.Context, args LookupAccountConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupAccountConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAccountConnectionResultOutput, error) {
			args := v.(LookupAccountConnectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:cognitiveservices:getAccountConnection", args, LookupAccountConnectionResultOutput{}, options).(LookupAccountConnectionResultOutput), nil
		}).(LookupAccountConnectionResultOutput)
}

type LookupAccountConnectionOutputArgs struct {
	// The name of Cognitive Services account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Friendly name of the connection
	ConnectionName pulumi.StringInput `pulumi:"connectionName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAccountConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountConnectionArgs)(nil)).Elem()
}

// Connection base resource schema.
type LookupAccountConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupAccountConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountConnectionResult)(nil)).Elem()
}

func (o LookupAccountConnectionResultOutput) ToLookupAccountConnectionResultOutput() LookupAccountConnectionResultOutput {
	return o
}

func (o LookupAccountConnectionResultOutput) ToLookupAccountConnectionResultOutputWithContext(ctx context.Context) LookupAccountConnectionResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupAccountConnectionResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountConnectionResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupAccountConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupAccountConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// Connection property base schema.
func (o LookupAccountConnectionResultOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupAccountConnectionResult) interface{} { return v.Properties }).(pulumi.AnyOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupAccountConnectionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountConnectionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccountConnectionResultOutput{})
}
