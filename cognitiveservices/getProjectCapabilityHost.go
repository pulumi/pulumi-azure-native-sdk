// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognitiveservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Azure Resource Manager resource envelope.
//
// Uses Azure REST API version 2025-04-01-preview.
func LookupProjectCapabilityHost(ctx *pulumi.Context, args *LookupProjectCapabilityHostArgs, opts ...pulumi.InvokeOption) (*LookupProjectCapabilityHostResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupProjectCapabilityHostResult
	err := ctx.Invoke("azure-native:cognitiveservices:getProjectCapabilityHost", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupProjectCapabilityHostArgs struct {
	// The name of Cognitive Services account.
	AccountName string `pulumi:"accountName"`
	// The name of the capability host associated with the Cognitive Services Resource
	CapabilityHostName string `pulumi:"capabilityHostName"`
	// The name of Cognitive Services account's project.
	ProjectName string `pulumi:"projectName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Azure Resource Manager resource envelope.
type LookupProjectCapabilityHostResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// [Required] Additional attributes of the entity.
	CapabilityHostProperties CapabilityHostResponse `pulumi:"capabilityHostProperties"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupProjectCapabilityHostResult
func (val *LookupProjectCapabilityHostResult) Defaults() *LookupProjectCapabilityHostResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.CapabilityHostProperties = *tmp.CapabilityHostProperties.Defaults()

	return &tmp
}
func LookupProjectCapabilityHostOutput(ctx *pulumi.Context, args LookupProjectCapabilityHostOutputArgs, opts ...pulumi.InvokeOption) LookupProjectCapabilityHostResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupProjectCapabilityHostResultOutput, error) {
			args := v.(LookupProjectCapabilityHostArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:cognitiveservices:getProjectCapabilityHost", args, LookupProjectCapabilityHostResultOutput{}, options).(LookupProjectCapabilityHostResultOutput), nil
		}).(LookupProjectCapabilityHostResultOutput)
}

type LookupProjectCapabilityHostOutputArgs struct {
	// The name of Cognitive Services account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the capability host associated with the Cognitive Services Resource
	CapabilityHostName pulumi.StringInput `pulumi:"capabilityHostName"`
	// The name of Cognitive Services account's project.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupProjectCapabilityHostOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectCapabilityHostArgs)(nil)).Elem()
}

// Azure Resource Manager resource envelope.
type LookupProjectCapabilityHostResultOutput struct{ *pulumi.OutputState }

func (LookupProjectCapabilityHostResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectCapabilityHostResult)(nil)).Elem()
}

func (o LookupProjectCapabilityHostResultOutput) ToLookupProjectCapabilityHostResultOutput() LookupProjectCapabilityHostResultOutput {
	return o
}

func (o LookupProjectCapabilityHostResultOutput) ToLookupProjectCapabilityHostResultOutputWithContext(ctx context.Context) LookupProjectCapabilityHostResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupProjectCapabilityHostResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectCapabilityHostResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// [Required] Additional attributes of the entity.
func (o LookupProjectCapabilityHostResultOutput) CapabilityHostProperties() CapabilityHostResponseOutput {
	return o.ApplyT(func(v LookupProjectCapabilityHostResult) CapabilityHostResponse { return v.CapabilityHostProperties }).(CapabilityHostResponseOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupProjectCapabilityHostResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectCapabilityHostResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupProjectCapabilityHostResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectCapabilityHostResult) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupProjectCapabilityHostResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectCapabilityHostResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectCapabilityHostResultOutput{})
}
