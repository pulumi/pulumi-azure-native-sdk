// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognitiveservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// This connection type covers the AAD auth for any applicable Azure service
type AADAuthTypeConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'AAD'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category      *string `pulumi:"category"`
	Error         *string `pulumi:"error"`
	ExpiryTime    *string `pulumi:"expiryTime"`
	IsSharedToAll *bool   `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

// AADAuthTypeConnectionPropertiesInput is an input type that accepts AADAuthTypeConnectionPropertiesArgs and AADAuthTypeConnectionPropertiesOutput values.
// You can construct a concrete instance of `AADAuthTypeConnectionPropertiesInput` via:
//
//	AADAuthTypeConnectionPropertiesArgs{...}
type AADAuthTypeConnectionPropertiesInput interface {
	pulumi.Input

	ToAADAuthTypeConnectionPropertiesOutput() AADAuthTypeConnectionPropertiesOutput
	ToAADAuthTypeConnectionPropertiesOutputWithContext(context.Context) AADAuthTypeConnectionPropertiesOutput
}

// This connection type covers the AAD auth for any applicable Azure service
type AADAuthTypeConnectionPropertiesArgs struct {
	// Authentication type of the connection target
	// Expected value is 'AAD'.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Category of the connection
	Category      pulumi.StringPtrInput `pulumi:"category"`
	Error         pulumi.StringPtrInput `pulumi:"error"`
	ExpiryTime    pulumi.StringPtrInput `pulumi:"expiryTime"`
	IsSharedToAll pulumi.BoolPtrInput   `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    pulumi.StringMapInput   `pulumi:"metadata"`
	PeRequirement               pulumi.StringPtrInput   `pulumi:"peRequirement"`
	PeStatus                    pulumi.StringPtrInput   `pulumi:"peStatus"`
	SharedUserList              pulumi.StringArrayInput `pulumi:"sharedUserList"`
	Target                      pulumi.StringPtrInput   `pulumi:"target"`
	UseWorkspaceManagedIdentity pulumi.BoolPtrInput     `pulumi:"useWorkspaceManagedIdentity"`
}

func (AADAuthTypeConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AADAuthTypeConnectionProperties)(nil)).Elem()
}

func (i AADAuthTypeConnectionPropertiesArgs) ToAADAuthTypeConnectionPropertiesOutput() AADAuthTypeConnectionPropertiesOutput {
	return i.ToAADAuthTypeConnectionPropertiesOutputWithContext(context.Background())
}

func (i AADAuthTypeConnectionPropertiesArgs) ToAADAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) AADAuthTypeConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AADAuthTypeConnectionPropertiesOutput)
}

// This connection type covers the AAD auth for any applicable Azure service
type AADAuthTypeConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (AADAuthTypeConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AADAuthTypeConnectionProperties)(nil)).Elem()
}

func (o AADAuthTypeConnectionPropertiesOutput) ToAADAuthTypeConnectionPropertiesOutput() AADAuthTypeConnectionPropertiesOutput {
	return o
}

func (o AADAuthTypeConnectionPropertiesOutput) ToAADAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) AADAuthTypeConnectionPropertiesOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'AAD'.
func (o AADAuthTypeConnectionPropertiesOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionProperties) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o AADAuthTypeConnectionPropertiesOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionProperties) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o AADAuthTypeConnectionPropertiesOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionProperties) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o AADAuthTypeConnectionPropertiesOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionProperties) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

func (o AADAuthTypeConnectionPropertiesOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionProperties) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o AADAuthTypeConnectionPropertiesOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionProperties) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o AADAuthTypeConnectionPropertiesOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionProperties) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o AADAuthTypeConnectionPropertiesOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionProperties) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o AADAuthTypeConnectionPropertiesOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionProperties) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o AADAuthTypeConnectionPropertiesOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionProperties) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o AADAuthTypeConnectionPropertiesOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionProperties) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

// This connection type covers the AAD auth for any applicable Azure service
type AADAuthTypeConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'AAD'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category                *string `pulumi:"category"`
	CreatedByWorkspaceArmId string  `pulumi:"createdByWorkspaceArmId"`
	Error                   *string `pulumi:"error"`
	ExpiryTime              *string `pulumi:"expiryTime"`
	// Group based on connection category
	Group         string `pulumi:"group"`
	IsSharedToAll *bool  `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

// This connection type covers the AAD auth for any applicable Azure service
type AADAuthTypeConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AADAuthTypeConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AADAuthTypeConnectionPropertiesResponse)(nil)).Elem()
}

func (o AADAuthTypeConnectionPropertiesResponseOutput) ToAADAuthTypeConnectionPropertiesResponseOutput() AADAuthTypeConnectionPropertiesResponseOutput {
	return o
}

func (o AADAuthTypeConnectionPropertiesResponseOutput) ToAADAuthTypeConnectionPropertiesResponseOutputWithContext(ctx context.Context) AADAuthTypeConnectionPropertiesResponseOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'AAD'.
func (o AADAuthTypeConnectionPropertiesResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionPropertiesResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o AADAuthTypeConnectionPropertiesResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionPropertiesResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o AADAuthTypeConnectionPropertiesResponseOutput) CreatedByWorkspaceArmId() pulumi.StringOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionPropertiesResponse) string { return v.CreatedByWorkspaceArmId }).(pulumi.StringOutput)
}

func (o AADAuthTypeConnectionPropertiesResponseOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionPropertiesResponse) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o AADAuthTypeConnectionPropertiesResponseOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionPropertiesResponse) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

// Group based on connection category
func (o AADAuthTypeConnectionPropertiesResponseOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionPropertiesResponse) string { return v.Group }).(pulumi.StringOutput)
}

func (o AADAuthTypeConnectionPropertiesResponseOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionPropertiesResponse) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o AADAuthTypeConnectionPropertiesResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionPropertiesResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o AADAuthTypeConnectionPropertiesResponseOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionPropertiesResponse) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o AADAuthTypeConnectionPropertiesResponseOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionPropertiesResponse) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o AADAuthTypeConnectionPropertiesResponseOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionPropertiesResponse) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o AADAuthTypeConnectionPropertiesResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionPropertiesResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o AADAuthTypeConnectionPropertiesResponseOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AADAuthTypeConnectionPropertiesResponse) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

// The abuse penalty.
type AbusePenaltyResponse struct {
	// The action of AbusePenalty.
	Action *string `pulumi:"action"`
	// The datetime of expiration of the AbusePenalty.
	Expiration *string `pulumi:"expiration"`
	// The percentage of rate limit.
	RateLimitPercentage *float64 `pulumi:"rateLimitPercentage"`
}

// The abuse penalty.
type AbusePenaltyResponseOutput struct{ *pulumi.OutputState }

func (AbusePenaltyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AbusePenaltyResponse)(nil)).Elem()
}

func (o AbusePenaltyResponseOutput) ToAbusePenaltyResponseOutput() AbusePenaltyResponseOutput {
	return o
}

func (o AbusePenaltyResponseOutput) ToAbusePenaltyResponseOutputWithContext(ctx context.Context) AbusePenaltyResponseOutput {
	return o
}

// The action of AbusePenalty.
func (o AbusePenaltyResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AbusePenaltyResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The datetime of expiration of the AbusePenalty.
func (o AbusePenaltyResponseOutput) Expiration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AbusePenaltyResponse) *string { return v.Expiration }).(pulumi.StringPtrOutput)
}

// The percentage of rate limit.
func (o AbusePenaltyResponseOutput) RateLimitPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AbusePenaltyResponse) *float64 { return v.RateLimitPercentage }).(pulumi.Float64PtrOutput)
}

type AccessKeyAuthTypeConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'AccessKey'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category      *string              `pulumi:"category"`
	Credentials   *ConnectionAccessKey `pulumi:"credentials"`
	Error         *string              `pulumi:"error"`
	ExpiryTime    *string              `pulumi:"expiryTime"`
	IsSharedToAll *bool                `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

// AccessKeyAuthTypeConnectionPropertiesInput is an input type that accepts AccessKeyAuthTypeConnectionPropertiesArgs and AccessKeyAuthTypeConnectionPropertiesOutput values.
// You can construct a concrete instance of `AccessKeyAuthTypeConnectionPropertiesInput` via:
//
//	AccessKeyAuthTypeConnectionPropertiesArgs{...}
type AccessKeyAuthTypeConnectionPropertiesInput interface {
	pulumi.Input

	ToAccessKeyAuthTypeConnectionPropertiesOutput() AccessKeyAuthTypeConnectionPropertiesOutput
	ToAccessKeyAuthTypeConnectionPropertiesOutputWithContext(context.Context) AccessKeyAuthTypeConnectionPropertiesOutput
}

type AccessKeyAuthTypeConnectionPropertiesArgs struct {
	// Authentication type of the connection target
	// Expected value is 'AccessKey'.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Category of the connection
	Category      pulumi.StringPtrInput       `pulumi:"category"`
	Credentials   ConnectionAccessKeyPtrInput `pulumi:"credentials"`
	Error         pulumi.StringPtrInput       `pulumi:"error"`
	ExpiryTime    pulumi.StringPtrInput       `pulumi:"expiryTime"`
	IsSharedToAll pulumi.BoolPtrInput         `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    pulumi.StringMapInput   `pulumi:"metadata"`
	PeRequirement               pulumi.StringPtrInput   `pulumi:"peRequirement"`
	PeStatus                    pulumi.StringPtrInput   `pulumi:"peStatus"`
	SharedUserList              pulumi.StringArrayInput `pulumi:"sharedUserList"`
	Target                      pulumi.StringPtrInput   `pulumi:"target"`
	UseWorkspaceManagedIdentity pulumi.BoolPtrInput     `pulumi:"useWorkspaceManagedIdentity"`
}

func (AccessKeyAuthTypeConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessKeyAuthTypeConnectionProperties)(nil)).Elem()
}

func (i AccessKeyAuthTypeConnectionPropertiesArgs) ToAccessKeyAuthTypeConnectionPropertiesOutput() AccessKeyAuthTypeConnectionPropertiesOutput {
	return i.ToAccessKeyAuthTypeConnectionPropertiesOutputWithContext(context.Background())
}

func (i AccessKeyAuthTypeConnectionPropertiesArgs) ToAccessKeyAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) AccessKeyAuthTypeConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessKeyAuthTypeConnectionPropertiesOutput)
}

type AccessKeyAuthTypeConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (AccessKeyAuthTypeConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessKeyAuthTypeConnectionProperties)(nil)).Elem()
}

func (o AccessKeyAuthTypeConnectionPropertiesOutput) ToAccessKeyAuthTypeConnectionPropertiesOutput() AccessKeyAuthTypeConnectionPropertiesOutput {
	return o
}

func (o AccessKeyAuthTypeConnectionPropertiesOutput) ToAccessKeyAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) AccessKeyAuthTypeConnectionPropertiesOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'AccessKey'.
func (o AccessKeyAuthTypeConnectionPropertiesOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionProperties) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o AccessKeyAuthTypeConnectionPropertiesOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionProperties) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesOutput) Credentials() ConnectionAccessKeyPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionProperties) *ConnectionAccessKey { return v.Credentials }).(ConnectionAccessKeyPtrOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionProperties) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionProperties) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionProperties) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o AccessKeyAuthTypeConnectionPropertiesOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionProperties) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionProperties) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionProperties) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionProperties) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionProperties) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionProperties) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

type AccessKeyAuthTypeConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'AccessKey'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category                *string                      `pulumi:"category"`
	CreatedByWorkspaceArmId string                       `pulumi:"createdByWorkspaceArmId"`
	Credentials             *ConnectionAccessKeyResponse `pulumi:"credentials"`
	Error                   *string                      `pulumi:"error"`
	ExpiryTime              *string                      `pulumi:"expiryTime"`
	// Group based on connection category
	Group         string `pulumi:"group"`
	IsSharedToAll *bool  `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

type AccessKeyAuthTypeConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AccessKeyAuthTypeConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessKeyAuthTypeConnectionPropertiesResponse)(nil)).Elem()
}

func (o AccessKeyAuthTypeConnectionPropertiesResponseOutput) ToAccessKeyAuthTypeConnectionPropertiesResponseOutput() AccessKeyAuthTypeConnectionPropertiesResponseOutput {
	return o
}

func (o AccessKeyAuthTypeConnectionPropertiesResponseOutput) ToAccessKeyAuthTypeConnectionPropertiesResponseOutputWithContext(ctx context.Context) AccessKeyAuthTypeConnectionPropertiesResponseOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'AccessKey'.
func (o AccessKeyAuthTypeConnectionPropertiesResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionPropertiesResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o AccessKeyAuthTypeConnectionPropertiesResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionPropertiesResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesResponseOutput) CreatedByWorkspaceArmId() pulumi.StringOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionPropertiesResponse) string { return v.CreatedByWorkspaceArmId }).(pulumi.StringOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesResponseOutput) Credentials() ConnectionAccessKeyResponsePtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionPropertiesResponse) *ConnectionAccessKeyResponse {
		return v.Credentials
	}).(ConnectionAccessKeyResponsePtrOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesResponseOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionPropertiesResponse) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesResponseOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionPropertiesResponse) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

// Group based on connection category
func (o AccessKeyAuthTypeConnectionPropertiesResponseOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionPropertiesResponse) string { return v.Group }).(pulumi.StringOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesResponseOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionPropertiesResponse) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o AccessKeyAuthTypeConnectionPropertiesResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionPropertiesResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesResponseOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionPropertiesResponse) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesResponseOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionPropertiesResponse) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesResponseOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionPropertiesResponse) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionPropertiesResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o AccessKeyAuthTypeConnectionPropertiesResponseOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessKeyAuthTypeConnectionPropertiesResponse) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

// This connection type covers the account key connection for Azure storage
type AccountKeyAuthTypeConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'AccountKey'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category *string `pulumi:"category"`
	// Account key object for connection credential.
	Credentials   *ConnectionAccountKey `pulumi:"credentials"`
	Error         *string               `pulumi:"error"`
	ExpiryTime    *string               `pulumi:"expiryTime"`
	IsSharedToAll *bool                 `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

// AccountKeyAuthTypeConnectionPropertiesInput is an input type that accepts AccountKeyAuthTypeConnectionPropertiesArgs and AccountKeyAuthTypeConnectionPropertiesOutput values.
// You can construct a concrete instance of `AccountKeyAuthTypeConnectionPropertiesInput` via:
//
//	AccountKeyAuthTypeConnectionPropertiesArgs{...}
type AccountKeyAuthTypeConnectionPropertiesInput interface {
	pulumi.Input

	ToAccountKeyAuthTypeConnectionPropertiesOutput() AccountKeyAuthTypeConnectionPropertiesOutput
	ToAccountKeyAuthTypeConnectionPropertiesOutputWithContext(context.Context) AccountKeyAuthTypeConnectionPropertiesOutput
}

// This connection type covers the account key connection for Azure storage
type AccountKeyAuthTypeConnectionPropertiesArgs struct {
	// Authentication type of the connection target
	// Expected value is 'AccountKey'.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Category of the connection
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Account key object for connection credential.
	Credentials   ConnectionAccountKeyPtrInput `pulumi:"credentials"`
	Error         pulumi.StringPtrInput        `pulumi:"error"`
	ExpiryTime    pulumi.StringPtrInput        `pulumi:"expiryTime"`
	IsSharedToAll pulumi.BoolPtrInput          `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    pulumi.StringMapInput   `pulumi:"metadata"`
	PeRequirement               pulumi.StringPtrInput   `pulumi:"peRequirement"`
	PeStatus                    pulumi.StringPtrInput   `pulumi:"peStatus"`
	SharedUserList              pulumi.StringArrayInput `pulumi:"sharedUserList"`
	Target                      pulumi.StringPtrInput   `pulumi:"target"`
	UseWorkspaceManagedIdentity pulumi.BoolPtrInput     `pulumi:"useWorkspaceManagedIdentity"`
}

func (AccountKeyAuthTypeConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountKeyAuthTypeConnectionProperties)(nil)).Elem()
}

func (i AccountKeyAuthTypeConnectionPropertiesArgs) ToAccountKeyAuthTypeConnectionPropertiesOutput() AccountKeyAuthTypeConnectionPropertiesOutput {
	return i.ToAccountKeyAuthTypeConnectionPropertiesOutputWithContext(context.Background())
}

func (i AccountKeyAuthTypeConnectionPropertiesArgs) ToAccountKeyAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) AccountKeyAuthTypeConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountKeyAuthTypeConnectionPropertiesOutput)
}

// This connection type covers the account key connection for Azure storage
type AccountKeyAuthTypeConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (AccountKeyAuthTypeConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountKeyAuthTypeConnectionProperties)(nil)).Elem()
}

func (o AccountKeyAuthTypeConnectionPropertiesOutput) ToAccountKeyAuthTypeConnectionPropertiesOutput() AccountKeyAuthTypeConnectionPropertiesOutput {
	return o
}

func (o AccountKeyAuthTypeConnectionPropertiesOutput) ToAccountKeyAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) AccountKeyAuthTypeConnectionPropertiesOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'AccountKey'.
func (o AccountKeyAuthTypeConnectionPropertiesOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionProperties) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o AccountKeyAuthTypeConnectionPropertiesOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionProperties) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Account key object for connection credential.
func (o AccountKeyAuthTypeConnectionPropertiesOutput) Credentials() ConnectionAccountKeyPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionProperties) *ConnectionAccountKey { return v.Credentials }).(ConnectionAccountKeyPtrOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionProperties) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionProperties) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionProperties) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o AccountKeyAuthTypeConnectionPropertiesOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionProperties) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionProperties) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionProperties) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionProperties) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionProperties) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionProperties) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

// This connection type covers the account key connection for Azure storage
type AccountKeyAuthTypeConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'AccountKey'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category                *string `pulumi:"category"`
	CreatedByWorkspaceArmId string  `pulumi:"createdByWorkspaceArmId"`
	// Account key object for connection credential.
	Credentials *ConnectionAccountKeyResponse `pulumi:"credentials"`
	Error       *string                       `pulumi:"error"`
	ExpiryTime  *string                       `pulumi:"expiryTime"`
	// Group based on connection category
	Group         string `pulumi:"group"`
	IsSharedToAll *bool  `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

// This connection type covers the account key connection for Azure storage
type AccountKeyAuthTypeConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AccountKeyAuthTypeConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountKeyAuthTypeConnectionPropertiesResponse)(nil)).Elem()
}

func (o AccountKeyAuthTypeConnectionPropertiesResponseOutput) ToAccountKeyAuthTypeConnectionPropertiesResponseOutput() AccountKeyAuthTypeConnectionPropertiesResponseOutput {
	return o
}

func (o AccountKeyAuthTypeConnectionPropertiesResponseOutput) ToAccountKeyAuthTypeConnectionPropertiesResponseOutputWithContext(ctx context.Context) AccountKeyAuthTypeConnectionPropertiesResponseOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'AccountKey'.
func (o AccountKeyAuthTypeConnectionPropertiesResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionPropertiesResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o AccountKeyAuthTypeConnectionPropertiesResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionPropertiesResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesResponseOutput) CreatedByWorkspaceArmId() pulumi.StringOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionPropertiesResponse) string { return v.CreatedByWorkspaceArmId }).(pulumi.StringOutput)
}

// Account key object for connection credential.
func (o AccountKeyAuthTypeConnectionPropertiesResponseOutput) Credentials() ConnectionAccountKeyResponsePtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionPropertiesResponse) *ConnectionAccountKeyResponse {
		return v.Credentials
	}).(ConnectionAccountKeyResponsePtrOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesResponseOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionPropertiesResponse) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesResponseOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionPropertiesResponse) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

// Group based on connection category
func (o AccountKeyAuthTypeConnectionPropertiesResponseOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionPropertiesResponse) string { return v.Group }).(pulumi.StringOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesResponseOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionPropertiesResponse) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o AccountKeyAuthTypeConnectionPropertiesResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionPropertiesResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesResponseOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionPropertiesResponse) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesResponseOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionPropertiesResponse) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesResponseOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionPropertiesResponse) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionPropertiesResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o AccountKeyAuthTypeConnectionPropertiesResponseOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountKeyAuthTypeConnectionPropertiesResponse) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

// Properties of Cognitive Services account.
type AccountProperties struct {
	AllowedFqdnList []string `pulumi:"allowedFqdnList"`
	// The user owned AML workspace properties.
	AmlWorkspace *UserOwnedAmlWorkspace `pulumi:"amlWorkspace"`
	// The api properties for special APIs.
	ApiProperties *ApiProperties `pulumi:"apiProperties"`
	// Optional subdomain name used for token-based authentication.
	CustomSubDomainName *string `pulumi:"customSubDomainName"`
	DisableLocalAuth    *bool   `pulumi:"disableLocalAuth"`
	// The flag to enable dynamic throttling.
	DynamicThrottlingEnabled *bool `pulumi:"dynamicThrottlingEnabled"`
	// The encryption properties for this resource.
	Encryption *Encryption `pulumi:"encryption"`
	// The multiregion settings of Cognitive Services account.
	Locations *MultiRegionSettings `pulumi:"locations"`
	// Resource migration token.
	MigrationToken *string `pulumi:"migrationToken"`
	// A collection of rules governing the accessibility from specific network locations.
	NetworkAcls *NetworkRuleSet `pulumi:"networkAcls"`
	// Whether or not public endpoint access is allowed for this account.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// Cognitive Services Rai Monitor Config.
	RaiMonitorConfig              *RaiMonitorConfig `pulumi:"raiMonitorConfig"`
	Restore                       *bool             `pulumi:"restore"`
	RestrictOutboundNetworkAccess *bool             `pulumi:"restrictOutboundNetworkAccess"`
	// The storage accounts for this resource.
	UserOwnedStorage []UserOwnedStorage `pulumi:"userOwnedStorage"`
}

// Defaults sets the appropriate defaults for AccountProperties
func (val *AccountProperties) Defaults() *AccountProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Encryption = tmp.Encryption.Defaults()

	return &tmp
}

// AccountPropertiesInput is an input type that accepts AccountPropertiesArgs and AccountPropertiesOutput values.
// You can construct a concrete instance of `AccountPropertiesInput` via:
//
//	AccountPropertiesArgs{...}
type AccountPropertiesInput interface {
	pulumi.Input

	ToAccountPropertiesOutput() AccountPropertiesOutput
	ToAccountPropertiesOutputWithContext(context.Context) AccountPropertiesOutput
}

// Properties of Cognitive Services account.
type AccountPropertiesArgs struct {
	AllowedFqdnList pulumi.StringArrayInput `pulumi:"allowedFqdnList"`
	// The user owned AML workspace properties.
	AmlWorkspace UserOwnedAmlWorkspacePtrInput `pulumi:"amlWorkspace"`
	// The api properties for special APIs.
	ApiProperties ApiPropertiesPtrInput `pulumi:"apiProperties"`
	// Optional subdomain name used for token-based authentication.
	CustomSubDomainName pulumi.StringPtrInput `pulumi:"customSubDomainName"`
	DisableLocalAuth    pulumi.BoolPtrInput   `pulumi:"disableLocalAuth"`
	// The flag to enable dynamic throttling.
	DynamicThrottlingEnabled pulumi.BoolPtrInput `pulumi:"dynamicThrottlingEnabled"`
	// The encryption properties for this resource.
	Encryption EncryptionPtrInput `pulumi:"encryption"`
	// The multiregion settings of Cognitive Services account.
	Locations MultiRegionSettingsPtrInput `pulumi:"locations"`
	// Resource migration token.
	MigrationToken pulumi.StringPtrInput `pulumi:"migrationToken"`
	// A collection of rules governing the accessibility from specific network locations.
	NetworkAcls NetworkRuleSetPtrInput `pulumi:"networkAcls"`
	// Whether or not public endpoint access is allowed for this account.
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
	// Cognitive Services Rai Monitor Config.
	RaiMonitorConfig              RaiMonitorConfigPtrInput `pulumi:"raiMonitorConfig"`
	Restore                       pulumi.BoolPtrInput      `pulumi:"restore"`
	RestrictOutboundNetworkAccess pulumi.BoolPtrInput      `pulumi:"restrictOutboundNetworkAccess"`
	// The storage accounts for this resource.
	UserOwnedStorage UserOwnedStorageArrayInput `pulumi:"userOwnedStorage"`
}

// Defaults sets the appropriate defaults for AccountPropertiesArgs
func (val *AccountPropertiesArgs) Defaults() *AccountPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (AccountPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountProperties)(nil)).Elem()
}

func (i AccountPropertiesArgs) ToAccountPropertiesOutput() AccountPropertiesOutput {
	return i.ToAccountPropertiesOutputWithContext(context.Background())
}

func (i AccountPropertiesArgs) ToAccountPropertiesOutputWithContext(ctx context.Context) AccountPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPropertiesOutput)
}

func (i AccountPropertiesArgs) ToAccountPropertiesPtrOutput() AccountPropertiesPtrOutput {
	return i.ToAccountPropertiesPtrOutputWithContext(context.Background())
}

func (i AccountPropertiesArgs) ToAccountPropertiesPtrOutputWithContext(ctx context.Context) AccountPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPropertiesOutput).ToAccountPropertiesPtrOutputWithContext(ctx)
}

// AccountPropertiesPtrInput is an input type that accepts AccountPropertiesArgs, AccountPropertiesPtr and AccountPropertiesPtrOutput values.
// You can construct a concrete instance of `AccountPropertiesPtrInput` via:
//
//	        AccountPropertiesArgs{...}
//
//	or:
//
//	        nil
type AccountPropertiesPtrInput interface {
	pulumi.Input

	ToAccountPropertiesPtrOutput() AccountPropertiesPtrOutput
	ToAccountPropertiesPtrOutputWithContext(context.Context) AccountPropertiesPtrOutput
}

type accountPropertiesPtrType AccountPropertiesArgs

func AccountPropertiesPtr(v *AccountPropertiesArgs) AccountPropertiesPtrInput {
	return (*accountPropertiesPtrType)(v)
}

func (*accountPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountProperties)(nil)).Elem()
}

func (i *accountPropertiesPtrType) ToAccountPropertiesPtrOutput() AccountPropertiesPtrOutput {
	return i.ToAccountPropertiesPtrOutputWithContext(context.Background())
}

func (i *accountPropertiesPtrType) ToAccountPropertiesPtrOutputWithContext(ctx context.Context) AccountPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPropertiesPtrOutput)
}

// Properties of Cognitive Services account.
type AccountPropertiesOutput struct{ *pulumi.OutputState }

func (AccountPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountProperties)(nil)).Elem()
}

func (o AccountPropertiesOutput) ToAccountPropertiesOutput() AccountPropertiesOutput {
	return o
}

func (o AccountPropertiesOutput) ToAccountPropertiesOutputWithContext(ctx context.Context) AccountPropertiesOutput {
	return o
}

func (o AccountPropertiesOutput) ToAccountPropertiesPtrOutput() AccountPropertiesPtrOutput {
	return o.ToAccountPropertiesPtrOutputWithContext(context.Background())
}

func (o AccountPropertiesOutput) ToAccountPropertiesPtrOutputWithContext(ctx context.Context) AccountPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountProperties) *AccountProperties {
		return &v
	}).(AccountPropertiesPtrOutput)
}

func (o AccountPropertiesOutput) AllowedFqdnList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountProperties) []string { return v.AllowedFqdnList }).(pulumi.StringArrayOutput)
}

// The user owned AML workspace properties.
func (o AccountPropertiesOutput) AmlWorkspace() UserOwnedAmlWorkspacePtrOutput {
	return o.ApplyT(func(v AccountProperties) *UserOwnedAmlWorkspace { return v.AmlWorkspace }).(UserOwnedAmlWorkspacePtrOutput)
}

// The api properties for special APIs.
func (o AccountPropertiesOutput) ApiProperties() ApiPropertiesPtrOutput {
	return o.ApplyT(func(v AccountProperties) *ApiProperties { return v.ApiProperties }).(ApiPropertiesPtrOutput)
}

// Optional subdomain name used for token-based authentication.
func (o AccountPropertiesOutput) CustomSubDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountProperties) *string { return v.CustomSubDomainName }).(pulumi.StringPtrOutput)
}

func (o AccountPropertiesOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountProperties) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// The flag to enable dynamic throttling.
func (o AccountPropertiesOutput) DynamicThrottlingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountProperties) *bool { return v.DynamicThrottlingEnabled }).(pulumi.BoolPtrOutput)
}

// The encryption properties for this resource.
func (o AccountPropertiesOutput) Encryption() EncryptionPtrOutput {
	return o.ApplyT(func(v AccountProperties) *Encryption { return v.Encryption }).(EncryptionPtrOutput)
}

// The multiregion settings of Cognitive Services account.
func (o AccountPropertiesOutput) Locations() MultiRegionSettingsPtrOutput {
	return o.ApplyT(func(v AccountProperties) *MultiRegionSettings { return v.Locations }).(MultiRegionSettingsPtrOutput)
}

// Resource migration token.
func (o AccountPropertiesOutput) MigrationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountProperties) *string { return v.MigrationToken }).(pulumi.StringPtrOutput)
}

// A collection of rules governing the accessibility from specific network locations.
func (o AccountPropertiesOutput) NetworkAcls() NetworkRuleSetPtrOutput {
	return o.ApplyT(func(v AccountProperties) *NetworkRuleSet { return v.NetworkAcls }).(NetworkRuleSetPtrOutput)
}

// Whether or not public endpoint access is allowed for this account.
func (o AccountPropertiesOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountProperties) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// Cognitive Services Rai Monitor Config.
func (o AccountPropertiesOutput) RaiMonitorConfig() RaiMonitorConfigPtrOutput {
	return o.ApplyT(func(v AccountProperties) *RaiMonitorConfig { return v.RaiMonitorConfig }).(RaiMonitorConfigPtrOutput)
}

func (o AccountPropertiesOutput) Restore() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountProperties) *bool { return v.Restore }).(pulumi.BoolPtrOutput)
}

func (o AccountPropertiesOutput) RestrictOutboundNetworkAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountProperties) *bool { return v.RestrictOutboundNetworkAccess }).(pulumi.BoolPtrOutput)
}

// The storage accounts for this resource.
func (o AccountPropertiesOutput) UserOwnedStorage() UserOwnedStorageArrayOutput {
	return o.ApplyT(func(v AccountProperties) []UserOwnedStorage { return v.UserOwnedStorage }).(UserOwnedStorageArrayOutput)
}

type AccountPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AccountPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountProperties)(nil)).Elem()
}

func (o AccountPropertiesPtrOutput) ToAccountPropertiesPtrOutput() AccountPropertiesPtrOutput {
	return o
}

func (o AccountPropertiesPtrOutput) ToAccountPropertiesPtrOutputWithContext(ctx context.Context) AccountPropertiesPtrOutput {
	return o
}

func (o AccountPropertiesPtrOutput) Elem() AccountPropertiesOutput {
	return o.ApplyT(func(v *AccountProperties) AccountProperties {
		if v != nil {
			return *v
		}
		var ret AccountProperties
		return ret
	}).(AccountPropertiesOutput)
}

func (o AccountPropertiesPtrOutput) AllowedFqdnList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccountProperties) []string {
		if v == nil {
			return nil
		}
		return v.AllowedFqdnList
	}).(pulumi.StringArrayOutput)
}

// The user owned AML workspace properties.
func (o AccountPropertiesPtrOutput) AmlWorkspace() UserOwnedAmlWorkspacePtrOutput {
	return o.ApplyT(func(v *AccountProperties) *UserOwnedAmlWorkspace {
		if v == nil {
			return nil
		}
		return v.AmlWorkspace
	}).(UserOwnedAmlWorkspacePtrOutput)
}

// The api properties for special APIs.
func (o AccountPropertiesPtrOutput) ApiProperties() ApiPropertiesPtrOutput {
	return o.ApplyT(func(v *AccountProperties) *ApiProperties {
		if v == nil {
			return nil
		}
		return v.ApiProperties
	}).(ApiPropertiesPtrOutput)
}

// Optional subdomain name used for token-based authentication.
func (o AccountPropertiesPtrOutput) CustomSubDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountProperties) *string {
		if v == nil {
			return nil
		}
		return v.CustomSubDomainName
	}).(pulumi.StringPtrOutput)
}

func (o AccountPropertiesPtrOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountProperties) *bool {
		if v == nil {
			return nil
		}
		return v.DisableLocalAuth
	}).(pulumi.BoolPtrOutput)
}

// The flag to enable dynamic throttling.
func (o AccountPropertiesPtrOutput) DynamicThrottlingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountProperties) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicThrottlingEnabled
	}).(pulumi.BoolPtrOutput)
}

// The encryption properties for this resource.
func (o AccountPropertiesPtrOutput) Encryption() EncryptionPtrOutput {
	return o.ApplyT(func(v *AccountProperties) *Encryption {
		if v == nil {
			return nil
		}
		return v.Encryption
	}).(EncryptionPtrOutput)
}

// The multiregion settings of Cognitive Services account.
func (o AccountPropertiesPtrOutput) Locations() MultiRegionSettingsPtrOutput {
	return o.ApplyT(func(v *AccountProperties) *MultiRegionSettings {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(MultiRegionSettingsPtrOutput)
}

// Resource migration token.
func (o AccountPropertiesPtrOutput) MigrationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountProperties) *string {
		if v == nil {
			return nil
		}
		return v.MigrationToken
	}).(pulumi.StringPtrOutput)
}

// A collection of rules governing the accessibility from specific network locations.
func (o AccountPropertiesPtrOutput) NetworkAcls() NetworkRuleSetPtrOutput {
	return o.ApplyT(func(v *AccountProperties) *NetworkRuleSet {
		if v == nil {
			return nil
		}
		return v.NetworkAcls
	}).(NetworkRuleSetPtrOutput)
}

// Whether or not public endpoint access is allowed for this account.
func (o AccountPropertiesPtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountProperties) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

// Cognitive Services Rai Monitor Config.
func (o AccountPropertiesPtrOutput) RaiMonitorConfig() RaiMonitorConfigPtrOutput {
	return o.ApplyT(func(v *AccountProperties) *RaiMonitorConfig {
		if v == nil {
			return nil
		}
		return v.RaiMonitorConfig
	}).(RaiMonitorConfigPtrOutput)
}

func (o AccountPropertiesPtrOutput) Restore() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Restore
	}).(pulumi.BoolPtrOutput)
}

func (o AccountPropertiesPtrOutput) RestrictOutboundNetworkAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountProperties) *bool {
		if v == nil {
			return nil
		}
		return v.RestrictOutboundNetworkAccess
	}).(pulumi.BoolPtrOutput)
}

// The storage accounts for this resource.
func (o AccountPropertiesPtrOutput) UserOwnedStorage() UserOwnedStorageArrayOutput {
	return o.ApplyT(func(v *AccountProperties) []UserOwnedStorage {
		if v == nil {
			return nil
		}
		return v.UserOwnedStorage
	}).(UserOwnedStorageArrayOutput)
}

// Properties of Cognitive Services account.
type AccountPropertiesResponse struct {
	// The abuse penalty.
	AbusePenalty    AbusePenaltyResponse `pulumi:"abusePenalty"`
	AllowedFqdnList []string             `pulumi:"allowedFqdnList"`
	// The user owned AML workspace properties.
	AmlWorkspace *UserOwnedAmlWorkspaceResponse `pulumi:"amlWorkspace"`
	// The api properties for special APIs.
	ApiProperties *ApiPropertiesResponse `pulumi:"apiProperties"`
	// The call rate limit Cognitive Services account.
	CallRateLimit CallRateLimitResponse `pulumi:"callRateLimit"`
	// Gets the capabilities of the cognitive services account. Each item indicates the capability of a specific feature. The values are read-only and for reference only.
	Capabilities []SkuCapabilityResponse `pulumi:"capabilities"`
	// The commitment plan associations of Cognitive Services account.
	CommitmentPlanAssociations []CommitmentPlanAssociationResponse `pulumi:"commitmentPlanAssociations"`
	// Optional subdomain name used for token-based authentication.
	CustomSubDomainName *string `pulumi:"customSubDomainName"`
	// Gets the date of cognitive services account creation.
	DateCreated string `pulumi:"dateCreated"`
	// The deletion date, only available for deleted account.
	DeletionDate     string `pulumi:"deletionDate"`
	DisableLocalAuth *bool  `pulumi:"disableLocalAuth"`
	// The flag to enable dynamic throttling.
	DynamicThrottlingEnabled *bool `pulumi:"dynamicThrottlingEnabled"`
	// The encryption properties for this resource.
	Encryption *EncryptionResponse `pulumi:"encryption"`
	// Endpoint of the created account.
	Endpoint  string            `pulumi:"endpoint"`
	Endpoints map[string]string `pulumi:"endpoints"`
	// The internal identifier (deprecated, do not use this property).
	InternalId string `pulumi:"internalId"`
	// If the resource is migrated from an existing key.
	IsMigrated bool `pulumi:"isMigrated"`
	// The multiregion settings of Cognitive Services account.
	Locations *MultiRegionSettingsResponse `pulumi:"locations"`
	// Resource migration token.
	MigrationToken *string `pulumi:"migrationToken"`
	// A collection of rules governing the accessibility from specific network locations.
	NetworkAcls *NetworkRuleSetResponse `pulumi:"networkAcls"`
	// The private endpoint connection associated with the Cognitive Services account.
	PrivateEndpointConnections []PrivateEndpointConnectionResponse `pulumi:"privateEndpointConnections"`
	// Gets the status of the cognitive services account at the time the operation was called.
	ProvisioningState string `pulumi:"provisioningState"`
	// Whether or not public endpoint access is allowed for this account.
	PublicNetworkAccess *string            `pulumi:"publicNetworkAccess"`
	QuotaLimit          QuotaLimitResponse `pulumi:"quotaLimit"`
	// Cognitive Services Rai Monitor Config.
	RaiMonitorConfig              *RaiMonitorConfigResponse `pulumi:"raiMonitorConfig"`
	RestrictOutboundNetworkAccess *bool                     `pulumi:"restrictOutboundNetworkAccess"`
	// The scheduled purge date, only available for deleted account.
	ScheduledPurgeDate string `pulumi:"scheduledPurgeDate"`
	// Sku change info of account.
	SkuChangeInfo SkuChangeInfoResponse `pulumi:"skuChangeInfo"`
	// The storage accounts for this resource.
	UserOwnedStorage []UserOwnedStorageResponse `pulumi:"userOwnedStorage"`
}

// Defaults sets the appropriate defaults for AccountPropertiesResponse
func (val *AccountPropertiesResponse) Defaults() *AccountPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Encryption = tmp.Encryption.Defaults()

	return &tmp
}

// Properties of Cognitive Services account.
type AccountPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AccountPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountPropertiesResponse)(nil)).Elem()
}

func (o AccountPropertiesResponseOutput) ToAccountPropertiesResponseOutput() AccountPropertiesResponseOutput {
	return o
}

func (o AccountPropertiesResponseOutput) ToAccountPropertiesResponseOutputWithContext(ctx context.Context) AccountPropertiesResponseOutput {
	return o
}

// The abuse penalty.
func (o AccountPropertiesResponseOutput) AbusePenalty() AbusePenaltyResponseOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) AbusePenaltyResponse { return v.AbusePenalty }).(AbusePenaltyResponseOutput)
}

func (o AccountPropertiesResponseOutput) AllowedFqdnList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) []string { return v.AllowedFqdnList }).(pulumi.StringArrayOutput)
}

// The user owned AML workspace properties.
func (o AccountPropertiesResponseOutput) AmlWorkspace() UserOwnedAmlWorkspaceResponsePtrOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) *UserOwnedAmlWorkspaceResponse { return v.AmlWorkspace }).(UserOwnedAmlWorkspaceResponsePtrOutput)
}

// The api properties for special APIs.
func (o AccountPropertiesResponseOutput) ApiProperties() ApiPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) *ApiPropertiesResponse { return v.ApiProperties }).(ApiPropertiesResponsePtrOutput)
}

// The call rate limit Cognitive Services account.
func (o AccountPropertiesResponseOutput) CallRateLimit() CallRateLimitResponseOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) CallRateLimitResponse { return v.CallRateLimit }).(CallRateLimitResponseOutput)
}

// Gets the capabilities of the cognitive services account. Each item indicates the capability of a specific feature. The values are read-only and for reference only.
func (o AccountPropertiesResponseOutput) Capabilities() SkuCapabilityResponseArrayOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) []SkuCapabilityResponse { return v.Capabilities }).(SkuCapabilityResponseArrayOutput)
}

// The commitment plan associations of Cognitive Services account.
func (o AccountPropertiesResponseOutput) CommitmentPlanAssociations() CommitmentPlanAssociationResponseArrayOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) []CommitmentPlanAssociationResponse {
		return v.CommitmentPlanAssociations
	}).(CommitmentPlanAssociationResponseArrayOutput)
}

// Optional subdomain name used for token-based authentication.
func (o AccountPropertiesResponseOutput) CustomSubDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) *string { return v.CustomSubDomainName }).(pulumi.StringPtrOutput)
}

// Gets the date of cognitive services account creation.
func (o AccountPropertiesResponseOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) string { return v.DateCreated }).(pulumi.StringOutput)
}

// The deletion date, only available for deleted account.
func (o AccountPropertiesResponseOutput) DeletionDate() pulumi.StringOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) string { return v.DeletionDate }).(pulumi.StringOutput)
}

func (o AccountPropertiesResponseOutput) DisableLocalAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) *bool { return v.DisableLocalAuth }).(pulumi.BoolPtrOutput)
}

// The flag to enable dynamic throttling.
func (o AccountPropertiesResponseOutput) DynamicThrottlingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) *bool { return v.DynamicThrottlingEnabled }).(pulumi.BoolPtrOutput)
}

// The encryption properties for this resource.
func (o AccountPropertiesResponseOutput) Encryption() EncryptionResponsePtrOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) *EncryptionResponse { return v.Encryption }).(EncryptionResponsePtrOutput)
}

// Endpoint of the created account.
func (o AccountPropertiesResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o AccountPropertiesResponseOutput) Endpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) map[string]string { return v.Endpoints }).(pulumi.StringMapOutput)
}

// The internal identifier (deprecated, do not use this property).
func (o AccountPropertiesResponseOutput) InternalId() pulumi.StringOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) string { return v.InternalId }).(pulumi.StringOutput)
}

// If the resource is migrated from an existing key.
func (o AccountPropertiesResponseOutput) IsMigrated() pulumi.BoolOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) bool { return v.IsMigrated }).(pulumi.BoolOutput)
}

// The multiregion settings of Cognitive Services account.
func (o AccountPropertiesResponseOutput) Locations() MultiRegionSettingsResponsePtrOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) *MultiRegionSettingsResponse { return v.Locations }).(MultiRegionSettingsResponsePtrOutput)
}

// Resource migration token.
func (o AccountPropertiesResponseOutput) MigrationToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) *string { return v.MigrationToken }).(pulumi.StringPtrOutput)
}

// A collection of rules governing the accessibility from specific network locations.
func (o AccountPropertiesResponseOutput) NetworkAcls() NetworkRuleSetResponsePtrOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) *NetworkRuleSetResponse { return v.NetworkAcls }).(NetworkRuleSetResponsePtrOutput)
}

// The private endpoint connection associated with the Cognitive Services account.
func (o AccountPropertiesResponseOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) []PrivateEndpointConnectionResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionResponseArrayOutput)
}

// Gets the status of the cognitive services account at the time the operation was called.
func (o AccountPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Whether or not public endpoint access is allowed for this account.
func (o AccountPropertiesResponseOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

func (o AccountPropertiesResponseOutput) QuotaLimit() QuotaLimitResponseOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) QuotaLimitResponse { return v.QuotaLimit }).(QuotaLimitResponseOutput)
}

// Cognitive Services Rai Monitor Config.
func (o AccountPropertiesResponseOutput) RaiMonitorConfig() RaiMonitorConfigResponsePtrOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) *RaiMonitorConfigResponse { return v.RaiMonitorConfig }).(RaiMonitorConfigResponsePtrOutput)
}

func (o AccountPropertiesResponseOutput) RestrictOutboundNetworkAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) *bool { return v.RestrictOutboundNetworkAccess }).(pulumi.BoolPtrOutput)
}

// The scheduled purge date, only available for deleted account.
func (o AccountPropertiesResponseOutput) ScheduledPurgeDate() pulumi.StringOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) string { return v.ScheduledPurgeDate }).(pulumi.StringOutput)
}

// Sku change info of account.
func (o AccountPropertiesResponseOutput) SkuChangeInfo() SkuChangeInfoResponseOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) SkuChangeInfoResponse { return v.SkuChangeInfo }).(SkuChangeInfoResponseOutput)
}

// The storage accounts for this resource.
func (o AccountPropertiesResponseOutput) UserOwnedStorage() UserOwnedStorageResponseArrayOutput {
	return o.ApplyT(func(v AccountPropertiesResponse) []UserOwnedStorageResponse { return v.UserOwnedStorage }).(UserOwnedStorageResponseArrayOutput)
}

// This connection type covers the generic ApiKey auth connection categories, for examples:
// AzureOpenAI:
//
//	Category:= AzureOpenAI
//	AuthType:= ApiKey (as type discriminator)
//	Credentials:= {ApiKey} as .ApiKey
//	Target:= {ApiBase}
//
// CognitiveService:
//
//	Category:= CognitiveService
//	AuthType:= ApiKey (as type discriminator)
//	Credentials:= {SubscriptionKey} as ApiKey
//	Target:= ServiceRegion={serviceRegion}
//
// CognitiveSearch:
//
//	Category:= CognitiveSearch
//	AuthType:= ApiKey (as type discriminator)
//	Credentials:= {Key} as ApiKey
//	Target:= {Endpoint}
//
// Use Metadata property bag for ApiType, ApiVersion, Kind and other metadata fields
type ApiKeyAuthConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'ApiKey'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category *string `pulumi:"category"`
	// Api key object for connection credential.
	Credentials   *ConnectionApiKey `pulumi:"credentials"`
	Error         *string           `pulumi:"error"`
	ExpiryTime    *string           `pulumi:"expiryTime"`
	IsSharedToAll *bool             `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

// ApiKeyAuthConnectionPropertiesInput is an input type that accepts ApiKeyAuthConnectionPropertiesArgs and ApiKeyAuthConnectionPropertiesOutput values.
// You can construct a concrete instance of `ApiKeyAuthConnectionPropertiesInput` via:
//
//	ApiKeyAuthConnectionPropertiesArgs{...}
type ApiKeyAuthConnectionPropertiesInput interface {
	pulumi.Input

	ToApiKeyAuthConnectionPropertiesOutput() ApiKeyAuthConnectionPropertiesOutput
	ToApiKeyAuthConnectionPropertiesOutputWithContext(context.Context) ApiKeyAuthConnectionPropertiesOutput
}

// This connection type covers the generic ApiKey auth connection categories, for examples:
// AzureOpenAI:
//
//	Category:= AzureOpenAI
//	AuthType:= ApiKey (as type discriminator)
//	Credentials:= {ApiKey} as .ApiKey
//	Target:= {ApiBase}
//
// CognitiveService:
//
//	Category:= CognitiveService
//	AuthType:= ApiKey (as type discriminator)
//	Credentials:= {SubscriptionKey} as ApiKey
//	Target:= ServiceRegion={serviceRegion}
//
// CognitiveSearch:
//
//	Category:= CognitiveSearch
//	AuthType:= ApiKey (as type discriminator)
//	Credentials:= {Key} as ApiKey
//	Target:= {Endpoint}
//
// Use Metadata property bag for ApiType, ApiVersion, Kind and other metadata fields
type ApiKeyAuthConnectionPropertiesArgs struct {
	// Authentication type of the connection target
	// Expected value is 'ApiKey'.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Category of the connection
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Api key object for connection credential.
	Credentials   ConnectionApiKeyPtrInput `pulumi:"credentials"`
	Error         pulumi.StringPtrInput    `pulumi:"error"`
	ExpiryTime    pulumi.StringPtrInput    `pulumi:"expiryTime"`
	IsSharedToAll pulumi.BoolPtrInput      `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    pulumi.StringMapInput   `pulumi:"metadata"`
	PeRequirement               pulumi.StringPtrInput   `pulumi:"peRequirement"`
	PeStatus                    pulumi.StringPtrInput   `pulumi:"peStatus"`
	SharedUserList              pulumi.StringArrayInput `pulumi:"sharedUserList"`
	Target                      pulumi.StringPtrInput   `pulumi:"target"`
	UseWorkspaceManagedIdentity pulumi.BoolPtrInput     `pulumi:"useWorkspaceManagedIdentity"`
}

func (ApiKeyAuthConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyAuthConnectionProperties)(nil)).Elem()
}

func (i ApiKeyAuthConnectionPropertiesArgs) ToApiKeyAuthConnectionPropertiesOutput() ApiKeyAuthConnectionPropertiesOutput {
	return i.ToApiKeyAuthConnectionPropertiesOutputWithContext(context.Background())
}

func (i ApiKeyAuthConnectionPropertiesArgs) ToApiKeyAuthConnectionPropertiesOutputWithContext(ctx context.Context) ApiKeyAuthConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyAuthConnectionPropertiesOutput)
}

// This connection type covers the generic ApiKey auth connection categories, for examples:
// AzureOpenAI:
//
//	Category:= AzureOpenAI
//	AuthType:= ApiKey (as type discriminator)
//	Credentials:= {ApiKey} as .ApiKey
//	Target:= {ApiBase}
//
// CognitiveService:
//
//	Category:= CognitiveService
//	AuthType:= ApiKey (as type discriminator)
//	Credentials:= {SubscriptionKey} as ApiKey
//	Target:= ServiceRegion={serviceRegion}
//
// CognitiveSearch:
//
//	Category:= CognitiveSearch
//	AuthType:= ApiKey (as type discriminator)
//	Credentials:= {Key} as ApiKey
//	Target:= {Endpoint}
//
// Use Metadata property bag for ApiType, ApiVersion, Kind and other metadata fields
type ApiKeyAuthConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (ApiKeyAuthConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyAuthConnectionProperties)(nil)).Elem()
}

func (o ApiKeyAuthConnectionPropertiesOutput) ToApiKeyAuthConnectionPropertiesOutput() ApiKeyAuthConnectionPropertiesOutput {
	return o
}

func (o ApiKeyAuthConnectionPropertiesOutput) ToApiKeyAuthConnectionPropertiesOutputWithContext(ctx context.Context) ApiKeyAuthConnectionPropertiesOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'ApiKey'.
func (o ApiKeyAuthConnectionPropertiesOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionProperties) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o ApiKeyAuthConnectionPropertiesOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionProperties) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Api key object for connection credential.
func (o ApiKeyAuthConnectionPropertiesOutput) Credentials() ConnectionApiKeyPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionProperties) *ConnectionApiKey { return v.Credentials }).(ConnectionApiKeyPtrOutput)
}

func (o ApiKeyAuthConnectionPropertiesOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionProperties) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o ApiKeyAuthConnectionPropertiesOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionProperties) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

func (o ApiKeyAuthConnectionPropertiesOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionProperties) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o ApiKeyAuthConnectionPropertiesOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionProperties) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o ApiKeyAuthConnectionPropertiesOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionProperties) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o ApiKeyAuthConnectionPropertiesOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionProperties) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o ApiKeyAuthConnectionPropertiesOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionProperties) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o ApiKeyAuthConnectionPropertiesOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionProperties) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o ApiKeyAuthConnectionPropertiesOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionProperties) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

// This connection type covers the generic ApiKey auth connection categories, for examples:
// AzureOpenAI:
//
//	Category:= AzureOpenAI
//	AuthType:= ApiKey (as type discriminator)
//	Credentials:= {ApiKey} as .ApiKey
//	Target:= {ApiBase}
//
// CognitiveService:
//
//	Category:= CognitiveService
//	AuthType:= ApiKey (as type discriminator)
//	Credentials:= {SubscriptionKey} as ApiKey
//	Target:= ServiceRegion={serviceRegion}
//
// CognitiveSearch:
//
//	Category:= CognitiveSearch
//	AuthType:= ApiKey (as type discriminator)
//	Credentials:= {Key} as ApiKey
//	Target:= {Endpoint}
//
// Use Metadata property bag for ApiType, ApiVersion, Kind and other metadata fields
type ApiKeyAuthConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'ApiKey'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category                *string `pulumi:"category"`
	CreatedByWorkspaceArmId string  `pulumi:"createdByWorkspaceArmId"`
	// Api key object for connection credential.
	Credentials *ConnectionApiKeyResponse `pulumi:"credentials"`
	Error       *string                   `pulumi:"error"`
	ExpiryTime  *string                   `pulumi:"expiryTime"`
	// Group based on connection category
	Group         string `pulumi:"group"`
	IsSharedToAll *bool  `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

// This connection type covers the generic ApiKey auth connection categories, for examples:
// AzureOpenAI:
//
//	Category:= AzureOpenAI
//	AuthType:= ApiKey (as type discriminator)
//	Credentials:= {ApiKey} as .ApiKey
//	Target:= {ApiBase}
//
// CognitiveService:
//
//	Category:= CognitiveService
//	AuthType:= ApiKey (as type discriminator)
//	Credentials:= {SubscriptionKey} as ApiKey
//	Target:= ServiceRegion={serviceRegion}
//
// CognitiveSearch:
//
//	Category:= CognitiveSearch
//	AuthType:= ApiKey (as type discriminator)
//	Credentials:= {Key} as ApiKey
//	Target:= {Endpoint}
//
// Use Metadata property bag for ApiType, ApiVersion, Kind and other metadata fields
type ApiKeyAuthConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApiKeyAuthConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyAuthConnectionPropertiesResponse)(nil)).Elem()
}

func (o ApiKeyAuthConnectionPropertiesResponseOutput) ToApiKeyAuthConnectionPropertiesResponseOutput() ApiKeyAuthConnectionPropertiesResponseOutput {
	return o
}

func (o ApiKeyAuthConnectionPropertiesResponseOutput) ToApiKeyAuthConnectionPropertiesResponseOutputWithContext(ctx context.Context) ApiKeyAuthConnectionPropertiesResponseOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'ApiKey'.
func (o ApiKeyAuthConnectionPropertiesResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionPropertiesResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o ApiKeyAuthConnectionPropertiesResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionPropertiesResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o ApiKeyAuthConnectionPropertiesResponseOutput) CreatedByWorkspaceArmId() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionPropertiesResponse) string { return v.CreatedByWorkspaceArmId }).(pulumi.StringOutput)
}

// Api key object for connection credential.
func (o ApiKeyAuthConnectionPropertiesResponseOutput) Credentials() ConnectionApiKeyResponsePtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionPropertiesResponse) *ConnectionApiKeyResponse { return v.Credentials }).(ConnectionApiKeyResponsePtrOutput)
}

func (o ApiKeyAuthConnectionPropertiesResponseOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionPropertiesResponse) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o ApiKeyAuthConnectionPropertiesResponseOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionPropertiesResponse) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

// Group based on connection category
func (o ApiKeyAuthConnectionPropertiesResponseOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionPropertiesResponse) string { return v.Group }).(pulumi.StringOutput)
}

func (o ApiKeyAuthConnectionPropertiesResponseOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionPropertiesResponse) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o ApiKeyAuthConnectionPropertiesResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionPropertiesResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o ApiKeyAuthConnectionPropertiesResponseOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionPropertiesResponse) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o ApiKeyAuthConnectionPropertiesResponseOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionPropertiesResponse) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o ApiKeyAuthConnectionPropertiesResponseOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionPropertiesResponse) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o ApiKeyAuthConnectionPropertiesResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionPropertiesResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o ApiKeyAuthConnectionPropertiesResponseOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiKeyAuthConnectionPropertiesResponse) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

// The api properties for special APIs.
type ApiProperties struct {
	// (Metrics Advisor Only) The Azure AD Client Id (Application Id).
	AadClientId *string `pulumi:"aadClientId"`
	// (Metrics Advisor Only) The Azure AD Tenant Id.
	AadTenantId *string `pulumi:"aadTenantId"`
	// (Personalization Only) The flag to enable statistics of Bing Search.
	EventHubConnectionString *string `pulumi:"eventHubConnectionString"`
	// (QnAMaker Only) The Azure Search endpoint id of QnAMaker.
	QnaAzureSearchEndpointId *string `pulumi:"qnaAzureSearchEndpointId"`
	// (QnAMaker Only) The Azure Search endpoint key of QnAMaker.
	QnaAzureSearchEndpointKey *string `pulumi:"qnaAzureSearchEndpointKey"`
	// (QnAMaker Only) The runtime endpoint of QnAMaker.
	QnaRuntimeEndpoint *string `pulumi:"qnaRuntimeEndpoint"`
	// (Bing Search Only) The flag to enable statistics of Bing Search.
	StatisticsEnabled *bool `pulumi:"statisticsEnabled"`
	// (Personalization Only) The storage account connection string.
	StorageAccountConnectionString *string `pulumi:"storageAccountConnectionString"`
	// (Metrics Advisor Only) The super user of Metrics Advisor.
	SuperUser *string `pulumi:"superUser"`
	// (Metrics Advisor Only) The website name of Metrics Advisor.
	WebsiteName *string `pulumi:"websiteName"`
}

// ApiPropertiesInput is an input type that accepts ApiPropertiesArgs and ApiPropertiesOutput values.
// You can construct a concrete instance of `ApiPropertiesInput` via:
//
//	ApiPropertiesArgs{...}
type ApiPropertiesInput interface {
	pulumi.Input

	ToApiPropertiesOutput() ApiPropertiesOutput
	ToApiPropertiesOutputWithContext(context.Context) ApiPropertiesOutput
}

// The api properties for special APIs.
type ApiPropertiesArgs struct {
	// (Metrics Advisor Only) The Azure AD Client Id (Application Id).
	AadClientId pulumi.StringPtrInput `pulumi:"aadClientId"`
	// (Metrics Advisor Only) The Azure AD Tenant Id.
	AadTenantId pulumi.StringPtrInput `pulumi:"aadTenantId"`
	// (Personalization Only) The flag to enable statistics of Bing Search.
	EventHubConnectionString pulumi.StringPtrInput `pulumi:"eventHubConnectionString"`
	// (QnAMaker Only) The Azure Search endpoint id of QnAMaker.
	QnaAzureSearchEndpointId pulumi.StringPtrInput `pulumi:"qnaAzureSearchEndpointId"`
	// (QnAMaker Only) The Azure Search endpoint key of QnAMaker.
	QnaAzureSearchEndpointKey pulumi.StringPtrInput `pulumi:"qnaAzureSearchEndpointKey"`
	// (QnAMaker Only) The runtime endpoint of QnAMaker.
	QnaRuntimeEndpoint pulumi.StringPtrInput `pulumi:"qnaRuntimeEndpoint"`
	// (Bing Search Only) The flag to enable statistics of Bing Search.
	StatisticsEnabled pulumi.BoolPtrInput `pulumi:"statisticsEnabled"`
	// (Personalization Only) The storage account connection string.
	StorageAccountConnectionString pulumi.StringPtrInput `pulumi:"storageAccountConnectionString"`
	// (Metrics Advisor Only) The super user of Metrics Advisor.
	SuperUser pulumi.StringPtrInput `pulumi:"superUser"`
	// (Metrics Advisor Only) The website name of Metrics Advisor.
	WebsiteName pulumi.StringPtrInput `pulumi:"websiteName"`
}

func (ApiPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiProperties)(nil)).Elem()
}

func (i ApiPropertiesArgs) ToApiPropertiesOutput() ApiPropertiesOutput {
	return i.ToApiPropertiesOutputWithContext(context.Background())
}

func (i ApiPropertiesArgs) ToApiPropertiesOutputWithContext(ctx context.Context) ApiPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiPropertiesOutput)
}

func (i ApiPropertiesArgs) ToApiPropertiesPtrOutput() ApiPropertiesPtrOutput {
	return i.ToApiPropertiesPtrOutputWithContext(context.Background())
}

func (i ApiPropertiesArgs) ToApiPropertiesPtrOutputWithContext(ctx context.Context) ApiPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiPropertiesOutput).ToApiPropertiesPtrOutputWithContext(ctx)
}

// ApiPropertiesPtrInput is an input type that accepts ApiPropertiesArgs, ApiPropertiesPtr and ApiPropertiesPtrOutput values.
// You can construct a concrete instance of `ApiPropertiesPtrInput` via:
//
//	        ApiPropertiesArgs{...}
//
//	or:
//
//	        nil
type ApiPropertiesPtrInput interface {
	pulumi.Input

	ToApiPropertiesPtrOutput() ApiPropertiesPtrOutput
	ToApiPropertiesPtrOutputWithContext(context.Context) ApiPropertiesPtrOutput
}

type apiPropertiesPtrType ApiPropertiesArgs

func ApiPropertiesPtr(v *ApiPropertiesArgs) ApiPropertiesPtrInput {
	return (*apiPropertiesPtrType)(v)
}

func (*apiPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiProperties)(nil)).Elem()
}

func (i *apiPropertiesPtrType) ToApiPropertiesPtrOutput() ApiPropertiesPtrOutput {
	return i.ToApiPropertiesPtrOutputWithContext(context.Background())
}

func (i *apiPropertiesPtrType) ToApiPropertiesPtrOutputWithContext(ctx context.Context) ApiPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiPropertiesPtrOutput)
}

// The api properties for special APIs.
type ApiPropertiesOutput struct{ *pulumi.OutputState }

func (ApiPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiProperties)(nil)).Elem()
}

func (o ApiPropertiesOutput) ToApiPropertiesOutput() ApiPropertiesOutput {
	return o
}

func (o ApiPropertiesOutput) ToApiPropertiesOutputWithContext(ctx context.Context) ApiPropertiesOutput {
	return o
}

func (o ApiPropertiesOutput) ToApiPropertiesPtrOutput() ApiPropertiesPtrOutput {
	return o.ToApiPropertiesPtrOutputWithContext(context.Background())
}

func (o ApiPropertiesOutput) ToApiPropertiesPtrOutputWithContext(ctx context.Context) ApiPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiProperties) *ApiProperties {
		return &v
	}).(ApiPropertiesPtrOutput)
}

// (Metrics Advisor Only) The Azure AD Client Id (Application Id).
func (o ApiPropertiesOutput) AadClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiProperties) *string { return v.AadClientId }).(pulumi.StringPtrOutput)
}

// (Metrics Advisor Only) The Azure AD Tenant Id.
func (o ApiPropertiesOutput) AadTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiProperties) *string { return v.AadTenantId }).(pulumi.StringPtrOutput)
}

// (Personalization Only) The flag to enable statistics of Bing Search.
func (o ApiPropertiesOutput) EventHubConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiProperties) *string { return v.EventHubConnectionString }).(pulumi.StringPtrOutput)
}

// (QnAMaker Only) The Azure Search endpoint id of QnAMaker.
func (o ApiPropertiesOutput) QnaAzureSearchEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiProperties) *string { return v.QnaAzureSearchEndpointId }).(pulumi.StringPtrOutput)
}

// (QnAMaker Only) The Azure Search endpoint key of QnAMaker.
func (o ApiPropertiesOutput) QnaAzureSearchEndpointKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiProperties) *string { return v.QnaAzureSearchEndpointKey }).(pulumi.StringPtrOutput)
}

// (QnAMaker Only) The runtime endpoint of QnAMaker.
func (o ApiPropertiesOutput) QnaRuntimeEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiProperties) *string { return v.QnaRuntimeEndpoint }).(pulumi.StringPtrOutput)
}

// (Bing Search Only) The flag to enable statistics of Bing Search.
func (o ApiPropertiesOutput) StatisticsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiProperties) *bool { return v.StatisticsEnabled }).(pulumi.BoolPtrOutput)
}

// (Personalization Only) The storage account connection string.
func (o ApiPropertiesOutput) StorageAccountConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiProperties) *string { return v.StorageAccountConnectionString }).(pulumi.StringPtrOutput)
}

// (Metrics Advisor Only) The super user of Metrics Advisor.
func (o ApiPropertiesOutput) SuperUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiProperties) *string { return v.SuperUser }).(pulumi.StringPtrOutput)
}

// (Metrics Advisor Only) The website name of Metrics Advisor.
func (o ApiPropertiesOutput) WebsiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiProperties) *string { return v.WebsiteName }).(pulumi.StringPtrOutput)
}

type ApiPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApiPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiProperties)(nil)).Elem()
}

func (o ApiPropertiesPtrOutput) ToApiPropertiesPtrOutput() ApiPropertiesPtrOutput {
	return o
}

func (o ApiPropertiesPtrOutput) ToApiPropertiesPtrOutputWithContext(ctx context.Context) ApiPropertiesPtrOutput {
	return o
}

func (o ApiPropertiesPtrOutput) Elem() ApiPropertiesOutput {
	return o.ApplyT(func(v *ApiProperties) ApiProperties {
		if v != nil {
			return *v
		}
		var ret ApiProperties
		return ret
	}).(ApiPropertiesOutput)
}

// (Metrics Advisor Only) The Azure AD Client Id (Application Id).
func (o ApiPropertiesPtrOutput) AadClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiProperties) *string {
		if v == nil {
			return nil
		}
		return v.AadClientId
	}).(pulumi.StringPtrOutput)
}

// (Metrics Advisor Only) The Azure AD Tenant Id.
func (o ApiPropertiesPtrOutput) AadTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiProperties) *string {
		if v == nil {
			return nil
		}
		return v.AadTenantId
	}).(pulumi.StringPtrOutput)
}

// (Personalization Only) The flag to enable statistics of Bing Search.
func (o ApiPropertiesPtrOutput) EventHubConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiProperties) *string {
		if v == nil {
			return nil
		}
		return v.EventHubConnectionString
	}).(pulumi.StringPtrOutput)
}

// (QnAMaker Only) The Azure Search endpoint id of QnAMaker.
func (o ApiPropertiesPtrOutput) QnaAzureSearchEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiProperties) *string {
		if v == nil {
			return nil
		}
		return v.QnaAzureSearchEndpointId
	}).(pulumi.StringPtrOutput)
}

// (QnAMaker Only) The Azure Search endpoint key of QnAMaker.
func (o ApiPropertiesPtrOutput) QnaAzureSearchEndpointKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiProperties) *string {
		if v == nil {
			return nil
		}
		return v.QnaAzureSearchEndpointKey
	}).(pulumi.StringPtrOutput)
}

// (QnAMaker Only) The runtime endpoint of QnAMaker.
func (o ApiPropertiesPtrOutput) QnaRuntimeEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiProperties) *string {
		if v == nil {
			return nil
		}
		return v.QnaRuntimeEndpoint
	}).(pulumi.StringPtrOutput)
}

// (Bing Search Only) The flag to enable statistics of Bing Search.
func (o ApiPropertiesPtrOutput) StatisticsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiProperties) *bool {
		if v == nil {
			return nil
		}
		return v.StatisticsEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Personalization Only) The storage account connection string.
func (o ApiPropertiesPtrOutput) StorageAccountConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiProperties) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountConnectionString
	}).(pulumi.StringPtrOutput)
}

// (Metrics Advisor Only) The super user of Metrics Advisor.
func (o ApiPropertiesPtrOutput) SuperUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiProperties) *string {
		if v == nil {
			return nil
		}
		return v.SuperUser
	}).(pulumi.StringPtrOutput)
}

// (Metrics Advisor Only) The website name of Metrics Advisor.
func (o ApiPropertiesPtrOutput) WebsiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiProperties) *string {
		if v == nil {
			return nil
		}
		return v.WebsiteName
	}).(pulumi.StringPtrOutput)
}

// The api properties for special APIs.
type ApiPropertiesResponse struct {
	// (Metrics Advisor Only) The Azure AD Client Id (Application Id).
	AadClientId *string `pulumi:"aadClientId"`
	// (Metrics Advisor Only) The Azure AD Tenant Id.
	AadTenantId *string `pulumi:"aadTenantId"`
	// (Personalization Only) The flag to enable statistics of Bing Search.
	EventHubConnectionString *string `pulumi:"eventHubConnectionString"`
	// (QnAMaker Only) The Azure Search endpoint id of QnAMaker.
	QnaAzureSearchEndpointId *string `pulumi:"qnaAzureSearchEndpointId"`
	// (QnAMaker Only) The Azure Search endpoint key of QnAMaker.
	QnaAzureSearchEndpointKey *string `pulumi:"qnaAzureSearchEndpointKey"`
	// (QnAMaker Only) The runtime endpoint of QnAMaker.
	QnaRuntimeEndpoint *string `pulumi:"qnaRuntimeEndpoint"`
	// (Bing Search Only) The flag to enable statistics of Bing Search.
	StatisticsEnabled *bool `pulumi:"statisticsEnabled"`
	// (Personalization Only) The storage account connection string.
	StorageAccountConnectionString *string `pulumi:"storageAccountConnectionString"`
	// (Metrics Advisor Only) The super user of Metrics Advisor.
	SuperUser *string `pulumi:"superUser"`
	// (Metrics Advisor Only) The website name of Metrics Advisor.
	WebsiteName *string `pulumi:"websiteName"`
}

// The api properties for special APIs.
type ApiPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApiPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiPropertiesResponse)(nil)).Elem()
}

func (o ApiPropertiesResponseOutput) ToApiPropertiesResponseOutput() ApiPropertiesResponseOutput {
	return o
}

func (o ApiPropertiesResponseOutput) ToApiPropertiesResponseOutputWithContext(ctx context.Context) ApiPropertiesResponseOutput {
	return o
}

// (Metrics Advisor Only) The Azure AD Client Id (Application Id).
func (o ApiPropertiesResponseOutput) AadClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiPropertiesResponse) *string { return v.AadClientId }).(pulumi.StringPtrOutput)
}

// (Metrics Advisor Only) The Azure AD Tenant Id.
func (o ApiPropertiesResponseOutput) AadTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiPropertiesResponse) *string { return v.AadTenantId }).(pulumi.StringPtrOutput)
}

// (Personalization Only) The flag to enable statistics of Bing Search.
func (o ApiPropertiesResponseOutput) EventHubConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiPropertiesResponse) *string { return v.EventHubConnectionString }).(pulumi.StringPtrOutput)
}

// (QnAMaker Only) The Azure Search endpoint id of QnAMaker.
func (o ApiPropertiesResponseOutput) QnaAzureSearchEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiPropertiesResponse) *string { return v.QnaAzureSearchEndpointId }).(pulumi.StringPtrOutput)
}

// (QnAMaker Only) The Azure Search endpoint key of QnAMaker.
func (o ApiPropertiesResponseOutput) QnaAzureSearchEndpointKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiPropertiesResponse) *string { return v.QnaAzureSearchEndpointKey }).(pulumi.StringPtrOutput)
}

// (QnAMaker Only) The runtime endpoint of QnAMaker.
func (o ApiPropertiesResponseOutput) QnaRuntimeEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiPropertiesResponse) *string { return v.QnaRuntimeEndpoint }).(pulumi.StringPtrOutput)
}

// (Bing Search Only) The flag to enable statistics of Bing Search.
func (o ApiPropertiesResponseOutput) StatisticsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiPropertiesResponse) *bool { return v.StatisticsEnabled }).(pulumi.BoolPtrOutput)
}

// (Personalization Only) The storage account connection string.
func (o ApiPropertiesResponseOutput) StorageAccountConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiPropertiesResponse) *string { return v.StorageAccountConnectionString }).(pulumi.StringPtrOutput)
}

// (Metrics Advisor Only) The super user of Metrics Advisor.
func (o ApiPropertiesResponseOutput) SuperUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiPropertiesResponse) *string { return v.SuperUser }).(pulumi.StringPtrOutput)
}

// (Metrics Advisor Only) The website name of Metrics Advisor.
func (o ApiPropertiesResponseOutput) WebsiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiPropertiesResponse) *string { return v.WebsiteName }).(pulumi.StringPtrOutput)
}

type ApiPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiPropertiesResponse)(nil)).Elem()
}

func (o ApiPropertiesResponsePtrOutput) ToApiPropertiesResponsePtrOutput() ApiPropertiesResponsePtrOutput {
	return o
}

func (o ApiPropertiesResponsePtrOutput) ToApiPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiPropertiesResponsePtrOutput {
	return o
}

func (o ApiPropertiesResponsePtrOutput) Elem() ApiPropertiesResponseOutput {
	return o.ApplyT(func(v *ApiPropertiesResponse) ApiPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ApiPropertiesResponse
		return ret
	}).(ApiPropertiesResponseOutput)
}

// (Metrics Advisor Only) The Azure AD Client Id (Application Id).
func (o ApiPropertiesResponsePtrOutput) AadClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadClientId
	}).(pulumi.StringPtrOutput)
}

// (Metrics Advisor Only) The Azure AD Tenant Id.
func (o ApiPropertiesResponsePtrOutput) AadTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadTenantId
	}).(pulumi.StringPtrOutput)
}

// (Personalization Only) The flag to enable statistics of Bing Search.
func (o ApiPropertiesResponsePtrOutput) EventHubConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.EventHubConnectionString
	}).(pulumi.StringPtrOutput)
}

// (QnAMaker Only) The Azure Search endpoint id of QnAMaker.
func (o ApiPropertiesResponsePtrOutput) QnaAzureSearchEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.QnaAzureSearchEndpointId
	}).(pulumi.StringPtrOutput)
}

// (QnAMaker Only) The Azure Search endpoint key of QnAMaker.
func (o ApiPropertiesResponsePtrOutput) QnaAzureSearchEndpointKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.QnaAzureSearchEndpointKey
	}).(pulumi.StringPtrOutput)
}

// (QnAMaker Only) The runtime endpoint of QnAMaker.
func (o ApiPropertiesResponsePtrOutput) QnaRuntimeEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.QnaRuntimeEndpoint
	}).(pulumi.StringPtrOutput)
}

// (Bing Search Only) The flag to enable statistics of Bing Search.
func (o ApiPropertiesResponsePtrOutput) StatisticsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.StatisticsEnabled
	}).(pulumi.BoolPtrOutput)
}

// (Personalization Only) The storage account connection string.
func (o ApiPropertiesResponsePtrOutput) StorageAccountConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountConnectionString
	}).(pulumi.StringPtrOutput)
}

// (Metrics Advisor Only) The super user of Metrics Advisor.
func (o ApiPropertiesResponsePtrOutput) SuperUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SuperUser
	}).(pulumi.StringPtrOutput)
}

// (Metrics Advisor Only) The website name of Metrics Advisor.
func (o ApiPropertiesResponsePtrOutput) WebsiteName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WebsiteName
	}).(pulumi.StringPtrOutput)
}

// The call rate limit Cognitive Services account.
type CallRateLimitResponse struct {
	// The count value of Call Rate Limit.
	Count *float64 `pulumi:"count"`
	// The renewal period in seconds of Call Rate Limit.
	RenewalPeriod *float64                 `pulumi:"renewalPeriod"`
	Rules         []ThrottlingRuleResponse `pulumi:"rules"`
}

// The call rate limit Cognitive Services account.
type CallRateLimitResponseOutput struct{ *pulumi.OutputState }

func (CallRateLimitResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CallRateLimitResponse)(nil)).Elem()
}

func (o CallRateLimitResponseOutput) ToCallRateLimitResponseOutput() CallRateLimitResponseOutput {
	return o
}

func (o CallRateLimitResponseOutput) ToCallRateLimitResponseOutputWithContext(ctx context.Context) CallRateLimitResponseOutput {
	return o
}

// The count value of Call Rate Limit.
func (o CallRateLimitResponseOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CallRateLimitResponse) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

// The renewal period in seconds of Call Rate Limit.
func (o CallRateLimitResponseOutput) RenewalPeriod() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CallRateLimitResponse) *float64 { return v.RenewalPeriod }).(pulumi.Float64PtrOutput)
}

func (o CallRateLimitResponseOutput) Rules() ThrottlingRuleResponseArrayOutput {
	return o.ApplyT(func(v CallRateLimitResponse) []ThrottlingRuleResponse { return v.Rules }).(ThrottlingRuleResponseArrayOutput)
}

type CallRateLimitResponsePtrOutput struct{ *pulumi.OutputState }

func (CallRateLimitResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CallRateLimitResponse)(nil)).Elem()
}

func (o CallRateLimitResponsePtrOutput) ToCallRateLimitResponsePtrOutput() CallRateLimitResponsePtrOutput {
	return o
}

func (o CallRateLimitResponsePtrOutput) ToCallRateLimitResponsePtrOutputWithContext(ctx context.Context) CallRateLimitResponsePtrOutput {
	return o
}

func (o CallRateLimitResponsePtrOutput) Elem() CallRateLimitResponseOutput {
	return o.ApplyT(func(v *CallRateLimitResponse) CallRateLimitResponse {
		if v != nil {
			return *v
		}
		var ret CallRateLimitResponse
		return ret
	}).(CallRateLimitResponseOutput)
}

// The count value of Call Rate Limit.
func (o CallRateLimitResponsePtrOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CallRateLimitResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.Float64PtrOutput)
}

// The renewal period in seconds of Call Rate Limit.
func (o CallRateLimitResponsePtrOutput) RenewalPeriod() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CallRateLimitResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.RenewalPeriod
	}).(pulumi.Float64PtrOutput)
}

func (o CallRateLimitResponsePtrOutput) Rules() ThrottlingRuleResponseArrayOutput {
	return o.ApplyT(func(v *CallRateLimitResponse) []ThrottlingRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ThrottlingRuleResponseArrayOutput)
}

type CapabilityHost struct {
	// List of AI services connections.
	AiServicesConnections []string `pulumi:"aiServicesConnections"`
	// Kind of this capability host.
	CapabilityHostKind *string `pulumi:"capabilityHostKind"`
	// Customer subnet info to help set up this capability host.
	CustomerSubnet *string `pulumi:"customerSubnet"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// List of Storage connections.
	StorageConnections []string `pulumi:"storageConnections"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
	// List of Thread storage connections.
	ThreadStorageConnections []string `pulumi:"threadStorageConnections"`
	// List of VectorStore connections.
	VectorStoreConnections []string `pulumi:"vectorStoreConnections"`
}

// Defaults sets the appropriate defaults for CapabilityHost
func (val *CapabilityHost) Defaults() *CapabilityHost {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CapabilityHostKind == nil {
		capabilityHostKind_ := "Agents"
		tmp.CapabilityHostKind = &capabilityHostKind_
	}
	return &tmp
}

// CapabilityHostInput is an input type that accepts CapabilityHostArgs and CapabilityHostOutput values.
// You can construct a concrete instance of `CapabilityHostInput` via:
//
//	CapabilityHostArgs{...}
type CapabilityHostInput interface {
	pulumi.Input

	ToCapabilityHostOutput() CapabilityHostOutput
	ToCapabilityHostOutputWithContext(context.Context) CapabilityHostOutput
}

type CapabilityHostArgs struct {
	// List of AI services connections.
	AiServicesConnections pulumi.StringArrayInput `pulumi:"aiServicesConnections"`
	// Kind of this capability host.
	CapabilityHostKind pulumi.StringPtrInput `pulumi:"capabilityHostKind"`
	// Customer subnet info to help set up this capability host.
	CustomerSubnet pulumi.StringPtrInput `pulumi:"customerSubnet"`
	// The asset description text.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of Storage connections.
	StorageConnections pulumi.StringArrayInput `pulumi:"storageConnections"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// List of Thread storage connections.
	ThreadStorageConnections pulumi.StringArrayInput `pulumi:"threadStorageConnections"`
	// List of VectorStore connections.
	VectorStoreConnections pulumi.StringArrayInput `pulumi:"vectorStoreConnections"`
}

// Defaults sets the appropriate defaults for CapabilityHostArgs
func (val *CapabilityHostArgs) Defaults() *CapabilityHostArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CapabilityHostKind == nil {
		tmp.CapabilityHostKind = pulumi.StringPtr("Agents")
	}
	return &tmp
}
func (CapabilityHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityHost)(nil)).Elem()
}

func (i CapabilityHostArgs) ToCapabilityHostOutput() CapabilityHostOutput {
	return i.ToCapabilityHostOutputWithContext(context.Background())
}

func (i CapabilityHostArgs) ToCapabilityHostOutputWithContext(ctx context.Context) CapabilityHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityHostOutput)
}

type CapabilityHostOutput struct{ *pulumi.OutputState }

func (CapabilityHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityHost)(nil)).Elem()
}

func (o CapabilityHostOutput) ToCapabilityHostOutput() CapabilityHostOutput {
	return o
}

func (o CapabilityHostOutput) ToCapabilityHostOutputWithContext(ctx context.Context) CapabilityHostOutput {
	return o
}

// List of AI services connections.
func (o CapabilityHostOutput) AiServicesConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CapabilityHost) []string { return v.AiServicesConnections }).(pulumi.StringArrayOutput)
}

// Kind of this capability host.
func (o CapabilityHostOutput) CapabilityHostKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityHost) *string { return v.CapabilityHostKind }).(pulumi.StringPtrOutput)
}

// Customer subnet info to help set up this capability host.
func (o CapabilityHostOutput) CustomerSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityHost) *string { return v.CustomerSubnet }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o CapabilityHostOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityHost) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of Storage connections.
func (o CapabilityHostOutput) StorageConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CapabilityHost) []string { return v.StorageConnections }).(pulumi.StringArrayOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CapabilityHostOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CapabilityHost) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// List of Thread storage connections.
func (o CapabilityHostOutput) ThreadStorageConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CapabilityHost) []string { return v.ThreadStorageConnections }).(pulumi.StringArrayOutput)
}

// List of VectorStore connections.
func (o CapabilityHostOutput) VectorStoreConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CapabilityHost) []string { return v.VectorStoreConnections }).(pulumi.StringArrayOutput)
}

type CapabilityHostResponse struct {
	// List of AI services connections.
	AiServicesConnections []string `pulumi:"aiServicesConnections"`
	// Kind of this capability host.
	CapabilityHostKind *string `pulumi:"capabilityHostKind"`
	// Customer subnet info to help set up this capability host.
	CustomerSubnet *string `pulumi:"customerSubnet"`
	// The asset description text.
	Description *string `pulumi:"description"`
	// Provisioning state for the CapabilityHost.
	ProvisioningState string `pulumi:"provisioningState"`
	// List of Storage connections.
	StorageConnections []string `pulumi:"storageConnections"`
	// Tag dictionary. Tags can be added, removed, and updated.
	Tags map[string]string `pulumi:"tags"`
	// List of Thread storage connections.
	ThreadStorageConnections []string `pulumi:"threadStorageConnections"`
	// List of VectorStore connections.
	VectorStoreConnections []string `pulumi:"vectorStoreConnections"`
}

// Defaults sets the appropriate defaults for CapabilityHostResponse
func (val *CapabilityHostResponse) Defaults() *CapabilityHostResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CapabilityHostKind == nil {
		capabilityHostKind_ := "Agents"
		tmp.CapabilityHostKind = &capabilityHostKind_
	}
	return &tmp
}

type CapabilityHostResponseOutput struct{ *pulumi.OutputState }

func (CapabilityHostResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityHostResponse)(nil)).Elem()
}

func (o CapabilityHostResponseOutput) ToCapabilityHostResponseOutput() CapabilityHostResponseOutput {
	return o
}

func (o CapabilityHostResponseOutput) ToCapabilityHostResponseOutputWithContext(ctx context.Context) CapabilityHostResponseOutput {
	return o
}

// List of AI services connections.
func (o CapabilityHostResponseOutput) AiServicesConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CapabilityHostResponse) []string { return v.AiServicesConnections }).(pulumi.StringArrayOutput)
}

// Kind of this capability host.
func (o CapabilityHostResponseOutput) CapabilityHostKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityHostResponse) *string { return v.CapabilityHostKind }).(pulumi.StringPtrOutput)
}

// Customer subnet info to help set up this capability host.
func (o CapabilityHostResponseOutput) CustomerSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityHostResponse) *string { return v.CustomerSubnet }).(pulumi.StringPtrOutput)
}

// The asset description text.
func (o CapabilityHostResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityHostResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Provisioning state for the CapabilityHost.
func (o CapabilityHostResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v CapabilityHostResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of Storage connections.
func (o CapabilityHostResponseOutput) StorageConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CapabilityHostResponse) []string { return v.StorageConnections }).(pulumi.StringArrayOutput)
}

// Tag dictionary. Tags can be added, removed, and updated.
func (o CapabilityHostResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v CapabilityHostResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// List of Thread storage connections.
func (o CapabilityHostResponseOutput) ThreadStorageConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CapabilityHostResponse) []string { return v.ThreadStorageConnections }).(pulumi.StringArrayOutput)
}

// List of VectorStore connections.
func (o CapabilityHostResponseOutput) VectorStoreConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CapabilityHostResponse) []string { return v.VectorStoreConnections }).(pulumi.StringArrayOutput)
}

// Cognitive Services account commitment period.
type CommitmentPeriod struct {
	// Commitment period commitment count.
	Count *int `pulumi:"count"`
	// Commitment period commitment tier.
	Tier *string `pulumi:"tier"`
}

// CommitmentPeriodInput is an input type that accepts CommitmentPeriodArgs and CommitmentPeriodOutput values.
// You can construct a concrete instance of `CommitmentPeriodInput` via:
//
//	CommitmentPeriodArgs{...}
type CommitmentPeriodInput interface {
	pulumi.Input

	ToCommitmentPeriodOutput() CommitmentPeriodOutput
	ToCommitmentPeriodOutputWithContext(context.Context) CommitmentPeriodOutput
}

// Cognitive Services account commitment period.
type CommitmentPeriodArgs struct {
	// Commitment period commitment count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Commitment period commitment tier.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (CommitmentPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentPeriod)(nil)).Elem()
}

func (i CommitmentPeriodArgs) ToCommitmentPeriodOutput() CommitmentPeriodOutput {
	return i.ToCommitmentPeriodOutputWithContext(context.Background())
}

func (i CommitmentPeriodArgs) ToCommitmentPeriodOutputWithContext(ctx context.Context) CommitmentPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentPeriodOutput)
}

func (i CommitmentPeriodArgs) ToCommitmentPeriodPtrOutput() CommitmentPeriodPtrOutput {
	return i.ToCommitmentPeriodPtrOutputWithContext(context.Background())
}

func (i CommitmentPeriodArgs) ToCommitmentPeriodPtrOutputWithContext(ctx context.Context) CommitmentPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentPeriodOutput).ToCommitmentPeriodPtrOutputWithContext(ctx)
}

// CommitmentPeriodPtrInput is an input type that accepts CommitmentPeriodArgs, CommitmentPeriodPtr and CommitmentPeriodPtrOutput values.
// You can construct a concrete instance of `CommitmentPeriodPtrInput` via:
//
//	        CommitmentPeriodArgs{...}
//
//	or:
//
//	        nil
type CommitmentPeriodPtrInput interface {
	pulumi.Input

	ToCommitmentPeriodPtrOutput() CommitmentPeriodPtrOutput
	ToCommitmentPeriodPtrOutputWithContext(context.Context) CommitmentPeriodPtrOutput
}

type commitmentPeriodPtrType CommitmentPeriodArgs

func CommitmentPeriodPtr(v *CommitmentPeriodArgs) CommitmentPeriodPtrInput {
	return (*commitmentPeriodPtrType)(v)
}

func (*commitmentPeriodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CommitmentPeriod)(nil)).Elem()
}

func (i *commitmentPeriodPtrType) ToCommitmentPeriodPtrOutput() CommitmentPeriodPtrOutput {
	return i.ToCommitmentPeriodPtrOutputWithContext(context.Background())
}

func (i *commitmentPeriodPtrType) ToCommitmentPeriodPtrOutputWithContext(ctx context.Context) CommitmentPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentPeriodPtrOutput)
}

// Cognitive Services account commitment period.
type CommitmentPeriodOutput struct{ *pulumi.OutputState }

func (CommitmentPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentPeriod)(nil)).Elem()
}

func (o CommitmentPeriodOutput) ToCommitmentPeriodOutput() CommitmentPeriodOutput {
	return o
}

func (o CommitmentPeriodOutput) ToCommitmentPeriodOutputWithContext(ctx context.Context) CommitmentPeriodOutput {
	return o
}

func (o CommitmentPeriodOutput) ToCommitmentPeriodPtrOutput() CommitmentPeriodPtrOutput {
	return o.ToCommitmentPeriodPtrOutputWithContext(context.Background())
}

func (o CommitmentPeriodOutput) ToCommitmentPeriodPtrOutputWithContext(ctx context.Context) CommitmentPeriodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CommitmentPeriod) *CommitmentPeriod {
		return &v
	}).(CommitmentPeriodPtrOutput)
}

// Commitment period commitment count.
func (o CommitmentPeriodOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CommitmentPeriod) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Commitment period commitment tier.
func (o CommitmentPeriodOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitmentPeriod) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type CommitmentPeriodPtrOutput struct{ *pulumi.OutputState }

func (CommitmentPeriodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommitmentPeriod)(nil)).Elem()
}

func (o CommitmentPeriodPtrOutput) ToCommitmentPeriodPtrOutput() CommitmentPeriodPtrOutput {
	return o
}

func (o CommitmentPeriodPtrOutput) ToCommitmentPeriodPtrOutputWithContext(ctx context.Context) CommitmentPeriodPtrOutput {
	return o
}

func (o CommitmentPeriodPtrOutput) Elem() CommitmentPeriodOutput {
	return o.ApplyT(func(v *CommitmentPeriod) CommitmentPeriod {
		if v != nil {
			return *v
		}
		var ret CommitmentPeriod
		return ret
	}).(CommitmentPeriodOutput)
}

// Commitment period commitment count.
func (o CommitmentPeriodPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CommitmentPeriod) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Commitment period commitment tier.
func (o CommitmentPeriodPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommitmentPeriod) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Cognitive Services account commitment period.
type CommitmentPeriodResponse struct {
	// Commitment period commitment count.
	Count *int `pulumi:"count"`
	// Commitment period end date.
	EndDate string `pulumi:"endDate"`
	// Cognitive Services account commitment quota.
	Quota CommitmentQuotaResponse `pulumi:"quota"`
	// Commitment period start date.
	StartDate string `pulumi:"startDate"`
	// Commitment period commitment tier.
	Tier *string `pulumi:"tier"`
}

// Cognitive Services account commitment period.
type CommitmentPeriodResponseOutput struct{ *pulumi.OutputState }

func (CommitmentPeriodResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentPeriodResponse)(nil)).Elem()
}

func (o CommitmentPeriodResponseOutput) ToCommitmentPeriodResponseOutput() CommitmentPeriodResponseOutput {
	return o
}

func (o CommitmentPeriodResponseOutput) ToCommitmentPeriodResponseOutputWithContext(ctx context.Context) CommitmentPeriodResponseOutput {
	return o
}

// Commitment period commitment count.
func (o CommitmentPeriodResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CommitmentPeriodResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Commitment period end date.
func (o CommitmentPeriodResponseOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentPeriodResponse) string { return v.EndDate }).(pulumi.StringOutput)
}

// Cognitive Services account commitment quota.
func (o CommitmentPeriodResponseOutput) Quota() CommitmentQuotaResponseOutput {
	return o.ApplyT(func(v CommitmentPeriodResponse) CommitmentQuotaResponse { return v.Quota }).(CommitmentQuotaResponseOutput)
}

// Commitment period start date.
func (o CommitmentPeriodResponseOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentPeriodResponse) string { return v.StartDate }).(pulumi.StringOutput)
}

// Commitment period commitment tier.
func (o CommitmentPeriodResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitmentPeriodResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type CommitmentPeriodResponsePtrOutput struct{ *pulumi.OutputState }

func (CommitmentPeriodResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommitmentPeriodResponse)(nil)).Elem()
}

func (o CommitmentPeriodResponsePtrOutput) ToCommitmentPeriodResponsePtrOutput() CommitmentPeriodResponsePtrOutput {
	return o
}

func (o CommitmentPeriodResponsePtrOutput) ToCommitmentPeriodResponsePtrOutputWithContext(ctx context.Context) CommitmentPeriodResponsePtrOutput {
	return o
}

func (o CommitmentPeriodResponsePtrOutput) Elem() CommitmentPeriodResponseOutput {
	return o.ApplyT(func(v *CommitmentPeriodResponse) CommitmentPeriodResponse {
		if v != nil {
			return *v
		}
		var ret CommitmentPeriodResponse
		return ret
	}).(CommitmentPeriodResponseOutput)
}

// Commitment period commitment count.
func (o CommitmentPeriodResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CommitmentPeriodResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Commitment period end date.
func (o CommitmentPeriodResponsePtrOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommitmentPeriodResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EndDate
	}).(pulumi.StringPtrOutput)
}

// Cognitive Services account commitment quota.
func (o CommitmentPeriodResponsePtrOutput) Quota() CommitmentQuotaResponsePtrOutput {
	return o.ApplyT(func(v *CommitmentPeriodResponse) *CommitmentQuotaResponse {
		if v == nil {
			return nil
		}
		return &v.Quota
	}).(CommitmentQuotaResponsePtrOutput)
}

// Commitment period start date.
func (o CommitmentPeriodResponsePtrOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommitmentPeriodResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StartDate
	}).(pulumi.StringPtrOutput)
}

// Commitment period commitment tier.
func (o CommitmentPeriodResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommitmentPeriodResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The commitment plan association.
type CommitmentPlanAssociationResponse struct {
	// The Azure resource id of the commitment plan.
	CommitmentPlanId *string `pulumi:"commitmentPlanId"`
	// The location of of the commitment plan.
	CommitmentPlanLocation *string `pulumi:"commitmentPlanLocation"`
}

// The commitment plan association.
type CommitmentPlanAssociationResponseOutput struct{ *pulumi.OutputState }

func (CommitmentPlanAssociationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentPlanAssociationResponse)(nil)).Elem()
}

func (o CommitmentPlanAssociationResponseOutput) ToCommitmentPlanAssociationResponseOutput() CommitmentPlanAssociationResponseOutput {
	return o
}

func (o CommitmentPlanAssociationResponseOutput) ToCommitmentPlanAssociationResponseOutputWithContext(ctx context.Context) CommitmentPlanAssociationResponseOutput {
	return o
}

// The Azure resource id of the commitment plan.
func (o CommitmentPlanAssociationResponseOutput) CommitmentPlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitmentPlanAssociationResponse) *string { return v.CommitmentPlanId }).(pulumi.StringPtrOutput)
}

// The location of of the commitment plan.
func (o CommitmentPlanAssociationResponseOutput) CommitmentPlanLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitmentPlanAssociationResponse) *string { return v.CommitmentPlanLocation }).(pulumi.StringPtrOutput)
}

type CommitmentPlanAssociationResponseArrayOutput struct{ *pulumi.OutputState }

func (CommitmentPlanAssociationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommitmentPlanAssociationResponse)(nil)).Elem()
}

func (o CommitmentPlanAssociationResponseArrayOutput) ToCommitmentPlanAssociationResponseArrayOutput() CommitmentPlanAssociationResponseArrayOutput {
	return o
}

func (o CommitmentPlanAssociationResponseArrayOutput) ToCommitmentPlanAssociationResponseArrayOutputWithContext(ctx context.Context) CommitmentPlanAssociationResponseArrayOutput {
	return o
}

func (o CommitmentPlanAssociationResponseArrayOutput) Index(i pulumi.IntInput) CommitmentPlanAssociationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommitmentPlanAssociationResponse {
		return vs[0].([]CommitmentPlanAssociationResponse)[vs[1].(int)]
	}).(CommitmentPlanAssociationResponseOutput)
}

// Properties of Cognitive Services account commitment plan.
type CommitmentPlanProperties struct {
	// AutoRenew commitment plan.
	AutoRenew *bool `pulumi:"autoRenew"`
	// Commitment plan guid.
	CommitmentPlanGuid *string `pulumi:"commitmentPlanGuid"`
	// Cognitive Services account commitment period.
	Current *CommitmentPeriod `pulumi:"current"`
	// Account hosting model.
	HostingModel *string `pulumi:"hostingModel"`
	// Cognitive Services account commitment period.
	Next *CommitmentPeriod `pulumi:"next"`
	// Commitment plan type.
	PlanType *string `pulumi:"planType"`
}

// CommitmentPlanPropertiesInput is an input type that accepts CommitmentPlanPropertiesArgs and CommitmentPlanPropertiesOutput values.
// You can construct a concrete instance of `CommitmentPlanPropertiesInput` via:
//
//	CommitmentPlanPropertiesArgs{...}
type CommitmentPlanPropertiesInput interface {
	pulumi.Input

	ToCommitmentPlanPropertiesOutput() CommitmentPlanPropertiesOutput
	ToCommitmentPlanPropertiesOutputWithContext(context.Context) CommitmentPlanPropertiesOutput
}

// Properties of Cognitive Services account commitment plan.
type CommitmentPlanPropertiesArgs struct {
	// AutoRenew commitment plan.
	AutoRenew pulumi.BoolPtrInput `pulumi:"autoRenew"`
	// Commitment plan guid.
	CommitmentPlanGuid pulumi.StringPtrInput `pulumi:"commitmentPlanGuid"`
	// Cognitive Services account commitment period.
	Current CommitmentPeriodPtrInput `pulumi:"current"`
	// Account hosting model.
	HostingModel pulumi.StringPtrInput `pulumi:"hostingModel"`
	// Cognitive Services account commitment period.
	Next CommitmentPeriodPtrInput `pulumi:"next"`
	// Commitment plan type.
	PlanType pulumi.StringPtrInput `pulumi:"planType"`
}

func (CommitmentPlanPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentPlanProperties)(nil)).Elem()
}

func (i CommitmentPlanPropertiesArgs) ToCommitmentPlanPropertiesOutput() CommitmentPlanPropertiesOutput {
	return i.ToCommitmentPlanPropertiesOutputWithContext(context.Background())
}

func (i CommitmentPlanPropertiesArgs) ToCommitmentPlanPropertiesOutputWithContext(ctx context.Context) CommitmentPlanPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentPlanPropertiesOutput)
}

func (i CommitmentPlanPropertiesArgs) ToCommitmentPlanPropertiesPtrOutput() CommitmentPlanPropertiesPtrOutput {
	return i.ToCommitmentPlanPropertiesPtrOutputWithContext(context.Background())
}

func (i CommitmentPlanPropertiesArgs) ToCommitmentPlanPropertiesPtrOutputWithContext(ctx context.Context) CommitmentPlanPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentPlanPropertiesOutput).ToCommitmentPlanPropertiesPtrOutputWithContext(ctx)
}

// CommitmentPlanPropertiesPtrInput is an input type that accepts CommitmentPlanPropertiesArgs, CommitmentPlanPropertiesPtr and CommitmentPlanPropertiesPtrOutput values.
// You can construct a concrete instance of `CommitmentPlanPropertiesPtrInput` via:
//
//	        CommitmentPlanPropertiesArgs{...}
//
//	or:
//
//	        nil
type CommitmentPlanPropertiesPtrInput interface {
	pulumi.Input

	ToCommitmentPlanPropertiesPtrOutput() CommitmentPlanPropertiesPtrOutput
	ToCommitmentPlanPropertiesPtrOutputWithContext(context.Context) CommitmentPlanPropertiesPtrOutput
}

type commitmentPlanPropertiesPtrType CommitmentPlanPropertiesArgs

func CommitmentPlanPropertiesPtr(v *CommitmentPlanPropertiesArgs) CommitmentPlanPropertiesPtrInput {
	return (*commitmentPlanPropertiesPtrType)(v)
}

func (*commitmentPlanPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CommitmentPlanProperties)(nil)).Elem()
}

func (i *commitmentPlanPropertiesPtrType) ToCommitmentPlanPropertiesPtrOutput() CommitmentPlanPropertiesPtrOutput {
	return i.ToCommitmentPlanPropertiesPtrOutputWithContext(context.Background())
}

func (i *commitmentPlanPropertiesPtrType) ToCommitmentPlanPropertiesPtrOutputWithContext(ctx context.Context) CommitmentPlanPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentPlanPropertiesPtrOutput)
}

// Properties of Cognitive Services account commitment plan.
type CommitmentPlanPropertiesOutput struct{ *pulumi.OutputState }

func (CommitmentPlanPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentPlanProperties)(nil)).Elem()
}

func (o CommitmentPlanPropertiesOutput) ToCommitmentPlanPropertiesOutput() CommitmentPlanPropertiesOutput {
	return o
}

func (o CommitmentPlanPropertiesOutput) ToCommitmentPlanPropertiesOutputWithContext(ctx context.Context) CommitmentPlanPropertiesOutput {
	return o
}

func (o CommitmentPlanPropertiesOutput) ToCommitmentPlanPropertiesPtrOutput() CommitmentPlanPropertiesPtrOutput {
	return o.ToCommitmentPlanPropertiesPtrOutputWithContext(context.Background())
}

func (o CommitmentPlanPropertiesOutput) ToCommitmentPlanPropertiesPtrOutputWithContext(ctx context.Context) CommitmentPlanPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CommitmentPlanProperties) *CommitmentPlanProperties {
		return &v
	}).(CommitmentPlanPropertiesPtrOutput)
}

// AutoRenew commitment plan.
func (o CommitmentPlanPropertiesOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CommitmentPlanProperties) *bool { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// Commitment plan guid.
func (o CommitmentPlanPropertiesOutput) CommitmentPlanGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitmentPlanProperties) *string { return v.CommitmentPlanGuid }).(pulumi.StringPtrOutput)
}

// Cognitive Services account commitment period.
func (o CommitmentPlanPropertiesOutput) Current() CommitmentPeriodPtrOutput {
	return o.ApplyT(func(v CommitmentPlanProperties) *CommitmentPeriod { return v.Current }).(CommitmentPeriodPtrOutput)
}

// Account hosting model.
func (o CommitmentPlanPropertiesOutput) HostingModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitmentPlanProperties) *string { return v.HostingModel }).(pulumi.StringPtrOutput)
}

// Cognitive Services account commitment period.
func (o CommitmentPlanPropertiesOutput) Next() CommitmentPeriodPtrOutput {
	return o.ApplyT(func(v CommitmentPlanProperties) *CommitmentPeriod { return v.Next }).(CommitmentPeriodPtrOutput)
}

// Commitment plan type.
func (o CommitmentPlanPropertiesOutput) PlanType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitmentPlanProperties) *string { return v.PlanType }).(pulumi.StringPtrOutput)
}

type CommitmentPlanPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CommitmentPlanPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommitmentPlanProperties)(nil)).Elem()
}

func (o CommitmentPlanPropertiesPtrOutput) ToCommitmentPlanPropertiesPtrOutput() CommitmentPlanPropertiesPtrOutput {
	return o
}

func (o CommitmentPlanPropertiesPtrOutput) ToCommitmentPlanPropertiesPtrOutputWithContext(ctx context.Context) CommitmentPlanPropertiesPtrOutput {
	return o
}

func (o CommitmentPlanPropertiesPtrOutput) Elem() CommitmentPlanPropertiesOutput {
	return o.ApplyT(func(v *CommitmentPlanProperties) CommitmentPlanProperties {
		if v != nil {
			return *v
		}
		var ret CommitmentPlanProperties
		return ret
	}).(CommitmentPlanPropertiesOutput)
}

// AutoRenew commitment plan.
func (o CommitmentPlanPropertiesPtrOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CommitmentPlanProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AutoRenew
	}).(pulumi.BoolPtrOutput)
}

// Commitment plan guid.
func (o CommitmentPlanPropertiesPtrOutput) CommitmentPlanGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommitmentPlanProperties) *string {
		if v == nil {
			return nil
		}
		return v.CommitmentPlanGuid
	}).(pulumi.StringPtrOutput)
}

// Cognitive Services account commitment period.
func (o CommitmentPlanPropertiesPtrOutput) Current() CommitmentPeriodPtrOutput {
	return o.ApplyT(func(v *CommitmentPlanProperties) *CommitmentPeriod {
		if v == nil {
			return nil
		}
		return v.Current
	}).(CommitmentPeriodPtrOutput)
}

// Account hosting model.
func (o CommitmentPlanPropertiesPtrOutput) HostingModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommitmentPlanProperties) *string {
		if v == nil {
			return nil
		}
		return v.HostingModel
	}).(pulumi.StringPtrOutput)
}

// Cognitive Services account commitment period.
func (o CommitmentPlanPropertiesPtrOutput) Next() CommitmentPeriodPtrOutput {
	return o.ApplyT(func(v *CommitmentPlanProperties) *CommitmentPeriod {
		if v == nil {
			return nil
		}
		return v.Next
	}).(CommitmentPeriodPtrOutput)
}

// Commitment plan type.
func (o CommitmentPlanPropertiesPtrOutput) PlanType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommitmentPlanProperties) *string {
		if v == nil {
			return nil
		}
		return v.PlanType
	}).(pulumi.StringPtrOutput)
}

// Properties of Cognitive Services account commitment plan.
type CommitmentPlanPropertiesResponse struct {
	// AutoRenew commitment plan.
	AutoRenew *bool `pulumi:"autoRenew"`
	// Commitment plan guid.
	CommitmentPlanGuid *string `pulumi:"commitmentPlanGuid"`
	// Cognitive Services account commitment period.
	Current *CommitmentPeriodResponse `pulumi:"current"`
	// Account hosting model.
	HostingModel *string `pulumi:"hostingModel"`
	// Cognitive Services account commitment period.
	Last CommitmentPeriodResponse `pulumi:"last"`
	// Cognitive Services account commitment period.
	Next *CommitmentPeriodResponse `pulumi:"next"`
	// Commitment plan type.
	PlanType *string `pulumi:"planType"`
	// The list of ProvisioningIssue.
	ProvisioningIssues []string `pulumi:"provisioningIssues"`
	// Gets the status of the resource at the time the operation was called.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Properties of Cognitive Services account commitment plan.
type CommitmentPlanPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CommitmentPlanPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentPlanPropertiesResponse)(nil)).Elem()
}

func (o CommitmentPlanPropertiesResponseOutput) ToCommitmentPlanPropertiesResponseOutput() CommitmentPlanPropertiesResponseOutput {
	return o
}

func (o CommitmentPlanPropertiesResponseOutput) ToCommitmentPlanPropertiesResponseOutputWithContext(ctx context.Context) CommitmentPlanPropertiesResponseOutput {
	return o
}

// AutoRenew commitment plan.
func (o CommitmentPlanPropertiesResponseOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CommitmentPlanPropertiesResponse) *bool { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// Commitment plan guid.
func (o CommitmentPlanPropertiesResponseOutput) CommitmentPlanGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitmentPlanPropertiesResponse) *string { return v.CommitmentPlanGuid }).(pulumi.StringPtrOutput)
}

// Cognitive Services account commitment period.
func (o CommitmentPlanPropertiesResponseOutput) Current() CommitmentPeriodResponsePtrOutput {
	return o.ApplyT(func(v CommitmentPlanPropertiesResponse) *CommitmentPeriodResponse { return v.Current }).(CommitmentPeriodResponsePtrOutput)
}

// Account hosting model.
func (o CommitmentPlanPropertiesResponseOutput) HostingModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitmentPlanPropertiesResponse) *string { return v.HostingModel }).(pulumi.StringPtrOutput)
}

// Cognitive Services account commitment period.
func (o CommitmentPlanPropertiesResponseOutput) Last() CommitmentPeriodResponseOutput {
	return o.ApplyT(func(v CommitmentPlanPropertiesResponse) CommitmentPeriodResponse { return v.Last }).(CommitmentPeriodResponseOutput)
}

// Cognitive Services account commitment period.
func (o CommitmentPlanPropertiesResponseOutput) Next() CommitmentPeriodResponsePtrOutput {
	return o.ApplyT(func(v CommitmentPlanPropertiesResponse) *CommitmentPeriodResponse { return v.Next }).(CommitmentPeriodResponsePtrOutput)
}

// Commitment plan type.
func (o CommitmentPlanPropertiesResponseOutput) PlanType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitmentPlanPropertiesResponse) *string { return v.PlanType }).(pulumi.StringPtrOutput)
}

// The list of ProvisioningIssue.
func (o CommitmentPlanPropertiesResponseOutput) ProvisioningIssues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CommitmentPlanPropertiesResponse) []string { return v.ProvisioningIssues }).(pulumi.StringArrayOutput)
}

// Gets the status of the resource at the time the operation was called.
func (o CommitmentPlanPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentPlanPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Cognitive Services account commitment quota.
type CommitmentQuotaResponse struct {
	// Commitment quota quantity.
	Quantity *float64 `pulumi:"quantity"`
	// Commitment quota unit.
	Unit *string `pulumi:"unit"`
}

// Cognitive Services account commitment quota.
type CommitmentQuotaResponseOutput struct{ *pulumi.OutputState }

func (CommitmentQuotaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentQuotaResponse)(nil)).Elem()
}

func (o CommitmentQuotaResponseOutput) ToCommitmentQuotaResponseOutput() CommitmentQuotaResponseOutput {
	return o
}

func (o CommitmentQuotaResponseOutput) ToCommitmentQuotaResponseOutputWithContext(ctx context.Context) CommitmentQuotaResponseOutput {
	return o
}

// Commitment quota quantity.
func (o CommitmentQuotaResponseOutput) Quantity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CommitmentQuotaResponse) *float64 { return v.Quantity }).(pulumi.Float64PtrOutput)
}

// Commitment quota unit.
func (o CommitmentQuotaResponseOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitmentQuotaResponse) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type CommitmentQuotaResponsePtrOutput struct{ *pulumi.OutputState }

func (CommitmentQuotaResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommitmentQuotaResponse)(nil)).Elem()
}

func (o CommitmentQuotaResponsePtrOutput) ToCommitmentQuotaResponsePtrOutput() CommitmentQuotaResponsePtrOutput {
	return o
}

func (o CommitmentQuotaResponsePtrOutput) ToCommitmentQuotaResponsePtrOutputWithContext(ctx context.Context) CommitmentQuotaResponsePtrOutput {
	return o
}

func (o CommitmentQuotaResponsePtrOutput) Elem() CommitmentQuotaResponseOutput {
	return o.ApplyT(func(v *CommitmentQuotaResponse) CommitmentQuotaResponse {
		if v != nil {
			return *v
		}
		var ret CommitmentQuotaResponse
		return ret
	}).(CommitmentQuotaResponseOutput)
}

// Commitment quota quantity.
func (o CommitmentQuotaResponsePtrOutput) Quantity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CommitmentQuotaResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Quantity
	}).(pulumi.Float64PtrOutput)
}

// Commitment quota unit.
func (o CommitmentQuotaResponsePtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommitmentQuotaResponse) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

type ConnectionAccessKey struct {
	AccessKeyId     *string `pulumi:"accessKeyId"`
	SecretAccessKey *string `pulumi:"secretAccessKey"`
}

// ConnectionAccessKeyInput is an input type that accepts ConnectionAccessKeyArgs and ConnectionAccessKeyOutput values.
// You can construct a concrete instance of `ConnectionAccessKeyInput` via:
//
//	ConnectionAccessKeyArgs{...}
type ConnectionAccessKeyInput interface {
	pulumi.Input

	ToConnectionAccessKeyOutput() ConnectionAccessKeyOutput
	ToConnectionAccessKeyOutputWithContext(context.Context) ConnectionAccessKeyOutput
}

type ConnectionAccessKeyArgs struct {
	AccessKeyId     pulumi.StringPtrInput `pulumi:"accessKeyId"`
	SecretAccessKey pulumi.StringPtrInput `pulumi:"secretAccessKey"`
}

func (ConnectionAccessKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAccessKey)(nil)).Elem()
}

func (i ConnectionAccessKeyArgs) ToConnectionAccessKeyOutput() ConnectionAccessKeyOutput {
	return i.ToConnectionAccessKeyOutputWithContext(context.Background())
}

func (i ConnectionAccessKeyArgs) ToConnectionAccessKeyOutputWithContext(ctx context.Context) ConnectionAccessKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAccessKeyOutput)
}

func (i ConnectionAccessKeyArgs) ToConnectionAccessKeyPtrOutput() ConnectionAccessKeyPtrOutput {
	return i.ToConnectionAccessKeyPtrOutputWithContext(context.Background())
}

func (i ConnectionAccessKeyArgs) ToConnectionAccessKeyPtrOutputWithContext(ctx context.Context) ConnectionAccessKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAccessKeyOutput).ToConnectionAccessKeyPtrOutputWithContext(ctx)
}

// ConnectionAccessKeyPtrInput is an input type that accepts ConnectionAccessKeyArgs, ConnectionAccessKeyPtr and ConnectionAccessKeyPtrOutput values.
// You can construct a concrete instance of `ConnectionAccessKeyPtrInput` via:
//
//	        ConnectionAccessKeyArgs{...}
//
//	or:
//
//	        nil
type ConnectionAccessKeyPtrInput interface {
	pulumi.Input

	ToConnectionAccessKeyPtrOutput() ConnectionAccessKeyPtrOutput
	ToConnectionAccessKeyPtrOutputWithContext(context.Context) ConnectionAccessKeyPtrOutput
}

type connectionAccessKeyPtrType ConnectionAccessKeyArgs

func ConnectionAccessKeyPtr(v *ConnectionAccessKeyArgs) ConnectionAccessKeyPtrInput {
	return (*connectionAccessKeyPtrType)(v)
}

func (*connectionAccessKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAccessKey)(nil)).Elem()
}

func (i *connectionAccessKeyPtrType) ToConnectionAccessKeyPtrOutput() ConnectionAccessKeyPtrOutput {
	return i.ToConnectionAccessKeyPtrOutputWithContext(context.Background())
}

func (i *connectionAccessKeyPtrType) ToConnectionAccessKeyPtrOutputWithContext(ctx context.Context) ConnectionAccessKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAccessKeyPtrOutput)
}

type ConnectionAccessKeyOutput struct{ *pulumi.OutputState }

func (ConnectionAccessKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAccessKey)(nil)).Elem()
}

func (o ConnectionAccessKeyOutput) ToConnectionAccessKeyOutput() ConnectionAccessKeyOutput {
	return o
}

func (o ConnectionAccessKeyOutput) ToConnectionAccessKeyOutputWithContext(ctx context.Context) ConnectionAccessKeyOutput {
	return o
}

func (o ConnectionAccessKeyOutput) ToConnectionAccessKeyPtrOutput() ConnectionAccessKeyPtrOutput {
	return o.ToConnectionAccessKeyPtrOutputWithContext(context.Background())
}

func (o ConnectionAccessKeyOutput) ToConnectionAccessKeyPtrOutputWithContext(ctx context.Context) ConnectionAccessKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAccessKey) *ConnectionAccessKey {
		return &v
	}).(ConnectionAccessKeyPtrOutput)
}

func (o ConnectionAccessKeyOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAccessKey) *string { return v.AccessKeyId }).(pulumi.StringPtrOutput)
}

func (o ConnectionAccessKeyOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAccessKey) *string { return v.SecretAccessKey }).(pulumi.StringPtrOutput)
}

type ConnectionAccessKeyPtrOutput struct{ *pulumi.OutputState }

func (ConnectionAccessKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAccessKey)(nil)).Elem()
}

func (o ConnectionAccessKeyPtrOutput) ToConnectionAccessKeyPtrOutput() ConnectionAccessKeyPtrOutput {
	return o
}

func (o ConnectionAccessKeyPtrOutput) ToConnectionAccessKeyPtrOutputWithContext(ctx context.Context) ConnectionAccessKeyPtrOutput {
	return o
}

func (o ConnectionAccessKeyPtrOutput) Elem() ConnectionAccessKeyOutput {
	return o.ApplyT(func(v *ConnectionAccessKey) ConnectionAccessKey {
		if v != nil {
			return *v
		}
		var ret ConnectionAccessKey
		return ret
	}).(ConnectionAccessKeyOutput)
}

func (o ConnectionAccessKeyPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAccessKey) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionAccessKeyPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAccessKey) *string {
		if v == nil {
			return nil
		}
		return v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

type ConnectionAccessKeyResponse struct {
	AccessKeyId     *string `pulumi:"accessKeyId"`
	SecretAccessKey *string `pulumi:"secretAccessKey"`
}

type ConnectionAccessKeyResponseOutput struct{ *pulumi.OutputState }

func (ConnectionAccessKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAccessKeyResponse)(nil)).Elem()
}

func (o ConnectionAccessKeyResponseOutput) ToConnectionAccessKeyResponseOutput() ConnectionAccessKeyResponseOutput {
	return o
}

func (o ConnectionAccessKeyResponseOutput) ToConnectionAccessKeyResponseOutputWithContext(ctx context.Context) ConnectionAccessKeyResponseOutput {
	return o
}

func (o ConnectionAccessKeyResponseOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAccessKeyResponse) *string { return v.AccessKeyId }).(pulumi.StringPtrOutput)
}

func (o ConnectionAccessKeyResponseOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAccessKeyResponse) *string { return v.SecretAccessKey }).(pulumi.StringPtrOutput)
}

type ConnectionAccessKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionAccessKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAccessKeyResponse)(nil)).Elem()
}

func (o ConnectionAccessKeyResponsePtrOutput) ToConnectionAccessKeyResponsePtrOutput() ConnectionAccessKeyResponsePtrOutput {
	return o
}

func (o ConnectionAccessKeyResponsePtrOutput) ToConnectionAccessKeyResponsePtrOutputWithContext(ctx context.Context) ConnectionAccessKeyResponsePtrOutput {
	return o
}

func (o ConnectionAccessKeyResponsePtrOutput) Elem() ConnectionAccessKeyResponseOutput {
	return o.ApplyT(func(v *ConnectionAccessKeyResponse) ConnectionAccessKeyResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionAccessKeyResponse
		return ret
	}).(ConnectionAccessKeyResponseOutput)
}

func (o ConnectionAccessKeyResponsePtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAccessKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionAccessKeyResponsePtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAccessKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

// Account key object for connection credential.
type ConnectionAccountKey struct {
	Key *string `pulumi:"key"`
}

// ConnectionAccountKeyInput is an input type that accepts ConnectionAccountKeyArgs and ConnectionAccountKeyOutput values.
// You can construct a concrete instance of `ConnectionAccountKeyInput` via:
//
//	ConnectionAccountKeyArgs{...}
type ConnectionAccountKeyInput interface {
	pulumi.Input

	ToConnectionAccountKeyOutput() ConnectionAccountKeyOutput
	ToConnectionAccountKeyOutputWithContext(context.Context) ConnectionAccountKeyOutput
}

// Account key object for connection credential.
type ConnectionAccountKeyArgs struct {
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (ConnectionAccountKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAccountKey)(nil)).Elem()
}

func (i ConnectionAccountKeyArgs) ToConnectionAccountKeyOutput() ConnectionAccountKeyOutput {
	return i.ToConnectionAccountKeyOutputWithContext(context.Background())
}

func (i ConnectionAccountKeyArgs) ToConnectionAccountKeyOutputWithContext(ctx context.Context) ConnectionAccountKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAccountKeyOutput)
}

func (i ConnectionAccountKeyArgs) ToConnectionAccountKeyPtrOutput() ConnectionAccountKeyPtrOutput {
	return i.ToConnectionAccountKeyPtrOutputWithContext(context.Background())
}

func (i ConnectionAccountKeyArgs) ToConnectionAccountKeyPtrOutputWithContext(ctx context.Context) ConnectionAccountKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAccountKeyOutput).ToConnectionAccountKeyPtrOutputWithContext(ctx)
}

// ConnectionAccountKeyPtrInput is an input type that accepts ConnectionAccountKeyArgs, ConnectionAccountKeyPtr and ConnectionAccountKeyPtrOutput values.
// You can construct a concrete instance of `ConnectionAccountKeyPtrInput` via:
//
//	        ConnectionAccountKeyArgs{...}
//
//	or:
//
//	        nil
type ConnectionAccountKeyPtrInput interface {
	pulumi.Input

	ToConnectionAccountKeyPtrOutput() ConnectionAccountKeyPtrOutput
	ToConnectionAccountKeyPtrOutputWithContext(context.Context) ConnectionAccountKeyPtrOutput
}

type connectionAccountKeyPtrType ConnectionAccountKeyArgs

func ConnectionAccountKeyPtr(v *ConnectionAccountKeyArgs) ConnectionAccountKeyPtrInput {
	return (*connectionAccountKeyPtrType)(v)
}

func (*connectionAccountKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAccountKey)(nil)).Elem()
}

func (i *connectionAccountKeyPtrType) ToConnectionAccountKeyPtrOutput() ConnectionAccountKeyPtrOutput {
	return i.ToConnectionAccountKeyPtrOutputWithContext(context.Background())
}

func (i *connectionAccountKeyPtrType) ToConnectionAccountKeyPtrOutputWithContext(ctx context.Context) ConnectionAccountKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAccountKeyPtrOutput)
}

// Account key object for connection credential.
type ConnectionAccountKeyOutput struct{ *pulumi.OutputState }

func (ConnectionAccountKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAccountKey)(nil)).Elem()
}

func (o ConnectionAccountKeyOutput) ToConnectionAccountKeyOutput() ConnectionAccountKeyOutput {
	return o
}

func (o ConnectionAccountKeyOutput) ToConnectionAccountKeyOutputWithContext(ctx context.Context) ConnectionAccountKeyOutput {
	return o
}

func (o ConnectionAccountKeyOutput) ToConnectionAccountKeyPtrOutput() ConnectionAccountKeyPtrOutput {
	return o.ToConnectionAccountKeyPtrOutputWithContext(context.Background())
}

func (o ConnectionAccountKeyOutput) ToConnectionAccountKeyPtrOutputWithContext(ctx context.Context) ConnectionAccountKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAccountKey) *ConnectionAccountKey {
		return &v
	}).(ConnectionAccountKeyPtrOutput)
}

func (o ConnectionAccountKeyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAccountKey) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type ConnectionAccountKeyPtrOutput struct{ *pulumi.OutputState }

func (ConnectionAccountKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAccountKey)(nil)).Elem()
}

func (o ConnectionAccountKeyPtrOutput) ToConnectionAccountKeyPtrOutput() ConnectionAccountKeyPtrOutput {
	return o
}

func (o ConnectionAccountKeyPtrOutput) ToConnectionAccountKeyPtrOutputWithContext(ctx context.Context) ConnectionAccountKeyPtrOutput {
	return o
}

func (o ConnectionAccountKeyPtrOutput) Elem() ConnectionAccountKeyOutput {
	return o.ApplyT(func(v *ConnectionAccountKey) ConnectionAccountKey {
		if v != nil {
			return *v
		}
		var ret ConnectionAccountKey
		return ret
	}).(ConnectionAccountKeyOutput)
}

func (o ConnectionAccountKeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAccountKey) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Account key object for connection credential.
type ConnectionAccountKeyResponse struct {
	Key *string `pulumi:"key"`
}

// Account key object for connection credential.
type ConnectionAccountKeyResponseOutput struct{ *pulumi.OutputState }

func (ConnectionAccountKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAccountKeyResponse)(nil)).Elem()
}

func (o ConnectionAccountKeyResponseOutput) ToConnectionAccountKeyResponseOutput() ConnectionAccountKeyResponseOutput {
	return o
}

func (o ConnectionAccountKeyResponseOutput) ToConnectionAccountKeyResponseOutputWithContext(ctx context.Context) ConnectionAccountKeyResponseOutput {
	return o
}

func (o ConnectionAccountKeyResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAccountKeyResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type ConnectionAccountKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionAccountKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAccountKeyResponse)(nil)).Elem()
}

func (o ConnectionAccountKeyResponsePtrOutput) ToConnectionAccountKeyResponsePtrOutput() ConnectionAccountKeyResponsePtrOutput {
	return o
}

func (o ConnectionAccountKeyResponsePtrOutput) ToConnectionAccountKeyResponsePtrOutputWithContext(ctx context.Context) ConnectionAccountKeyResponsePtrOutput {
	return o
}

func (o ConnectionAccountKeyResponsePtrOutput) Elem() ConnectionAccountKeyResponseOutput {
	return o.ApplyT(func(v *ConnectionAccountKeyResponse) ConnectionAccountKeyResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionAccountKeyResponse
		return ret
	}).(ConnectionAccountKeyResponseOutput)
}

func (o ConnectionAccountKeyResponsePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionAccountKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Api key object for connection credential.
type ConnectionApiKey struct {
	Key *string `pulumi:"key"`
}

// ConnectionApiKeyInput is an input type that accepts ConnectionApiKeyArgs and ConnectionApiKeyOutput values.
// You can construct a concrete instance of `ConnectionApiKeyInput` via:
//
//	ConnectionApiKeyArgs{...}
type ConnectionApiKeyInput interface {
	pulumi.Input

	ToConnectionApiKeyOutput() ConnectionApiKeyOutput
	ToConnectionApiKeyOutputWithContext(context.Context) ConnectionApiKeyOutput
}

// Api key object for connection credential.
type ConnectionApiKeyArgs struct {
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (ConnectionApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionApiKey)(nil)).Elem()
}

func (i ConnectionApiKeyArgs) ToConnectionApiKeyOutput() ConnectionApiKeyOutput {
	return i.ToConnectionApiKeyOutputWithContext(context.Background())
}

func (i ConnectionApiKeyArgs) ToConnectionApiKeyOutputWithContext(ctx context.Context) ConnectionApiKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionApiKeyOutput)
}

func (i ConnectionApiKeyArgs) ToConnectionApiKeyPtrOutput() ConnectionApiKeyPtrOutput {
	return i.ToConnectionApiKeyPtrOutputWithContext(context.Background())
}

func (i ConnectionApiKeyArgs) ToConnectionApiKeyPtrOutputWithContext(ctx context.Context) ConnectionApiKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionApiKeyOutput).ToConnectionApiKeyPtrOutputWithContext(ctx)
}

// ConnectionApiKeyPtrInput is an input type that accepts ConnectionApiKeyArgs, ConnectionApiKeyPtr and ConnectionApiKeyPtrOutput values.
// You can construct a concrete instance of `ConnectionApiKeyPtrInput` via:
//
//	        ConnectionApiKeyArgs{...}
//
//	or:
//
//	        nil
type ConnectionApiKeyPtrInput interface {
	pulumi.Input

	ToConnectionApiKeyPtrOutput() ConnectionApiKeyPtrOutput
	ToConnectionApiKeyPtrOutputWithContext(context.Context) ConnectionApiKeyPtrOutput
}

type connectionApiKeyPtrType ConnectionApiKeyArgs

func ConnectionApiKeyPtr(v *ConnectionApiKeyArgs) ConnectionApiKeyPtrInput {
	return (*connectionApiKeyPtrType)(v)
}

func (*connectionApiKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionApiKey)(nil)).Elem()
}

func (i *connectionApiKeyPtrType) ToConnectionApiKeyPtrOutput() ConnectionApiKeyPtrOutput {
	return i.ToConnectionApiKeyPtrOutputWithContext(context.Background())
}

func (i *connectionApiKeyPtrType) ToConnectionApiKeyPtrOutputWithContext(ctx context.Context) ConnectionApiKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionApiKeyPtrOutput)
}

// Api key object for connection credential.
type ConnectionApiKeyOutput struct{ *pulumi.OutputState }

func (ConnectionApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionApiKey)(nil)).Elem()
}

func (o ConnectionApiKeyOutput) ToConnectionApiKeyOutput() ConnectionApiKeyOutput {
	return o
}

func (o ConnectionApiKeyOutput) ToConnectionApiKeyOutputWithContext(ctx context.Context) ConnectionApiKeyOutput {
	return o
}

func (o ConnectionApiKeyOutput) ToConnectionApiKeyPtrOutput() ConnectionApiKeyPtrOutput {
	return o.ToConnectionApiKeyPtrOutputWithContext(context.Background())
}

func (o ConnectionApiKeyOutput) ToConnectionApiKeyPtrOutputWithContext(ctx context.Context) ConnectionApiKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionApiKey) *ConnectionApiKey {
		return &v
	}).(ConnectionApiKeyPtrOutput)
}

func (o ConnectionApiKeyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionApiKey) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type ConnectionApiKeyPtrOutput struct{ *pulumi.OutputState }

func (ConnectionApiKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionApiKey)(nil)).Elem()
}

func (o ConnectionApiKeyPtrOutput) ToConnectionApiKeyPtrOutput() ConnectionApiKeyPtrOutput {
	return o
}

func (o ConnectionApiKeyPtrOutput) ToConnectionApiKeyPtrOutputWithContext(ctx context.Context) ConnectionApiKeyPtrOutput {
	return o
}

func (o ConnectionApiKeyPtrOutput) Elem() ConnectionApiKeyOutput {
	return o.ApplyT(func(v *ConnectionApiKey) ConnectionApiKey {
		if v != nil {
			return *v
		}
		var ret ConnectionApiKey
		return ret
	}).(ConnectionApiKeyOutput)
}

func (o ConnectionApiKeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionApiKey) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Api key object for connection credential.
type ConnectionApiKeyResponse struct {
	Key *string `pulumi:"key"`
}

// Api key object for connection credential.
type ConnectionApiKeyResponseOutput struct{ *pulumi.OutputState }

func (ConnectionApiKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionApiKeyResponse)(nil)).Elem()
}

func (o ConnectionApiKeyResponseOutput) ToConnectionApiKeyResponseOutput() ConnectionApiKeyResponseOutput {
	return o
}

func (o ConnectionApiKeyResponseOutput) ToConnectionApiKeyResponseOutputWithContext(ctx context.Context) ConnectionApiKeyResponseOutput {
	return o
}

func (o ConnectionApiKeyResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionApiKeyResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type ConnectionApiKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionApiKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionApiKeyResponse)(nil)).Elem()
}

func (o ConnectionApiKeyResponsePtrOutput) ToConnectionApiKeyResponsePtrOutput() ConnectionApiKeyResponsePtrOutput {
	return o
}

func (o ConnectionApiKeyResponsePtrOutput) ToConnectionApiKeyResponsePtrOutputWithContext(ctx context.Context) ConnectionApiKeyResponsePtrOutput {
	return o
}

func (o ConnectionApiKeyResponsePtrOutput) Elem() ConnectionApiKeyResponseOutput {
	return o.ApplyT(func(v *ConnectionApiKeyResponse) ConnectionApiKeyResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionApiKeyResponse
		return ret
	}).(ConnectionApiKeyResponseOutput)
}

func (o ConnectionApiKeyResponsePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionApiKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type ConnectionManagedIdentity struct {
	ClientId   *string `pulumi:"clientId"`
	ResourceId *string `pulumi:"resourceId"`
}

// ConnectionManagedIdentityInput is an input type that accepts ConnectionManagedIdentityArgs and ConnectionManagedIdentityOutput values.
// You can construct a concrete instance of `ConnectionManagedIdentityInput` via:
//
//	ConnectionManagedIdentityArgs{...}
type ConnectionManagedIdentityInput interface {
	pulumi.Input

	ToConnectionManagedIdentityOutput() ConnectionManagedIdentityOutput
	ToConnectionManagedIdentityOutputWithContext(context.Context) ConnectionManagedIdentityOutput
}

type ConnectionManagedIdentityArgs struct {
	ClientId   pulumi.StringPtrInput `pulumi:"clientId"`
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ConnectionManagedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionManagedIdentity)(nil)).Elem()
}

func (i ConnectionManagedIdentityArgs) ToConnectionManagedIdentityOutput() ConnectionManagedIdentityOutput {
	return i.ToConnectionManagedIdentityOutputWithContext(context.Background())
}

func (i ConnectionManagedIdentityArgs) ToConnectionManagedIdentityOutputWithContext(ctx context.Context) ConnectionManagedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionManagedIdentityOutput)
}

func (i ConnectionManagedIdentityArgs) ToConnectionManagedIdentityPtrOutput() ConnectionManagedIdentityPtrOutput {
	return i.ToConnectionManagedIdentityPtrOutputWithContext(context.Background())
}

func (i ConnectionManagedIdentityArgs) ToConnectionManagedIdentityPtrOutputWithContext(ctx context.Context) ConnectionManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionManagedIdentityOutput).ToConnectionManagedIdentityPtrOutputWithContext(ctx)
}

// ConnectionManagedIdentityPtrInput is an input type that accepts ConnectionManagedIdentityArgs, ConnectionManagedIdentityPtr and ConnectionManagedIdentityPtrOutput values.
// You can construct a concrete instance of `ConnectionManagedIdentityPtrInput` via:
//
//	        ConnectionManagedIdentityArgs{...}
//
//	or:
//
//	        nil
type ConnectionManagedIdentityPtrInput interface {
	pulumi.Input

	ToConnectionManagedIdentityPtrOutput() ConnectionManagedIdentityPtrOutput
	ToConnectionManagedIdentityPtrOutputWithContext(context.Context) ConnectionManagedIdentityPtrOutput
}

type connectionManagedIdentityPtrType ConnectionManagedIdentityArgs

func ConnectionManagedIdentityPtr(v *ConnectionManagedIdentityArgs) ConnectionManagedIdentityPtrInput {
	return (*connectionManagedIdentityPtrType)(v)
}

func (*connectionManagedIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionManagedIdentity)(nil)).Elem()
}

func (i *connectionManagedIdentityPtrType) ToConnectionManagedIdentityPtrOutput() ConnectionManagedIdentityPtrOutput {
	return i.ToConnectionManagedIdentityPtrOutputWithContext(context.Background())
}

func (i *connectionManagedIdentityPtrType) ToConnectionManagedIdentityPtrOutputWithContext(ctx context.Context) ConnectionManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionManagedIdentityPtrOutput)
}

type ConnectionManagedIdentityOutput struct{ *pulumi.OutputState }

func (ConnectionManagedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionManagedIdentity)(nil)).Elem()
}

func (o ConnectionManagedIdentityOutput) ToConnectionManagedIdentityOutput() ConnectionManagedIdentityOutput {
	return o
}

func (o ConnectionManagedIdentityOutput) ToConnectionManagedIdentityOutputWithContext(ctx context.Context) ConnectionManagedIdentityOutput {
	return o
}

func (o ConnectionManagedIdentityOutput) ToConnectionManagedIdentityPtrOutput() ConnectionManagedIdentityPtrOutput {
	return o.ToConnectionManagedIdentityPtrOutputWithContext(context.Background())
}

func (o ConnectionManagedIdentityOutput) ToConnectionManagedIdentityPtrOutputWithContext(ctx context.Context) ConnectionManagedIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionManagedIdentity) *ConnectionManagedIdentity {
		return &v
	}).(ConnectionManagedIdentityPtrOutput)
}

func (o ConnectionManagedIdentityOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionManagedIdentity) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ConnectionManagedIdentityOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionManagedIdentity) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ConnectionManagedIdentityPtrOutput struct{ *pulumi.OutputState }

func (ConnectionManagedIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionManagedIdentity)(nil)).Elem()
}

func (o ConnectionManagedIdentityPtrOutput) ToConnectionManagedIdentityPtrOutput() ConnectionManagedIdentityPtrOutput {
	return o
}

func (o ConnectionManagedIdentityPtrOutput) ToConnectionManagedIdentityPtrOutputWithContext(ctx context.Context) ConnectionManagedIdentityPtrOutput {
	return o
}

func (o ConnectionManagedIdentityPtrOutput) Elem() ConnectionManagedIdentityOutput {
	return o.ApplyT(func(v *ConnectionManagedIdentity) ConnectionManagedIdentity {
		if v != nil {
			return *v
		}
		var ret ConnectionManagedIdentity
		return ret
	}).(ConnectionManagedIdentityOutput)
}

func (o ConnectionManagedIdentityPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionManagedIdentityPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

type ConnectionManagedIdentityResponse struct {
	ClientId   *string `pulumi:"clientId"`
	ResourceId *string `pulumi:"resourceId"`
}

type ConnectionManagedIdentityResponseOutput struct{ *pulumi.OutputState }

func (ConnectionManagedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionManagedIdentityResponse)(nil)).Elem()
}

func (o ConnectionManagedIdentityResponseOutput) ToConnectionManagedIdentityResponseOutput() ConnectionManagedIdentityResponseOutput {
	return o
}

func (o ConnectionManagedIdentityResponseOutput) ToConnectionManagedIdentityResponseOutputWithContext(ctx context.Context) ConnectionManagedIdentityResponseOutput {
	return o
}

func (o ConnectionManagedIdentityResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionManagedIdentityResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ConnectionManagedIdentityResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionManagedIdentityResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ConnectionManagedIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionManagedIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionManagedIdentityResponse)(nil)).Elem()
}

func (o ConnectionManagedIdentityResponsePtrOutput) ToConnectionManagedIdentityResponsePtrOutput() ConnectionManagedIdentityResponsePtrOutput {
	return o
}

func (o ConnectionManagedIdentityResponsePtrOutput) ToConnectionManagedIdentityResponsePtrOutputWithContext(ctx context.Context) ConnectionManagedIdentityResponsePtrOutput {
	return o
}

func (o ConnectionManagedIdentityResponsePtrOutput) Elem() ConnectionManagedIdentityResponseOutput {
	return o.ApplyT(func(v *ConnectionManagedIdentityResponse) ConnectionManagedIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionManagedIdentityResponse
		return ret
	}).(ConnectionManagedIdentityResponseOutput)
}

func (o ConnectionManagedIdentityResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionManagedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionManagedIdentityResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionManagedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// ClientId and ClientSecret are required. Other properties are optional
// depending on each OAuth2 provider's implementation.
type ConnectionOAuth2 struct {
	// Required by Concur connection category
	AuthUrl *string `pulumi:"authUrl"`
	// Client id in the format of UUID
	ClientId     *string `pulumi:"clientId"`
	ClientSecret *string `pulumi:"clientSecret"`
	// Required by GoogleAdWords connection category
	DeveloperToken *string `pulumi:"developerToken"`
	Password       *string `pulumi:"password"`
	// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
	// where user needs to get RefreshToken offline
	RefreshToken *string `pulumi:"refreshToken"`
	// Required by QuickBooks and Xero connection categories
	TenantId *string `pulumi:"tenantId"`
	// Concur, ServiceNow auth server AccessToken grant type is 'Password'
	// which requires UsernamePassword
	Username *string `pulumi:"username"`
}

// ConnectionOAuth2Input is an input type that accepts ConnectionOAuth2Args and ConnectionOAuth2Output values.
// You can construct a concrete instance of `ConnectionOAuth2Input` via:
//
//	ConnectionOAuth2Args{...}
type ConnectionOAuth2Input interface {
	pulumi.Input

	ToConnectionOAuth2Output() ConnectionOAuth2Output
	ToConnectionOAuth2OutputWithContext(context.Context) ConnectionOAuth2Output
}

// ClientId and ClientSecret are required. Other properties are optional
// depending on each OAuth2 provider's implementation.
type ConnectionOAuth2Args struct {
	// Required by Concur connection category
	AuthUrl pulumi.StringPtrInput `pulumi:"authUrl"`
	// Client id in the format of UUID
	ClientId     pulumi.StringPtrInput `pulumi:"clientId"`
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Required by GoogleAdWords connection category
	DeveloperToken pulumi.StringPtrInput `pulumi:"developerToken"`
	Password       pulumi.StringPtrInput `pulumi:"password"`
	// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
	// where user needs to get RefreshToken offline
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
	// Required by QuickBooks and Xero connection categories
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Concur, ServiceNow auth server AccessToken grant type is 'Password'
	// which requires UsernamePassword
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ConnectionOAuth2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOAuth2)(nil)).Elem()
}

func (i ConnectionOAuth2Args) ToConnectionOAuth2Output() ConnectionOAuth2Output {
	return i.ToConnectionOAuth2OutputWithContext(context.Background())
}

func (i ConnectionOAuth2Args) ToConnectionOAuth2OutputWithContext(ctx context.Context) ConnectionOAuth2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOAuth2Output)
}

func (i ConnectionOAuth2Args) ToConnectionOAuth2PtrOutput() ConnectionOAuth2PtrOutput {
	return i.ToConnectionOAuth2PtrOutputWithContext(context.Background())
}

func (i ConnectionOAuth2Args) ToConnectionOAuth2PtrOutputWithContext(ctx context.Context) ConnectionOAuth2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOAuth2Output).ToConnectionOAuth2PtrOutputWithContext(ctx)
}

// ConnectionOAuth2PtrInput is an input type that accepts ConnectionOAuth2Args, ConnectionOAuth2Ptr and ConnectionOAuth2PtrOutput values.
// You can construct a concrete instance of `ConnectionOAuth2PtrInput` via:
//
//	        ConnectionOAuth2Args{...}
//
//	or:
//
//	        nil
type ConnectionOAuth2PtrInput interface {
	pulumi.Input

	ToConnectionOAuth2PtrOutput() ConnectionOAuth2PtrOutput
	ToConnectionOAuth2PtrOutputWithContext(context.Context) ConnectionOAuth2PtrOutput
}

type connectionOAuth2PtrType ConnectionOAuth2Args

func ConnectionOAuth2Ptr(v *ConnectionOAuth2Args) ConnectionOAuth2PtrInput {
	return (*connectionOAuth2PtrType)(v)
}

func (*connectionOAuth2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOAuth2)(nil)).Elem()
}

func (i *connectionOAuth2PtrType) ToConnectionOAuth2PtrOutput() ConnectionOAuth2PtrOutput {
	return i.ToConnectionOAuth2PtrOutputWithContext(context.Background())
}

func (i *connectionOAuth2PtrType) ToConnectionOAuth2PtrOutputWithContext(ctx context.Context) ConnectionOAuth2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOAuth2PtrOutput)
}

// ClientId and ClientSecret are required. Other properties are optional
// depending on each OAuth2 provider's implementation.
type ConnectionOAuth2Output struct{ *pulumi.OutputState }

func (ConnectionOAuth2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOAuth2)(nil)).Elem()
}

func (o ConnectionOAuth2Output) ToConnectionOAuth2Output() ConnectionOAuth2Output {
	return o
}

func (o ConnectionOAuth2Output) ToConnectionOAuth2OutputWithContext(ctx context.Context) ConnectionOAuth2Output {
	return o
}

func (o ConnectionOAuth2Output) ToConnectionOAuth2PtrOutput() ConnectionOAuth2PtrOutput {
	return o.ToConnectionOAuth2PtrOutputWithContext(context.Background())
}

func (o ConnectionOAuth2Output) ToConnectionOAuth2PtrOutputWithContext(ctx context.Context) ConnectionOAuth2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOAuth2) *ConnectionOAuth2 {
		return &v
	}).(ConnectionOAuth2PtrOutput)
}

// Required by Concur connection category
func (o ConnectionOAuth2Output) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOAuth2) *string { return v.AuthUrl }).(pulumi.StringPtrOutput)
}

// Client id in the format of UUID
func (o ConnectionOAuth2Output) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOAuth2) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ConnectionOAuth2Output) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOAuth2) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Required by GoogleAdWords connection category
func (o ConnectionOAuth2Output) DeveloperToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOAuth2) *string { return v.DeveloperToken }).(pulumi.StringPtrOutput)
}

func (o ConnectionOAuth2Output) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOAuth2) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
// where user needs to get RefreshToken offline
func (o ConnectionOAuth2Output) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOAuth2) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// Required by QuickBooks and Xero connection categories
func (o ConnectionOAuth2Output) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOAuth2) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Concur, ServiceNow auth server AccessToken grant type is 'Password'
// which requires UsernamePassword
func (o ConnectionOAuth2Output) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOAuth2) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ConnectionOAuth2PtrOutput struct{ *pulumi.OutputState }

func (ConnectionOAuth2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOAuth2)(nil)).Elem()
}

func (o ConnectionOAuth2PtrOutput) ToConnectionOAuth2PtrOutput() ConnectionOAuth2PtrOutput {
	return o
}

func (o ConnectionOAuth2PtrOutput) ToConnectionOAuth2PtrOutputWithContext(ctx context.Context) ConnectionOAuth2PtrOutput {
	return o
}

func (o ConnectionOAuth2PtrOutput) Elem() ConnectionOAuth2Output {
	return o.ApplyT(func(v *ConnectionOAuth2) ConnectionOAuth2 {
		if v != nil {
			return *v
		}
		var ret ConnectionOAuth2
		return ret
	}).(ConnectionOAuth2Output)
}

// Required by Concur connection category
func (o ConnectionOAuth2PtrOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuth2) *string {
		if v == nil {
			return nil
		}
		return v.AuthUrl
	}).(pulumi.StringPtrOutput)
}

// Client id in the format of UUID
func (o ConnectionOAuth2PtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuth2) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOAuth2PtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuth2) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Required by GoogleAdWords connection category
func (o ConnectionOAuth2PtrOutput) DeveloperToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuth2) *string {
		if v == nil {
			return nil
		}
		return v.DeveloperToken
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOAuth2PtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuth2) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
// where user needs to get RefreshToken offline
func (o ConnectionOAuth2PtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuth2) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

// Required by QuickBooks and Xero connection categories
func (o ConnectionOAuth2PtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuth2) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Concur, ServiceNow auth server AccessToken grant type is 'Password'
// which requires UsernamePassword
func (o ConnectionOAuth2PtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuth2) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// ClientId and ClientSecret are required. Other properties are optional
// depending on each OAuth2 provider's implementation.
type ConnectionOAuth2Response struct {
	// Required by Concur connection category
	AuthUrl *string `pulumi:"authUrl"`
	// Client id in the format of UUID
	ClientId     *string `pulumi:"clientId"`
	ClientSecret *string `pulumi:"clientSecret"`
	// Required by GoogleAdWords connection category
	DeveloperToken *string `pulumi:"developerToken"`
	Password       *string `pulumi:"password"`
	// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
	// where user needs to get RefreshToken offline
	RefreshToken *string `pulumi:"refreshToken"`
	// Required by QuickBooks and Xero connection categories
	TenantId *string `pulumi:"tenantId"`
	// Concur, ServiceNow auth server AccessToken grant type is 'Password'
	// which requires UsernamePassword
	Username *string `pulumi:"username"`
}

// ClientId and ClientSecret are required. Other properties are optional
// depending on each OAuth2 provider's implementation.
type ConnectionOAuth2ResponseOutput struct{ *pulumi.OutputState }

func (ConnectionOAuth2ResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOAuth2Response)(nil)).Elem()
}

func (o ConnectionOAuth2ResponseOutput) ToConnectionOAuth2ResponseOutput() ConnectionOAuth2ResponseOutput {
	return o
}

func (o ConnectionOAuth2ResponseOutput) ToConnectionOAuth2ResponseOutputWithContext(ctx context.Context) ConnectionOAuth2ResponseOutput {
	return o
}

// Required by Concur connection category
func (o ConnectionOAuth2ResponseOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOAuth2Response) *string { return v.AuthUrl }).(pulumi.StringPtrOutput)
}

// Client id in the format of UUID
func (o ConnectionOAuth2ResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOAuth2Response) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ConnectionOAuth2ResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOAuth2Response) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Required by GoogleAdWords connection category
func (o ConnectionOAuth2ResponseOutput) DeveloperToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOAuth2Response) *string { return v.DeveloperToken }).(pulumi.StringPtrOutput)
}

func (o ConnectionOAuth2ResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOAuth2Response) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
// where user needs to get RefreshToken offline
func (o ConnectionOAuth2ResponseOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOAuth2Response) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// Required by QuickBooks and Xero connection categories
func (o ConnectionOAuth2ResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOAuth2Response) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Concur, ServiceNow auth server AccessToken grant type is 'Password'
// which requires UsernamePassword
func (o ConnectionOAuth2ResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOAuth2Response) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ConnectionOAuth2ResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionOAuth2ResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOAuth2Response)(nil)).Elem()
}

func (o ConnectionOAuth2ResponsePtrOutput) ToConnectionOAuth2ResponsePtrOutput() ConnectionOAuth2ResponsePtrOutput {
	return o
}

func (o ConnectionOAuth2ResponsePtrOutput) ToConnectionOAuth2ResponsePtrOutputWithContext(ctx context.Context) ConnectionOAuth2ResponsePtrOutput {
	return o
}

func (o ConnectionOAuth2ResponsePtrOutput) Elem() ConnectionOAuth2ResponseOutput {
	return o.ApplyT(func(v *ConnectionOAuth2Response) ConnectionOAuth2Response {
		if v != nil {
			return *v
		}
		var ret ConnectionOAuth2Response
		return ret
	}).(ConnectionOAuth2ResponseOutput)
}

// Required by Concur connection category
func (o ConnectionOAuth2ResponsePtrOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuth2Response) *string {
		if v == nil {
			return nil
		}
		return v.AuthUrl
	}).(pulumi.StringPtrOutput)
}

// Client id in the format of UUID
func (o ConnectionOAuth2ResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuth2Response) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOAuth2ResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuth2Response) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Required by GoogleAdWords connection category
func (o ConnectionOAuth2ResponsePtrOutput) DeveloperToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuth2Response) *string {
		if v == nil {
			return nil
		}
		return v.DeveloperToken
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOAuth2ResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuth2Response) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
// where user needs to get RefreshToken offline
func (o ConnectionOAuth2ResponsePtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuth2Response) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

// Required by QuickBooks and Xero connection categories
func (o ConnectionOAuth2ResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuth2Response) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Concur, ServiceNow auth server AccessToken grant type is 'Password'
// which requires UsernamePassword
func (o ConnectionOAuth2ResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuth2Response) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectionPersonalAccessToken struct {
	Pat *string `pulumi:"pat"`
}

// ConnectionPersonalAccessTokenInput is an input type that accepts ConnectionPersonalAccessTokenArgs and ConnectionPersonalAccessTokenOutput values.
// You can construct a concrete instance of `ConnectionPersonalAccessTokenInput` via:
//
//	ConnectionPersonalAccessTokenArgs{...}
type ConnectionPersonalAccessTokenInput interface {
	pulumi.Input

	ToConnectionPersonalAccessTokenOutput() ConnectionPersonalAccessTokenOutput
	ToConnectionPersonalAccessTokenOutputWithContext(context.Context) ConnectionPersonalAccessTokenOutput
}

type ConnectionPersonalAccessTokenArgs struct {
	Pat pulumi.StringPtrInput `pulumi:"pat"`
}

func (ConnectionPersonalAccessTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionPersonalAccessToken)(nil)).Elem()
}

func (i ConnectionPersonalAccessTokenArgs) ToConnectionPersonalAccessTokenOutput() ConnectionPersonalAccessTokenOutput {
	return i.ToConnectionPersonalAccessTokenOutputWithContext(context.Background())
}

func (i ConnectionPersonalAccessTokenArgs) ToConnectionPersonalAccessTokenOutputWithContext(ctx context.Context) ConnectionPersonalAccessTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionPersonalAccessTokenOutput)
}

func (i ConnectionPersonalAccessTokenArgs) ToConnectionPersonalAccessTokenPtrOutput() ConnectionPersonalAccessTokenPtrOutput {
	return i.ToConnectionPersonalAccessTokenPtrOutputWithContext(context.Background())
}

func (i ConnectionPersonalAccessTokenArgs) ToConnectionPersonalAccessTokenPtrOutputWithContext(ctx context.Context) ConnectionPersonalAccessTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionPersonalAccessTokenOutput).ToConnectionPersonalAccessTokenPtrOutputWithContext(ctx)
}

// ConnectionPersonalAccessTokenPtrInput is an input type that accepts ConnectionPersonalAccessTokenArgs, ConnectionPersonalAccessTokenPtr and ConnectionPersonalAccessTokenPtrOutput values.
// You can construct a concrete instance of `ConnectionPersonalAccessTokenPtrInput` via:
//
//	        ConnectionPersonalAccessTokenArgs{...}
//
//	or:
//
//	        nil
type ConnectionPersonalAccessTokenPtrInput interface {
	pulumi.Input

	ToConnectionPersonalAccessTokenPtrOutput() ConnectionPersonalAccessTokenPtrOutput
	ToConnectionPersonalAccessTokenPtrOutputWithContext(context.Context) ConnectionPersonalAccessTokenPtrOutput
}

type connectionPersonalAccessTokenPtrType ConnectionPersonalAccessTokenArgs

func ConnectionPersonalAccessTokenPtr(v *ConnectionPersonalAccessTokenArgs) ConnectionPersonalAccessTokenPtrInput {
	return (*connectionPersonalAccessTokenPtrType)(v)
}

func (*connectionPersonalAccessTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionPersonalAccessToken)(nil)).Elem()
}

func (i *connectionPersonalAccessTokenPtrType) ToConnectionPersonalAccessTokenPtrOutput() ConnectionPersonalAccessTokenPtrOutput {
	return i.ToConnectionPersonalAccessTokenPtrOutputWithContext(context.Background())
}

func (i *connectionPersonalAccessTokenPtrType) ToConnectionPersonalAccessTokenPtrOutputWithContext(ctx context.Context) ConnectionPersonalAccessTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionPersonalAccessTokenPtrOutput)
}

type ConnectionPersonalAccessTokenOutput struct{ *pulumi.OutputState }

func (ConnectionPersonalAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionPersonalAccessToken)(nil)).Elem()
}

func (o ConnectionPersonalAccessTokenOutput) ToConnectionPersonalAccessTokenOutput() ConnectionPersonalAccessTokenOutput {
	return o
}

func (o ConnectionPersonalAccessTokenOutput) ToConnectionPersonalAccessTokenOutputWithContext(ctx context.Context) ConnectionPersonalAccessTokenOutput {
	return o
}

func (o ConnectionPersonalAccessTokenOutput) ToConnectionPersonalAccessTokenPtrOutput() ConnectionPersonalAccessTokenPtrOutput {
	return o.ToConnectionPersonalAccessTokenPtrOutputWithContext(context.Background())
}

func (o ConnectionPersonalAccessTokenOutput) ToConnectionPersonalAccessTokenPtrOutputWithContext(ctx context.Context) ConnectionPersonalAccessTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionPersonalAccessToken) *ConnectionPersonalAccessToken {
		return &v
	}).(ConnectionPersonalAccessTokenPtrOutput)
}

func (o ConnectionPersonalAccessTokenOutput) Pat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionPersonalAccessToken) *string { return v.Pat }).(pulumi.StringPtrOutput)
}

type ConnectionPersonalAccessTokenPtrOutput struct{ *pulumi.OutputState }

func (ConnectionPersonalAccessTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionPersonalAccessToken)(nil)).Elem()
}

func (o ConnectionPersonalAccessTokenPtrOutput) ToConnectionPersonalAccessTokenPtrOutput() ConnectionPersonalAccessTokenPtrOutput {
	return o
}

func (o ConnectionPersonalAccessTokenPtrOutput) ToConnectionPersonalAccessTokenPtrOutputWithContext(ctx context.Context) ConnectionPersonalAccessTokenPtrOutput {
	return o
}

func (o ConnectionPersonalAccessTokenPtrOutput) Elem() ConnectionPersonalAccessTokenOutput {
	return o.ApplyT(func(v *ConnectionPersonalAccessToken) ConnectionPersonalAccessToken {
		if v != nil {
			return *v
		}
		var ret ConnectionPersonalAccessToken
		return ret
	}).(ConnectionPersonalAccessTokenOutput)
}

func (o ConnectionPersonalAccessTokenPtrOutput) Pat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionPersonalAccessToken) *string {
		if v == nil {
			return nil
		}
		return v.Pat
	}).(pulumi.StringPtrOutput)
}

type ConnectionPersonalAccessTokenResponse struct {
	Pat *string `pulumi:"pat"`
}

type ConnectionPersonalAccessTokenResponseOutput struct{ *pulumi.OutputState }

func (ConnectionPersonalAccessTokenResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionPersonalAccessTokenResponse)(nil)).Elem()
}

func (o ConnectionPersonalAccessTokenResponseOutput) ToConnectionPersonalAccessTokenResponseOutput() ConnectionPersonalAccessTokenResponseOutput {
	return o
}

func (o ConnectionPersonalAccessTokenResponseOutput) ToConnectionPersonalAccessTokenResponseOutputWithContext(ctx context.Context) ConnectionPersonalAccessTokenResponseOutput {
	return o
}

func (o ConnectionPersonalAccessTokenResponseOutput) Pat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionPersonalAccessTokenResponse) *string { return v.Pat }).(pulumi.StringPtrOutput)
}

type ConnectionPersonalAccessTokenResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionPersonalAccessTokenResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionPersonalAccessTokenResponse)(nil)).Elem()
}

func (o ConnectionPersonalAccessTokenResponsePtrOutput) ToConnectionPersonalAccessTokenResponsePtrOutput() ConnectionPersonalAccessTokenResponsePtrOutput {
	return o
}

func (o ConnectionPersonalAccessTokenResponsePtrOutput) ToConnectionPersonalAccessTokenResponsePtrOutputWithContext(ctx context.Context) ConnectionPersonalAccessTokenResponsePtrOutput {
	return o
}

func (o ConnectionPersonalAccessTokenResponsePtrOutput) Elem() ConnectionPersonalAccessTokenResponseOutput {
	return o.ApplyT(func(v *ConnectionPersonalAccessTokenResponse) ConnectionPersonalAccessTokenResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionPersonalAccessTokenResponse
		return ret
	}).(ConnectionPersonalAccessTokenResponseOutput)
}

func (o ConnectionPersonalAccessTokenResponsePtrOutput) Pat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionPersonalAccessTokenResponse) *string {
		if v == nil {
			return nil
		}
		return v.Pat
	}).(pulumi.StringPtrOutput)
}

type ConnectionServicePrincipal struct {
	ClientId     *string `pulumi:"clientId"`
	ClientSecret *string `pulumi:"clientSecret"`
	TenantId     *string `pulumi:"tenantId"`
}

// ConnectionServicePrincipalInput is an input type that accepts ConnectionServicePrincipalArgs and ConnectionServicePrincipalOutput values.
// You can construct a concrete instance of `ConnectionServicePrincipalInput` via:
//
//	ConnectionServicePrincipalArgs{...}
type ConnectionServicePrincipalInput interface {
	pulumi.Input

	ToConnectionServicePrincipalOutput() ConnectionServicePrincipalOutput
	ToConnectionServicePrincipalOutputWithContext(context.Context) ConnectionServicePrincipalOutput
}

type ConnectionServicePrincipalArgs struct {
	ClientId     pulumi.StringPtrInput `pulumi:"clientId"`
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	TenantId     pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (ConnectionServicePrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionServicePrincipal)(nil)).Elem()
}

func (i ConnectionServicePrincipalArgs) ToConnectionServicePrincipalOutput() ConnectionServicePrincipalOutput {
	return i.ToConnectionServicePrincipalOutputWithContext(context.Background())
}

func (i ConnectionServicePrincipalArgs) ToConnectionServicePrincipalOutputWithContext(ctx context.Context) ConnectionServicePrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionServicePrincipalOutput)
}

func (i ConnectionServicePrincipalArgs) ToConnectionServicePrincipalPtrOutput() ConnectionServicePrincipalPtrOutput {
	return i.ToConnectionServicePrincipalPtrOutputWithContext(context.Background())
}

func (i ConnectionServicePrincipalArgs) ToConnectionServicePrincipalPtrOutputWithContext(ctx context.Context) ConnectionServicePrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionServicePrincipalOutput).ToConnectionServicePrincipalPtrOutputWithContext(ctx)
}

// ConnectionServicePrincipalPtrInput is an input type that accepts ConnectionServicePrincipalArgs, ConnectionServicePrincipalPtr and ConnectionServicePrincipalPtrOutput values.
// You can construct a concrete instance of `ConnectionServicePrincipalPtrInput` via:
//
//	        ConnectionServicePrincipalArgs{...}
//
//	or:
//
//	        nil
type ConnectionServicePrincipalPtrInput interface {
	pulumi.Input

	ToConnectionServicePrincipalPtrOutput() ConnectionServicePrincipalPtrOutput
	ToConnectionServicePrincipalPtrOutputWithContext(context.Context) ConnectionServicePrincipalPtrOutput
}

type connectionServicePrincipalPtrType ConnectionServicePrincipalArgs

func ConnectionServicePrincipalPtr(v *ConnectionServicePrincipalArgs) ConnectionServicePrincipalPtrInput {
	return (*connectionServicePrincipalPtrType)(v)
}

func (*connectionServicePrincipalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionServicePrincipal)(nil)).Elem()
}

func (i *connectionServicePrincipalPtrType) ToConnectionServicePrincipalPtrOutput() ConnectionServicePrincipalPtrOutput {
	return i.ToConnectionServicePrincipalPtrOutputWithContext(context.Background())
}

func (i *connectionServicePrincipalPtrType) ToConnectionServicePrincipalPtrOutputWithContext(ctx context.Context) ConnectionServicePrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionServicePrincipalPtrOutput)
}

type ConnectionServicePrincipalOutput struct{ *pulumi.OutputState }

func (ConnectionServicePrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionServicePrincipal)(nil)).Elem()
}

func (o ConnectionServicePrincipalOutput) ToConnectionServicePrincipalOutput() ConnectionServicePrincipalOutput {
	return o
}

func (o ConnectionServicePrincipalOutput) ToConnectionServicePrincipalOutputWithContext(ctx context.Context) ConnectionServicePrincipalOutput {
	return o
}

func (o ConnectionServicePrincipalOutput) ToConnectionServicePrincipalPtrOutput() ConnectionServicePrincipalPtrOutput {
	return o.ToConnectionServicePrincipalPtrOutputWithContext(context.Background())
}

func (o ConnectionServicePrincipalOutput) ToConnectionServicePrincipalPtrOutputWithContext(ctx context.Context) ConnectionServicePrincipalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionServicePrincipal) *ConnectionServicePrincipal {
		return &v
	}).(ConnectionServicePrincipalPtrOutput)
}

func (o ConnectionServicePrincipalOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionServicePrincipal) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ConnectionServicePrincipalOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionServicePrincipal) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o ConnectionServicePrincipalOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionServicePrincipal) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type ConnectionServicePrincipalPtrOutput struct{ *pulumi.OutputState }

func (ConnectionServicePrincipalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionServicePrincipal)(nil)).Elem()
}

func (o ConnectionServicePrincipalPtrOutput) ToConnectionServicePrincipalPtrOutput() ConnectionServicePrincipalPtrOutput {
	return o
}

func (o ConnectionServicePrincipalPtrOutput) ToConnectionServicePrincipalPtrOutputWithContext(ctx context.Context) ConnectionServicePrincipalPtrOutput {
	return o
}

func (o ConnectionServicePrincipalPtrOutput) Elem() ConnectionServicePrincipalOutput {
	return o.ApplyT(func(v *ConnectionServicePrincipal) ConnectionServicePrincipal {
		if v != nil {
			return *v
		}
		var ret ConnectionServicePrincipal
		return ret
	}).(ConnectionServicePrincipalOutput)
}

func (o ConnectionServicePrincipalPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionServicePrincipalPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionServicePrincipalPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

type ConnectionServicePrincipalResponse struct {
	ClientId     *string `pulumi:"clientId"`
	ClientSecret *string `pulumi:"clientSecret"`
	TenantId     *string `pulumi:"tenantId"`
}

type ConnectionServicePrincipalResponseOutput struct{ *pulumi.OutputState }

func (ConnectionServicePrincipalResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionServicePrincipalResponse)(nil)).Elem()
}

func (o ConnectionServicePrincipalResponseOutput) ToConnectionServicePrincipalResponseOutput() ConnectionServicePrincipalResponseOutput {
	return o
}

func (o ConnectionServicePrincipalResponseOutput) ToConnectionServicePrincipalResponseOutputWithContext(ctx context.Context) ConnectionServicePrincipalResponseOutput {
	return o
}

func (o ConnectionServicePrincipalResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionServicePrincipalResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ConnectionServicePrincipalResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionServicePrincipalResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o ConnectionServicePrincipalResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionServicePrincipalResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type ConnectionServicePrincipalResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionServicePrincipalResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionServicePrincipalResponse)(nil)).Elem()
}

func (o ConnectionServicePrincipalResponsePtrOutput) ToConnectionServicePrincipalResponsePtrOutput() ConnectionServicePrincipalResponsePtrOutput {
	return o
}

func (o ConnectionServicePrincipalResponsePtrOutput) ToConnectionServicePrincipalResponsePtrOutputWithContext(ctx context.Context) ConnectionServicePrincipalResponsePtrOutput {
	return o
}

func (o ConnectionServicePrincipalResponsePtrOutput) Elem() ConnectionServicePrincipalResponseOutput {
	return o.ApplyT(func(v *ConnectionServicePrincipalResponse) ConnectionServicePrincipalResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionServicePrincipalResponse
		return ret
	}).(ConnectionServicePrincipalResponseOutput)
}

func (o ConnectionServicePrincipalResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionServicePrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionServicePrincipalResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionServicePrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionServicePrincipalResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionServicePrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

type ConnectionSharedAccessSignature struct {
	Sas *string `pulumi:"sas"`
}

// ConnectionSharedAccessSignatureInput is an input type that accepts ConnectionSharedAccessSignatureArgs and ConnectionSharedAccessSignatureOutput values.
// You can construct a concrete instance of `ConnectionSharedAccessSignatureInput` via:
//
//	ConnectionSharedAccessSignatureArgs{...}
type ConnectionSharedAccessSignatureInput interface {
	pulumi.Input

	ToConnectionSharedAccessSignatureOutput() ConnectionSharedAccessSignatureOutput
	ToConnectionSharedAccessSignatureOutputWithContext(context.Context) ConnectionSharedAccessSignatureOutput
}

type ConnectionSharedAccessSignatureArgs struct {
	Sas pulumi.StringPtrInput `pulumi:"sas"`
}

func (ConnectionSharedAccessSignatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSharedAccessSignature)(nil)).Elem()
}

func (i ConnectionSharedAccessSignatureArgs) ToConnectionSharedAccessSignatureOutput() ConnectionSharedAccessSignatureOutput {
	return i.ToConnectionSharedAccessSignatureOutputWithContext(context.Background())
}

func (i ConnectionSharedAccessSignatureArgs) ToConnectionSharedAccessSignatureOutputWithContext(ctx context.Context) ConnectionSharedAccessSignatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSharedAccessSignatureOutput)
}

func (i ConnectionSharedAccessSignatureArgs) ToConnectionSharedAccessSignaturePtrOutput() ConnectionSharedAccessSignaturePtrOutput {
	return i.ToConnectionSharedAccessSignaturePtrOutputWithContext(context.Background())
}

func (i ConnectionSharedAccessSignatureArgs) ToConnectionSharedAccessSignaturePtrOutputWithContext(ctx context.Context) ConnectionSharedAccessSignaturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSharedAccessSignatureOutput).ToConnectionSharedAccessSignaturePtrOutputWithContext(ctx)
}

// ConnectionSharedAccessSignaturePtrInput is an input type that accepts ConnectionSharedAccessSignatureArgs, ConnectionSharedAccessSignaturePtr and ConnectionSharedAccessSignaturePtrOutput values.
// You can construct a concrete instance of `ConnectionSharedAccessSignaturePtrInput` via:
//
//	        ConnectionSharedAccessSignatureArgs{...}
//
//	or:
//
//	        nil
type ConnectionSharedAccessSignaturePtrInput interface {
	pulumi.Input

	ToConnectionSharedAccessSignaturePtrOutput() ConnectionSharedAccessSignaturePtrOutput
	ToConnectionSharedAccessSignaturePtrOutputWithContext(context.Context) ConnectionSharedAccessSignaturePtrOutput
}

type connectionSharedAccessSignaturePtrType ConnectionSharedAccessSignatureArgs

func ConnectionSharedAccessSignaturePtr(v *ConnectionSharedAccessSignatureArgs) ConnectionSharedAccessSignaturePtrInput {
	return (*connectionSharedAccessSignaturePtrType)(v)
}

func (*connectionSharedAccessSignaturePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSharedAccessSignature)(nil)).Elem()
}

func (i *connectionSharedAccessSignaturePtrType) ToConnectionSharedAccessSignaturePtrOutput() ConnectionSharedAccessSignaturePtrOutput {
	return i.ToConnectionSharedAccessSignaturePtrOutputWithContext(context.Background())
}

func (i *connectionSharedAccessSignaturePtrType) ToConnectionSharedAccessSignaturePtrOutputWithContext(ctx context.Context) ConnectionSharedAccessSignaturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionSharedAccessSignaturePtrOutput)
}

type ConnectionSharedAccessSignatureOutput struct{ *pulumi.OutputState }

func (ConnectionSharedAccessSignatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSharedAccessSignature)(nil)).Elem()
}

func (o ConnectionSharedAccessSignatureOutput) ToConnectionSharedAccessSignatureOutput() ConnectionSharedAccessSignatureOutput {
	return o
}

func (o ConnectionSharedAccessSignatureOutput) ToConnectionSharedAccessSignatureOutputWithContext(ctx context.Context) ConnectionSharedAccessSignatureOutput {
	return o
}

func (o ConnectionSharedAccessSignatureOutput) ToConnectionSharedAccessSignaturePtrOutput() ConnectionSharedAccessSignaturePtrOutput {
	return o.ToConnectionSharedAccessSignaturePtrOutputWithContext(context.Background())
}

func (o ConnectionSharedAccessSignatureOutput) ToConnectionSharedAccessSignaturePtrOutputWithContext(ctx context.Context) ConnectionSharedAccessSignaturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionSharedAccessSignature) *ConnectionSharedAccessSignature {
		return &v
	}).(ConnectionSharedAccessSignaturePtrOutput)
}

func (o ConnectionSharedAccessSignatureOutput) Sas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSharedAccessSignature) *string { return v.Sas }).(pulumi.StringPtrOutput)
}

type ConnectionSharedAccessSignaturePtrOutput struct{ *pulumi.OutputState }

func (ConnectionSharedAccessSignaturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSharedAccessSignature)(nil)).Elem()
}

func (o ConnectionSharedAccessSignaturePtrOutput) ToConnectionSharedAccessSignaturePtrOutput() ConnectionSharedAccessSignaturePtrOutput {
	return o
}

func (o ConnectionSharedAccessSignaturePtrOutput) ToConnectionSharedAccessSignaturePtrOutputWithContext(ctx context.Context) ConnectionSharedAccessSignaturePtrOutput {
	return o
}

func (o ConnectionSharedAccessSignaturePtrOutput) Elem() ConnectionSharedAccessSignatureOutput {
	return o.ApplyT(func(v *ConnectionSharedAccessSignature) ConnectionSharedAccessSignature {
		if v != nil {
			return *v
		}
		var ret ConnectionSharedAccessSignature
		return ret
	}).(ConnectionSharedAccessSignatureOutput)
}

func (o ConnectionSharedAccessSignaturePtrOutput) Sas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSharedAccessSignature) *string {
		if v == nil {
			return nil
		}
		return v.Sas
	}).(pulumi.StringPtrOutput)
}

type ConnectionSharedAccessSignatureResponse struct {
	Sas *string `pulumi:"sas"`
}

type ConnectionSharedAccessSignatureResponseOutput struct{ *pulumi.OutputState }

func (ConnectionSharedAccessSignatureResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionSharedAccessSignatureResponse)(nil)).Elem()
}

func (o ConnectionSharedAccessSignatureResponseOutput) ToConnectionSharedAccessSignatureResponseOutput() ConnectionSharedAccessSignatureResponseOutput {
	return o
}

func (o ConnectionSharedAccessSignatureResponseOutput) ToConnectionSharedAccessSignatureResponseOutputWithContext(ctx context.Context) ConnectionSharedAccessSignatureResponseOutput {
	return o
}

func (o ConnectionSharedAccessSignatureResponseOutput) Sas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionSharedAccessSignatureResponse) *string { return v.Sas }).(pulumi.StringPtrOutput)
}

type ConnectionSharedAccessSignatureResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionSharedAccessSignatureResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionSharedAccessSignatureResponse)(nil)).Elem()
}

func (o ConnectionSharedAccessSignatureResponsePtrOutput) ToConnectionSharedAccessSignatureResponsePtrOutput() ConnectionSharedAccessSignatureResponsePtrOutput {
	return o
}

func (o ConnectionSharedAccessSignatureResponsePtrOutput) ToConnectionSharedAccessSignatureResponsePtrOutputWithContext(ctx context.Context) ConnectionSharedAccessSignatureResponsePtrOutput {
	return o
}

func (o ConnectionSharedAccessSignatureResponsePtrOutput) Elem() ConnectionSharedAccessSignatureResponseOutput {
	return o.ApplyT(func(v *ConnectionSharedAccessSignatureResponse) ConnectionSharedAccessSignatureResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionSharedAccessSignatureResponse
		return ret
	}).(ConnectionSharedAccessSignatureResponseOutput)
}

func (o ConnectionSharedAccessSignatureResponsePtrOutput) Sas() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionSharedAccessSignatureResponse) *string {
		if v == nil {
			return nil
		}
		return v.Sas
	}).(pulumi.StringPtrOutput)
}

type ConnectionUsernamePassword struct {
	Password *string `pulumi:"password"`
	// Optional, required by connections like SalesForce for extra security in addition to UsernamePassword
	SecurityToken *string `pulumi:"securityToken"`
	Username      *string `pulumi:"username"`
}

// ConnectionUsernamePasswordInput is an input type that accepts ConnectionUsernamePasswordArgs and ConnectionUsernamePasswordOutput values.
// You can construct a concrete instance of `ConnectionUsernamePasswordInput` via:
//
//	ConnectionUsernamePasswordArgs{...}
type ConnectionUsernamePasswordInput interface {
	pulumi.Input

	ToConnectionUsernamePasswordOutput() ConnectionUsernamePasswordOutput
	ToConnectionUsernamePasswordOutputWithContext(context.Context) ConnectionUsernamePasswordOutput
}

type ConnectionUsernamePasswordArgs struct {
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Optional, required by connections like SalesForce for extra security in addition to UsernamePassword
	SecurityToken pulumi.StringPtrInput `pulumi:"securityToken"`
	Username      pulumi.StringPtrInput `pulumi:"username"`
}

func (ConnectionUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionUsernamePassword)(nil)).Elem()
}

func (i ConnectionUsernamePasswordArgs) ToConnectionUsernamePasswordOutput() ConnectionUsernamePasswordOutput {
	return i.ToConnectionUsernamePasswordOutputWithContext(context.Background())
}

func (i ConnectionUsernamePasswordArgs) ToConnectionUsernamePasswordOutputWithContext(ctx context.Context) ConnectionUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionUsernamePasswordOutput)
}

func (i ConnectionUsernamePasswordArgs) ToConnectionUsernamePasswordPtrOutput() ConnectionUsernamePasswordPtrOutput {
	return i.ToConnectionUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i ConnectionUsernamePasswordArgs) ToConnectionUsernamePasswordPtrOutputWithContext(ctx context.Context) ConnectionUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionUsernamePasswordOutput).ToConnectionUsernamePasswordPtrOutputWithContext(ctx)
}

// ConnectionUsernamePasswordPtrInput is an input type that accepts ConnectionUsernamePasswordArgs, ConnectionUsernamePasswordPtr and ConnectionUsernamePasswordPtrOutput values.
// You can construct a concrete instance of `ConnectionUsernamePasswordPtrInput` via:
//
//	        ConnectionUsernamePasswordArgs{...}
//
//	or:
//
//	        nil
type ConnectionUsernamePasswordPtrInput interface {
	pulumi.Input

	ToConnectionUsernamePasswordPtrOutput() ConnectionUsernamePasswordPtrOutput
	ToConnectionUsernamePasswordPtrOutputWithContext(context.Context) ConnectionUsernamePasswordPtrOutput
}

type connectionUsernamePasswordPtrType ConnectionUsernamePasswordArgs

func ConnectionUsernamePasswordPtr(v *ConnectionUsernamePasswordArgs) ConnectionUsernamePasswordPtrInput {
	return (*connectionUsernamePasswordPtrType)(v)
}

func (*connectionUsernamePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionUsernamePassword)(nil)).Elem()
}

func (i *connectionUsernamePasswordPtrType) ToConnectionUsernamePasswordPtrOutput() ConnectionUsernamePasswordPtrOutput {
	return i.ToConnectionUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i *connectionUsernamePasswordPtrType) ToConnectionUsernamePasswordPtrOutputWithContext(ctx context.Context) ConnectionUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionUsernamePasswordPtrOutput)
}

type ConnectionUsernamePasswordOutput struct{ *pulumi.OutputState }

func (ConnectionUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionUsernamePassword)(nil)).Elem()
}

func (o ConnectionUsernamePasswordOutput) ToConnectionUsernamePasswordOutput() ConnectionUsernamePasswordOutput {
	return o
}

func (o ConnectionUsernamePasswordOutput) ToConnectionUsernamePasswordOutputWithContext(ctx context.Context) ConnectionUsernamePasswordOutput {
	return o
}

func (o ConnectionUsernamePasswordOutput) ToConnectionUsernamePasswordPtrOutput() ConnectionUsernamePasswordPtrOutput {
	return o.ToConnectionUsernamePasswordPtrOutputWithContext(context.Background())
}

func (o ConnectionUsernamePasswordOutput) ToConnectionUsernamePasswordPtrOutputWithContext(ctx context.Context) ConnectionUsernamePasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionUsernamePassword) *ConnectionUsernamePassword {
		return &v
	}).(ConnectionUsernamePasswordPtrOutput)
}

func (o ConnectionUsernamePasswordOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionUsernamePassword) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Optional, required by connections like SalesForce for extra security in addition to UsernamePassword
func (o ConnectionUsernamePasswordOutput) SecurityToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionUsernamePassword) *string { return v.SecurityToken }).(pulumi.StringPtrOutput)
}

func (o ConnectionUsernamePasswordOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionUsernamePassword) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ConnectionUsernamePasswordPtrOutput struct{ *pulumi.OutputState }

func (ConnectionUsernamePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionUsernamePassword)(nil)).Elem()
}

func (o ConnectionUsernamePasswordPtrOutput) ToConnectionUsernamePasswordPtrOutput() ConnectionUsernamePasswordPtrOutput {
	return o
}

func (o ConnectionUsernamePasswordPtrOutput) ToConnectionUsernamePasswordPtrOutputWithContext(ctx context.Context) ConnectionUsernamePasswordPtrOutput {
	return o
}

func (o ConnectionUsernamePasswordPtrOutput) Elem() ConnectionUsernamePasswordOutput {
	return o.ApplyT(func(v *ConnectionUsernamePassword) ConnectionUsernamePassword {
		if v != nil {
			return *v
		}
		var ret ConnectionUsernamePassword
		return ret
	}).(ConnectionUsernamePasswordOutput)
}

func (o ConnectionUsernamePasswordPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Optional, required by connections like SalesForce for extra security in addition to UsernamePassword
func (o ConnectionUsernamePasswordPtrOutput) SecurityToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.SecurityToken
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionUsernamePasswordPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectionUsernamePasswordResponse struct {
	Password *string `pulumi:"password"`
	// Optional, required by connections like SalesForce for extra security in addition to UsernamePassword
	SecurityToken *string `pulumi:"securityToken"`
	Username      *string `pulumi:"username"`
}

type ConnectionUsernamePasswordResponseOutput struct{ *pulumi.OutputState }

func (ConnectionUsernamePasswordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionUsernamePasswordResponse)(nil)).Elem()
}

func (o ConnectionUsernamePasswordResponseOutput) ToConnectionUsernamePasswordResponseOutput() ConnectionUsernamePasswordResponseOutput {
	return o
}

func (o ConnectionUsernamePasswordResponseOutput) ToConnectionUsernamePasswordResponseOutputWithContext(ctx context.Context) ConnectionUsernamePasswordResponseOutput {
	return o
}

func (o ConnectionUsernamePasswordResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionUsernamePasswordResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Optional, required by connections like SalesForce for extra security in addition to UsernamePassword
func (o ConnectionUsernamePasswordResponseOutput) SecurityToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionUsernamePasswordResponse) *string { return v.SecurityToken }).(pulumi.StringPtrOutput)
}

func (o ConnectionUsernamePasswordResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionUsernamePasswordResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ConnectionUsernamePasswordResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionUsernamePasswordResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionUsernamePasswordResponse)(nil)).Elem()
}

func (o ConnectionUsernamePasswordResponsePtrOutput) ToConnectionUsernamePasswordResponsePtrOutput() ConnectionUsernamePasswordResponsePtrOutput {
	return o
}

func (o ConnectionUsernamePasswordResponsePtrOutput) ToConnectionUsernamePasswordResponsePtrOutputWithContext(ctx context.Context) ConnectionUsernamePasswordResponsePtrOutput {
	return o
}

func (o ConnectionUsernamePasswordResponsePtrOutput) Elem() ConnectionUsernamePasswordResponseOutput {
	return o.ApplyT(func(v *ConnectionUsernamePasswordResponse) ConnectionUsernamePasswordResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionUsernamePasswordResponse
		return ret
	}).(ConnectionUsernamePasswordResponseOutput)
}

func (o ConnectionUsernamePasswordResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionUsernamePasswordResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Optional, required by connections like SalesForce for extra security in addition to UsernamePassword
func (o ConnectionUsernamePasswordResponsePtrOutput) SecurityToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionUsernamePasswordResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecurityToken
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionUsernamePasswordResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionUsernamePasswordResponse) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the source to which filter applies.
type CustomBlocklistConfig struct {
	// If blocking would occur.
	Blocking *bool `pulumi:"blocking"`
	// Name of ContentFilter.
	BlocklistName *string `pulumi:"blocklistName"`
	// Content source to apply the Content Filters.
	Source *string `pulumi:"source"`
}

// CustomBlocklistConfigInput is an input type that accepts CustomBlocklistConfigArgs and CustomBlocklistConfigOutput values.
// You can construct a concrete instance of `CustomBlocklistConfigInput` via:
//
//	CustomBlocklistConfigArgs{...}
type CustomBlocklistConfigInput interface {
	pulumi.Input

	ToCustomBlocklistConfigOutput() CustomBlocklistConfigOutput
	ToCustomBlocklistConfigOutputWithContext(context.Context) CustomBlocklistConfigOutput
}

// Gets or sets the source to which filter applies.
type CustomBlocklistConfigArgs struct {
	// If blocking would occur.
	Blocking pulumi.BoolPtrInput `pulumi:"blocking"`
	// Name of ContentFilter.
	BlocklistName pulumi.StringPtrInput `pulumi:"blocklistName"`
	// Content source to apply the Content Filters.
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (CustomBlocklistConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomBlocklistConfig)(nil)).Elem()
}

func (i CustomBlocklistConfigArgs) ToCustomBlocklistConfigOutput() CustomBlocklistConfigOutput {
	return i.ToCustomBlocklistConfigOutputWithContext(context.Background())
}

func (i CustomBlocklistConfigArgs) ToCustomBlocklistConfigOutputWithContext(ctx context.Context) CustomBlocklistConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomBlocklistConfigOutput)
}

// CustomBlocklistConfigArrayInput is an input type that accepts CustomBlocklistConfigArray and CustomBlocklistConfigArrayOutput values.
// You can construct a concrete instance of `CustomBlocklistConfigArrayInput` via:
//
//	CustomBlocklistConfigArray{ CustomBlocklistConfigArgs{...} }
type CustomBlocklistConfigArrayInput interface {
	pulumi.Input

	ToCustomBlocklistConfigArrayOutput() CustomBlocklistConfigArrayOutput
	ToCustomBlocklistConfigArrayOutputWithContext(context.Context) CustomBlocklistConfigArrayOutput
}

type CustomBlocklistConfigArray []CustomBlocklistConfigInput

func (CustomBlocklistConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomBlocklistConfig)(nil)).Elem()
}

func (i CustomBlocklistConfigArray) ToCustomBlocklistConfigArrayOutput() CustomBlocklistConfigArrayOutput {
	return i.ToCustomBlocklistConfigArrayOutputWithContext(context.Background())
}

func (i CustomBlocklistConfigArray) ToCustomBlocklistConfigArrayOutputWithContext(ctx context.Context) CustomBlocklistConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomBlocklistConfigArrayOutput)
}

// Gets or sets the source to which filter applies.
type CustomBlocklistConfigOutput struct{ *pulumi.OutputState }

func (CustomBlocklistConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomBlocklistConfig)(nil)).Elem()
}

func (o CustomBlocklistConfigOutput) ToCustomBlocklistConfigOutput() CustomBlocklistConfigOutput {
	return o
}

func (o CustomBlocklistConfigOutput) ToCustomBlocklistConfigOutputWithContext(ctx context.Context) CustomBlocklistConfigOutput {
	return o
}

// If blocking would occur.
func (o CustomBlocklistConfigOutput) Blocking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomBlocklistConfig) *bool { return v.Blocking }).(pulumi.BoolPtrOutput)
}

// Name of ContentFilter.
func (o CustomBlocklistConfigOutput) BlocklistName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomBlocklistConfig) *string { return v.BlocklistName }).(pulumi.StringPtrOutput)
}

// Content source to apply the Content Filters.
func (o CustomBlocklistConfigOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomBlocklistConfig) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type CustomBlocklistConfigArrayOutput struct{ *pulumi.OutputState }

func (CustomBlocklistConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomBlocklistConfig)(nil)).Elem()
}

func (o CustomBlocklistConfigArrayOutput) ToCustomBlocklistConfigArrayOutput() CustomBlocklistConfigArrayOutput {
	return o
}

func (o CustomBlocklistConfigArrayOutput) ToCustomBlocklistConfigArrayOutputWithContext(ctx context.Context) CustomBlocklistConfigArrayOutput {
	return o
}

func (o CustomBlocklistConfigArrayOutput) Index(i pulumi.IntInput) CustomBlocklistConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomBlocklistConfig {
		return vs[0].([]CustomBlocklistConfig)[vs[1].(int)]
	}).(CustomBlocklistConfigOutput)
}

// Gets or sets the source to which filter applies.
type CustomBlocklistConfigResponse struct {
	// If blocking would occur.
	Blocking *bool `pulumi:"blocking"`
	// Name of ContentFilter.
	BlocklistName *string `pulumi:"blocklistName"`
	// Content source to apply the Content Filters.
	Source *string `pulumi:"source"`
}

// Gets or sets the source to which filter applies.
type CustomBlocklistConfigResponseOutput struct{ *pulumi.OutputState }

func (CustomBlocklistConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomBlocklistConfigResponse)(nil)).Elem()
}

func (o CustomBlocklistConfigResponseOutput) ToCustomBlocklistConfigResponseOutput() CustomBlocklistConfigResponseOutput {
	return o
}

func (o CustomBlocklistConfigResponseOutput) ToCustomBlocklistConfigResponseOutputWithContext(ctx context.Context) CustomBlocklistConfigResponseOutput {
	return o
}

// If blocking would occur.
func (o CustomBlocklistConfigResponseOutput) Blocking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomBlocklistConfigResponse) *bool { return v.Blocking }).(pulumi.BoolPtrOutput)
}

// Name of ContentFilter.
func (o CustomBlocklistConfigResponseOutput) BlocklistName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomBlocklistConfigResponse) *string { return v.BlocklistName }).(pulumi.StringPtrOutput)
}

// Content source to apply the Content Filters.
func (o CustomBlocklistConfigResponseOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomBlocklistConfigResponse) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type CustomBlocklistConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (CustomBlocklistConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomBlocklistConfigResponse)(nil)).Elem()
}

func (o CustomBlocklistConfigResponseArrayOutput) ToCustomBlocklistConfigResponseArrayOutput() CustomBlocklistConfigResponseArrayOutput {
	return o
}

func (o CustomBlocklistConfigResponseArrayOutput) ToCustomBlocklistConfigResponseArrayOutputWithContext(ctx context.Context) CustomBlocklistConfigResponseArrayOutput {
	return o
}

func (o CustomBlocklistConfigResponseArrayOutput) Index(i pulumi.IntInput) CustomBlocklistConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomBlocklistConfigResponse {
		return vs[0].([]CustomBlocklistConfigResponse)[vs[1].(int)]
	}).(CustomBlocklistConfigResponseOutput)
}

// Custom Keys credential object
type CustomKeys struct {
	Keys map[string]string `pulumi:"keys"`
}

// CustomKeysInput is an input type that accepts CustomKeysArgs and CustomKeysOutput values.
// You can construct a concrete instance of `CustomKeysInput` via:
//
//	CustomKeysArgs{...}
type CustomKeysInput interface {
	pulumi.Input

	ToCustomKeysOutput() CustomKeysOutput
	ToCustomKeysOutputWithContext(context.Context) CustomKeysOutput
}

// Custom Keys credential object
type CustomKeysArgs struct {
	Keys pulumi.StringMapInput `pulumi:"keys"`
}

func (CustomKeysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomKeys)(nil)).Elem()
}

func (i CustomKeysArgs) ToCustomKeysOutput() CustomKeysOutput {
	return i.ToCustomKeysOutputWithContext(context.Background())
}

func (i CustomKeysArgs) ToCustomKeysOutputWithContext(ctx context.Context) CustomKeysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomKeysOutput)
}

func (i CustomKeysArgs) ToCustomKeysPtrOutput() CustomKeysPtrOutput {
	return i.ToCustomKeysPtrOutputWithContext(context.Background())
}

func (i CustomKeysArgs) ToCustomKeysPtrOutputWithContext(ctx context.Context) CustomKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomKeysOutput).ToCustomKeysPtrOutputWithContext(ctx)
}

// CustomKeysPtrInput is an input type that accepts CustomKeysArgs, CustomKeysPtr and CustomKeysPtrOutput values.
// You can construct a concrete instance of `CustomKeysPtrInput` via:
//
//	        CustomKeysArgs{...}
//
//	or:
//
//	        nil
type CustomKeysPtrInput interface {
	pulumi.Input

	ToCustomKeysPtrOutput() CustomKeysPtrOutput
	ToCustomKeysPtrOutputWithContext(context.Context) CustomKeysPtrOutput
}

type customKeysPtrType CustomKeysArgs

func CustomKeysPtr(v *CustomKeysArgs) CustomKeysPtrInput {
	return (*customKeysPtrType)(v)
}

func (*customKeysPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomKeys)(nil)).Elem()
}

func (i *customKeysPtrType) ToCustomKeysPtrOutput() CustomKeysPtrOutput {
	return i.ToCustomKeysPtrOutputWithContext(context.Background())
}

func (i *customKeysPtrType) ToCustomKeysPtrOutputWithContext(ctx context.Context) CustomKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomKeysPtrOutput)
}

// Custom Keys credential object
type CustomKeysOutput struct{ *pulumi.OutputState }

func (CustomKeysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomKeys)(nil)).Elem()
}

func (o CustomKeysOutput) ToCustomKeysOutput() CustomKeysOutput {
	return o
}

func (o CustomKeysOutput) ToCustomKeysOutputWithContext(ctx context.Context) CustomKeysOutput {
	return o
}

func (o CustomKeysOutput) ToCustomKeysPtrOutput() CustomKeysPtrOutput {
	return o.ToCustomKeysPtrOutputWithContext(context.Background())
}

func (o CustomKeysOutput) ToCustomKeysPtrOutputWithContext(ctx context.Context) CustomKeysPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomKeys) *CustomKeys {
		return &v
	}).(CustomKeysPtrOutput)
}

func (o CustomKeysOutput) Keys() pulumi.StringMapOutput {
	return o.ApplyT(func(v CustomKeys) map[string]string { return v.Keys }).(pulumi.StringMapOutput)
}

type CustomKeysPtrOutput struct{ *pulumi.OutputState }

func (CustomKeysPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomKeys)(nil)).Elem()
}

func (o CustomKeysPtrOutput) ToCustomKeysPtrOutput() CustomKeysPtrOutput {
	return o
}

func (o CustomKeysPtrOutput) ToCustomKeysPtrOutputWithContext(ctx context.Context) CustomKeysPtrOutput {
	return o
}

func (o CustomKeysPtrOutput) Elem() CustomKeysOutput {
	return o.ApplyT(func(v *CustomKeys) CustomKeys {
		if v != nil {
			return *v
		}
		var ret CustomKeys
		return ret
	}).(CustomKeysOutput)
}

func (o CustomKeysPtrOutput) Keys() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomKeys) map[string]string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringMapOutput)
}

// Category:= CustomKeys
// AuthType:= CustomKeys (as type discriminator)
// Credentials:= {CustomKeys} as CustomKeys
// Target:= {any value}
// Use Metadata property bag for ApiVersion and other metadata fields
type CustomKeysConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'CustomKeys'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category *string `pulumi:"category"`
	// Custom Keys credential object
	Credentials   *CustomKeys `pulumi:"credentials"`
	Error         *string     `pulumi:"error"`
	ExpiryTime    *string     `pulumi:"expiryTime"`
	IsSharedToAll *bool       `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

// CustomKeysConnectionPropertiesInput is an input type that accepts CustomKeysConnectionPropertiesArgs and CustomKeysConnectionPropertiesOutput values.
// You can construct a concrete instance of `CustomKeysConnectionPropertiesInput` via:
//
//	CustomKeysConnectionPropertiesArgs{...}
type CustomKeysConnectionPropertiesInput interface {
	pulumi.Input

	ToCustomKeysConnectionPropertiesOutput() CustomKeysConnectionPropertiesOutput
	ToCustomKeysConnectionPropertiesOutputWithContext(context.Context) CustomKeysConnectionPropertiesOutput
}

// Category:= CustomKeys
// AuthType:= CustomKeys (as type discriminator)
// Credentials:= {CustomKeys} as CustomKeys
// Target:= {any value}
// Use Metadata property bag for ApiVersion and other metadata fields
type CustomKeysConnectionPropertiesArgs struct {
	// Authentication type of the connection target
	// Expected value is 'CustomKeys'.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Category of the connection
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Custom Keys credential object
	Credentials   CustomKeysPtrInput    `pulumi:"credentials"`
	Error         pulumi.StringPtrInput `pulumi:"error"`
	ExpiryTime    pulumi.StringPtrInput `pulumi:"expiryTime"`
	IsSharedToAll pulumi.BoolPtrInput   `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    pulumi.StringMapInput   `pulumi:"metadata"`
	PeRequirement               pulumi.StringPtrInput   `pulumi:"peRequirement"`
	PeStatus                    pulumi.StringPtrInput   `pulumi:"peStatus"`
	SharedUserList              pulumi.StringArrayInput `pulumi:"sharedUserList"`
	Target                      pulumi.StringPtrInput   `pulumi:"target"`
	UseWorkspaceManagedIdentity pulumi.BoolPtrInput     `pulumi:"useWorkspaceManagedIdentity"`
}

func (CustomKeysConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomKeysConnectionProperties)(nil)).Elem()
}

func (i CustomKeysConnectionPropertiesArgs) ToCustomKeysConnectionPropertiesOutput() CustomKeysConnectionPropertiesOutput {
	return i.ToCustomKeysConnectionPropertiesOutputWithContext(context.Background())
}

func (i CustomKeysConnectionPropertiesArgs) ToCustomKeysConnectionPropertiesOutputWithContext(ctx context.Context) CustomKeysConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomKeysConnectionPropertiesOutput)
}

// Category:= CustomKeys
// AuthType:= CustomKeys (as type discriminator)
// Credentials:= {CustomKeys} as CustomKeys
// Target:= {any value}
// Use Metadata property bag for ApiVersion and other metadata fields
type CustomKeysConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (CustomKeysConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomKeysConnectionProperties)(nil)).Elem()
}

func (o CustomKeysConnectionPropertiesOutput) ToCustomKeysConnectionPropertiesOutput() CustomKeysConnectionPropertiesOutput {
	return o
}

func (o CustomKeysConnectionPropertiesOutput) ToCustomKeysConnectionPropertiesOutputWithContext(ctx context.Context) CustomKeysConnectionPropertiesOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'CustomKeys'.
func (o CustomKeysConnectionPropertiesOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v CustomKeysConnectionProperties) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o CustomKeysConnectionPropertiesOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionProperties) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Custom Keys credential object
func (o CustomKeysConnectionPropertiesOutput) Credentials() CustomKeysPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionProperties) *CustomKeys { return v.Credentials }).(CustomKeysPtrOutput)
}

func (o CustomKeysConnectionPropertiesOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionProperties) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o CustomKeysConnectionPropertiesOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionProperties) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

func (o CustomKeysConnectionPropertiesOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionProperties) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o CustomKeysConnectionPropertiesOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v CustomKeysConnectionProperties) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o CustomKeysConnectionPropertiesOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionProperties) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o CustomKeysConnectionPropertiesOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionProperties) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o CustomKeysConnectionPropertiesOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomKeysConnectionProperties) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o CustomKeysConnectionPropertiesOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionProperties) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o CustomKeysConnectionPropertiesOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionProperties) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

// Category:= CustomKeys
// AuthType:= CustomKeys (as type discriminator)
// Credentials:= {CustomKeys} as CustomKeys
// Target:= {any value}
// Use Metadata property bag for ApiVersion and other metadata fields
type CustomKeysConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'CustomKeys'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category                *string `pulumi:"category"`
	CreatedByWorkspaceArmId string  `pulumi:"createdByWorkspaceArmId"`
	// Custom Keys credential object
	Credentials *CustomKeysResponse `pulumi:"credentials"`
	Error       *string             `pulumi:"error"`
	ExpiryTime  *string             `pulumi:"expiryTime"`
	// Group based on connection category
	Group         string `pulumi:"group"`
	IsSharedToAll *bool  `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

// Category:= CustomKeys
// AuthType:= CustomKeys (as type discriminator)
// Credentials:= {CustomKeys} as CustomKeys
// Target:= {any value}
// Use Metadata property bag for ApiVersion and other metadata fields
type CustomKeysConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (CustomKeysConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomKeysConnectionPropertiesResponse)(nil)).Elem()
}

func (o CustomKeysConnectionPropertiesResponseOutput) ToCustomKeysConnectionPropertiesResponseOutput() CustomKeysConnectionPropertiesResponseOutput {
	return o
}

func (o CustomKeysConnectionPropertiesResponseOutput) ToCustomKeysConnectionPropertiesResponseOutputWithContext(ctx context.Context) CustomKeysConnectionPropertiesResponseOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'CustomKeys'.
func (o CustomKeysConnectionPropertiesResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v CustomKeysConnectionPropertiesResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o CustomKeysConnectionPropertiesResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionPropertiesResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o CustomKeysConnectionPropertiesResponseOutput) CreatedByWorkspaceArmId() pulumi.StringOutput {
	return o.ApplyT(func(v CustomKeysConnectionPropertiesResponse) string { return v.CreatedByWorkspaceArmId }).(pulumi.StringOutput)
}

// Custom Keys credential object
func (o CustomKeysConnectionPropertiesResponseOutput) Credentials() CustomKeysResponsePtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionPropertiesResponse) *CustomKeysResponse { return v.Credentials }).(CustomKeysResponsePtrOutput)
}

func (o CustomKeysConnectionPropertiesResponseOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionPropertiesResponse) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o CustomKeysConnectionPropertiesResponseOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionPropertiesResponse) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

// Group based on connection category
func (o CustomKeysConnectionPropertiesResponseOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v CustomKeysConnectionPropertiesResponse) string { return v.Group }).(pulumi.StringOutput)
}

func (o CustomKeysConnectionPropertiesResponseOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionPropertiesResponse) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o CustomKeysConnectionPropertiesResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v CustomKeysConnectionPropertiesResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o CustomKeysConnectionPropertiesResponseOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionPropertiesResponse) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o CustomKeysConnectionPropertiesResponseOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionPropertiesResponse) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o CustomKeysConnectionPropertiesResponseOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomKeysConnectionPropertiesResponse) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o CustomKeysConnectionPropertiesResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionPropertiesResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o CustomKeysConnectionPropertiesResponseOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomKeysConnectionPropertiesResponse) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

// Custom Keys credential object
type CustomKeysResponse struct {
	Keys map[string]string `pulumi:"keys"`
}

// Custom Keys credential object
type CustomKeysResponseOutput struct{ *pulumi.OutputState }

func (CustomKeysResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomKeysResponse)(nil)).Elem()
}

func (o CustomKeysResponseOutput) ToCustomKeysResponseOutput() CustomKeysResponseOutput {
	return o
}

func (o CustomKeysResponseOutput) ToCustomKeysResponseOutputWithContext(ctx context.Context) CustomKeysResponseOutput {
	return o
}

func (o CustomKeysResponseOutput) Keys() pulumi.StringMapOutput {
	return o.ApplyT(func(v CustomKeysResponse) map[string]string { return v.Keys }).(pulumi.StringMapOutput)
}

type CustomKeysResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomKeysResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomKeysResponse)(nil)).Elem()
}

func (o CustomKeysResponsePtrOutput) ToCustomKeysResponsePtrOutput() CustomKeysResponsePtrOutput {
	return o
}

func (o CustomKeysResponsePtrOutput) ToCustomKeysResponsePtrOutputWithContext(ctx context.Context) CustomKeysResponsePtrOutput {
	return o
}

func (o CustomKeysResponsePtrOutput) Elem() CustomKeysResponseOutput {
	return o.ApplyT(func(v *CustomKeysResponse) CustomKeysResponse {
		if v != nil {
			return *v
		}
		var ret CustomKeysResponse
		return ret
	}).(CustomKeysResponseOutput)
}

func (o CustomKeysResponsePtrOutput) Keys() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomKeysResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringMapOutput)
}

// Internal use only.
type DeploymentCapacitySettings struct {
	// The designated capacity.
	DesignatedCapacity *int `pulumi:"designatedCapacity"`
	// The priority of this capacity setting.
	Priority *int `pulumi:"priority"`
}

// DeploymentCapacitySettingsInput is an input type that accepts DeploymentCapacitySettingsArgs and DeploymentCapacitySettingsOutput values.
// You can construct a concrete instance of `DeploymentCapacitySettingsInput` via:
//
//	DeploymentCapacitySettingsArgs{...}
type DeploymentCapacitySettingsInput interface {
	pulumi.Input

	ToDeploymentCapacitySettingsOutput() DeploymentCapacitySettingsOutput
	ToDeploymentCapacitySettingsOutputWithContext(context.Context) DeploymentCapacitySettingsOutput
}

// Internal use only.
type DeploymentCapacitySettingsArgs struct {
	// The designated capacity.
	DesignatedCapacity pulumi.IntPtrInput `pulumi:"designatedCapacity"`
	// The priority of this capacity setting.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
}

func (DeploymentCapacitySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentCapacitySettings)(nil)).Elem()
}

func (i DeploymentCapacitySettingsArgs) ToDeploymentCapacitySettingsOutput() DeploymentCapacitySettingsOutput {
	return i.ToDeploymentCapacitySettingsOutputWithContext(context.Background())
}

func (i DeploymentCapacitySettingsArgs) ToDeploymentCapacitySettingsOutputWithContext(ctx context.Context) DeploymentCapacitySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentCapacitySettingsOutput)
}

func (i DeploymentCapacitySettingsArgs) ToDeploymentCapacitySettingsPtrOutput() DeploymentCapacitySettingsPtrOutput {
	return i.ToDeploymentCapacitySettingsPtrOutputWithContext(context.Background())
}

func (i DeploymentCapacitySettingsArgs) ToDeploymentCapacitySettingsPtrOutputWithContext(ctx context.Context) DeploymentCapacitySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentCapacitySettingsOutput).ToDeploymentCapacitySettingsPtrOutputWithContext(ctx)
}

// DeploymentCapacitySettingsPtrInput is an input type that accepts DeploymentCapacitySettingsArgs, DeploymentCapacitySettingsPtr and DeploymentCapacitySettingsPtrOutput values.
// You can construct a concrete instance of `DeploymentCapacitySettingsPtrInput` via:
//
//	        DeploymentCapacitySettingsArgs{...}
//
//	or:
//
//	        nil
type DeploymentCapacitySettingsPtrInput interface {
	pulumi.Input

	ToDeploymentCapacitySettingsPtrOutput() DeploymentCapacitySettingsPtrOutput
	ToDeploymentCapacitySettingsPtrOutputWithContext(context.Context) DeploymentCapacitySettingsPtrOutput
}

type deploymentCapacitySettingsPtrType DeploymentCapacitySettingsArgs

func DeploymentCapacitySettingsPtr(v *DeploymentCapacitySettingsArgs) DeploymentCapacitySettingsPtrInput {
	return (*deploymentCapacitySettingsPtrType)(v)
}

func (*deploymentCapacitySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentCapacitySettings)(nil)).Elem()
}

func (i *deploymentCapacitySettingsPtrType) ToDeploymentCapacitySettingsPtrOutput() DeploymentCapacitySettingsPtrOutput {
	return i.ToDeploymentCapacitySettingsPtrOutputWithContext(context.Background())
}

func (i *deploymentCapacitySettingsPtrType) ToDeploymentCapacitySettingsPtrOutputWithContext(ctx context.Context) DeploymentCapacitySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentCapacitySettingsPtrOutput)
}

// Internal use only.
type DeploymentCapacitySettingsOutput struct{ *pulumi.OutputState }

func (DeploymentCapacitySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentCapacitySettings)(nil)).Elem()
}

func (o DeploymentCapacitySettingsOutput) ToDeploymentCapacitySettingsOutput() DeploymentCapacitySettingsOutput {
	return o
}

func (o DeploymentCapacitySettingsOutput) ToDeploymentCapacitySettingsOutputWithContext(ctx context.Context) DeploymentCapacitySettingsOutput {
	return o
}

func (o DeploymentCapacitySettingsOutput) ToDeploymentCapacitySettingsPtrOutput() DeploymentCapacitySettingsPtrOutput {
	return o.ToDeploymentCapacitySettingsPtrOutputWithContext(context.Background())
}

func (o DeploymentCapacitySettingsOutput) ToDeploymentCapacitySettingsPtrOutputWithContext(ctx context.Context) DeploymentCapacitySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentCapacitySettings) *DeploymentCapacitySettings {
		return &v
	}).(DeploymentCapacitySettingsPtrOutput)
}

// The designated capacity.
func (o DeploymentCapacitySettingsOutput) DesignatedCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentCapacitySettings) *int { return v.DesignatedCapacity }).(pulumi.IntPtrOutput)
}

// The priority of this capacity setting.
func (o DeploymentCapacitySettingsOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentCapacitySettings) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type DeploymentCapacitySettingsPtrOutput struct{ *pulumi.OutputState }

func (DeploymentCapacitySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentCapacitySettings)(nil)).Elem()
}

func (o DeploymentCapacitySettingsPtrOutput) ToDeploymentCapacitySettingsPtrOutput() DeploymentCapacitySettingsPtrOutput {
	return o
}

func (o DeploymentCapacitySettingsPtrOutput) ToDeploymentCapacitySettingsPtrOutputWithContext(ctx context.Context) DeploymentCapacitySettingsPtrOutput {
	return o
}

func (o DeploymentCapacitySettingsPtrOutput) Elem() DeploymentCapacitySettingsOutput {
	return o.ApplyT(func(v *DeploymentCapacitySettings) DeploymentCapacitySettings {
		if v != nil {
			return *v
		}
		var ret DeploymentCapacitySettings
		return ret
	}).(DeploymentCapacitySettingsOutput)
}

// The designated capacity.
func (o DeploymentCapacitySettingsPtrOutput) DesignatedCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentCapacitySettings) *int {
		if v == nil {
			return nil
		}
		return v.DesignatedCapacity
	}).(pulumi.IntPtrOutput)
}

// The priority of this capacity setting.
func (o DeploymentCapacitySettingsPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentCapacitySettings) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// Internal use only.
type DeploymentCapacitySettingsResponse struct {
	// The designated capacity.
	DesignatedCapacity *int `pulumi:"designatedCapacity"`
	// The priority of this capacity setting.
	Priority *int `pulumi:"priority"`
}

// Internal use only.
type DeploymentCapacitySettingsResponseOutput struct{ *pulumi.OutputState }

func (DeploymentCapacitySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentCapacitySettingsResponse)(nil)).Elem()
}

func (o DeploymentCapacitySettingsResponseOutput) ToDeploymentCapacitySettingsResponseOutput() DeploymentCapacitySettingsResponseOutput {
	return o
}

func (o DeploymentCapacitySettingsResponseOutput) ToDeploymentCapacitySettingsResponseOutputWithContext(ctx context.Context) DeploymentCapacitySettingsResponseOutput {
	return o
}

// The designated capacity.
func (o DeploymentCapacitySettingsResponseOutput) DesignatedCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentCapacitySettingsResponse) *int { return v.DesignatedCapacity }).(pulumi.IntPtrOutput)
}

// The priority of this capacity setting.
func (o DeploymentCapacitySettingsResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentCapacitySettingsResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type DeploymentCapacitySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DeploymentCapacitySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentCapacitySettingsResponse)(nil)).Elem()
}

func (o DeploymentCapacitySettingsResponsePtrOutput) ToDeploymentCapacitySettingsResponsePtrOutput() DeploymentCapacitySettingsResponsePtrOutput {
	return o
}

func (o DeploymentCapacitySettingsResponsePtrOutput) ToDeploymentCapacitySettingsResponsePtrOutputWithContext(ctx context.Context) DeploymentCapacitySettingsResponsePtrOutput {
	return o
}

func (o DeploymentCapacitySettingsResponsePtrOutput) Elem() DeploymentCapacitySettingsResponseOutput {
	return o.ApplyT(func(v *DeploymentCapacitySettingsResponse) DeploymentCapacitySettingsResponse {
		if v != nil {
			return *v
		}
		var ret DeploymentCapacitySettingsResponse
		return ret
	}).(DeploymentCapacitySettingsResponseOutput)
}

// The designated capacity.
func (o DeploymentCapacitySettingsResponsePtrOutput) DesignatedCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentCapacitySettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.DesignatedCapacity
	}).(pulumi.IntPtrOutput)
}

// The priority of this capacity setting.
func (o DeploymentCapacitySettingsResponsePtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentCapacitySettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// Properties of Cognitive Services account deployment model.
type DeploymentModel struct {
	// Deployment model format.
	Format *string `pulumi:"format"`
	// Deployment model name.
	Name *string `pulumi:"name"`
	// Deployment model publisher.
	Publisher *string `pulumi:"publisher"`
	// Optional. Deployment model source ARM resource ID.
	Source *string `pulumi:"source"`
	// Optional. Source of the model, another Microsoft.CognitiveServices accounts ARM resource ID.
	SourceAccount *string `pulumi:"sourceAccount"`
	// Optional. Deployment model version. If version is not specified, a default version will be assigned. The default version is different for different models and might change when there is new version available for a model. Default version for a model could be found from list models API.
	Version *string `pulumi:"version"`
}

// DeploymentModelInput is an input type that accepts DeploymentModelArgs and DeploymentModelOutput values.
// You can construct a concrete instance of `DeploymentModelInput` via:
//
//	DeploymentModelArgs{...}
type DeploymentModelInput interface {
	pulumi.Input

	ToDeploymentModelOutput() DeploymentModelOutput
	ToDeploymentModelOutputWithContext(context.Context) DeploymentModelOutput
}

// Properties of Cognitive Services account deployment model.
type DeploymentModelArgs struct {
	// Deployment model format.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Deployment model name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Deployment model publisher.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// Optional. Deployment model source ARM resource ID.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// Optional. Source of the model, another Microsoft.CognitiveServices accounts ARM resource ID.
	SourceAccount pulumi.StringPtrInput `pulumi:"sourceAccount"`
	// Optional. Deployment model version. If version is not specified, a default version will be assigned. The default version is different for different models and might change when there is new version available for a model. Default version for a model could be found from list models API.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DeploymentModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentModel)(nil)).Elem()
}

func (i DeploymentModelArgs) ToDeploymentModelOutput() DeploymentModelOutput {
	return i.ToDeploymentModelOutputWithContext(context.Background())
}

func (i DeploymentModelArgs) ToDeploymentModelOutputWithContext(ctx context.Context) DeploymentModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentModelOutput)
}

func (i DeploymentModelArgs) ToDeploymentModelPtrOutput() DeploymentModelPtrOutput {
	return i.ToDeploymentModelPtrOutputWithContext(context.Background())
}

func (i DeploymentModelArgs) ToDeploymentModelPtrOutputWithContext(ctx context.Context) DeploymentModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentModelOutput).ToDeploymentModelPtrOutputWithContext(ctx)
}

// DeploymentModelPtrInput is an input type that accepts DeploymentModelArgs, DeploymentModelPtr and DeploymentModelPtrOutput values.
// You can construct a concrete instance of `DeploymentModelPtrInput` via:
//
//	        DeploymentModelArgs{...}
//
//	or:
//
//	        nil
type DeploymentModelPtrInput interface {
	pulumi.Input

	ToDeploymentModelPtrOutput() DeploymentModelPtrOutput
	ToDeploymentModelPtrOutputWithContext(context.Context) DeploymentModelPtrOutput
}

type deploymentModelPtrType DeploymentModelArgs

func DeploymentModelPtr(v *DeploymentModelArgs) DeploymentModelPtrInput {
	return (*deploymentModelPtrType)(v)
}

func (*deploymentModelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentModel)(nil)).Elem()
}

func (i *deploymentModelPtrType) ToDeploymentModelPtrOutput() DeploymentModelPtrOutput {
	return i.ToDeploymentModelPtrOutputWithContext(context.Background())
}

func (i *deploymentModelPtrType) ToDeploymentModelPtrOutputWithContext(ctx context.Context) DeploymentModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentModelPtrOutput)
}

// Properties of Cognitive Services account deployment model.
type DeploymentModelOutput struct{ *pulumi.OutputState }

func (DeploymentModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentModel)(nil)).Elem()
}

func (o DeploymentModelOutput) ToDeploymentModelOutput() DeploymentModelOutput {
	return o
}

func (o DeploymentModelOutput) ToDeploymentModelOutputWithContext(ctx context.Context) DeploymentModelOutput {
	return o
}

func (o DeploymentModelOutput) ToDeploymentModelPtrOutput() DeploymentModelPtrOutput {
	return o.ToDeploymentModelPtrOutputWithContext(context.Background())
}

func (o DeploymentModelOutput) ToDeploymentModelPtrOutputWithContext(ctx context.Context) DeploymentModelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentModel) *DeploymentModel {
		return &v
	}).(DeploymentModelPtrOutput)
}

// Deployment model format.
func (o DeploymentModelOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentModel) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Deployment model name.
func (o DeploymentModelOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentModel) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Deployment model publisher.
func (o DeploymentModelOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentModel) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Optional. Deployment model source ARM resource ID.
func (o DeploymentModelOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentModel) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Optional. Source of the model, another Microsoft.CognitiveServices accounts ARM resource ID.
func (o DeploymentModelOutput) SourceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentModel) *string { return v.SourceAccount }).(pulumi.StringPtrOutput)
}

// Optional. Deployment model version. If version is not specified, a default version will be assigned. The default version is different for different models and might change when there is new version available for a model. Default version for a model could be found from list models API.
func (o DeploymentModelOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentModel) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DeploymentModelPtrOutput struct{ *pulumi.OutputState }

func (DeploymentModelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentModel)(nil)).Elem()
}

func (o DeploymentModelPtrOutput) ToDeploymentModelPtrOutput() DeploymentModelPtrOutput {
	return o
}

func (o DeploymentModelPtrOutput) ToDeploymentModelPtrOutputWithContext(ctx context.Context) DeploymentModelPtrOutput {
	return o
}

func (o DeploymentModelPtrOutput) Elem() DeploymentModelOutput {
	return o.ApplyT(func(v *DeploymentModel) DeploymentModel {
		if v != nil {
			return *v
		}
		var ret DeploymentModel
		return ret
	}).(DeploymentModelOutput)
}

// Deployment model format.
func (o DeploymentModelPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentModel) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// Deployment model name.
func (o DeploymentModelPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentModel) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Deployment model publisher.
func (o DeploymentModelPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentModel) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Optional. Deployment model source ARM resource ID.
func (o DeploymentModelPtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentModel) *string {
		if v == nil {
			return nil
		}
		return v.Source
	}).(pulumi.StringPtrOutput)
}

// Optional. Source of the model, another Microsoft.CognitiveServices accounts ARM resource ID.
func (o DeploymentModelPtrOutput) SourceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentModel) *string {
		if v == nil {
			return nil
		}
		return v.SourceAccount
	}).(pulumi.StringPtrOutput)
}

// Optional. Deployment model version. If version is not specified, a default version will be assigned. The default version is different for different models and might change when there is new version available for a model. Default version for a model could be found from list models API.
func (o DeploymentModelPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentModel) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Properties of Cognitive Services account deployment model.
type DeploymentModelResponse struct {
	// The call rate limit Cognitive Services account.
	CallRateLimit CallRateLimitResponse `pulumi:"callRateLimit"`
	// Deployment model format.
	Format *string `pulumi:"format"`
	// Deployment model name.
	Name *string `pulumi:"name"`
	// Deployment model publisher.
	Publisher *string `pulumi:"publisher"`
	// Optional. Deployment model source ARM resource ID.
	Source *string `pulumi:"source"`
	// Optional. Source of the model, another Microsoft.CognitiveServices accounts ARM resource ID.
	SourceAccount *string `pulumi:"sourceAccount"`
	// Optional. Deployment model version. If version is not specified, a default version will be assigned. The default version is different for different models and might change when there is new version available for a model. Default version for a model could be found from list models API.
	Version *string `pulumi:"version"`
}

// Properties of Cognitive Services account deployment model.
type DeploymentModelResponseOutput struct{ *pulumi.OutputState }

func (DeploymentModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentModelResponse)(nil)).Elem()
}

func (o DeploymentModelResponseOutput) ToDeploymentModelResponseOutput() DeploymentModelResponseOutput {
	return o
}

func (o DeploymentModelResponseOutput) ToDeploymentModelResponseOutputWithContext(ctx context.Context) DeploymentModelResponseOutput {
	return o
}

// The call rate limit Cognitive Services account.
func (o DeploymentModelResponseOutput) CallRateLimit() CallRateLimitResponseOutput {
	return o.ApplyT(func(v DeploymentModelResponse) CallRateLimitResponse { return v.CallRateLimit }).(CallRateLimitResponseOutput)
}

// Deployment model format.
func (o DeploymentModelResponseOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentModelResponse) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Deployment model name.
func (o DeploymentModelResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentModelResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Deployment model publisher.
func (o DeploymentModelResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentModelResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Optional. Deployment model source ARM resource ID.
func (o DeploymentModelResponseOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentModelResponse) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Optional. Source of the model, another Microsoft.CognitiveServices accounts ARM resource ID.
func (o DeploymentModelResponseOutput) SourceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentModelResponse) *string { return v.SourceAccount }).(pulumi.StringPtrOutput)
}

// Optional. Deployment model version. If version is not specified, a default version will be assigned. The default version is different for different models and might change when there is new version available for a model. Default version for a model could be found from list models API.
func (o DeploymentModelResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentModelResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DeploymentModelResponsePtrOutput struct{ *pulumi.OutputState }

func (DeploymentModelResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentModelResponse)(nil)).Elem()
}

func (o DeploymentModelResponsePtrOutput) ToDeploymentModelResponsePtrOutput() DeploymentModelResponsePtrOutput {
	return o
}

func (o DeploymentModelResponsePtrOutput) ToDeploymentModelResponsePtrOutputWithContext(ctx context.Context) DeploymentModelResponsePtrOutput {
	return o
}

func (o DeploymentModelResponsePtrOutput) Elem() DeploymentModelResponseOutput {
	return o.ApplyT(func(v *DeploymentModelResponse) DeploymentModelResponse {
		if v != nil {
			return *v
		}
		var ret DeploymentModelResponse
		return ret
	}).(DeploymentModelResponseOutput)
}

// The call rate limit Cognitive Services account.
func (o DeploymentModelResponsePtrOutput) CallRateLimit() CallRateLimitResponsePtrOutput {
	return o.ApplyT(func(v *DeploymentModelResponse) *CallRateLimitResponse {
		if v == nil {
			return nil
		}
		return &v.CallRateLimit
	}).(CallRateLimitResponsePtrOutput)
}

// Deployment model format.
func (o DeploymentModelResponsePtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentModelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// Deployment model name.
func (o DeploymentModelResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentModelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Deployment model publisher.
func (o DeploymentModelResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentModelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Optional. Deployment model source ARM resource ID.
func (o DeploymentModelResponsePtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentModelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Source
	}).(pulumi.StringPtrOutput)
}

// Optional. Source of the model, another Microsoft.CognitiveServices accounts ARM resource ID.
func (o DeploymentModelResponsePtrOutput) SourceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentModelResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceAccount
	}).(pulumi.StringPtrOutput)
}

// Optional. Deployment model version. If version is not specified, a default version will be assigned. The default version is different for different models and might change when there is new version available for a model. Default version for a model could be found from list models API.
func (o DeploymentModelResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentModelResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Properties of Cognitive Services account deployment.
type DeploymentProperties struct {
	// Internal use only.
	CapacitySettings *DeploymentCapacitySettings `pulumi:"capacitySettings"`
	// The current capacity.
	CurrentCapacity *int `pulumi:"currentCapacity"`
	// Properties of Cognitive Services account deployment model.
	Model *DeploymentModel `pulumi:"model"`
	// The name of parent deployment.
	ParentDeploymentName *string `pulumi:"parentDeploymentName"`
	// The name of RAI policy.
	RaiPolicyName *string `pulumi:"raiPolicyName"`
	// Properties of Cognitive Services account deployment model. (Deprecated, please use Deployment.sku instead.)
	ScaleSettings *DeploymentScaleSettings `pulumi:"scaleSettings"`
	// Deployment model version upgrade option.
	VersionUpgradeOption *string `pulumi:"versionUpgradeOption"`
}

// DeploymentPropertiesInput is an input type that accepts DeploymentPropertiesArgs and DeploymentPropertiesOutput values.
// You can construct a concrete instance of `DeploymentPropertiesInput` via:
//
//	DeploymentPropertiesArgs{...}
type DeploymentPropertiesInput interface {
	pulumi.Input

	ToDeploymentPropertiesOutput() DeploymentPropertiesOutput
	ToDeploymentPropertiesOutputWithContext(context.Context) DeploymentPropertiesOutput
}

// Properties of Cognitive Services account deployment.
type DeploymentPropertiesArgs struct {
	// Internal use only.
	CapacitySettings DeploymentCapacitySettingsPtrInput `pulumi:"capacitySettings"`
	// The current capacity.
	CurrentCapacity pulumi.IntPtrInput `pulumi:"currentCapacity"`
	// Properties of Cognitive Services account deployment model.
	Model DeploymentModelPtrInput `pulumi:"model"`
	// The name of parent deployment.
	ParentDeploymentName pulumi.StringPtrInput `pulumi:"parentDeploymentName"`
	// The name of RAI policy.
	RaiPolicyName pulumi.StringPtrInput `pulumi:"raiPolicyName"`
	// Properties of Cognitive Services account deployment model. (Deprecated, please use Deployment.sku instead.)
	ScaleSettings DeploymentScaleSettingsPtrInput `pulumi:"scaleSettings"`
	// Deployment model version upgrade option.
	VersionUpgradeOption pulumi.StringPtrInput `pulumi:"versionUpgradeOption"`
}

func (DeploymentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentProperties)(nil)).Elem()
}

func (i DeploymentPropertiesArgs) ToDeploymentPropertiesOutput() DeploymentPropertiesOutput {
	return i.ToDeploymentPropertiesOutputWithContext(context.Background())
}

func (i DeploymentPropertiesArgs) ToDeploymentPropertiesOutputWithContext(ctx context.Context) DeploymentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPropertiesOutput)
}

func (i DeploymentPropertiesArgs) ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput {
	return i.ToDeploymentPropertiesPtrOutputWithContext(context.Background())
}

func (i DeploymentPropertiesArgs) ToDeploymentPropertiesPtrOutputWithContext(ctx context.Context) DeploymentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPropertiesOutput).ToDeploymentPropertiesPtrOutputWithContext(ctx)
}

// DeploymentPropertiesPtrInput is an input type that accepts DeploymentPropertiesArgs, DeploymentPropertiesPtr and DeploymentPropertiesPtrOutput values.
// You can construct a concrete instance of `DeploymentPropertiesPtrInput` via:
//
//	        DeploymentPropertiesArgs{...}
//
//	or:
//
//	        nil
type DeploymentPropertiesPtrInput interface {
	pulumi.Input

	ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput
	ToDeploymentPropertiesPtrOutputWithContext(context.Context) DeploymentPropertiesPtrOutput
}

type deploymentPropertiesPtrType DeploymentPropertiesArgs

func DeploymentPropertiesPtr(v *DeploymentPropertiesArgs) DeploymentPropertiesPtrInput {
	return (*deploymentPropertiesPtrType)(v)
}

func (*deploymentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentProperties)(nil)).Elem()
}

func (i *deploymentPropertiesPtrType) ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput {
	return i.ToDeploymentPropertiesPtrOutputWithContext(context.Background())
}

func (i *deploymentPropertiesPtrType) ToDeploymentPropertiesPtrOutputWithContext(ctx context.Context) DeploymentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPropertiesPtrOutput)
}

// Properties of Cognitive Services account deployment.
type DeploymentPropertiesOutput struct{ *pulumi.OutputState }

func (DeploymentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentProperties)(nil)).Elem()
}

func (o DeploymentPropertiesOutput) ToDeploymentPropertiesOutput() DeploymentPropertiesOutput {
	return o
}

func (o DeploymentPropertiesOutput) ToDeploymentPropertiesOutputWithContext(ctx context.Context) DeploymentPropertiesOutput {
	return o
}

func (o DeploymentPropertiesOutput) ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput {
	return o.ToDeploymentPropertiesPtrOutputWithContext(context.Background())
}

func (o DeploymentPropertiesOutput) ToDeploymentPropertiesPtrOutputWithContext(ctx context.Context) DeploymentPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentProperties) *DeploymentProperties {
		return &v
	}).(DeploymentPropertiesPtrOutput)
}

// Internal use only.
func (o DeploymentPropertiesOutput) CapacitySettings() DeploymentCapacitySettingsPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *DeploymentCapacitySettings { return v.CapacitySettings }).(DeploymentCapacitySettingsPtrOutput)
}

// The current capacity.
func (o DeploymentPropertiesOutput) CurrentCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *int { return v.CurrentCapacity }).(pulumi.IntPtrOutput)
}

// Properties of Cognitive Services account deployment model.
func (o DeploymentPropertiesOutput) Model() DeploymentModelPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *DeploymentModel { return v.Model }).(DeploymentModelPtrOutput)
}

// The name of parent deployment.
func (o DeploymentPropertiesOutput) ParentDeploymentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *string { return v.ParentDeploymentName }).(pulumi.StringPtrOutput)
}

// The name of RAI policy.
func (o DeploymentPropertiesOutput) RaiPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *string { return v.RaiPolicyName }).(pulumi.StringPtrOutput)
}

// Properties of Cognitive Services account deployment model. (Deprecated, please use Deployment.sku instead.)
func (o DeploymentPropertiesOutput) ScaleSettings() DeploymentScaleSettingsPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *DeploymentScaleSettings { return v.ScaleSettings }).(DeploymentScaleSettingsPtrOutput)
}

// Deployment model version upgrade option.
func (o DeploymentPropertiesOutput) VersionUpgradeOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *string { return v.VersionUpgradeOption }).(pulumi.StringPtrOutput)
}

type DeploymentPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DeploymentPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentProperties)(nil)).Elem()
}

func (o DeploymentPropertiesPtrOutput) ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput {
	return o
}

func (o DeploymentPropertiesPtrOutput) ToDeploymentPropertiesPtrOutputWithContext(ctx context.Context) DeploymentPropertiesPtrOutput {
	return o
}

func (o DeploymentPropertiesPtrOutput) Elem() DeploymentPropertiesOutput {
	return o.ApplyT(func(v *DeploymentProperties) DeploymentProperties {
		if v != nil {
			return *v
		}
		var ret DeploymentProperties
		return ret
	}).(DeploymentPropertiesOutput)
}

// Internal use only.
func (o DeploymentPropertiesPtrOutput) CapacitySettings() DeploymentCapacitySettingsPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *DeploymentCapacitySettings {
		if v == nil {
			return nil
		}
		return v.CapacitySettings
	}).(DeploymentCapacitySettingsPtrOutput)
}

// The current capacity.
func (o DeploymentPropertiesPtrOutput) CurrentCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *int {
		if v == nil {
			return nil
		}
		return v.CurrentCapacity
	}).(pulumi.IntPtrOutput)
}

// Properties of Cognitive Services account deployment model.
func (o DeploymentPropertiesPtrOutput) Model() DeploymentModelPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *DeploymentModel {
		if v == nil {
			return nil
		}
		return v.Model
	}).(DeploymentModelPtrOutput)
}

// The name of parent deployment.
func (o DeploymentPropertiesPtrOutput) ParentDeploymentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *string {
		if v == nil {
			return nil
		}
		return v.ParentDeploymentName
	}).(pulumi.StringPtrOutput)
}

// The name of RAI policy.
func (o DeploymentPropertiesPtrOutput) RaiPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *string {
		if v == nil {
			return nil
		}
		return v.RaiPolicyName
	}).(pulumi.StringPtrOutput)
}

// Properties of Cognitive Services account deployment model. (Deprecated, please use Deployment.sku instead.)
func (o DeploymentPropertiesPtrOutput) ScaleSettings() DeploymentScaleSettingsPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *DeploymentScaleSettings {
		if v == nil {
			return nil
		}
		return v.ScaleSettings
	}).(DeploymentScaleSettingsPtrOutput)
}

// Deployment model version upgrade option.
func (o DeploymentPropertiesPtrOutput) VersionUpgradeOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *string {
		if v == nil {
			return nil
		}
		return v.VersionUpgradeOption
	}).(pulumi.StringPtrOutput)
}

// Properties of Cognitive Services account deployment.
type DeploymentPropertiesResponse struct {
	// The call rate limit Cognitive Services account.
	CallRateLimit CallRateLimitResponse `pulumi:"callRateLimit"`
	// The capabilities.
	Capabilities map[string]string `pulumi:"capabilities"`
	// Internal use only.
	CapacitySettings *DeploymentCapacitySettingsResponse `pulumi:"capacitySettings"`
	// The current capacity.
	CurrentCapacity *int `pulumi:"currentCapacity"`
	// If the dynamic throttling is enabled.
	DynamicThrottlingEnabled bool `pulumi:"dynamicThrottlingEnabled"`
	// Properties of Cognitive Services account deployment model.
	Model *DeploymentModelResponse `pulumi:"model"`
	// The name of parent deployment.
	ParentDeploymentName *string `pulumi:"parentDeploymentName"`
	// Gets the status of the resource at the time the operation was called.
	ProvisioningState string `pulumi:"provisioningState"`
	// The name of RAI policy.
	RaiPolicyName *string                  `pulumi:"raiPolicyName"`
	RateLimits    []ThrottlingRuleResponse `pulumi:"rateLimits"`
	// Properties of Cognitive Services account deployment model. (Deprecated, please use Deployment.sku instead.)
	ScaleSettings *DeploymentScaleSettingsResponse `pulumi:"scaleSettings"`
	// Deployment model version upgrade option.
	VersionUpgradeOption *string `pulumi:"versionUpgradeOption"`
}

// Properties of Cognitive Services account deployment.
type DeploymentPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DeploymentPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentPropertiesResponse)(nil)).Elem()
}

func (o DeploymentPropertiesResponseOutput) ToDeploymentPropertiesResponseOutput() DeploymentPropertiesResponseOutput {
	return o
}

func (o DeploymentPropertiesResponseOutput) ToDeploymentPropertiesResponseOutputWithContext(ctx context.Context) DeploymentPropertiesResponseOutput {
	return o
}

// The call rate limit Cognitive Services account.
func (o DeploymentPropertiesResponseOutput) CallRateLimit() CallRateLimitResponseOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) CallRateLimitResponse { return v.CallRateLimit }).(CallRateLimitResponseOutput)
}

// The capabilities.
func (o DeploymentPropertiesResponseOutput) Capabilities() pulumi.StringMapOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) map[string]string { return v.Capabilities }).(pulumi.StringMapOutput)
}

// Internal use only.
func (o DeploymentPropertiesResponseOutput) CapacitySettings() DeploymentCapacitySettingsResponsePtrOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) *DeploymentCapacitySettingsResponse { return v.CapacitySettings }).(DeploymentCapacitySettingsResponsePtrOutput)
}

// The current capacity.
func (o DeploymentPropertiesResponseOutput) CurrentCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) *int { return v.CurrentCapacity }).(pulumi.IntPtrOutput)
}

// If the dynamic throttling is enabled.
func (o DeploymentPropertiesResponseOutput) DynamicThrottlingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) bool { return v.DynamicThrottlingEnabled }).(pulumi.BoolOutput)
}

// Properties of Cognitive Services account deployment model.
func (o DeploymentPropertiesResponseOutput) Model() DeploymentModelResponsePtrOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) *DeploymentModelResponse { return v.Model }).(DeploymentModelResponsePtrOutput)
}

// The name of parent deployment.
func (o DeploymentPropertiesResponseOutput) ParentDeploymentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) *string { return v.ParentDeploymentName }).(pulumi.StringPtrOutput)
}

// Gets the status of the resource at the time the operation was called.
func (o DeploymentPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The name of RAI policy.
func (o DeploymentPropertiesResponseOutput) RaiPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) *string { return v.RaiPolicyName }).(pulumi.StringPtrOutput)
}

func (o DeploymentPropertiesResponseOutput) RateLimits() ThrottlingRuleResponseArrayOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) []ThrottlingRuleResponse { return v.RateLimits }).(ThrottlingRuleResponseArrayOutput)
}

// Properties of Cognitive Services account deployment model. (Deprecated, please use Deployment.sku instead.)
func (o DeploymentPropertiesResponseOutput) ScaleSettings() DeploymentScaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) *DeploymentScaleSettingsResponse { return v.ScaleSettings }).(DeploymentScaleSettingsResponsePtrOutput)
}

// Deployment model version upgrade option.
func (o DeploymentPropertiesResponseOutput) VersionUpgradeOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) *string { return v.VersionUpgradeOption }).(pulumi.StringPtrOutput)
}

// Properties of Cognitive Services account deployment model. (Deprecated, please use Deployment.sku instead.)
type DeploymentScaleSettings struct {
	// Deployment capacity.
	Capacity *int `pulumi:"capacity"`
	// Deployment scale type.
	ScaleType *string `pulumi:"scaleType"`
}

// DeploymentScaleSettingsInput is an input type that accepts DeploymentScaleSettingsArgs and DeploymentScaleSettingsOutput values.
// You can construct a concrete instance of `DeploymentScaleSettingsInput` via:
//
//	DeploymentScaleSettingsArgs{...}
type DeploymentScaleSettingsInput interface {
	pulumi.Input

	ToDeploymentScaleSettingsOutput() DeploymentScaleSettingsOutput
	ToDeploymentScaleSettingsOutputWithContext(context.Context) DeploymentScaleSettingsOutput
}

// Properties of Cognitive Services account deployment model. (Deprecated, please use Deployment.sku instead.)
type DeploymentScaleSettingsArgs struct {
	// Deployment capacity.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Deployment scale type.
	ScaleType pulumi.StringPtrInput `pulumi:"scaleType"`
}

func (DeploymentScaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentScaleSettings)(nil)).Elem()
}

func (i DeploymentScaleSettingsArgs) ToDeploymentScaleSettingsOutput() DeploymentScaleSettingsOutput {
	return i.ToDeploymentScaleSettingsOutputWithContext(context.Background())
}

func (i DeploymentScaleSettingsArgs) ToDeploymentScaleSettingsOutputWithContext(ctx context.Context) DeploymentScaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentScaleSettingsOutput)
}

func (i DeploymentScaleSettingsArgs) ToDeploymentScaleSettingsPtrOutput() DeploymentScaleSettingsPtrOutput {
	return i.ToDeploymentScaleSettingsPtrOutputWithContext(context.Background())
}

func (i DeploymentScaleSettingsArgs) ToDeploymentScaleSettingsPtrOutputWithContext(ctx context.Context) DeploymentScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentScaleSettingsOutput).ToDeploymentScaleSettingsPtrOutputWithContext(ctx)
}

// DeploymentScaleSettingsPtrInput is an input type that accepts DeploymentScaleSettingsArgs, DeploymentScaleSettingsPtr and DeploymentScaleSettingsPtrOutput values.
// You can construct a concrete instance of `DeploymentScaleSettingsPtrInput` via:
//
//	        DeploymentScaleSettingsArgs{...}
//
//	or:
//
//	        nil
type DeploymentScaleSettingsPtrInput interface {
	pulumi.Input

	ToDeploymentScaleSettingsPtrOutput() DeploymentScaleSettingsPtrOutput
	ToDeploymentScaleSettingsPtrOutputWithContext(context.Context) DeploymentScaleSettingsPtrOutput
}

type deploymentScaleSettingsPtrType DeploymentScaleSettingsArgs

func DeploymentScaleSettingsPtr(v *DeploymentScaleSettingsArgs) DeploymentScaleSettingsPtrInput {
	return (*deploymentScaleSettingsPtrType)(v)
}

func (*deploymentScaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentScaleSettings)(nil)).Elem()
}

func (i *deploymentScaleSettingsPtrType) ToDeploymentScaleSettingsPtrOutput() DeploymentScaleSettingsPtrOutput {
	return i.ToDeploymentScaleSettingsPtrOutputWithContext(context.Background())
}

func (i *deploymentScaleSettingsPtrType) ToDeploymentScaleSettingsPtrOutputWithContext(ctx context.Context) DeploymentScaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentScaleSettingsPtrOutput)
}

// Properties of Cognitive Services account deployment model. (Deprecated, please use Deployment.sku instead.)
type DeploymentScaleSettingsOutput struct{ *pulumi.OutputState }

func (DeploymentScaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentScaleSettings)(nil)).Elem()
}

func (o DeploymentScaleSettingsOutput) ToDeploymentScaleSettingsOutput() DeploymentScaleSettingsOutput {
	return o
}

func (o DeploymentScaleSettingsOutput) ToDeploymentScaleSettingsOutputWithContext(ctx context.Context) DeploymentScaleSettingsOutput {
	return o
}

func (o DeploymentScaleSettingsOutput) ToDeploymentScaleSettingsPtrOutput() DeploymentScaleSettingsPtrOutput {
	return o.ToDeploymentScaleSettingsPtrOutputWithContext(context.Background())
}

func (o DeploymentScaleSettingsOutput) ToDeploymentScaleSettingsPtrOutputWithContext(ctx context.Context) DeploymentScaleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentScaleSettings) *DeploymentScaleSettings {
		return &v
	}).(DeploymentScaleSettingsPtrOutput)
}

// Deployment capacity.
func (o DeploymentScaleSettingsOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentScaleSettings) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Deployment scale type.
func (o DeploymentScaleSettingsOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentScaleSettings) *string { return v.ScaleType }).(pulumi.StringPtrOutput)
}

type DeploymentScaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (DeploymentScaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentScaleSettings)(nil)).Elem()
}

func (o DeploymentScaleSettingsPtrOutput) ToDeploymentScaleSettingsPtrOutput() DeploymentScaleSettingsPtrOutput {
	return o
}

func (o DeploymentScaleSettingsPtrOutput) ToDeploymentScaleSettingsPtrOutputWithContext(ctx context.Context) DeploymentScaleSettingsPtrOutput {
	return o
}

func (o DeploymentScaleSettingsPtrOutput) Elem() DeploymentScaleSettingsOutput {
	return o.ApplyT(func(v *DeploymentScaleSettings) DeploymentScaleSettings {
		if v != nil {
			return *v
		}
		var ret DeploymentScaleSettings
		return ret
	}).(DeploymentScaleSettingsOutput)
}

// Deployment capacity.
func (o DeploymentScaleSettingsPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentScaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Deployment scale type.
func (o DeploymentScaleSettingsPtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentScaleSettings) *string {
		if v == nil {
			return nil
		}
		return v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Properties of Cognitive Services account deployment model. (Deprecated, please use Deployment.sku instead.)
type DeploymentScaleSettingsResponse struct {
	// Deployment active capacity. This value might be different from `capacity` if customer recently updated `capacity`.
	ActiveCapacity int `pulumi:"activeCapacity"`
	// Deployment capacity.
	Capacity *int `pulumi:"capacity"`
	// Deployment scale type.
	ScaleType *string `pulumi:"scaleType"`
}

// Properties of Cognitive Services account deployment model. (Deprecated, please use Deployment.sku instead.)
type DeploymentScaleSettingsResponseOutput struct{ *pulumi.OutputState }

func (DeploymentScaleSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentScaleSettingsResponse)(nil)).Elem()
}

func (o DeploymentScaleSettingsResponseOutput) ToDeploymentScaleSettingsResponseOutput() DeploymentScaleSettingsResponseOutput {
	return o
}

func (o DeploymentScaleSettingsResponseOutput) ToDeploymentScaleSettingsResponseOutputWithContext(ctx context.Context) DeploymentScaleSettingsResponseOutput {
	return o
}

// Deployment active capacity. This value might be different from `capacity` if customer recently updated `capacity`.
func (o DeploymentScaleSettingsResponseOutput) ActiveCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v DeploymentScaleSettingsResponse) int { return v.ActiveCapacity }).(pulumi.IntOutput)
}

// Deployment capacity.
func (o DeploymentScaleSettingsResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentScaleSettingsResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Deployment scale type.
func (o DeploymentScaleSettingsResponseOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentScaleSettingsResponse) *string { return v.ScaleType }).(pulumi.StringPtrOutput)
}

type DeploymentScaleSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DeploymentScaleSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentScaleSettingsResponse)(nil)).Elem()
}

func (o DeploymentScaleSettingsResponsePtrOutput) ToDeploymentScaleSettingsResponsePtrOutput() DeploymentScaleSettingsResponsePtrOutput {
	return o
}

func (o DeploymentScaleSettingsResponsePtrOutput) ToDeploymentScaleSettingsResponsePtrOutputWithContext(ctx context.Context) DeploymentScaleSettingsResponsePtrOutput {
	return o
}

func (o DeploymentScaleSettingsResponsePtrOutput) Elem() DeploymentScaleSettingsResponseOutput {
	return o.ApplyT(func(v *DeploymentScaleSettingsResponse) DeploymentScaleSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DeploymentScaleSettingsResponse
		return ret
	}).(DeploymentScaleSettingsResponseOutput)
}

// Deployment active capacity. This value might be different from `capacity` if customer recently updated `capacity`.
func (o DeploymentScaleSettingsResponsePtrOutput) ActiveCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ActiveCapacity
	}).(pulumi.IntPtrOutput)
}

// Deployment capacity.
func (o DeploymentScaleSettingsResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentScaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Deployment scale type.
func (o DeploymentScaleSettingsResponsePtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentScaleSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Properties to configure Encryption
type Encryption struct {
	// Enumerates the possible value of keySource for Encryption
	KeySource *string `pulumi:"keySource"`
	// Properties of KeyVault
	KeyVaultProperties *KeyVaultProperties `pulumi:"keyVaultProperties"`
}

// Defaults sets the appropriate defaults for Encryption
func (val *Encryption) Defaults() *Encryption {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.KeySource == nil {
		keySource_ := "Microsoft.KeyVault"
		tmp.KeySource = &keySource_
	}
	return &tmp
}

// EncryptionInput is an input type that accepts EncryptionArgs and EncryptionOutput values.
// You can construct a concrete instance of `EncryptionInput` via:
//
//	EncryptionArgs{...}
type EncryptionInput interface {
	pulumi.Input

	ToEncryptionOutput() EncryptionOutput
	ToEncryptionOutputWithContext(context.Context) EncryptionOutput
}

// Properties to configure Encryption
type EncryptionArgs struct {
	// Enumerates the possible value of keySource for Encryption
	KeySource pulumi.StringPtrInput `pulumi:"keySource"`
	// Properties of KeyVault
	KeyVaultProperties KeyVaultPropertiesPtrInput `pulumi:"keyVaultProperties"`
}

// Defaults sets the appropriate defaults for EncryptionArgs
func (val *EncryptionArgs) Defaults() *EncryptionArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.KeySource == nil {
		tmp.KeySource = pulumi.StringPtr("Microsoft.KeyVault")
	}
	return &tmp
}
func (EncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Encryption)(nil)).Elem()
}

func (i EncryptionArgs) ToEncryptionOutput() EncryptionOutput {
	return i.ToEncryptionOutputWithContext(context.Background())
}

func (i EncryptionArgs) ToEncryptionOutputWithContext(ctx context.Context) EncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionOutput)
}

func (i EncryptionArgs) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return i.ToEncryptionPtrOutputWithContext(context.Background())
}

func (i EncryptionArgs) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionOutput).ToEncryptionPtrOutputWithContext(ctx)
}

// EncryptionPtrInput is an input type that accepts EncryptionArgs, EncryptionPtr and EncryptionPtrOutput values.
// You can construct a concrete instance of `EncryptionPtrInput` via:
//
//	        EncryptionArgs{...}
//
//	or:
//
//	        nil
type EncryptionPtrInput interface {
	pulumi.Input

	ToEncryptionPtrOutput() EncryptionPtrOutput
	ToEncryptionPtrOutputWithContext(context.Context) EncryptionPtrOutput
}

type encryptionPtrType EncryptionArgs

func EncryptionPtr(v *EncryptionArgs) EncryptionPtrInput {
	return (*encryptionPtrType)(v)
}

func (*encryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Encryption)(nil)).Elem()
}

func (i *encryptionPtrType) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return i.ToEncryptionPtrOutputWithContext(context.Background())
}

func (i *encryptionPtrType) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPtrOutput)
}

// Properties to configure Encryption
type EncryptionOutput struct{ *pulumi.OutputState }

func (EncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Encryption)(nil)).Elem()
}

func (o EncryptionOutput) ToEncryptionOutput() EncryptionOutput {
	return o
}

func (o EncryptionOutput) ToEncryptionOutputWithContext(ctx context.Context) EncryptionOutput {
	return o
}

func (o EncryptionOutput) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return o.ToEncryptionPtrOutputWithContext(context.Background())
}

func (o EncryptionOutput) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Encryption) *Encryption {
		return &v
	}).(EncryptionPtrOutput)
}

// Enumerates the possible value of keySource for Encryption
func (o EncryptionOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Encryption) *string { return v.KeySource }).(pulumi.StringPtrOutput)
}

// Properties of KeyVault
func (o EncryptionOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v Encryption) *KeyVaultProperties { return v.KeyVaultProperties }).(KeyVaultPropertiesPtrOutput)
}

type EncryptionPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Encryption)(nil)).Elem()
}

func (o EncryptionPtrOutput) ToEncryptionPtrOutput() EncryptionPtrOutput {
	return o
}

func (o EncryptionPtrOutput) ToEncryptionPtrOutputWithContext(ctx context.Context) EncryptionPtrOutput {
	return o
}

func (o EncryptionPtrOutput) Elem() EncryptionOutput {
	return o.ApplyT(func(v *Encryption) Encryption {
		if v != nil {
			return *v
		}
		var ret Encryption
		return ret
	}).(EncryptionOutput)
}

// Enumerates the possible value of keySource for Encryption
func (o EncryptionPtrOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Encryption) *string {
		if v == nil {
			return nil
		}
		return v.KeySource
	}).(pulumi.StringPtrOutput)
}

// Properties of KeyVault
func (o EncryptionPtrOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *Encryption) *KeyVaultProperties {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(KeyVaultPropertiesPtrOutput)
}

// Properties to configure Encryption
type EncryptionResponse struct {
	// Enumerates the possible value of keySource for Encryption
	KeySource *string `pulumi:"keySource"`
	// Properties of KeyVault
	KeyVaultProperties *KeyVaultPropertiesResponse `pulumi:"keyVaultProperties"`
}

// Defaults sets the appropriate defaults for EncryptionResponse
func (val *EncryptionResponse) Defaults() *EncryptionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.KeySource == nil {
		keySource_ := "Microsoft.KeyVault"
		tmp.KeySource = &keySource_
	}
	return &tmp
}

// Properties to configure Encryption
type EncryptionResponseOutput struct{ *pulumi.OutputState }

func (EncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionResponse)(nil)).Elem()
}

func (o EncryptionResponseOutput) ToEncryptionResponseOutput() EncryptionResponseOutput {
	return o
}

func (o EncryptionResponseOutput) ToEncryptionResponseOutputWithContext(ctx context.Context) EncryptionResponseOutput {
	return o
}

// Enumerates the possible value of keySource for Encryption
func (o EncryptionResponseOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *string { return v.KeySource }).(pulumi.StringPtrOutput)
}

// Properties of KeyVault
func (o EncryptionResponseOutput) KeyVaultProperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EncryptionResponse) *KeyVaultPropertiesResponse { return v.KeyVaultProperties }).(KeyVaultPropertiesResponsePtrOutput)
}

type EncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionResponse)(nil)).Elem()
}

func (o EncryptionResponsePtrOutput) ToEncryptionResponsePtrOutput() EncryptionResponsePtrOutput {
	return o
}

func (o EncryptionResponsePtrOutput) ToEncryptionResponsePtrOutputWithContext(ctx context.Context) EncryptionResponsePtrOutput {
	return o
}

func (o EncryptionResponsePtrOutput) Elem() EncryptionResponseOutput {
	return o.ApplyT(func(v *EncryptionResponse) EncryptionResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionResponse
		return ret
	}).(EncryptionResponseOutput)
}

// Enumerates the possible value of keySource for Encryption
func (o EncryptionResponsePtrOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeySource
	}).(pulumi.StringPtrOutput)
}

// Properties of KeyVault
func (o EncryptionResponsePtrOutput) KeyVaultProperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionResponse) *KeyVaultPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(KeyVaultPropertiesResponsePtrOutput)
}

// Properties to EncryptionScope
type EncryptionScopeProperties struct {
	// Enumerates the possible value of keySource for Encryption
	KeySource *string `pulumi:"keySource"`
	// Properties of KeyVault
	KeyVaultProperties *KeyVaultProperties `pulumi:"keyVaultProperties"`
	// The encryptionScope state.
	State *string `pulumi:"state"`
}

// Defaults sets the appropriate defaults for EncryptionScopeProperties
func (val *EncryptionScopeProperties) Defaults() *EncryptionScopeProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.KeySource == nil {
		keySource_ := "Microsoft.KeyVault"
		tmp.KeySource = &keySource_
	}
	return &tmp
}

// EncryptionScopePropertiesInput is an input type that accepts EncryptionScopePropertiesArgs and EncryptionScopePropertiesOutput values.
// You can construct a concrete instance of `EncryptionScopePropertiesInput` via:
//
//	EncryptionScopePropertiesArgs{...}
type EncryptionScopePropertiesInput interface {
	pulumi.Input

	ToEncryptionScopePropertiesOutput() EncryptionScopePropertiesOutput
	ToEncryptionScopePropertiesOutputWithContext(context.Context) EncryptionScopePropertiesOutput
}

// Properties to EncryptionScope
type EncryptionScopePropertiesArgs struct {
	// Enumerates the possible value of keySource for Encryption
	KeySource pulumi.StringPtrInput `pulumi:"keySource"`
	// Properties of KeyVault
	KeyVaultProperties KeyVaultPropertiesPtrInput `pulumi:"keyVaultProperties"`
	// The encryptionScope state.
	State pulumi.StringPtrInput `pulumi:"state"`
}

// Defaults sets the appropriate defaults for EncryptionScopePropertiesArgs
func (val *EncryptionScopePropertiesArgs) Defaults() *EncryptionScopePropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.KeySource == nil {
		tmp.KeySource = pulumi.StringPtr("Microsoft.KeyVault")
	}
	return &tmp
}
func (EncryptionScopePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionScopeProperties)(nil)).Elem()
}

func (i EncryptionScopePropertiesArgs) ToEncryptionScopePropertiesOutput() EncryptionScopePropertiesOutput {
	return i.ToEncryptionScopePropertiesOutputWithContext(context.Background())
}

func (i EncryptionScopePropertiesArgs) ToEncryptionScopePropertiesOutputWithContext(ctx context.Context) EncryptionScopePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionScopePropertiesOutput)
}

func (i EncryptionScopePropertiesArgs) ToEncryptionScopePropertiesPtrOutput() EncryptionScopePropertiesPtrOutput {
	return i.ToEncryptionScopePropertiesPtrOutputWithContext(context.Background())
}

func (i EncryptionScopePropertiesArgs) ToEncryptionScopePropertiesPtrOutputWithContext(ctx context.Context) EncryptionScopePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionScopePropertiesOutput).ToEncryptionScopePropertiesPtrOutputWithContext(ctx)
}

// EncryptionScopePropertiesPtrInput is an input type that accepts EncryptionScopePropertiesArgs, EncryptionScopePropertiesPtr and EncryptionScopePropertiesPtrOutput values.
// You can construct a concrete instance of `EncryptionScopePropertiesPtrInput` via:
//
//	        EncryptionScopePropertiesArgs{...}
//
//	or:
//
//	        nil
type EncryptionScopePropertiesPtrInput interface {
	pulumi.Input

	ToEncryptionScopePropertiesPtrOutput() EncryptionScopePropertiesPtrOutput
	ToEncryptionScopePropertiesPtrOutputWithContext(context.Context) EncryptionScopePropertiesPtrOutput
}

type encryptionScopePropertiesPtrType EncryptionScopePropertiesArgs

func EncryptionScopePropertiesPtr(v *EncryptionScopePropertiesArgs) EncryptionScopePropertiesPtrInput {
	return (*encryptionScopePropertiesPtrType)(v)
}

func (*encryptionScopePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionScopeProperties)(nil)).Elem()
}

func (i *encryptionScopePropertiesPtrType) ToEncryptionScopePropertiesPtrOutput() EncryptionScopePropertiesPtrOutput {
	return i.ToEncryptionScopePropertiesPtrOutputWithContext(context.Background())
}

func (i *encryptionScopePropertiesPtrType) ToEncryptionScopePropertiesPtrOutputWithContext(ctx context.Context) EncryptionScopePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionScopePropertiesPtrOutput)
}

// Properties to EncryptionScope
type EncryptionScopePropertiesOutput struct{ *pulumi.OutputState }

func (EncryptionScopePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionScopeProperties)(nil)).Elem()
}

func (o EncryptionScopePropertiesOutput) ToEncryptionScopePropertiesOutput() EncryptionScopePropertiesOutput {
	return o
}

func (o EncryptionScopePropertiesOutput) ToEncryptionScopePropertiesOutputWithContext(ctx context.Context) EncryptionScopePropertiesOutput {
	return o
}

func (o EncryptionScopePropertiesOutput) ToEncryptionScopePropertiesPtrOutput() EncryptionScopePropertiesPtrOutput {
	return o.ToEncryptionScopePropertiesPtrOutputWithContext(context.Background())
}

func (o EncryptionScopePropertiesOutput) ToEncryptionScopePropertiesPtrOutputWithContext(ctx context.Context) EncryptionScopePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionScopeProperties) *EncryptionScopeProperties {
		return &v
	}).(EncryptionScopePropertiesPtrOutput)
}

// Enumerates the possible value of keySource for Encryption
func (o EncryptionScopePropertiesOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionScopeProperties) *string { return v.KeySource }).(pulumi.StringPtrOutput)
}

// Properties of KeyVault
func (o EncryptionScopePropertiesOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v EncryptionScopeProperties) *KeyVaultProperties { return v.KeyVaultProperties }).(KeyVaultPropertiesPtrOutput)
}

// The encryptionScope state.
func (o EncryptionScopePropertiesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionScopeProperties) *string { return v.State }).(pulumi.StringPtrOutput)
}

type EncryptionScopePropertiesPtrOutput struct{ *pulumi.OutputState }

func (EncryptionScopePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionScopeProperties)(nil)).Elem()
}

func (o EncryptionScopePropertiesPtrOutput) ToEncryptionScopePropertiesPtrOutput() EncryptionScopePropertiesPtrOutput {
	return o
}

func (o EncryptionScopePropertiesPtrOutput) ToEncryptionScopePropertiesPtrOutputWithContext(ctx context.Context) EncryptionScopePropertiesPtrOutput {
	return o
}

func (o EncryptionScopePropertiesPtrOutput) Elem() EncryptionScopePropertiesOutput {
	return o.ApplyT(func(v *EncryptionScopeProperties) EncryptionScopeProperties {
		if v != nil {
			return *v
		}
		var ret EncryptionScopeProperties
		return ret
	}).(EncryptionScopePropertiesOutput)
}

// Enumerates the possible value of keySource for Encryption
func (o EncryptionScopePropertiesPtrOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionScopeProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeySource
	}).(pulumi.StringPtrOutput)
}

// Properties of KeyVault
func (o EncryptionScopePropertiesPtrOutput) KeyVaultProperties() KeyVaultPropertiesPtrOutput {
	return o.ApplyT(func(v *EncryptionScopeProperties) *KeyVaultProperties {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(KeyVaultPropertiesPtrOutput)
}

// The encryptionScope state.
func (o EncryptionScopePropertiesPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionScopeProperties) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Properties to EncryptionScope
type EncryptionScopePropertiesResponse struct {
	// Enumerates the possible value of keySource for Encryption
	KeySource *string `pulumi:"keySource"`
	// Properties of KeyVault
	KeyVaultProperties *KeyVaultPropertiesResponse `pulumi:"keyVaultProperties"`
	// Gets the status of the resource at the time the operation was called.
	ProvisioningState string `pulumi:"provisioningState"`
	// The encryptionScope state.
	State *string `pulumi:"state"`
}

// Defaults sets the appropriate defaults for EncryptionScopePropertiesResponse
func (val *EncryptionScopePropertiesResponse) Defaults() *EncryptionScopePropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.KeySource == nil {
		keySource_ := "Microsoft.KeyVault"
		tmp.KeySource = &keySource_
	}
	return &tmp
}

// Properties to EncryptionScope
type EncryptionScopePropertiesResponseOutput struct{ *pulumi.OutputState }

func (EncryptionScopePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionScopePropertiesResponse)(nil)).Elem()
}

func (o EncryptionScopePropertiesResponseOutput) ToEncryptionScopePropertiesResponseOutput() EncryptionScopePropertiesResponseOutput {
	return o
}

func (o EncryptionScopePropertiesResponseOutput) ToEncryptionScopePropertiesResponseOutputWithContext(ctx context.Context) EncryptionScopePropertiesResponseOutput {
	return o
}

// Enumerates the possible value of keySource for Encryption
func (o EncryptionScopePropertiesResponseOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionScopePropertiesResponse) *string { return v.KeySource }).(pulumi.StringPtrOutput)
}

// Properties of KeyVault
func (o EncryptionScopePropertiesResponseOutput) KeyVaultProperties() KeyVaultPropertiesResponsePtrOutput {
	return o.ApplyT(func(v EncryptionScopePropertiesResponse) *KeyVaultPropertiesResponse { return v.KeyVaultProperties }).(KeyVaultPropertiesResponsePtrOutput)
}

// Gets the status of the resource at the time the operation was called.
func (o EncryptionScopePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionScopePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The encryptionScope state.
func (o EncryptionScopePropertiesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionScopePropertiesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type Identity struct {
	// The identity type.
	Type *ResourceIdentityType `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//	IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Identity for the resource.
type IdentityArgs struct {
	// The identity type.
	Type ResourceIdentityTypePtrInput `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//	        IdentityArgs{...}
//
//	or:
//
//	        nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Identity for the resource.
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// The identity type.
func (o IdentityOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v Identity) *ResourceIdentityType { return v.Type }).(ResourceIdentityTypePtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o IdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Identity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity {
		if v != nil {
			return *v
		}
		var ret Identity
		return ret
	}).(IdentityOutput)
}

// The identity type.
func (o IdentityPtrOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v *Identity) *ResourceIdentityType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(ResourceIdentityTypePtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o IdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Identity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Identity for the resource.
type IdentityResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Identity for the resource.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

// The principal ID of resource identity.
func (o IdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o IdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type.
func (o IdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o IdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v IdentityResponse) map[string]UserAssignedIdentityResponse { return v.UserAssignedIdentities }).(UserAssignedIdentityResponseMapOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse {
		if v != nil {
			return *v
		}
		var ret IdentityResponse
		return ret
	}).(IdentityResponseOutput)
}

// The principal ID of resource identity.
func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o IdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *IdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// A rule governing the accessibility from a specific ip address or ip range.
type IpRule struct {
	// An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).
	Value string `pulumi:"value"`
}

// IpRuleInput is an input type that accepts IpRuleArgs and IpRuleOutput values.
// You can construct a concrete instance of `IpRuleInput` via:
//
//	IpRuleArgs{...}
type IpRuleInput interface {
	pulumi.Input

	ToIpRuleOutput() IpRuleOutput
	ToIpRuleOutputWithContext(context.Context) IpRuleOutput
}

// A rule governing the accessibility from a specific ip address or ip range.
type IpRuleArgs struct {
	// An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).
	Value pulumi.StringInput `pulumi:"value"`
}

func (IpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpRule)(nil)).Elem()
}

func (i IpRuleArgs) ToIpRuleOutput() IpRuleOutput {
	return i.ToIpRuleOutputWithContext(context.Background())
}

func (i IpRuleArgs) ToIpRuleOutputWithContext(ctx context.Context) IpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpRuleOutput)
}

// IpRuleArrayInput is an input type that accepts IpRuleArray and IpRuleArrayOutput values.
// You can construct a concrete instance of `IpRuleArrayInput` via:
//
//	IpRuleArray{ IpRuleArgs{...} }
type IpRuleArrayInput interface {
	pulumi.Input

	ToIpRuleArrayOutput() IpRuleArrayOutput
	ToIpRuleArrayOutputWithContext(context.Context) IpRuleArrayOutput
}

type IpRuleArray []IpRuleInput

func (IpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpRule)(nil)).Elem()
}

func (i IpRuleArray) ToIpRuleArrayOutput() IpRuleArrayOutput {
	return i.ToIpRuleArrayOutputWithContext(context.Background())
}

func (i IpRuleArray) ToIpRuleArrayOutputWithContext(ctx context.Context) IpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpRuleArrayOutput)
}

// A rule governing the accessibility from a specific ip address or ip range.
type IpRuleOutput struct{ *pulumi.OutputState }

func (IpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpRule)(nil)).Elem()
}

func (o IpRuleOutput) ToIpRuleOutput() IpRuleOutput {
	return o
}

func (o IpRuleOutput) ToIpRuleOutputWithContext(ctx context.Context) IpRuleOutput {
	return o
}

// An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).
func (o IpRuleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IpRule) string { return v.Value }).(pulumi.StringOutput)
}

type IpRuleArrayOutput struct{ *pulumi.OutputState }

func (IpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpRule)(nil)).Elem()
}

func (o IpRuleArrayOutput) ToIpRuleArrayOutput() IpRuleArrayOutput {
	return o
}

func (o IpRuleArrayOutput) ToIpRuleArrayOutputWithContext(ctx context.Context) IpRuleArrayOutput {
	return o
}

func (o IpRuleArrayOutput) Index(i pulumi.IntInput) IpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpRule {
		return vs[0].([]IpRule)[vs[1].(int)]
	}).(IpRuleOutput)
}

// A rule governing the accessibility from a specific ip address or ip range.
type IpRuleResponse struct {
	// An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).
	Value string `pulumi:"value"`
}

// A rule governing the accessibility from a specific ip address or ip range.
type IpRuleResponseOutput struct{ *pulumi.OutputState }

func (IpRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpRuleResponse)(nil)).Elem()
}

func (o IpRuleResponseOutput) ToIpRuleResponseOutput() IpRuleResponseOutput {
	return o
}

func (o IpRuleResponseOutput) ToIpRuleResponseOutputWithContext(ctx context.Context) IpRuleResponseOutput {
	return o
}

// An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).
func (o IpRuleResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IpRuleResponse) string { return v.Value }).(pulumi.StringOutput)
}

type IpRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (IpRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpRuleResponse)(nil)).Elem()
}

func (o IpRuleResponseArrayOutput) ToIpRuleResponseArrayOutput() IpRuleResponseArrayOutput {
	return o
}

func (o IpRuleResponseArrayOutput) ToIpRuleResponseArrayOutputWithContext(ctx context.Context) IpRuleResponseArrayOutput {
	return o
}

func (o IpRuleResponseArrayOutput) Index(i pulumi.IntInput) IpRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpRuleResponse {
		return vs[0].([]IpRuleResponse)[vs[1].(int)]
	}).(IpRuleResponseOutput)
}

// Properties to configure keyVault Properties
type KeyVaultProperties struct {
	IdentityClientId *string `pulumi:"identityClientId"`
	// Name of the Key from KeyVault
	KeyName *string `pulumi:"keyName"`
	// Uri of KeyVault
	KeyVaultUri *string `pulumi:"keyVaultUri"`
	// Version of the Key from KeyVault
	KeyVersion *string `pulumi:"keyVersion"`
}

// KeyVaultPropertiesInput is an input type that accepts KeyVaultPropertiesArgs and KeyVaultPropertiesOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesInput` via:
//
//	KeyVaultPropertiesArgs{...}
type KeyVaultPropertiesInput interface {
	pulumi.Input

	ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput
	ToKeyVaultPropertiesOutputWithContext(context.Context) KeyVaultPropertiesOutput
}

// Properties to configure keyVault Properties
type KeyVaultPropertiesArgs struct {
	IdentityClientId pulumi.StringPtrInput `pulumi:"identityClientId"`
	// Name of the Key from KeyVault
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// Uri of KeyVault
	KeyVaultUri pulumi.StringPtrInput `pulumi:"keyVaultUri"`
	// Version of the Key from KeyVault
	KeyVersion pulumi.StringPtrInput `pulumi:"keyVersion"`
}

func (KeyVaultPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return i.ToKeyVaultPropertiesOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput)
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i KeyVaultPropertiesArgs) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesOutput).ToKeyVaultPropertiesPtrOutputWithContext(ctx)
}

// KeyVaultPropertiesPtrInput is an input type that accepts KeyVaultPropertiesArgs, KeyVaultPropertiesPtr and KeyVaultPropertiesPtrOutput values.
// You can construct a concrete instance of `KeyVaultPropertiesPtrInput` via:
//
//	        KeyVaultPropertiesArgs{...}
//
//	or:
//
//	        nil
type KeyVaultPropertiesPtrInput interface {
	pulumi.Input

	ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput
	ToKeyVaultPropertiesPtrOutputWithContext(context.Context) KeyVaultPropertiesPtrOutput
}

type keyVaultPropertiesPtrType KeyVaultPropertiesArgs

func KeyVaultPropertiesPtr(v *KeyVaultPropertiesArgs) KeyVaultPropertiesPtrInput {
	return (*keyVaultPropertiesPtrType)(v)
}

func (*keyVaultPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return i.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (i *keyVaultPropertiesPtrType) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultPropertiesPtrOutput)
}

// Properties to configure keyVault Properties
type KeyVaultPropertiesOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutput() KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesOutputWithContext(ctx context.Context) KeyVaultPropertiesOutput {
	return o
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o.ToKeyVaultPropertiesPtrOutputWithContext(context.Background())
}

func (o KeyVaultPropertiesOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyVaultProperties) *KeyVaultProperties {
		return &v
	}).(KeyVaultPropertiesPtrOutput)
}

func (o KeyVaultPropertiesOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// Name of the Key from KeyVault
func (o KeyVaultPropertiesOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// Uri of KeyVault
func (o KeyVaultPropertiesOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.KeyVaultUri }).(pulumi.StringPtrOutput)
}

// Version of the Key from KeyVault
func (o KeyVaultPropertiesOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultProperties) *string { return v.KeyVersion }).(pulumi.StringPtrOutput)
}

type KeyVaultPropertiesPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultProperties)(nil)).Elem()
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutput() KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) ToKeyVaultPropertiesPtrOutputWithContext(ctx context.Context) KeyVaultPropertiesPtrOutput {
	return o
}

func (o KeyVaultPropertiesPtrOutput) Elem() KeyVaultPropertiesOutput {
	return o.ApplyT(func(v *KeyVaultProperties) KeyVaultProperties {
		if v != nil {
			return *v
		}
		var ret KeyVaultProperties
		return ret
	}).(KeyVaultPropertiesOutput)
}

func (o KeyVaultPropertiesPtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Name of the Key from KeyVault
func (o KeyVaultPropertiesPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyName
	}).(pulumi.StringPtrOutput)
}

// Uri of KeyVault
func (o KeyVaultPropertiesPtrOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultUri
	}).(pulumi.StringPtrOutput)
}

// Version of the Key from KeyVault
func (o KeyVaultPropertiesPtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

// Properties to configure keyVault Properties
type KeyVaultPropertiesResponse struct {
	IdentityClientId *string `pulumi:"identityClientId"`
	// Name of the Key from KeyVault
	KeyName *string `pulumi:"keyName"`
	// Uri of KeyVault
	KeyVaultUri *string `pulumi:"keyVaultUri"`
	// Version of the Key from KeyVault
	KeyVersion *string `pulumi:"keyVersion"`
}

// Properties to configure keyVault Properties
type KeyVaultPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutput() KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) ToKeyVaultPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultPropertiesResponseOutput {
	return o
}

func (o KeyVaultPropertiesResponseOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// Name of the Key from KeyVault
func (o KeyVaultPropertiesResponseOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// Uri of KeyVault
func (o KeyVaultPropertiesResponseOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.KeyVaultUri }).(pulumi.StringPtrOutput)
}

// Version of the Key from KeyVault
func (o KeyVaultPropertiesResponseOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultPropertiesResponse) *string { return v.KeyVersion }).(pulumi.StringPtrOutput)
}

type KeyVaultPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutput() KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) ToKeyVaultPropertiesResponsePtrOutputWithContext(ctx context.Context) KeyVaultPropertiesResponsePtrOutput {
	return o
}

func (o KeyVaultPropertiesResponsePtrOutput) Elem() KeyVaultPropertiesResponseOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) KeyVaultPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret KeyVaultPropertiesResponse
		return ret
	}).(KeyVaultPropertiesResponseOutput)
}

func (o KeyVaultPropertiesResponsePtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Name of the Key from KeyVault
func (o KeyVaultPropertiesResponsePtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyName
	}).(pulumi.StringPtrOutput)
}

// Uri of KeyVault
func (o KeyVaultPropertiesResponsePtrOutput) KeyVaultUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultUri
	}).(pulumi.StringPtrOutput)
}

// Version of the Key from KeyVault
func (o KeyVaultPropertiesResponsePtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

type ManagedIdentityAuthTypeConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'ManagedIdentity'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category      *string                    `pulumi:"category"`
	Credentials   *ConnectionManagedIdentity `pulumi:"credentials"`
	Error         *string                    `pulumi:"error"`
	ExpiryTime    *string                    `pulumi:"expiryTime"`
	IsSharedToAll *bool                      `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

// ManagedIdentityAuthTypeConnectionPropertiesInput is an input type that accepts ManagedIdentityAuthTypeConnectionPropertiesArgs and ManagedIdentityAuthTypeConnectionPropertiesOutput values.
// You can construct a concrete instance of `ManagedIdentityAuthTypeConnectionPropertiesInput` via:
//
//	ManagedIdentityAuthTypeConnectionPropertiesArgs{...}
type ManagedIdentityAuthTypeConnectionPropertiesInput interface {
	pulumi.Input

	ToManagedIdentityAuthTypeConnectionPropertiesOutput() ManagedIdentityAuthTypeConnectionPropertiesOutput
	ToManagedIdentityAuthTypeConnectionPropertiesOutputWithContext(context.Context) ManagedIdentityAuthTypeConnectionPropertiesOutput
}

type ManagedIdentityAuthTypeConnectionPropertiesArgs struct {
	// Authentication type of the connection target
	// Expected value is 'ManagedIdentity'.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Category of the connection
	Category      pulumi.StringPtrInput             `pulumi:"category"`
	Credentials   ConnectionManagedIdentityPtrInput `pulumi:"credentials"`
	Error         pulumi.StringPtrInput             `pulumi:"error"`
	ExpiryTime    pulumi.StringPtrInput             `pulumi:"expiryTime"`
	IsSharedToAll pulumi.BoolPtrInput               `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    pulumi.StringMapInput   `pulumi:"metadata"`
	PeRequirement               pulumi.StringPtrInput   `pulumi:"peRequirement"`
	PeStatus                    pulumi.StringPtrInput   `pulumi:"peStatus"`
	SharedUserList              pulumi.StringArrayInput `pulumi:"sharedUserList"`
	Target                      pulumi.StringPtrInput   `pulumi:"target"`
	UseWorkspaceManagedIdentity pulumi.BoolPtrInput     `pulumi:"useWorkspaceManagedIdentity"`
}

func (ManagedIdentityAuthTypeConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityAuthTypeConnectionProperties)(nil)).Elem()
}

func (i ManagedIdentityAuthTypeConnectionPropertiesArgs) ToManagedIdentityAuthTypeConnectionPropertiesOutput() ManagedIdentityAuthTypeConnectionPropertiesOutput {
	return i.ToManagedIdentityAuthTypeConnectionPropertiesOutputWithContext(context.Background())
}

func (i ManagedIdentityAuthTypeConnectionPropertiesArgs) ToManagedIdentityAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) ManagedIdentityAuthTypeConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityAuthTypeConnectionPropertiesOutput)
}

type ManagedIdentityAuthTypeConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (ManagedIdentityAuthTypeConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityAuthTypeConnectionProperties)(nil)).Elem()
}

func (o ManagedIdentityAuthTypeConnectionPropertiesOutput) ToManagedIdentityAuthTypeConnectionPropertiesOutput() ManagedIdentityAuthTypeConnectionPropertiesOutput {
	return o
}

func (o ManagedIdentityAuthTypeConnectionPropertiesOutput) ToManagedIdentityAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) ManagedIdentityAuthTypeConnectionPropertiesOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'ManagedIdentity'.
func (o ManagedIdentityAuthTypeConnectionPropertiesOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionProperties) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o ManagedIdentityAuthTypeConnectionPropertiesOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionProperties) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesOutput) Credentials() ConnectionManagedIdentityPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionProperties) *ConnectionManagedIdentity { return v.Credentials }).(ConnectionManagedIdentityPtrOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionProperties) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionProperties) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionProperties) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o ManagedIdentityAuthTypeConnectionPropertiesOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionProperties) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionProperties) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionProperties) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionProperties) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionProperties) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionProperties) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

type ManagedIdentityAuthTypeConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'ManagedIdentity'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category                *string                            `pulumi:"category"`
	CreatedByWorkspaceArmId string                             `pulumi:"createdByWorkspaceArmId"`
	Credentials             *ConnectionManagedIdentityResponse `pulumi:"credentials"`
	Error                   *string                            `pulumi:"error"`
	ExpiryTime              *string                            `pulumi:"expiryTime"`
	// Group based on connection category
	Group         string `pulumi:"group"`
	IsSharedToAll *bool  `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

type ManagedIdentityAuthTypeConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityAuthTypeConnectionPropertiesResponse)(nil)).Elem()
}

func (o ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) ToManagedIdentityAuthTypeConnectionPropertiesResponseOutput() ManagedIdentityAuthTypeConnectionPropertiesResponseOutput {
	return o
}

func (o ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) ToManagedIdentityAuthTypeConnectionPropertiesResponseOutputWithContext(ctx context.Context) ManagedIdentityAuthTypeConnectionPropertiesResponseOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'ManagedIdentity'.
func (o ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionPropertiesResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionPropertiesResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) CreatedByWorkspaceArmId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionPropertiesResponse) string { return v.CreatedByWorkspaceArmId }).(pulumi.StringOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) Credentials() ConnectionManagedIdentityResponsePtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionPropertiesResponse) *ConnectionManagedIdentityResponse {
		return v.Credentials
	}).(ConnectionManagedIdentityResponsePtrOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionPropertiesResponse) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionPropertiesResponse) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

// Group based on connection category
func (o ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionPropertiesResponse) string { return v.Group }).(pulumi.StringOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionPropertiesResponse) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionPropertiesResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionPropertiesResponse) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionPropertiesResponse) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionPropertiesResponse) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionPropertiesResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o ManagedIdentityAuthTypeConnectionPropertiesResponseOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedIdentityAuthTypeConnectionPropertiesResponse) *bool {
		return v.UseWorkspaceManagedIdentity
	}).(pulumi.BoolPtrOutput)
}

// The multiregion settings Cognitive Services account.
type MultiRegionSettings struct {
	Regions []RegionSetting `pulumi:"regions"`
	// Multiregion routing methods.
	RoutingMethod *string `pulumi:"routingMethod"`
}

// MultiRegionSettingsInput is an input type that accepts MultiRegionSettingsArgs and MultiRegionSettingsOutput values.
// You can construct a concrete instance of `MultiRegionSettingsInput` via:
//
//	MultiRegionSettingsArgs{...}
type MultiRegionSettingsInput interface {
	pulumi.Input

	ToMultiRegionSettingsOutput() MultiRegionSettingsOutput
	ToMultiRegionSettingsOutputWithContext(context.Context) MultiRegionSettingsOutput
}

// The multiregion settings Cognitive Services account.
type MultiRegionSettingsArgs struct {
	Regions RegionSettingArrayInput `pulumi:"regions"`
	// Multiregion routing methods.
	RoutingMethod pulumi.StringPtrInput `pulumi:"routingMethod"`
}

func (MultiRegionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiRegionSettings)(nil)).Elem()
}

func (i MultiRegionSettingsArgs) ToMultiRegionSettingsOutput() MultiRegionSettingsOutput {
	return i.ToMultiRegionSettingsOutputWithContext(context.Background())
}

func (i MultiRegionSettingsArgs) ToMultiRegionSettingsOutputWithContext(ctx context.Context) MultiRegionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiRegionSettingsOutput)
}

func (i MultiRegionSettingsArgs) ToMultiRegionSettingsPtrOutput() MultiRegionSettingsPtrOutput {
	return i.ToMultiRegionSettingsPtrOutputWithContext(context.Background())
}

func (i MultiRegionSettingsArgs) ToMultiRegionSettingsPtrOutputWithContext(ctx context.Context) MultiRegionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiRegionSettingsOutput).ToMultiRegionSettingsPtrOutputWithContext(ctx)
}

// MultiRegionSettingsPtrInput is an input type that accepts MultiRegionSettingsArgs, MultiRegionSettingsPtr and MultiRegionSettingsPtrOutput values.
// You can construct a concrete instance of `MultiRegionSettingsPtrInput` via:
//
//	        MultiRegionSettingsArgs{...}
//
//	or:
//
//	        nil
type MultiRegionSettingsPtrInput interface {
	pulumi.Input

	ToMultiRegionSettingsPtrOutput() MultiRegionSettingsPtrOutput
	ToMultiRegionSettingsPtrOutputWithContext(context.Context) MultiRegionSettingsPtrOutput
}

type multiRegionSettingsPtrType MultiRegionSettingsArgs

func MultiRegionSettingsPtr(v *MultiRegionSettingsArgs) MultiRegionSettingsPtrInput {
	return (*multiRegionSettingsPtrType)(v)
}

func (*multiRegionSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiRegionSettings)(nil)).Elem()
}

func (i *multiRegionSettingsPtrType) ToMultiRegionSettingsPtrOutput() MultiRegionSettingsPtrOutput {
	return i.ToMultiRegionSettingsPtrOutputWithContext(context.Background())
}

func (i *multiRegionSettingsPtrType) ToMultiRegionSettingsPtrOutputWithContext(ctx context.Context) MultiRegionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiRegionSettingsPtrOutput)
}

// The multiregion settings Cognitive Services account.
type MultiRegionSettingsOutput struct{ *pulumi.OutputState }

func (MultiRegionSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiRegionSettings)(nil)).Elem()
}

func (o MultiRegionSettingsOutput) ToMultiRegionSettingsOutput() MultiRegionSettingsOutput {
	return o
}

func (o MultiRegionSettingsOutput) ToMultiRegionSettingsOutputWithContext(ctx context.Context) MultiRegionSettingsOutput {
	return o
}

func (o MultiRegionSettingsOutput) ToMultiRegionSettingsPtrOutput() MultiRegionSettingsPtrOutput {
	return o.ToMultiRegionSettingsPtrOutputWithContext(context.Background())
}

func (o MultiRegionSettingsOutput) ToMultiRegionSettingsPtrOutputWithContext(ctx context.Context) MultiRegionSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiRegionSettings) *MultiRegionSettings {
		return &v
	}).(MultiRegionSettingsPtrOutput)
}

func (o MultiRegionSettingsOutput) Regions() RegionSettingArrayOutput {
	return o.ApplyT(func(v MultiRegionSettings) []RegionSetting { return v.Regions }).(RegionSettingArrayOutput)
}

// Multiregion routing methods.
func (o MultiRegionSettingsOutput) RoutingMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MultiRegionSettings) *string { return v.RoutingMethod }).(pulumi.StringPtrOutput)
}

type MultiRegionSettingsPtrOutput struct{ *pulumi.OutputState }

func (MultiRegionSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiRegionSettings)(nil)).Elem()
}

func (o MultiRegionSettingsPtrOutput) ToMultiRegionSettingsPtrOutput() MultiRegionSettingsPtrOutput {
	return o
}

func (o MultiRegionSettingsPtrOutput) ToMultiRegionSettingsPtrOutputWithContext(ctx context.Context) MultiRegionSettingsPtrOutput {
	return o
}

func (o MultiRegionSettingsPtrOutput) Elem() MultiRegionSettingsOutput {
	return o.ApplyT(func(v *MultiRegionSettings) MultiRegionSettings {
		if v != nil {
			return *v
		}
		var ret MultiRegionSettings
		return ret
	}).(MultiRegionSettingsOutput)
}

func (o MultiRegionSettingsPtrOutput) Regions() RegionSettingArrayOutput {
	return o.ApplyT(func(v *MultiRegionSettings) []RegionSetting {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(RegionSettingArrayOutput)
}

// Multiregion routing methods.
func (o MultiRegionSettingsPtrOutput) RoutingMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MultiRegionSettings) *string {
		if v == nil {
			return nil
		}
		return v.RoutingMethod
	}).(pulumi.StringPtrOutput)
}

// The multiregion settings Cognitive Services account.
type MultiRegionSettingsResponse struct {
	Regions []RegionSettingResponse `pulumi:"regions"`
	// Multiregion routing methods.
	RoutingMethod *string `pulumi:"routingMethod"`
}

// The multiregion settings Cognitive Services account.
type MultiRegionSettingsResponseOutput struct{ *pulumi.OutputState }

func (MultiRegionSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiRegionSettingsResponse)(nil)).Elem()
}

func (o MultiRegionSettingsResponseOutput) ToMultiRegionSettingsResponseOutput() MultiRegionSettingsResponseOutput {
	return o
}

func (o MultiRegionSettingsResponseOutput) ToMultiRegionSettingsResponseOutputWithContext(ctx context.Context) MultiRegionSettingsResponseOutput {
	return o
}

func (o MultiRegionSettingsResponseOutput) Regions() RegionSettingResponseArrayOutput {
	return o.ApplyT(func(v MultiRegionSettingsResponse) []RegionSettingResponse { return v.Regions }).(RegionSettingResponseArrayOutput)
}

// Multiregion routing methods.
func (o MultiRegionSettingsResponseOutput) RoutingMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MultiRegionSettingsResponse) *string { return v.RoutingMethod }).(pulumi.StringPtrOutput)
}

type MultiRegionSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (MultiRegionSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiRegionSettingsResponse)(nil)).Elem()
}

func (o MultiRegionSettingsResponsePtrOutput) ToMultiRegionSettingsResponsePtrOutput() MultiRegionSettingsResponsePtrOutput {
	return o
}

func (o MultiRegionSettingsResponsePtrOutput) ToMultiRegionSettingsResponsePtrOutputWithContext(ctx context.Context) MultiRegionSettingsResponsePtrOutput {
	return o
}

func (o MultiRegionSettingsResponsePtrOutput) Elem() MultiRegionSettingsResponseOutput {
	return o.ApplyT(func(v *MultiRegionSettingsResponse) MultiRegionSettingsResponse {
		if v != nil {
			return *v
		}
		var ret MultiRegionSettingsResponse
		return ret
	}).(MultiRegionSettingsResponseOutput)
}

func (o MultiRegionSettingsResponsePtrOutput) Regions() RegionSettingResponseArrayOutput {
	return o.ApplyT(func(v *MultiRegionSettingsResponse) []RegionSettingResponse {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(RegionSettingResponseArrayOutput)
}

// Multiregion routing methods.
func (o MultiRegionSettingsResponsePtrOutput) RoutingMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MultiRegionSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RoutingMethod
	}).(pulumi.StringPtrOutput)
}

// A set of rules governing the network accessibility.
type NetworkRuleSet struct {
	// Setting for trusted services.
	Bypass *string `pulumi:"bypass"`
	// The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
	DefaultAction *string `pulumi:"defaultAction"`
	// The list of IP address rules.
	IpRules []IpRule `pulumi:"ipRules"`
	// The list of virtual network rules.
	VirtualNetworkRules []VirtualNetworkRule `pulumi:"virtualNetworkRules"`
}

// NetworkRuleSetInput is an input type that accepts NetworkRuleSetArgs and NetworkRuleSetOutput values.
// You can construct a concrete instance of `NetworkRuleSetInput` via:
//
//	NetworkRuleSetArgs{...}
type NetworkRuleSetInput interface {
	pulumi.Input

	ToNetworkRuleSetOutput() NetworkRuleSetOutput
	ToNetworkRuleSetOutputWithContext(context.Context) NetworkRuleSetOutput
}

// A set of rules governing the network accessibility.
type NetworkRuleSetArgs struct {
	// Setting for trusted services.
	Bypass pulumi.StringPtrInput `pulumi:"bypass"`
	// The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
	DefaultAction pulumi.StringPtrInput `pulumi:"defaultAction"`
	// The list of IP address rules.
	IpRules IpRuleArrayInput `pulumi:"ipRules"`
	// The list of virtual network rules.
	VirtualNetworkRules VirtualNetworkRuleArrayInput `pulumi:"virtualNetworkRules"`
}

func (NetworkRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSet)(nil)).Elem()
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetOutput() NetworkRuleSetOutput {
	return i.ToNetworkRuleSetOutputWithContext(context.Background())
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetOutputWithContext(ctx context.Context) NetworkRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetOutput)
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return i.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i NetworkRuleSetArgs) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetOutput).ToNetworkRuleSetPtrOutputWithContext(ctx)
}

// NetworkRuleSetPtrInput is an input type that accepts NetworkRuleSetArgs, NetworkRuleSetPtr and NetworkRuleSetPtrOutput values.
// You can construct a concrete instance of `NetworkRuleSetPtrInput` via:
//
//	        NetworkRuleSetArgs{...}
//
//	or:
//
//	        nil
type NetworkRuleSetPtrInput interface {
	pulumi.Input

	ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput
	ToNetworkRuleSetPtrOutputWithContext(context.Context) NetworkRuleSetPtrOutput
}

type networkRuleSetPtrType NetworkRuleSetArgs

func NetworkRuleSetPtr(v *NetworkRuleSetArgs) NetworkRuleSetPtrInput {
	return (*networkRuleSetPtrType)(v)
}

func (*networkRuleSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSet)(nil)).Elem()
}

func (i *networkRuleSetPtrType) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return i.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i *networkRuleSetPtrType) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleSetPtrOutput)
}

// A set of rules governing the network accessibility.
type NetworkRuleSetOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSet)(nil)).Elem()
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetOutput() NetworkRuleSetOutput {
	return o
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetOutputWithContext(ctx context.Context) NetworkRuleSetOutput {
	return o
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return o.ToNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (o NetworkRuleSetOutput) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkRuleSet) *NetworkRuleSet {
		return &v
	}).(NetworkRuleSetPtrOutput)
}

// Setting for trusted services.
func (o NetworkRuleSetOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleSet) *string { return v.Bypass }).(pulumi.StringPtrOutput)
}

// The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
func (o NetworkRuleSetOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleSet) *string { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// The list of IP address rules.
func (o NetworkRuleSetOutput) IpRules() IpRuleArrayOutput {
	return o.ApplyT(func(v NetworkRuleSet) []IpRule { return v.IpRules }).(IpRuleArrayOutput)
}

// The list of virtual network rules.
func (o NetworkRuleSetOutput) VirtualNetworkRules() VirtualNetworkRuleArrayOutput {
	return o.ApplyT(func(v NetworkRuleSet) []VirtualNetworkRule { return v.VirtualNetworkRules }).(VirtualNetworkRuleArrayOutput)
}

type NetworkRuleSetPtrOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSet)(nil)).Elem()
}

func (o NetworkRuleSetPtrOutput) ToNetworkRuleSetPtrOutput() NetworkRuleSetPtrOutput {
	return o
}

func (o NetworkRuleSetPtrOutput) ToNetworkRuleSetPtrOutputWithContext(ctx context.Context) NetworkRuleSetPtrOutput {
	return o
}

func (o NetworkRuleSetPtrOutput) Elem() NetworkRuleSetOutput {
	return o.ApplyT(func(v *NetworkRuleSet) NetworkRuleSet {
		if v != nil {
			return *v
		}
		var ret NetworkRuleSet
		return ret
	}).(NetworkRuleSetOutput)
}

// Setting for trusted services.
func (o NetworkRuleSetPtrOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSet) *string {
		if v == nil {
			return nil
		}
		return v.Bypass
	}).(pulumi.StringPtrOutput)
}

// The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
func (o NetworkRuleSetPtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSet) *string {
		if v == nil {
			return nil
		}
		return v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// The list of IP address rules.
func (o NetworkRuleSetPtrOutput) IpRules() IpRuleArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSet) []IpRule {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(IpRuleArrayOutput)
}

// The list of virtual network rules.
func (o NetworkRuleSetPtrOutput) VirtualNetworkRules() VirtualNetworkRuleArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSet) []VirtualNetworkRule {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkRules
	}).(VirtualNetworkRuleArrayOutput)
}

// A set of rules governing the network accessibility.
type NetworkRuleSetResponse struct {
	// Setting for trusted services.
	Bypass *string `pulumi:"bypass"`
	// The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
	DefaultAction *string `pulumi:"defaultAction"`
	// The list of IP address rules.
	IpRules []IpRuleResponse `pulumi:"ipRules"`
	// The list of virtual network rules.
	VirtualNetworkRules []VirtualNetworkRuleResponse `pulumi:"virtualNetworkRules"`
}

// A set of rules governing the network accessibility.
type NetworkRuleSetResponseOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleSetResponse)(nil)).Elem()
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponseOutput() NetworkRuleSetResponseOutput {
	return o
}

func (o NetworkRuleSetResponseOutput) ToNetworkRuleSetResponseOutputWithContext(ctx context.Context) NetworkRuleSetResponseOutput {
	return o
}

// Setting for trusted services.
func (o NetworkRuleSetResponseOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) *string { return v.Bypass }).(pulumi.StringPtrOutput)
}

// The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
func (o NetworkRuleSetResponseOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) *string { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// The list of IP address rules.
func (o NetworkRuleSetResponseOutput) IpRules() IpRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) []IpRuleResponse { return v.IpRules }).(IpRuleResponseArrayOutput)
}

// The list of virtual network rules.
func (o NetworkRuleSetResponseOutput) VirtualNetworkRules() VirtualNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkRuleSetResponse) []VirtualNetworkRuleResponse { return v.VirtualNetworkRules }).(VirtualNetworkRuleResponseArrayOutput)
}

type NetworkRuleSetResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkRuleSetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRuleSetResponse)(nil)).Elem()
}

func (o NetworkRuleSetResponsePtrOutput) ToNetworkRuleSetResponsePtrOutput() NetworkRuleSetResponsePtrOutput {
	return o
}

func (o NetworkRuleSetResponsePtrOutput) ToNetworkRuleSetResponsePtrOutputWithContext(ctx context.Context) NetworkRuleSetResponsePtrOutput {
	return o
}

func (o NetworkRuleSetResponsePtrOutput) Elem() NetworkRuleSetResponseOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) NetworkRuleSetResponse {
		if v != nil {
			return *v
		}
		var ret NetworkRuleSetResponse
		return ret
	}).(NetworkRuleSetResponseOutput)
}

// Setting for trusted services.
func (o NetworkRuleSetResponsePtrOutput) Bypass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Bypass
	}).(pulumi.StringPtrOutput)
}

// The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
func (o NetworkRuleSetResponsePtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// The list of IP address rules.
func (o NetworkRuleSetResponsePtrOutput) IpRules() IpRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) []IpRuleResponse {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(IpRuleResponseArrayOutput)
}

// The list of virtual network rules.
func (o NetworkRuleSetResponsePtrOutput) VirtualNetworkRules() VirtualNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkRuleSetResponse) []VirtualNetworkRuleResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkRules
	}).(VirtualNetworkRuleResponseArrayOutput)
}

type NoneAuthTypeConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'None'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category      *string `pulumi:"category"`
	Error         *string `pulumi:"error"`
	ExpiryTime    *string `pulumi:"expiryTime"`
	IsSharedToAll *bool   `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

// NoneAuthTypeConnectionPropertiesInput is an input type that accepts NoneAuthTypeConnectionPropertiesArgs and NoneAuthTypeConnectionPropertiesOutput values.
// You can construct a concrete instance of `NoneAuthTypeConnectionPropertiesInput` via:
//
//	NoneAuthTypeConnectionPropertiesArgs{...}
type NoneAuthTypeConnectionPropertiesInput interface {
	pulumi.Input

	ToNoneAuthTypeConnectionPropertiesOutput() NoneAuthTypeConnectionPropertiesOutput
	ToNoneAuthTypeConnectionPropertiesOutputWithContext(context.Context) NoneAuthTypeConnectionPropertiesOutput
}

type NoneAuthTypeConnectionPropertiesArgs struct {
	// Authentication type of the connection target
	// Expected value is 'None'.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Category of the connection
	Category      pulumi.StringPtrInput `pulumi:"category"`
	Error         pulumi.StringPtrInput `pulumi:"error"`
	ExpiryTime    pulumi.StringPtrInput `pulumi:"expiryTime"`
	IsSharedToAll pulumi.BoolPtrInput   `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    pulumi.StringMapInput   `pulumi:"metadata"`
	PeRequirement               pulumi.StringPtrInput   `pulumi:"peRequirement"`
	PeStatus                    pulumi.StringPtrInput   `pulumi:"peStatus"`
	SharedUserList              pulumi.StringArrayInput `pulumi:"sharedUserList"`
	Target                      pulumi.StringPtrInput   `pulumi:"target"`
	UseWorkspaceManagedIdentity pulumi.BoolPtrInput     `pulumi:"useWorkspaceManagedIdentity"`
}

func (NoneAuthTypeConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NoneAuthTypeConnectionProperties)(nil)).Elem()
}

func (i NoneAuthTypeConnectionPropertiesArgs) ToNoneAuthTypeConnectionPropertiesOutput() NoneAuthTypeConnectionPropertiesOutput {
	return i.ToNoneAuthTypeConnectionPropertiesOutputWithContext(context.Background())
}

func (i NoneAuthTypeConnectionPropertiesArgs) ToNoneAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) NoneAuthTypeConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoneAuthTypeConnectionPropertiesOutput)
}

type NoneAuthTypeConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (NoneAuthTypeConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NoneAuthTypeConnectionProperties)(nil)).Elem()
}

func (o NoneAuthTypeConnectionPropertiesOutput) ToNoneAuthTypeConnectionPropertiesOutput() NoneAuthTypeConnectionPropertiesOutput {
	return o
}

func (o NoneAuthTypeConnectionPropertiesOutput) ToNoneAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) NoneAuthTypeConnectionPropertiesOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'None'.
func (o NoneAuthTypeConnectionPropertiesOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionProperties) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o NoneAuthTypeConnectionPropertiesOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionProperties) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o NoneAuthTypeConnectionPropertiesOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionProperties) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o NoneAuthTypeConnectionPropertiesOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionProperties) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

func (o NoneAuthTypeConnectionPropertiesOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionProperties) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o NoneAuthTypeConnectionPropertiesOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionProperties) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o NoneAuthTypeConnectionPropertiesOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionProperties) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o NoneAuthTypeConnectionPropertiesOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionProperties) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o NoneAuthTypeConnectionPropertiesOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionProperties) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o NoneAuthTypeConnectionPropertiesOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionProperties) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o NoneAuthTypeConnectionPropertiesOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionProperties) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

type NoneAuthTypeConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'None'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category                *string `pulumi:"category"`
	CreatedByWorkspaceArmId string  `pulumi:"createdByWorkspaceArmId"`
	Error                   *string `pulumi:"error"`
	ExpiryTime              *string `pulumi:"expiryTime"`
	// Group based on connection category
	Group         string `pulumi:"group"`
	IsSharedToAll *bool  `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

type NoneAuthTypeConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (NoneAuthTypeConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NoneAuthTypeConnectionPropertiesResponse)(nil)).Elem()
}

func (o NoneAuthTypeConnectionPropertiesResponseOutput) ToNoneAuthTypeConnectionPropertiesResponseOutput() NoneAuthTypeConnectionPropertiesResponseOutput {
	return o
}

func (o NoneAuthTypeConnectionPropertiesResponseOutput) ToNoneAuthTypeConnectionPropertiesResponseOutputWithContext(ctx context.Context) NoneAuthTypeConnectionPropertiesResponseOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'None'.
func (o NoneAuthTypeConnectionPropertiesResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionPropertiesResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o NoneAuthTypeConnectionPropertiesResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionPropertiesResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o NoneAuthTypeConnectionPropertiesResponseOutput) CreatedByWorkspaceArmId() pulumi.StringOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionPropertiesResponse) string { return v.CreatedByWorkspaceArmId }).(pulumi.StringOutput)
}

func (o NoneAuthTypeConnectionPropertiesResponseOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionPropertiesResponse) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o NoneAuthTypeConnectionPropertiesResponseOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionPropertiesResponse) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

// Group based on connection category
func (o NoneAuthTypeConnectionPropertiesResponseOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionPropertiesResponse) string { return v.Group }).(pulumi.StringOutput)
}

func (o NoneAuthTypeConnectionPropertiesResponseOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionPropertiesResponse) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o NoneAuthTypeConnectionPropertiesResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionPropertiesResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o NoneAuthTypeConnectionPropertiesResponseOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionPropertiesResponse) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o NoneAuthTypeConnectionPropertiesResponseOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionPropertiesResponse) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o NoneAuthTypeConnectionPropertiesResponseOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionPropertiesResponse) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o NoneAuthTypeConnectionPropertiesResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionPropertiesResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o NoneAuthTypeConnectionPropertiesResponseOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NoneAuthTypeConnectionPropertiesResponse) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

type OAuth2AuthTypeConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'OAuth2'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category *string `pulumi:"category"`
	// ClientId and ClientSecret are required. Other properties are optional
	// depending on each OAuth2 provider's implementation.
	Credentials   *ConnectionOAuth2 `pulumi:"credentials"`
	Error         *string           `pulumi:"error"`
	ExpiryTime    *string           `pulumi:"expiryTime"`
	IsSharedToAll *bool             `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

// OAuth2AuthTypeConnectionPropertiesInput is an input type that accepts OAuth2AuthTypeConnectionPropertiesArgs and OAuth2AuthTypeConnectionPropertiesOutput values.
// You can construct a concrete instance of `OAuth2AuthTypeConnectionPropertiesInput` via:
//
//	OAuth2AuthTypeConnectionPropertiesArgs{...}
type OAuth2AuthTypeConnectionPropertiesInput interface {
	pulumi.Input

	ToOAuth2AuthTypeConnectionPropertiesOutput() OAuth2AuthTypeConnectionPropertiesOutput
	ToOAuth2AuthTypeConnectionPropertiesOutputWithContext(context.Context) OAuth2AuthTypeConnectionPropertiesOutput
}

type OAuth2AuthTypeConnectionPropertiesArgs struct {
	// Authentication type of the connection target
	// Expected value is 'OAuth2'.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Category of the connection
	Category pulumi.StringPtrInput `pulumi:"category"`
	// ClientId and ClientSecret are required. Other properties are optional
	// depending on each OAuth2 provider's implementation.
	Credentials   ConnectionOAuth2PtrInput `pulumi:"credentials"`
	Error         pulumi.StringPtrInput    `pulumi:"error"`
	ExpiryTime    pulumi.StringPtrInput    `pulumi:"expiryTime"`
	IsSharedToAll pulumi.BoolPtrInput      `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    pulumi.StringMapInput   `pulumi:"metadata"`
	PeRequirement               pulumi.StringPtrInput   `pulumi:"peRequirement"`
	PeStatus                    pulumi.StringPtrInput   `pulumi:"peStatus"`
	SharedUserList              pulumi.StringArrayInput `pulumi:"sharedUserList"`
	Target                      pulumi.StringPtrInput   `pulumi:"target"`
	UseWorkspaceManagedIdentity pulumi.BoolPtrInput     `pulumi:"useWorkspaceManagedIdentity"`
}

func (OAuth2AuthTypeConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuth2AuthTypeConnectionProperties)(nil)).Elem()
}

func (i OAuth2AuthTypeConnectionPropertiesArgs) ToOAuth2AuthTypeConnectionPropertiesOutput() OAuth2AuthTypeConnectionPropertiesOutput {
	return i.ToOAuth2AuthTypeConnectionPropertiesOutputWithContext(context.Background())
}

func (i OAuth2AuthTypeConnectionPropertiesArgs) ToOAuth2AuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) OAuth2AuthTypeConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuth2AuthTypeConnectionPropertiesOutput)
}

type OAuth2AuthTypeConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (OAuth2AuthTypeConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuth2AuthTypeConnectionProperties)(nil)).Elem()
}

func (o OAuth2AuthTypeConnectionPropertiesOutput) ToOAuth2AuthTypeConnectionPropertiesOutput() OAuth2AuthTypeConnectionPropertiesOutput {
	return o
}

func (o OAuth2AuthTypeConnectionPropertiesOutput) ToOAuth2AuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) OAuth2AuthTypeConnectionPropertiesOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'OAuth2'.
func (o OAuth2AuthTypeConnectionPropertiesOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionProperties) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o OAuth2AuthTypeConnectionPropertiesOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionProperties) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// ClientId and ClientSecret are required. Other properties are optional
// depending on each OAuth2 provider's implementation.
func (o OAuth2AuthTypeConnectionPropertiesOutput) Credentials() ConnectionOAuth2PtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionProperties) *ConnectionOAuth2 { return v.Credentials }).(ConnectionOAuth2PtrOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionProperties) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionProperties) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionProperties) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o OAuth2AuthTypeConnectionPropertiesOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionProperties) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionProperties) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionProperties) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionProperties) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionProperties) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionProperties) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

type OAuth2AuthTypeConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'OAuth2'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category                *string `pulumi:"category"`
	CreatedByWorkspaceArmId string  `pulumi:"createdByWorkspaceArmId"`
	// ClientId and ClientSecret are required. Other properties are optional
	// depending on each OAuth2 provider's implementation.
	Credentials *ConnectionOAuth2Response `pulumi:"credentials"`
	Error       *string                   `pulumi:"error"`
	ExpiryTime  *string                   `pulumi:"expiryTime"`
	// Group based on connection category
	Group         string `pulumi:"group"`
	IsSharedToAll *bool  `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

type OAuth2AuthTypeConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (OAuth2AuthTypeConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuth2AuthTypeConnectionPropertiesResponse)(nil)).Elem()
}

func (o OAuth2AuthTypeConnectionPropertiesResponseOutput) ToOAuth2AuthTypeConnectionPropertiesResponseOutput() OAuth2AuthTypeConnectionPropertiesResponseOutput {
	return o
}

func (o OAuth2AuthTypeConnectionPropertiesResponseOutput) ToOAuth2AuthTypeConnectionPropertiesResponseOutputWithContext(ctx context.Context) OAuth2AuthTypeConnectionPropertiesResponseOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'OAuth2'.
func (o OAuth2AuthTypeConnectionPropertiesResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionPropertiesResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o OAuth2AuthTypeConnectionPropertiesResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionPropertiesResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesResponseOutput) CreatedByWorkspaceArmId() pulumi.StringOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionPropertiesResponse) string { return v.CreatedByWorkspaceArmId }).(pulumi.StringOutput)
}

// ClientId and ClientSecret are required. Other properties are optional
// depending on each OAuth2 provider's implementation.
func (o OAuth2AuthTypeConnectionPropertiesResponseOutput) Credentials() ConnectionOAuth2ResponsePtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionPropertiesResponse) *ConnectionOAuth2Response { return v.Credentials }).(ConnectionOAuth2ResponsePtrOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesResponseOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionPropertiesResponse) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesResponseOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionPropertiesResponse) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

// Group based on connection category
func (o OAuth2AuthTypeConnectionPropertiesResponseOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionPropertiesResponse) string { return v.Group }).(pulumi.StringOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesResponseOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionPropertiesResponse) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o OAuth2AuthTypeConnectionPropertiesResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionPropertiesResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesResponseOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionPropertiesResponse) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesResponseOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionPropertiesResponse) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesResponseOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionPropertiesResponse) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionPropertiesResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o OAuth2AuthTypeConnectionPropertiesResponseOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OAuth2AuthTypeConnectionPropertiesResponse) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

type PATAuthTypeConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'PAT'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category      *string                        `pulumi:"category"`
	Credentials   *ConnectionPersonalAccessToken `pulumi:"credentials"`
	Error         *string                        `pulumi:"error"`
	ExpiryTime    *string                        `pulumi:"expiryTime"`
	IsSharedToAll *bool                          `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

// PATAuthTypeConnectionPropertiesInput is an input type that accepts PATAuthTypeConnectionPropertiesArgs and PATAuthTypeConnectionPropertiesOutput values.
// You can construct a concrete instance of `PATAuthTypeConnectionPropertiesInput` via:
//
//	PATAuthTypeConnectionPropertiesArgs{...}
type PATAuthTypeConnectionPropertiesInput interface {
	pulumi.Input

	ToPATAuthTypeConnectionPropertiesOutput() PATAuthTypeConnectionPropertiesOutput
	ToPATAuthTypeConnectionPropertiesOutputWithContext(context.Context) PATAuthTypeConnectionPropertiesOutput
}

type PATAuthTypeConnectionPropertiesArgs struct {
	// Authentication type of the connection target
	// Expected value is 'PAT'.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Category of the connection
	Category      pulumi.StringPtrInput                 `pulumi:"category"`
	Credentials   ConnectionPersonalAccessTokenPtrInput `pulumi:"credentials"`
	Error         pulumi.StringPtrInput                 `pulumi:"error"`
	ExpiryTime    pulumi.StringPtrInput                 `pulumi:"expiryTime"`
	IsSharedToAll pulumi.BoolPtrInput                   `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    pulumi.StringMapInput   `pulumi:"metadata"`
	PeRequirement               pulumi.StringPtrInput   `pulumi:"peRequirement"`
	PeStatus                    pulumi.StringPtrInput   `pulumi:"peStatus"`
	SharedUserList              pulumi.StringArrayInput `pulumi:"sharedUserList"`
	Target                      pulumi.StringPtrInput   `pulumi:"target"`
	UseWorkspaceManagedIdentity pulumi.BoolPtrInput     `pulumi:"useWorkspaceManagedIdentity"`
}

func (PATAuthTypeConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PATAuthTypeConnectionProperties)(nil)).Elem()
}

func (i PATAuthTypeConnectionPropertiesArgs) ToPATAuthTypeConnectionPropertiesOutput() PATAuthTypeConnectionPropertiesOutput {
	return i.ToPATAuthTypeConnectionPropertiesOutputWithContext(context.Background())
}

func (i PATAuthTypeConnectionPropertiesArgs) ToPATAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) PATAuthTypeConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PATAuthTypeConnectionPropertiesOutput)
}

type PATAuthTypeConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (PATAuthTypeConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PATAuthTypeConnectionProperties)(nil)).Elem()
}

func (o PATAuthTypeConnectionPropertiesOutput) ToPATAuthTypeConnectionPropertiesOutput() PATAuthTypeConnectionPropertiesOutput {
	return o
}

func (o PATAuthTypeConnectionPropertiesOutput) ToPATAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) PATAuthTypeConnectionPropertiesOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'PAT'.
func (o PATAuthTypeConnectionPropertiesOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionProperties) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o PATAuthTypeConnectionPropertiesOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionProperties) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o PATAuthTypeConnectionPropertiesOutput) Credentials() ConnectionPersonalAccessTokenPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionProperties) *ConnectionPersonalAccessToken { return v.Credentials }).(ConnectionPersonalAccessTokenPtrOutput)
}

func (o PATAuthTypeConnectionPropertiesOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionProperties) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o PATAuthTypeConnectionPropertiesOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionProperties) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

func (o PATAuthTypeConnectionPropertiesOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionProperties) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o PATAuthTypeConnectionPropertiesOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionProperties) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o PATAuthTypeConnectionPropertiesOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionProperties) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o PATAuthTypeConnectionPropertiesOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionProperties) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o PATAuthTypeConnectionPropertiesOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionProperties) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o PATAuthTypeConnectionPropertiesOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionProperties) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o PATAuthTypeConnectionPropertiesOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionProperties) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

type PATAuthTypeConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'PAT'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category                *string                                `pulumi:"category"`
	CreatedByWorkspaceArmId string                                 `pulumi:"createdByWorkspaceArmId"`
	Credentials             *ConnectionPersonalAccessTokenResponse `pulumi:"credentials"`
	Error                   *string                                `pulumi:"error"`
	ExpiryTime              *string                                `pulumi:"expiryTime"`
	// Group based on connection category
	Group         string `pulumi:"group"`
	IsSharedToAll *bool  `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

type PATAuthTypeConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PATAuthTypeConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PATAuthTypeConnectionPropertiesResponse)(nil)).Elem()
}

func (o PATAuthTypeConnectionPropertiesResponseOutput) ToPATAuthTypeConnectionPropertiesResponseOutput() PATAuthTypeConnectionPropertiesResponseOutput {
	return o
}

func (o PATAuthTypeConnectionPropertiesResponseOutput) ToPATAuthTypeConnectionPropertiesResponseOutputWithContext(ctx context.Context) PATAuthTypeConnectionPropertiesResponseOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'PAT'.
func (o PATAuthTypeConnectionPropertiesResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionPropertiesResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o PATAuthTypeConnectionPropertiesResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionPropertiesResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o PATAuthTypeConnectionPropertiesResponseOutput) CreatedByWorkspaceArmId() pulumi.StringOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionPropertiesResponse) string { return v.CreatedByWorkspaceArmId }).(pulumi.StringOutput)
}

func (o PATAuthTypeConnectionPropertiesResponseOutput) Credentials() ConnectionPersonalAccessTokenResponsePtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionPropertiesResponse) *ConnectionPersonalAccessTokenResponse {
		return v.Credentials
	}).(ConnectionPersonalAccessTokenResponsePtrOutput)
}

func (o PATAuthTypeConnectionPropertiesResponseOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionPropertiesResponse) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o PATAuthTypeConnectionPropertiesResponseOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionPropertiesResponse) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

// Group based on connection category
func (o PATAuthTypeConnectionPropertiesResponseOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionPropertiesResponse) string { return v.Group }).(pulumi.StringOutput)
}

func (o PATAuthTypeConnectionPropertiesResponseOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionPropertiesResponse) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o PATAuthTypeConnectionPropertiesResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionPropertiesResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o PATAuthTypeConnectionPropertiesResponseOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionPropertiesResponse) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o PATAuthTypeConnectionPropertiesResponseOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionPropertiesResponse) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o PATAuthTypeConnectionPropertiesResponseOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionPropertiesResponse) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o PATAuthTypeConnectionPropertiesResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionPropertiesResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o PATAuthTypeConnectionPropertiesResponseOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PATAuthTypeConnectionPropertiesResponse) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

// Properties of the PrivateEndpointConnectProperties.
type PrivateEndpointConnectionProperties struct {
	// The private link resource group ids.
	GroupIds []string `pulumi:"groupIds"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionState `pulumi:"privateLinkServiceConnectionState"`
}

// PrivateEndpointConnectionPropertiesInput is an input type that accepts PrivateEndpointConnectionPropertiesArgs and PrivateEndpointConnectionPropertiesOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesInput` via:
//
//	PrivateEndpointConnectionPropertiesArgs{...}
type PrivateEndpointConnectionPropertiesInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput
	ToPrivateEndpointConnectionPropertiesOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesOutput
}

// Properties of the PrivateEndpointConnectProperties.
type PrivateEndpointConnectionPropertiesArgs struct {
	// The private link resource group ids.
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateInput `pulumi:"privateLinkServiceConnectionState"`
}

func (PrivateEndpointConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput {
	return i.ToPrivateEndpointConnectionPropertiesOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesOutput)
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput {
	return i.ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesOutput).ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx)
}

// PrivateEndpointConnectionPropertiesPtrInput is an input type that accepts PrivateEndpointConnectionPropertiesArgs, PrivateEndpointConnectionPropertiesPtr and PrivateEndpointConnectionPropertiesPtrOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesPtrInput` via:
//
//	        PrivateEndpointConnectionPropertiesArgs{...}
//
//	or:
//
//	        nil
type PrivateEndpointConnectionPropertiesPtrInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput
	ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesPtrOutput
}

type privateEndpointConnectionPropertiesPtrType PrivateEndpointConnectionPropertiesArgs

func PrivateEndpointConnectionPropertiesPtr(v *PrivateEndpointConnectionPropertiesArgs) PrivateEndpointConnectionPropertiesPtrInput {
	return (*privateEndpointConnectionPropertiesPtrType)(v)
}

func (*privateEndpointConnectionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (i *privateEndpointConnectionPropertiesPtrType) ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput {
	return i.ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i *privateEndpointConnectionPropertiesPtrType) ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesPtrOutput)
}

// Properties of the PrivateEndpointConnectProperties.
type PrivateEndpointConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput {
	return o.ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointConnectionProperties) *PrivateEndpointConnectionProperties {
		return &v
	}).(PrivateEndpointConnectionPropertiesPtrOutput)
}

// The private link resource group ids.
func (o PrivateEndpointConnectionPropertiesOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionProperties) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionPropertiesOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionProperties) PrivateLinkServiceConnectionState {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateOutput)
}

type PrivateEndpointConnectionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesPtrOutput) ToPrivateEndpointConnectionPropertiesPtrOutput() PrivateEndpointConnectionPropertiesPtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesPtrOutput) ToPrivateEndpointConnectionPropertiesPtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesPtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesPtrOutput) Elem() PrivateEndpointConnectionPropertiesOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionProperties) PrivateEndpointConnectionProperties {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointConnectionProperties
		return ret
	}).(PrivateEndpointConnectionPropertiesOutput)
}

// The private link resource group ids.
func (o PrivateEndpointConnectionPropertiesPtrOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionProperties) []string {
		if v == nil {
			return nil
		}
		return v.GroupIds
	}).(pulumi.StringArrayOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionPropertiesPtrOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionProperties) *PrivateLinkServiceConnectionState {
		if v == nil {
			return nil
		}
		return &v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// Properties of the PrivateEndpointConnectProperties.
type PrivateEndpointConnectionPropertiesResponse struct {
	// The private link resource group ids.
	GroupIds []string `pulumi:"groupIds"`
	// The resource of private end point.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Properties of the PrivateEndpointConnectProperties.
type PrivateEndpointConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesResponseOutput) ToPrivateEndpointConnectionPropertiesResponseOutput() PrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponseOutput) ToPrivateEndpointConnectionPropertiesResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

// The private link resource group ids.
func (o PrivateEndpointConnectionPropertiesResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// The resource of private end point.
func (o PrivateEndpointConnectionPropertiesResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionPropertiesResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) ToPrivateEndpointConnectionPropertiesResponsePtrOutput() PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) ToPrivateEndpointConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) Elem() PrivateEndpointConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) PrivateEndpointConnectionPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointConnectionPropertiesResponse
		return ret
	}).(PrivateEndpointConnectionPropertiesResponseOutput)
}

// The private link resource group ids.
func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.GroupIds
	}).(pulumi.StringArrayOutput)
}

// The resource of private end point.
func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) *PrivateEndpointResponse {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoint
	}).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) *PrivateLinkServiceConnectionStateResponse {
		if v == nil {
			return nil
		}
		return &v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponse struct {
	// Resource Etag.
	Etag string `pulumi:"etag"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The location of the private endpoint connection
	Location *string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Resource properties.
	Properties *PrivateEndpointConnectionPropertiesResponse `pulumi:"properties"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// The Private Endpoint Connection resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// Resource Etag.
func (o PrivateEndpointConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the private endpoint connection
func (o PrivateEndpointConnectionResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource properties.
func (o PrivateEndpointConnectionResponseOutput) Properties() PrivateEndpointConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointConnectionPropertiesResponse {
		return v.Properties
	}).(PrivateEndpointConnectionPropertiesResponsePtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o PrivateEndpointConnectionResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// The Private Endpoint resource.
type PrivateEndpointResponse struct {
	// The ARM identifier for Private Endpoint
	Id string `pulumi:"id"`
}

// The Private Endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// The ARM identifier for Private Endpoint
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput).ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStatePtrInput is an input type that accepts PrivateLinkServiceConnectionStateArgs, PrivateLinkServiceConnectionStatePtr and PrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStatePtrInput` via:
//
//	        PrivateLinkServiceConnectionStateArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput
	ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStatePtrOutput
}

type privateLinkServiceConnectionStatePtrType PrivateLinkServiceConnectionStateArgs

func PrivateLinkServiceConnectionStatePtr(v *PrivateLinkServiceConnectionStateArgs) PrivateLinkServiceConnectionStatePtrInput {
	return (*privateLinkServiceConnectionStatePtrType)(v)
}

func (*privateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServiceConnectionState) *PrivateLinkServiceConnectionState {
		return &v
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) Elem() PrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) PrivateLinkServiceConnectionState {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionState
		return ret
	}).(PrivateLinkServiceConnectionStateOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionStateResponse
		return ret
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Properties of Cognitive Services Project'.
type ProjectProperties struct {
	// The description of the Cognitive Services Project.
	Description *string `pulumi:"description"`
	// The display name of the Cognitive Services Project.
	DisplayName *string `pulumi:"displayName"`
}

// ProjectPropertiesInput is an input type that accepts ProjectPropertiesArgs and ProjectPropertiesOutput values.
// You can construct a concrete instance of `ProjectPropertiesInput` via:
//
//	ProjectPropertiesArgs{...}
type ProjectPropertiesInput interface {
	pulumi.Input

	ToProjectPropertiesOutput() ProjectPropertiesOutput
	ToProjectPropertiesOutputWithContext(context.Context) ProjectPropertiesOutput
}

// Properties of Cognitive Services Project'.
type ProjectPropertiesArgs struct {
	// The description of the Cognitive Services Project.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The display name of the Cognitive Services Project.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
}

func (ProjectPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectProperties)(nil)).Elem()
}

func (i ProjectPropertiesArgs) ToProjectPropertiesOutput() ProjectPropertiesOutput {
	return i.ToProjectPropertiesOutputWithContext(context.Background())
}

func (i ProjectPropertiesArgs) ToProjectPropertiesOutputWithContext(ctx context.Context) ProjectPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPropertiesOutput)
}

func (i ProjectPropertiesArgs) ToProjectPropertiesPtrOutput() ProjectPropertiesPtrOutput {
	return i.ToProjectPropertiesPtrOutputWithContext(context.Background())
}

func (i ProjectPropertiesArgs) ToProjectPropertiesPtrOutputWithContext(ctx context.Context) ProjectPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPropertiesOutput).ToProjectPropertiesPtrOutputWithContext(ctx)
}

// ProjectPropertiesPtrInput is an input type that accepts ProjectPropertiesArgs, ProjectPropertiesPtr and ProjectPropertiesPtrOutput values.
// You can construct a concrete instance of `ProjectPropertiesPtrInput` via:
//
//	        ProjectPropertiesArgs{...}
//
//	or:
//
//	        nil
type ProjectPropertiesPtrInput interface {
	pulumi.Input

	ToProjectPropertiesPtrOutput() ProjectPropertiesPtrOutput
	ToProjectPropertiesPtrOutputWithContext(context.Context) ProjectPropertiesPtrOutput
}

type projectPropertiesPtrType ProjectPropertiesArgs

func ProjectPropertiesPtr(v *ProjectPropertiesArgs) ProjectPropertiesPtrInput {
	return (*projectPropertiesPtrType)(v)
}

func (*projectPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectProperties)(nil)).Elem()
}

func (i *projectPropertiesPtrType) ToProjectPropertiesPtrOutput() ProjectPropertiesPtrOutput {
	return i.ToProjectPropertiesPtrOutputWithContext(context.Background())
}

func (i *projectPropertiesPtrType) ToProjectPropertiesPtrOutputWithContext(ctx context.Context) ProjectPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPropertiesPtrOutput)
}

// Properties of Cognitive Services Project'.
type ProjectPropertiesOutput struct{ *pulumi.OutputState }

func (ProjectPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectProperties)(nil)).Elem()
}

func (o ProjectPropertiesOutput) ToProjectPropertiesOutput() ProjectPropertiesOutput {
	return o
}

func (o ProjectPropertiesOutput) ToProjectPropertiesOutputWithContext(ctx context.Context) ProjectPropertiesOutput {
	return o
}

func (o ProjectPropertiesOutput) ToProjectPropertiesPtrOutput() ProjectPropertiesPtrOutput {
	return o.ToProjectPropertiesPtrOutputWithContext(context.Background())
}

func (o ProjectPropertiesOutput) ToProjectPropertiesPtrOutputWithContext(ctx context.Context) ProjectPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectProperties) *ProjectProperties {
		return &v
	}).(ProjectPropertiesPtrOutput)
}

// The description of the Cognitive Services Project.
func (o ProjectPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the Cognitive Services Project.
func (o ProjectPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

type ProjectPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ProjectPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectProperties)(nil)).Elem()
}

func (o ProjectPropertiesPtrOutput) ToProjectPropertiesPtrOutput() ProjectPropertiesPtrOutput {
	return o
}

func (o ProjectPropertiesPtrOutput) ToProjectPropertiesPtrOutputWithContext(ctx context.Context) ProjectPropertiesPtrOutput {
	return o
}

func (o ProjectPropertiesPtrOutput) Elem() ProjectPropertiesOutput {
	return o.ApplyT(func(v *ProjectProperties) ProjectProperties {
		if v != nil {
			return *v
		}
		var ret ProjectProperties
		return ret
	}).(ProjectPropertiesOutput)
}

// The description of the Cognitive Services Project.
func (o ProjectPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The display name of the Cognitive Services Project.
func (o ProjectPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Properties of Cognitive Services Project'.
type ProjectPropertiesResponse struct {
	// The description of the Cognitive Services Project.
	Description *string `pulumi:"description"`
	// The display name of the Cognitive Services Project.
	DisplayName *string `pulumi:"displayName"`
	// The list of endpoint for this Cognitive Services Project.
	Endpoints map[string]string `pulumi:"endpoints"`
	// Indicates whether the project is the default project for the account.
	IsDefault bool `pulumi:"isDefault"`
	// Gets the status of the cognitive services project at the time the operation was called.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Properties of Cognitive Services Project'.
type ProjectPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ProjectPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectPropertiesResponse)(nil)).Elem()
}

func (o ProjectPropertiesResponseOutput) ToProjectPropertiesResponseOutput() ProjectPropertiesResponseOutput {
	return o
}

func (o ProjectPropertiesResponseOutput) ToProjectPropertiesResponseOutputWithContext(ctx context.Context) ProjectPropertiesResponseOutput {
	return o
}

// The description of the Cognitive Services Project.
func (o ProjectPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the Cognitive Services Project.
func (o ProjectPropertiesResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectPropertiesResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The list of endpoint for this Cognitive Services Project.
func (o ProjectPropertiesResponseOutput) Endpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProjectPropertiesResponse) map[string]string { return v.Endpoints }).(pulumi.StringMapOutput)
}

// Indicates whether the project is the default project for the account.
func (o ProjectPropertiesResponseOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v ProjectPropertiesResponse) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Gets the status of the cognitive services project at the time the operation was called.
func (o ProjectPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type QuotaLimitResponse struct {
	Count         *float64                 `pulumi:"count"`
	RenewalPeriod *float64                 `pulumi:"renewalPeriod"`
	Rules         []ThrottlingRuleResponse `pulumi:"rules"`
}

type QuotaLimitResponseOutput struct{ *pulumi.OutputState }

func (QuotaLimitResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuotaLimitResponse)(nil)).Elem()
}

func (o QuotaLimitResponseOutput) ToQuotaLimitResponseOutput() QuotaLimitResponseOutput {
	return o
}

func (o QuotaLimitResponseOutput) ToQuotaLimitResponseOutputWithContext(ctx context.Context) QuotaLimitResponseOutput {
	return o
}

func (o QuotaLimitResponseOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v QuotaLimitResponse) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

func (o QuotaLimitResponseOutput) RenewalPeriod() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v QuotaLimitResponse) *float64 { return v.RenewalPeriod }).(pulumi.Float64PtrOutput)
}

func (o QuotaLimitResponseOutput) Rules() ThrottlingRuleResponseArrayOutput {
	return o.ApplyT(func(v QuotaLimitResponse) []ThrottlingRuleResponse { return v.Rules }).(ThrottlingRuleResponseArrayOutput)
}

// RAI Custom Blocklist Item properties.
type RaiBlocklistItemProperties struct {
	// If the pattern is a regex pattern.
	IsRegex *bool `pulumi:"isRegex"`
	// Pattern to match against.
	Pattern *string `pulumi:"pattern"`
}

// RaiBlocklistItemPropertiesInput is an input type that accepts RaiBlocklistItemPropertiesArgs and RaiBlocklistItemPropertiesOutput values.
// You can construct a concrete instance of `RaiBlocklistItemPropertiesInput` via:
//
//	RaiBlocklistItemPropertiesArgs{...}
type RaiBlocklistItemPropertiesInput interface {
	pulumi.Input

	ToRaiBlocklistItemPropertiesOutput() RaiBlocklistItemPropertiesOutput
	ToRaiBlocklistItemPropertiesOutputWithContext(context.Context) RaiBlocklistItemPropertiesOutput
}

// RAI Custom Blocklist Item properties.
type RaiBlocklistItemPropertiesArgs struct {
	// If the pattern is a regex pattern.
	IsRegex pulumi.BoolPtrInput `pulumi:"isRegex"`
	// Pattern to match against.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
}

func (RaiBlocklistItemPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RaiBlocklistItemProperties)(nil)).Elem()
}

func (i RaiBlocklistItemPropertiesArgs) ToRaiBlocklistItemPropertiesOutput() RaiBlocklistItemPropertiesOutput {
	return i.ToRaiBlocklistItemPropertiesOutputWithContext(context.Background())
}

func (i RaiBlocklistItemPropertiesArgs) ToRaiBlocklistItemPropertiesOutputWithContext(ctx context.Context) RaiBlocklistItemPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiBlocklistItemPropertiesOutput)
}

func (i RaiBlocklistItemPropertiesArgs) ToRaiBlocklistItemPropertiesPtrOutput() RaiBlocklistItemPropertiesPtrOutput {
	return i.ToRaiBlocklistItemPropertiesPtrOutputWithContext(context.Background())
}

func (i RaiBlocklistItemPropertiesArgs) ToRaiBlocklistItemPropertiesPtrOutputWithContext(ctx context.Context) RaiBlocklistItemPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiBlocklistItemPropertiesOutput).ToRaiBlocklistItemPropertiesPtrOutputWithContext(ctx)
}

// RaiBlocklistItemPropertiesPtrInput is an input type that accepts RaiBlocklistItemPropertiesArgs, RaiBlocklistItemPropertiesPtr and RaiBlocklistItemPropertiesPtrOutput values.
// You can construct a concrete instance of `RaiBlocklistItemPropertiesPtrInput` via:
//
//	        RaiBlocklistItemPropertiesArgs{...}
//
//	or:
//
//	        nil
type RaiBlocklistItemPropertiesPtrInput interface {
	pulumi.Input

	ToRaiBlocklistItemPropertiesPtrOutput() RaiBlocklistItemPropertiesPtrOutput
	ToRaiBlocklistItemPropertiesPtrOutputWithContext(context.Context) RaiBlocklistItemPropertiesPtrOutput
}

type raiBlocklistItemPropertiesPtrType RaiBlocklistItemPropertiesArgs

func RaiBlocklistItemPropertiesPtr(v *RaiBlocklistItemPropertiesArgs) RaiBlocklistItemPropertiesPtrInput {
	return (*raiBlocklistItemPropertiesPtrType)(v)
}

func (*raiBlocklistItemPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RaiBlocklistItemProperties)(nil)).Elem()
}

func (i *raiBlocklistItemPropertiesPtrType) ToRaiBlocklistItemPropertiesPtrOutput() RaiBlocklistItemPropertiesPtrOutput {
	return i.ToRaiBlocklistItemPropertiesPtrOutputWithContext(context.Background())
}

func (i *raiBlocklistItemPropertiesPtrType) ToRaiBlocklistItemPropertiesPtrOutputWithContext(ctx context.Context) RaiBlocklistItemPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiBlocklistItemPropertiesPtrOutput)
}

// RAI Custom Blocklist Item properties.
type RaiBlocklistItemPropertiesOutput struct{ *pulumi.OutputState }

func (RaiBlocklistItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RaiBlocklistItemProperties)(nil)).Elem()
}

func (o RaiBlocklistItemPropertiesOutput) ToRaiBlocklistItemPropertiesOutput() RaiBlocklistItemPropertiesOutput {
	return o
}

func (o RaiBlocklistItemPropertiesOutput) ToRaiBlocklistItemPropertiesOutputWithContext(ctx context.Context) RaiBlocklistItemPropertiesOutput {
	return o
}

func (o RaiBlocklistItemPropertiesOutput) ToRaiBlocklistItemPropertiesPtrOutput() RaiBlocklistItemPropertiesPtrOutput {
	return o.ToRaiBlocklistItemPropertiesPtrOutputWithContext(context.Background())
}

func (o RaiBlocklistItemPropertiesOutput) ToRaiBlocklistItemPropertiesPtrOutputWithContext(ctx context.Context) RaiBlocklistItemPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RaiBlocklistItemProperties) *RaiBlocklistItemProperties {
		return &v
	}).(RaiBlocklistItemPropertiesPtrOutput)
}

// If the pattern is a regex pattern.
func (o RaiBlocklistItemPropertiesOutput) IsRegex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RaiBlocklistItemProperties) *bool { return v.IsRegex }).(pulumi.BoolPtrOutput)
}

// Pattern to match against.
func (o RaiBlocklistItemPropertiesOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiBlocklistItemProperties) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

type RaiBlocklistItemPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RaiBlocklistItemPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RaiBlocklistItemProperties)(nil)).Elem()
}

func (o RaiBlocklistItemPropertiesPtrOutput) ToRaiBlocklistItemPropertiesPtrOutput() RaiBlocklistItemPropertiesPtrOutput {
	return o
}

func (o RaiBlocklistItemPropertiesPtrOutput) ToRaiBlocklistItemPropertiesPtrOutputWithContext(ctx context.Context) RaiBlocklistItemPropertiesPtrOutput {
	return o
}

func (o RaiBlocklistItemPropertiesPtrOutput) Elem() RaiBlocklistItemPropertiesOutput {
	return o.ApplyT(func(v *RaiBlocklistItemProperties) RaiBlocklistItemProperties {
		if v != nil {
			return *v
		}
		var ret RaiBlocklistItemProperties
		return ret
	}).(RaiBlocklistItemPropertiesOutput)
}

// If the pattern is a regex pattern.
func (o RaiBlocklistItemPropertiesPtrOutput) IsRegex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RaiBlocklistItemProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsRegex
	}).(pulumi.BoolPtrOutput)
}

// Pattern to match against.
func (o RaiBlocklistItemPropertiesPtrOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RaiBlocklistItemProperties) *string {
		if v == nil {
			return nil
		}
		return v.Pattern
	}).(pulumi.StringPtrOutput)
}

// RAI Custom Blocklist Item properties.
type RaiBlocklistItemPropertiesResponse struct {
	// If the pattern is a regex pattern.
	IsRegex *bool `pulumi:"isRegex"`
	// Pattern to match against.
	Pattern *string `pulumi:"pattern"`
}

// RAI Custom Blocklist Item properties.
type RaiBlocklistItemPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RaiBlocklistItemPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RaiBlocklistItemPropertiesResponse)(nil)).Elem()
}

func (o RaiBlocklistItemPropertiesResponseOutput) ToRaiBlocklistItemPropertiesResponseOutput() RaiBlocklistItemPropertiesResponseOutput {
	return o
}

func (o RaiBlocklistItemPropertiesResponseOutput) ToRaiBlocklistItemPropertiesResponseOutputWithContext(ctx context.Context) RaiBlocklistItemPropertiesResponseOutput {
	return o
}

// If the pattern is a regex pattern.
func (o RaiBlocklistItemPropertiesResponseOutput) IsRegex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RaiBlocklistItemPropertiesResponse) *bool { return v.IsRegex }).(pulumi.BoolPtrOutput)
}

// Pattern to match against.
func (o RaiBlocklistItemPropertiesResponseOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiBlocklistItemPropertiesResponse) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// RAI Custom Blocklist properties.
type RaiBlocklistProperties struct {
	// Description of the block list.
	Description *string `pulumi:"description"`
}

// RaiBlocklistPropertiesInput is an input type that accepts RaiBlocklistPropertiesArgs and RaiBlocklistPropertiesOutput values.
// You can construct a concrete instance of `RaiBlocklistPropertiesInput` via:
//
//	RaiBlocklistPropertiesArgs{...}
type RaiBlocklistPropertiesInput interface {
	pulumi.Input

	ToRaiBlocklistPropertiesOutput() RaiBlocklistPropertiesOutput
	ToRaiBlocklistPropertiesOutputWithContext(context.Context) RaiBlocklistPropertiesOutput
}

// RAI Custom Blocklist properties.
type RaiBlocklistPropertiesArgs struct {
	// Description of the block list.
	Description pulumi.StringPtrInput `pulumi:"description"`
}

func (RaiBlocklistPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RaiBlocklistProperties)(nil)).Elem()
}

func (i RaiBlocklistPropertiesArgs) ToRaiBlocklistPropertiesOutput() RaiBlocklistPropertiesOutput {
	return i.ToRaiBlocklistPropertiesOutputWithContext(context.Background())
}

func (i RaiBlocklistPropertiesArgs) ToRaiBlocklistPropertiesOutputWithContext(ctx context.Context) RaiBlocklistPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiBlocklistPropertiesOutput)
}

func (i RaiBlocklistPropertiesArgs) ToRaiBlocklistPropertiesPtrOutput() RaiBlocklistPropertiesPtrOutput {
	return i.ToRaiBlocklistPropertiesPtrOutputWithContext(context.Background())
}

func (i RaiBlocklistPropertiesArgs) ToRaiBlocklistPropertiesPtrOutputWithContext(ctx context.Context) RaiBlocklistPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiBlocklistPropertiesOutput).ToRaiBlocklistPropertiesPtrOutputWithContext(ctx)
}

// RaiBlocklistPropertiesPtrInput is an input type that accepts RaiBlocklistPropertiesArgs, RaiBlocklistPropertiesPtr and RaiBlocklistPropertiesPtrOutput values.
// You can construct a concrete instance of `RaiBlocklistPropertiesPtrInput` via:
//
//	        RaiBlocklistPropertiesArgs{...}
//
//	or:
//
//	        nil
type RaiBlocklistPropertiesPtrInput interface {
	pulumi.Input

	ToRaiBlocklistPropertiesPtrOutput() RaiBlocklistPropertiesPtrOutput
	ToRaiBlocklistPropertiesPtrOutputWithContext(context.Context) RaiBlocklistPropertiesPtrOutput
}

type raiBlocklistPropertiesPtrType RaiBlocklistPropertiesArgs

func RaiBlocklistPropertiesPtr(v *RaiBlocklistPropertiesArgs) RaiBlocklistPropertiesPtrInput {
	return (*raiBlocklistPropertiesPtrType)(v)
}

func (*raiBlocklistPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RaiBlocklistProperties)(nil)).Elem()
}

func (i *raiBlocklistPropertiesPtrType) ToRaiBlocklistPropertiesPtrOutput() RaiBlocklistPropertiesPtrOutput {
	return i.ToRaiBlocklistPropertiesPtrOutputWithContext(context.Background())
}

func (i *raiBlocklistPropertiesPtrType) ToRaiBlocklistPropertiesPtrOutputWithContext(ctx context.Context) RaiBlocklistPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiBlocklistPropertiesPtrOutput)
}

// RAI Custom Blocklist properties.
type RaiBlocklistPropertiesOutput struct{ *pulumi.OutputState }

func (RaiBlocklistPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RaiBlocklistProperties)(nil)).Elem()
}

func (o RaiBlocklistPropertiesOutput) ToRaiBlocklistPropertiesOutput() RaiBlocklistPropertiesOutput {
	return o
}

func (o RaiBlocklistPropertiesOutput) ToRaiBlocklistPropertiesOutputWithContext(ctx context.Context) RaiBlocklistPropertiesOutput {
	return o
}

func (o RaiBlocklistPropertiesOutput) ToRaiBlocklistPropertiesPtrOutput() RaiBlocklistPropertiesPtrOutput {
	return o.ToRaiBlocklistPropertiesPtrOutputWithContext(context.Background())
}

func (o RaiBlocklistPropertiesOutput) ToRaiBlocklistPropertiesPtrOutputWithContext(ctx context.Context) RaiBlocklistPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RaiBlocklistProperties) *RaiBlocklistProperties {
		return &v
	}).(RaiBlocklistPropertiesPtrOutput)
}

// Description of the block list.
func (o RaiBlocklistPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiBlocklistProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

type RaiBlocklistPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RaiBlocklistPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RaiBlocklistProperties)(nil)).Elem()
}

func (o RaiBlocklistPropertiesPtrOutput) ToRaiBlocklistPropertiesPtrOutput() RaiBlocklistPropertiesPtrOutput {
	return o
}

func (o RaiBlocklistPropertiesPtrOutput) ToRaiBlocklistPropertiesPtrOutputWithContext(ctx context.Context) RaiBlocklistPropertiesPtrOutput {
	return o
}

func (o RaiBlocklistPropertiesPtrOutput) Elem() RaiBlocklistPropertiesOutput {
	return o.ApplyT(func(v *RaiBlocklistProperties) RaiBlocklistProperties {
		if v != nil {
			return *v
		}
		var ret RaiBlocklistProperties
		return ret
	}).(RaiBlocklistPropertiesOutput)
}

// Description of the block list.
func (o RaiBlocklistPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RaiBlocklistProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// RAI Custom Blocklist properties.
type RaiBlocklistPropertiesResponse struct {
	// Description of the block list.
	Description *string `pulumi:"description"`
}

// RAI Custom Blocklist properties.
type RaiBlocklistPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RaiBlocklistPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RaiBlocklistPropertiesResponse)(nil)).Elem()
}

func (o RaiBlocklistPropertiesResponseOutput) ToRaiBlocklistPropertiesResponseOutput() RaiBlocklistPropertiesResponseOutput {
	return o
}

func (o RaiBlocklistPropertiesResponseOutput) ToRaiBlocklistPropertiesResponseOutputWithContext(ctx context.Context) RaiBlocklistPropertiesResponseOutput {
	return o
}

// Description of the block list.
func (o RaiBlocklistPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiBlocklistPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Cognitive Services Rai Monitor Config.
type RaiMonitorConfig struct {
	// The storage resource Id.
	AdxStorageResourceId *string `pulumi:"adxStorageResourceId"`
	// The identity client Id to access the storage.
	IdentityClientId *string `pulumi:"identityClientId"`
}

// RaiMonitorConfigInput is an input type that accepts RaiMonitorConfigArgs and RaiMonitorConfigOutput values.
// You can construct a concrete instance of `RaiMonitorConfigInput` via:
//
//	RaiMonitorConfigArgs{...}
type RaiMonitorConfigInput interface {
	pulumi.Input

	ToRaiMonitorConfigOutput() RaiMonitorConfigOutput
	ToRaiMonitorConfigOutputWithContext(context.Context) RaiMonitorConfigOutput
}

// Cognitive Services Rai Monitor Config.
type RaiMonitorConfigArgs struct {
	// The storage resource Id.
	AdxStorageResourceId pulumi.StringPtrInput `pulumi:"adxStorageResourceId"`
	// The identity client Id to access the storage.
	IdentityClientId pulumi.StringPtrInput `pulumi:"identityClientId"`
}

func (RaiMonitorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RaiMonitorConfig)(nil)).Elem()
}

func (i RaiMonitorConfigArgs) ToRaiMonitorConfigOutput() RaiMonitorConfigOutput {
	return i.ToRaiMonitorConfigOutputWithContext(context.Background())
}

func (i RaiMonitorConfigArgs) ToRaiMonitorConfigOutputWithContext(ctx context.Context) RaiMonitorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiMonitorConfigOutput)
}

func (i RaiMonitorConfigArgs) ToRaiMonitorConfigPtrOutput() RaiMonitorConfigPtrOutput {
	return i.ToRaiMonitorConfigPtrOutputWithContext(context.Background())
}

func (i RaiMonitorConfigArgs) ToRaiMonitorConfigPtrOutputWithContext(ctx context.Context) RaiMonitorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiMonitorConfigOutput).ToRaiMonitorConfigPtrOutputWithContext(ctx)
}

// RaiMonitorConfigPtrInput is an input type that accepts RaiMonitorConfigArgs, RaiMonitorConfigPtr and RaiMonitorConfigPtrOutput values.
// You can construct a concrete instance of `RaiMonitorConfigPtrInput` via:
//
//	        RaiMonitorConfigArgs{...}
//
//	or:
//
//	        nil
type RaiMonitorConfigPtrInput interface {
	pulumi.Input

	ToRaiMonitorConfigPtrOutput() RaiMonitorConfigPtrOutput
	ToRaiMonitorConfigPtrOutputWithContext(context.Context) RaiMonitorConfigPtrOutput
}

type raiMonitorConfigPtrType RaiMonitorConfigArgs

func RaiMonitorConfigPtr(v *RaiMonitorConfigArgs) RaiMonitorConfigPtrInput {
	return (*raiMonitorConfigPtrType)(v)
}

func (*raiMonitorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RaiMonitorConfig)(nil)).Elem()
}

func (i *raiMonitorConfigPtrType) ToRaiMonitorConfigPtrOutput() RaiMonitorConfigPtrOutput {
	return i.ToRaiMonitorConfigPtrOutputWithContext(context.Background())
}

func (i *raiMonitorConfigPtrType) ToRaiMonitorConfigPtrOutputWithContext(ctx context.Context) RaiMonitorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiMonitorConfigPtrOutput)
}

// Cognitive Services Rai Monitor Config.
type RaiMonitorConfigOutput struct{ *pulumi.OutputState }

func (RaiMonitorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RaiMonitorConfig)(nil)).Elem()
}

func (o RaiMonitorConfigOutput) ToRaiMonitorConfigOutput() RaiMonitorConfigOutput {
	return o
}

func (o RaiMonitorConfigOutput) ToRaiMonitorConfigOutputWithContext(ctx context.Context) RaiMonitorConfigOutput {
	return o
}

func (o RaiMonitorConfigOutput) ToRaiMonitorConfigPtrOutput() RaiMonitorConfigPtrOutput {
	return o.ToRaiMonitorConfigPtrOutputWithContext(context.Background())
}

func (o RaiMonitorConfigOutput) ToRaiMonitorConfigPtrOutputWithContext(ctx context.Context) RaiMonitorConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RaiMonitorConfig) *RaiMonitorConfig {
		return &v
	}).(RaiMonitorConfigPtrOutput)
}

// The storage resource Id.
func (o RaiMonitorConfigOutput) AdxStorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiMonitorConfig) *string { return v.AdxStorageResourceId }).(pulumi.StringPtrOutput)
}

// The identity client Id to access the storage.
func (o RaiMonitorConfigOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiMonitorConfig) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

type RaiMonitorConfigPtrOutput struct{ *pulumi.OutputState }

func (RaiMonitorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RaiMonitorConfig)(nil)).Elem()
}

func (o RaiMonitorConfigPtrOutput) ToRaiMonitorConfigPtrOutput() RaiMonitorConfigPtrOutput {
	return o
}

func (o RaiMonitorConfigPtrOutput) ToRaiMonitorConfigPtrOutputWithContext(ctx context.Context) RaiMonitorConfigPtrOutput {
	return o
}

func (o RaiMonitorConfigPtrOutput) Elem() RaiMonitorConfigOutput {
	return o.ApplyT(func(v *RaiMonitorConfig) RaiMonitorConfig {
		if v != nil {
			return *v
		}
		var ret RaiMonitorConfig
		return ret
	}).(RaiMonitorConfigOutput)
}

// The storage resource Id.
func (o RaiMonitorConfigPtrOutput) AdxStorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RaiMonitorConfig) *string {
		if v == nil {
			return nil
		}
		return v.AdxStorageResourceId
	}).(pulumi.StringPtrOutput)
}

// The identity client Id to access the storage.
func (o RaiMonitorConfigPtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RaiMonitorConfig) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Cognitive Services Rai Monitor Config.
type RaiMonitorConfigResponse struct {
	// The storage resource Id.
	AdxStorageResourceId *string `pulumi:"adxStorageResourceId"`
	// The identity client Id to access the storage.
	IdentityClientId *string `pulumi:"identityClientId"`
}

// Cognitive Services Rai Monitor Config.
type RaiMonitorConfigResponseOutput struct{ *pulumi.OutputState }

func (RaiMonitorConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RaiMonitorConfigResponse)(nil)).Elem()
}

func (o RaiMonitorConfigResponseOutput) ToRaiMonitorConfigResponseOutput() RaiMonitorConfigResponseOutput {
	return o
}

func (o RaiMonitorConfigResponseOutput) ToRaiMonitorConfigResponseOutputWithContext(ctx context.Context) RaiMonitorConfigResponseOutput {
	return o
}

// The storage resource Id.
func (o RaiMonitorConfigResponseOutput) AdxStorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiMonitorConfigResponse) *string { return v.AdxStorageResourceId }).(pulumi.StringPtrOutput)
}

// The identity client Id to access the storage.
func (o RaiMonitorConfigResponseOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiMonitorConfigResponse) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

type RaiMonitorConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (RaiMonitorConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RaiMonitorConfigResponse)(nil)).Elem()
}

func (o RaiMonitorConfigResponsePtrOutput) ToRaiMonitorConfigResponsePtrOutput() RaiMonitorConfigResponsePtrOutput {
	return o
}

func (o RaiMonitorConfigResponsePtrOutput) ToRaiMonitorConfigResponsePtrOutputWithContext(ctx context.Context) RaiMonitorConfigResponsePtrOutput {
	return o
}

func (o RaiMonitorConfigResponsePtrOutput) Elem() RaiMonitorConfigResponseOutput {
	return o.ApplyT(func(v *RaiMonitorConfigResponse) RaiMonitorConfigResponse {
		if v != nil {
			return *v
		}
		var ret RaiMonitorConfigResponse
		return ret
	}).(RaiMonitorConfigResponseOutput)
}

// The storage resource Id.
func (o RaiMonitorConfigResponsePtrOutput) AdxStorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RaiMonitorConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdxStorageResourceId
	}).(pulumi.StringPtrOutput)
}

// The identity client Id to access the storage.
func (o RaiMonitorConfigResponsePtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RaiMonitorConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Azure OpenAI Content Filter.
type RaiPolicyContentFilter struct {
	// If blocking would occur.
	Blocking *bool `pulumi:"blocking"`
	// If the ContentFilter is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Name of ContentFilter.
	Name *string `pulumi:"name"`
	// Level at which content is filtered.
	SeverityThreshold *string `pulumi:"severityThreshold"`
	// Content source to apply the Content Filters.
	Source *string `pulumi:"source"`
}

// RaiPolicyContentFilterInput is an input type that accepts RaiPolicyContentFilterArgs and RaiPolicyContentFilterOutput values.
// You can construct a concrete instance of `RaiPolicyContentFilterInput` via:
//
//	RaiPolicyContentFilterArgs{...}
type RaiPolicyContentFilterInput interface {
	pulumi.Input

	ToRaiPolicyContentFilterOutput() RaiPolicyContentFilterOutput
	ToRaiPolicyContentFilterOutputWithContext(context.Context) RaiPolicyContentFilterOutput
}

// Azure OpenAI Content Filter.
type RaiPolicyContentFilterArgs struct {
	// If blocking would occur.
	Blocking pulumi.BoolPtrInput `pulumi:"blocking"`
	// If the ContentFilter is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Name of ContentFilter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Level at which content is filtered.
	SeverityThreshold pulumi.StringPtrInput `pulumi:"severityThreshold"`
	// Content source to apply the Content Filters.
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (RaiPolicyContentFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RaiPolicyContentFilter)(nil)).Elem()
}

func (i RaiPolicyContentFilterArgs) ToRaiPolicyContentFilterOutput() RaiPolicyContentFilterOutput {
	return i.ToRaiPolicyContentFilterOutputWithContext(context.Background())
}

func (i RaiPolicyContentFilterArgs) ToRaiPolicyContentFilterOutputWithContext(ctx context.Context) RaiPolicyContentFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiPolicyContentFilterOutput)
}

// RaiPolicyContentFilterArrayInput is an input type that accepts RaiPolicyContentFilterArray and RaiPolicyContentFilterArrayOutput values.
// You can construct a concrete instance of `RaiPolicyContentFilterArrayInput` via:
//
//	RaiPolicyContentFilterArray{ RaiPolicyContentFilterArgs{...} }
type RaiPolicyContentFilterArrayInput interface {
	pulumi.Input

	ToRaiPolicyContentFilterArrayOutput() RaiPolicyContentFilterArrayOutput
	ToRaiPolicyContentFilterArrayOutputWithContext(context.Context) RaiPolicyContentFilterArrayOutput
}

type RaiPolicyContentFilterArray []RaiPolicyContentFilterInput

func (RaiPolicyContentFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RaiPolicyContentFilter)(nil)).Elem()
}

func (i RaiPolicyContentFilterArray) ToRaiPolicyContentFilterArrayOutput() RaiPolicyContentFilterArrayOutput {
	return i.ToRaiPolicyContentFilterArrayOutputWithContext(context.Background())
}

func (i RaiPolicyContentFilterArray) ToRaiPolicyContentFilterArrayOutputWithContext(ctx context.Context) RaiPolicyContentFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiPolicyContentFilterArrayOutput)
}

// Azure OpenAI Content Filter.
type RaiPolicyContentFilterOutput struct{ *pulumi.OutputState }

func (RaiPolicyContentFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RaiPolicyContentFilter)(nil)).Elem()
}

func (o RaiPolicyContentFilterOutput) ToRaiPolicyContentFilterOutput() RaiPolicyContentFilterOutput {
	return o
}

func (o RaiPolicyContentFilterOutput) ToRaiPolicyContentFilterOutputWithContext(ctx context.Context) RaiPolicyContentFilterOutput {
	return o
}

// If blocking would occur.
func (o RaiPolicyContentFilterOutput) Blocking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RaiPolicyContentFilter) *bool { return v.Blocking }).(pulumi.BoolPtrOutput)
}

// If the ContentFilter is enabled.
func (o RaiPolicyContentFilterOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RaiPolicyContentFilter) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of ContentFilter.
func (o RaiPolicyContentFilterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiPolicyContentFilter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Level at which content is filtered.
func (o RaiPolicyContentFilterOutput) SeverityThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiPolicyContentFilter) *string { return v.SeverityThreshold }).(pulumi.StringPtrOutput)
}

// Content source to apply the Content Filters.
func (o RaiPolicyContentFilterOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiPolicyContentFilter) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type RaiPolicyContentFilterArrayOutput struct{ *pulumi.OutputState }

func (RaiPolicyContentFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RaiPolicyContentFilter)(nil)).Elem()
}

func (o RaiPolicyContentFilterArrayOutput) ToRaiPolicyContentFilterArrayOutput() RaiPolicyContentFilterArrayOutput {
	return o
}

func (o RaiPolicyContentFilterArrayOutput) ToRaiPolicyContentFilterArrayOutputWithContext(ctx context.Context) RaiPolicyContentFilterArrayOutput {
	return o
}

func (o RaiPolicyContentFilterArrayOutput) Index(i pulumi.IntInput) RaiPolicyContentFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RaiPolicyContentFilter {
		return vs[0].([]RaiPolicyContentFilter)[vs[1].(int)]
	}).(RaiPolicyContentFilterOutput)
}

// Azure OpenAI Content Filter.
type RaiPolicyContentFilterResponse struct {
	// If blocking would occur.
	Blocking *bool `pulumi:"blocking"`
	// If the ContentFilter is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Name of ContentFilter.
	Name *string `pulumi:"name"`
	// Level at which content is filtered.
	SeverityThreshold *string `pulumi:"severityThreshold"`
	// Content source to apply the Content Filters.
	Source *string `pulumi:"source"`
}

// Azure OpenAI Content Filter.
type RaiPolicyContentFilterResponseOutput struct{ *pulumi.OutputState }

func (RaiPolicyContentFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RaiPolicyContentFilterResponse)(nil)).Elem()
}

func (o RaiPolicyContentFilterResponseOutput) ToRaiPolicyContentFilterResponseOutput() RaiPolicyContentFilterResponseOutput {
	return o
}

func (o RaiPolicyContentFilterResponseOutput) ToRaiPolicyContentFilterResponseOutputWithContext(ctx context.Context) RaiPolicyContentFilterResponseOutput {
	return o
}

// If blocking would occur.
func (o RaiPolicyContentFilterResponseOutput) Blocking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RaiPolicyContentFilterResponse) *bool { return v.Blocking }).(pulumi.BoolPtrOutput)
}

// If the ContentFilter is enabled.
func (o RaiPolicyContentFilterResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RaiPolicyContentFilterResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Name of ContentFilter.
func (o RaiPolicyContentFilterResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiPolicyContentFilterResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Level at which content is filtered.
func (o RaiPolicyContentFilterResponseOutput) SeverityThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiPolicyContentFilterResponse) *string { return v.SeverityThreshold }).(pulumi.StringPtrOutput)
}

// Content source to apply the Content Filters.
func (o RaiPolicyContentFilterResponseOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiPolicyContentFilterResponse) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type RaiPolicyContentFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (RaiPolicyContentFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RaiPolicyContentFilterResponse)(nil)).Elem()
}

func (o RaiPolicyContentFilterResponseArrayOutput) ToRaiPolicyContentFilterResponseArrayOutput() RaiPolicyContentFilterResponseArrayOutput {
	return o
}

func (o RaiPolicyContentFilterResponseArrayOutput) ToRaiPolicyContentFilterResponseArrayOutputWithContext(ctx context.Context) RaiPolicyContentFilterResponseArrayOutput {
	return o
}

func (o RaiPolicyContentFilterResponseArrayOutput) Index(i pulumi.IntInput) RaiPolicyContentFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RaiPolicyContentFilterResponse {
		return vs[0].([]RaiPolicyContentFilterResponse)[vs[1].(int)]
	}).(RaiPolicyContentFilterResponseOutput)
}

// Azure OpenAI Content Filters properties.
type RaiPolicyProperties struct {
	// Name of Rai policy.
	BasePolicyName *string `pulumi:"basePolicyName"`
	// The list of Content Filters.
	ContentFilters []RaiPolicyContentFilter `pulumi:"contentFilters"`
	// The list of custom Blocklist.
	CustomBlocklists []CustomBlocklistConfig `pulumi:"customBlocklists"`
	// Rai policy mode. The enum value mapping is as below: Default = 0, Deferred=1, Blocking=2, Asynchronous_filter =3. Please use 'Asynchronous_filter' after 2024-10-01. It is the same as 'Deferred' in previous version.
	Mode *string `pulumi:"mode"`
}

// RaiPolicyPropertiesInput is an input type that accepts RaiPolicyPropertiesArgs and RaiPolicyPropertiesOutput values.
// You can construct a concrete instance of `RaiPolicyPropertiesInput` via:
//
//	RaiPolicyPropertiesArgs{...}
type RaiPolicyPropertiesInput interface {
	pulumi.Input

	ToRaiPolicyPropertiesOutput() RaiPolicyPropertiesOutput
	ToRaiPolicyPropertiesOutputWithContext(context.Context) RaiPolicyPropertiesOutput
}

// Azure OpenAI Content Filters properties.
type RaiPolicyPropertiesArgs struct {
	// Name of Rai policy.
	BasePolicyName pulumi.StringPtrInput `pulumi:"basePolicyName"`
	// The list of Content Filters.
	ContentFilters RaiPolicyContentFilterArrayInput `pulumi:"contentFilters"`
	// The list of custom Blocklist.
	CustomBlocklists CustomBlocklistConfigArrayInput `pulumi:"customBlocklists"`
	// Rai policy mode. The enum value mapping is as below: Default = 0, Deferred=1, Blocking=2, Asynchronous_filter =3. Please use 'Asynchronous_filter' after 2024-10-01. It is the same as 'Deferred' in previous version.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (RaiPolicyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RaiPolicyProperties)(nil)).Elem()
}

func (i RaiPolicyPropertiesArgs) ToRaiPolicyPropertiesOutput() RaiPolicyPropertiesOutput {
	return i.ToRaiPolicyPropertiesOutputWithContext(context.Background())
}

func (i RaiPolicyPropertiesArgs) ToRaiPolicyPropertiesOutputWithContext(ctx context.Context) RaiPolicyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiPolicyPropertiesOutput)
}

func (i RaiPolicyPropertiesArgs) ToRaiPolicyPropertiesPtrOutput() RaiPolicyPropertiesPtrOutput {
	return i.ToRaiPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i RaiPolicyPropertiesArgs) ToRaiPolicyPropertiesPtrOutputWithContext(ctx context.Context) RaiPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiPolicyPropertiesOutput).ToRaiPolicyPropertiesPtrOutputWithContext(ctx)
}

// RaiPolicyPropertiesPtrInput is an input type that accepts RaiPolicyPropertiesArgs, RaiPolicyPropertiesPtr and RaiPolicyPropertiesPtrOutput values.
// You can construct a concrete instance of `RaiPolicyPropertiesPtrInput` via:
//
//	        RaiPolicyPropertiesArgs{...}
//
//	or:
//
//	        nil
type RaiPolicyPropertiesPtrInput interface {
	pulumi.Input

	ToRaiPolicyPropertiesPtrOutput() RaiPolicyPropertiesPtrOutput
	ToRaiPolicyPropertiesPtrOutputWithContext(context.Context) RaiPolicyPropertiesPtrOutput
}

type raiPolicyPropertiesPtrType RaiPolicyPropertiesArgs

func RaiPolicyPropertiesPtr(v *RaiPolicyPropertiesArgs) RaiPolicyPropertiesPtrInput {
	return (*raiPolicyPropertiesPtrType)(v)
}

func (*raiPolicyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RaiPolicyProperties)(nil)).Elem()
}

func (i *raiPolicyPropertiesPtrType) ToRaiPolicyPropertiesPtrOutput() RaiPolicyPropertiesPtrOutput {
	return i.ToRaiPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i *raiPolicyPropertiesPtrType) ToRaiPolicyPropertiesPtrOutputWithContext(ctx context.Context) RaiPolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiPolicyPropertiesPtrOutput)
}

// Azure OpenAI Content Filters properties.
type RaiPolicyPropertiesOutput struct{ *pulumi.OutputState }

func (RaiPolicyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RaiPolicyProperties)(nil)).Elem()
}

func (o RaiPolicyPropertiesOutput) ToRaiPolicyPropertiesOutput() RaiPolicyPropertiesOutput {
	return o
}

func (o RaiPolicyPropertiesOutput) ToRaiPolicyPropertiesOutputWithContext(ctx context.Context) RaiPolicyPropertiesOutput {
	return o
}

func (o RaiPolicyPropertiesOutput) ToRaiPolicyPropertiesPtrOutput() RaiPolicyPropertiesPtrOutput {
	return o.ToRaiPolicyPropertiesPtrOutputWithContext(context.Background())
}

func (o RaiPolicyPropertiesOutput) ToRaiPolicyPropertiesPtrOutputWithContext(ctx context.Context) RaiPolicyPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RaiPolicyProperties) *RaiPolicyProperties {
		return &v
	}).(RaiPolicyPropertiesPtrOutput)
}

// Name of Rai policy.
func (o RaiPolicyPropertiesOutput) BasePolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiPolicyProperties) *string { return v.BasePolicyName }).(pulumi.StringPtrOutput)
}

// The list of Content Filters.
func (o RaiPolicyPropertiesOutput) ContentFilters() RaiPolicyContentFilterArrayOutput {
	return o.ApplyT(func(v RaiPolicyProperties) []RaiPolicyContentFilter { return v.ContentFilters }).(RaiPolicyContentFilterArrayOutput)
}

// The list of custom Blocklist.
func (o RaiPolicyPropertiesOutput) CustomBlocklists() CustomBlocklistConfigArrayOutput {
	return o.ApplyT(func(v RaiPolicyProperties) []CustomBlocklistConfig { return v.CustomBlocklists }).(CustomBlocklistConfigArrayOutput)
}

// Rai policy mode. The enum value mapping is as below: Default = 0, Deferred=1, Blocking=2, Asynchronous_filter =3. Please use 'Asynchronous_filter' after 2024-10-01. It is the same as 'Deferred' in previous version.
func (o RaiPolicyPropertiesOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiPolicyProperties) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type RaiPolicyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RaiPolicyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RaiPolicyProperties)(nil)).Elem()
}

func (o RaiPolicyPropertiesPtrOutput) ToRaiPolicyPropertiesPtrOutput() RaiPolicyPropertiesPtrOutput {
	return o
}

func (o RaiPolicyPropertiesPtrOutput) ToRaiPolicyPropertiesPtrOutputWithContext(ctx context.Context) RaiPolicyPropertiesPtrOutput {
	return o
}

func (o RaiPolicyPropertiesPtrOutput) Elem() RaiPolicyPropertiesOutput {
	return o.ApplyT(func(v *RaiPolicyProperties) RaiPolicyProperties {
		if v != nil {
			return *v
		}
		var ret RaiPolicyProperties
		return ret
	}).(RaiPolicyPropertiesOutput)
}

// Name of Rai policy.
func (o RaiPolicyPropertiesPtrOutput) BasePolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RaiPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.BasePolicyName
	}).(pulumi.StringPtrOutput)
}

// The list of Content Filters.
func (o RaiPolicyPropertiesPtrOutput) ContentFilters() RaiPolicyContentFilterArrayOutput {
	return o.ApplyT(func(v *RaiPolicyProperties) []RaiPolicyContentFilter {
		if v == nil {
			return nil
		}
		return v.ContentFilters
	}).(RaiPolicyContentFilterArrayOutput)
}

// The list of custom Blocklist.
func (o RaiPolicyPropertiesPtrOutput) CustomBlocklists() CustomBlocklistConfigArrayOutput {
	return o.ApplyT(func(v *RaiPolicyProperties) []CustomBlocklistConfig {
		if v == nil {
			return nil
		}
		return v.CustomBlocklists
	}).(CustomBlocklistConfigArrayOutput)
}

// Rai policy mode. The enum value mapping is as below: Default = 0, Deferred=1, Blocking=2, Asynchronous_filter =3. Please use 'Asynchronous_filter' after 2024-10-01. It is the same as 'Deferred' in previous version.
func (o RaiPolicyPropertiesPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RaiPolicyProperties) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Azure OpenAI Content Filters properties.
type RaiPolicyPropertiesResponse struct {
	// Name of Rai policy.
	BasePolicyName *string `pulumi:"basePolicyName"`
	// The list of Content Filters.
	ContentFilters []RaiPolicyContentFilterResponse `pulumi:"contentFilters"`
	// The list of custom Blocklist.
	CustomBlocklists []CustomBlocklistConfigResponse `pulumi:"customBlocklists"`
	// Rai policy mode. The enum value mapping is as below: Default = 0, Deferred=1, Blocking=2, Asynchronous_filter =3. Please use 'Asynchronous_filter' after 2024-10-01. It is the same as 'Deferred' in previous version.
	Mode *string `pulumi:"mode"`
	// Content Filters policy type.
	Type string `pulumi:"type"`
}

// Azure OpenAI Content Filters properties.
type RaiPolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RaiPolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RaiPolicyPropertiesResponse)(nil)).Elem()
}

func (o RaiPolicyPropertiesResponseOutput) ToRaiPolicyPropertiesResponseOutput() RaiPolicyPropertiesResponseOutput {
	return o
}

func (o RaiPolicyPropertiesResponseOutput) ToRaiPolicyPropertiesResponseOutputWithContext(ctx context.Context) RaiPolicyPropertiesResponseOutput {
	return o
}

// Name of Rai policy.
func (o RaiPolicyPropertiesResponseOutput) BasePolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiPolicyPropertiesResponse) *string { return v.BasePolicyName }).(pulumi.StringPtrOutput)
}

// The list of Content Filters.
func (o RaiPolicyPropertiesResponseOutput) ContentFilters() RaiPolicyContentFilterResponseArrayOutput {
	return o.ApplyT(func(v RaiPolicyPropertiesResponse) []RaiPolicyContentFilterResponse { return v.ContentFilters }).(RaiPolicyContentFilterResponseArrayOutput)
}

// The list of custom Blocklist.
func (o RaiPolicyPropertiesResponseOutput) CustomBlocklists() CustomBlocklistConfigResponseArrayOutput {
	return o.ApplyT(func(v RaiPolicyPropertiesResponse) []CustomBlocklistConfigResponse { return v.CustomBlocklists }).(CustomBlocklistConfigResponseArrayOutput)
}

// Rai policy mode. The enum value mapping is as below: Default = 0, Deferred=1, Blocking=2, Asynchronous_filter =3. Please use 'Asynchronous_filter' after 2024-10-01. It is the same as 'Deferred' in previous version.
func (o RaiPolicyPropertiesResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RaiPolicyPropertiesResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Content Filters policy type.
func (o RaiPolicyPropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RaiPolicyPropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The call rate limit Cognitive Services account.
type RegionSetting struct {
	// Maps the region to the regional custom subdomain.
	Customsubdomain *string `pulumi:"customsubdomain"`
	// Name of the region.
	Name *string `pulumi:"name"`
	// A value for priority or weighted routing methods.
	Value *float64 `pulumi:"value"`
}

// RegionSettingInput is an input type that accepts RegionSettingArgs and RegionSettingOutput values.
// You can construct a concrete instance of `RegionSettingInput` via:
//
//	RegionSettingArgs{...}
type RegionSettingInput interface {
	pulumi.Input

	ToRegionSettingOutput() RegionSettingOutput
	ToRegionSettingOutputWithContext(context.Context) RegionSettingOutput
}

// The call rate limit Cognitive Services account.
type RegionSettingArgs struct {
	// Maps the region to the regional custom subdomain.
	Customsubdomain pulumi.StringPtrInput `pulumi:"customsubdomain"`
	// Name of the region.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A value for priority or weighted routing methods.
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (RegionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionSetting)(nil)).Elem()
}

func (i RegionSettingArgs) ToRegionSettingOutput() RegionSettingOutput {
	return i.ToRegionSettingOutputWithContext(context.Background())
}

func (i RegionSettingArgs) ToRegionSettingOutputWithContext(ctx context.Context) RegionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionSettingOutput)
}

// RegionSettingArrayInput is an input type that accepts RegionSettingArray and RegionSettingArrayOutput values.
// You can construct a concrete instance of `RegionSettingArrayInput` via:
//
//	RegionSettingArray{ RegionSettingArgs{...} }
type RegionSettingArrayInput interface {
	pulumi.Input

	ToRegionSettingArrayOutput() RegionSettingArrayOutput
	ToRegionSettingArrayOutputWithContext(context.Context) RegionSettingArrayOutput
}

type RegionSettingArray []RegionSettingInput

func (RegionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionSetting)(nil)).Elem()
}

func (i RegionSettingArray) ToRegionSettingArrayOutput() RegionSettingArrayOutput {
	return i.ToRegionSettingArrayOutputWithContext(context.Background())
}

func (i RegionSettingArray) ToRegionSettingArrayOutputWithContext(ctx context.Context) RegionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionSettingArrayOutput)
}

// The call rate limit Cognitive Services account.
type RegionSettingOutput struct{ *pulumi.OutputState }

func (RegionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionSetting)(nil)).Elem()
}

func (o RegionSettingOutput) ToRegionSettingOutput() RegionSettingOutput {
	return o
}

func (o RegionSettingOutput) ToRegionSettingOutputWithContext(ctx context.Context) RegionSettingOutput {
	return o
}

// Maps the region to the regional custom subdomain.
func (o RegionSettingOutput) Customsubdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegionSetting) *string { return v.Customsubdomain }).(pulumi.StringPtrOutput)
}

// Name of the region.
func (o RegionSettingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegionSetting) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A value for priority or weighted routing methods.
func (o RegionSettingOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RegionSetting) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type RegionSettingArrayOutput struct{ *pulumi.OutputState }

func (RegionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionSetting)(nil)).Elem()
}

func (o RegionSettingArrayOutput) ToRegionSettingArrayOutput() RegionSettingArrayOutput {
	return o
}

func (o RegionSettingArrayOutput) ToRegionSettingArrayOutputWithContext(ctx context.Context) RegionSettingArrayOutput {
	return o
}

func (o RegionSettingArrayOutput) Index(i pulumi.IntInput) RegionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegionSetting {
		return vs[0].([]RegionSetting)[vs[1].(int)]
	}).(RegionSettingOutput)
}

// The call rate limit Cognitive Services account.
type RegionSettingResponse struct {
	// Maps the region to the regional custom subdomain.
	Customsubdomain *string `pulumi:"customsubdomain"`
	// Name of the region.
	Name *string `pulumi:"name"`
	// A value for priority or weighted routing methods.
	Value *float64 `pulumi:"value"`
}

// The call rate limit Cognitive Services account.
type RegionSettingResponseOutput struct{ *pulumi.OutputState }

func (RegionSettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionSettingResponse)(nil)).Elem()
}

func (o RegionSettingResponseOutput) ToRegionSettingResponseOutput() RegionSettingResponseOutput {
	return o
}

func (o RegionSettingResponseOutput) ToRegionSettingResponseOutputWithContext(ctx context.Context) RegionSettingResponseOutput {
	return o
}

// Maps the region to the regional custom subdomain.
func (o RegionSettingResponseOutput) Customsubdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegionSettingResponse) *string { return v.Customsubdomain }).(pulumi.StringPtrOutput)
}

// Name of the region.
func (o RegionSettingResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegionSettingResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A value for priority or weighted routing methods.
func (o RegionSettingResponseOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RegionSettingResponse) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type RegionSettingResponseArrayOutput struct{ *pulumi.OutputState }

func (RegionSettingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionSettingResponse)(nil)).Elem()
}

func (o RegionSettingResponseArrayOutput) ToRegionSettingResponseArrayOutput() RegionSettingResponseArrayOutput {
	return o
}

func (o RegionSettingResponseArrayOutput) ToRegionSettingResponseArrayOutputWithContext(ctx context.Context) RegionSettingResponseArrayOutput {
	return o
}

func (o RegionSettingResponseArrayOutput) Index(i pulumi.IntInput) RegionSettingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegionSettingResponse {
		return vs[0].([]RegionSettingResponse)[vs[1].(int)]
	}).(RegionSettingResponseOutput)
}

type RequestMatchPatternResponse struct {
	Method *string `pulumi:"method"`
	Path   *string `pulumi:"path"`
}

type RequestMatchPatternResponseOutput struct{ *pulumi.OutputState }

func (RequestMatchPatternResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestMatchPatternResponse)(nil)).Elem()
}

func (o RequestMatchPatternResponseOutput) ToRequestMatchPatternResponseOutput() RequestMatchPatternResponseOutput {
	return o
}

func (o RequestMatchPatternResponseOutput) ToRequestMatchPatternResponseOutputWithContext(ctx context.Context) RequestMatchPatternResponseOutput {
	return o
}

func (o RequestMatchPatternResponseOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestMatchPatternResponse) *string { return v.Method }).(pulumi.StringPtrOutput)
}

func (o RequestMatchPatternResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestMatchPatternResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type RequestMatchPatternResponseArrayOutput struct{ *pulumi.OutputState }

func (RequestMatchPatternResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestMatchPatternResponse)(nil)).Elem()
}

func (o RequestMatchPatternResponseArrayOutput) ToRequestMatchPatternResponseArrayOutput() RequestMatchPatternResponseArrayOutput {
	return o
}

func (o RequestMatchPatternResponseArrayOutput) ToRequestMatchPatternResponseArrayOutputWithContext(ctx context.Context) RequestMatchPatternResponseArrayOutput {
	return o
}

func (o RequestMatchPatternResponseArrayOutput) Index(i pulumi.IntInput) RequestMatchPatternResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestMatchPatternResponse {
		return vs[0].([]RequestMatchPatternResponse)[vs[1].(int)]
	}).(RequestMatchPatternResponseOutput)
}

type SASAuthTypeConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'SAS'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category      *string                          `pulumi:"category"`
	Credentials   *ConnectionSharedAccessSignature `pulumi:"credentials"`
	Error         *string                          `pulumi:"error"`
	ExpiryTime    *string                          `pulumi:"expiryTime"`
	IsSharedToAll *bool                            `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

// SASAuthTypeConnectionPropertiesInput is an input type that accepts SASAuthTypeConnectionPropertiesArgs and SASAuthTypeConnectionPropertiesOutput values.
// You can construct a concrete instance of `SASAuthTypeConnectionPropertiesInput` via:
//
//	SASAuthTypeConnectionPropertiesArgs{...}
type SASAuthTypeConnectionPropertiesInput interface {
	pulumi.Input

	ToSASAuthTypeConnectionPropertiesOutput() SASAuthTypeConnectionPropertiesOutput
	ToSASAuthTypeConnectionPropertiesOutputWithContext(context.Context) SASAuthTypeConnectionPropertiesOutput
}

type SASAuthTypeConnectionPropertiesArgs struct {
	// Authentication type of the connection target
	// Expected value is 'SAS'.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Category of the connection
	Category      pulumi.StringPtrInput                   `pulumi:"category"`
	Credentials   ConnectionSharedAccessSignaturePtrInput `pulumi:"credentials"`
	Error         pulumi.StringPtrInput                   `pulumi:"error"`
	ExpiryTime    pulumi.StringPtrInput                   `pulumi:"expiryTime"`
	IsSharedToAll pulumi.BoolPtrInput                     `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    pulumi.StringMapInput   `pulumi:"metadata"`
	PeRequirement               pulumi.StringPtrInput   `pulumi:"peRequirement"`
	PeStatus                    pulumi.StringPtrInput   `pulumi:"peStatus"`
	SharedUserList              pulumi.StringArrayInput `pulumi:"sharedUserList"`
	Target                      pulumi.StringPtrInput   `pulumi:"target"`
	UseWorkspaceManagedIdentity pulumi.BoolPtrInput     `pulumi:"useWorkspaceManagedIdentity"`
}

func (SASAuthTypeConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SASAuthTypeConnectionProperties)(nil)).Elem()
}

func (i SASAuthTypeConnectionPropertiesArgs) ToSASAuthTypeConnectionPropertiesOutput() SASAuthTypeConnectionPropertiesOutput {
	return i.ToSASAuthTypeConnectionPropertiesOutputWithContext(context.Background())
}

func (i SASAuthTypeConnectionPropertiesArgs) ToSASAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) SASAuthTypeConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SASAuthTypeConnectionPropertiesOutput)
}

type SASAuthTypeConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (SASAuthTypeConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SASAuthTypeConnectionProperties)(nil)).Elem()
}

func (o SASAuthTypeConnectionPropertiesOutput) ToSASAuthTypeConnectionPropertiesOutput() SASAuthTypeConnectionPropertiesOutput {
	return o
}

func (o SASAuthTypeConnectionPropertiesOutput) ToSASAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) SASAuthTypeConnectionPropertiesOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'SAS'.
func (o SASAuthTypeConnectionPropertiesOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionProperties) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o SASAuthTypeConnectionPropertiesOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionProperties) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o SASAuthTypeConnectionPropertiesOutput) Credentials() ConnectionSharedAccessSignaturePtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionProperties) *ConnectionSharedAccessSignature { return v.Credentials }).(ConnectionSharedAccessSignaturePtrOutput)
}

func (o SASAuthTypeConnectionPropertiesOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionProperties) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o SASAuthTypeConnectionPropertiesOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionProperties) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

func (o SASAuthTypeConnectionPropertiesOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionProperties) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o SASAuthTypeConnectionPropertiesOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionProperties) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o SASAuthTypeConnectionPropertiesOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionProperties) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o SASAuthTypeConnectionPropertiesOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionProperties) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o SASAuthTypeConnectionPropertiesOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionProperties) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o SASAuthTypeConnectionPropertiesOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionProperties) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o SASAuthTypeConnectionPropertiesOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionProperties) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

type SASAuthTypeConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'SAS'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category                *string                                  `pulumi:"category"`
	CreatedByWorkspaceArmId string                                   `pulumi:"createdByWorkspaceArmId"`
	Credentials             *ConnectionSharedAccessSignatureResponse `pulumi:"credentials"`
	Error                   *string                                  `pulumi:"error"`
	ExpiryTime              *string                                  `pulumi:"expiryTime"`
	// Group based on connection category
	Group         string `pulumi:"group"`
	IsSharedToAll *bool  `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

type SASAuthTypeConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SASAuthTypeConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SASAuthTypeConnectionPropertiesResponse)(nil)).Elem()
}

func (o SASAuthTypeConnectionPropertiesResponseOutput) ToSASAuthTypeConnectionPropertiesResponseOutput() SASAuthTypeConnectionPropertiesResponseOutput {
	return o
}

func (o SASAuthTypeConnectionPropertiesResponseOutput) ToSASAuthTypeConnectionPropertiesResponseOutputWithContext(ctx context.Context) SASAuthTypeConnectionPropertiesResponseOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'SAS'.
func (o SASAuthTypeConnectionPropertiesResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionPropertiesResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o SASAuthTypeConnectionPropertiesResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionPropertiesResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o SASAuthTypeConnectionPropertiesResponseOutput) CreatedByWorkspaceArmId() pulumi.StringOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionPropertiesResponse) string { return v.CreatedByWorkspaceArmId }).(pulumi.StringOutput)
}

func (o SASAuthTypeConnectionPropertiesResponseOutput) Credentials() ConnectionSharedAccessSignatureResponsePtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionPropertiesResponse) *ConnectionSharedAccessSignatureResponse {
		return v.Credentials
	}).(ConnectionSharedAccessSignatureResponsePtrOutput)
}

func (o SASAuthTypeConnectionPropertiesResponseOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionPropertiesResponse) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o SASAuthTypeConnectionPropertiesResponseOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionPropertiesResponse) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

// Group based on connection category
func (o SASAuthTypeConnectionPropertiesResponseOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionPropertiesResponse) string { return v.Group }).(pulumi.StringOutput)
}

func (o SASAuthTypeConnectionPropertiesResponseOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionPropertiesResponse) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o SASAuthTypeConnectionPropertiesResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionPropertiesResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o SASAuthTypeConnectionPropertiesResponseOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionPropertiesResponse) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o SASAuthTypeConnectionPropertiesResponseOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionPropertiesResponse) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o SASAuthTypeConnectionPropertiesResponseOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionPropertiesResponse) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o SASAuthTypeConnectionPropertiesResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionPropertiesResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o SASAuthTypeConnectionPropertiesResponseOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SASAuthTypeConnectionPropertiesResponse) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

type ServicePrincipalAuthTypeConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'ServicePrincipal'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category      *string                     `pulumi:"category"`
	Credentials   *ConnectionServicePrincipal `pulumi:"credentials"`
	Error         *string                     `pulumi:"error"`
	ExpiryTime    *string                     `pulumi:"expiryTime"`
	IsSharedToAll *bool                       `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

// ServicePrincipalAuthTypeConnectionPropertiesInput is an input type that accepts ServicePrincipalAuthTypeConnectionPropertiesArgs and ServicePrincipalAuthTypeConnectionPropertiesOutput values.
// You can construct a concrete instance of `ServicePrincipalAuthTypeConnectionPropertiesInput` via:
//
//	ServicePrincipalAuthTypeConnectionPropertiesArgs{...}
type ServicePrincipalAuthTypeConnectionPropertiesInput interface {
	pulumi.Input

	ToServicePrincipalAuthTypeConnectionPropertiesOutput() ServicePrincipalAuthTypeConnectionPropertiesOutput
	ToServicePrincipalAuthTypeConnectionPropertiesOutputWithContext(context.Context) ServicePrincipalAuthTypeConnectionPropertiesOutput
}

type ServicePrincipalAuthTypeConnectionPropertiesArgs struct {
	// Authentication type of the connection target
	// Expected value is 'ServicePrincipal'.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Category of the connection
	Category      pulumi.StringPtrInput              `pulumi:"category"`
	Credentials   ConnectionServicePrincipalPtrInput `pulumi:"credentials"`
	Error         pulumi.StringPtrInput              `pulumi:"error"`
	ExpiryTime    pulumi.StringPtrInput              `pulumi:"expiryTime"`
	IsSharedToAll pulumi.BoolPtrInput                `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    pulumi.StringMapInput   `pulumi:"metadata"`
	PeRequirement               pulumi.StringPtrInput   `pulumi:"peRequirement"`
	PeStatus                    pulumi.StringPtrInput   `pulumi:"peStatus"`
	SharedUserList              pulumi.StringArrayInput `pulumi:"sharedUserList"`
	Target                      pulumi.StringPtrInput   `pulumi:"target"`
	UseWorkspaceManagedIdentity pulumi.BoolPtrInput     `pulumi:"useWorkspaceManagedIdentity"`
}

func (ServicePrincipalAuthTypeConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalAuthTypeConnectionProperties)(nil)).Elem()
}

func (i ServicePrincipalAuthTypeConnectionPropertiesArgs) ToServicePrincipalAuthTypeConnectionPropertiesOutput() ServicePrincipalAuthTypeConnectionPropertiesOutput {
	return i.ToServicePrincipalAuthTypeConnectionPropertiesOutputWithContext(context.Background())
}

func (i ServicePrincipalAuthTypeConnectionPropertiesArgs) ToServicePrincipalAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) ServicePrincipalAuthTypeConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalAuthTypeConnectionPropertiesOutput)
}

type ServicePrincipalAuthTypeConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (ServicePrincipalAuthTypeConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalAuthTypeConnectionProperties)(nil)).Elem()
}

func (o ServicePrincipalAuthTypeConnectionPropertiesOutput) ToServicePrincipalAuthTypeConnectionPropertiesOutput() ServicePrincipalAuthTypeConnectionPropertiesOutput {
	return o
}

func (o ServicePrincipalAuthTypeConnectionPropertiesOutput) ToServicePrincipalAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) ServicePrincipalAuthTypeConnectionPropertiesOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'ServicePrincipal'.
func (o ServicePrincipalAuthTypeConnectionPropertiesOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionProperties) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o ServicePrincipalAuthTypeConnectionPropertiesOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionProperties) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesOutput) Credentials() ConnectionServicePrincipalPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionProperties) *ConnectionServicePrincipal { return v.Credentials }).(ConnectionServicePrincipalPtrOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionProperties) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionProperties) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionProperties) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o ServicePrincipalAuthTypeConnectionPropertiesOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionProperties) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionProperties) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionProperties) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionProperties) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionProperties) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionProperties) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

type ServicePrincipalAuthTypeConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'ServicePrincipal'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category                *string                             `pulumi:"category"`
	CreatedByWorkspaceArmId string                              `pulumi:"createdByWorkspaceArmId"`
	Credentials             *ConnectionServicePrincipalResponse `pulumi:"credentials"`
	Error                   *string                             `pulumi:"error"`
	ExpiryTime              *string                             `pulumi:"expiryTime"`
	// Group based on connection category
	Group         string `pulumi:"group"`
	IsSharedToAll *bool  `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

type ServicePrincipalAuthTypeConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalAuthTypeConnectionPropertiesResponse)(nil)).Elem()
}

func (o ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) ToServicePrincipalAuthTypeConnectionPropertiesResponseOutput() ServicePrincipalAuthTypeConnectionPropertiesResponseOutput {
	return o
}

func (o ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) ToServicePrincipalAuthTypeConnectionPropertiesResponseOutputWithContext(ctx context.Context) ServicePrincipalAuthTypeConnectionPropertiesResponseOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'ServicePrincipal'.
func (o ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionPropertiesResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionPropertiesResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) CreatedByWorkspaceArmId() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionPropertiesResponse) string { return v.CreatedByWorkspaceArmId }).(pulumi.StringOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) Credentials() ConnectionServicePrincipalResponsePtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionPropertiesResponse) *ConnectionServicePrincipalResponse {
		return v.Credentials
	}).(ConnectionServicePrincipalResponsePtrOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionPropertiesResponse) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionPropertiesResponse) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

// Group based on connection category
func (o ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionPropertiesResponse) string { return v.Group }).(pulumi.StringOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionPropertiesResponse) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionPropertiesResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionPropertiesResponse) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionPropertiesResponse) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionPropertiesResponse) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionPropertiesResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o ServicePrincipalAuthTypeConnectionPropertiesResponseOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePrincipalAuthTypeConnectionPropertiesResponse) *bool {
		return v.UseWorkspaceManagedIdentity
	}).(pulumi.BoolPtrOutput)
}

// The resource model definition representing SKU
type Sku struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU. Ex - P3. It is typically a letter+number code
	Name string `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier *string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// The resource model definition representing SKU
type SkuArgs struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU. Ex - P3. It is typically a letter+number code
	Name pulumi.StringInput `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// The resource model definition representing SKU
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Sku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - P3. It is typically a letter+number code
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Sku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Sku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - P3. It is typically a letter+number code
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SkuCapability indicates the capability of a certain feature.
type SkuCapabilityResponse struct {
	// The name of the SkuCapability.
	Name *string `pulumi:"name"`
	// The value of the SkuCapability.
	Value *string `pulumi:"value"`
}

// SkuCapability indicates the capability of a certain feature.
type SkuCapabilityResponseOutput struct{ *pulumi.OutputState }

func (SkuCapabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapabilityResponse)(nil)).Elem()
}

func (o SkuCapabilityResponseOutput) ToSkuCapabilityResponseOutput() SkuCapabilityResponseOutput {
	return o
}

func (o SkuCapabilityResponseOutput) ToSkuCapabilityResponseOutputWithContext(ctx context.Context) SkuCapabilityResponseOutput {
	return o
}

// The name of the SkuCapability.
func (o SkuCapabilityResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuCapabilityResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the SkuCapability.
func (o SkuCapabilityResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuCapabilityResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SkuCapabilityResponseArrayOutput struct{ *pulumi.OutputState }

func (SkuCapabilityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SkuCapabilityResponse)(nil)).Elem()
}

func (o SkuCapabilityResponseArrayOutput) ToSkuCapabilityResponseArrayOutput() SkuCapabilityResponseArrayOutput {
	return o
}

func (o SkuCapabilityResponseArrayOutput) ToSkuCapabilityResponseArrayOutputWithContext(ctx context.Context) SkuCapabilityResponseArrayOutput {
	return o
}

func (o SkuCapabilityResponseArrayOutput) Index(i pulumi.IntInput) SkuCapabilityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SkuCapabilityResponse {
		return vs[0].([]SkuCapabilityResponse)[vs[1].(int)]
	}).(SkuCapabilityResponseOutput)
}

// Sku change info of account.
type SkuChangeInfoResponse struct {
	// Gets the count of downgrades.
	CountOfDowngrades *float64 `pulumi:"countOfDowngrades"`
	// Gets the count of upgrades after downgrades.
	CountOfUpgradesAfterDowngrades *float64 `pulumi:"countOfUpgradesAfterDowngrades"`
	// Gets the last change date.
	LastChangeDate *string `pulumi:"lastChangeDate"`
}

// Sku change info of account.
type SkuChangeInfoResponseOutput struct{ *pulumi.OutputState }

func (SkuChangeInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuChangeInfoResponse)(nil)).Elem()
}

func (o SkuChangeInfoResponseOutput) ToSkuChangeInfoResponseOutput() SkuChangeInfoResponseOutput {
	return o
}

func (o SkuChangeInfoResponseOutput) ToSkuChangeInfoResponseOutputWithContext(ctx context.Context) SkuChangeInfoResponseOutput {
	return o
}

// Gets the count of downgrades.
func (o SkuChangeInfoResponseOutput) CountOfDowngrades() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SkuChangeInfoResponse) *float64 { return v.CountOfDowngrades }).(pulumi.Float64PtrOutput)
}

// Gets the count of upgrades after downgrades.
func (o SkuChangeInfoResponseOutput) CountOfUpgradesAfterDowngrades() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SkuChangeInfoResponse) *float64 { return v.CountOfUpgradesAfterDowngrades }).(pulumi.Float64PtrOutput)
}

// Gets the last change date.
func (o SkuChangeInfoResponseOutput) LastChangeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuChangeInfoResponse) *string { return v.LastChangeDate }).(pulumi.StringPtrOutput)
}

// The resource model definition representing SKU
type SkuResponse struct {
	// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here.
	Family *string `pulumi:"family"`
	// The name of the SKU. Ex - P3. It is typically a letter+number code
	Name string `pulumi:"name"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
	Size *string `pulumi:"size"`
	// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
	Tier *string `pulumi:"tier"`
}

// The resource model definition representing SKU
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - P3. It is typically a letter+number code
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
func (o SkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here.
func (o SkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - P3. It is typically a letter+number code
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
func (o SkuResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

type ThrottlingRuleResponse struct {
	Count                    *float64                      `pulumi:"count"`
	DynamicThrottlingEnabled *bool                         `pulumi:"dynamicThrottlingEnabled"`
	Key                      *string                       `pulumi:"key"`
	MatchPatterns            []RequestMatchPatternResponse `pulumi:"matchPatterns"`
	MinCount                 *float64                      `pulumi:"minCount"`
	RenewalPeriod            *float64                      `pulumi:"renewalPeriod"`
}

type ThrottlingRuleResponseOutput struct{ *pulumi.OutputState }

func (ThrottlingRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThrottlingRuleResponse)(nil)).Elem()
}

func (o ThrottlingRuleResponseOutput) ToThrottlingRuleResponseOutput() ThrottlingRuleResponseOutput {
	return o
}

func (o ThrottlingRuleResponseOutput) ToThrottlingRuleResponseOutputWithContext(ctx context.Context) ThrottlingRuleResponseOutput {
	return o
}

func (o ThrottlingRuleResponseOutput) Count() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ThrottlingRuleResponse) *float64 { return v.Count }).(pulumi.Float64PtrOutput)
}

func (o ThrottlingRuleResponseOutput) DynamicThrottlingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ThrottlingRuleResponse) *bool { return v.DynamicThrottlingEnabled }).(pulumi.BoolPtrOutput)
}

func (o ThrottlingRuleResponseOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThrottlingRuleResponse) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ThrottlingRuleResponseOutput) MatchPatterns() RequestMatchPatternResponseArrayOutput {
	return o.ApplyT(func(v ThrottlingRuleResponse) []RequestMatchPatternResponse { return v.MatchPatterns }).(RequestMatchPatternResponseArrayOutput)
}

func (o ThrottlingRuleResponseOutput) MinCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ThrottlingRuleResponse) *float64 { return v.MinCount }).(pulumi.Float64PtrOutput)
}

func (o ThrottlingRuleResponseOutput) RenewalPeriod() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ThrottlingRuleResponse) *float64 { return v.RenewalPeriod }).(pulumi.Float64PtrOutput)
}

type ThrottlingRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ThrottlingRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThrottlingRuleResponse)(nil)).Elem()
}

func (o ThrottlingRuleResponseArrayOutput) ToThrottlingRuleResponseArrayOutput() ThrottlingRuleResponseArrayOutput {
	return o
}

func (o ThrottlingRuleResponseArrayOutput) ToThrottlingRuleResponseArrayOutputWithContext(ctx context.Context) ThrottlingRuleResponseArrayOutput {
	return o
}

func (o ThrottlingRuleResponseArrayOutput) Index(i pulumi.IntInput) ThrottlingRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThrottlingRuleResponse {
		return vs[0].([]ThrottlingRuleResponse)[vs[1].(int)]
	}).(ThrottlingRuleResponseOutput)
}

// User-assigned managed identity.
type UserAssignedIdentityResponse struct {
	// Client App Id associated with this identity.
	ClientId string `pulumi:"clientId"`
	// Azure Active Directory principal ID associated with this Identity.
	PrincipalId string `pulumi:"principalId"`
}

// User-assigned managed identity.
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// Client App Id associated with this identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// Azure Active Directory principal ID associated with this Identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// The user owned AML workspace for Cognitive Services account.
type UserOwnedAmlWorkspace struct {
	// Identity Client id of a AML workspace resource.
	IdentityClientId *string `pulumi:"identityClientId"`
	// Full resource id of a AML workspace resource.
	ResourceId *string `pulumi:"resourceId"`
}

// UserOwnedAmlWorkspaceInput is an input type that accepts UserOwnedAmlWorkspaceArgs and UserOwnedAmlWorkspaceOutput values.
// You can construct a concrete instance of `UserOwnedAmlWorkspaceInput` via:
//
//	UserOwnedAmlWorkspaceArgs{...}
type UserOwnedAmlWorkspaceInput interface {
	pulumi.Input

	ToUserOwnedAmlWorkspaceOutput() UserOwnedAmlWorkspaceOutput
	ToUserOwnedAmlWorkspaceOutputWithContext(context.Context) UserOwnedAmlWorkspaceOutput
}

// The user owned AML workspace for Cognitive Services account.
type UserOwnedAmlWorkspaceArgs struct {
	// Identity Client id of a AML workspace resource.
	IdentityClientId pulumi.StringPtrInput `pulumi:"identityClientId"`
	// Full resource id of a AML workspace resource.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (UserOwnedAmlWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserOwnedAmlWorkspace)(nil)).Elem()
}

func (i UserOwnedAmlWorkspaceArgs) ToUserOwnedAmlWorkspaceOutput() UserOwnedAmlWorkspaceOutput {
	return i.ToUserOwnedAmlWorkspaceOutputWithContext(context.Background())
}

func (i UserOwnedAmlWorkspaceArgs) ToUserOwnedAmlWorkspaceOutputWithContext(ctx context.Context) UserOwnedAmlWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserOwnedAmlWorkspaceOutput)
}

func (i UserOwnedAmlWorkspaceArgs) ToUserOwnedAmlWorkspacePtrOutput() UserOwnedAmlWorkspacePtrOutput {
	return i.ToUserOwnedAmlWorkspacePtrOutputWithContext(context.Background())
}

func (i UserOwnedAmlWorkspaceArgs) ToUserOwnedAmlWorkspacePtrOutputWithContext(ctx context.Context) UserOwnedAmlWorkspacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserOwnedAmlWorkspaceOutput).ToUserOwnedAmlWorkspacePtrOutputWithContext(ctx)
}

// UserOwnedAmlWorkspacePtrInput is an input type that accepts UserOwnedAmlWorkspaceArgs, UserOwnedAmlWorkspacePtr and UserOwnedAmlWorkspacePtrOutput values.
// You can construct a concrete instance of `UserOwnedAmlWorkspacePtrInput` via:
//
//	        UserOwnedAmlWorkspaceArgs{...}
//
//	or:
//
//	        nil
type UserOwnedAmlWorkspacePtrInput interface {
	pulumi.Input

	ToUserOwnedAmlWorkspacePtrOutput() UserOwnedAmlWorkspacePtrOutput
	ToUserOwnedAmlWorkspacePtrOutputWithContext(context.Context) UserOwnedAmlWorkspacePtrOutput
}

type userOwnedAmlWorkspacePtrType UserOwnedAmlWorkspaceArgs

func UserOwnedAmlWorkspacePtr(v *UserOwnedAmlWorkspaceArgs) UserOwnedAmlWorkspacePtrInput {
	return (*userOwnedAmlWorkspacePtrType)(v)
}

func (*userOwnedAmlWorkspacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserOwnedAmlWorkspace)(nil)).Elem()
}

func (i *userOwnedAmlWorkspacePtrType) ToUserOwnedAmlWorkspacePtrOutput() UserOwnedAmlWorkspacePtrOutput {
	return i.ToUserOwnedAmlWorkspacePtrOutputWithContext(context.Background())
}

func (i *userOwnedAmlWorkspacePtrType) ToUserOwnedAmlWorkspacePtrOutputWithContext(ctx context.Context) UserOwnedAmlWorkspacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserOwnedAmlWorkspacePtrOutput)
}

// The user owned AML workspace for Cognitive Services account.
type UserOwnedAmlWorkspaceOutput struct{ *pulumi.OutputState }

func (UserOwnedAmlWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserOwnedAmlWorkspace)(nil)).Elem()
}

func (o UserOwnedAmlWorkspaceOutput) ToUserOwnedAmlWorkspaceOutput() UserOwnedAmlWorkspaceOutput {
	return o
}

func (o UserOwnedAmlWorkspaceOutput) ToUserOwnedAmlWorkspaceOutputWithContext(ctx context.Context) UserOwnedAmlWorkspaceOutput {
	return o
}

func (o UserOwnedAmlWorkspaceOutput) ToUserOwnedAmlWorkspacePtrOutput() UserOwnedAmlWorkspacePtrOutput {
	return o.ToUserOwnedAmlWorkspacePtrOutputWithContext(context.Background())
}

func (o UserOwnedAmlWorkspaceOutput) ToUserOwnedAmlWorkspacePtrOutputWithContext(ctx context.Context) UserOwnedAmlWorkspacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserOwnedAmlWorkspace) *UserOwnedAmlWorkspace {
		return &v
	}).(UserOwnedAmlWorkspacePtrOutput)
}

// Identity Client id of a AML workspace resource.
func (o UserOwnedAmlWorkspaceOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserOwnedAmlWorkspace) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// Full resource id of a AML workspace resource.
func (o UserOwnedAmlWorkspaceOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserOwnedAmlWorkspace) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type UserOwnedAmlWorkspacePtrOutput struct{ *pulumi.OutputState }

func (UserOwnedAmlWorkspacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserOwnedAmlWorkspace)(nil)).Elem()
}

func (o UserOwnedAmlWorkspacePtrOutput) ToUserOwnedAmlWorkspacePtrOutput() UserOwnedAmlWorkspacePtrOutput {
	return o
}

func (o UserOwnedAmlWorkspacePtrOutput) ToUserOwnedAmlWorkspacePtrOutputWithContext(ctx context.Context) UserOwnedAmlWorkspacePtrOutput {
	return o
}

func (o UserOwnedAmlWorkspacePtrOutput) Elem() UserOwnedAmlWorkspaceOutput {
	return o.ApplyT(func(v *UserOwnedAmlWorkspace) UserOwnedAmlWorkspace {
		if v != nil {
			return *v
		}
		var ret UserOwnedAmlWorkspace
		return ret
	}).(UserOwnedAmlWorkspaceOutput)
}

// Identity Client id of a AML workspace resource.
func (o UserOwnedAmlWorkspacePtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserOwnedAmlWorkspace) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Full resource id of a AML workspace resource.
func (o UserOwnedAmlWorkspacePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserOwnedAmlWorkspace) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// The user owned AML workspace for Cognitive Services account.
type UserOwnedAmlWorkspaceResponse struct {
	// Identity Client id of a AML workspace resource.
	IdentityClientId *string `pulumi:"identityClientId"`
	// Full resource id of a AML workspace resource.
	ResourceId *string `pulumi:"resourceId"`
}

// The user owned AML workspace for Cognitive Services account.
type UserOwnedAmlWorkspaceResponseOutput struct{ *pulumi.OutputState }

func (UserOwnedAmlWorkspaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserOwnedAmlWorkspaceResponse)(nil)).Elem()
}

func (o UserOwnedAmlWorkspaceResponseOutput) ToUserOwnedAmlWorkspaceResponseOutput() UserOwnedAmlWorkspaceResponseOutput {
	return o
}

func (o UserOwnedAmlWorkspaceResponseOutput) ToUserOwnedAmlWorkspaceResponseOutputWithContext(ctx context.Context) UserOwnedAmlWorkspaceResponseOutput {
	return o
}

// Identity Client id of a AML workspace resource.
func (o UserOwnedAmlWorkspaceResponseOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserOwnedAmlWorkspaceResponse) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// Full resource id of a AML workspace resource.
func (o UserOwnedAmlWorkspaceResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserOwnedAmlWorkspaceResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type UserOwnedAmlWorkspaceResponsePtrOutput struct{ *pulumi.OutputState }

func (UserOwnedAmlWorkspaceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserOwnedAmlWorkspaceResponse)(nil)).Elem()
}

func (o UserOwnedAmlWorkspaceResponsePtrOutput) ToUserOwnedAmlWorkspaceResponsePtrOutput() UserOwnedAmlWorkspaceResponsePtrOutput {
	return o
}

func (o UserOwnedAmlWorkspaceResponsePtrOutput) ToUserOwnedAmlWorkspaceResponsePtrOutputWithContext(ctx context.Context) UserOwnedAmlWorkspaceResponsePtrOutput {
	return o
}

func (o UserOwnedAmlWorkspaceResponsePtrOutput) Elem() UserOwnedAmlWorkspaceResponseOutput {
	return o.ApplyT(func(v *UserOwnedAmlWorkspaceResponse) UserOwnedAmlWorkspaceResponse {
		if v != nil {
			return *v
		}
		var ret UserOwnedAmlWorkspaceResponse
		return ret
	}).(UserOwnedAmlWorkspaceResponseOutput)
}

// Identity Client id of a AML workspace resource.
func (o UserOwnedAmlWorkspaceResponsePtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserOwnedAmlWorkspaceResponse) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Full resource id of a AML workspace resource.
func (o UserOwnedAmlWorkspaceResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserOwnedAmlWorkspaceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// The user owned storage for Cognitive Services account.
type UserOwnedStorage struct {
	IdentityClientId *string `pulumi:"identityClientId"`
	// Full resource id of a Microsoft.Storage resource.
	ResourceId *string `pulumi:"resourceId"`
}

// UserOwnedStorageInput is an input type that accepts UserOwnedStorageArgs and UserOwnedStorageOutput values.
// You can construct a concrete instance of `UserOwnedStorageInput` via:
//
//	UserOwnedStorageArgs{...}
type UserOwnedStorageInput interface {
	pulumi.Input

	ToUserOwnedStorageOutput() UserOwnedStorageOutput
	ToUserOwnedStorageOutputWithContext(context.Context) UserOwnedStorageOutput
}

// The user owned storage for Cognitive Services account.
type UserOwnedStorageArgs struct {
	IdentityClientId pulumi.StringPtrInput `pulumi:"identityClientId"`
	// Full resource id of a Microsoft.Storage resource.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (UserOwnedStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserOwnedStorage)(nil)).Elem()
}

func (i UserOwnedStorageArgs) ToUserOwnedStorageOutput() UserOwnedStorageOutput {
	return i.ToUserOwnedStorageOutputWithContext(context.Background())
}

func (i UserOwnedStorageArgs) ToUserOwnedStorageOutputWithContext(ctx context.Context) UserOwnedStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserOwnedStorageOutput)
}

// UserOwnedStorageArrayInput is an input type that accepts UserOwnedStorageArray and UserOwnedStorageArrayOutput values.
// You can construct a concrete instance of `UserOwnedStorageArrayInput` via:
//
//	UserOwnedStorageArray{ UserOwnedStorageArgs{...} }
type UserOwnedStorageArrayInput interface {
	pulumi.Input

	ToUserOwnedStorageArrayOutput() UserOwnedStorageArrayOutput
	ToUserOwnedStorageArrayOutputWithContext(context.Context) UserOwnedStorageArrayOutput
}

type UserOwnedStorageArray []UserOwnedStorageInput

func (UserOwnedStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserOwnedStorage)(nil)).Elem()
}

func (i UserOwnedStorageArray) ToUserOwnedStorageArrayOutput() UserOwnedStorageArrayOutput {
	return i.ToUserOwnedStorageArrayOutputWithContext(context.Background())
}

func (i UserOwnedStorageArray) ToUserOwnedStorageArrayOutputWithContext(ctx context.Context) UserOwnedStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserOwnedStorageArrayOutput)
}

// The user owned storage for Cognitive Services account.
type UserOwnedStorageOutput struct{ *pulumi.OutputState }

func (UserOwnedStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserOwnedStorage)(nil)).Elem()
}

func (o UserOwnedStorageOutput) ToUserOwnedStorageOutput() UserOwnedStorageOutput {
	return o
}

func (o UserOwnedStorageOutput) ToUserOwnedStorageOutputWithContext(ctx context.Context) UserOwnedStorageOutput {
	return o
}

func (o UserOwnedStorageOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserOwnedStorage) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// Full resource id of a Microsoft.Storage resource.
func (o UserOwnedStorageOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserOwnedStorage) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type UserOwnedStorageArrayOutput struct{ *pulumi.OutputState }

func (UserOwnedStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserOwnedStorage)(nil)).Elem()
}

func (o UserOwnedStorageArrayOutput) ToUserOwnedStorageArrayOutput() UserOwnedStorageArrayOutput {
	return o
}

func (o UserOwnedStorageArrayOutput) ToUserOwnedStorageArrayOutputWithContext(ctx context.Context) UserOwnedStorageArrayOutput {
	return o
}

func (o UserOwnedStorageArrayOutput) Index(i pulumi.IntInput) UserOwnedStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserOwnedStorage {
		return vs[0].([]UserOwnedStorage)[vs[1].(int)]
	}).(UserOwnedStorageOutput)
}

// The user owned storage for Cognitive Services account.
type UserOwnedStorageResponse struct {
	IdentityClientId *string `pulumi:"identityClientId"`
	// Full resource id of a Microsoft.Storage resource.
	ResourceId *string `pulumi:"resourceId"`
}

// The user owned storage for Cognitive Services account.
type UserOwnedStorageResponseOutput struct{ *pulumi.OutputState }

func (UserOwnedStorageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserOwnedStorageResponse)(nil)).Elem()
}

func (o UserOwnedStorageResponseOutput) ToUserOwnedStorageResponseOutput() UserOwnedStorageResponseOutput {
	return o
}

func (o UserOwnedStorageResponseOutput) ToUserOwnedStorageResponseOutputWithContext(ctx context.Context) UserOwnedStorageResponseOutput {
	return o
}

func (o UserOwnedStorageResponseOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserOwnedStorageResponse) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// Full resource id of a Microsoft.Storage resource.
func (o UserOwnedStorageResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserOwnedStorageResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type UserOwnedStorageResponseArrayOutput struct{ *pulumi.OutputState }

func (UserOwnedStorageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserOwnedStorageResponse)(nil)).Elem()
}

func (o UserOwnedStorageResponseArrayOutput) ToUserOwnedStorageResponseArrayOutput() UserOwnedStorageResponseArrayOutput {
	return o
}

func (o UserOwnedStorageResponseArrayOutput) ToUserOwnedStorageResponseArrayOutputWithContext(ctx context.Context) UserOwnedStorageResponseArrayOutput {
	return o
}

func (o UserOwnedStorageResponseArrayOutput) Index(i pulumi.IntInput) UserOwnedStorageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserOwnedStorageResponse {
		return vs[0].([]UserOwnedStorageResponse)[vs[1].(int)]
	}).(UserOwnedStorageResponseOutput)
}

type UsernamePasswordAuthTypeConnectionProperties struct {
	// Authentication type of the connection target
	// Expected value is 'UsernamePassword'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category      *string                     `pulumi:"category"`
	Credentials   *ConnectionUsernamePassword `pulumi:"credentials"`
	Error         *string                     `pulumi:"error"`
	ExpiryTime    *string                     `pulumi:"expiryTime"`
	IsSharedToAll *bool                       `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

// UsernamePasswordAuthTypeConnectionPropertiesInput is an input type that accepts UsernamePasswordAuthTypeConnectionPropertiesArgs and UsernamePasswordAuthTypeConnectionPropertiesOutput values.
// You can construct a concrete instance of `UsernamePasswordAuthTypeConnectionPropertiesInput` via:
//
//	UsernamePasswordAuthTypeConnectionPropertiesArgs{...}
type UsernamePasswordAuthTypeConnectionPropertiesInput interface {
	pulumi.Input

	ToUsernamePasswordAuthTypeConnectionPropertiesOutput() UsernamePasswordAuthTypeConnectionPropertiesOutput
	ToUsernamePasswordAuthTypeConnectionPropertiesOutputWithContext(context.Context) UsernamePasswordAuthTypeConnectionPropertiesOutput
}

type UsernamePasswordAuthTypeConnectionPropertiesArgs struct {
	// Authentication type of the connection target
	// Expected value is 'UsernamePassword'.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Category of the connection
	Category      pulumi.StringPtrInput              `pulumi:"category"`
	Credentials   ConnectionUsernamePasswordPtrInput `pulumi:"credentials"`
	Error         pulumi.StringPtrInput              `pulumi:"error"`
	ExpiryTime    pulumi.StringPtrInput              `pulumi:"expiryTime"`
	IsSharedToAll pulumi.BoolPtrInput                `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    pulumi.StringMapInput   `pulumi:"metadata"`
	PeRequirement               pulumi.StringPtrInput   `pulumi:"peRequirement"`
	PeStatus                    pulumi.StringPtrInput   `pulumi:"peStatus"`
	SharedUserList              pulumi.StringArrayInput `pulumi:"sharedUserList"`
	Target                      pulumi.StringPtrInput   `pulumi:"target"`
	UseWorkspaceManagedIdentity pulumi.BoolPtrInput     `pulumi:"useWorkspaceManagedIdentity"`
}

func (UsernamePasswordAuthTypeConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsernamePasswordAuthTypeConnectionProperties)(nil)).Elem()
}

func (i UsernamePasswordAuthTypeConnectionPropertiesArgs) ToUsernamePasswordAuthTypeConnectionPropertiesOutput() UsernamePasswordAuthTypeConnectionPropertiesOutput {
	return i.ToUsernamePasswordAuthTypeConnectionPropertiesOutputWithContext(context.Background())
}

func (i UsernamePasswordAuthTypeConnectionPropertiesArgs) ToUsernamePasswordAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) UsernamePasswordAuthTypeConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsernamePasswordAuthTypeConnectionPropertiesOutput)
}

type UsernamePasswordAuthTypeConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (UsernamePasswordAuthTypeConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsernamePasswordAuthTypeConnectionProperties)(nil)).Elem()
}

func (o UsernamePasswordAuthTypeConnectionPropertiesOutput) ToUsernamePasswordAuthTypeConnectionPropertiesOutput() UsernamePasswordAuthTypeConnectionPropertiesOutput {
	return o
}

func (o UsernamePasswordAuthTypeConnectionPropertiesOutput) ToUsernamePasswordAuthTypeConnectionPropertiesOutputWithContext(ctx context.Context) UsernamePasswordAuthTypeConnectionPropertiesOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'UsernamePassword'.
func (o UsernamePasswordAuthTypeConnectionPropertiesOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionProperties) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o UsernamePasswordAuthTypeConnectionPropertiesOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionProperties) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesOutput) Credentials() ConnectionUsernamePasswordPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionProperties) *ConnectionUsernamePassword { return v.Credentials }).(ConnectionUsernamePasswordPtrOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionProperties) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionProperties) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionProperties) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o UsernamePasswordAuthTypeConnectionPropertiesOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionProperties) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionProperties) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionProperties) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionProperties) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionProperties) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionProperties) *bool { return v.UseWorkspaceManagedIdentity }).(pulumi.BoolPtrOutput)
}

type UsernamePasswordAuthTypeConnectionPropertiesResponse struct {
	// Authentication type of the connection target
	// Expected value is 'UsernamePassword'.
	AuthType string `pulumi:"authType"`
	// Category of the connection
	Category                *string                             `pulumi:"category"`
	CreatedByWorkspaceArmId string                              `pulumi:"createdByWorkspaceArmId"`
	Credentials             *ConnectionUsernamePasswordResponse `pulumi:"credentials"`
	Error                   *string                             `pulumi:"error"`
	ExpiryTime              *string                             `pulumi:"expiryTime"`
	// Group based on connection category
	Group         string `pulumi:"group"`
	IsSharedToAll *bool  `pulumi:"isSharedToAll"`
	// Store user metadata for this connection
	Metadata                    map[string]string `pulumi:"metadata"`
	PeRequirement               *string           `pulumi:"peRequirement"`
	PeStatus                    *string           `pulumi:"peStatus"`
	SharedUserList              []string          `pulumi:"sharedUserList"`
	Target                      *string           `pulumi:"target"`
	UseWorkspaceManagedIdentity *bool             `pulumi:"useWorkspaceManagedIdentity"`
}

type UsernamePasswordAuthTypeConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsernamePasswordAuthTypeConnectionPropertiesResponse)(nil)).Elem()
}

func (o UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) ToUsernamePasswordAuthTypeConnectionPropertiesResponseOutput() UsernamePasswordAuthTypeConnectionPropertiesResponseOutput {
	return o
}

func (o UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) ToUsernamePasswordAuthTypeConnectionPropertiesResponseOutputWithContext(ctx context.Context) UsernamePasswordAuthTypeConnectionPropertiesResponseOutput {
	return o
}

// Authentication type of the connection target
// Expected value is 'UsernamePassword'.
func (o UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionPropertiesResponse) string { return v.AuthType }).(pulumi.StringOutput)
}

// Category of the connection
func (o UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionPropertiesResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) CreatedByWorkspaceArmId() pulumi.StringOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionPropertiesResponse) string { return v.CreatedByWorkspaceArmId }).(pulumi.StringOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) Credentials() ConnectionUsernamePasswordResponsePtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionPropertiesResponse) *ConnectionUsernamePasswordResponse {
		return v.Credentials
	}).(ConnectionUsernamePasswordResponsePtrOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionPropertiesResponse) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) ExpiryTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionPropertiesResponse) *string { return v.ExpiryTime }).(pulumi.StringPtrOutput)
}

// Group based on connection category
func (o UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionPropertiesResponse) string { return v.Group }).(pulumi.StringOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) IsSharedToAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionPropertiesResponse) *bool { return v.IsSharedToAll }).(pulumi.BoolPtrOutput)
}

// Store user metadata for this connection
func (o UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionPropertiesResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) PeRequirement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionPropertiesResponse) *string { return v.PeRequirement }).(pulumi.StringPtrOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) PeStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionPropertiesResponse) *string { return v.PeStatus }).(pulumi.StringPtrOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) SharedUserList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionPropertiesResponse) []string { return v.SharedUserList }).(pulumi.StringArrayOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionPropertiesResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o UsernamePasswordAuthTypeConnectionPropertiesResponseOutput) UseWorkspaceManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UsernamePasswordAuthTypeConnectionPropertiesResponse) *bool {
		return v.UseWorkspaceManagedIdentity
	}).(pulumi.BoolPtrOutput)
}

// A rule governing the accessibility from a specific virtual network.
type VirtualNetworkRule struct {
	// Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.
	Id string `pulumi:"id"`
	// Ignore missing vnet service endpoint or not.
	IgnoreMissingVnetServiceEndpoint *bool `pulumi:"ignoreMissingVnetServiceEndpoint"`
	// Gets the state of virtual network rule.
	State *string `pulumi:"state"`
}

// VirtualNetworkRuleInput is an input type that accepts VirtualNetworkRuleArgs and VirtualNetworkRuleOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleInput` via:
//
//	VirtualNetworkRuleArgs{...}
type VirtualNetworkRuleInput interface {
	pulumi.Input

	ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput
	ToVirtualNetworkRuleOutputWithContext(context.Context) VirtualNetworkRuleOutput
}

// A rule governing the accessibility from a specific virtual network.
type VirtualNetworkRuleArgs struct {
	// Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.
	Id pulumi.StringInput `pulumi:"id"`
	// Ignore missing vnet service endpoint or not.
	IgnoreMissingVnetServiceEndpoint pulumi.BoolPtrInput `pulumi:"ignoreMissingVnetServiceEndpoint"`
	// Gets the state of virtual network rule.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (VirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return i.ToVirtualNetworkRuleOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleOutput)
}

// VirtualNetworkRuleArrayInput is an input type that accepts VirtualNetworkRuleArray and VirtualNetworkRuleArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleArrayInput` via:
//
//	VirtualNetworkRuleArray{ VirtualNetworkRuleArgs{...} }
type VirtualNetworkRuleArrayInput interface {
	pulumi.Input

	ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput
	ToVirtualNetworkRuleArrayOutputWithContext(context.Context) VirtualNetworkRuleArrayOutput
}

type VirtualNetworkRuleArray []VirtualNetworkRuleInput

func (VirtualNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return i.ToVirtualNetworkRuleArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleArrayOutput)
}

// A rule governing the accessibility from a specific virtual network.
type VirtualNetworkRuleOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (o VirtualNetworkRuleOutput) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return o
}

func (o VirtualNetworkRuleOutput) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return o
}

// Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.
func (o VirtualNetworkRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkRule) string { return v.Id }).(pulumi.StringOutput)
}

// Ignore missing vnet service endpoint or not.
func (o VirtualNetworkRuleOutput) IgnoreMissingVnetServiceEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRule) *bool { return v.IgnoreMissingVnetServiceEndpoint }).(pulumi.BoolPtrOutput)
}

// Gets the state of virtual network rule.
func (o VirtualNetworkRuleOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRule) *string { return v.State }).(pulumi.StringPtrOutput)
}

type VirtualNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (o VirtualNetworkRuleArrayOutput) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return o
}

func (o VirtualNetworkRuleArrayOutput) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return o
}

func (o VirtualNetworkRuleArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRule {
		return vs[0].([]VirtualNetworkRule)[vs[1].(int)]
	}).(VirtualNetworkRuleOutput)
}

// A rule governing the accessibility from a specific virtual network.
type VirtualNetworkRuleResponse struct {
	// Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.
	Id string `pulumi:"id"`
	// Ignore missing vnet service endpoint or not.
	IgnoreMissingVnetServiceEndpoint *bool `pulumi:"ignoreMissingVnetServiceEndpoint"`
	// Gets the state of virtual network rule.
	State *string `pulumi:"state"`
}

// A rule governing the accessibility from a specific virtual network.
type VirtualNetworkRuleResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput {
	return o
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseOutput {
	return o
}

// Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.
func (o VirtualNetworkRuleResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Ignore missing vnet service endpoint or not.
func (o VirtualNetworkRuleResponseOutput) IgnoreMissingVnetServiceEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) *bool { return v.IgnoreMissingVnetServiceEndpoint }).(pulumi.BoolPtrOutput)
}

// Gets the state of virtual network rule.
func (o VirtualNetworkRuleResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type VirtualNetworkRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRuleResponse {
		return vs[0].([]VirtualNetworkRuleResponse)[vs[1].(int)]
	}).(VirtualNetworkRuleResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AADAuthTypeConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(AADAuthTypeConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AbusePenaltyResponseOutput{})
	pulumi.RegisterOutputType(AccessKeyAuthTypeConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(AccessKeyAuthTypeConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AccountKeyAuthTypeConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(AccountKeyAuthTypeConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AccountPropertiesOutput{})
	pulumi.RegisterOutputType(AccountPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AccountPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApiKeyAuthConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(ApiKeyAuthConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApiPropertiesOutput{})
	pulumi.RegisterOutputType(ApiPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApiPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApiPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CallRateLimitResponseOutput{})
	pulumi.RegisterOutputType(CallRateLimitResponsePtrOutput{})
	pulumi.RegisterOutputType(CapabilityHostOutput{})
	pulumi.RegisterOutputType(CapabilityHostResponseOutput{})
	pulumi.RegisterOutputType(CommitmentPeriodOutput{})
	pulumi.RegisterOutputType(CommitmentPeriodPtrOutput{})
	pulumi.RegisterOutputType(CommitmentPeriodResponseOutput{})
	pulumi.RegisterOutputType(CommitmentPeriodResponsePtrOutput{})
	pulumi.RegisterOutputType(CommitmentPlanAssociationResponseOutput{})
	pulumi.RegisterOutputType(CommitmentPlanAssociationResponseArrayOutput{})
	pulumi.RegisterOutputType(CommitmentPlanPropertiesOutput{})
	pulumi.RegisterOutputType(CommitmentPlanPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CommitmentPlanPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CommitmentQuotaResponseOutput{})
	pulumi.RegisterOutputType(CommitmentQuotaResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionAccessKeyOutput{})
	pulumi.RegisterOutputType(ConnectionAccessKeyPtrOutput{})
	pulumi.RegisterOutputType(ConnectionAccessKeyResponseOutput{})
	pulumi.RegisterOutputType(ConnectionAccessKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionAccountKeyOutput{})
	pulumi.RegisterOutputType(ConnectionAccountKeyPtrOutput{})
	pulumi.RegisterOutputType(ConnectionAccountKeyResponseOutput{})
	pulumi.RegisterOutputType(ConnectionAccountKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionApiKeyOutput{})
	pulumi.RegisterOutputType(ConnectionApiKeyPtrOutput{})
	pulumi.RegisterOutputType(ConnectionApiKeyResponseOutput{})
	pulumi.RegisterOutputType(ConnectionApiKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionManagedIdentityOutput{})
	pulumi.RegisterOutputType(ConnectionManagedIdentityPtrOutput{})
	pulumi.RegisterOutputType(ConnectionManagedIdentityResponseOutput{})
	pulumi.RegisterOutputType(ConnectionManagedIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionOAuth2Output{})
	pulumi.RegisterOutputType(ConnectionOAuth2PtrOutput{})
	pulumi.RegisterOutputType(ConnectionOAuth2ResponseOutput{})
	pulumi.RegisterOutputType(ConnectionOAuth2ResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionPersonalAccessTokenOutput{})
	pulumi.RegisterOutputType(ConnectionPersonalAccessTokenPtrOutput{})
	pulumi.RegisterOutputType(ConnectionPersonalAccessTokenResponseOutput{})
	pulumi.RegisterOutputType(ConnectionPersonalAccessTokenResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionServicePrincipalOutput{})
	pulumi.RegisterOutputType(ConnectionServicePrincipalPtrOutput{})
	pulumi.RegisterOutputType(ConnectionServicePrincipalResponseOutput{})
	pulumi.RegisterOutputType(ConnectionServicePrincipalResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionSharedAccessSignatureOutput{})
	pulumi.RegisterOutputType(ConnectionSharedAccessSignaturePtrOutput{})
	pulumi.RegisterOutputType(ConnectionSharedAccessSignatureResponseOutput{})
	pulumi.RegisterOutputType(ConnectionSharedAccessSignatureResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionUsernamePasswordOutput{})
	pulumi.RegisterOutputType(ConnectionUsernamePasswordPtrOutput{})
	pulumi.RegisterOutputType(ConnectionUsernamePasswordResponseOutput{})
	pulumi.RegisterOutputType(ConnectionUsernamePasswordResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomBlocklistConfigOutput{})
	pulumi.RegisterOutputType(CustomBlocklistConfigArrayOutput{})
	pulumi.RegisterOutputType(CustomBlocklistConfigResponseOutput{})
	pulumi.RegisterOutputType(CustomBlocklistConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(CustomKeysOutput{})
	pulumi.RegisterOutputType(CustomKeysPtrOutput{})
	pulumi.RegisterOutputType(CustomKeysConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(CustomKeysConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(CustomKeysResponseOutput{})
	pulumi.RegisterOutputType(CustomKeysResponsePtrOutput{})
	pulumi.RegisterOutputType(DeploymentCapacitySettingsOutput{})
	pulumi.RegisterOutputType(DeploymentCapacitySettingsPtrOutput{})
	pulumi.RegisterOutputType(DeploymentCapacitySettingsResponseOutput{})
	pulumi.RegisterOutputType(DeploymentCapacitySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DeploymentModelOutput{})
	pulumi.RegisterOutputType(DeploymentModelPtrOutput{})
	pulumi.RegisterOutputType(DeploymentModelResponseOutput{})
	pulumi.RegisterOutputType(DeploymentModelResponsePtrOutput{})
	pulumi.RegisterOutputType(DeploymentPropertiesOutput{})
	pulumi.RegisterOutputType(DeploymentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DeploymentPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DeploymentScaleSettingsOutput{})
	pulumi.RegisterOutputType(DeploymentScaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(DeploymentScaleSettingsResponseOutput{})
	pulumi.RegisterOutputType(DeploymentScaleSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionOutput{})
	pulumi.RegisterOutputType(EncryptionPtrOutput{})
	pulumi.RegisterOutputType(EncryptionResponseOutput{})
	pulumi.RegisterOutputType(EncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionScopePropertiesOutput{})
	pulumi.RegisterOutputType(EncryptionScopePropertiesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionScopePropertiesResponseOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(IpRuleOutput{})
	pulumi.RegisterOutputType(IpRuleArrayOutput{})
	pulumi.RegisterOutputType(IpRuleResponseOutput{})
	pulumi.RegisterOutputType(IpRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityAuthTypeConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(ManagedIdentityAuthTypeConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MultiRegionSettingsOutput{})
	pulumi.RegisterOutputType(MultiRegionSettingsPtrOutput{})
	pulumi.RegisterOutputType(MultiRegionSettingsResponseOutput{})
	pulumi.RegisterOutputType(MultiRegionSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetPtrOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetResponseOutput{})
	pulumi.RegisterOutputType(NetworkRuleSetResponsePtrOutput{})
	pulumi.RegisterOutputType(NoneAuthTypeConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(NoneAuthTypeConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(OAuth2AuthTypeConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(OAuth2AuthTypeConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PATAuthTypeConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(PATAuthTypeConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(ProjectPropertiesOutput{})
	pulumi.RegisterOutputType(ProjectPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ProjectPropertiesResponseOutput{})
	pulumi.RegisterOutputType(QuotaLimitResponseOutput{})
	pulumi.RegisterOutputType(RaiBlocklistItemPropertiesOutput{})
	pulumi.RegisterOutputType(RaiBlocklistItemPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RaiBlocklistItemPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RaiBlocklistPropertiesOutput{})
	pulumi.RegisterOutputType(RaiBlocklistPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RaiBlocklistPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RaiMonitorConfigOutput{})
	pulumi.RegisterOutputType(RaiMonitorConfigPtrOutput{})
	pulumi.RegisterOutputType(RaiMonitorConfigResponseOutput{})
	pulumi.RegisterOutputType(RaiMonitorConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(RaiPolicyContentFilterOutput{})
	pulumi.RegisterOutputType(RaiPolicyContentFilterArrayOutput{})
	pulumi.RegisterOutputType(RaiPolicyContentFilterResponseOutput{})
	pulumi.RegisterOutputType(RaiPolicyContentFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(RaiPolicyPropertiesOutput{})
	pulumi.RegisterOutputType(RaiPolicyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RaiPolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RegionSettingOutput{})
	pulumi.RegisterOutputType(RegionSettingArrayOutput{})
	pulumi.RegisterOutputType(RegionSettingResponseOutput{})
	pulumi.RegisterOutputType(RegionSettingResponseArrayOutput{})
	pulumi.RegisterOutputType(RequestMatchPatternResponseOutput{})
	pulumi.RegisterOutputType(RequestMatchPatternResponseArrayOutput{})
	pulumi.RegisterOutputType(SASAuthTypeConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(SASAuthTypeConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ServicePrincipalAuthTypeConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(ServicePrincipalAuthTypeConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuCapabilityResponseOutput{})
	pulumi.RegisterOutputType(SkuCapabilityResponseArrayOutput{})
	pulumi.RegisterOutputType(SkuChangeInfoResponseOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(ThrottlingRuleResponseOutput{})
	pulumi.RegisterOutputType(ThrottlingRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(UserOwnedAmlWorkspaceOutput{})
	pulumi.RegisterOutputType(UserOwnedAmlWorkspacePtrOutput{})
	pulumi.RegisterOutputType(UserOwnedAmlWorkspaceResponseOutput{})
	pulumi.RegisterOutputType(UserOwnedAmlWorkspaceResponsePtrOutput{})
	pulumi.RegisterOutputType(UserOwnedStorageOutput{})
	pulumi.RegisterOutputType(UserOwnedStorageArrayOutput{})
	pulumi.RegisterOutputType(UserOwnedStorageResponseOutput{})
	pulumi.RegisterOutputType(UserOwnedStorageResponseArrayOutput{})
	pulumi.RegisterOutputType(UsernamePasswordAuthTypeConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(UsernamePasswordAuthTypeConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseArrayOutput{})
}
