// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets the specified EncryptionScope associated with the Cognitive Services account.
func LookupEncryptionScope(ctx *pulumi.Context, args *LookupEncryptionScopeArgs, opts ...pulumi.InvokeOption) (*LookupEncryptionScopeResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupEncryptionScopeResult
	err := ctx.Invoke("azure-native:cognitiveservices/v20231001preview:getEncryptionScope", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupEncryptionScopeArgs struct {
	// The name of Cognitive Services account.
	AccountName string `pulumi:"accountName"`
	// The name of the encryptionScope associated with the Cognitive Services Account
	EncryptionScopeName string `pulumi:"encryptionScopeName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Cognitive Services EncryptionScope
type LookupEncryptionScopeResult struct {
	// Resource Etag.
	Etag string `pulumi:"etag"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Properties of Cognitive Services EncryptionScope.
	Properties EncryptionScopePropertiesResponse `pulumi:"properties"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupEncryptionScopeResult
func (val *LookupEncryptionScopeResult) Defaults() *LookupEncryptionScopeResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Properties = *tmp.Properties.Defaults()

	return &tmp
}

func LookupEncryptionScopeOutput(ctx *pulumi.Context, args LookupEncryptionScopeOutputArgs, opts ...pulumi.InvokeOption) LookupEncryptionScopeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEncryptionScopeResult, error) {
			args := v.(LookupEncryptionScopeArgs)
			r, err := LookupEncryptionScope(ctx, &args, opts...)
			var s LookupEncryptionScopeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEncryptionScopeResultOutput)
}

type LookupEncryptionScopeOutputArgs struct {
	// The name of Cognitive Services account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the encryptionScope associated with the Cognitive Services Account
	EncryptionScopeName pulumi.StringInput `pulumi:"encryptionScopeName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupEncryptionScopeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEncryptionScopeArgs)(nil)).Elem()
}

// Cognitive Services EncryptionScope
type LookupEncryptionScopeResultOutput struct{ *pulumi.OutputState }

func (LookupEncryptionScopeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEncryptionScopeResult)(nil)).Elem()
}

func (o LookupEncryptionScopeResultOutput) ToLookupEncryptionScopeResultOutput() LookupEncryptionScopeResultOutput {
	return o
}

func (o LookupEncryptionScopeResultOutput) ToLookupEncryptionScopeResultOutputWithContext(ctx context.Context) LookupEncryptionScopeResultOutput {
	return o
}

func (o LookupEncryptionScopeResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupEncryptionScopeResult] {
	return pulumix.Output[LookupEncryptionScopeResult]{
		OutputState: o.OutputState,
	}
}

// Resource Etag.
func (o LookupEncryptionScopeResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEncryptionScopeResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupEncryptionScopeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEncryptionScopeResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupEncryptionScopeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEncryptionScopeResult) string { return v.Name }).(pulumi.StringOutput)
}

// Properties of Cognitive Services EncryptionScope.
func (o LookupEncryptionScopeResultOutput) Properties() EncryptionScopePropertiesResponseOutput {
	return o.ApplyT(func(v LookupEncryptionScopeResult) EncryptionScopePropertiesResponse { return v.Properties }).(EncryptionScopePropertiesResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o LookupEncryptionScopeResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupEncryptionScopeResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupEncryptionScopeResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupEncryptionScopeResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupEncryptionScopeResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEncryptionScopeResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEncryptionScopeResultOutput{})
}
