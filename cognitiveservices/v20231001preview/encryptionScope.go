// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231001preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Cognitive Services EncryptionScope
type EncryptionScope struct {
	pulumi.CustomResourceState

	// Resource Etag.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of Cognitive Services EncryptionScope.
	Properties EncryptionScopePropertiesResponseOutput `pulumi:"properties"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewEncryptionScope registers a new resource with the given unique name, arguments, and options.
func NewEncryptionScope(ctx *pulumi.Context,
	name string, args *EncryptionScopeArgs, opts ...pulumi.ResourceOption) (*EncryptionScope, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Properties != nil {
		args.Properties = args.Properties.ToEncryptionScopePropertiesPtrOutput().ApplyT(func(v *EncryptionScopeProperties) *EncryptionScopeProperties { return v.Defaults() }).(EncryptionScopePropertiesPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:cognitiveservices:EncryptionScope"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource EncryptionScope
	err := ctx.RegisterResource("azure-native:cognitiveservices/v20231001preview:EncryptionScope", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEncryptionScope gets an existing EncryptionScope resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEncryptionScope(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EncryptionScopeState, opts ...pulumi.ResourceOption) (*EncryptionScope, error) {
	var resource EncryptionScope
	err := ctx.ReadResource("azure-native:cognitiveservices/v20231001preview:EncryptionScope", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EncryptionScope resources.
type encryptionScopeState struct {
}

type EncryptionScopeState struct {
}

func (EncryptionScopeState) ElementType() reflect.Type {
	return reflect.TypeOf((*encryptionScopeState)(nil)).Elem()
}

type encryptionScopeArgs struct {
	// The name of Cognitive Services account.
	AccountName string `pulumi:"accountName"`
	// The name of the encryptionScope associated with the Cognitive Services Account
	EncryptionScopeName *string `pulumi:"encryptionScopeName"`
	// Properties of Cognitive Services EncryptionScope.
	Properties *EncryptionScopeProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a EncryptionScope resource.
type EncryptionScopeArgs struct {
	// The name of Cognitive Services account.
	AccountName pulumi.StringInput
	// The name of the encryptionScope associated with the Cognitive Services Account
	EncryptionScopeName pulumi.StringPtrInput
	// Properties of Cognitive Services EncryptionScope.
	Properties EncryptionScopePropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (EncryptionScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*encryptionScopeArgs)(nil)).Elem()
}

type EncryptionScopeInput interface {
	pulumi.Input

	ToEncryptionScopeOutput() EncryptionScopeOutput
	ToEncryptionScopeOutputWithContext(ctx context.Context) EncryptionScopeOutput
}

func (*EncryptionScope) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionScope)(nil)).Elem()
}

func (i *EncryptionScope) ToEncryptionScopeOutput() EncryptionScopeOutput {
	return i.ToEncryptionScopeOutputWithContext(context.Background())
}

func (i *EncryptionScope) ToEncryptionScopeOutputWithContext(ctx context.Context) EncryptionScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionScopeOutput)
}

type EncryptionScopeOutput struct{ *pulumi.OutputState }

func (EncryptionScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionScope)(nil)).Elem()
}

func (o EncryptionScopeOutput) ToEncryptionScopeOutput() EncryptionScopeOutput {
	return o
}

func (o EncryptionScopeOutput) ToEncryptionScopeOutputWithContext(ctx context.Context) EncryptionScopeOutput {
	return o
}

// Resource Etag.
func (o EncryptionScopeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *EncryptionScope) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The name of the resource
func (o EncryptionScopeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EncryptionScope) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Properties of Cognitive Services EncryptionScope.
func (o EncryptionScopeOutput) Properties() EncryptionScopePropertiesResponseOutput {
	return o.ApplyT(func(v *EncryptionScope) EncryptionScopePropertiesResponseOutput { return v.Properties }).(EncryptionScopePropertiesResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o EncryptionScopeOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *EncryptionScope) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o EncryptionScopeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EncryptionScope) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o EncryptionScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *EncryptionScope) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(EncryptionScopeOutput{})
}
