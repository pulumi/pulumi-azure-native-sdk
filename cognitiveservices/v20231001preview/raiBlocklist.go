// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231001preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Cognitive Services RaiBlocklist.
type RaiBlocklist struct {
	pulumi.CustomResourceState

	// Resource Etag.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of Cognitive Services RaiBlocklist.
	Properties RaiBlocklistPropertiesResponseOutput `pulumi:"properties"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRaiBlocklist registers a new resource with the given unique name, arguments, and options.
func NewRaiBlocklist(ctx *pulumi.Context,
	name string, args *RaiBlocklistArgs, opts ...pulumi.ResourceOption) (*RaiBlocklist, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:cognitiveservices:RaiBlocklist"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource RaiBlocklist
	err := ctx.RegisterResource("azure-native:cognitiveservices/v20231001preview:RaiBlocklist", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRaiBlocklist gets an existing RaiBlocklist resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRaiBlocklist(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RaiBlocklistState, opts ...pulumi.ResourceOption) (*RaiBlocklist, error) {
	var resource RaiBlocklist
	err := ctx.ReadResource("azure-native:cognitiveservices/v20231001preview:RaiBlocklist", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RaiBlocklist resources.
type raiBlocklistState struct {
}

type RaiBlocklistState struct {
}

func (RaiBlocklistState) ElementType() reflect.Type {
	return reflect.TypeOf((*raiBlocklistState)(nil)).Elem()
}

type raiBlocklistArgs struct {
	// The name of Cognitive Services account.
	AccountName string `pulumi:"accountName"`
	// Properties of Cognitive Services RaiBlocklist.
	Properties *RaiBlocklistProperties `pulumi:"properties"`
	// The name of the RaiBlocklist associated with the Cognitive Services Account
	RaiBlocklistName *string `pulumi:"raiBlocklistName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a RaiBlocklist resource.
type RaiBlocklistArgs struct {
	// The name of Cognitive Services account.
	AccountName pulumi.StringInput
	// Properties of Cognitive Services RaiBlocklist.
	Properties RaiBlocklistPropertiesPtrInput
	// The name of the RaiBlocklist associated with the Cognitive Services Account
	RaiBlocklistName pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (RaiBlocklistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*raiBlocklistArgs)(nil)).Elem()
}

type RaiBlocklistInput interface {
	pulumi.Input

	ToRaiBlocklistOutput() RaiBlocklistOutput
	ToRaiBlocklistOutputWithContext(ctx context.Context) RaiBlocklistOutput
}

func (*RaiBlocklist) ElementType() reflect.Type {
	return reflect.TypeOf((**RaiBlocklist)(nil)).Elem()
}

func (i *RaiBlocklist) ToRaiBlocklistOutput() RaiBlocklistOutput {
	return i.ToRaiBlocklistOutputWithContext(context.Background())
}

func (i *RaiBlocklist) ToRaiBlocklistOutputWithContext(ctx context.Context) RaiBlocklistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RaiBlocklistOutput)
}

func (i *RaiBlocklist) ToOutput(ctx context.Context) pulumix.Output[*RaiBlocklist] {
	return pulumix.Output[*RaiBlocklist]{
		OutputState: i.ToRaiBlocklistOutputWithContext(ctx).OutputState,
	}
}

type RaiBlocklistOutput struct{ *pulumi.OutputState }

func (RaiBlocklistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RaiBlocklist)(nil)).Elem()
}

func (o RaiBlocklistOutput) ToRaiBlocklistOutput() RaiBlocklistOutput {
	return o
}

func (o RaiBlocklistOutput) ToRaiBlocklistOutputWithContext(ctx context.Context) RaiBlocklistOutput {
	return o
}

func (o RaiBlocklistOutput) ToOutput(ctx context.Context) pulumix.Output[*RaiBlocklist] {
	return pulumix.Output[*RaiBlocklist]{
		OutputState: o.OutputState,
	}
}

// Resource Etag.
func (o RaiBlocklistOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *RaiBlocklist) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The name of the resource
func (o RaiBlocklistOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RaiBlocklist) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Properties of Cognitive Services RaiBlocklist.
func (o RaiBlocklistOutput) Properties() RaiBlocklistPropertiesResponseOutput {
	return o.ApplyT(func(v *RaiBlocklist) RaiBlocklistPropertiesResponseOutput { return v.Properties }).(RaiBlocklistPropertiesResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o RaiBlocklistOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *RaiBlocklist) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o RaiBlocklistOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RaiBlocklist) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o RaiBlocklistOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *RaiBlocklist) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(RaiBlocklistOutput{})
}
