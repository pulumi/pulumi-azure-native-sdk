// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quota

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This represents a Azure subscriptionId that is associated with a GroupQuotaSEntity.
// Azure REST API version: 2023-06-01-preview.
type GroupQuotaSubscription struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name       pulumi.StringOutput                              `pulumi:"name"`
	Properties GroupQuotaSubscriptionIdResponsePropertiesOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewGroupQuotaSubscription registers a new resource with the given unique name, arguments, and options.
func NewGroupQuotaSubscription(ctx *pulumi.Context,
	name string, args *GroupQuotaSubscriptionArgs, opts ...pulumi.ResourceOption) (*GroupQuotaSubscription, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupQuotaName == nil {
		return nil, errors.New("invalid value for required argument 'GroupQuotaName'")
	}
	if args.MgId == nil {
		return nil, errors.New("invalid value for required argument 'MgId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:quota/v20230601preview:GroupQuotaSubscription"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource GroupQuotaSubscription
	err := ctx.RegisterResource("azure-native:quota:GroupQuotaSubscription", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGroupQuotaSubscription gets an existing GroupQuotaSubscription resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroupQuotaSubscription(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GroupQuotaSubscriptionState, opts ...pulumi.ResourceOption) (*GroupQuotaSubscription, error) {
	var resource GroupQuotaSubscription
	err := ctx.ReadResource("azure-native:quota:GroupQuotaSubscription", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GroupQuotaSubscription resources.
type groupQuotaSubscriptionState struct {
}

type GroupQuotaSubscriptionState struct {
}

func (GroupQuotaSubscriptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*groupQuotaSubscriptionState)(nil)).Elem()
}

type groupQuotaSubscriptionArgs struct {
	// The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
	GroupQuotaName string `pulumi:"groupQuotaName"`
	// Management Group Id.
	MgId string `pulumi:"mgId"`
}

// The set of arguments for constructing a GroupQuotaSubscription resource.
type GroupQuotaSubscriptionArgs struct {
	// The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
	GroupQuotaName pulumi.StringInput
	// Management Group Id.
	MgId pulumi.StringInput
}

func (GroupQuotaSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*groupQuotaSubscriptionArgs)(nil)).Elem()
}

type GroupQuotaSubscriptionInput interface {
	pulumi.Input

	ToGroupQuotaSubscriptionOutput() GroupQuotaSubscriptionOutput
	ToGroupQuotaSubscriptionOutputWithContext(ctx context.Context) GroupQuotaSubscriptionOutput
}

func (*GroupQuotaSubscription) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupQuotaSubscription)(nil)).Elem()
}

func (i *GroupQuotaSubscription) ToGroupQuotaSubscriptionOutput() GroupQuotaSubscriptionOutput {
	return i.ToGroupQuotaSubscriptionOutputWithContext(context.Background())
}

func (i *GroupQuotaSubscription) ToGroupQuotaSubscriptionOutputWithContext(ctx context.Context) GroupQuotaSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupQuotaSubscriptionOutput)
}

func (i *GroupQuotaSubscription) ToOutput(ctx context.Context) pulumix.Output[*GroupQuotaSubscription] {
	return pulumix.Output[*GroupQuotaSubscription]{
		OutputState: i.ToGroupQuotaSubscriptionOutputWithContext(ctx).OutputState,
	}
}

type GroupQuotaSubscriptionOutput struct{ *pulumi.OutputState }

func (GroupQuotaSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupQuotaSubscription)(nil)).Elem()
}

func (o GroupQuotaSubscriptionOutput) ToGroupQuotaSubscriptionOutput() GroupQuotaSubscriptionOutput {
	return o
}

func (o GroupQuotaSubscriptionOutput) ToGroupQuotaSubscriptionOutputWithContext(ctx context.Context) GroupQuotaSubscriptionOutput {
	return o
}

func (o GroupQuotaSubscriptionOutput) ToOutput(ctx context.Context) pulumix.Output[*GroupQuotaSubscription] {
	return pulumix.Output[*GroupQuotaSubscription]{
		OutputState: o.OutputState,
	}
}

// The name of the resource
func (o GroupQuotaSubscriptionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GroupQuotaSubscription) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o GroupQuotaSubscriptionOutput) Properties() GroupQuotaSubscriptionIdResponsePropertiesOutput {
	return o.ApplyT(func(v *GroupQuotaSubscription) GroupQuotaSubscriptionIdResponsePropertiesOutput { return v.Properties }).(GroupQuotaSubscriptionIdResponsePropertiesOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o GroupQuotaSubscriptionOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *GroupQuotaSubscription) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o GroupQuotaSubscriptionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *GroupQuotaSubscription) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GroupQuotaSubscriptionOutput{})
}
