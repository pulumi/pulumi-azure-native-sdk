// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180601preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Type of API.
type ApiType string

const (
	ApiTypeHttp = ApiType("http")
	ApiTypeSoap = ApiType("soap")
)

func (ApiType) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiType)(nil)).Elem()
}

func (e ApiType) ToApiTypeOutput() ApiTypeOutput {
	return pulumi.ToOutput(e).(ApiTypeOutput)
}

func (e ApiType) ToApiTypeOutputWithContext(ctx context.Context) ApiTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApiTypeOutput)
}

func (e ApiType) ToApiTypePtrOutput() ApiTypePtrOutput {
	return e.ToApiTypePtrOutputWithContext(context.Background())
}

func (e ApiType) ToApiTypePtrOutputWithContext(ctx context.Context) ApiTypePtrOutput {
	return ApiType(e).ToApiTypeOutputWithContext(ctx).ToApiTypePtrOutputWithContext(ctx)
}

func (e ApiType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApiType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApiType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApiType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApiTypeOutput struct{ *pulumi.OutputState }

func (ApiTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiType)(nil)).Elem()
}

func (o ApiTypeOutput) ToApiTypeOutput() ApiTypeOutput {
	return o
}

func (o ApiTypeOutput) ToApiTypeOutputWithContext(ctx context.Context) ApiTypeOutput {
	return o
}

func (o ApiTypeOutput) ToApiTypePtrOutput() ApiTypePtrOutput {
	return o.ToApiTypePtrOutputWithContext(context.Background())
}

func (o ApiTypeOutput) ToApiTypePtrOutputWithContext(ctx context.Context) ApiTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiType) *ApiType {
		return &v
	}).(ApiTypePtrOutput)
}

func (o ApiTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApiTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApiType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApiTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApiTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApiType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApiTypePtrOutput struct{ *pulumi.OutputState }

func (ApiTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiType)(nil)).Elem()
}

func (o ApiTypePtrOutput) ToApiTypePtrOutput() ApiTypePtrOutput {
	return o
}

func (o ApiTypePtrOutput) ToApiTypePtrOutputWithContext(ctx context.Context) ApiTypePtrOutput {
	return o
}

func (o ApiTypePtrOutput) Elem() ApiTypeOutput {
	return o.ApplyT(func(v *ApiType) ApiType {
		if v != nil {
			return *v
		}
		var ret ApiType
		return ret
	}).(ApiTypeOutput)
}

func (o ApiTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApiTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApiType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ApiTypeInput is an input type that accepts values of the ApiType enum
// A concrete instance of `ApiTypeInput` can be one of the following:
//
//	ApiTypeHttp
//	ApiTypeSoap
type ApiTypeInput interface {
	pulumi.Input

	ToApiTypeOutput() ApiTypeOutput
	ToApiTypeOutputWithContext(context.Context) ApiTypeOutput
}

var apiTypePtrType = reflect.TypeOf((**ApiType)(nil)).Elem()

type ApiTypePtrInput interface {
	pulumi.Input

	ToApiTypePtrOutput() ApiTypePtrOutput
	ToApiTypePtrOutputWithContext(context.Context) ApiTypePtrOutput
}

type apiTypePtr string

func ApiTypePtr(v string) ApiTypePtrInput {
	return (*apiTypePtr)(&v)
}

func (*apiTypePtr) ElementType() reflect.Type {
	return apiTypePtrType
}

func (in *apiTypePtr) ToApiTypePtrOutput() ApiTypePtrOutput {
	return pulumi.ToOutput(in).(ApiTypePtrOutput)
}

func (in *apiTypePtr) ToApiTypePtrOutputWithContext(ctx context.Context) ApiTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApiTypePtrOutput)
}

func (in *apiTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ApiType] {
	return pulumix.Output[*ApiType]{
		OutputState: in.ToApiTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Form of an authorization grant, which the client uses to request the access token.
type BearerTokenSendingMethods string

const (
	// Access token will be transmitted in the Authorization header using Bearer schema
	BearerTokenSendingMethodsAuthorizationHeader = BearerTokenSendingMethods("authorizationHeader")
	// Access token will be transmitted as query parameters.
	BearerTokenSendingMethodsQuery = BearerTokenSendingMethods("query")
)

func (BearerTokenSendingMethods) ElementType() reflect.Type {
	return reflect.TypeOf((*BearerTokenSendingMethods)(nil)).Elem()
}

func (e BearerTokenSendingMethods) ToBearerTokenSendingMethodsOutput() BearerTokenSendingMethodsOutput {
	return pulumi.ToOutput(e).(BearerTokenSendingMethodsOutput)
}

func (e BearerTokenSendingMethods) ToBearerTokenSendingMethodsOutputWithContext(ctx context.Context) BearerTokenSendingMethodsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BearerTokenSendingMethodsOutput)
}

func (e BearerTokenSendingMethods) ToBearerTokenSendingMethodsPtrOutput() BearerTokenSendingMethodsPtrOutput {
	return e.ToBearerTokenSendingMethodsPtrOutputWithContext(context.Background())
}

func (e BearerTokenSendingMethods) ToBearerTokenSendingMethodsPtrOutputWithContext(ctx context.Context) BearerTokenSendingMethodsPtrOutput {
	return BearerTokenSendingMethods(e).ToBearerTokenSendingMethodsOutputWithContext(ctx).ToBearerTokenSendingMethodsPtrOutputWithContext(ctx)
}

func (e BearerTokenSendingMethods) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BearerTokenSendingMethods) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BearerTokenSendingMethods) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BearerTokenSendingMethods) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BearerTokenSendingMethodsOutput struct{ *pulumi.OutputState }

func (BearerTokenSendingMethodsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BearerTokenSendingMethods)(nil)).Elem()
}

func (o BearerTokenSendingMethodsOutput) ToBearerTokenSendingMethodsOutput() BearerTokenSendingMethodsOutput {
	return o
}

func (o BearerTokenSendingMethodsOutput) ToBearerTokenSendingMethodsOutputWithContext(ctx context.Context) BearerTokenSendingMethodsOutput {
	return o
}

func (o BearerTokenSendingMethodsOutput) ToBearerTokenSendingMethodsPtrOutput() BearerTokenSendingMethodsPtrOutput {
	return o.ToBearerTokenSendingMethodsPtrOutputWithContext(context.Background())
}

func (o BearerTokenSendingMethodsOutput) ToBearerTokenSendingMethodsPtrOutputWithContext(ctx context.Context) BearerTokenSendingMethodsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BearerTokenSendingMethods) *BearerTokenSendingMethods {
		return &v
	}).(BearerTokenSendingMethodsPtrOutput)
}

func (o BearerTokenSendingMethodsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BearerTokenSendingMethodsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BearerTokenSendingMethods) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BearerTokenSendingMethodsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BearerTokenSendingMethodsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BearerTokenSendingMethods) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BearerTokenSendingMethodsPtrOutput struct{ *pulumi.OutputState }

func (BearerTokenSendingMethodsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BearerTokenSendingMethods)(nil)).Elem()
}

func (o BearerTokenSendingMethodsPtrOutput) ToBearerTokenSendingMethodsPtrOutput() BearerTokenSendingMethodsPtrOutput {
	return o
}

func (o BearerTokenSendingMethodsPtrOutput) ToBearerTokenSendingMethodsPtrOutputWithContext(ctx context.Context) BearerTokenSendingMethodsPtrOutput {
	return o
}

func (o BearerTokenSendingMethodsPtrOutput) Elem() BearerTokenSendingMethodsOutput {
	return o.ApplyT(func(v *BearerTokenSendingMethods) BearerTokenSendingMethods {
		if v != nil {
			return *v
		}
		var ret BearerTokenSendingMethods
		return ret
	}).(BearerTokenSendingMethodsOutput)
}

func (o BearerTokenSendingMethodsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BearerTokenSendingMethodsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BearerTokenSendingMethods) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BearerTokenSendingMethodsInput is an input type that accepts values of the BearerTokenSendingMethods enum
// A concrete instance of `BearerTokenSendingMethodsInput` can be one of the following:
//
//	BearerTokenSendingMethodsAuthorizationHeader
//	BearerTokenSendingMethodsQuery
type BearerTokenSendingMethodsInput interface {
	pulumi.Input

	ToBearerTokenSendingMethodsOutput() BearerTokenSendingMethodsOutput
	ToBearerTokenSendingMethodsOutputWithContext(context.Context) BearerTokenSendingMethodsOutput
}

var bearerTokenSendingMethodsPtrType = reflect.TypeOf((**BearerTokenSendingMethods)(nil)).Elem()

type BearerTokenSendingMethodsPtrInput interface {
	pulumi.Input

	ToBearerTokenSendingMethodsPtrOutput() BearerTokenSendingMethodsPtrOutput
	ToBearerTokenSendingMethodsPtrOutputWithContext(context.Context) BearerTokenSendingMethodsPtrOutput
}

type bearerTokenSendingMethodsPtr string

func BearerTokenSendingMethodsPtr(v string) BearerTokenSendingMethodsPtrInput {
	return (*bearerTokenSendingMethodsPtr)(&v)
}

func (*bearerTokenSendingMethodsPtr) ElementType() reflect.Type {
	return bearerTokenSendingMethodsPtrType
}

func (in *bearerTokenSendingMethodsPtr) ToBearerTokenSendingMethodsPtrOutput() BearerTokenSendingMethodsPtrOutput {
	return pulumi.ToOutput(in).(BearerTokenSendingMethodsPtrOutput)
}

func (in *bearerTokenSendingMethodsPtr) ToBearerTokenSendingMethodsPtrOutputWithContext(ctx context.Context) BearerTokenSendingMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BearerTokenSendingMethodsPtrOutput)
}

func (in *bearerTokenSendingMethodsPtr) ToOutput(ctx context.Context) pulumix.Output[*BearerTokenSendingMethods] {
	return pulumix.Output[*BearerTokenSendingMethods]{
		OutputState: in.ToBearerTokenSendingMethodsPtrOutputWithContext(ctx).OutputState,
	}
}

// Format of the Content in which the API is getting imported.
type ContentFormat string

const (
	// The contents are inline and Content type is a WADL document.
	ContentFormat_Wadl_Xml = ContentFormat("wadl-xml")
	// The WADL document is hosted on a publicly accessible internet address.
	ContentFormat_Wadl_Link_Json = ContentFormat("wadl-link-json")
	// The contents are inline and Content Type is a OpenApi 2.0 Document.
	ContentFormat_Swagger_Json = ContentFormat("swagger-json")
	// The Open Api 2.0 document is hosted on a publicly accessible internet address.
	ContentFormat_Swagger_Link_Json = ContentFormat("swagger-link-json")
	// The contents are inline and the document is a WSDL/Soap document.
	ContentFormatWsdl = ContentFormat("wsdl")
	// The WSDL document is hosted on a publicly accessible internet address.
	ContentFormat_Wsdl_Link = ContentFormat("wsdl-link")
	// The contents are inline and Content Type is a OpenApi 3.0 Document in YAML format.
	ContentFormatOpenapi = ContentFormat("openapi")
	// The contents are inline and Content Type is a OpenApi 3.0 Document in JSON format.
	ContentFormat_Openapi_json = ContentFormat("openapi+json")
	// The Open Api 3.0 document is hosted on a publicly accessible internet address.
	ContentFormat_Openapi_Link = ContentFormat("openapi-link")
)

func (ContentFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentFormat)(nil)).Elem()
}

func (e ContentFormat) ToContentFormatOutput() ContentFormatOutput {
	return pulumi.ToOutput(e).(ContentFormatOutput)
}

func (e ContentFormat) ToContentFormatOutputWithContext(ctx context.Context) ContentFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContentFormatOutput)
}

func (e ContentFormat) ToContentFormatPtrOutput() ContentFormatPtrOutput {
	return e.ToContentFormatPtrOutputWithContext(context.Background())
}

func (e ContentFormat) ToContentFormatPtrOutputWithContext(ctx context.Context) ContentFormatPtrOutput {
	return ContentFormat(e).ToContentFormatOutputWithContext(ctx).ToContentFormatPtrOutputWithContext(ctx)
}

func (e ContentFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContentFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContentFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContentFormatOutput struct{ *pulumi.OutputState }

func (ContentFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentFormat)(nil)).Elem()
}

func (o ContentFormatOutput) ToContentFormatOutput() ContentFormatOutput {
	return o
}

func (o ContentFormatOutput) ToContentFormatOutputWithContext(ctx context.Context) ContentFormatOutput {
	return o
}

func (o ContentFormatOutput) ToContentFormatPtrOutput() ContentFormatPtrOutput {
	return o.ToContentFormatPtrOutputWithContext(context.Background())
}

func (o ContentFormatOutput) ToContentFormatPtrOutputWithContext(ctx context.Context) ContentFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContentFormat) *ContentFormat {
		return &v
	}).(ContentFormatPtrOutput)
}

func (o ContentFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContentFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContentFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContentFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContentFormatPtrOutput struct{ *pulumi.OutputState }

func (ContentFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentFormat)(nil)).Elem()
}

func (o ContentFormatPtrOutput) ToContentFormatPtrOutput() ContentFormatPtrOutput {
	return o
}

func (o ContentFormatPtrOutput) ToContentFormatPtrOutputWithContext(ctx context.Context) ContentFormatPtrOutput {
	return o
}

func (o ContentFormatPtrOutput) Elem() ContentFormatOutput {
	return o.ApplyT(func(v *ContentFormat) ContentFormat {
		if v != nil {
			return *v
		}
		var ret ContentFormat
		return ret
	}).(ContentFormatOutput)
}

func (o ContentFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContentFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContentFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContentFormatInput is an input type that accepts values of the ContentFormat enum
// A concrete instance of `ContentFormatInput` can be one of the following:
//
//	ContentFormat_Wadl_Xml
//	ContentFormat_Wadl_Link_Json
//	ContentFormat_Swagger_Json
//	ContentFormat_Swagger_Link_Json
//	ContentFormatWsdl
//	ContentFormat_Wsdl_Link
//	ContentFormatOpenapi
//	ContentFormat_Openapi_json
//	ContentFormat_Openapi_Link
type ContentFormatInput interface {
	pulumi.Input

	ToContentFormatOutput() ContentFormatOutput
	ToContentFormatOutputWithContext(context.Context) ContentFormatOutput
}

var contentFormatPtrType = reflect.TypeOf((**ContentFormat)(nil)).Elem()

type ContentFormatPtrInput interface {
	pulumi.Input

	ToContentFormatPtrOutput() ContentFormatPtrOutput
	ToContentFormatPtrOutputWithContext(context.Context) ContentFormatPtrOutput
}

type contentFormatPtr string

func ContentFormatPtr(v string) ContentFormatPtrInput {
	return (*contentFormatPtr)(&v)
}

func (*contentFormatPtr) ElementType() reflect.Type {
	return contentFormatPtrType
}

func (in *contentFormatPtr) ToContentFormatPtrOutput() ContentFormatPtrOutput {
	return pulumi.ToOutput(in).(ContentFormatPtrOutput)
}

func (in *contentFormatPtr) ToContentFormatPtrOutputWithContext(ctx context.Context) ContentFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContentFormatPtrOutput)
}

func (in *contentFormatPtr) ToOutput(ctx context.Context) pulumix.Output[*ContentFormat] {
	return pulumix.Output[*ContentFormat]{
		OutputState: in.ToContentFormatPtrOutputWithContext(ctx).OutputState,
	}
}

// Format of the policyContent.
type PolicyContentFormat string

const (
	// The contents are inline and Content type is an XML document.
	PolicyContentFormatXml = PolicyContentFormat("xml")
	// The policy XML document is hosted on a http endpoint accessible from the API Management service.
	PolicyContentFormat_Xml_Link = PolicyContentFormat("xml-link")
	// The contents are inline and Content type is a non XML encoded policy document.
	PolicyContentFormatRawxml = PolicyContentFormat("rawxml")
	// The policy document is not Xml encoded and is hosted on a http endpoint accessible from the API Management service.
	PolicyContentFormat_Rawxml_Link = PolicyContentFormat("rawxml-link")
)

func (PolicyContentFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyContentFormat)(nil)).Elem()
}

func (e PolicyContentFormat) ToPolicyContentFormatOutput() PolicyContentFormatOutput {
	return pulumi.ToOutput(e).(PolicyContentFormatOutput)
}

func (e PolicyContentFormat) ToPolicyContentFormatOutputWithContext(ctx context.Context) PolicyContentFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PolicyContentFormatOutput)
}

func (e PolicyContentFormat) ToPolicyContentFormatPtrOutput() PolicyContentFormatPtrOutput {
	return e.ToPolicyContentFormatPtrOutputWithContext(context.Background())
}

func (e PolicyContentFormat) ToPolicyContentFormatPtrOutputWithContext(ctx context.Context) PolicyContentFormatPtrOutput {
	return PolicyContentFormat(e).ToPolicyContentFormatOutputWithContext(ctx).ToPolicyContentFormatPtrOutputWithContext(ctx)
}

func (e PolicyContentFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PolicyContentFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PolicyContentFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PolicyContentFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PolicyContentFormatOutput struct{ *pulumi.OutputState }

func (PolicyContentFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyContentFormat)(nil)).Elem()
}

func (o PolicyContentFormatOutput) ToPolicyContentFormatOutput() PolicyContentFormatOutput {
	return o
}

func (o PolicyContentFormatOutput) ToPolicyContentFormatOutputWithContext(ctx context.Context) PolicyContentFormatOutput {
	return o
}

func (o PolicyContentFormatOutput) ToPolicyContentFormatPtrOutput() PolicyContentFormatPtrOutput {
	return o.ToPolicyContentFormatPtrOutputWithContext(context.Background())
}

func (o PolicyContentFormatOutput) ToPolicyContentFormatPtrOutputWithContext(ctx context.Context) PolicyContentFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyContentFormat) *PolicyContentFormat {
		return &v
	}).(PolicyContentFormatPtrOutput)
}

func (o PolicyContentFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PolicyContentFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PolicyContentFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PolicyContentFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PolicyContentFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PolicyContentFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PolicyContentFormatPtrOutput struct{ *pulumi.OutputState }

func (PolicyContentFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyContentFormat)(nil)).Elem()
}

func (o PolicyContentFormatPtrOutput) ToPolicyContentFormatPtrOutput() PolicyContentFormatPtrOutput {
	return o
}

func (o PolicyContentFormatPtrOutput) ToPolicyContentFormatPtrOutputWithContext(ctx context.Context) PolicyContentFormatPtrOutput {
	return o
}

func (o PolicyContentFormatPtrOutput) Elem() PolicyContentFormatOutput {
	return o.ApplyT(func(v *PolicyContentFormat) PolicyContentFormat {
		if v != nil {
			return *v
		}
		var ret PolicyContentFormat
		return ret
	}).(PolicyContentFormatOutput)
}

func (o PolicyContentFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PolicyContentFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PolicyContentFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PolicyContentFormatInput is an input type that accepts values of the PolicyContentFormat enum
// A concrete instance of `PolicyContentFormatInput` can be one of the following:
//
//	PolicyContentFormatXml
//	PolicyContentFormat_Xml_Link
//	PolicyContentFormatRawxml
//	PolicyContentFormat_Rawxml_Link
type PolicyContentFormatInput interface {
	pulumi.Input

	ToPolicyContentFormatOutput() PolicyContentFormatOutput
	ToPolicyContentFormatOutputWithContext(context.Context) PolicyContentFormatOutput
}

var policyContentFormatPtrType = reflect.TypeOf((**PolicyContentFormat)(nil)).Elem()

type PolicyContentFormatPtrInput interface {
	pulumi.Input

	ToPolicyContentFormatPtrOutput() PolicyContentFormatPtrOutput
	ToPolicyContentFormatPtrOutputWithContext(context.Context) PolicyContentFormatPtrOutput
}

type policyContentFormatPtr string

func PolicyContentFormatPtr(v string) PolicyContentFormatPtrInput {
	return (*policyContentFormatPtr)(&v)
}

func (*policyContentFormatPtr) ElementType() reflect.Type {
	return policyContentFormatPtrType
}

func (in *policyContentFormatPtr) ToPolicyContentFormatPtrOutput() PolicyContentFormatPtrOutput {
	return pulumi.ToOutput(in).(PolicyContentFormatPtrOutput)
}

func (in *policyContentFormatPtr) ToPolicyContentFormatPtrOutputWithContext(ctx context.Context) PolicyContentFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PolicyContentFormatPtrOutput)
}

func (in *policyContentFormatPtr) ToOutput(ctx context.Context) pulumix.Output[*PolicyContentFormat] {
	return pulumix.Output[*PolicyContentFormat]{
		OutputState: in.ToPolicyContentFormatPtrOutputWithContext(ctx).OutputState,
	}
}

type Protocol string

const (
	ProtocolHttp  = Protocol("http")
	ProtocolHttps = Protocol("https")
)

func (Protocol) ElementType() reflect.Type {
	return reflect.TypeOf((*Protocol)(nil)).Elem()
}

func (e Protocol) ToProtocolOutput() ProtocolOutput {
	return pulumi.ToOutput(e).(ProtocolOutput)
}

func (e Protocol) ToProtocolOutputWithContext(ctx context.Context) ProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProtocolOutput)
}

func (e Protocol) ToProtocolPtrOutput() ProtocolPtrOutput {
	return e.ToProtocolPtrOutputWithContext(context.Background())
}

func (e Protocol) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return Protocol(e).ToProtocolOutputWithContext(ctx).ToProtocolPtrOutputWithContext(ctx)
}

func (e Protocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Protocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Protocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Protocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProtocolOutput struct{ *pulumi.OutputState }

func (ProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Protocol)(nil)).Elem()
}

func (o ProtocolOutput) ToProtocolOutput() ProtocolOutput {
	return o
}

func (o ProtocolOutput) ToProtocolOutputWithContext(ctx context.Context) ProtocolOutput {
	return o
}

func (o ProtocolOutput) ToProtocolPtrOutput() ProtocolPtrOutput {
	return o.ToProtocolPtrOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Protocol) *Protocol {
		return &v
	}).(ProtocolPtrOutput)
}

func (o ProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Protocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Protocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProtocolPtrOutput struct{ *pulumi.OutputState }

func (ProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Protocol)(nil)).Elem()
}

func (o ProtocolPtrOutput) ToProtocolPtrOutput() ProtocolPtrOutput {
	return o
}

func (o ProtocolPtrOutput) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return o
}

func (o ProtocolPtrOutput) Elem() ProtocolOutput {
	return o.ApplyT(func(v *Protocol) Protocol {
		if v != nil {
			return *v
		}
		var ret Protocol
		return ret
	}).(ProtocolOutput)
}

func (o ProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Protocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProtocolInput is an input type that accepts values of the Protocol enum
// A concrete instance of `ProtocolInput` can be one of the following:
//
//	ProtocolHttp
//	ProtocolHttps
type ProtocolInput interface {
	pulumi.Input

	ToProtocolOutput() ProtocolOutput
	ToProtocolOutputWithContext(context.Context) ProtocolOutput
}

var protocolPtrType = reflect.TypeOf((**Protocol)(nil)).Elem()

type ProtocolPtrInput interface {
	pulumi.Input

	ToProtocolPtrOutput() ProtocolPtrOutput
	ToProtocolPtrOutputWithContext(context.Context) ProtocolPtrOutput
}

type protocolPtr string

func ProtocolPtr(v string) ProtocolPtrInput {
	return (*protocolPtr)(&v)
}

func (*protocolPtr) ElementType() reflect.Type {
	return protocolPtrType
}

func (in *protocolPtr) ToProtocolPtrOutput() ProtocolPtrOutput {
	return pulumi.ToOutput(in).(ProtocolPtrOutput)
}

func (in *protocolPtr) ToProtocolPtrOutputWithContext(ctx context.Context) ProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProtocolPtrOutput)
}

func (in *protocolPtr) ToOutput(ctx context.Context) pulumix.Output[*Protocol] {
	return pulumix.Output[*Protocol]{
		OutputState: in.ToProtocolPtrOutputWithContext(ctx).OutputState,
	}
}

// ProtocolArrayInput is an input type that accepts ProtocolArray and ProtocolArrayOutput values.
// You can construct a concrete instance of `ProtocolArrayInput` via:
//
//	ProtocolArray{ ProtocolArgs{...} }
type ProtocolArrayInput interface {
	pulumi.Input

	ToProtocolArrayOutput() ProtocolArrayOutput
	ToProtocolArrayOutputWithContext(context.Context) ProtocolArrayOutput
}

type ProtocolArray []Protocol

func (ProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Protocol)(nil)).Elem()
}

func (i ProtocolArray) ToProtocolArrayOutput() ProtocolArrayOutput {
	return i.ToProtocolArrayOutputWithContext(context.Background())
}

func (i ProtocolArray) ToProtocolArrayOutputWithContext(ctx context.Context) ProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolArrayOutput)
}

type ProtocolArrayOutput struct{ *pulumi.OutputState }

func (ProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Protocol)(nil)).Elem()
}

func (o ProtocolArrayOutput) ToProtocolArrayOutput() ProtocolArrayOutput {
	return o
}

func (o ProtocolArrayOutput) ToProtocolArrayOutputWithContext(ctx context.Context) ProtocolArrayOutput {
	return o
}

func (o ProtocolArrayOutput) Index(i pulumi.IntInput) ProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Protocol {
		return vs[0].([]Protocol)[vs[1].(int)]
	}).(ProtocolOutput)
}

// Type of Api to create.
//   - `http` creates a SOAP to REST API
//   - `soap` creates a SOAP pass-through API .
type SoapApiType string

const (
	// Imports a SOAP API having a RESTful front end.
	SoapApiTypeSoapToRest = SoapApiType("http")
	// Imports the Soap API having a SOAP front end.
	SoapApiTypeSoapPassThrough = SoapApiType("soap")
)

func (SoapApiType) ElementType() reflect.Type {
	return reflect.TypeOf((*SoapApiType)(nil)).Elem()
}

func (e SoapApiType) ToSoapApiTypeOutput() SoapApiTypeOutput {
	return pulumi.ToOutput(e).(SoapApiTypeOutput)
}

func (e SoapApiType) ToSoapApiTypeOutputWithContext(ctx context.Context) SoapApiTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SoapApiTypeOutput)
}

func (e SoapApiType) ToSoapApiTypePtrOutput() SoapApiTypePtrOutput {
	return e.ToSoapApiTypePtrOutputWithContext(context.Background())
}

func (e SoapApiType) ToSoapApiTypePtrOutputWithContext(ctx context.Context) SoapApiTypePtrOutput {
	return SoapApiType(e).ToSoapApiTypeOutputWithContext(ctx).ToSoapApiTypePtrOutputWithContext(ctx)
}

func (e SoapApiType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SoapApiType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SoapApiType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SoapApiType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SoapApiTypeOutput struct{ *pulumi.OutputState }

func (SoapApiTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoapApiType)(nil)).Elem()
}

func (o SoapApiTypeOutput) ToSoapApiTypeOutput() SoapApiTypeOutput {
	return o
}

func (o SoapApiTypeOutput) ToSoapApiTypeOutputWithContext(ctx context.Context) SoapApiTypeOutput {
	return o
}

func (o SoapApiTypeOutput) ToSoapApiTypePtrOutput() SoapApiTypePtrOutput {
	return o.ToSoapApiTypePtrOutputWithContext(context.Background())
}

func (o SoapApiTypeOutput) ToSoapApiTypePtrOutputWithContext(ctx context.Context) SoapApiTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SoapApiType) *SoapApiType {
		return &v
	}).(SoapApiTypePtrOutput)
}

func (o SoapApiTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SoapApiTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SoapApiType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SoapApiTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SoapApiTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SoapApiType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SoapApiTypePtrOutput struct{ *pulumi.OutputState }

func (SoapApiTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoapApiType)(nil)).Elem()
}

func (o SoapApiTypePtrOutput) ToSoapApiTypePtrOutput() SoapApiTypePtrOutput {
	return o
}

func (o SoapApiTypePtrOutput) ToSoapApiTypePtrOutputWithContext(ctx context.Context) SoapApiTypePtrOutput {
	return o
}

func (o SoapApiTypePtrOutput) Elem() SoapApiTypeOutput {
	return o.ApplyT(func(v *SoapApiType) SoapApiType {
		if v != nil {
			return *v
		}
		var ret SoapApiType
		return ret
	}).(SoapApiTypeOutput)
}

func (o SoapApiTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SoapApiTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SoapApiType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SoapApiTypeInput is an input type that accepts values of the SoapApiType enum
// A concrete instance of `SoapApiTypeInput` can be one of the following:
//
//	SoapApiTypeSoapToRest
//	SoapApiTypeSoapPassThrough
type SoapApiTypeInput interface {
	pulumi.Input

	ToSoapApiTypeOutput() SoapApiTypeOutput
	ToSoapApiTypeOutputWithContext(context.Context) SoapApiTypeOutput
}

var soapApiTypePtrType = reflect.TypeOf((**SoapApiType)(nil)).Elem()

type SoapApiTypePtrInput interface {
	pulumi.Input

	ToSoapApiTypePtrOutput() SoapApiTypePtrOutput
	ToSoapApiTypePtrOutputWithContext(context.Context) SoapApiTypePtrOutput
}

type soapApiTypePtr string

func SoapApiTypePtr(v string) SoapApiTypePtrInput {
	return (*soapApiTypePtr)(&v)
}

func (*soapApiTypePtr) ElementType() reflect.Type {
	return soapApiTypePtrType
}

func (in *soapApiTypePtr) ToSoapApiTypePtrOutput() SoapApiTypePtrOutput {
	return pulumi.ToOutput(in).(SoapApiTypePtrOutput)
}

func (in *soapApiTypePtr) ToSoapApiTypePtrOutputWithContext(ctx context.Context) SoapApiTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SoapApiTypePtrOutput)
}

func (in *soapApiTypePtr) ToOutput(ctx context.Context) pulumix.Output[*SoapApiType] {
	return pulumix.Output[*SoapApiType]{
		OutputState: in.ToSoapApiTypePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(ApiTypeOutput{})
	pulumi.RegisterOutputType(ApiTypePtrOutput{})
	pulumi.RegisterOutputType(BearerTokenSendingMethodsOutput{})
	pulumi.RegisterOutputType(BearerTokenSendingMethodsPtrOutput{})
	pulumi.RegisterOutputType(ContentFormatOutput{})
	pulumi.RegisterOutputType(ContentFormatPtrOutput{})
	pulumi.RegisterOutputType(PolicyContentFormatOutput{})
	pulumi.RegisterOutputType(PolicyContentFormatPtrOutput{})
	pulumi.RegisterOutputType(ProtocolOutput{})
	pulumi.RegisterOutputType(ProtocolPtrOutput{})
	pulumi.RegisterOutputType(ProtocolArrayOutput{})
	pulumi.RegisterOutputType(SoapApiTypeOutput{})
	pulumi.RegisterOutputType(SoapApiTypePtrOutput{})
}
