// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20170301

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Description of an additional API Management resource location.
type AdditionalLocation struct {
	// The location name of the additional region among Azure Data center regions.
	Location string `pulumi:"location"`
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuProperties `pulumi:"sku"`
	// Virtual network configuration for the location.
	VirtualNetworkConfiguration *VirtualNetworkConfiguration `pulumi:"virtualNetworkConfiguration"`
}

// Defaults sets the appropriate defaults for AdditionalLocation
func (val *AdditionalLocation) Defaults() *AdditionalLocation {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Sku = *tmp.Sku.Defaults()

	return &tmp
}

// AdditionalLocationInput is an input type that accepts AdditionalLocationArgs and AdditionalLocationOutput values.
// You can construct a concrete instance of `AdditionalLocationInput` via:
//
//	AdditionalLocationArgs{...}
type AdditionalLocationInput interface {
	pulumi.Input

	ToAdditionalLocationOutput() AdditionalLocationOutput
	ToAdditionalLocationOutputWithContext(context.Context) AdditionalLocationOutput
}

// Description of an additional API Management resource location.
type AdditionalLocationArgs struct {
	// The location name of the additional region among Azure Data center regions.
	Location pulumi.StringInput `pulumi:"location"`
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuPropertiesInput `pulumi:"sku"`
	// Virtual network configuration for the location.
	VirtualNetworkConfiguration VirtualNetworkConfigurationPtrInput `pulumi:"virtualNetworkConfiguration"`
}

// Defaults sets the appropriate defaults for AdditionalLocationArgs
func (val *AdditionalLocationArgs) Defaults() *AdditionalLocationArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (AdditionalLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalLocation)(nil)).Elem()
}

func (i AdditionalLocationArgs) ToAdditionalLocationOutput() AdditionalLocationOutput {
	return i.ToAdditionalLocationOutputWithContext(context.Background())
}

func (i AdditionalLocationArgs) ToAdditionalLocationOutputWithContext(ctx context.Context) AdditionalLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalLocationOutput)
}

// AdditionalLocationArrayInput is an input type that accepts AdditionalLocationArray and AdditionalLocationArrayOutput values.
// You can construct a concrete instance of `AdditionalLocationArrayInput` via:
//
//	AdditionalLocationArray{ AdditionalLocationArgs{...} }
type AdditionalLocationArrayInput interface {
	pulumi.Input

	ToAdditionalLocationArrayOutput() AdditionalLocationArrayOutput
	ToAdditionalLocationArrayOutputWithContext(context.Context) AdditionalLocationArrayOutput
}

type AdditionalLocationArray []AdditionalLocationInput

func (AdditionalLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalLocation)(nil)).Elem()
}

func (i AdditionalLocationArray) ToAdditionalLocationArrayOutput() AdditionalLocationArrayOutput {
	return i.ToAdditionalLocationArrayOutputWithContext(context.Background())
}

func (i AdditionalLocationArray) ToAdditionalLocationArrayOutputWithContext(ctx context.Context) AdditionalLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalLocationArrayOutput)
}

// Description of an additional API Management resource location.
type AdditionalLocationOutput struct{ *pulumi.OutputState }

func (AdditionalLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalLocation)(nil)).Elem()
}

func (o AdditionalLocationOutput) ToAdditionalLocationOutput() AdditionalLocationOutput {
	return o
}

func (o AdditionalLocationOutput) ToAdditionalLocationOutputWithContext(ctx context.Context) AdditionalLocationOutput {
	return o
}

// The location name of the additional region among Azure Data center regions.
func (o AdditionalLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AdditionalLocation) string { return v.Location }).(pulumi.StringOutput)
}

// SKU properties of the API Management service.
func (o AdditionalLocationOutput) Sku() ApiManagementServiceSkuPropertiesOutput {
	return o.ApplyT(func(v AdditionalLocation) ApiManagementServiceSkuProperties { return v.Sku }).(ApiManagementServiceSkuPropertiesOutput)
}

// Virtual network configuration for the location.
func (o AdditionalLocationOutput) VirtualNetworkConfiguration() VirtualNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v AdditionalLocation) *VirtualNetworkConfiguration { return v.VirtualNetworkConfiguration }).(VirtualNetworkConfigurationPtrOutput)
}

type AdditionalLocationArrayOutput struct{ *pulumi.OutputState }

func (AdditionalLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalLocation)(nil)).Elem()
}

func (o AdditionalLocationArrayOutput) ToAdditionalLocationArrayOutput() AdditionalLocationArrayOutput {
	return o
}

func (o AdditionalLocationArrayOutput) ToAdditionalLocationArrayOutputWithContext(ctx context.Context) AdditionalLocationArrayOutput {
	return o
}

func (o AdditionalLocationArrayOutput) Index(i pulumi.IntInput) AdditionalLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalLocation {
		return vs[0].([]AdditionalLocation)[vs[1].(int)]
	}).(AdditionalLocationOutput)
}

// Description of an additional API Management resource location.
type AdditionalLocationResponse struct {
	// Gateway URL of the API Management service in the Region.
	GatewayRegionalUrl string `pulumi:"gatewayRegionalUrl"`
	// The location name of the additional region among Azure Data center regions.
	Location string `pulumi:"location"`
	// SKU properties of the API Management service.
	Sku ApiManagementServiceSkuPropertiesResponse `pulumi:"sku"`
	// Static IP addresses of the location's virtual machines.
	StaticIps []string `pulumi:"staticIps"`
	// Virtual network configuration for the location.
	VirtualNetworkConfiguration *VirtualNetworkConfigurationResponse `pulumi:"virtualNetworkConfiguration"`
}

// Defaults sets the appropriate defaults for AdditionalLocationResponse
func (val *AdditionalLocationResponse) Defaults() *AdditionalLocationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Sku = *tmp.Sku.Defaults()

	return &tmp
}

// Description of an additional API Management resource location.
type AdditionalLocationResponseOutput struct{ *pulumi.OutputState }

func (AdditionalLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalLocationResponse)(nil)).Elem()
}

func (o AdditionalLocationResponseOutput) ToAdditionalLocationResponseOutput() AdditionalLocationResponseOutput {
	return o
}

func (o AdditionalLocationResponseOutput) ToAdditionalLocationResponseOutputWithContext(ctx context.Context) AdditionalLocationResponseOutput {
	return o
}

// Gateway URL of the API Management service in the Region.
func (o AdditionalLocationResponseOutput) GatewayRegionalUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) string { return v.GatewayRegionalUrl }).(pulumi.StringOutput)
}

// The location name of the additional region among Azure Data center regions.
func (o AdditionalLocationResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) string { return v.Location }).(pulumi.StringOutput)
}

// SKU properties of the API Management service.
func (o AdditionalLocationResponseOutput) Sku() ApiManagementServiceSkuPropertiesResponseOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) ApiManagementServiceSkuPropertiesResponse { return v.Sku }).(ApiManagementServiceSkuPropertiesResponseOutput)
}

// Static IP addresses of the location's virtual machines.
func (o AdditionalLocationResponseOutput) StaticIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) []string { return v.StaticIps }).(pulumi.StringArrayOutput)
}

// Virtual network configuration for the location.
func (o AdditionalLocationResponseOutput) VirtualNetworkConfiguration() VirtualNetworkConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AdditionalLocationResponse) *VirtualNetworkConfigurationResponse {
		return v.VirtualNetworkConfiguration
	}).(VirtualNetworkConfigurationResponsePtrOutput)
}

type AdditionalLocationResponseArrayOutput struct{ *pulumi.OutputState }

func (AdditionalLocationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalLocationResponse)(nil)).Elem()
}

func (o AdditionalLocationResponseArrayOutput) ToAdditionalLocationResponseArrayOutput() AdditionalLocationResponseArrayOutput {
	return o
}

func (o AdditionalLocationResponseArrayOutput) ToAdditionalLocationResponseArrayOutputWithContext(ctx context.Context) AdditionalLocationResponseArrayOutput {
	return o
}

func (o AdditionalLocationResponseArrayOutput) Index(i pulumi.IntInput) AdditionalLocationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalLocationResponse {
		return vs[0].([]AdditionalLocationResponse)[vs[1].(int)]
	}).(AdditionalLocationResponseOutput)
}

// Criteria to limit import of WSDL to a subset of the document.
type ApiCreateOrUpdatePropertiesWsdlSelector struct {
	// Name of endpoint(port) to import from WSDL
	WsdlEndpointName *string `pulumi:"wsdlEndpointName"`
	// Name of service to import from WSDL
	WsdlServiceName *string `pulumi:"wsdlServiceName"`
}

// ApiCreateOrUpdatePropertiesWsdlSelectorInput is an input type that accepts ApiCreateOrUpdatePropertiesWsdlSelectorArgs and ApiCreateOrUpdatePropertiesWsdlSelectorOutput values.
// You can construct a concrete instance of `ApiCreateOrUpdatePropertiesWsdlSelectorInput` via:
//
//	ApiCreateOrUpdatePropertiesWsdlSelectorArgs{...}
type ApiCreateOrUpdatePropertiesWsdlSelectorInput interface {
	pulumi.Input

	ToApiCreateOrUpdatePropertiesWsdlSelectorOutput() ApiCreateOrUpdatePropertiesWsdlSelectorOutput
	ToApiCreateOrUpdatePropertiesWsdlSelectorOutputWithContext(context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorOutput
}

// Criteria to limit import of WSDL to a subset of the document.
type ApiCreateOrUpdatePropertiesWsdlSelectorArgs struct {
	// Name of endpoint(port) to import from WSDL
	WsdlEndpointName pulumi.StringPtrInput `pulumi:"wsdlEndpointName"`
	// Name of service to import from WSDL
	WsdlServiceName pulumi.StringPtrInput `pulumi:"wsdlServiceName"`
}

func (ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiCreateOrUpdatePropertiesWsdlSelector)(nil)).Elem()
}

func (i ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ToApiCreateOrUpdatePropertiesWsdlSelectorOutput() ApiCreateOrUpdatePropertiesWsdlSelectorOutput {
	return i.ToApiCreateOrUpdatePropertiesWsdlSelectorOutputWithContext(context.Background())
}

func (i ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ToApiCreateOrUpdatePropertiesWsdlSelectorOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiCreateOrUpdatePropertiesWsdlSelectorOutput)
}

func (i ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput() ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return i.ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(context.Background())
}

func (i ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiCreateOrUpdatePropertiesWsdlSelectorOutput).ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(ctx)
}

// ApiCreateOrUpdatePropertiesWsdlSelectorPtrInput is an input type that accepts ApiCreateOrUpdatePropertiesWsdlSelectorArgs, ApiCreateOrUpdatePropertiesWsdlSelectorPtr and ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput values.
// You can construct a concrete instance of `ApiCreateOrUpdatePropertiesWsdlSelectorPtrInput` via:
//
//	        ApiCreateOrUpdatePropertiesWsdlSelectorArgs{...}
//
//	or:
//
//	        nil
type ApiCreateOrUpdatePropertiesWsdlSelectorPtrInput interface {
	pulumi.Input

	ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput() ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput
	ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput
}

type apiCreateOrUpdatePropertiesWsdlSelectorPtrType ApiCreateOrUpdatePropertiesWsdlSelectorArgs

func ApiCreateOrUpdatePropertiesWsdlSelectorPtr(v *ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ApiCreateOrUpdatePropertiesWsdlSelectorPtrInput {
	return (*apiCreateOrUpdatePropertiesWsdlSelectorPtrType)(v)
}

func (*apiCreateOrUpdatePropertiesWsdlSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiCreateOrUpdatePropertiesWsdlSelector)(nil)).Elem()
}

func (i *apiCreateOrUpdatePropertiesWsdlSelectorPtrType) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput() ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return i.ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(context.Background())
}

func (i *apiCreateOrUpdatePropertiesWsdlSelectorPtrType) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput)
}

// Criteria to limit import of WSDL to a subset of the document.
type ApiCreateOrUpdatePropertiesWsdlSelectorOutput struct{ *pulumi.OutputState }

func (ApiCreateOrUpdatePropertiesWsdlSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiCreateOrUpdatePropertiesWsdlSelector)(nil)).Elem()
}

func (o ApiCreateOrUpdatePropertiesWsdlSelectorOutput) ToApiCreateOrUpdatePropertiesWsdlSelectorOutput() ApiCreateOrUpdatePropertiesWsdlSelectorOutput {
	return o
}

func (o ApiCreateOrUpdatePropertiesWsdlSelectorOutput) ToApiCreateOrUpdatePropertiesWsdlSelectorOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorOutput {
	return o
}

func (o ApiCreateOrUpdatePropertiesWsdlSelectorOutput) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput() ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return o.ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(context.Background())
}

func (o ApiCreateOrUpdatePropertiesWsdlSelectorOutput) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiCreateOrUpdatePropertiesWsdlSelector) *ApiCreateOrUpdatePropertiesWsdlSelector {
		return &v
	}).(ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput)
}

// Name of endpoint(port) to import from WSDL
func (o ApiCreateOrUpdatePropertiesWsdlSelectorOutput) WsdlEndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiCreateOrUpdatePropertiesWsdlSelector) *string { return v.WsdlEndpointName }).(pulumi.StringPtrOutput)
}

// Name of service to import from WSDL
func (o ApiCreateOrUpdatePropertiesWsdlSelectorOutput) WsdlServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiCreateOrUpdatePropertiesWsdlSelector) *string { return v.WsdlServiceName }).(pulumi.StringPtrOutput)
}

type ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput struct{ *pulumi.OutputState }

func (ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiCreateOrUpdatePropertiesWsdlSelector)(nil)).Elem()
}

func (o ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput() ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return o
}

func (o ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return o
}

func (o ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput) Elem() ApiCreateOrUpdatePropertiesWsdlSelectorOutput {
	return o.ApplyT(func(v *ApiCreateOrUpdatePropertiesWsdlSelector) ApiCreateOrUpdatePropertiesWsdlSelector {
		if v != nil {
			return *v
		}
		var ret ApiCreateOrUpdatePropertiesWsdlSelector
		return ret
	}).(ApiCreateOrUpdatePropertiesWsdlSelectorOutput)
}

// Name of endpoint(port) to import from WSDL
func (o ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput) WsdlEndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiCreateOrUpdatePropertiesWsdlSelector) *string {
		if v == nil {
			return nil
		}
		return v.WsdlEndpointName
	}).(pulumi.StringPtrOutput)
}

// Name of service to import from WSDL
func (o ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput) WsdlServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiCreateOrUpdatePropertiesWsdlSelector) *string {
		if v == nil {
			return nil
		}
		return v.WsdlServiceName
	}).(pulumi.StringPtrOutput)
}

// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentity struct {
	// The identity type. Currently the only supported type is 'SystemAssigned'.
	Type string `pulumi:"type"`
}

// ApiManagementServiceIdentityInput is an input type that accepts ApiManagementServiceIdentityArgs and ApiManagementServiceIdentityOutput values.
// You can construct a concrete instance of `ApiManagementServiceIdentityInput` via:
//
//	ApiManagementServiceIdentityArgs{...}
type ApiManagementServiceIdentityInput interface {
	pulumi.Input

	ToApiManagementServiceIdentityOutput() ApiManagementServiceIdentityOutput
	ToApiManagementServiceIdentityOutputWithContext(context.Context) ApiManagementServiceIdentityOutput
}

// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentityArgs struct {
	// The identity type. Currently the only supported type is 'SystemAssigned'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApiManagementServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceIdentity)(nil)).Elem()
}

func (i ApiManagementServiceIdentityArgs) ToApiManagementServiceIdentityOutput() ApiManagementServiceIdentityOutput {
	return i.ToApiManagementServiceIdentityOutputWithContext(context.Background())
}

func (i ApiManagementServiceIdentityArgs) ToApiManagementServiceIdentityOutputWithContext(ctx context.Context) ApiManagementServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceIdentityOutput)
}

func (i ApiManagementServiceIdentityArgs) ToApiManagementServiceIdentityPtrOutput() ApiManagementServiceIdentityPtrOutput {
	return i.ToApiManagementServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ApiManagementServiceIdentityArgs) ToApiManagementServiceIdentityPtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceIdentityOutput).ToApiManagementServiceIdentityPtrOutputWithContext(ctx)
}

// ApiManagementServiceIdentityPtrInput is an input type that accepts ApiManagementServiceIdentityArgs, ApiManagementServiceIdentityPtr and ApiManagementServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ApiManagementServiceIdentityPtrInput` via:
//
//	        ApiManagementServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ApiManagementServiceIdentityPtrInput interface {
	pulumi.Input

	ToApiManagementServiceIdentityPtrOutput() ApiManagementServiceIdentityPtrOutput
	ToApiManagementServiceIdentityPtrOutputWithContext(context.Context) ApiManagementServiceIdentityPtrOutput
}

type apiManagementServiceIdentityPtrType ApiManagementServiceIdentityArgs

func ApiManagementServiceIdentityPtr(v *ApiManagementServiceIdentityArgs) ApiManagementServiceIdentityPtrInput {
	return (*apiManagementServiceIdentityPtrType)(v)
}

func (*apiManagementServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServiceIdentity)(nil)).Elem()
}

func (i *apiManagementServiceIdentityPtrType) ToApiManagementServiceIdentityPtrOutput() ApiManagementServiceIdentityPtrOutput {
	return i.ToApiManagementServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *apiManagementServiceIdentityPtrType) ToApiManagementServiceIdentityPtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceIdentityPtrOutput)
}

// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentityOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceIdentity)(nil)).Elem()
}

func (o ApiManagementServiceIdentityOutput) ToApiManagementServiceIdentityOutput() ApiManagementServiceIdentityOutput {
	return o
}

func (o ApiManagementServiceIdentityOutput) ToApiManagementServiceIdentityOutputWithContext(ctx context.Context) ApiManagementServiceIdentityOutput {
	return o
}

func (o ApiManagementServiceIdentityOutput) ToApiManagementServiceIdentityPtrOutput() ApiManagementServiceIdentityPtrOutput {
	return o.ToApiManagementServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ApiManagementServiceIdentityOutput) ToApiManagementServiceIdentityPtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiManagementServiceIdentity) *ApiManagementServiceIdentity {
		return &v
	}).(ApiManagementServiceIdentityPtrOutput)
}

// The identity type. Currently the only supported type is 'SystemAssigned'.
func (o ApiManagementServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type ApiManagementServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServiceIdentity)(nil)).Elem()
}

func (o ApiManagementServiceIdentityPtrOutput) ToApiManagementServiceIdentityPtrOutput() ApiManagementServiceIdentityPtrOutput {
	return o
}

func (o ApiManagementServiceIdentityPtrOutput) ToApiManagementServiceIdentityPtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityPtrOutput {
	return o
}

func (o ApiManagementServiceIdentityPtrOutput) Elem() ApiManagementServiceIdentityOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentity) ApiManagementServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ApiManagementServiceIdentity
		return ret
	}).(ApiManagementServiceIdentityOutput)
}

// The identity type. Currently the only supported type is 'SystemAssigned'.
func (o ApiManagementServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentityResponse struct {
	// The principal id of the identity.
	PrincipalId string `pulumi:"principalId"`
	// The client tenant id of the identity.
	TenantId string `pulumi:"tenantId"`
	// The identity type. Currently the only supported type is 'SystemAssigned'.
	Type string `pulumi:"type"`
}

// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceIdentityResponse)(nil)).Elem()
}

func (o ApiManagementServiceIdentityResponseOutput) ToApiManagementServiceIdentityResponseOutput() ApiManagementServiceIdentityResponseOutput {
	return o
}

func (o ApiManagementServiceIdentityResponseOutput) ToApiManagementServiceIdentityResponseOutputWithContext(ctx context.Context) ApiManagementServiceIdentityResponseOutput {
	return o
}

// The principal id of the identity.
func (o ApiManagementServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The client tenant id of the identity.
func (o ApiManagementServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type. Currently the only supported type is 'SystemAssigned'.
func (o ApiManagementServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApiManagementServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementServiceIdentityResponse)(nil)).Elem()
}

func (o ApiManagementServiceIdentityResponsePtrOutput) ToApiManagementServiceIdentityResponsePtrOutput() ApiManagementServiceIdentityResponsePtrOutput {
	return o
}

func (o ApiManagementServiceIdentityResponsePtrOutput) ToApiManagementServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ApiManagementServiceIdentityResponsePtrOutput {
	return o
}

func (o ApiManagementServiceIdentityResponsePtrOutput) Elem() ApiManagementServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentityResponse) ApiManagementServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ApiManagementServiceIdentityResponse
		return ret
	}).(ApiManagementServiceIdentityResponseOutput)
}

// The principal id of the identity.
func (o ApiManagementServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The client tenant id of the identity.
func (o ApiManagementServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type. Currently the only supported type is 'SystemAssigned'.
func (o ApiManagementServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// API Management service resource SKU properties.
type ApiManagementServiceSkuProperties struct {
	// Capacity of the SKU (number of deployed units of the SKU). The default value is 1.
	Capacity *int `pulumi:"capacity"`
	// Name of the Sku.
	Name string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for ApiManagementServiceSkuProperties
func (val *ApiManagementServiceSkuProperties) Defaults() *ApiManagementServiceSkuProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Capacity == nil {
		capacity_ := 1
		tmp.Capacity = &capacity_
	}
	return &tmp
}

// ApiManagementServiceSkuPropertiesInput is an input type that accepts ApiManagementServiceSkuPropertiesArgs and ApiManagementServiceSkuPropertiesOutput values.
// You can construct a concrete instance of `ApiManagementServiceSkuPropertiesInput` via:
//
//	ApiManagementServiceSkuPropertiesArgs{...}
type ApiManagementServiceSkuPropertiesInput interface {
	pulumi.Input

	ToApiManagementServiceSkuPropertiesOutput() ApiManagementServiceSkuPropertiesOutput
	ToApiManagementServiceSkuPropertiesOutputWithContext(context.Context) ApiManagementServiceSkuPropertiesOutput
}

// API Management service resource SKU properties.
type ApiManagementServiceSkuPropertiesArgs struct {
	// Capacity of the SKU (number of deployed units of the SKU). The default value is 1.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of the Sku.
	Name pulumi.StringInput `pulumi:"name"`
}

// Defaults sets the appropriate defaults for ApiManagementServiceSkuPropertiesArgs
func (val *ApiManagementServiceSkuPropertiesArgs) Defaults() *ApiManagementServiceSkuPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Capacity == nil {
		tmp.Capacity = pulumi.IntPtr(1)
	}
	return &tmp
}
func (ApiManagementServiceSkuPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceSkuProperties)(nil)).Elem()
}

func (i ApiManagementServiceSkuPropertiesArgs) ToApiManagementServiceSkuPropertiesOutput() ApiManagementServiceSkuPropertiesOutput {
	return i.ToApiManagementServiceSkuPropertiesOutputWithContext(context.Background())
}

func (i ApiManagementServiceSkuPropertiesArgs) ToApiManagementServiceSkuPropertiesOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementServiceSkuPropertiesOutput)
}

// API Management service resource SKU properties.
type ApiManagementServiceSkuPropertiesOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceSkuPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceSkuProperties)(nil)).Elem()
}

func (o ApiManagementServiceSkuPropertiesOutput) ToApiManagementServiceSkuPropertiesOutput() ApiManagementServiceSkuPropertiesOutput {
	return o
}

func (o ApiManagementServiceSkuPropertiesOutput) ToApiManagementServiceSkuPropertiesOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesOutput {
	return o
}

// Capacity of the SKU (number of deployed units of the SKU). The default value is 1.
func (o ApiManagementServiceSkuPropertiesOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiManagementServiceSkuProperties) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of the Sku.
func (o ApiManagementServiceSkuPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceSkuProperties) string { return v.Name }).(pulumi.StringOutput)
}

// API Management service resource SKU properties.
type ApiManagementServiceSkuPropertiesResponse struct {
	// Capacity of the SKU (number of deployed units of the SKU). The default value is 1.
	Capacity *int `pulumi:"capacity"`
	// Name of the Sku.
	Name string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for ApiManagementServiceSkuPropertiesResponse
func (val *ApiManagementServiceSkuPropertiesResponse) Defaults() *ApiManagementServiceSkuPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Capacity == nil {
		capacity_ := 1
		tmp.Capacity = &capacity_
	}
	return &tmp
}

// API Management service resource SKU properties.
type ApiManagementServiceSkuPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApiManagementServiceSkuPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementServiceSkuPropertiesResponse)(nil)).Elem()
}

func (o ApiManagementServiceSkuPropertiesResponseOutput) ToApiManagementServiceSkuPropertiesResponseOutput() ApiManagementServiceSkuPropertiesResponseOutput {
	return o
}

func (o ApiManagementServiceSkuPropertiesResponseOutput) ToApiManagementServiceSkuPropertiesResponseOutputWithContext(ctx context.Context) ApiManagementServiceSkuPropertiesResponseOutput {
	return o
}

// Capacity of the SKU (number of deployed units of the SKU). The default value is 1.
func (o ApiManagementServiceSkuPropertiesResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiManagementServiceSkuPropertiesResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of the Sku.
func (o ApiManagementServiceSkuPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiManagementServiceSkuPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Api Version Set Contract details.
type ApiVersionSetContract struct {
	// Description of API Version Set.
	Description *string `pulumi:"description"`
	// Name of API Version Set
	DisplayName string `pulumi:"displayName"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName *string `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName *string `pulumi:"versionQueryName"`
	// An value that determines where the API Version identifier will be located in a HTTP request.
	VersioningScheme string `pulumi:"versioningScheme"`
}

// ApiVersionSetContractInput is an input type that accepts ApiVersionSetContractArgs and ApiVersionSetContractOutput values.
// You can construct a concrete instance of `ApiVersionSetContractInput` via:
//
//	ApiVersionSetContractArgs{...}
type ApiVersionSetContractInput interface {
	pulumi.Input

	ToApiVersionSetContractOutput() ApiVersionSetContractOutput
	ToApiVersionSetContractOutputWithContext(context.Context) ApiVersionSetContractOutput
}

// Api Version Set Contract details.
type ApiVersionSetContractArgs struct {
	// Description of API Version Set.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of API Version Set
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName pulumi.StringPtrInput `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName pulumi.StringPtrInput `pulumi:"versionQueryName"`
	// An value that determines where the API Version identifier will be located in a HTTP request.
	VersioningScheme pulumi.StringInput `pulumi:"versioningScheme"`
}

func (ApiVersionSetContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionSetContract)(nil)).Elem()
}

func (i ApiVersionSetContractArgs) ToApiVersionSetContractOutput() ApiVersionSetContractOutput {
	return i.ToApiVersionSetContractOutputWithContext(context.Background())
}

func (i ApiVersionSetContractArgs) ToApiVersionSetContractOutputWithContext(ctx context.Context) ApiVersionSetContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractOutput)
}

func (i ApiVersionSetContractArgs) ToApiVersionSetContractPtrOutput() ApiVersionSetContractPtrOutput {
	return i.ToApiVersionSetContractPtrOutputWithContext(context.Background())
}

func (i ApiVersionSetContractArgs) ToApiVersionSetContractPtrOutputWithContext(ctx context.Context) ApiVersionSetContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractOutput).ToApiVersionSetContractPtrOutputWithContext(ctx)
}

// ApiVersionSetContractPtrInput is an input type that accepts ApiVersionSetContractArgs, ApiVersionSetContractPtr and ApiVersionSetContractPtrOutput values.
// You can construct a concrete instance of `ApiVersionSetContractPtrInput` via:
//
//	        ApiVersionSetContractArgs{...}
//
//	or:
//
//	        nil
type ApiVersionSetContractPtrInput interface {
	pulumi.Input

	ToApiVersionSetContractPtrOutput() ApiVersionSetContractPtrOutput
	ToApiVersionSetContractPtrOutputWithContext(context.Context) ApiVersionSetContractPtrOutput
}

type apiVersionSetContractPtrType ApiVersionSetContractArgs

func ApiVersionSetContractPtr(v *ApiVersionSetContractArgs) ApiVersionSetContractPtrInput {
	return (*apiVersionSetContractPtrType)(v)
}

func (*apiVersionSetContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiVersionSetContract)(nil)).Elem()
}

func (i *apiVersionSetContractPtrType) ToApiVersionSetContractPtrOutput() ApiVersionSetContractPtrOutput {
	return i.ToApiVersionSetContractPtrOutputWithContext(context.Background())
}

func (i *apiVersionSetContractPtrType) ToApiVersionSetContractPtrOutputWithContext(ctx context.Context) ApiVersionSetContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractPtrOutput)
}

// Api Version Set Contract details.
type ApiVersionSetContractOutput struct{ *pulumi.OutputState }

func (ApiVersionSetContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionSetContract)(nil)).Elem()
}

func (o ApiVersionSetContractOutput) ToApiVersionSetContractOutput() ApiVersionSetContractOutput {
	return o
}

func (o ApiVersionSetContractOutput) ToApiVersionSetContractOutputWithContext(ctx context.Context) ApiVersionSetContractOutput {
	return o
}

func (o ApiVersionSetContractOutput) ToApiVersionSetContractPtrOutput() ApiVersionSetContractPtrOutput {
	return o.ToApiVersionSetContractPtrOutputWithContext(context.Background())
}

func (o ApiVersionSetContractOutput) ToApiVersionSetContractPtrOutputWithContext(ctx context.Context) ApiVersionSetContractPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiVersionSetContract) *ApiVersionSetContract {
		return &v
	}).(ApiVersionSetContractPtrOutput)
}

// Description of API Version Set.
func (o ApiVersionSetContractOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContract) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of API Version Set
func (o ApiVersionSetContractOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ApiVersionSetContract) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o ApiVersionSetContractOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContract) *string { return v.VersionHeaderName }).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o ApiVersionSetContractOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContract) *string { return v.VersionQueryName }).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifier will be located in a HTTP request.
func (o ApiVersionSetContractOutput) VersioningScheme() pulumi.StringOutput {
	return o.ApplyT(func(v ApiVersionSetContract) string { return v.VersioningScheme }).(pulumi.StringOutput)
}

type ApiVersionSetContractPtrOutput struct{ *pulumi.OutputState }

func (ApiVersionSetContractPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiVersionSetContract)(nil)).Elem()
}

func (o ApiVersionSetContractPtrOutput) ToApiVersionSetContractPtrOutput() ApiVersionSetContractPtrOutput {
	return o
}

func (o ApiVersionSetContractPtrOutput) ToApiVersionSetContractPtrOutputWithContext(ctx context.Context) ApiVersionSetContractPtrOutput {
	return o
}

func (o ApiVersionSetContractPtrOutput) Elem() ApiVersionSetContractOutput {
	return o.ApplyT(func(v *ApiVersionSetContract) ApiVersionSetContract {
		if v != nil {
			return *v
		}
		var ret ApiVersionSetContract
		return ret
	}).(ApiVersionSetContractOutput)
}

// Description of API Version Set.
func (o ApiVersionSetContractPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContract) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Name of API Version Set
func (o ApiVersionSetContractPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContract) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o ApiVersionSetContractPtrOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContract) *string {
		if v == nil {
			return nil
		}
		return v.VersionHeaderName
	}).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o ApiVersionSetContractPtrOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContract) *string {
		if v == nil {
			return nil
		}
		return v.VersionQueryName
	}).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifier will be located in a HTTP request.
func (o ApiVersionSetContractPtrOutput) VersioningScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContract) *string {
		if v == nil {
			return nil
		}
		return &v.VersioningScheme
	}).(pulumi.StringPtrOutput)
}

// Api Version Set Contract details.
type ApiVersionSetContractResponse struct {
	// Description of API Version Set.
	Description *string `pulumi:"description"`
	// Name of API Version Set
	DisplayName string `pulumi:"displayName"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName *string `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName *string `pulumi:"versionQueryName"`
	// An value that determines where the API Version identifier will be located in a HTTP request.
	VersioningScheme string `pulumi:"versioningScheme"`
}

// Api Version Set Contract details.
type ApiVersionSetContractResponseOutput struct{ *pulumi.OutputState }

func (ApiVersionSetContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionSetContractResponse)(nil)).Elem()
}

func (o ApiVersionSetContractResponseOutput) ToApiVersionSetContractResponseOutput() ApiVersionSetContractResponseOutput {
	return o
}

func (o ApiVersionSetContractResponseOutput) ToApiVersionSetContractResponseOutputWithContext(ctx context.Context) ApiVersionSetContractResponseOutput {
	return o
}

// Description of API Version Set.
func (o ApiVersionSetContractResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of API Version Set
func (o ApiVersionSetContractResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ApiVersionSetContractResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApiVersionSetContractResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApiVersionSetContractResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o ApiVersionSetContractResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiVersionSetContractResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type for API Management resource.
func (o ApiVersionSetContractResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiVersionSetContractResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o ApiVersionSetContractResponseOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractResponse) *string { return v.VersionHeaderName }).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o ApiVersionSetContractResponseOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractResponse) *string { return v.VersionQueryName }).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifier will be located in a HTTP request.
func (o ApiVersionSetContractResponseOutput) VersioningScheme() pulumi.StringOutput {
	return o.ApplyT(func(v ApiVersionSetContractResponse) string { return v.VersioningScheme }).(pulumi.StringOutput)
}

type ApiVersionSetContractResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiVersionSetContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiVersionSetContractResponse)(nil)).Elem()
}

func (o ApiVersionSetContractResponsePtrOutput) ToApiVersionSetContractResponsePtrOutput() ApiVersionSetContractResponsePtrOutput {
	return o
}

func (o ApiVersionSetContractResponsePtrOutput) ToApiVersionSetContractResponsePtrOutputWithContext(ctx context.Context) ApiVersionSetContractResponsePtrOutput {
	return o
}

func (o ApiVersionSetContractResponsePtrOutput) Elem() ApiVersionSetContractResponseOutput {
	return o.ApplyT(func(v *ApiVersionSetContractResponse) ApiVersionSetContractResponse {
		if v != nil {
			return *v
		}
		var ret ApiVersionSetContractResponse
		return ret
	}).(ApiVersionSetContractResponseOutput)
}

// Description of API Version Set.
func (o ApiVersionSetContractResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Name of API Version Set
func (o ApiVersionSetContractResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApiVersionSetContractResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ApiVersionSetContractResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource type for API Management resource.
func (o ApiVersionSetContractResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o ApiVersionSetContractResponsePtrOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.VersionHeaderName
	}).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o ApiVersionSetContractResponsePtrOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.VersionQueryName
	}).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifier will be located in a HTTP request.
func (o ApiVersionSetContractResponsePtrOutput) VersioningScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VersioningScheme
	}).(pulumi.StringPtrOutput)
}

// API Authentication Settings.
type AuthenticationSettingsContract struct {
	// OAuth2 Authentication settings
	OAuth2 *OAuth2AuthenticationSettingsContract `pulumi:"oAuth2"`
}

// AuthenticationSettingsContractInput is an input type that accepts AuthenticationSettingsContractArgs and AuthenticationSettingsContractOutput values.
// You can construct a concrete instance of `AuthenticationSettingsContractInput` via:
//
//	AuthenticationSettingsContractArgs{...}
type AuthenticationSettingsContractInput interface {
	pulumi.Input

	ToAuthenticationSettingsContractOutput() AuthenticationSettingsContractOutput
	ToAuthenticationSettingsContractOutputWithContext(context.Context) AuthenticationSettingsContractOutput
}

// API Authentication Settings.
type AuthenticationSettingsContractArgs struct {
	// OAuth2 Authentication settings
	OAuth2 OAuth2AuthenticationSettingsContractPtrInput `pulumi:"oAuth2"`
}

func (AuthenticationSettingsContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSettingsContract)(nil)).Elem()
}

func (i AuthenticationSettingsContractArgs) ToAuthenticationSettingsContractOutput() AuthenticationSettingsContractOutput {
	return i.ToAuthenticationSettingsContractOutputWithContext(context.Background())
}

func (i AuthenticationSettingsContractArgs) ToAuthenticationSettingsContractOutputWithContext(ctx context.Context) AuthenticationSettingsContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsContractOutput)
}

func (i AuthenticationSettingsContractArgs) ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput {
	return i.ToAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i AuthenticationSettingsContractArgs) ToAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsContractOutput).ToAuthenticationSettingsContractPtrOutputWithContext(ctx)
}

// AuthenticationSettingsContractPtrInput is an input type that accepts AuthenticationSettingsContractArgs, AuthenticationSettingsContractPtr and AuthenticationSettingsContractPtrOutput values.
// You can construct a concrete instance of `AuthenticationSettingsContractPtrInput` via:
//
//	        AuthenticationSettingsContractArgs{...}
//
//	or:
//
//	        nil
type AuthenticationSettingsContractPtrInput interface {
	pulumi.Input

	ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput
	ToAuthenticationSettingsContractPtrOutputWithContext(context.Context) AuthenticationSettingsContractPtrOutput
}

type authenticationSettingsContractPtrType AuthenticationSettingsContractArgs

func AuthenticationSettingsContractPtr(v *AuthenticationSettingsContractArgs) AuthenticationSettingsContractPtrInput {
	return (*authenticationSettingsContractPtrType)(v)
}

func (*authenticationSettingsContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSettingsContract)(nil)).Elem()
}

func (i *authenticationSettingsContractPtrType) ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput {
	return i.ToAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i *authenticationSettingsContractPtrType) ToAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsContractPtrOutput)
}

// API Authentication Settings.
type AuthenticationSettingsContractOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSettingsContract)(nil)).Elem()
}

func (o AuthenticationSettingsContractOutput) ToAuthenticationSettingsContractOutput() AuthenticationSettingsContractOutput {
	return o
}

func (o AuthenticationSettingsContractOutput) ToAuthenticationSettingsContractOutputWithContext(ctx context.Context) AuthenticationSettingsContractOutput {
	return o
}

func (o AuthenticationSettingsContractOutput) ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput {
	return o.ToAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (o AuthenticationSettingsContractOutput) ToAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthenticationSettingsContract) *AuthenticationSettingsContract {
		return &v
	}).(AuthenticationSettingsContractPtrOutput)
}

// OAuth2 Authentication settings
func (o AuthenticationSettingsContractOutput) OAuth2() OAuth2AuthenticationSettingsContractPtrOutput {
	return o.ApplyT(func(v AuthenticationSettingsContract) *OAuth2AuthenticationSettingsContract { return v.OAuth2 }).(OAuth2AuthenticationSettingsContractPtrOutput)
}

type AuthenticationSettingsContractPtrOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsContractPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSettingsContract)(nil)).Elem()
}

func (o AuthenticationSettingsContractPtrOutput) ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput {
	return o
}

func (o AuthenticationSettingsContractPtrOutput) ToAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractPtrOutput {
	return o
}

func (o AuthenticationSettingsContractPtrOutput) Elem() AuthenticationSettingsContractOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContract) AuthenticationSettingsContract {
		if v != nil {
			return *v
		}
		var ret AuthenticationSettingsContract
		return ret
	}).(AuthenticationSettingsContractOutput)
}

// OAuth2 Authentication settings
func (o AuthenticationSettingsContractPtrOutput) OAuth2() OAuth2AuthenticationSettingsContractPtrOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContract) *OAuth2AuthenticationSettingsContract {
		if v == nil {
			return nil
		}
		return v.OAuth2
	}).(OAuth2AuthenticationSettingsContractPtrOutput)
}

// API Authentication Settings.
type AuthenticationSettingsContractResponse struct {
	// OAuth2 Authentication settings
	OAuth2 *OAuth2AuthenticationSettingsContractResponse `pulumi:"oAuth2"`
}

// API Authentication Settings.
type AuthenticationSettingsContractResponseOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o AuthenticationSettingsContractResponseOutput) ToAuthenticationSettingsContractResponseOutput() AuthenticationSettingsContractResponseOutput {
	return o
}

func (o AuthenticationSettingsContractResponseOutput) ToAuthenticationSettingsContractResponseOutputWithContext(ctx context.Context) AuthenticationSettingsContractResponseOutput {
	return o
}

// OAuth2 Authentication settings
func (o AuthenticationSettingsContractResponseOutput) OAuth2() OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v AuthenticationSettingsContractResponse) *OAuth2AuthenticationSettingsContractResponse {
		return v.OAuth2
	}).(OAuth2AuthenticationSettingsContractResponsePtrOutput)
}

type AuthenticationSettingsContractResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o AuthenticationSettingsContractResponsePtrOutput) ToAuthenticationSettingsContractResponsePtrOutput() AuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o AuthenticationSettingsContractResponsePtrOutput) ToAuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o AuthenticationSettingsContractResponsePtrOutput) Elem() AuthenticationSettingsContractResponseOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContractResponse) AuthenticationSettingsContractResponse {
		if v != nil {
			return *v
		}
		var ret AuthenticationSettingsContractResponse
		return ret
	}).(AuthenticationSettingsContractResponseOutput)
}

// OAuth2 Authentication settings
func (o AuthenticationSettingsContractResponsePtrOutput) OAuth2() OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContractResponse) *OAuth2AuthenticationSettingsContractResponse {
		if v == nil {
			return nil
		}
		return v.OAuth2
	}).(OAuth2AuthenticationSettingsContractResponsePtrOutput)
}

// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfiguration struct {
	// Certificate Password.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// Base64 Encoded certificate.
	EncodedCertificate *string `pulumi:"encodedCertificate"`
	// The local certificate store location. Only Root and CertificateAuthority are valid locations.
	StoreName string `pulumi:"storeName"`
}

// CertificateConfigurationInput is an input type that accepts CertificateConfigurationArgs and CertificateConfigurationOutput values.
// You can construct a concrete instance of `CertificateConfigurationInput` via:
//
//	CertificateConfigurationArgs{...}
type CertificateConfigurationInput interface {
	pulumi.Input

	ToCertificateConfigurationOutput() CertificateConfigurationOutput
	ToCertificateConfigurationOutputWithContext(context.Context) CertificateConfigurationOutput
}

// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfigurationArgs struct {
	// Certificate Password.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// Base64 Encoded certificate.
	EncodedCertificate pulumi.StringPtrInput `pulumi:"encodedCertificate"`
	// The local certificate store location. Only Root and CertificateAuthority are valid locations.
	StoreName pulumi.StringInput `pulumi:"storeName"`
}

func (CertificateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfiguration)(nil)).Elem()
}

func (i CertificateConfigurationArgs) ToCertificateConfigurationOutput() CertificateConfigurationOutput {
	return i.ToCertificateConfigurationOutputWithContext(context.Background())
}

func (i CertificateConfigurationArgs) ToCertificateConfigurationOutputWithContext(ctx context.Context) CertificateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigurationOutput)
}

// CertificateConfigurationArrayInput is an input type that accepts CertificateConfigurationArray and CertificateConfigurationArrayOutput values.
// You can construct a concrete instance of `CertificateConfigurationArrayInput` via:
//
//	CertificateConfigurationArray{ CertificateConfigurationArgs{...} }
type CertificateConfigurationArrayInput interface {
	pulumi.Input

	ToCertificateConfigurationArrayOutput() CertificateConfigurationArrayOutput
	ToCertificateConfigurationArrayOutputWithContext(context.Context) CertificateConfigurationArrayOutput
}

type CertificateConfigurationArray []CertificateConfigurationInput

func (CertificateConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfiguration)(nil)).Elem()
}

func (i CertificateConfigurationArray) ToCertificateConfigurationArrayOutput() CertificateConfigurationArrayOutput {
	return i.ToCertificateConfigurationArrayOutputWithContext(context.Background())
}

func (i CertificateConfigurationArray) ToCertificateConfigurationArrayOutputWithContext(ctx context.Context) CertificateConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateConfigurationArrayOutput)
}

// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfigurationOutput struct{ *pulumi.OutputState }

func (CertificateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfiguration)(nil)).Elem()
}

func (o CertificateConfigurationOutput) ToCertificateConfigurationOutput() CertificateConfigurationOutput {
	return o
}

func (o CertificateConfigurationOutput) ToCertificateConfigurationOutputWithContext(ctx context.Context) CertificateConfigurationOutput {
	return o
}

// Certificate Password.
func (o CertificateConfigurationOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfiguration) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// Base64 Encoded certificate.
func (o CertificateConfigurationOutput) EncodedCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfiguration) *string { return v.EncodedCertificate }).(pulumi.StringPtrOutput)
}

// The local certificate store location. Only Root and CertificateAuthority are valid locations.
func (o CertificateConfigurationOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateConfiguration) string { return v.StoreName }).(pulumi.StringOutput)
}

type CertificateConfigurationArrayOutput struct{ *pulumi.OutputState }

func (CertificateConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfiguration)(nil)).Elem()
}

func (o CertificateConfigurationArrayOutput) ToCertificateConfigurationArrayOutput() CertificateConfigurationArrayOutput {
	return o
}

func (o CertificateConfigurationArrayOutput) ToCertificateConfigurationArrayOutputWithContext(ctx context.Context) CertificateConfigurationArrayOutput {
	return o
}

func (o CertificateConfigurationArrayOutput) Index(i pulumi.IntInput) CertificateConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateConfiguration {
		return vs[0].([]CertificateConfiguration)[vs[1].(int)]
	}).(CertificateConfigurationOutput)
}

// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfigurationResponse struct {
	// Certificate information.
	Certificate CertificateInformationResponse `pulumi:"certificate"`
	// Certificate Password.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// Base64 Encoded certificate.
	EncodedCertificate *string `pulumi:"encodedCertificate"`
	// The local certificate store location. Only Root and CertificateAuthority are valid locations.
	StoreName string `pulumi:"storeName"`
}

// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfigurationResponseOutput struct{ *pulumi.OutputState }

func (CertificateConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateConfigurationResponse)(nil)).Elem()
}

func (o CertificateConfigurationResponseOutput) ToCertificateConfigurationResponseOutput() CertificateConfigurationResponseOutput {
	return o
}

func (o CertificateConfigurationResponseOutput) ToCertificateConfigurationResponseOutputWithContext(ctx context.Context) CertificateConfigurationResponseOutput {
	return o
}

// Certificate information.
func (o CertificateConfigurationResponseOutput) Certificate() CertificateInformationResponseOutput {
	return o.ApplyT(func(v CertificateConfigurationResponse) CertificateInformationResponse { return v.Certificate }).(CertificateInformationResponseOutput)
}

// Certificate Password.
func (o CertificateConfigurationResponseOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigurationResponse) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// Base64 Encoded certificate.
func (o CertificateConfigurationResponseOutput) EncodedCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateConfigurationResponse) *string { return v.EncodedCertificate }).(pulumi.StringPtrOutput)
}

// The local certificate store location. Only Root and CertificateAuthority are valid locations.
func (o CertificateConfigurationResponseOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateConfigurationResponse) string { return v.StoreName }).(pulumi.StringOutput)
}

type CertificateConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (CertificateConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateConfigurationResponse)(nil)).Elem()
}

func (o CertificateConfigurationResponseArrayOutput) ToCertificateConfigurationResponseArrayOutput() CertificateConfigurationResponseArrayOutput {
	return o
}

func (o CertificateConfigurationResponseArrayOutput) ToCertificateConfigurationResponseArrayOutputWithContext(ctx context.Context) CertificateConfigurationResponseArrayOutput {
	return o
}

func (o CertificateConfigurationResponseArrayOutput) Index(i pulumi.IntInput) CertificateConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateConfigurationResponse {
		return vs[0].([]CertificateConfigurationResponse)[vs[1].(int)]
	}).(CertificateConfigurationResponseOutput)
}

// SSL certificate information.
type CertificateInformationResponse struct {
	// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	Expiry string `pulumi:"expiry"`
	// Subject of the certificate.
	Subject string `pulumi:"subject"`
	// Thumbprint of the certificate.
	Thumbprint string `pulumi:"thumbprint"`
}

// SSL certificate information.
type CertificateInformationResponseOutput struct{ *pulumi.OutputState }

func (CertificateInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateInformationResponse)(nil)).Elem()
}

func (o CertificateInformationResponseOutput) ToCertificateInformationResponseOutput() CertificateInformationResponseOutput {
	return o
}

func (o CertificateInformationResponseOutput) ToCertificateInformationResponseOutputWithContext(ctx context.Context) CertificateInformationResponseOutput {
	return o
}

// Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o CertificateInformationResponseOutput) Expiry() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateInformationResponse) string { return v.Expiry }).(pulumi.StringOutput)
}

// Subject of the certificate.
func (o CertificateInformationResponseOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateInformationResponse) string { return v.Subject }).(pulumi.StringOutput)
}

// Thumbprint of the certificate.
func (o CertificateInformationResponseOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateInformationResponse) string { return v.Thumbprint }).(pulumi.StringOutput)
}

// Contract details.
type GroupContractResponse struct {
	// true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.
	BuiltIn bool `pulumi:"builtIn"`
	// Group description. Can contain HTML formatting tags.
	Description *string `pulumi:"description"`
	// Group name.
	DisplayName string `pulumi:"displayName"`
	// For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory aad://<tenant>.onmicrosoft.com/groups/<group object id>; otherwise the value is null.
	ExternalId *string `pulumi:"externalId"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Resource type for API Management resource.
	Type string `pulumi:"type"`
}

// Contract details.
type GroupContractResponseOutput struct{ *pulumi.OutputState }

func (GroupContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContractResponse)(nil)).Elem()
}

func (o GroupContractResponseOutput) ToGroupContractResponseOutput() GroupContractResponseOutput {
	return o
}

func (o GroupContractResponseOutput) ToGroupContractResponseOutputWithContext(ctx context.Context) GroupContractResponseOutput {
	return o
}

// true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.
func (o GroupContractResponseOutput) BuiltIn() pulumi.BoolOutput {
	return o.ApplyT(func(v GroupContractResponse) bool { return v.BuiltIn }).(pulumi.BoolOutput)
}

// Group description. Can contain HTML formatting tags.
func (o GroupContractResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContractResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Group name.
func (o GroupContractResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContractResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory aad://<tenant>.onmicrosoft.com/groups/<group object id>; otherwise the value is null.
func (o GroupContractResponseOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContractResponse) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o GroupContractResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContractResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o GroupContractResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContractResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type for API Management resource.
func (o GroupContractResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContractResponse) string { return v.Type }).(pulumi.StringOutput)
}

type GroupContractResponseArrayOutput struct{ *pulumi.OutputState }

func (GroupContractResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContractResponse)(nil)).Elem()
}

func (o GroupContractResponseArrayOutput) ToGroupContractResponseArrayOutput() GroupContractResponseArrayOutput {
	return o
}

func (o GroupContractResponseArrayOutput) ToGroupContractResponseArrayOutputWithContext(ctx context.Context) GroupContractResponseArrayOutput {
	return o
}

func (o GroupContractResponseArrayOutput) Index(i pulumi.IntInput) GroupContractResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupContractResponse {
		return vs[0].([]GroupContractResponse)[vs[1].(int)]
	}).(GroupContractResponseOutput)
}

// Custom hostname configuration.
type HostnameConfiguration struct {
	// Certificate Password.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
	DefaultSslBinding *bool `pulumi:"defaultSslBinding"`
	// Base64 Encoded certificate.
	EncodedCertificate *string `pulumi:"encodedCertificate"`
	// Hostname to configure on the Api Management service.
	HostName string `pulumi:"hostName"`
	// Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Specify true to always negotiate client certificate on the hostname. Default Value is false.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
	// Hostname type.
	Type HostnameType `pulumi:"type"`
}

// Defaults sets the appropriate defaults for HostnameConfiguration
func (val *HostnameConfiguration) Defaults() *HostnameConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DefaultSslBinding == nil {
		defaultSslBinding_ := false
		tmp.DefaultSslBinding = &defaultSslBinding_
	}
	if tmp.NegotiateClientCertificate == nil {
		negotiateClientCertificate_ := false
		tmp.NegotiateClientCertificate = &negotiateClientCertificate_
	}
	return &tmp
}

// HostnameConfigurationInput is an input type that accepts HostnameConfigurationArgs and HostnameConfigurationOutput values.
// You can construct a concrete instance of `HostnameConfigurationInput` via:
//
//	HostnameConfigurationArgs{...}
type HostnameConfigurationInput interface {
	pulumi.Input

	ToHostnameConfigurationOutput() HostnameConfigurationOutput
	ToHostnameConfigurationOutputWithContext(context.Context) HostnameConfigurationOutput
}

// Custom hostname configuration.
type HostnameConfigurationArgs struct {
	// Certificate Password.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
	DefaultSslBinding pulumi.BoolPtrInput `pulumi:"defaultSslBinding"`
	// Base64 Encoded certificate.
	EncodedCertificate pulumi.StringPtrInput `pulumi:"encodedCertificate"`
	// Hostname to configure on the Api Management service.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Specify true to always negotiate client certificate on the hostname. Default Value is false.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
	// Hostname type.
	Type HostnameTypeInput `pulumi:"type"`
}

// Defaults sets the appropriate defaults for HostnameConfigurationArgs
func (val *HostnameConfigurationArgs) Defaults() *HostnameConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DefaultSslBinding == nil {
		tmp.DefaultSslBinding = pulumi.BoolPtr(false)
	}
	if tmp.NegotiateClientCertificate == nil {
		tmp.NegotiateClientCertificate = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (HostnameConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostnameConfiguration)(nil)).Elem()
}

func (i HostnameConfigurationArgs) ToHostnameConfigurationOutput() HostnameConfigurationOutput {
	return i.ToHostnameConfigurationOutputWithContext(context.Background())
}

func (i HostnameConfigurationArgs) ToHostnameConfigurationOutputWithContext(ctx context.Context) HostnameConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostnameConfigurationOutput)
}

// HostnameConfigurationArrayInput is an input type that accepts HostnameConfigurationArray and HostnameConfigurationArrayOutput values.
// You can construct a concrete instance of `HostnameConfigurationArrayInput` via:
//
//	HostnameConfigurationArray{ HostnameConfigurationArgs{...} }
type HostnameConfigurationArrayInput interface {
	pulumi.Input

	ToHostnameConfigurationArrayOutput() HostnameConfigurationArrayOutput
	ToHostnameConfigurationArrayOutputWithContext(context.Context) HostnameConfigurationArrayOutput
}

type HostnameConfigurationArray []HostnameConfigurationInput

func (HostnameConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostnameConfiguration)(nil)).Elem()
}

func (i HostnameConfigurationArray) ToHostnameConfigurationArrayOutput() HostnameConfigurationArrayOutput {
	return i.ToHostnameConfigurationArrayOutputWithContext(context.Background())
}

func (i HostnameConfigurationArray) ToHostnameConfigurationArrayOutputWithContext(ctx context.Context) HostnameConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostnameConfigurationArrayOutput)
}

// Custom hostname configuration.
type HostnameConfigurationOutput struct{ *pulumi.OutputState }

func (HostnameConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostnameConfiguration)(nil)).Elem()
}

func (o HostnameConfigurationOutput) ToHostnameConfigurationOutput() HostnameConfigurationOutput {
	return o
}

func (o HostnameConfigurationOutput) ToHostnameConfigurationOutputWithContext(ctx context.Context) HostnameConfigurationOutput {
	return o
}

// Certificate Password.
func (o HostnameConfigurationOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostnameConfiguration) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
func (o HostnameConfigurationOutput) DefaultSslBinding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostnameConfiguration) *bool { return v.DefaultSslBinding }).(pulumi.BoolPtrOutput)
}

// Base64 Encoded certificate.
func (o HostnameConfigurationOutput) EncodedCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostnameConfiguration) *string { return v.EncodedCertificate }).(pulumi.StringPtrOutput)
}

// Hostname to configure on the Api Management service.
func (o HostnameConfigurationOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v HostnameConfiguration) string { return v.HostName }).(pulumi.StringOutput)
}

// Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
func (o HostnameConfigurationOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostnameConfiguration) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Specify true to always negotiate client certificate on the hostname. Default Value is false.
func (o HostnameConfigurationOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostnameConfiguration) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

// Hostname type.
func (o HostnameConfigurationOutput) Type() HostnameTypeOutput {
	return o.ApplyT(func(v HostnameConfiguration) HostnameType { return v.Type }).(HostnameTypeOutput)
}

type HostnameConfigurationArrayOutput struct{ *pulumi.OutputState }

func (HostnameConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostnameConfiguration)(nil)).Elem()
}

func (o HostnameConfigurationArrayOutput) ToHostnameConfigurationArrayOutput() HostnameConfigurationArrayOutput {
	return o
}

func (o HostnameConfigurationArrayOutput) ToHostnameConfigurationArrayOutputWithContext(ctx context.Context) HostnameConfigurationArrayOutput {
	return o
}

func (o HostnameConfigurationArrayOutput) Index(i pulumi.IntInput) HostnameConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostnameConfiguration {
		return vs[0].([]HostnameConfiguration)[vs[1].(int)]
	}).(HostnameConfigurationOutput)
}

// Custom hostname configuration.
type HostnameConfigurationResponse struct {
	// Certificate information.
	Certificate CertificateInformationResponse `pulumi:"certificate"`
	// Certificate Password.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
	DefaultSslBinding *bool `pulumi:"defaultSslBinding"`
	// Base64 Encoded certificate.
	EncodedCertificate *string `pulumi:"encodedCertificate"`
	// Hostname to configure on the Api Management service.
	HostName string `pulumi:"hostName"`
	// Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Specify true to always negotiate client certificate on the hostname. Default Value is false.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
	// Hostname type.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for HostnameConfigurationResponse
func (val *HostnameConfigurationResponse) Defaults() *HostnameConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DefaultSslBinding == nil {
		defaultSslBinding_ := false
		tmp.DefaultSslBinding = &defaultSslBinding_
	}
	if tmp.NegotiateClientCertificate == nil {
		negotiateClientCertificate_ := false
		tmp.NegotiateClientCertificate = &negotiateClientCertificate_
	}
	return &tmp
}

// Custom hostname configuration.
type HostnameConfigurationResponseOutput struct{ *pulumi.OutputState }

func (HostnameConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostnameConfigurationResponse)(nil)).Elem()
}

func (o HostnameConfigurationResponseOutput) ToHostnameConfigurationResponseOutput() HostnameConfigurationResponseOutput {
	return o
}

func (o HostnameConfigurationResponseOutput) ToHostnameConfigurationResponseOutputWithContext(ctx context.Context) HostnameConfigurationResponseOutput {
	return o
}

// Certificate information.
func (o HostnameConfigurationResponseOutput) Certificate() CertificateInformationResponseOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) CertificateInformationResponse { return v.Certificate }).(CertificateInformationResponseOutput)
}

// Certificate Password.
func (o HostnameConfigurationResponseOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to Proxy Hostname Type.
func (o HostnameConfigurationResponseOutput) DefaultSslBinding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *bool { return v.DefaultSslBinding }).(pulumi.BoolPtrOutput)
}

// Base64 Encoded certificate.
func (o HostnameConfigurationResponseOutput) EncodedCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *string { return v.EncodedCertificate }).(pulumi.StringPtrOutput)
}

// Hostname to configure on the Api Management service.
func (o HostnameConfigurationResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with MSI. The secret should be of type *application/x-pkcs12*
func (o HostnameConfigurationResponseOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Specify true to always negotiate client certificate on the hostname. Default Value is false.
func (o HostnameConfigurationResponseOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

// Hostname type.
func (o HostnameConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HostnameConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type HostnameConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (HostnameConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostnameConfigurationResponse)(nil)).Elem()
}

func (o HostnameConfigurationResponseArrayOutput) ToHostnameConfigurationResponseArrayOutput() HostnameConfigurationResponseArrayOutput {
	return o
}

func (o HostnameConfigurationResponseArrayOutput) ToHostnameConfigurationResponseArrayOutputWithContext(ctx context.Context) HostnameConfigurationResponseArrayOutput {
	return o
}

func (o HostnameConfigurationResponseArrayOutput) Index(i pulumi.IntInput) HostnameConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostnameConfigurationResponse {
		return vs[0].([]HostnameConfigurationResponse)[vs[1].(int)]
	}).(HostnameConfigurationResponseOutput)
}

// Sampling settings contract.
type LoggerSamplingContract struct {
	// Rate re-evaluation interval in ISO8601 format.
	EvaluationInterval *string `pulumi:"evaluationInterval"`
	// Initial sampling rate.
	InitialPercentage *float64 `pulumi:"initialPercentage"`
	// Maximum allowed rate of sampling.
	MaxPercentage *float64 `pulumi:"maxPercentage"`
	// Target rate of telemetry items per second.
	MaxTelemetryItemsPerSecond *int `pulumi:"maxTelemetryItemsPerSecond"`
	// Minimum allowed rate of sampling.
	MinPercentage *float64 `pulumi:"minPercentage"`
	// Moving average ration assigned to most recent value.
	MovingAverageRatio *float64 `pulumi:"movingAverageRatio"`
	// Rate of sampling for fixed-rate sampling.
	Percentage *float64 `pulumi:"percentage"`
	// Duration in ISO8601 format after which it's allowed to lower the sampling rate.
	PercentageDecreaseTimeout *string `pulumi:"percentageDecreaseTimeout"`
	// Duration in ISO8601 format after which it's allowed to increase the sampling rate.
	PercentageIncreaseTimeout *string `pulumi:"percentageIncreaseTimeout"`
	// Sampling type.
	SamplingType *string `pulumi:"samplingType"`
}

// LoggerSamplingContractInput is an input type that accepts LoggerSamplingContractArgs and LoggerSamplingContractOutput values.
// You can construct a concrete instance of `LoggerSamplingContractInput` via:
//
//	LoggerSamplingContractArgs{...}
type LoggerSamplingContractInput interface {
	pulumi.Input

	ToLoggerSamplingContractOutput() LoggerSamplingContractOutput
	ToLoggerSamplingContractOutputWithContext(context.Context) LoggerSamplingContractOutput
}

// Sampling settings contract.
type LoggerSamplingContractArgs struct {
	// Rate re-evaluation interval in ISO8601 format.
	EvaluationInterval pulumi.StringPtrInput `pulumi:"evaluationInterval"`
	// Initial sampling rate.
	InitialPercentage pulumi.Float64PtrInput `pulumi:"initialPercentage"`
	// Maximum allowed rate of sampling.
	MaxPercentage pulumi.Float64PtrInput `pulumi:"maxPercentage"`
	// Target rate of telemetry items per second.
	MaxTelemetryItemsPerSecond pulumi.IntPtrInput `pulumi:"maxTelemetryItemsPerSecond"`
	// Minimum allowed rate of sampling.
	MinPercentage pulumi.Float64PtrInput `pulumi:"minPercentage"`
	// Moving average ration assigned to most recent value.
	MovingAverageRatio pulumi.Float64PtrInput `pulumi:"movingAverageRatio"`
	// Rate of sampling for fixed-rate sampling.
	Percentage pulumi.Float64PtrInput `pulumi:"percentage"`
	// Duration in ISO8601 format after which it's allowed to lower the sampling rate.
	PercentageDecreaseTimeout pulumi.StringPtrInput `pulumi:"percentageDecreaseTimeout"`
	// Duration in ISO8601 format after which it's allowed to increase the sampling rate.
	PercentageIncreaseTimeout pulumi.StringPtrInput `pulumi:"percentageIncreaseTimeout"`
	// Sampling type.
	SamplingType pulumi.StringPtrInput `pulumi:"samplingType"`
}

func (LoggerSamplingContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggerSamplingContract)(nil)).Elem()
}

func (i LoggerSamplingContractArgs) ToLoggerSamplingContractOutput() LoggerSamplingContractOutput {
	return i.ToLoggerSamplingContractOutputWithContext(context.Background())
}

func (i LoggerSamplingContractArgs) ToLoggerSamplingContractOutputWithContext(ctx context.Context) LoggerSamplingContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerSamplingContractOutput)
}

func (i LoggerSamplingContractArgs) ToLoggerSamplingContractPtrOutput() LoggerSamplingContractPtrOutput {
	return i.ToLoggerSamplingContractPtrOutputWithContext(context.Background())
}

func (i LoggerSamplingContractArgs) ToLoggerSamplingContractPtrOutputWithContext(ctx context.Context) LoggerSamplingContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerSamplingContractOutput).ToLoggerSamplingContractPtrOutputWithContext(ctx)
}

// LoggerSamplingContractPtrInput is an input type that accepts LoggerSamplingContractArgs, LoggerSamplingContractPtr and LoggerSamplingContractPtrOutput values.
// You can construct a concrete instance of `LoggerSamplingContractPtrInput` via:
//
//	        LoggerSamplingContractArgs{...}
//
//	or:
//
//	        nil
type LoggerSamplingContractPtrInput interface {
	pulumi.Input

	ToLoggerSamplingContractPtrOutput() LoggerSamplingContractPtrOutput
	ToLoggerSamplingContractPtrOutputWithContext(context.Context) LoggerSamplingContractPtrOutput
}

type loggerSamplingContractPtrType LoggerSamplingContractArgs

func LoggerSamplingContractPtr(v *LoggerSamplingContractArgs) LoggerSamplingContractPtrInput {
	return (*loggerSamplingContractPtrType)(v)
}

func (*loggerSamplingContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggerSamplingContract)(nil)).Elem()
}

func (i *loggerSamplingContractPtrType) ToLoggerSamplingContractPtrOutput() LoggerSamplingContractPtrOutput {
	return i.ToLoggerSamplingContractPtrOutputWithContext(context.Background())
}

func (i *loggerSamplingContractPtrType) ToLoggerSamplingContractPtrOutputWithContext(ctx context.Context) LoggerSamplingContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerSamplingContractPtrOutput)
}

// Sampling settings contract.
type LoggerSamplingContractOutput struct{ *pulumi.OutputState }

func (LoggerSamplingContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggerSamplingContract)(nil)).Elem()
}

func (o LoggerSamplingContractOutput) ToLoggerSamplingContractOutput() LoggerSamplingContractOutput {
	return o
}

func (o LoggerSamplingContractOutput) ToLoggerSamplingContractOutputWithContext(ctx context.Context) LoggerSamplingContractOutput {
	return o
}

func (o LoggerSamplingContractOutput) ToLoggerSamplingContractPtrOutput() LoggerSamplingContractPtrOutput {
	return o.ToLoggerSamplingContractPtrOutputWithContext(context.Background())
}

func (o LoggerSamplingContractOutput) ToLoggerSamplingContractPtrOutputWithContext(ctx context.Context) LoggerSamplingContractPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggerSamplingContract) *LoggerSamplingContract {
		return &v
	}).(LoggerSamplingContractPtrOutput)
}

// Rate re-evaluation interval in ISO8601 format.
func (o LoggerSamplingContractOutput) EvaluationInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggerSamplingContract) *string { return v.EvaluationInterval }).(pulumi.StringPtrOutput)
}

// Initial sampling rate.
func (o LoggerSamplingContractOutput) InitialPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LoggerSamplingContract) *float64 { return v.InitialPercentage }).(pulumi.Float64PtrOutput)
}

// Maximum allowed rate of sampling.
func (o LoggerSamplingContractOutput) MaxPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LoggerSamplingContract) *float64 { return v.MaxPercentage }).(pulumi.Float64PtrOutput)
}

// Target rate of telemetry items per second.
func (o LoggerSamplingContractOutput) MaxTelemetryItemsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoggerSamplingContract) *int { return v.MaxTelemetryItemsPerSecond }).(pulumi.IntPtrOutput)
}

// Minimum allowed rate of sampling.
func (o LoggerSamplingContractOutput) MinPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LoggerSamplingContract) *float64 { return v.MinPercentage }).(pulumi.Float64PtrOutput)
}

// Moving average ration assigned to most recent value.
func (o LoggerSamplingContractOutput) MovingAverageRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LoggerSamplingContract) *float64 { return v.MovingAverageRatio }).(pulumi.Float64PtrOutput)
}

// Rate of sampling for fixed-rate sampling.
func (o LoggerSamplingContractOutput) Percentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LoggerSamplingContract) *float64 { return v.Percentage }).(pulumi.Float64PtrOutput)
}

// Duration in ISO8601 format after which it's allowed to lower the sampling rate.
func (o LoggerSamplingContractOutput) PercentageDecreaseTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggerSamplingContract) *string { return v.PercentageDecreaseTimeout }).(pulumi.StringPtrOutput)
}

// Duration in ISO8601 format after which it's allowed to increase the sampling rate.
func (o LoggerSamplingContractOutput) PercentageIncreaseTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggerSamplingContract) *string { return v.PercentageIncreaseTimeout }).(pulumi.StringPtrOutput)
}

// Sampling type.
func (o LoggerSamplingContractOutput) SamplingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggerSamplingContract) *string { return v.SamplingType }).(pulumi.StringPtrOutput)
}

type LoggerSamplingContractPtrOutput struct{ *pulumi.OutputState }

func (LoggerSamplingContractPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggerSamplingContract)(nil)).Elem()
}

func (o LoggerSamplingContractPtrOutput) ToLoggerSamplingContractPtrOutput() LoggerSamplingContractPtrOutput {
	return o
}

func (o LoggerSamplingContractPtrOutput) ToLoggerSamplingContractPtrOutputWithContext(ctx context.Context) LoggerSamplingContractPtrOutput {
	return o
}

func (o LoggerSamplingContractPtrOutput) Elem() LoggerSamplingContractOutput {
	return o.ApplyT(func(v *LoggerSamplingContract) LoggerSamplingContract {
		if v != nil {
			return *v
		}
		var ret LoggerSamplingContract
		return ret
	}).(LoggerSamplingContractOutput)
}

// Rate re-evaluation interval in ISO8601 format.
func (o LoggerSamplingContractPtrOutput) EvaluationInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContract) *string {
		if v == nil {
			return nil
		}
		return v.EvaluationInterval
	}).(pulumi.StringPtrOutput)
}

// Initial sampling rate.
func (o LoggerSamplingContractPtrOutput) InitialPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContract) *float64 {
		if v == nil {
			return nil
		}
		return v.InitialPercentage
	}).(pulumi.Float64PtrOutput)
}

// Maximum allowed rate of sampling.
func (o LoggerSamplingContractPtrOutput) MaxPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContract) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPercentage
	}).(pulumi.Float64PtrOutput)
}

// Target rate of telemetry items per second.
func (o LoggerSamplingContractPtrOutput) MaxTelemetryItemsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContract) *int {
		if v == nil {
			return nil
		}
		return v.MaxTelemetryItemsPerSecond
	}).(pulumi.IntPtrOutput)
}

// Minimum allowed rate of sampling.
func (o LoggerSamplingContractPtrOutput) MinPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContract) *float64 {
		if v == nil {
			return nil
		}
		return v.MinPercentage
	}).(pulumi.Float64PtrOutput)
}

// Moving average ration assigned to most recent value.
func (o LoggerSamplingContractPtrOutput) MovingAverageRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContract) *float64 {
		if v == nil {
			return nil
		}
		return v.MovingAverageRatio
	}).(pulumi.Float64PtrOutput)
}

// Rate of sampling for fixed-rate sampling.
func (o LoggerSamplingContractPtrOutput) Percentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContract) *float64 {
		if v == nil {
			return nil
		}
		return v.Percentage
	}).(pulumi.Float64PtrOutput)
}

// Duration in ISO8601 format after which it's allowed to lower the sampling rate.
func (o LoggerSamplingContractPtrOutput) PercentageDecreaseTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContract) *string {
		if v == nil {
			return nil
		}
		return v.PercentageDecreaseTimeout
	}).(pulumi.StringPtrOutput)
}

// Duration in ISO8601 format after which it's allowed to increase the sampling rate.
func (o LoggerSamplingContractPtrOutput) PercentageIncreaseTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContract) *string {
		if v == nil {
			return nil
		}
		return v.PercentageIncreaseTimeout
	}).(pulumi.StringPtrOutput)
}

// Sampling type.
func (o LoggerSamplingContractPtrOutput) SamplingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContract) *string {
		if v == nil {
			return nil
		}
		return v.SamplingType
	}).(pulumi.StringPtrOutput)
}

// Sampling settings contract.
type LoggerSamplingContractResponse struct {
	// Rate re-evaluation interval in ISO8601 format.
	EvaluationInterval *string `pulumi:"evaluationInterval"`
	// Initial sampling rate.
	InitialPercentage *float64 `pulumi:"initialPercentage"`
	// Maximum allowed rate of sampling.
	MaxPercentage *float64 `pulumi:"maxPercentage"`
	// Target rate of telemetry items per second.
	MaxTelemetryItemsPerSecond *int `pulumi:"maxTelemetryItemsPerSecond"`
	// Minimum allowed rate of sampling.
	MinPercentage *float64 `pulumi:"minPercentage"`
	// Moving average ration assigned to most recent value.
	MovingAverageRatio *float64 `pulumi:"movingAverageRatio"`
	// Rate of sampling for fixed-rate sampling.
	Percentage *float64 `pulumi:"percentage"`
	// Duration in ISO8601 format after which it's allowed to lower the sampling rate.
	PercentageDecreaseTimeout *string `pulumi:"percentageDecreaseTimeout"`
	// Duration in ISO8601 format after which it's allowed to increase the sampling rate.
	PercentageIncreaseTimeout *string `pulumi:"percentageIncreaseTimeout"`
	// Sampling type.
	SamplingType *string `pulumi:"samplingType"`
}

// Sampling settings contract.
type LoggerSamplingContractResponseOutput struct{ *pulumi.OutputState }

func (LoggerSamplingContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggerSamplingContractResponse)(nil)).Elem()
}

func (o LoggerSamplingContractResponseOutput) ToLoggerSamplingContractResponseOutput() LoggerSamplingContractResponseOutput {
	return o
}

func (o LoggerSamplingContractResponseOutput) ToLoggerSamplingContractResponseOutputWithContext(ctx context.Context) LoggerSamplingContractResponseOutput {
	return o
}

// Rate re-evaluation interval in ISO8601 format.
func (o LoggerSamplingContractResponseOutput) EvaluationInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggerSamplingContractResponse) *string { return v.EvaluationInterval }).(pulumi.StringPtrOutput)
}

// Initial sampling rate.
func (o LoggerSamplingContractResponseOutput) InitialPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LoggerSamplingContractResponse) *float64 { return v.InitialPercentage }).(pulumi.Float64PtrOutput)
}

// Maximum allowed rate of sampling.
func (o LoggerSamplingContractResponseOutput) MaxPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LoggerSamplingContractResponse) *float64 { return v.MaxPercentage }).(pulumi.Float64PtrOutput)
}

// Target rate of telemetry items per second.
func (o LoggerSamplingContractResponseOutput) MaxTelemetryItemsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoggerSamplingContractResponse) *int { return v.MaxTelemetryItemsPerSecond }).(pulumi.IntPtrOutput)
}

// Minimum allowed rate of sampling.
func (o LoggerSamplingContractResponseOutput) MinPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LoggerSamplingContractResponse) *float64 { return v.MinPercentage }).(pulumi.Float64PtrOutput)
}

// Moving average ration assigned to most recent value.
func (o LoggerSamplingContractResponseOutput) MovingAverageRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LoggerSamplingContractResponse) *float64 { return v.MovingAverageRatio }).(pulumi.Float64PtrOutput)
}

// Rate of sampling for fixed-rate sampling.
func (o LoggerSamplingContractResponseOutput) Percentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LoggerSamplingContractResponse) *float64 { return v.Percentage }).(pulumi.Float64PtrOutput)
}

// Duration in ISO8601 format after which it's allowed to lower the sampling rate.
func (o LoggerSamplingContractResponseOutput) PercentageDecreaseTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggerSamplingContractResponse) *string { return v.PercentageDecreaseTimeout }).(pulumi.StringPtrOutput)
}

// Duration in ISO8601 format after which it's allowed to increase the sampling rate.
func (o LoggerSamplingContractResponseOutput) PercentageIncreaseTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggerSamplingContractResponse) *string { return v.PercentageIncreaseTimeout }).(pulumi.StringPtrOutput)
}

// Sampling type.
func (o LoggerSamplingContractResponseOutput) SamplingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggerSamplingContractResponse) *string { return v.SamplingType }).(pulumi.StringPtrOutput)
}

type LoggerSamplingContractResponsePtrOutput struct{ *pulumi.OutputState }

func (LoggerSamplingContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggerSamplingContractResponse)(nil)).Elem()
}

func (o LoggerSamplingContractResponsePtrOutput) ToLoggerSamplingContractResponsePtrOutput() LoggerSamplingContractResponsePtrOutput {
	return o
}

func (o LoggerSamplingContractResponsePtrOutput) ToLoggerSamplingContractResponsePtrOutputWithContext(ctx context.Context) LoggerSamplingContractResponsePtrOutput {
	return o
}

func (o LoggerSamplingContractResponsePtrOutput) Elem() LoggerSamplingContractResponseOutput {
	return o.ApplyT(func(v *LoggerSamplingContractResponse) LoggerSamplingContractResponse {
		if v != nil {
			return *v
		}
		var ret LoggerSamplingContractResponse
		return ret
	}).(LoggerSamplingContractResponseOutput)
}

// Rate re-evaluation interval in ISO8601 format.
func (o LoggerSamplingContractResponsePtrOutput) EvaluationInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.EvaluationInterval
	}).(pulumi.StringPtrOutput)
}

// Initial sampling rate.
func (o LoggerSamplingContractResponsePtrOutput) InitialPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContractResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.InitialPercentage
	}).(pulumi.Float64PtrOutput)
}

// Maximum allowed rate of sampling.
func (o LoggerSamplingContractResponsePtrOutput) MaxPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContractResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPercentage
	}).(pulumi.Float64PtrOutput)
}

// Target rate of telemetry items per second.
func (o LoggerSamplingContractResponsePtrOutput) MaxTelemetryItemsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContractResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxTelemetryItemsPerSecond
	}).(pulumi.IntPtrOutput)
}

// Minimum allowed rate of sampling.
func (o LoggerSamplingContractResponsePtrOutput) MinPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContractResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MinPercentage
	}).(pulumi.Float64PtrOutput)
}

// Moving average ration assigned to most recent value.
func (o LoggerSamplingContractResponsePtrOutput) MovingAverageRatio() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContractResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MovingAverageRatio
	}).(pulumi.Float64PtrOutput)
}

// Rate of sampling for fixed-rate sampling.
func (o LoggerSamplingContractResponsePtrOutput) Percentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContractResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Percentage
	}).(pulumi.Float64PtrOutput)
}

// Duration in ISO8601 format after which it's allowed to lower the sampling rate.
func (o LoggerSamplingContractResponsePtrOutput) PercentageDecreaseTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.PercentageDecreaseTimeout
	}).(pulumi.StringPtrOutput)
}

// Duration in ISO8601 format after which it's allowed to increase the sampling rate.
func (o LoggerSamplingContractResponsePtrOutput) PercentageIncreaseTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.PercentageIncreaseTimeout
	}).(pulumi.StringPtrOutput)
}

// Sampling type.
func (o LoggerSamplingContractResponsePtrOutput) SamplingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerSamplingContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.SamplingType
	}).(pulumi.StringPtrOutput)
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContract struct {
	// OAuth authorization server identifier.
	AuthorizationServerId *string `pulumi:"authorizationServerId"`
	// operations scope.
	Scope *string `pulumi:"scope"`
}

// OAuth2AuthenticationSettingsContractInput is an input type that accepts OAuth2AuthenticationSettingsContractArgs and OAuth2AuthenticationSettingsContractOutput values.
// You can construct a concrete instance of `OAuth2AuthenticationSettingsContractInput` via:
//
//	OAuth2AuthenticationSettingsContractArgs{...}
type OAuth2AuthenticationSettingsContractInput interface {
	pulumi.Input

	ToOAuth2AuthenticationSettingsContractOutput() OAuth2AuthenticationSettingsContractOutput
	ToOAuth2AuthenticationSettingsContractOutputWithContext(context.Context) OAuth2AuthenticationSettingsContractOutput
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContractArgs struct {
	// OAuth authorization server identifier.
	AuthorizationServerId pulumi.StringPtrInput `pulumi:"authorizationServerId"`
	// operations scope.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (OAuth2AuthenticationSettingsContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuth2AuthenticationSettingsContract)(nil)).Elem()
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOAuth2AuthenticationSettingsContractOutput() OAuth2AuthenticationSettingsContractOutput {
	return i.ToOAuth2AuthenticationSettingsContractOutputWithContext(context.Background())
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOAuth2AuthenticationSettingsContractOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuth2AuthenticationSettingsContractOutput)
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput {
	return i.ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuth2AuthenticationSettingsContractOutput).ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx)
}

// OAuth2AuthenticationSettingsContractPtrInput is an input type that accepts OAuth2AuthenticationSettingsContractArgs, OAuth2AuthenticationSettingsContractPtr and OAuth2AuthenticationSettingsContractPtrOutput values.
// You can construct a concrete instance of `OAuth2AuthenticationSettingsContractPtrInput` via:
//
//	        OAuth2AuthenticationSettingsContractArgs{...}
//
//	or:
//
//	        nil
type OAuth2AuthenticationSettingsContractPtrInput interface {
	pulumi.Input

	ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput
	ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(context.Context) OAuth2AuthenticationSettingsContractPtrOutput
}

type oauth2AuthenticationSettingsContractPtrType OAuth2AuthenticationSettingsContractArgs

func OAuth2AuthenticationSettingsContractPtr(v *OAuth2AuthenticationSettingsContractArgs) OAuth2AuthenticationSettingsContractPtrInput {
	return (*oauth2AuthenticationSettingsContractPtrType)(v)
}

func (*oauth2AuthenticationSettingsContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuth2AuthenticationSettingsContract)(nil)).Elem()
}

func (i *oauth2AuthenticationSettingsContractPtrType) ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput {
	return i.ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i *oauth2AuthenticationSettingsContractPtrType) ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuth2AuthenticationSettingsContractPtrOutput)
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContractOutput struct{ *pulumi.OutputState }

func (OAuth2AuthenticationSettingsContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuth2AuthenticationSettingsContract)(nil)).Elem()
}

func (o OAuth2AuthenticationSettingsContractOutput) ToOAuth2AuthenticationSettingsContractOutput() OAuth2AuthenticationSettingsContractOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractOutput) ToOAuth2AuthenticationSettingsContractOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractOutput) ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput {
	return o.ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (o OAuth2AuthenticationSettingsContractOutput) ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OAuth2AuthenticationSettingsContract) *OAuth2AuthenticationSettingsContract {
		return &v
	}).(OAuth2AuthenticationSettingsContractPtrOutput)
}

// OAuth authorization server identifier.
func (o OAuth2AuthenticationSettingsContractOutput) AuthorizationServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContract) *string { return v.AuthorizationServerId }).(pulumi.StringPtrOutput)
}

// operations scope.
func (o OAuth2AuthenticationSettingsContractOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContract) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type OAuth2AuthenticationSettingsContractPtrOutput struct{ *pulumi.OutputState }

func (OAuth2AuthenticationSettingsContractPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuth2AuthenticationSettingsContract)(nil)).Elem()
}

func (o OAuth2AuthenticationSettingsContractPtrOutput) ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractPtrOutput) ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractPtrOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractPtrOutput) Elem() OAuth2AuthenticationSettingsContractOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContract) OAuth2AuthenticationSettingsContract {
		if v != nil {
			return *v
		}
		var ret OAuth2AuthenticationSettingsContract
		return ret
	}).(OAuth2AuthenticationSettingsContractOutput)
}

// OAuth authorization server identifier.
func (o OAuth2AuthenticationSettingsContractPtrOutput) AuthorizationServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContract) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationServerId
	}).(pulumi.StringPtrOutput)
}

// operations scope.
func (o OAuth2AuthenticationSettingsContractPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContract) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContractResponse struct {
	// OAuth authorization server identifier.
	AuthorizationServerId *string `pulumi:"authorizationServerId"`
	// operations scope.
	Scope *string `pulumi:"scope"`
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContractResponseOutput struct{ *pulumi.OutputState }

func (OAuth2AuthenticationSettingsContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuth2AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o OAuth2AuthenticationSettingsContractResponseOutput) ToOAuth2AuthenticationSettingsContractResponseOutput() OAuth2AuthenticationSettingsContractResponseOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractResponseOutput) ToOAuth2AuthenticationSettingsContractResponseOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractResponseOutput {
	return o
}

// OAuth authorization server identifier.
func (o OAuth2AuthenticationSettingsContractResponseOutput) AuthorizationServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContractResponse) *string { return v.AuthorizationServerId }).(pulumi.StringPtrOutput)
}

// operations scope.
func (o OAuth2AuthenticationSettingsContractResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContractResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type OAuth2AuthenticationSettingsContractResponsePtrOutput struct{ *pulumi.OutputState }

func (OAuth2AuthenticationSettingsContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuth2AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) ToOAuth2AuthenticationSettingsContractResponsePtrOutput() OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) ToOAuth2AuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) Elem() OAuth2AuthenticationSettingsContractResponseOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContractResponse) OAuth2AuthenticationSettingsContractResponse {
		if v != nil {
			return *v
		}
		var ret OAuth2AuthenticationSettingsContractResponse
		return ret
	}).(OAuth2AuthenticationSettingsContractResponseOutput)
}

// OAuth authorization server identifier.
func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) AuthorizationServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationServerId
	}).(pulumi.StringPtrOutput)
}

// operations scope.
func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContract struct {
	// Subscription key header name.
	Header *string `pulumi:"header"`
	// Subscription key query string parameter name.
	Query *string `pulumi:"query"`
}

// SubscriptionKeyParameterNamesContractInput is an input type that accepts SubscriptionKeyParameterNamesContractArgs and SubscriptionKeyParameterNamesContractOutput values.
// You can construct a concrete instance of `SubscriptionKeyParameterNamesContractInput` via:
//
//	SubscriptionKeyParameterNamesContractArgs{...}
type SubscriptionKeyParameterNamesContractInput interface {
	pulumi.Input

	ToSubscriptionKeyParameterNamesContractOutput() SubscriptionKeyParameterNamesContractOutput
	ToSubscriptionKeyParameterNamesContractOutputWithContext(context.Context) SubscriptionKeyParameterNamesContractOutput
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContractArgs struct {
	// Subscription key header name.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Subscription key query string parameter name.
	Query pulumi.StringPtrInput `pulumi:"query"`
}

func (SubscriptionKeyParameterNamesContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionKeyParameterNamesContract)(nil)).Elem()
}

func (i SubscriptionKeyParameterNamesContractArgs) ToSubscriptionKeyParameterNamesContractOutput() SubscriptionKeyParameterNamesContractOutput {
	return i.ToSubscriptionKeyParameterNamesContractOutputWithContext(context.Background())
}

func (i SubscriptionKeyParameterNamesContractArgs) ToSubscriptionKeyParameterNamesContractOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionKeyParameterNamesContractOutput)
}

func (i SubscriptionKeyParameterNamesContractArgs) ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput {
	return i.ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(context.Background())
}

func (i SubscriptionKeyParameterNamesContractArgs) ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionKeyParameterNamesContractOutput).ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx)
}

// SubscriptionKeyParameterNamesContractPtrInput is an input type that accepts SubscriptionKeyParameterNamesContractArgs, SubscriptionKeyParameterNamesContractPtr and SubscriptionKeyParameterNamesContractPtrOutput values.
// You can construct a concrete instance of `SubscriptionKeyParameterNamesContractPtrInput` via:
//
//	        SubscriptionKeyParameterNamesContractArgs{...}
//
//	or:
//
//	        nil
type SubscriptionKeyParameterNamesContractPtrInput interface {
	pulumi.Input

	ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput
	ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(context.Context) SubscriptionKeyParameterNamesContractPtrOutput
}

type subscriptionKeyParameterNamesContractPtrType SubscriptionKeyParameterNamesContractArgs

func SubscriptionKeyParameterNamesContractPtr(v *SubscriptionKeyParameterNamesContractArgs) SubscriptionKeyParameterNamesContractPtrInput {
	return (*subscriptionKeyParameterNamesContractPtrType)(v)
}

func (*subscriptionKeyParameterNamesContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionKeyParameterNamesContract)(nil)).Elem()
}

func (i *subscriptionKeyParameterNamesContractPtrType) ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput {
	return i.ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(context.Background())
}

func (i *subscriptionKeyParameterNamesContractPtrType) ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionKeyParameterNamesContractPtrOutput)
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContractOutput struct{ *pulumi.OutputState }

func (SubscriptionKeyParameterNamesContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionKeyParameterNamesContract)(nil)).Elem()
}

func (o SubscriptionKeyParameterNamesContractOutput) ToSubscriptionKeyParameterNamesContractOutput() SubscriptionKeyParameterNamesContractOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractOutput) ToSubscriptionKeyParameterNamesContractOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractOutput) ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput {
	return o.ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(context.Background())
}

func (o SubscriptionKeyParameterNamesContractOutput) ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionKeyParameterNamesContract) *SubscriptionKeyParameterNamesContract {
		return &v
	}).(SubscriptionKeyParameterNamesContractPtrOutput)
}

// Subscription key header name.
func (o SubscriptionKeyParameterNamesContractOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContract) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Subscription key query string parameter name.
func (o SubscriptionKeyParameterNamesContractOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContract) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type SubscriptionKeyParameterNamesContractPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionKeyParameterNamesContractPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionKeyParameterNamesContract)(nil)).Elem()
}

func (o SubscriptionKeyParameterNamesContractPtrOutput) ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractPtrOutput) ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractPtrOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractPtrOutput) Elem() SubscriptionKeyParameterNamesContractOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContract) SubscriptionKeyParameterNamesContract {
		if v != nil {
			return *v
		}
		var ret SubscriptionKeyParameterNamesContract
		return ret
	}).(SubscriptionKeyParameterNamesContractOutput)
}

// Subscription key header name.
func (o SubscriptionKeyParameterNamesContractPtrOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContract) *string {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.StringPtrOutput)
}

// Subscription key query string parameter name.
func (o SubscriptionKeyParameterNamesContractPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContract) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContractResponse struct {
	// Subscription key header name.
	Header *string `pulumi:"header"`
	// Subscription key query string parameter name.
	Query *string `pulumi:"query"`
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContractResponseOutput struct{ *pulumi.OutputState }

func (SubscriptionKeyParameterNamesContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionKeyParameterNamesContractResponse)(nil)).Elem()
}

func (o SubscriptionKeyParameterNamesContractResponseOutput) ToSubscriptionKeyParameterNamesContractResponseOutput() SubscriptionKeyParameterNamesContractResponseOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractResponseOutput) ToSubscriptionKeyParameterNamesContractResponseOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractResponseOutput {
	return o
}

// Subscription key header name.
func (o SubscriptionKeyParameterNamesContractResponseOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContractResponse) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Subscription key query string parameter name.
func (o SubscriptionKeyParameterNamesContractResponseOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContractResponse) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type SubscriptionKeyParameterNamesContractResponsePtrOutput struct{ *pulumi.OutputState }

func (SubscriptionKeyParameterNamesContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionKeyParameterNamesContractResponse)(nil)).Elem()
}

func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) ToSubscriptionKeyParameterNamesContractResponsePtrOutput() SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) ToSubscriptionKeyParameterNamesContractResponsePtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) Elem() SubscriptionKeyParameterNamesContractResponseOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContractResponse) SubscriptionKeyParameterNamesContractResponse {
		if v != nil {
			return *v
		}
		var ret SubscriptionKeyParameterNamesContractResponse
		return ret
	}).(SubscriptionKeyParameterNamesContractResponseOutput)
}

// Subscription key header name.
func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.StringPtrOutput)
}

// Subscription key query string parameter name.
func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// User identity details.
type UserIdentityContractResponse struct {
	// Identifier value within provider.
	Id *string `pulumi:"id"`
	// Identity provider name.
	Provider *string `pulumi:"provider"`
}

// User identity details.
type UserIdentityContractResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityContractResponse)(nil)).Elem()
}

func (o UserIdentityContractResponseOutput) ToUserIdentityContractResponseOutput() UserIdentityContractResponseOutput {
	return o
}

func (o UserIdentityContractResponseOutput) ToUserIdentityContractResponseOutputWithContext(ctx context.Context) UserIdentityContractResponseOutput {
	return o
}

// Identifier value within provider.
func (o UserIdentityContractResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityContractResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Identity provider name.
func (o UserIdentityContractResponseOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityContractResponse) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type UserIdentityContractResponseArrayOutput struct{ *pulumi.OutputState }

func (UserIdentityContractResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserIdentityContractResponse)(nil)).Elem()
}

func (o UserIdentityContractResponseArrayOutput) ToUserIdentityContractResponseArrayOutput() UserIdentityContractResponseArrayOutput {
	return o
}

func (o UserIdentityContractResponseArrayOutput) ToUserIdentityContractResponseArrayOutputWithContext(ctx context.Context) UserIdentityContractResponseArrayOutput {
	return o
}

func (o UserIdentityContractResponseArrayOutput) Index(i pulumi.IntInput) UserIdentityContractResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserIdentityContractResponse {
		return vs[0].([]UserIdentityContractResponse)[vs[1].(int)]
	}).(UserIdentityContractResponseOutput)
}

// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfiguration struct {
	// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
	SubnetResourceId *string `pulumi:"subnetResourceId"`
}

// VirtualNetworkConfigurationInput is an input type that accepts VirtualNetworkConfigurationArgs and VirtualNetworkConfigurationOutput values.
// You can construct a concrete instance of `VirtualNetworkConfigurationInput` via:
//
//	VirtualNetworkConfigurationArgs{...}
type VirtualNetworkConfigurationInput interface {
	pulumi.Input

	ToVirtualNetworkConfigurationOutput() VirtualNetworkConfigurationOutput
	ToVirtualNetworkConfigurationOutputWithContext(context.Context) VirtualNetworkConfigurationOutput
}

// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfigurationArgs struct {
	// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
	SubnetResourceId pulumi.StringPtrInput `pulumi:"subnetResourceId"`
}

func (VirtualNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkConfiguration)(nil)).Elem()
}

func (i VirtualNetworkConfigurationArgs) ToVirtualNetworkConfigurationOutput() VirtualNetworkConfigurationOutput {
	return i.ToVirtualNetworkConfigurationOutputWithContext(context.Background())
}

func (i VirtualNetworkConfigurationArgs) ToVirtualNetworkConfigurationOutputWithContext(ctx context.Context) VirtualNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationOutput)
}

func (i VirtualNetworkConfigurationArgs) ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput {
	return i.ToVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkConfigurationArgs) ToVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationOutput).ToVirtualNetworkConfigurationPtrOutputWithContext(ctx)
}

// VirtualNetworkConfigurationPtrInput is an input type that accepts VirtualNetworkConfigurationArgs, VirtualNetworkConfigurationPtr and VirtualNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkConfigurationPtrInput` via:
//
//	        VirtualNetworkConfigurationArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput
	ToVirtualNetworkConfigurationPtrOutputWithContext(context.Context) VirtualNetworkConfigurationPtrOutput
}

type virtualNetworkConfigurationPtrType VirtualNetworkConfigurationArgs

func VirtualNetworkConfigurationPtr(v *VirtualNetworkConfigurationArgs) VirtualNetworkConfigurationPtrInput {
	return (*virtualNetworkConfigurationPtrType)(v)
}

func (*virtualNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkConfiguration)(nil)).Elem()
}

func (i *virtualNetworkConfigurationPtrType) ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput {
	return i.ToVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkConfigurationPtrType) ToVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkConfigurationPtrOutput)
}

// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkConfiguration)(nil)).Elem()
}

func (o VirtualNetworkConfigurationOutput) ToVirtualNetworkConfigurationOutput() VirtualNetworkConfigurationOutput {
	return o
}

func (o VirtualNetworkConfigurationOutput) ToVirtualNetworkConfigurationOutputWithContext(ctx context.Context) VirtualNetworkConfigurationOutput {
	return o
}

func (o VirtualNetworkConfigurationOutput) ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput {
	return o.ToVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkConfigurationOutput) ToVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkConfiguration) *VirtualNetworkConfiguration {
		return &v
	}).(VirtualNetworkConfigurationPtrOutput)
}

// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
func (o VirtualNetworkConfigurationOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkConfiguration) *string { return v.SubnetResourceId }).(pulumi.StringPtrOutput)
}

type VirtualNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkConfiguration)(nil)).Elem()
}

func (o VirtualNetworkConfigurationPtrOutput) ToVirtualNetworkConfigurationPtrOutput() VirtualNetworkConfigurationPtrOutput {
	return o
}

func (o VirtualNetworkConfigurationPtrOutput) ToVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationPtrOutput {
	return o
}

func (o VirtualNetworkConfigurationPtrOutput) Elem() VirtualNetworkConfigurationOutput {
	return o.ApplyT(func(v *VirtualNetworkConfiguration) VirtualNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkConfiguration
		return ret
	}).(VirtualNetworkConfigurationOutput)
}

// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
func (o VirtualNetworkConfigurationPtrOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SubnetResourceId
	}).(pulumi.StringPtrOutput)
}

// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfigurationResponse struct {
	// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
	SubnetResourceId *string `pulumi:"subnetResourceId"`
	// The name of the subnet.
	Subnetname string `pulumi:"subnetname"`
	// The virtual network ID. This is typically a GUID. Expect a null GUID by default.
	Vnetid string `pulumi:"vnetid"`
}

// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkConfigurationResponseOutput) ToVirtualNetworkConfigurationResponseOutput() VirtualNetworkConfigurationResponseOutput {
	return o
}

func (o VirtualNetworkConfigurationResponseOutput) ToVirtualNetworkConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponseOutput {
	return o
}

// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
func (o VirtualNetworkConfigurationResponseOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkConfigurationResponse) *string { return v.SubnetResourceId }).(pulumi.StringPtrOutput)
}

// The name of the subnet.
func (o VirtualNetworkConfigurationResponseOutput) Subnetname() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkConfigurationResponse) string { return v.Subnetname }).(pulumi.StringOutput)
}

// The virtual network ID. This is typically a GUID. Expect a null GUID by default.
func (o VirtualNetworkConfigurationResponseOutput) Vnetid() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkConfigurationResponse) string { return v.Vnetid }).(pulumi.StringOutput)
}

type VirtualNetworkConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkConfigurationResponsePtrOutput) ToVirtualNetworkConfigurationResponsePtrOutput() VirtualNetworkConfigurationResponsePtrOutput {
	return o
}

func (o VirtualNetworkConfigurationResponsePtrOutput) ToVirtualNetworkConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkConfigurationResponsePtrOutput {
	return o
}

func (o VirtualNetworkConfigurationResponsePtrOutput) Elem() VirtualNetworkConfigurationResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigurationResponse) VirtualNetworkConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkConfigurationResponse
		return ret
	}).(VirtualNetworkConfigurationResponseOutput)
}

// The full resource ID of a subnet in a virtual network to deploy the API Management service in.
func (o VirtualNetworkConfigurationResponsePtrOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubnetResourceId
	}).(pulumi.StringPtrOutput)
}

// The name of the subnet.
func (o VirtualNetworkConfigurationResponsePtrOutput) Subnetname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Subnetname
	}).(pulumi.StringPtrOutput)
}

// The virtual network ID. This is typically a GUID. Expect a null GUID by default.
func (o VirtualNetworkConfigurationResponsePtrOutput) Vnetid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Vnetid
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AdditionalLocationOutput{})
	pulumi.RegisterOutputType(AdditionalLocationArrayOutput{})
	pulumi.RegisterOutputType(AdditionalLocationResponseOutput{})
	pulumi.RegisterOutputType(AdditionalLocationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApiCreateOrUpdatePropertiesWsdlSelectorOutput{})
	pulumi.RegisterOutputType(ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceIdentityOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceSkuPropertiesOutput{})
	pulumi.RegisterOutputType(ApiManagementServiceSkuPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractPtrOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractResponseOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractResponsePtrOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsContractOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsContractPtrOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsContractResponseOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsContractResponsePtrOutput{})
	pulumi.RegisterOutputType(CertificateConfigurationOutput{})
	pulumi.RegisterOutputType(CertificateConfigurationArrayOutput{})
	pulumi.RegisterOutputType(CertificateConfigurationResponseOutput{})
	pulumi.RegisterOutputType(CertificateConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(CertificateInformationResponseOutput{})
	pulumi.RegisterOutputType(GroupContractResponseOutput{})
	pulumi.RegisterOutputType(GroupContractResponseArrayOutput{})
	pulumi.RegisterOutputType(HostnameConfigurationOutput{})
	pulumi.RegisterOutputType(HostnameConfigurationArrayOutput{})
	pulumi.RegisterOutputType(HostnameConfigurationResponseOutput{})
	pulumi.RegisterOutputType(HostnameConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(LoggerSamplingContractOutput{})
	pulumi.RegisterOutputType(LoggerSamplingContractPtrOutput{})
	pulumi.RegisterOutputType(LoggerSamplingContractResponseOutput{})
	pulumi.RegisterOutputType(LoggerSamplingContractResponsePtrOutput{})
	pulumi.RegisterOutputType(OAuth2AuthenticationSettingsContractOutput{})
	pulumi.RegisterOutputType(OAuth2AuthenticationSettingsContractPtrOutput{})
	pulumi.RegisterOutputType(OAuth2AuthenticationSettingsContractResponseOutput{})
	pulumi.RegisterOutputType(OAuth2AuthenticationSettingsContractResponsePtrOutput{})
	pulumi.RegisterOutputType(SubscriptionKeyParameterNamesContractOutput{})
	pulumi.RegisterOutputType(SubscriptionKeyParameterNamesContractPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionKeyParameterNamesContractResponseOutput{})
	pulumi.RegisterOutputType(SubscriptionKeyParameterNamesContractResponsePtrOutput{})
	pulumi.RegisterOutputType(UserIdentityContractResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityContractResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkConfigurationResponsePtrOutput{})
}
