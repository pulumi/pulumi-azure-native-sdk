// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the details of the backend specified by its identifier.
// Azure REST API version: 2023-09-01-preview.
//
// Other available API versions: 2024-05-01, 2024-06-01-preview.
func LookupWorkspaceBackend(ctx *pulumi.Context, args *LookupWorkspaceBackendArgs, opts ...pulumi.InvokeOption) (*LookupWorkspaceBackendResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkspaceBackendResult
	err := ctx.Invoke("azure-native:apimanagement:getWorkspaceBackend", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupWorkspaceBackendArgs struct {
	// Identifier of the Backend entity. Must be unique in the current API Management service instance.
	BackendId string `pulumi:"backendId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
	// Workspace identifier. Must be unique in the current API Management service instance.
	WorkspaceId string `pulumi:"workspaceId"`
}

// Backend details.
type LookupWorkspaceBackendResult struct {
	// Backend Circuit Breaker Configuration
	CircuitBreaker *BackendCircuitBreakerResponse `pulumi:"circuitBreaker"`
	// Backend Credentials Contract Properties
	Credentials *BackendCredentialsContractResponse `pulumi:"credentials"`
	// Backend Description.
	Description *string `pulumi:"description"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string                             `pulumi:"name"`
	Pool *BackendBaseParametersResponsePool `pulumi:"pool"`
	// Backend Properties contract
	Properties BackendPropertiesResponse `pulumi:"properties"`
	// Backend communication protocol.
	Protocol string `pulumi:"protocol"`
	// Backend gateway Contract Properties
	Proxy *BackendProxyContractResponse `pulumi:"proxy"`
	// Management Uri of the Resource in External System. This URL can be the Arm Resource Id of Logic Apps, Function Apps or API Apps.
	ResourceId *string `pulumi:"resourceId"`
	// Backend Title.
	Title *string `pulumi:"title"`
	// Backend TLS Properties
	Tls *BackendTlsPropertiesResponse `pulumi:"tls"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Runtime Url of the Backend.
	Url string `pulumi:"url"`
}

// Defaults sets the appropriate defaults for LookupWorkspaceBackendResult
func (val *LookupWorkspaceBackendResult) Defaults() *LookupWorkspaceBackendResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Tls = tmp.Tls.Defaults()

	return &tmp
}
func LookupWorkspaceBackendOutput(ctx *pulumi.Context, args LookupWorkspaceBackendOutputArgs, opts ...pulumi.InvokeOption) LookupWorkspaceBackendResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWorkspaceBackendResultOutput, error) {
			args := v.(LookupWorkspaceBackendArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:apimanagement:getWorkspaceBackend", args, LookupWorkspaceBackendResultOutput{}, options).(LookupWorkspaceBackendResultOutput), nil
		}).(LookupWorkspaceBackendResultOutput)
}

type LookupWorkspaceBackendOutputArgs struct {
	// Identifier of the Backend entity. Must be unique in the current API Management service instance.
	BackendId pulumi.StringInput `pulumi:"backendId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// Workspace identifier. Must be unique in the current API Management service instance.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (LookupWorkspaceBackendOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceBackendArgs)(nil)).Elem()
}

// Backend details.
type LookupWorkspaceBackendResultOutput struct{ *pulumi.OutputState }

func (LookupWorkspaceBackendResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceBackendResult)(nil)).Elem()
}

func (o LookupWorkspaceBackendResultOutput) ToLookupWorkspaceBackendResultOutput() LookupWorkspaceBackendResultOutput {
	return o
}

func (o LookupWorkspaceBackendResultOutput) ToLookupWorkspaceBackendResultOutputWithContext(ctx context.Context) LookupWorkspaceBackendResultOutput {
	return o
}

// Backend Circuit Breaker Configuration
func (o LookupWorkspaceBackendResultOutput) CircuitBreaker() BackendCircuitBreakerResponsePtrOutput {
	return o.ApplyT(func(v LookupWorkspaceBackendResult) *BackendCircuitBreakerResponse { return v.CircuitBreaker }).(BackendCircuitBreakerResponsePtrOutput)
}

// Backend Credentials Contract Properties
func (o LookupWorkspaceBackendResultOutput) Credentials() BackendCredentialsContractResponsePtrOutput {
	return o.ApplyT(func(v LookupWorkspaceBackendResult) *BackendCredentialsContractResponse { return v.Credentials }).(BackendCredentialsContractResponsePtrOutput)
}

// Backend Description.
func (o LookupWorkspaceBackendResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceBackendResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupWorkspaceBackendResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceBackendResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupWorkspaceBackendResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceBackendResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupWorkspaceBackendResultOutput) Pool() BackendBaseParametersResponsePoolPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceBackendResult) *BackendBaseParametersResponsePool { return v.Pool }).(BackendBaseParametersResponsePoolPtrOutput)
}

// Backend Properties contract
func (o LookupWorkspaceBackendResultOutput) Properties() BackendPropertiesResponseOutput {
	return o.ApplyT(func(v LookupWorkspaceBackendResult) BackendPropertiesResponse { return v.Properties }).(BackendPropertiesResponseOutput)
}

// Backend communication protocol.
func (o LookupWorkspaceBackendResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceBackendResult) string { return v.Protocol }).(pulumi.StringOutput)
}

// Backend gateway Contract Properties
func (o LookupWorkspaceBackendResultOutput) Proxy() BackendProxyContractResponsePtrOutput {
	return o.ApplyT(func(v LookupWorkspaceBackendResult) *BackendProxyContractResponse { return v.Proxy }).(BackendProxyContractResponsePtrOutput)
}

// Management Uri of the Resource in External System. This URL can be the Arm Resource Id of Logic Apps, Function Apps or API Apps.
func (o LookupWorkspaceBackendResultOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceBackendResult) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Backend Title.
func (o LookupWorkspaceBackendResultOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceBackendResult) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// Backend TLS Properties
func (o LookupWorkspaceBackendResultOutput) Tls() BackendTlsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupWorkspaceBackendResult) *BackendTlsPropertiesResponse { return v.Tls }).(BackendTlsPropertiesResponsePtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupWorkspaceBackendResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceBackendResult) string { return v.Type }).(pulumi.StringOutput)
}

// Runtime Url of the Backend.
func (o LookupWorkspaceBackendResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceBackendResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkspaceBackendResultOutput{})
}
