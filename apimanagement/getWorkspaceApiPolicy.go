// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get the policy configuration at the API level.
// Azure REST API version: 2022-09-01-preview.
func LookupWorkspaceApiPolicy(ctx *pulumi.Context, args *LookupWorkspaceApiPolicyArgs, opts ...pulumi.InvokeOption) (*LookupWorkspaceApiPolicyResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkspaceApiPolicyResult
	err := ctx.Invoke("azure-native:apimanagement:getWorkspaceApiPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupWorkspaceApiPolicyArgs struct {
	// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
	ApiId string `pulumi:"apiId"`
	// Policy Export Format.
	Format *string `pulumi:"format"`
	// The identifier of the Policy.
	PolicyId string `pulumi:"policyId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
	// Workspace identifier. Must be unique in the current API Management service instance.
	WorkspaceId string `pulumi:"workspaceId"`
}

// Policy Contract details.
type LookupWorkspaceApiPolicyResult struct {
	// Format of the policyContent.
	Format *string `pulumi:"format"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Contents of the Policy as defined by the format.
	Value string `pulumi:"value"`
}

// Defaults sets the appropriate defaults for LookupWorkspaceApiPolicyResult
func (val *LookupWorkspaceApiPolicyResult) Defaults() *LookupWorkspaceApiPolicyResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Format == nil {
		format_ := "xml"
		tmp.Format = &format_
	}
	return &tmp
}

func LookupWorkspaceApiPolicyOutput(ctx *pulumi.Context, args LookupWorkspaceApiPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupWorkspaceApiPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkspaceApiPolicyResult, error) {
			args := v.(LookupWorkspaceApiPolicyArgs)
			r, err := LookupWorkspaceApiPolicy(ctx, &args, opts...)
			var s LookupWorkspaceApiPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkspaceApiPolicyResultOutput)
}

type LookupWorkspaceApiPolicyOutputArgs struct {
	// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
	ApiId pulumi.StringInput `pulumi:"apiId"`
	// Policy Export Format.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The identifier of the Policy.
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// Workspace identifier. Must be unique in the current API Management service instance.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (LookupWorkspaceApiPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceApiPolicyArgs)(nil)).Elem()
}

// Policy Contract details.
type LookupWorkspaceApiPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupWorkspaceApiPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceApiPolicyResult)(nil)).Elem()
}

func (o LookupWorkspaceApiPolicyResultOutput) ToLookupWorkspaceApiPolicyResultOutput() LookupWorkspaceApiPolicyResultOutput {
	return o
}

func (o LookupWorkspaceApiPolicyResultOutput) ToLookupWorkspaceApiPolicyResultOutputWithContext(ctx context.Context) LookupWorkspaceApiPolicyResultOutput {
	return o
}

func (o LookupWorkspaceApiPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupWorkspaceApiPolicyResult] {
	return pulumix.Output[LookupWorkspaceApiPolicyResult]{
		OutputState: o.OutputState,
	}
}

// Format of the policyContent.
func (o LookupWorkspaceApiPolicyResultOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceApiPolicyResult) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupWorkspaceApiPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApiPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupWorkspaceApiPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApiPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupWorkspaceApiPolicyResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApiPolicyResult) string { return v.Type }).(pulumi.StringOutput)
}

// Contents of the Policy as defined by the format.
func (o LookupWorkspaceApiPolicyResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceApiPolicyResult) string { return v.Value }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkspaceApiPolicyResultOutput{})
}
