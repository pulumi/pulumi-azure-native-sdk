// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// API Operation details.
// Azure REST API version: 2022-09-01-preview.
type WorkspaceApiOperation struct {
	pulumi.CustomResourceState

	// Description of the operation. May include HTML formatting tags.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Operation Name.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
	Method pulumi.StringOutput `pulumi:"method"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Operation Policies
	Policies pulumi.StringPtrOutput `pulumi:"policies"`
	// An entity containing request details.
	Request RequestContractResponsePtrOutput `pulumi:"request"`
	// Array of Operation responses.
	Responses ResponseContractResponseArrayOutput `pulumi:"responses"`
	// Collection of URL template parameters.
	TemplateParameters ParameterContractResponseArrayOutput `pulumi:"templateParameters"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
	UrlTemplate pulumi.StringOutput `pulumi:"urlTemplate"`
}

// NewWorkspaceApiOperation registers a new resource with the given unique name, arguments, and options.
func NewWorkspaceApiOperation(ctx *pulumi.Context,
	name string, args *WorkspaceApiOperationArgs, opts ...pulumi.ResourceOption) (*WorkspaceApiOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Method == nil {
		return nil, errors.New("invalid value for required argument 'Method'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.UrlTemplate == nil {
		return nil, errors.New("invalid value for required argument 'UrlTemplate'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:apimanagement/v20220901preview:WorkspaceApiOperation"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20230301preview:WorkspaceApiOperation"),
		},
	})
	opts = append(opts, aliases)
	var resource WorkspaceApiOperation
	err := ctx.RegisterResource("azure-native:apimanagement:WorkspaceApiOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspaceApiOperation gets an existing WorkspaceApiOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspaceApiOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceApiOperationState, opts ...pulumi.ResourceOption) (*WorkspaceApiOperation, error) {
	var resource WorkspaceApiOperation
	err := ctx.ReadResource("azure-native:apimanagement:WorkspaceApiOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkspaceApiOperation resources.
type workspaceApiOperationState struct {
}

type WorkspaceApiOperationState struct {
}

func (WorkspaceApiOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceApiOperationState)(nil)).Elem()
}

type workspaceApiOperationArgs struct {
	// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
	ApiId string `pulumi:"apiId"`
	// Description of the operation. May include HTML formatting tags.
	Description *string `pulumi:"description"`
	// Operation Name.
	DisplayName string `pulumi:"displayName"`
	// A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
	Method string `pulumi:"method"`
	// Operation identifier within an API. Must be unique in the current API Management service instance.
	OperationId *string `pulumi:"operationId"`
	// Operation Policies
	Policies *string `pulumi:"policies"`
	// An entity containing request details.
	Request *RequestContract `pulumi:"request"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Array of Operation responses.
	Responses []ResponseContract `pulumi:"responses"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
	// Collection of URL template parameters.
	TemplateParameters []ParameterContract `pulumi:"templateParameters"`
	// Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
	UrlTemplate string `pulumi:"urlTemplate"`
	// Workspace identifier. Must be unique in the current API Management service instance.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a WorkspaceApiOperation resource.
type WorkspaceApiOperationArgs struct {
	// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
	ApiId pulumi.StringInput
	// Description of the operation. May include HTML formatting tags.
	Description pulumi.StringPtrInput
	// Operation Name.
	DisplayName pulumi.StringInput
	// A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
	Method pulumi.StringInput
	// Operation identifier within an API. Must be unique in the current API Management service instance.
	OperationId pulumi.StringPtrInput
	// Operation Policies
	Policies pulumi.StringPtrInput
	// An entity containing request details.
	Request RequestContractPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Array of Operation responses.
	Responses ResponseContractArrayInput
	// The name of the API Management service.
	ServiceName pulumi.StringInput
	// Collection of URL template parameters.
	TemplateParameters ParameterContractArrayInput
	// Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
	UrlTemplate pulumi.StringInput
	// Workspace identifier. Must be unique in the current API Management service instance.
	WorkspaceId pulumi.StringInput
}

func (WorkspaceApiOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceApiOperationArgs)(nil)).Elem()
}

type WorkspaceApiOperationInput interface {
	pulumi.Input

	ToWorkspaceApiOperationOutput() WorkspaceApiOperationOutput
	ToWorkspaceApiOperationOutputWithContext(ctx context.Context) WorkspaceApiOperationOutput
}

func (*WorkspaceApiOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceApiOperation)(nil)).Elem()
}

func (i *WorkspaceApiOperation) ToWorkspaceApiOperationOutput() WorkspaceApiOperationOutput {
	return i.ToWorkspaceApiOperationOutputWithContext(context.Background())
}

func (i *WorkspaceApiOperation) ToWorkspaceApiOperationOutputWithContext(ctx context.Context) WorkspaceApiOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceApiOperationOutput)
}

type WorkspaceApiOperationOutput struct{ *pulumi.OutputState }

func (WorkspaceApiOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceApiOperation)(nil)).Elem()
}

func (o WorkspaceApiOperationOutput) ToWorkspaceApiOperationOutput() WorkspaceApiOperationOutput {
	return o
}

func (o WorkspaceApiOperationOutput) ToWorkspaceApiOperationOutputWithContext(ctx context.Context) WorkspaceApiOperationOutput {
	return o
}

// Description of the operation. May include HTML formatting tags.
func (o WorkspaceApiOperationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceApiOperation) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Operation Name.
func (o WorkspaceApiOperationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApiOperation) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.
func (o WorkspaceApiOperationOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApiOperation) pulumi.StringOutput { return v.Method }).(pulumi.StringOutput)
}

// The name of the resource
func (o WorkspaceApiOperationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApiOperation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Operation Policies
func (o WorkspaceApiOperationOutput) Policies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceApiOperation) pulumi.StringPtrOutput { return v.Policies }).(pulumi.StringPtrOutput)
}

// An entity containing request details.
func (o WorkspaceApiOperationOutput) Request() RequestContractResponsePtrOutput {
	return o.ApplyT(func(v *WorkspaceApiOperation) RequestContractResponsePtrOutput { return v.Request }).(RequestContractResponsePtrOutput)
}

// Array of Operation responses.
func (o WorkspaceApiOperationOutput) Responses() ResponseContractResponseArrayOutput {
	return o.ApplyT(func(v *WorkspaceApiOperation) ResponseContractResponseArrayOutput { return v.Responses }).(ResponseContractResponseArrayOutput)
}

// Collection of URL template parameters.
func (o WorkspaceApiOperationOutput) TemplateParameters() ParameterContractResponseArrayOutput {
	return o.ApplyT(func(v *WorkspaceApiOperation) ParameterContractResponseArrayOutput { return v.TemplateParameters }).(ParameterContractResponseArrayOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o WorkspaceApiOperationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApiOperation) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}
func (o WorkspaceApiOperationOutput) UrlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApiOperation) pulumi.StringOutput { return v.UrlTemplate }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(WorkspaceApiOperationOutput{})
}
