// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the product link for the client application.
//
// Uses Azure REST API version 2024-10-01-preview.
func LookupClientApplicationProductLink(ctx *pulumi.Context, args *LookupClientApplicationProductLinkArgs, opts ...pulumi.InvokeOption) (*LookupClientApplicationProductLinkResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupClientApplicationProductLinkResult
	err := ctx.Invoke("azure-native:apimanagement:getClientApplicationProductLink", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupClientApplicationProductLinkArgs struct {
	// Client Application identifier. Must be unique in the current API Management service instance.
	ClientApplicationId string `pulumi:"clientApplicationId"`
	// Client Application Product Link identifier. Must be unique in the current API Management service instance.
	ClientApplicationProductLinkId string `pulumi:"clientApplicationProductLinkId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
}

// Specifies Client Application - Product link assignment
type LookupClientApplicationProductLinkResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The unique resource identifier of the Product.
	ProductId string `pulumi:"productId"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupClientApplicationProductLinkOutput(ctx *pulumi.Context, args LookupClientApplicationProductLinkOutputArgs, opts ...pulumi.InvokeOption) LookupClientApplicationProductLinkResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupClientApplicationProductLinkResultOutput, error) {
			args := v.(LookupClientApplicationProductLinkArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:apimanagement:getClientApplicationProductLink", args, LookupClientApplicationProductLinkResultOutput{}, options).(LookupClientApplicationProductLinkResultOutput), nil
		}).(LookupClientApplicationProductLinkResultOutput)
}

type LookupClientApplicationProductLinkOutputArgs struct {
	// Client Application identifier. Must be unique in the current API Management service instance.
	ClientApplicationId pulumi.StringInput `pulumi:"clientApplicationId"`
	// Client Application Product Link identifier. Must be unique in the current API Management service instance.
	ClientApplicationProductLinkId pulumi.StringInput `pulumi:"clientApplicationProductLinkId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupClientApplicationProductLinkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClientApplicationProductLinkArgs)(nil)).Elem()
}

// Specifies Client Application - Product link assignment
type LookupClientApplicationProductLinkResultOutput struct{ *pulumi.OutputState }

func (LookupClientApplicationProductLinkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClientApplicationProductLinkResult)(nil)).Elem()
}

func (o LookupClientApplicationProductLinkResultOutput) ToLookupClientApplicationProductLinkResultOutput() LookupClientApplicationProductLinkResultOutput {
	return o
}

func (o LookupClientApplicationProductLinkResultOutput) ToLookupClientApplicationProductLinkResultOutputWithContext(ctx context.Context) LookupClientApplicationProductLinkResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupClientApplicationProductLinkResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClientApplicationProductLinkResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupClientApplicationProductLinkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClientApplicationProductLinkResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupClientApplicationProductLinkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClientApplicationProductLinkResult) string { return v.Name }).(pulumi.StringOutput)
}

// The unique resource identifier of the Product.
func (o LookupClientApplicationProductLinkResultOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClientApplicationProductLinkResult) string { return v.ProductId }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupClientApplicationProductLinkResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClientApplicationProductLinkResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClientApplicationProductLinkResultOutput{})
}
