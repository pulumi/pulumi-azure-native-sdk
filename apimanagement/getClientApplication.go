// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the details of the client application specified by its identifier.
//
// Uses Azure REST API version 2024-10-01-preview.
func LookupClientApplication(ctx *pulumi.Context, args *LookupClientApplicationArgs, opts ...pulumi.InvokeOption) (*LookupClientApplicationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupClientApplicationResult
	err := ctx.Invoke("azure-native:apimanagement:getClientApplication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupClientApplicationArgs struct {
	// Client Application identifier. Must be unique in the current API Management service instance.
	ClientApplicationId string `pulumi:"clientApplicationId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
}

// Client application details.
type LookupClientApplicationResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Client application description.
	Description *string `pulumi:"description"`
	// Client application name.
	DisplayName string `pulumi:"displayName"`
	// Microsoft EntraID Application ID (Client ID). This is the value that is used to identify the application when it is requesting access tokens from Microsoft EntraID. This property is read-only and will be set by the system when the application is created.
	EntraApplicationId string `pulumi:"entraApplicationId"`
	// Tenant ID is a unique identifier (a GUID) for an organization directory in Microsoft’s cloud. It’s used to identify tenants across Microsoft services.
	EntraTenantId string `pulumi:"entraTenantId"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// A resource identifier for the user who owns the application.
	OwnerId string `pulumi:"ownerId"`
	// Client application state. The value derives the state of an application based on the statuses of its associated ClientApplicationProductLinks.
	State string `pulumi:"state"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupClientApplicationOutput(ctx *pulumi.Context, args LookupClientApplicationOutputArgs, opts ...pulumi.InvokeOption) LookupClientApplicationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupClientApplicationResultOutput, error) {
			args := v.(LookupClientApplicationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:apimanagement:getClientApplication", args, LookupClientApplicationResultOutput{}, options).(LookupClientApplicationResultOutput), nil
		}).(LookupClientApplicationResultOutput)
}

type LookupClientApplicationOutputArgs struct {
	// Client Application identifier. Must be unique in the current API Management service instance.
	ClientApplicationId pulumi.StringInput `pulumi:"clientApplicationId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupClientApplicationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClientApplicationArgs)(nil)).Elem()
}

// Client application details.
type LookupClientApplicationResultOutput struct{ *pulumi.OutputState }

func (LookupClientApplicationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClientApplicationResult)(nil)).Elem()
}

func (o LookupClientApplicationResultOutput) ToLookupClientApplicationResultOutput() LookupClientApplicationResultOutput {
	return o
}

func (o LookupClientApplicationResultOutput) ToLookupClientApplicationResultOutputWithContext(ctx context.Context) LookupClientApplicationResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupClientApplicationResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClientApplicationResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Client application description.
func (o LookupClientApplicationResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClientApplicationResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Client application name.
func (o LookupClientApplicationResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClientApplicationResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Microsoft EntraID Application ID (Client ID). This is the value that is used to identify the application when it is requesting access tokens from Microsoft EntraID. This property is read-only and will be set by the system when the application is created.
func (o LookupClientApplicationResultOutput) EntraApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClientApplicationResult) string { return v.EntraApplicationId }).(pulumi.StringOutput)
}

// Tenant ID is a unique identifier (a GUID) for an organization directory in Microsoft’s cloud. It’s used to identify tenants across Microsoft services.
func (o LookupClientApplicationResultOutput) EntraTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClientApplicationResult) string { return v.EntraTenantId }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupClientApplicationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClientApplicationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupClientApplicationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClientApplicationResult) string { return v.Name }).(pulumi.StringOutput)
}

// A resource identifier for the user who owns the application.
func (o LookupClientApplicationResultOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClientApplicationResult) string { return v.OwnerId }).(pulumi.StringOutput)
}

// Client application state. The value derives the state of an application based on the statuses of its associated ClientApplicationProductLinks.
func (o LookupClientApplicationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClientApplicationResult) string { return v.State }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupClientApplicationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClientApplicationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClientApplicationResultOutput{})
}
