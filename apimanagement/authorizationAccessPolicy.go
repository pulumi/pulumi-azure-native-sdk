// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Authorization access policy contract.
// Azure REST API version: 2022-08-01.
type AuthorizationAccessPolicy struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The Object Id
	ObjectId pulumi.StringPtrOutput `pulumi:"objectId"`
	// The Tenant Id
	TenantId pulumi.StringPtrOutput `pulumi:"tenantId"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAuthorizationAccessPolicy registers a new resource with the given unique name, arguments, and options.
func NewAuthorizationAccessPolicy(ctx *pulumi.Context,
	name string, args *AuthorizationAccessPolicyArgs, opts ...pulumi.ResourceOption) (*AuthorizationAccessPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthorizationId == nil {
		return nil, errors.New("invalid value for required argument 'AuthorizationId'")
	}
	if args.AuthorizationProviderId == nil {
		return nil, errors.New("invalid value for required argument 'AuthorizationProviderId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:apimanagement/v20220401preview:AuthorizationAccessPolicy"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20220801:AuthorizationAccessPolicy"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20220901preview:AuthorizationAccessPolicy"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20230301preview:AuthorizationAccessPolicy"),
		},
	})
	opts = append(opts, aliases)
	var resource AuthorizationAccessPolicy
	err := ctx.RegisterResource("azure-native:apimanagement:AuthorizationAccessPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthorizationAccessPolicy gets an existing AuthorizationAccessPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthorizationAccessPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthorizationAccessPolicyState, opts ...pulumi.ResourceOption) (*AuthorizationAccessPolicy, error) {
	var resource AuthorizationAccessPolicy
	err := ctx.ReadResource("azure-native:apimanagement:AuthorizationAccessPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthorizationAccessPolicy resources.
type authorizationAccessPolicyState struct {
}

type AuthorizationAccessPolicyState struct {
}

func (AuthorizationAccessPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizationAccessPolicyState)(nil)).Elem()
}

type authorizationAccessPolicyArgs struct {
	// Identifier of the authorization access policy.
	AuthorizationAccessPolicyId *string `pulumi:"authorizationAccessPolicyId"`
	// Identifier of the authorization.
	AuthorizationId string `pulumi:"authorizationId"`
	// Identifier of the authorization provider.
	AuthorizationProviderId string `pulumi:"authorizationProviderId"`
	// The Object Id
	ObjectId *string `pulumi:"objectId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
	// The Tenant Id
	TenantId *string `pulumi:"tenantId"`
}

// The set of arguments for constructing a AuthorizationAccessPolicy resource.
type AuthorizationAccessPolicyArgs struct {
	// Identifier of the authorization access policy.
	AuthorizationAccessPolicyId pulumi.StringPtrInput
	// Identifier of the authorization.
	AuthorizationId pulumi.StringInput
	// Identifier of the authorization provider.
	AuthorizationProviderId pulumi.StringInput
	// The Object Id
	ObjectId pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the API Management service.
	ServiceName pulumi.StringInput
	// The Tenant Id
	TenantId pulumi.StringPtrInput
}

func (AuthorizationAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizationAccessPolicyArgs)(nil)).Elem()
}

type AuthorizationAccessPolicyInput interface {
	pulumi.Input

	ToAuthorizationAccessPolicyOutput() AuthorizationAccessPolicyOutput
	ToAuthorizationAccessPolicyOutputWithContext(ctx context.Context) AuthorizationAccessPolicyOutput
}

func (*AuthorizationAccessPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationAccessPolicy)(nil)).Elem()
}

func (i *AuthorizationAccessPolicy) ToAuthorizationAccessPolicyOutput() AuthorizationAccessPolicyOutput {
	return i.ToAuthorizationAccessPolicyOutputWithContext(context.Background())
}

func (i *AuthorizationAccessPolicy) ToAuthorizationAccessPolicyOutputWithContext(ctx context.Context) AuthorizationAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationAccessPolicyOutput)
}

type AuthorizationAccessPolicyOutput struct{ *pulumi.OutputState }

func (AuthorizationAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationAccessPolicy)(nil)).Elem()
}

func (o AuthorizationAccessPolicyOutput) ToAuthorizationAccessPolicyOutput() AuthorizationAccessPolicyOutput {
	return o
}

func (o AuthorizationAccessPolicyOutput) ToAuthorizationAccessPolicyOutputWithContext(ctx context.Context) AuthorizationAccessPolicyOutput {
	return o
}

// The name of the resource
func (o AuthorizationAccessPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizationAccessPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Object Id
func (o AuthorizationAccessPolicyOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationAccessPolicy) pulumi.StringPtrOutput { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The Tenant Id
func (o AuthorizationAccessPolicyOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizationAccessPolicy) pulumi.StringPtrOutput { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AuthorizationAccessPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizationAccessPolicy) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthorizationAccessPolicyOutput{})
}
