// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets the API link for the product.
func LookupProductApiLink(ctx *pulumi.Context, args *LookupProductApiLinkArgs, opts ...pulumi.InvokeOption) (*LookupProductApiLinkResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupProductApiLinkResult
	err := ctx.Invoke("azure-native:apimanagement/v20220901preview:getProductApiLink", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupProductApiLinkArgs struct {
	// Product-API link identifier. Must be unique in the current API Management service instance.
	ApiLinkId string `pulumi:"apiLinkId"`
	// Product identifier. Must be unique in the current API Management service instance.
	ProductId string `pulumi:"productId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
}

// Product-API link details.
type LookupProductApiLinkResult struct {
	// Full resource Id of an API.
	ApiId string `pulumi:"apiId"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupProductApiLinkOutput(ctx *pulumi.Context, args LookupProductApiLinkOutputArgs, opts ...pulumi.InvokeOption) LookupProductApiLinkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProductApiLinkResult, error) {
			args := v.(LookupProductApiLinkArgs)
			r, err := LookupProductApiLink(ctx, &args, opts...)
			var s LookupProductApiLinkResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProductApiLinkResultOutput)
}

type LookupProductApiLinkOutputArgs struct {
	// Product-API link identifier. Must be unique in the current API Management service instance.
	ApiLinkId pulumi.StringInput `pulumi:"apiLinkId"`
	// Product identifier. Must be unique in the current API Management service instance.
	ProductId pulumi.StringInput `pulumi:"productId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupProductApiLinkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProductApiLinkArgs)(nil)).Elem()
}

// Product-API link details.
type LookupProductApiLinkResultOutput struct{ *pulumi.OutputState }

func (LookupProductApiLinkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProductApiLinkResult)(nil)).Elem()
}

func (o LookupProductApiLinkResultOutput) ToLookupProductApiLinkResultOutput() LookupProductApiLinkResultOutput {
	return o
}

func (o LookupProductApiLinkResultOutput) ToLookupProductApiLinkResultOutputWithContext(ctx context.Context) LookupProductApiLinkResultOutput {
	return o
}

func (o LookupProductApiLinkResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupProductApiLinkResult] {
	return pulumix.Output[LookupProductApiLinkResult]{
		OutputState: o.OutputState,
	}
}

// Full resource Id of an API.
func (o LookupProductApiLinkResultOutput) ApiId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductApiLinkResult) string { return v.ApiId }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupProductApiLinkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductApiLinkResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupProductApiLinkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductApiLinkResult) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupProductApiLinkResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductApiLinkResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProductApiLinkResultOutput{})
}
