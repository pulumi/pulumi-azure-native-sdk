// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the policy configuration at the API level.
func LookupWorkspacePolicy(ctx *pulumi.Context, args *LookupWorkspacePolicyArgs, opts ...pulumi.InvokeOption) (*LookupWorkspacePolicyResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkspacePolicyResult
	err := ctx.Invoke("azure-native:apimanagement/v20220901preview:getWorkspacePolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupWorkspacePolicyArgs struct {
	// Policy Export Format.
	Format *string `pulumi:"format"`
	// The identifier of the Policy.
	PolicyId string `pulumi:"policyId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
	// Workspace identifier. Must be unique in the current API Management service instance.
	WorkspaceId string `pulumi:"workspaceId"`
}

// Policy Contract details.
type LookupWorkspacePolicyResult struct {
	// Format of the policyContent.
	Format *string `pulumi:"format"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Contents of the Policy as defined by the format.
	Value string `pulumi:"value"`
}

// Defaults sets the appropriate defaults for LookupWorkspacePolicyResult
func (val *LookupWorkspacePolicyResult) Defaults() *LookupWorkspacePolicyResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Format == nil {
		format_ := "xml"
		tmp.Format = &format_
	}
	return &tmp
}

func LookupWorkspacePolicyOutput(ctx *pulumi.Context, args LookupWorkspacePolicyOutputArgs, opts ...pulumi.InvokeOption) LookupWorkspacePolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkspacePolicyResult, error) {
			args := v.(LookupWorkspacePolicyArgs)
			r, err := LookupWorkspacePolicy(ctx, &args, opts...)
			var s LookupWorkspacePolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkspacePolicyResultOutput)
}

type LookupWorkspacePolicyOutputArgs struct {
	// Policy Export Format.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The identifier of the Policy.
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// Workspace identifier. Must be unique in the current API Management service instance.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (LookupWorkspacePolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspacePolicyArgs)(nil)).Elem()
}

// Policy Contract details.
type LookupWorkspacePolicyResultOutput struct{ *pulumi.OutputState }

func (LookupWorkspacePolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspacePolicyResult)(nil)).Elem()
}

func (o LookupWorkspacePolicyResultOutput) ToLookupWorkspacePolicyResultOutput() LookupWorkspacePolicyResultOutput {
	return o
}

func (o LookupWorkspacePolicyResultOutput) ToLookupWorkspacePolicyResultOutputWithContext(ctx context.Context) LookupWorkspacePolicyResultOutput {
	return o
}

// Format of the policyContent.
func (o LookupWorkspacePolicyResultOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspacePolicyResult) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupWorkspacePolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspacePolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupWorkspacePolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspacePolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupWorkspacePolicyResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspacePolicyResult) string { return v.Type }).(pulumi.StringOutput)
}

// Contents of the Policy as defined by the format.
func (o LookupWorkspacePolicyResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspacePolicyResult) string { return v.Value }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkspacePolicyResultOutput{})
}
