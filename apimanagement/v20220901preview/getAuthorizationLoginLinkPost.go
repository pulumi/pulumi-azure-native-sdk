// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets authorization login links.
func GetAuthorizationLoginLinkPost(ctx *pulumi.Context, args *GetAuthorizationLoginLinkPostArgs, opts ...pulumi.InvokeOption) (*GetAuthorizationLoginLinkPostResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetAuthorizationLoginLinkPostResult
	err := ctx.Invoke("azure-native:apimanagement/v20220901preview:getAuthorizationLoginLinkPost", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetAuthorizationLoginLinkPostArgs struct {
	// Identifier of the authorization.
	AuthorizationId string `pulumi:"authorizationId"`
	// Identifier of the authorization provider.
	AuthorizationProviderId string `pulumi:"authorizationProviderId"`
	// The redirect URL after login has completed.
	PostLoginRedirectUrl *string `pulumi:"postLoginRedirectUrl"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
}

// Authorization login response contract.
type GetAuthorizationLoginLinkPostResult struct {
	// The login link
	LoginLink *string `pulumi:"loginLink"`
}

func GetAuthorizationLoginLinkPostOutput(ctx *pulumi.Context, args GetAuthorizationLoginLinkPostOutputArgs, opts ...pulumi.InvokeOption) GetAuthorizationLoginLinkPostResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAuthorizationLoginLinkPostResult, error) {
			args := v.(GetAuthorizationLoginLinkPostArgs)
			r, err := GetAuthorizationLoginLinkPost(ctx, &args, opts...)
			var s GetAuthorizationLoginLinkPostResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAuthorizationLoginLinkPostResultOutput)
}

type GetAuthorizationLoginLinkPostOutputArgs struct {
	// Identifier of the authorization.
	AuthorizationId pulumi.StringInput `pulumi:"authorizationId"`
	// Identifier of the authorization provider.
	AuthorizationProviderId pulumi.StringInput `pulumi:"authorizationProviderId"`
	// The redirect URL after login has completed.
	PostLoginRedirectUrl pulumi.StringPtrInput `pulumi:"postLoginRedirectUrl"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetAuthorizationLoginLinkPostOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationLoginLinkPostArgs)(nil)).Elem()
}

// Authorization login response contract.
type GetAuthorizationLoginLinkPostResultOutput struct{ *pulumi.OutputState }

func (GetAuthorizationLoginLinkPostResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationLoginLinkPostResult)(nil)).Elem()
}

func (o GetAuthorizationLoginLinkPostResultOutput) ToGetAuthorizationLoginLinkPostResultOutput() GetAuthorizationLoginLinkPostResultOutput {
	return o
}

func (o GetAuthorizationLoginLinkPostResultOutput) ToGetAuthorizationLoginLinkPostResultOutputWithContext(ctx context.Context) GetAuthorizationLoginLinkPostResultOutput {
	return o
}

func (o GetAuthorizationLoginLinkPostResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetAuthorizationLoginLinkPostResult] {
	return pulumix.Output[GetAuthorizationLoginLinkPostResult]{
		OutputState: o.OutputState,
	}
}

// The login link
func (o GetAuthorizationLoginLinkPostResultOutput) LoginLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAuthorizationLoginLinkPostResult) *string { return v.LoginLink }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAuthorizationLoginLinkPostResultOutput{})
}
