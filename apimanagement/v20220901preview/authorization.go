// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220901preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Authorization contract.
type Authorization struct {
	pulumi.CustomResourceState

	// Authorization type options
	AuthorizationType pulumi.StringPtrOutput `pulumi:"authorizationType"`
	// Authorization error details.
	Error AuthorizationErrorResponsePtrOutput `pulumi:"error"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// OAuth2 grant type options
	OAuth2GrantType pulumi.StringPtrOutput `pulumi:"oAuth2GrantType"`
	// Authorization parameters
	Parameters pulumi.StringMapOutput `pulumi:"parameters"`
	// Status of the Authorization
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAuthorization registers a new resource with the given unique name, arguments, and options.
func NewAuthorization(ctx *pulumi.Context,
	name string, args *AuthorizationArgs, opts ...pulumi.ResourceOption) (*Authorization, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthorizationProviderId == nil {
		return nil, errors.New("invalid value for required argument 'AuthorizationProviderId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:apimanagement:Authorization"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20220401preview:Authorization"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20220801:Authorization"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20230301preview:Authorization"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20230501preview:Authorization"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Authorization
	err := ctx.RegisterResource("azure-native:apimanagement/v20220901preview:Authorization", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthorization gets an existing Authorization resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthorization(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthorizationState, opts ...pulumi.ResourceOption) (*Authorization, error) {
	var resource Authorization
	err := ctx.ReadResource("azure-native:apimanagement/v20220901preview:Authorization", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Authorization resources.
type authorizationState struct {
}

type AuthorizationState struct {
}

func (AuthorizationState) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizationState)(nil)).Elem()
}

type authorizationArgs struct {
	// Identifier of the authorization.
	AuthorizationId *string `pulumi:"authorizationId"`
	// Identifier of the authorization provider.
	AuthorizationProviderId string `pulumi:"authorizationProviderId"`
	// Authorization type options
	AuthorizationType *string `pulumi:"authorizationType"`
	// Authorization error details.
	Error *AuthorizationError `pulumi:"error"`
	// OAuth2 grant type options
	OAuth2GrantType *string `pulumi:"oAuth2GrantType"`
	// Authorization parameters
	Parameters map[string]string `pulumi:"parameters"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
	// Status of the Authorization
	Status *string `pulumi:"status"`
}

// The set of arguments for constructing a Authorization resource.
type AuthorizationArgs struct {
	// Identifier of the authorization.
	AuthorizationId pulumi.StringPtrInput
	// Identifier of the authorization provider.
	AuthorizationProviderId pulumi.StringInput
	// Authorization type options
	AuthorizationType pulumi.StringPtrInput
	// Authorization error details.
	Error AuthorizationErrorPtrInput
	// OAuth2 grant type options
	OAuth2GrantType pulumi.StringPtrInput
	// Authorization parameters
	Parameters pulumi.StringMapInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the API Management service.
	ServiceName pulumi.StringInput
	// Status of the Authorization
	Status pulumi.StringPtrInput
}

func (AuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizationArgs)(nil)).Elem()
}

type AuthorizationInput interface {
	pulumi.Input

	ToAuthorizationOutput() AuthorizationOutput
	ToAuthorizationOutputWithContext(ctx context.Context) AuthorizationOutput
}

func (*Authorization) ElementType() reflect.Type {
	return reflect.TypeOf((**Authorization)(nil)).Elem()
}

func (i *Authorization) ToAuthorizationOutput() AuthorizationOutput {
	return i.ToAuthorizationOutputWithContext(context.Background())
}

func (i *Authorization) ToAuthorizationOutputWithContext(ctx context.Context) AuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationOutput)
}

type AuthorizationOutput struct{ *pulumi.OutputState }

func (AuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Authorization)(nil)).Elem()
}

func (o AuthorizationOutput) ToAuthorizationOutput() AuthorizationOutput {
	return o
}

func (o AuthorizationOutput) ToAuthorizationOutputWithContext(ctx context.Context) AuthorizationOutput {
	return o
}

// Authorization type options
func (o AuthorizationOutput) AuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authorization) pulumi.StringPtrOutput { return v.AuthorizationType }).(pulumi.StringPtrOutput)
}

// Authorization error details.
func (o AuthorizationOutput) Error() AuthorizationErrorResponsePtrOutput {
	return o.ApplyT(func(v *Authorization) AuthorizationErrorResponsePtrOutput { return v.Error }).(AuthorizationErrorResponsePtrOutput)
}

// The name of the resource
func (o AuthorizationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Authorization) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// OAuth2 grant type options
func (o AuthorizationOutput) OAuth2GrantType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authorization) pulumi.StringPtrOutput { return v.OAuth2GrantType }).(pulumi.StringPtrOutput)
}

// Authorization parameters
func (o AuthorizationOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Authorization) pulumi.StringMapOutput { return v.Parameters }).(pulumi.StringMapOutput)
}

// Status of the Authorization
func (o AuthorizationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authorization) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AuthorizationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Authorization) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthorizationOutput{})
}
