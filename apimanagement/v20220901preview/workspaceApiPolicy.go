// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220901preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Policy Contract details.
type WorkspaceApiPolicy struct {
	pulumi.CustomResourceState

	// Format of the policyContent.
	Format pulumi.StringPtrOutput `pulumi:"format"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Contents of the Policy as defined by the format.
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewWorkspaceApiPolicy registers a new resource with the given unique name, arguments, and options.
func NewWorkspaceApiPolicy(ctx *pulumi.Context,
	name string, args *WorkspaceApiPolicyArgs, opts ...pulumi.ResourceOption) (*WorkspaceApiPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	if args.Format == nil {
		args.Format = pulumi.StringPtr("xml")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:apimanagement:WorkspaceApiPolicy"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20230301preview:WorkspaceApiPolicy"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource WorkspaceApiPolicy
	err := ctx.RegisterResource("azure-native:apimanagement/v20220901preview:WorkspaceApiPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspaceApiPolicy gets an existing WorkspaceApiPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspaceApiPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceApiPolicyState, opts ...pulumi.ResourceOption) (*WorkspaceApiPolicy, error) {
	var resource WorkspaceApiPolicy
	err := ctx.ReadResource("azure-native:apimanagement/v20220901preview:WorkspaceApiPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkspaceApiPolicy resources.
type workspaceApiPolicyState struct {
}

type WorkspaceApiPolicyState struct {
}

func (WorkspaceApiPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceApiPolicyState)(nil)).Elem()
}

type workspaceApiPolicyArgs struct {
	// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
	ApiId string `pulumi:"apiId"`
	// Format of the policyContent.
	Format *string `pulumi:"format"`
	// The identifier of the Policy.
	PolicyId *string `pulumi:"policyId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
	// Contents of the Policy as defined by the format.
	Value string `pulumi:"value"`
	// Workspace identifier. Must be unique in the current API Management service instance.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a WorkspaceApiPolicy resource.
type WorkspaceApiPolicyArgs struct {
	// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
	ApiId pulumi.StringInput
	// Format of the policyContent.
	Format pulumi.StringPtrInput
	// The identifier of the Policy.
	PolicyId pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the API Management service.
	ServiceName pulumi.StringInput
	// Contents of the Policy as defined by the format.
	Value pulumi.StringInput
	// Workspace identifier. Must be unique in the current API Management service instance.
	WorkspaceId pulumi.StringInput
}

func (WorkspaceApiPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceApiPolicyArgs)(nil)).Elem()
}

type WorkspaceApiPolicyInput interface {
	pulumi.Input

	ToWorkspaceApiPolicyOutput() WorkspaceApiPolicyOutput
	ToWorkspaceApiPolicyOutputWithContext(ctx context.Context) WorkspaceApiPolicyOutput
}

func (*WorkspaceApiPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceApiPolicy)(nil)).Elem()
}

func (i *WorkspaceApiPolicy) ToWorkspaceApiPolicyOutput() WorkspaceApiPolicyOutput {
	return i.ToWorkspaceApiPolicyOutputWithContext(context.Background())
}

func (i *WorkspaceApiPolicy) ToWorkspaceApiPolicyOutputWithContext(ctx context.Context) WorkspaceApiPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceApiPolicyOutput)
}

type WorkspaceApiPolicyOutput struct{ *pulumi.OutputState }

func (WorkspaceApiPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceApiPolicy)(nil)).Elem()
}

func (o WorkspaceApiPolicyOutput) ToWorkspaceApiPolicyOutput() WorkspaceApiPolicyOutput {
	return o
}

func (o WorkspaceApiPolicyOutput) ToWorkspaceApiPolicyOutputWithContext(ctx context.Context) WorkspaceApiPolicyOutput {
	return o
}

// Format of the policyContent.
func (o WorkspaceApiPolicyOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceApiPolicy) pulumi.StringPtrOutput { return v.Format }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o WorkspaceApiPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApiPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o WorkspaceApiPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApiPolicy) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Contents of the Policy as defined by the format.
func (o WorkspaceApiPolicyOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApiPolicy) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(WorkspaceApiPolicyOutput{})
}
