// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Tag-product link details.
// Azure REST API version: 2022-09-01-preview.
type TagProductLink struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Full resource Id of a product.
	ProductId pulumi.StringOutput `pulumi:"productId"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewTagProductLink registers a new resource with the given unique name, arguments, and options.
func NewTagProductLink(ctx *pulumi.Context,
	name string, args *TagProductLinkArgs, opts ...pulumi.ResourceOption) (*TagProductLink, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProductId == nil {
		return nil, errors.New("invalid value for required argument 'ProductId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.TagId == nil {
		return nil, errors.New("invalid value for required argument 'TagId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:apimanagement/v20220901preview:TagProductLink"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20230301preview:TagProductLink"),
		},
	})
	opts = append(opts, aliases)
	var resource TagProductLink
	err := ctx.RegisterResource("azure-native:apimanagement:TagProductLink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTagProductLink gets an existing TagProductLink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTagProductLink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TagProductLinkState, opts ...pulumi.ResourceOption) (*TagProductLink, error) {
	var resource TagProductLink
	err := ctx.ReadResource("azure-native:apimanagement:TagProductLink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TagProductLink resources.
type tagProductLinkState struct {
}

type TagProductLinkState struct {
}

func (TagProductLinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*tagProductLinkState)(nil)).Elem()
}

type tagProductLinkArgs struct {
	// Full resource Id of a product.
	ProductId string `pulumi:"productId"`
	// Tag-product link identifier. Must be unique in the current API Management service instance.
	ProductLinkId *string `pulumi:"productLinkId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
	// Tag identifier. Must be unique in the current API Management service instance.
	TagId string `pulumi:"tagId"`
}

// The set of arguments for constructing a TagProductLink resource.
type TagProductLinkArgs struct {
	// Full resource Id of a product.
	ProductId pulumi.StringInput
	// Tag-product link identifier. Must be unique in the current API Management service instance.
	ProductLinkId pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the API Management service.
	ServiceName pulumi.StringInput
	// Tag identifier. Must be unique in the current API Management service instance.
	TagId pulumi.StringInput
}

func (TagProductLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tagProductLinkArgs)(nil)).Elem()
}

type TagProductLinkInput interface {
	pulumi.Input

	ToTagProductLinkOutput() TagProductLinkOutput
	ToTagProductLinkOutputWithContext(ctx context.Context) TagProductLinkOutput
}

func (*TagProductLink) ElementType() reflect.Type {
	return reflect.TypeOf((**TagProductLink)(nil)).Elem()
}

func (i *TagProductLink) ToTagProductLinkOutput() TagProductLinkOutput {
	return i.ToTagProductLinkOutputWithContext(context.Background())
}

func (i *TagProductLink) ToTagProductLinkOutputWithContext(ctx context.Context) TagProductLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagProductLinkOutput)
}

type TagProductLinkOutput struct{ *pulumi.OutputState }

func (TagProductLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagProductLink)(nil)).Elem()
}

func (o TagProductLinkOutput) ToTagProductLinkOutput() TagProductLinkOutput {
	return o
}

func (o TagProductLinkOutput) ToTagProductLinkOutputWithContext(ctx context.Context) TagProductLinkOutput {
	return o
}

// The name of the resource
func (o TagProductLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TagProductLink) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Full resource Id of a product.
func (o TagProductLinkOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v *TagProductLink) pulumi.StringOutput { return v.ProductId }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o TagProductLinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *TagProductLink) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(TagProductLinkOutput{})
}
