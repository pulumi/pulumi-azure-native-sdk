// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A single API Management gateway resource in List or Get response.
//
// Uses Azure REST API version 2024-06-01-preview. In version 2.x of the Azure Native provider, it used API version 2023-09-01-preview.
//
// Other available API versions: 2023-09-01-preview, 2024-05-01. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native apimanagement [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type ApiGateway struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Information regarding how the gateway should integrate with backend systems.
	Backend BackendConfigurationResponsePtrOutput `pulumi:"backend"`
	// Information regarding the Configuration API of the API Management gateway. This is only applicable for API gateway with Standard SKU.
	ConfigurationApi GatewayConfigurationApiResponsePtrOutput `pulumi:"configurationApi"`
	// Creation UTC date of the API Management gateway.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
	CreatedAtUtc pulumi.StringOutput `pulumi:"createdAtUtc"`
	// ETag of the resource.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Information regarding how the gateway should be exposed.
	Frontend FrontendConfigurationResponsePtrOutput `pulumi:"frontend"`
	// Resource location.
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The current provisioning state of the API Management gateway which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// SKU properties of the API Management gateway.
	Sku ApiManagementGatewaySkuPropertiesResponseOutput `pulumi:"sku"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The provisioning state of the API Management gateway, which is targeted by the long running operation started on the gateway.
	TargetProvisioningState pulumi.StringOutput `pulumi:"targetProvisioningState"`
	// Resource type for API Management resource is set to Microsoft.ApiManagement.
	Type pulumi.StringOutput `pulumi:"type"`
	// The type of VPN in which API Management gateway needs to be configured in.
	VirtualNetworkType pulumi.StringPtrOutput `pulumi:"virtualNetworkType"`
}

// NewApiGateway registers a new resource with the given unique name, arguments, and options.
func NewApiGateway(ctx *pulumi.Context,
	name string, args *ApiGatewayArgs, opts ...pulumi.ResourceOption) (*ApiGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Sku == nil {
		return nil, errors.New("invalid value for required argument 'Sku'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:apimanagement/v20230901preview:ApiGateway"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20240501:ApiGateway"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20240601preview:ApiGateway"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ApiGateway
	err := ctx.RegisterResource("azure-native:apimanagement:ApiGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiGateway gets an existing ApiGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiGatewayState, opts ...pulumi.ResourceOption) (*ApiGateway, error) {
	var resource ApiGateway
	err := ctx.ReadResource("azure-native:apimanagement:ApiGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiGateway resources.
type apiGatewayState struct {
}

type ApiGatewayState struct {
}

func (ApiGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiGatewayState)(nil)).Elem()
}

type apiGatewayArgs struct {
	// Information regarding how the gateway should integrate with backend systems.
	Backend *BackendConfiguration `pulumi:"backend"`
	// The name of the API Management gateway.
	GatewayName *string `pulumi:"gatewayName"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// SKU properties of the API Management gateway.
	Sku ApiManagementGatewaySkuProperties `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of VPN in which API Management gateway needs to be configured in.
	VirtualNetworkType *string `pulumi:"virtualNetworkType"`
}

// The set of arguments for constructing a ApiGateway resource.
type ApiGatewayArgs struct {
	// Information regarding how the gateway should integrate with backend systems.
	Backend BackendConfigurationPtrInput
	// The name of the API Management gateway.
	GatewayName pulumi.StringPtrInput
	// Resource location.
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// SKU properties of the API Management gateway.
	Sku ApiManagementGatewaySkuPropertiesInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The type of VPN in which API Management gateway needs to be configured in.
	VirtualNetworkType pulumi.StringPtrInput
}

func (ApiGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiGatewayArgs)(nil)).Elem()
}

type ApiGatewayInput interface {
	pulumi.Input

	ToApiGatewayOutput() ApiGatewayOutput
	ToApiGatewayOutputWithContext(ctx context.Context) ApiGatewayOutput
}

func (*ApiGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGateway)(nil)).Elem()
}

func (i *ApiGateway) ToApiGatewayOutput() ApiGatewayOutput {
	return i.ToApiGatewayOutputWithContext(context.Background())
}

func (i *ApiGateway) ToApiGatewayOutputWithContext(ctx context.Context) ApiGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayOutput)
}

type ApiGatewayOutput struct{ *pulumi.OutputState }

func (ApiGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGateway)(nil)).Elem()
}

func (o ApiGatewayOutput) ToApiGatewayOutput() ApiGatewayOutput {
	return o
}

func (o ApiGatewayOutput) ToApiGatewayOutputWithContext(ctx context.Context) ApiGatewayOutput {
	return o
}

// The Azure API version of the resource.
func (o ApiGatewayOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGateway) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Information regarding how the gateway should integrate with backend systems.
func (o ApiGatewayOutput) Backend() BackendConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ApiGateway) BackendConfigurationResponsePtrOutput { return v.Backend }).(BackendConfigurationResponsePtrOutput)
}

// Information regarding the Configuration API of the API Management gateway. This is only applicable for API gateway with Standard SKU.
func (o ApiGatewayOutput) ConfigurationApi() GatewayConfigurationApiResponsePtrOutput {
	return o.ApplyT(func(v *ApiGateway) GatewayConfigurationApiResponsePtrOutput { return v.ConfigurationApi }).(GatewayConfigurationApiResponsePtrOutput)
}

// Creation UTC date of the API Management gateway.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
func (o ApiGatewayOutput) CreatedAtUtc() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGateway) pulumi.StringOutput { return v.CreatedAtUtc }).(pulumi.StringOutput)
}

// ETag of the resource.
func (o ApiGatewayOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGateway) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Information regarding how the gateway should be exposed.
func (o ApiGatewayOutput) Frontend() FrontendConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ApiGateway) FrontendConfigurationResponsePtrOutput { return v.Frontend }).(FrontendConfigurationResponsePtrOutput)
}

// Resource location.
func (o ApiGatewayOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGateway) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o ApiGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGateway) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The current provisioning state of the API Management gateway which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
func (o ApiGatewayOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGateway) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// SKU properties of the API Management gateway.
func (o ApiGatewayOutput) Sku() ApiManagementGatewaySkuPropertiesResponseOutput {
	return o.ApplyT(func(v *ApiGateway) ApiManagementGatewaySkuPropertiesResponseOutput { return v.Sku }).(ApiManagementGatewaySkuPropertiesResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o ApiGatewayOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ApiGateway) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o ApiGatewayOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiGateway) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The provisioning state of the API Management gateway, which is targeted by the long running operation started on the gateway.
func (o ApiGatewayOutput) TargetProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGateway) pulumi.StringOutput { return v.TargetProvisioningState }).(pulumi.StringOutput)
}

// Resource type for API Management resource is set to Microsoft.ApiManagement.
func (o ApiGatewayOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGateway) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The type of VPN in which API Management gateway needs to be configured in.
func (o ApiGatewayOutput) VirtualNetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiGateway) pulumi.StringPtrOutput { return v.VirtualNetworkType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiGatewayOutput{})
}
