// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the details of the authorization specified by its identifier.
func LookupAuthorization(ctx *pulumi.Context, args *LookupAuthorizationArgs, opts ...pulumi.InvokeOption) (*LookupAuthorizationResult, error) {
	var rv LookupAuthorizationResult
	err := ctx.Invoke("azure-native:apimanagement/v20220401preview:getAuthorization", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAuthorizationArgs struct {
	// Identifier of the authorization.
	AuthorizationId string `pulumi:"authorizationId"`
	// Identifier of the authorization provider.
	AuthorizationProviderId string `pulumi:"authorizationProviderId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
}

// Authorization contract.
type LookupAuthorizationResult struct {
	// Authorization type options
	AuthorizationType *string `pulumi:"authorizationType"`
	// Authorization error details.
	Error *AuthorizationErrorResponse `pulumi:"error"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// OAuth2 grant type options
	OAuth2GrantType *string `pulumi:"oAuth2GrantType"`
	// Authorization parameters
	Parameters map[string]string `pulumi:"parameters"`
	// Status of the Authorization
	Status *string `pulumi:"status"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupAuthorizationOutput(ctx *pulumi.Context, args LookupAuthorizationOutputArgs, opts ...pulumi.InvokeOption) LookupAuthorizationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAuthorizationResult, error) {
			args := v.(LookupAuthorizationArgs)
			r, err := LookupAuthorization(ctx, &args, opts...)
			var s LookupAuthorizationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAuthorizationResultOutput)
}

type LookupAuthorizationOutputArgs struct {
	// Identifier of the authorization.
	AuthorizationId pulumi.StringInput `pulumi:"authorizationId"`
	// Identifier of the authorization provider.
	AuthorizationProviderId pulumi.StringInput `pulumi:"authorizationProviderId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupAuthorizationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuthorizationArgs)(nil)).Elem()
}

// Authorization contract.
type LookupAuthorizationResultOutput struct{ *pulumi.OutputState }

func (LookupAuthorizationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuthorizationResult)(nil)).Elem()
}

func (o LookupAuthorizationResultOutput) ToLookupAuthorizationResultOutput() LookupAuthorizationResultOutput {
	return o
}

func (o LookupAuthorizationResultOutput) ToLookupAuthorizationResultOutputWithContext(ctx context.Context) LookupAuthorizationResultOutput {
	return o
}

// Authorization type options
func (o LookupAuthorizationResultOutput) AuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) *string { return v.AuthorizationType }).(pulumi.StringPtrOutput)
}

// Authorization error details.
func (o LookupAuthorizationResultOutput) Error() AuthorizationErrorResponsePtrOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) *AuthorizationErrorResponse { return v.Error }).(AuthorizationErrorResponsePtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupAuthorizationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupAuthorizationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) string { return v.Name }).(pulumi.StringOutput)
}

// OAuth2 grant type options
func (o LookupAuthorizationResultOutput) OAuth2GrantType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) *string { return v.OAuth2GrantType }).(pulumi.StringPtrOutput)
}

// Authorization parameters
func (o LookupAuthorizationResultOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// Status of the Authorization
func (o LookupAuthorizationResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupAuthorizationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAuthorizationResultOutput{})
}
