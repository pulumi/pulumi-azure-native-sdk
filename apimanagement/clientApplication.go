// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Client application details.
//
// Uses Azure REST API version 2024-10-01-preview.
type ClientApplication struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Client application description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Client application name.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Microsoft EntraID Application ID (Client ID). This is the value that is used to identify the application when it is requesting access tokens from Microsoft EntraID. This property is read-only and will be set by the system when the application is created.
	EntraApplicationId pulumi.StringOutput `pulumi:"entraApplicationId"`
	// Tenant ID is a unique identifier (a GUID) for an organization directory in Microsoft’s cloud. It’s used to identify tenants across Microsoft services.
	EntraTenantId pulumi.StringOutput `pulumi:"entraTenantId"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// A resource identifier for the user who owns the application.
	OwnerId pulumi.StringOutput `pulumi:"ownerId"`
	// Client application state. The value derives the state of an application based on the statuses of its associated ClientApplicationProductLinks.
	State pulumi.StringOutput `pulumi:"state"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewClientApplication registers a new resource with the given unique name, arguments, and options.
func NewClientApplication(ctx *pulumi.Context,
	name string, args *ClientApplicationArgs, opts ...pulumi.ResourceOption) (*ClientApplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.OwnerId == nil {
		return nil, errors.New("invalid value for required argument 'OwnerId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:apimanagement/v20241001preview:ClientApplication"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ClientApplication
	err := ctx.RegisterResource("azure-native:apimanagement:ClientApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClientApplication gets an existing ClientApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClientApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClientApplicationState, opts ...pulumi.ResourceOption) (*ClientApplication, error) {
	var resource ClientApplication
	err := ctx.ReadResource("azure-native:apimanagement:ClientApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClientApplication resources.
type clientApplicationState struct {
}

type ClientApplicationState struct {
}

func (ClientApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*clientApplicationState)(nil)).Elem()
}

type clientApplicationArgs struct {
	// Client Application identifier. Must be unique in the current API Management service instance.
	ClientApplicationId *string `pulumi:"clientApplicationId"`
	// Client application description.
	Description *string `pulumi:"description"`
	// Client application name.
	DisplayName string `pulumi:"displayName"`
	// A resource identifier for the user who owns the application.
	OwnerId string `pulumi:"ownerId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a ClientApplication resource.
type ClientApplicationArgs struct {
	// Client Application identifier. Must be unique in the current API Management service instance.
	ClientApplicationId pulumi.StringPtrInput
	// Client application description.
	Description pulumi.StringPtrInput
	// Client application name.
	DisplayName pulumi.StringInput
	// A resource identifier for the user who owns the application.
	OwnerId pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the API Management service.
	ServiceName pulumi.StringInput
}

func (ClientApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clientApplicationArgs)(nil)).Elem()
}

type ClientApplicationInput interface {
	pulumi.Input

	ToClientApplicationOutput() ClientApplicationOutput
	ToClientApplicationOutputWithContext(ctx context.Context) ClientApplicationOutput
}

func (*ClientApplication) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientApplication)(nil)).Elem()
}

func (i *ClientApplication) ToClientApplicationOutput() ClientApplicationOutput {
	return i.ToClientApplicationOutputWithContext(context.Background())
}

func (i *ClientApplication) ToClientApplicationOutputWithContext(ctx context.Context) ClientApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientApplicationOutput)
}

type ClientApplicationOutput struct{ *pulumi.OutputState }

func (ClientApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientApplication)(nil)).Elem()
}

func (o ClientApplicationOutput) ToClientApplicationOutput() ClientApplicationOutput {
	return o
}

func (o ClientApplicationOutput) ToClientApplicationOutputWithContext(ctx context.Context) ClientApplicationOutput {
	return o
}

// The Azure API version of the resource.
func (o ClientApplicationOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientApplication) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Client application description.
func (o ClientApplicationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientApplication) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Client application name.
func (o ClientApplicationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientApplication) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Microsoft EntraID Application ID (Client ID). This is the value that is used to identify the application when it is requesting access tokens from Microsoft EntraID. This property is read-only and will be set by the system when the application is created.
func (o ClientApplicationOutput) EntraApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientApplication) pulumi.StringOutput { return v.EntraApplicationId }).(pulumi.StringOutput)
}

// Tenant ID is a unique identifier (a GUID) for an organization directory in Microsoft’s cloud. It’s used to identify tenants across Microsoft services.
func (o ClientApplicationOutput) EntraTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientApplication) pulumi.StringOutput { return v.EntraTenantId }).(pulumi.StringOutput)
}

// The name of the resource
func (o ClientApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientApplication) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A resource identifier for the user who owns the application.
func (o ClientApplicationOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientApplication) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

// Client application state. The value derives the state of an application based on the statuses of its associated ClientApplicationProductLinks.
func (o ClientApplicationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientApplication) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ClientApplicationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientApplication) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ClientApplicationOutput{})
}
