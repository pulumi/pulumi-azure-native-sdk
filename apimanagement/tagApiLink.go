// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Tag-API link details.
// Azure REST API version: 2022-09-01-preview.
//
// Other available API versions: 2023-03-01-preview, 2023-05-01-preview.
type TagApiLink struct {
	pulumi.CustomResourceState

	// Full resource Id of an API.
	ApiId pulumi.StringOutput `pulumi:"apiId"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewTagApiLink registers a new resource with the given unique name, arguments, and options.
func NewTagApiLink(ctx *pulumi.Context,
	name string, args *TagApiLinkArgs, opts ...pulumi.ResourceOption) (*TagApiLink, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.TagId == nil {
		return nil, errors.New("invalid value for required argument 'TagId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:apimanagement/v20220901preview:TagApiLink"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20230301preview:TagApiLink"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20230501preview:TagApiLink"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource TagApiLink
	err := ctx.RegisterResource("azure-native:apimanagement:TagApiLink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTagApiLink gets an existing TagApiLink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTagApiLink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TagApiLinkState, opts ...pulumi.ResourceOption) (*TagApiLink, error) {
	var resource TagApiLink
	err := ctx.ReadResource("azure-native:apimanagement:TagApiLink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TagApiLink resources.
type tagApiLinkState struct {
}

type TagApiLinkState struct {
}

func (TagApiLinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*tagApiLinkState)(nil)).Elem()
}

type tagApiLinkArgs struct {
	// Full resource Id of an API.
	ApiId string `pulumi:"apiId"`
	// Tag-API link identifier. Must be unique in the current API Management service instance.
	ApiLinkId *string `pulumi:"apiLinkId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
	// Tag identifier. Must be unique in the current API Management service instance.
	TagId string `pulumi:"tagId"`
}

// The set of arguments for constructing a TagApiLink resource.
type TagApiLinkArgs struct {
	// Full resource Id of an API.
	ApiId pulumi.StringInput
	// Tag-API link identifier. Must be unique in the current API Management service instance.
	ApiLinkId pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the API Management service.
	ServiceName pulumi.StringInput
	// Tag identifier. Must be unique in the current API Management service instance.
	TagId pulumi.StringInput
}

func (TagApiLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tagApiLinkArgs)(nil)).Elem()
}

type TagApiLinkInput interface {
	pulumi.Input

	ToTagApiLinkOutput() TagApiLinkOutput
	ToTagApiLinkOutputWithContext(ctx context.Context) TagApiLinkOutput
}

func (*TagApiLink) ElementType() reflect.Type {
	return reflect.TypeOf((**TagApiLink)(nil)).Elem()
}

func (i *TagApiLink) ToTagApiLinkOutput() TagApiLinkOutput {
	return i.ToTagApiLinkOutputWithContext(context.Background())
}

func (i *TagApiLink) ToTagApiLinkOutputWithContext(ctx context.Context) TagApiLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagApiLinkOutput)
}

type TagApiLinkOutput struct{ *pulumi.OutputState }

func (TagApiLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagApiLink)(nil)).Elem()
}

func (o TagApiLinkOutput) ToTagApiLinkOutput() TagApiLinkOutput {
	return o
}

func (o TagApiLinkOutput) ToTagApiLinkOutputWithContext(ctx context.Context) TagApiLinkOutput {
	return o
}

// Full resource Id of an API.
func (o TagApiLinkOutput) ApiId() pulumi.StringOutput {
	return o.ApplyT(func(v *TagApiLink) pulumi.StringOutput { return v.ApiId }).(pulumi.StringOutput)
}

// The name of the resource
func (o TagApiLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TagApiLink) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o TagApiLinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *TagApiLink) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(TagApiLinkOutput{})
}
