// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets the specified Subscription keys.
func ListWorkspaceSubscriptionSecrets(ctx *pulumi.Context, args *ListWorkspaceSubscriptionSecretsArgs, opts ...pulumi.InvokeOption) (*ListWorkspaceSubscriptionSecretsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListWorkspaceSubscriptionSecretsResult
	err := ctx.Invoke("azure-native:apimanagement/v20230301preview:listWorkspaceSubscriptionSecrets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListWorkspaceSubscriptionSecretsArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
	// Subscription entity Identifier. The entity represents the association between a user and a product in API Management.
	Sid string `pulumi:"sid"`
	// Workspace identifier. Must be unique in the current API Management service instance.
	WorkspaceId string `pulumi:"workspaceId"`
}

// Subscription keys.
type ListWorkspaceSubscriptionSecretsResult struct {
	// Subscription primary key.
	PrimaryKey *string `pulumi:"primaryKey"`
	// Subscription secondary key.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

func ListWorkspaceSubscriptionSecretsOutput(ctx *pulumi.Context, args ListWorkspaceSubscriptionSecretsOutputArgs, opts ...pulumi.InvokeOption) ListWorkspaceSubscriptionSecretsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListWorkspaceSubscriptionSecretsResult, error) {
			args := v.(ListWorkspaceSubscriptionSecretsArgs)
			r, err := ListWorkspaceSubscriptionSecrets(ctx, &args, opts...)
			var s ListWorkspaceSubscriptionSecretsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListWorkspaceSubscriptionSecretsResultOutput)
}

type ListWorkspaceSubscriptionSecretsOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// Subscription entity Identifier. The entity represents the association between a user and a product in API Management.
	Sid pulumi.StringInput `pulumi:"sid"`
	// Workspace identifier. Must be unique in the current API Management service instance.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (ListWorkspaceSubscriptionSecretsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListWorkspaceSubscriptionSecretsArgs)(nil)).Elem()
}

// Subscription keys.
type ListWorkspaceSubscriptionSecretsResultOutput struct{ *pulumi.OutputState }

func (ListWorkspaceSubscriptionSecretsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListWorkspaceSubscriptionSecretsResult)(nil)).Elem()
}

func (o ListWorkspaceSubscriptionSecretsResultOutput) ToListWorkspaceSubscriptionSecretsResultOutput() ListWorkspaceSubscriptionSecretsResultOutput {
	return o
}

func (o ListWorkspaceSubscriptionSecretsResultOutput) ToListWorkspaceSubscriptionSecretsResultOutputWithContext(ctx context.Context) ListWorkspaceSubscriptionSecretsResultOutput {
	return o
}

func (o ListWorkspaceSubscriptionSecretsResultOutput) ToOutput(ctx context.Context) pulumix.Output[ListWorkspaceSubscriptionSecretsResult] {
	return pulumix.Output[ListWorkspaceSubscriptionSecretsResult]{
		OutputState: o.OutputState,
	}
}

// Subscription primary key.
func (o ListWorkspaceSubscriptionSecretsResultOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListWorkspaceSubscriptionSecretsResult) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// Subscription secondary key.
func (o ListWorkspaceSubscriptionSecretsResultOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListWorkspaceSubscriptionSecretsResult) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListWorkspaceSubscriptionSecretsResultOutput{})
}
