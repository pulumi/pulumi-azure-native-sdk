// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create new debug credentials for gateway.
func ListGatewayDebugCredentials(ctx *pulumi.Context, args *ListGatewayDebugCredentialsArgs, opts ...pulumi.InvokeOption) (*ListGatewayDebugCredentialsResult, error) {
	var rv ListGatewayDebugCredentialsResult
	err := ctx.Invoke("azure-native:apimanagement/v20230301preview:listGatewayDebugCredentials", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListGatewayDebugCredentialsArgs struct {
	// Full resource Id of an API.
	ApiId string `pulumi:"apiId"`
	// Credentials expiration in ISO8601 format. Maximum duration of the credentials is PT1H. When property is not specified, them value PT1H is used.
	CredentialsExpireAfter *string `pulumi:"credentialsExpireAfter"`
	// Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'
	GatewayId string `pulumi:"gatewayId"`
	// Purposes of debug credential.
	Purposes []string `pulumi:"purposes"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
}

// Gateway debug credentials.
type ListGatewayDebugCredentialsResult struct {
	// Gateway debug token.
	Token *string `pulumi:"token"`
}

func ListGatewayDebugCredentialsOutput(ctx *pulumi.Context, args ListGatewayDebugCredentialsOutputArgs, opts ...pulumi.InvokeOption) ListGatewayDebugCredentialsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListGatewayDebugCredentialsResult, error) {
			args := v.(ListGatewayDebugCredentialsArgs)
			r, err := ListGatewayDebugCredentials(ctx, &args, opts...)
			var s ListGatewayDebugCredentialsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListGatewayDebugCredentialsResultOutput)
}

type ListGatewayDebugCredentialsOutputArgs struct {
	// Full resource Id of an API.
	ApiId pulumi.StringInput `pulumi:"apiId"`
	// Credentials expiration in ISO8601 format. Maximum duration of the credentials is PT1H. When property is not specified, them value PT1H is used.
	CredentialsExpireAfter pulumi.StringPtrInput `pulumi:"credentialsExpireAfter"`
	// Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'
	GatewayId pulumi.StringInput `pulumi:"gatewayId"`
	// Purposes of debug credential.
	Purposes pulumi.StringArrayInput `pulumi:"purposes"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (ListGatewayDebugCredentialsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListGatewayDebugCredentialsArgs)(nil)).Elem()
}

// Gateway debug credentials.
type ListGatewayDebugCredentialsResultOutput struct{ *pulumi.OutputState }

func (ListGatewayDebugCredentialsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListGatewayDebugCredentialsResult)(nil)).Elem()
}

func (o ListGatewayDebugCredentialsResultOutput) ToListGatewayDebugCredentialsResultOutput() ListGatewayDebugCredentialsResultOutput {
	return o
}

func (o ListGatewayDebugCredentialsResultOutput) ToListGatewayDebugCredentialsResultOutputWithContext(ctx context.Context) ListGatewayDebugCredentialsResultOutput {
	return o
}

// Gateway debug token.
func (o ListGatewayDebugCredentialsResultOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListGatewayDebugCredentialsResult) *string { return v.Token }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListGatewayDebugCredentialsResultOutput{})
}
