// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the details of the Wiki for an API specified by its identifier.
//
// Uses Azure REST API version 2022-09-01-preview.
//
// Other available API versions: 2022-08-01, 2023-03-01-preview, 2023-05-01-preview, 2023-09-01-preview, 2024-05-01, 2024-06-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native apimanagement [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupApiWiki(ctx *pulumi.Context, args *LookupApiWikiArgs, opts ...pulumi.InvokeOption) (*LookupApiWikiResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupApiWikiResult
	err := ctx.Invoke("azure-native:apimanagement:getApiWiki", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupApiWikiArgs struct {
	// API identifier. Must be unique in the current API Management service instance.
	ApiId string `pulumi:"apiId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
}

// Wiki properties
type LookupApiWikiResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Collection wiki documents included into this wiki.
	Documents []WikiDocumentationContractResponse `pulumi:"documents"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupApiWikiOutput(ctx *pulumi.Context, args LookupApiWikiOutputArgs, opts ...pulumi.InvokeOption) LookupApiWikiResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupApiWikiResultOutput, error) {
			args := v.(LookupApiWikiArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:apimanagement:getApiWiki", args, LookupApiWikiResultOutput{}, options).(LookupApiWikiResultOutput), nil
		}).(LookupApiWikiResultOutput)
}

type LookupApiWikiOutputArgs struct {
	// API identifier. Must be unique in the current API Management service instance.
	ApiId pulumi.StringInput `pulumi:"apiId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupApiWikiOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiWikiArgs)(nil)).Elem()
}

// Wiki properties
type LookupApiWikiResultOutput struct{ *pulumi.OutputState }

func (LookupApiWikiResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiWikiResult)(nil)).Elem()
}

func (o LookupApiWikiResultOutput) ToLookupApiWikiResultOutput() LookupApiWikiResultOutput {
	return o
}

func (o LookupApiWikiResultOutput) ToLookupApiWikiResultOutputWithContext(ctx context.Context) LookupApiWikiResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupApiWikiResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiWikiResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Collection wiki documents included into this wiki.
func (o LookupApiWikiResultOutput) Documents() WikiDocumentationContractResponseArrayOutput {
	return o.ApplyT(func(v LookupApiWikiResult) []WikiDocumentationContractResponse { return v.Documents }).(WikiDocumentationContractResponseArrayOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupApiWikiResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiWikiResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupApiWikiResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiWikiResult) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupApiWikiResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiWikiResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApiWikiResultOutput{})
}
