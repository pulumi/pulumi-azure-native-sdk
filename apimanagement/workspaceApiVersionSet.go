// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// API Version Set Contract details.
// Azure REST API version: 2022-09-01-preview.
//
// Other available API versions: 2023-03-01-preview.
type WorkspaceApiVersionSet struct {
	pulumi.CustomResourceState

	// Description of API Version Set.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name of API Version Set
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName pulumi.StringPtrOutput `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName pulumi.StringPtrOutput `pulumi:"versionQueryName"`
	// An value that determines where the API Version identifier will be located in a HTTP request.
	VersioningScheme pulumi.StringOutput `pulumi:"versioningScheme"`
}

// NewWorkspaceApiVersionSet registers a new resource with the given unique name, arguments, and options.
func NewWorkspaceApiVersionSet(ctx *pulumi.Context,
	name string, args *WorkspaceApiVersionSetArgs, opts ...pulumi.ResourceOption) (*WorkspaceApiVersionSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.VersioningScheme == nil {
		return nil, errors.New("invalid value for required argument 'VersioningScheme'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:apimanagement/v20220901preview:WorkspaceApiVersionSet"),
		},
		{
			Type: pulumi.String("azure-native:apimanagement/v20230301preview:WorkspaceApiVersionSet"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource WorkspaceApiVersionSet
	err := ctx.RegisterResource("azure-native:apimanagement:WorkspaceApiVersionSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspaceApiVersionSet gets an existing WorkspaceApiVersionSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspaceApiVersionSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceApiVersionSetState, opts ...pulumi.ResourceOption) (*WorkspaceApiVersionSet, error) {
	var resource WorkspaceApiVersionSet
	err := ctx.ReadResource("azure-native:apimanagement:WorkspaceApiVersionSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkspaceApiVersionSet resources.
type workspaceApiVersionSetState struct {
}

type WorkspaceApiVersionSetState struct {
}

func (WorkspaceApiVersionSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceApiVersionSetState)(nil)).Elem()
}

type workspaceApiVersionSetArgs struct {
	// Description of API Version Set.
	Description *string `pulumi:"description"`
	// Name of API Version Set
	DisplayName string `pulumi:"displayName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName *string `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName *string `pulumi:"versionQueryName"`
	// Api Version Set identifier. Must be unique in the current API Management service instance.
	VersionSetId *string `pulumi:"versionSetId"`
	// An value that determines where the API Version identifier will be located in a HTTP request.
	VersioningScheme string `pulumi:"versioningScheme"`
	// Workspace identifier. Must be unique in the current API Management service instance.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a WorkspaceApiVersionSet resource.
type WorkspaceApiVersionSetArgs struct {
	// Description of API Version Set.
	Description pulumi.StringPtrInput
	// Name of API Version Set
	DisplayName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the API Management service.
	ServiceName pulumi.StringInput
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName pulumi.StringPtrInput
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName pulumi.StringPtrInput
	// Api Version Set identifier. Must be unique in the current API Management service instance.
	VersionSetId pulumi.StringPtrInput
	// An value that determines where the API Version identifier will be located in a HTTP request.
	VersioningScheme pulumi.StringInput
	// Workspace identifier. Must be unique in the current API Management service instance.
	WorkspaceId pulumi.StringInput
}

func (WorkspaceApiVersionSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceApiVersionSetArgs)(nil)).Elem()
}

type WorkspaceApiVersionSetInput interface {
	pulumi.Input

	ToWorkspaceApiVersionSetOutput() WorkspaceApiVersionSetOutput
	ToWorkspaceApiVersionSetOutputWithContext(ctx context.Context) WorkspaceApiVersionSetOutput
}

func (*WorkspaceApiVersionSet) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceApiVersionSet)(nil)).Elem()
}

func (i *WorkspaceApiVersionSet) ToWorkspaceApiVersionSetOutput() WorkspaceApiVersionSetOutput {
	return i.ToWorkspaceApiVersionSetOutputWithContext(context.Background())
}

func (i *WorkspaceApiVersionSet) ToWorkspaceApiVersionSetOutputWithContext(ctx context.Context) WorkspaceApiVersionSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceApiVersionSetOutput)
}

type WorkspaceApiVersionSetOutput struct{ *pulumi.OutputState }

func (WorkspaceApiVersionSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceApiVersionSet)(nil)).Elem()
}

func (o WorkspaceApiVersionSetOutput) ToWorkspaceApiVersionSetOutput() WorkspaceApiVersionSetOutput {
	return o
}

func (o WorkspaceApiVersionSetOutput) ToWorkspaceApiVersionSetOutputWithContext(ctx context.Context) WorkspaceApiVersionSetOutput {
	return o
}

// Description of API Version Set.
func (o WorkspaceApiVersionSetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceApiVersionSet) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of API Version Set
func (o WorkspaceApiVersionSetOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApiVersionSet) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The name of the resource
func (o WorkspaceApiVersionSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApiVersionSet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o WorkspaceApiVersionSetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApiVersionSet) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o WorkspaceApiVersionSetOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceApiVersionSet) pulumi.StringPtrOutput { return v.VersionHeaderName }).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o WorkspaceApiVersionSetOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceApiVersionSet) pulumi.StringPtrOutput { return v.VersionQueryName }).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifier will be located in a HTTP request.
func (o WorkspaceApiVersionSetOutput) VersioningScheme() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceApiVersionSet) pulumi.StringOutput { return v.VersioningScheme }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(WorkspaceApiVersionSetOutput{})
}
