// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the policy configuration at the Product level.
//
// Uses Azure REST API version 2022-09-01-preview.
//
// Other available API versions: 2021-04-01-preview, 2021-08-01, 2021-12-01-preview, 2022-04-01-preview, 2022-08-01, 2023-03-01-preview, 2023-05-01-preview, 2023-09-01-preview, 2024-05-01, 2024-06-01-preview, 2024-10-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native apimanagement [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupProductPolicy(ctx *pulumi.Context, args *LookupProductPolicyArgs, opts ...pulumi.InvokeOption) (*LookupProductPolicyResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupProductPolicyResult
	err := ctx.Invoke("azure-native:apimanagement:getProductPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupProductPolicyArgs struct {
	// Policy Export Format.
	Format *string `pulumi:"format"`
	// The identifier of the Policy.
	PolicyId string `pulumi:"policyId"`
	// Product identifier. Must be unique in the current API Management service instance.
	ProductId string `pulumi:"productId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
}

// Policy Contract details.
type LookupProductPolicyResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Format of the policyContent.
	Format *string `pulumi:"format"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Contents of the Policy as defined by the format.
	Value string `pulumi:"value"`
}

// Defaults sets the appropriate defaults for LookupProductPolicyResult
func (val *LookupProductPolicyResult) Defaults() *LookupProductPolicyResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Format == nil {
		format_ := "xml"
		tmp.Format = &format_
	}
	return &tmp
}
func LookupProductPolicyOutput(ctx *pulumi.Context, args LookupProductPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupProductPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupProductPolicyResultOutput, error) {
			args := v.(LookupProductPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:apimanagement:getProductPolicy", args, LookupProductPolicyResultOutput{}, options).(LookupProductPolicyResultOutput), nil
		}).(LookupProductPolicyResultOutput)
}

type LookupProductPolicyOutputArgs struct {
	// Policy Export Format.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The identifier of the Policy.
	PolicyId pulumi.StringInput `pulumi:"policyId"`
	// Product identifier. Must be unique in the current API Management service instance.
	ProductId pulumi.StringInput `pulumi:"productId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupProductPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProductPolicyArgs)(nil)).Elem()
}

// Policy Contract details.
type LookupProductPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupProductPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProductPolicyResult)(nil)).Elem()
}

func (o LookupProductPolicyResultOutput) ToLookupProductPolicyResultOutput() LookupProductPolicyResultOutput {
	return o
}

func (o LookupProductPolicyResultOutput) ToLookupProductPolicyResultOutputWithContext(ctx context.Context) LookupProductPolicyResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupProductPolicyResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductPolicyResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Format of the policyContent.
func (o LookupProductPolicyResultOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProductPolicyResult) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupProductPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupProductPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupProductPolicyResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductPolicyResult) string { return v.Type }).(pulumi.StringOutput)
}

// Contents of the Policy as defined by the format.
func (o LookupProductPolicyResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductPolicyResult) string { return v.Value }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProductPolicyResultOutput{})
}
