// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies Client Application - Product link assignment
//
// Uses Azure REST API version 2024-10-01-preview.
type ClientApplicationProductLink struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The unique resource identifier of the Product.
	ProductId pulumi.StringOutput `pulumi:"productId"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewClientApplicationProductLink registers a new resource with the given unique name, arguments, and options.
func NewClientApplicationProductLink(ctx *pulumi.Context,
	name string, args *ClientApplicationProductLinkArgs, opts ...pulumi.ResourceOption) (*ClientApplicationProductLink, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ClientApplicationId'")
	}
	if args.ProductId == nil {
		return nil, errors.New("invalid value for required argument 'ProductId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:apimanagement/v20241001preview:ClientApplicationProductLink"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ClientApplicationProductLink
	err := ctx.RegisterResource("azure-native:apimanagement:ClientApplicationProductLink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClientApplicationProductLink gets an existing ClientApplicationProductLink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClientApplicationProductLink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClientApplicationProductLinkState, opts ...pulumi.ResourceOption) (*ClientApplicationProductLink, error) {
	var resource ClientApplicationProductLink
	err := ctx.ReadResource("azure-native:apimanagement:ClientApplicationProductLink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClientApplicationProductLink resources.
type clientApplicationProductLinkState struct {
}

type ClientApplicationProductLinkState struct {
}

func (ClientApplicationProductLinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*clientApplicationProductLinkState)(nil)).Elem()
}

type clientApplicationProductLinkArgs struct {
	// Client Application identifier. Must be unique in the current API Management service instance.
	ClientApplicationId string `pulumi:"clientApplicationId"`
	// Client Application Product Link identifier. Must be unique in the current API Management service instance.
	ClientApplicationProductLinkId *string `pulumi:"clientApplicationProductLinkId"`
	// The unique resource identifier of the Product.
	ProductId string `pulumi:"productId"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the API Management service.
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a ClientApplicationProductLink resource.
type ClientApplicationProductLinkArgs struct {
	// Client Application identifier. Must be unique in the current API Management service instance.
	ClientApplicationId pulumi.StringInput
	// Client Application Product Link identifier. Must be unique in the current API Management service instance.
	ClientApplicationProductLinkId pulumi.StringPtrInput
	// The unique resource identifier of the Product.
	ProductId pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the API Management service.
	ServiceName pulumi.StringInput
}

func (ClientApplicationProductLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clientApplicationProductLinkArgs)(nil)).Elem()
}

type ClientApplicationProductLinkInput interface {
	pulumi.Input

	ToClientApplicationProductLinkOutput() ClientApplicationProductLinkOutput
	ToClientApplicationProductLinkOutputWithContext(ctx context.Context) ClientApplicationProductLinkOutput
}

func (*ClientApplicationProductLink) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientApplicationProductLink)(nil)).Elem()
}

func (i *ClientApplicationProductLink) ToClientApplicationProductLinkOutput() ClientApplicationProductLinkOutput {
	return i.ToClientApplicationProductLinkOutputWithContext(context.Background())
}

func (i *ClientApplicationProductLink) ToClientApplicationProductLinkOutputWithContext(ctx context.Context) ClientApplicationProductLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientApplicationProductLinkOutput)
}

type ClientApplicationProductLinkOutput struct{ *pulumi.OutputState }

func (ClientApplicationProductLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientApplicationProductLink)(nil)).Elem()
}

func (o ClientApplicationProductLinkOutput) ToClientApplicationProductLinkOutput() ClientApplicationProductLinkOutput {
	return o
}

func (o ClientApplicationProductLinkOutput) ToClientApplicationProductLinkOutputWithContext(ctx context.Context) ClientApplicationProductLinkOutput {
	return o
}

// The Azure API version of the resource.
func (o ClientApplicationProductLinkOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientApplicationProductLink) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o ClientApplicationProductLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientApplicationProductLink) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The unique resource identifier of the Product.
func (o ClientApplicationProductLinkOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientApplicationProductLink) pulumi.StringOutput { return v.ProductId }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ClientApplicationProductLinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientApplicationProductLink) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ClientApplicationProductLinkOutput{})
}
