// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20201201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = utilities.GetEnvOrDefault

// Criteria to limit import of WSDL to a subset of the document.
type ApiCreateOrUpdatePropertiesWsdlSelector struct {
	// Name of endpoint(port) to import from WSDL
	WsdlEndpointName *string `pulumi:"wsdlEndpointName"`
	// Name of service to import from WSDL
	WsdlServiceName *string `pulumi:"wsdlServiceName"`
}

// ApiCreateOrUpdatePropertiesWsdlSelectorInput is an input type that accepts ApiCreateOrUpdatePropertiesWsdlSelectorArgs and ApiCreateOrUpdatePropertiesWsdlSelectorOutput values.
// You can construct a concrete instance of `ApiCreateOrUpdatePropertiesWsdlSelectorInput` via:
//
//	ApiCreateOrUpdatePropertiesWsdlSelectorArgs{...}
type ApiCreateOrUpdatePropertiesWsdlSelectorInput interface {
	pulumi.Input

	ToApiCreateOrUpdatePropertiesWsdlSelectorOutput() ApiCreateOrUpdatePropertiesWsdlSelectorOutput
	ToApiCreateOrUpdatePropertiesWsdlSelectorOutputWithContext(context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorOutput
}

// Criteria to limit import of WSDL to a subset of the document.
type ApiCreateOrUpdatePropertiesWsdlSelectorArgs struct {
	// Name of endpoint(port) to import from WSDL
	WsdlEndpointName pulumi.StringPtrInput `pulumi:"wsdlEndpointName"`
	// Name of service to import from WSDL
	WsdlServiceName pulumi.StringPtrInput `pulumi:"wsdlServiceName"`
}

func (ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiCreateOrUpdatePropertiesWsdlSelector)(nil)).Elem()
}

func (i ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ToApiCreateOrUpdatePropertiesWsdlSelectorOutput() ApiCreateOrUpdatePropertiesWsdlSelectorOutput {
	return i.ToApiCreateOrUpdatePropertiesWsdlSelectorOutputWithContext(context.Background())
}

func (i ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ToApiCreateOrUpdatePropertiesWsdlSelectorOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiCreateOrUpdatePropertiesWsdlSelectorOutput)
}

func (i ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ToOutput(ctx context.Context) pulumix.Output[ApiCreateOrUpdatePropertiesWsdlSelector] {
	return pulumix.Output[ApiCreateOrUpdatePropertiesWsdlSelector]{
		OutputState: i.ToApiCreateOrUpdatePropertiesWsdlSelectorOutputWithContext(ctx).OutputState,
	}
}

func (i ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput() ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return i.ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(context.Background())
}

func (i ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiCreateOrUpdatePropertiesWsdlSelectorOutput).ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(ctx)
}

// ApiCreateOrUpdatePropertiesWsdlSelectorPtrInput is an input type that accepts ApiCreateOrUpdatePropertiesWsdlSelectorArgs, ApiCreateOrUpdatePropertiesWsdlSelectorPtr and ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput values.
// You can construct a concrete instance of `ApiCreateOrUpdatePropertiesWsdlSelectorPtrInput` via:
//
//	        ApiCreateOrUpdatePropertiesWsdlSelectorArgs{...}
//
//	or:
//
//	        nil
type ApiCreateOrUpdatePropertiesWsdlSelectorPtrInput interface {
	pulumi.Input

	ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput() ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput
	ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput
}

type apiCreateOrUpdatePropertiesWsdlSelectorPtrType ApiCreateOrUpdatePropertiesWsdlSelectorArgs

func ApiCreateOrUpdatePropertiesWsdlSelectorPtr(v *ApiCreateOrUpdatePropertiesWsdlSelectorArgs) ApiCreateOrUpdatePropertiesWsdlSelectorPtrInput {
	return (*apiCreateOrUpdatePropertiesWsdlSelectorPtrType)(v)
}

func (*apiCreateOrUpdatePropertiesWsdlSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiCreateOrUpdatePropertiesWsdlSelector)(nil)).Elem()
}

func (i *apiCreateOrUpdatePropertiesWsdlSelectorPtrType) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput() ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return i.ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(context.Background())
}

func (i *apiCreateOrUpdatePropertiesWsdlSelectorPtrType) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput)
}

func (i *apiCreateOrUpdatePropertiesWsdlSelectorPtrType) ToOutput(ctx context.Context) pulumix.Output[*ApiCreateOrUpdatePropertiesWsdlSelector] {
	return pulumix.Output[*ApiCreateOrUpdatePropertiesWsdlSelector]{
		OutputState: i.ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(ctx).OutputState,
	}
}

// Criteria to limit import of WSDL to a subset of the document.
type ApiCreateOrUpdatePropertiesWsdlSelectorOutput struct{ *pulumi.OutputState }

func (ApiCreateOrUpdatePropertiesWsdlSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiCreateOrUpdatePropertiesWsdlSelector)(nil)).Elem()
}

func (o ApiCreateOrUpdatePropertiesWsdlSelectorOutput) ToApiCreateOrUpdatePropertiesWsdlSelectorOutput() ApiCreateOrUpdatePropertiesWsdlSelectorOutput {
	return o
}

func (o ApiCreateOrUpdatePropertiesWsdlSelectorOutput) ToApiCreateOrUpdatePropertiesWsdlSelectorOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorOutput {
	return o
}

func (o ApiCreateOrUpdatePropertiesWsdlSelectorOutput) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput() ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return o.ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(context.Background())
}

func (o ApiCreateOrUpdatePropertiesWsdlSelectorOutput) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiCreateOrUpdatePropertiesWsdlSelector) *ApiCreateOrUpdatePropertiesWsdlSelector {
		return &v
	}).(ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput)
}

func (o ApiCreateOrUpdatePropertiesWsdlSelectorOutput) ToOutput(ctx context.Context) pulumix.Output[ApiCreateOrUpdatePropertiesWsdlSelector] {
	return pulumix.Output[ApiCreateOrUpdatePropertiesWsdlSelector]{
		OutputState: o.OutputState,
	}
}

// Name of endpoint(port) to import from WSDL
func (o ApiCreateOrUpdatePropertiesWsdlSelectorOutput) WsdlEndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiCreateOrUpdatePropertiesWsdlSelector) *string { return v.WsdlEndpointName }).(pulumi.StringPtrOutput)
}

// Name of service to import from WSDL
func (o ApiCreateOrUpdatePropertiesWsdlSelectorOutput) WsdlServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiCreateOrUpdatePropertiesWsdlSelector) *string { return v.WsdlServiceName }).(pulumi.StringPtrOutput)
}

type ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput struct{ *pulumi.OutputState }

func (ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiCreateOrUpdatePropertiesWsdlSelector)(nil)).Elem()
}

func (o ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput() ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return o
}

func (o ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput) ToApiCreateOrUpdatePropertiesWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput {
	return o
}

func (o ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ApiCreateOrUpdatePropertiesWsdlSelector] {
	return pulumix.Output[*ApiCreateOrUpdatePropertiesWsdlSelector]{
		OutputState: o.OutputState,
	}
}

func (o ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput) Elem() ApiCreateOrUpdatePropertiesWsdlSelectorOutput {
	return o.ApplyT(func(v *ApiCreateOrUpdatePropertiesWsdlSelector) ApiCreateOrUpdatePropertiesWsdlSelector {
		if v != nil {
			return *v
		}
		var ret ApiCreateOrUpdatePropertiesWsdlSelector
		return ret
	}).(ApiCreateOrUpdatePropertiesWsdlSelectorOutput)
}

// Name of endpoint(port) to import from WSDL
func (o ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput) WsdlEndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiCreateOrUpdatePropertiesWsdlSelector) *string {
		if v == nil {
			return nil
		}
		return v.WsdlEndpointName
	}).(pulumi.StringPtrOutput)
}

// Name of service to import from WSDL
func (o ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput) WsdlServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiCreateOrUpdatePropertiesWsdlSelector) *string {
		if v == nil {
			return nil
		}
		return v.WsdlServiceName
	}).(pulumi.StringPtrOutput)
}

// An API Version Set contains the common configuration for a set of API Versions relating
type ApiVersionSetContractDetails struct {
	// Description of API Version Set.
	Description *string `pulumi:"description"`
	// Identifier for existing API Version Set. Omit this value to create a new Version Set.
	Id *string `pulumi:"id"`
	// The display Name of the API Version Set.
	Name *string `pulumi:"name"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName *string `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName *string `pulumi:"versionQueryName"`
	// An value that determines where the API Version identifier will be located in a HTTP request.
	VersioningScheme *string `pulumi:"versioningScheme"`
}

// ApiVersionSetContractDetailsInput is an input type that accepts ApiVersionSetContractDetailsArgs and ApiVersionSetContractDetailsOutput values.
// You can construct a concrete instance of `ApiVersionSetContractDetailsInput` via:
//
//	ApiVersionSetContractDetailsArgs{...}
type ApiVersionSetContractDetailsInput interface {
	pulumi.Input

	ToApiVersionSetContractDetailsOutput() ApiVersionSetContractDetailsOutput
	ToApiVersionSetContractDetailsOutputWithContext(context.Context) ApiVersionSetContractDetailsOutput
}

// An API Version Set contains the common configuration for a set of API Versions relating
type ApiVersionSetContractDetailsArgs struct {
	// Description of API Version Set.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Identifier for existing API Version Set. Omit this value to create a new Version Set.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The display Name of the API Version Set.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName pulumi.StringPtrInput `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName pulumi.StringPtrInput `pulumi:"versionQueryName"`
	// An value that determines where the API Version identifier will be located in a HTTP request.
	VersioningScheme pulumi.StringPtrInput `pulumi:"versioningScheme"`
}

func (ApiVersionSetContractDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionSetContractDetails)(nil)).Elem()
}

func (i ApiVersionSetContractDetailsArgs) ToApiVersionSetContractDetailsOutput() ApiVersionSetContractDetailsOutput {
	return i.ToApiVersionSetContractDetailsOutputWithContext(context.Background())
}

func (i ApiVersionSetContractDetailsArgs) ToApiVersionSetContractDetailsOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractDetailsOutput)
}

func (i ApiVersionSetContractDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[ApiVersionSetContractDetails] {
	return pulumix.Output[ApiVersionSetContractDetails]{
		OutputState: i.ToApiVersionSetContractDetailsOutputWithContext(ctx).OutputState,
	}
}

func (i ApiVersionSetContractDetailsArgs) ToApiVersionSetContractDetailsPtrOutput() ApiVersionSetContractDetailsPtrOutput {
	return i.ToApiVersionSetContractDetailsPtrOutputWithContext(context.Background())
}

func (i ApiVersionSetContractDetailsArgs) ToApiVersionSetContractDetailsPtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractDetailsOutput).ToApiVersionSetContractDetailsPtrOutputWithContext(ctx)
}

// ApiVersionSetContractDetailsPtrInput is an input type that accepts ApiVersionSetContractDetailsArgs, ApiVersionSetContractDetailsPtr and ApiVersionSetContractDetailsPtrOutput values.
// You can construct a concrete instance of `ApiVersionSetContractDetailsPtrInput` via:
//
//	        ApiVersionSetContractDetailsArgs{...}
//
//	or:
//
//	        nil
type ApiVersionSetContractDetailsPtrInput interface {
	pulumi.Input

	ToApiVersionSetContractDetailsPtrOutput() ApiVersionSetContractDetailsPtrOutput
	ToApiVersionSetContractDetailsPtrOutputWithContext(context.Context) ApiVersionSetContractDetailsPtrOutput
}

type apiVersionSetContractDetailsPtrType ApiVersionSetContractDetailsArgs

func ApiVersionSetContractDetailsPtr(v *ApiVersionSetContractDetailsArgs) ApiVersionSetContractDetailsPtrInput {
	return (*apiVersionSetContractDetailsPtrType)(v)
}

func (*apiVersionSetContractDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiVersionSetContractDetails)(nil)).Elem()
}

func (i *apiVersionSetContractDetailsPtrType) ToApiVersionSetContractDetailsPtrOutput() ApiVersionSetContractDetailsPtrOutput {
	return i.ToApiVersionSetContractDetailsPtrOutputWithContext(context.Background())
}

func (i *apiVersionSetContractDetailsPtrType) ToApiVersionSetContractDetailsPtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiVersionSetContractDetailsPtrOutput)
}

func (i *apiVersionSetContractDetailsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ApiVersionSetContractDetails] {
	return pulumix.Output[*ApiVersionSetContractDetails]{
		OutputState: i.ToApiVersionSetContractDetailsPtrOutputWithContext(ctx).OutputState,
	}
}

// An API Version Set contains the common configuration for a set of API Versions relating
type ApiVersionSetContractDetailsOutput struct{ *pulumi.OutputState }

func (ApiVersionSetContractDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionSetContractDetails)(nil)).Elem()
}

func (o ApiVersionSetContractDetailsOutput) ToApiVersionSetContractDetailsOutput() ApiVersionSetContractDetailsOutput {
	return o
}

func (o ApiVersionSetContractDetailsOutput) ToApiVersionSetContractDetailsOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsOutput {
	return o
}

func (o ApiVersionSetContractDetailsOutput) ToApiVersionSetContractDetailsPtrOutput() ApiVersionSetContractDetailsPtrOutput {
	return o.ToApiVersionSetContractDetailsPtrOutputWithContext(context.Background())
}

func (o ApiVersionSetContractDetailsOutput) ToApiVersionSetContractDetailsPtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiVersionSetContractDetails) *ApiVersionSetContractDetails {
		return &v
	}).(ApiVersionSetContractDetailsPtrOutput)
}

func (o ApiVersionSetContractDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[ApiVersionSetContractDetails] {
	return pulumix.Output[ApiVersionSetContractDetails]{
		OutputState: o.OutputState,
	}
}

// Description of API Version Set.
func (o ApiVersionSetContractDetailsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetails) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Identifier for existing API Version Set. Omit this value to create a new Version Set.
func (o ApiVersionSetContractDetailsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetails) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The display Name of the API Version Set.
func (o ApiVersionSetContractDetailsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetails) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o ApiVersionSetContractDetailsOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetails) *string { return v.VersionHeaderName }).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o ApiVersionSetContractDetailsOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetails) *string { return v.VersionQueryName }).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifier will be located in a HTTP request.
func (o ApiVersionSetContractDetailsOutput) VersioningScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetails) *string { return v.VersioningScheme }).(pulumi.StringPtrOutput)
}

type ApiVersionSetContractDetailsPtrOutput struct{ *pulumi.OutputState }

func (ApiVersionSetContractDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiVersionSetContractDetails)(nil)).Elem()
}

func (o ApiVersionSetContractDetailsPtrOutput) ToApiVersionSetContractDetailsPtrOutput() ApiVersionSetContractDetailsPtrOutput {
	return o
}

func (o ApiVersionSetContractDetailsPtrOutput) ToApiVersionSetContractDetailsPtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsPtrOutput {
	return o
}

func (o ApiVersionSetContractDetailsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ApiVersionSetContractDetails] {
	return pulumix.Output[*ApiVersionSetContractDetails]{
		OutputState: o.OutputState,
	}
}

func (o ApiVersionSetContractDetailsPtrOutput) Elem() ApiVersionSetContractDetailsOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetails) ApiVersionSetContractDetails {
		if v != nil {
			return *v
		}
		var ret ApiVersionSetContractDetails
		return ret
	}).(ApiVersionSetContractDetailsOutput)
}

// Description of API Version Set.
func (o ApiVersionSetContractDetailsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetails) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Identifier for existing API Version Set. Omit this value to create a new Version Set.
func (o ApiVersionSetContractDetailsPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetails) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The display Name of the API Version Set.
func (o ApiVersionSetContractDetailsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetails) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o ApiVersionSetContractDetailsPtrOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetails) *string {
		if v == nil {
			return nil
		}
		return v.VersionHeaderName
	}).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o ApiVersionSetContractDetailsPtrOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetails) *string {
		if v == nil {
			return nil
		}
		return v.VersionQueryName
	}).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifier will be located in a HTTP request.
func (o ApiVersionSetContractDetailsPtrOutput) VersioningScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetails) *string {
		if v == nil {
			return nil
		}
		return v.VersioningScheme
	}).(pulumi.StringPtrOutput)
}

// An API Version Set contains the common configuration for a set of API Versions relating
type ApiVersionSetContractDetailsResponse struct {
	// Description of API Version Set.
	Description *string `pulumi:"description"`
	// Identifier for existing API Version Set. Omit this value to create a new Version Set.
	Id *string `pulumi:"id"`
	// The display Name of the API Version Set.
	Name *string `pulumi:"name"`
	// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
	VersionHeaderName *string `pulumi:"versionHeaderName"`
	// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
	VersionQueryName *string `pulumi:"versionQueryName"`
	// An value that determines where the API Version identifier will be located in a HTTP request.
	VersioningScheme *string `pulumi:"versioningScheme"`
}

// An API Version Set contains the common configuration for a set of API Versions relating
type ApiVersionSetContractDetailsResponseOutput struct{ *pulumi.OutputState }

func (ApiVersionSetContractDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiVersionSetContractDetailsResponse)(nil)).Elem()
}

func (o ApiVersionSetContractDetailsResponseOutput) ToApiVersionSetContractDetailsResponseOutput() ApiVersionSetContractDetailsResponseOutput {
	return o
}

func (o ApiVersionSetContractDetailsResponseOutput) ToApiVersionSetContractDetailsResponseOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsResponseOutput {
	return o
}

func (o ApiVersionSetContractDetailsResponseOutput) ToOutput(ctx context.Context) pulumix.Output[ApiVersionSetContractDetailsResponse] {
	return pulumix.Output[ApiVersionSetContractDetailsResponse]{
		OutputState: o.OutputState,
	}
}

// Description of API Version Set.
func (o ApiVersionSetContractDetailsResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Identifier for existing API Version Set. Omit this value to create a new Version Set.
func (o ApiVersionSetContractDetailsResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The display Name of the API Version Set.
func (o ApiVersionSetContractDetailsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o ApiVersionSetContractDetailsResponseOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.VersionHeaderName }).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o ApiVersionSetContractDetailsResponseOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.VersionQueryName }).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifier will be located in a HTTP request.
func (o ApiVersionSetContractDetailsResponseOutput) VersioningScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiVersionSetContractDetailsResponse) *string { return v.VersioningScheme }).(pulumi.StringPtrOutput)
}

type ApiVersionSetContractDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiVersionSetContractDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiVersionSetContractDetailsResponse)(nil)).Elem()
}

func (o ApiVersionSetContractDetailsResponsePtrOutput) ToApiVersionSetContractDetailsResponsePtrOutput() ApiVersionSetContractDetailsResponsePtrOutput {
	return o
}

func (o ApiVersionSetContractDetailsResponsePtrOutput) ToApiVersionSetContractDetailsResponsePtrOutputWithContext(ctx context.Context) ApiVersionSetContractDetailsResponsePtrOutput {
	return o
}

func (o ApiVersionSetContractDetailsResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ApiVersionSetContractDetailsResponse] {
	return pulumix.Output[*ApiVersionSetContractDetailsResponse]{
		OutputState: o.OutputState,
	}
}

func (o ApiVersionSetContractDetailsResponsePtrOutput) Elem() ApiVersionSetContractDetailsResponseOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) ApiVersionSetContractDetailsResponse {
		if v != nil {
			return *v
		}
		var ret ApiVersionSetContractDetailsResponse
		return ret
	}).(ApiVersionSetContractDetailsResponseOutput)
}

// Description of API Version Set.
func (o ApiVersionSetContractDetailsResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Identifier for existing API Version Set. Omit this value to create a new Version Set.
func (o ApiVersionSetContractDetailsResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The display Name of the API Version Set.
func (o ApiVersionSetContractDetailsResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.
func (o ApiVersionSetContractDetailsResponsePtrOutput) VersionHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VersionHeaderName
	}).(pulumi.StringPtrOutput)
}

// Name of query parameter that indicates the API Version if versioningScheme is set to `query`.
func (o ApiVersionSetContractDetailsResponsePtrOutput) VersionQueryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VersionQueryName
	}).(pulumi.StringPtrOutput)
}

// An value that determines where the API Version identifier will be located in a HTTP request.
func (o ApiVersionSetContractDetailsResponsePtrOutput) VersioningScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiVersionSetContractDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.VersioningScheme
	}).(pulumi.StringPtrOutput)
}

// API Authentication Settings.
type AuthenticationSettingsContract struct {
	// OAuth2 Authentication settings
	OAuth2 *OAuth2AuthenticationSettingsContract `pulumi:"oAuth2"`
	// OpenID Connect Authentication Settings
	Openid *OpenIdAuthenticationSettingsContract `pulumi:"openid"`
}

// AuthenticationSettingsContractInput is an input type that accepts AuthenticationSettingsContractArgs and AuthenticationSettingsContractOutput values.
// You can construct a concrete instance of `AuthenticationSettingsContractInput` via:
//
//	AuthenticationSettingsContractArgs{...}
type AuthenticationSettingsContractInput interface {
	pulumi.Input

	ToAuthenticationSettingsContractOutput() AuthenticationSettingsContractOutput
	ToAuthenticationSettingsContractOutputWithContext(context.Context) AuthenticationSettingsContractOutput
}

// API Authentication Settings.
type AuthenticationSettingsContractArgs struct {
	// OAuth2 Authentication settings
	OAuth2 OAuth2AuthenticationSettingsContractPtrInput `pulumi:"oAuth2"`
	// OpenID Connect Authentication Settings
	Openid OpenIdAuthenticationSettingsContractPtrInput `pulumi:"openid"`
}

func (AuthenticationSettingsContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSettingsContract)(nil)).Elem()
}

func (i AuthenticationSettingsContractArgs) ToAuthenticationSettingsContractOutput() AuthenticationSettingsContractOutput {
	return i.ToAuthenticationSettingsContractOutputWithContext(context.Background())
}

func (i AuthenticationSettingsContractArgs) ToAuthenticationSettingsContractOutputWithContext(ctx context.Context) AuthenticationSettingsContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsContractOutput)
}

func (i AuthenticationSettingsContractArgs) ToOutput(ctx context.Context) pulumix.Output[AuthenticationSettingsContract] {
	return pulumix.Output[AuthenticationSettingsContract]{
		OutputState: i.ToAuthenticationSettingsContractOutputWithContext(ctx).OutputState,
	}
}

func (i AuthenticationSettingsContractArgs) ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput {
	return i.ToAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i AuthenticationSettingsContractArgs) ToAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsContractOutput).ToAuthenticationSettingsContractPtrOutputWithContext(ctx)
}

// AuthenticationSettingsContractPtrInput is an input type that accepts AuthenticationSettingsContractArgs, AuthenticationSettingsContractPtr and AuthenticationSettingsContractPtrOutput values.
// You can construct a concrete instance of `AuthenticationSettingsContractPtrInput` via:
//
//	        AuthenticationSettingsContractArgs{...}
//
//	or:
//
//	        nil
type AuthenticationSettingsContractPtrInput interface {
	pulumi.Input

	ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput
	ToAuthenticationSettingsContractPtrOutputWithContext(context.Context) AuthenticationSettingsContractPtrOutput
}

type authenticationSettingsContractPtrType AuthenticationSettingsContractArgs

func AuthenticationSettingsContractPtr(v *AuthenticationSettingsContractArgs) AuthenticationSettingsContractPtrInput {
	return (*authenticationSettingsContractPtrType)(v)
}

func (*authenticationSettingsContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSettingsContract)(nil)).Elem()
}

func (i *authenticationSettingsContractPtrType) ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput {
	return i.ToAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i *authenticationSettingsContractPtrType) ToAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationSettingsContractPtrOutput)
}

func (i *authenticationSettingsContractPtrType) ToOutput(ctx context.Context) pulumix.Output[*AuthenticationSettingsContract] {
	return pulumix.Output[*AuthenticationSettingsContract]{
		OutputState: i.ToAuthenticationSettingsContractPtrOutputWithContext(ctx).OutputState,
	}
}

// API Authentication Settings.
type AuthenticationSettingsContractOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSettingsContract)(nil)).Elem()
}

func (o AuthenticationSettingsContractOutput) ToAuthenticationSettingsContractOutput() AuthenticationSettingsContractOutput {
	return o
}

func (o AuthenticationSettingsContractOutput) ToAuthenticationSettingsContractOutputWithContext(ctx context.Context) AuthenticationSettingsContractOutput {
	return o
}

func (o AuthenticationSettingsContractOutput) ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput {
	return o.ToAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (o AuthenticationSettingsContractOutput) ToAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthenticationSettingsContract) *AuthenticationSettingsContract {
		return &v
	}).(AuthenticationSettingsContractPtrOutput)
}

func (o AuthenticationSettingsContractOutput) ToOutput(ctx context.Context) pulumix.Output[AuthenticationSettingsContract] {
	return pulumix.Output[AuthenticationSettingsContract]{
		OutputState: o.OutputState,
	}
}

// OAuth2 Authentication settings
func (o AuthenticationSettingsContractOutput) OAuth2() OAuth2AuthenticationSettingsContractPtrOutput {
	return o.ApplyT(func(v AuthenticationSettingsContract) *OAuth2AuthenticationSettingsContract { return v.OAuth2 }).(OAuth2AuthenticationSettingsContractPtrOutput)
}

// OpenID Connect Authentication Settings
func (o AuthenticationSettingsContractOutput) Openid() OpenIdAuthenticationSettingsContractPtrOutput {
	return o.ApplyT(func(v AuthenticationSettingsContract) *OpenIdAuthenticationSettingsContract { return v.Openid }).(OpenIdAuthenticationSettingsContractPtrOutput)
}

type AuthenticationSettingsContractPtrOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsContractPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSettingsContract)(nil)).Elem()
}

func (o AuthenticationSettingsContractPtrOutput) ToAuthenticationSettingsContractPtrOutput() AuthenticationSettingsContractPtrOutput {
	return o
}

func (o AuthenticationSettingsContractPtrOutput) ToAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractPtrOutput {
	return o
}

func (o AuthenticationSettingsContractPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AuthenticationSettingsContract] {
	return pulumix.Output[*AuthenticationSettingsContract]{
		OutputState: o.OutputState,
	}
}

func (o AuthenticationSettingsContractPtrOutput) Elem() AuthenticationSettingsContractOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContract) AuthenticationSettingsContract {
		if v != nil {
			return *v
		}
		var ret AuthenticationSettingsContract
		return ret
	}).(AuthenticationSettingsContractOutput)
}

// OAuth2 Authentication settings
func (o AuthenticationSettingsContractPtrOutput) OAuth2() OAuth2AuthenticationSettingsContractPtrOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContract) *OAuth2AuthenticationSettingsContract {
		if v == nil {
			return nil
		}
		return v.OAuth2
	}).(OAuth2AuthenticationSettingsContractPtrOutput)
}

// OpenID Connect Authentication Settings
func (o AuthenticationSettingsContractPtrOutput) Openid() OpenIdAuthenticationSettingsContractPtrOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContract) *OpenIdAuthenticationSettingsContract {
		if v == nil {
			return nil
		}
		return v.Openid
	}).(OpenIdAuthenticationSettingsContractPtrOutput)
}

// API Authentication Settings.
type AuthenticationSettingsContractResponse struct {
	// OAuth2 Authentication settings
	OAuth2 *OAuth2AuthenticationSettingsContractResponse `pulumi:"oAuth2"`
	// OpenID Connect Authentication Settings
	Openid *OpenIdAuthenticationSettingsContractResponse `pulumi:"openid"`
}

// API Authentication Settings.
type AuthenticationSettingsContractResponseOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o AuthenticationSettingsContractResponseOutput) ToAuthenticationSettingsContractResponseOutput() AuthenticationSettingsContractResponseOutput {
	return o
}

func (o AuthenticationSettingsContractResponseOutput) ToAuthenticationSettingsContractResponseOutputWithContext(ctx context.Context) AuthenticationSettingsContractResponseOutput {
	return o
}

func (o AuthenticationSettingsContractResponseOutput) ToOutput(ctx context.Context) pulumix.Output[AuthenticationSettingsContractResponse] {
	return pulumix.Output[AuthenticationSettingsContractResponse]{
		OutputState: o.OutputState,
	}
}

// OAuth2 Authentication settings
func (o AuthenticationSettingsContractResponseOutput) OAuth2() OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v AuthenticationSettingsContractResponse) *OAuth2AuthenticationSettingsContractResponse {
		return v.OAuth2
	}).(OAuth2AuthenticationSettingsContractResponsePtrOutput)
}

// OpenID Connect Authentication Settings
func (o AuthenticationSettingsContractResponseOutput) Openid() OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v AuthenticationSettingsContractResponse) *OpenIdAuthenticationSettingsContractResponse {
		return v.Openid
	}).(OpenIdAuthenticationSettingsContractResponsePtrOutput)
}

type AuthenticationSettingsContractResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthenticationSettingsContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o AuthenticationSettingsContractResponsePtrOutput) ToAuthenticationSettingsContractResponsePtrOutput() AuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o AuthenticationSettingsContractResponsePtrOutput) ToAuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) AuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o AuthenticationSettingsContractResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AuthenticationSettingsContractResponse] {
	return pulumix.Output[*AuthenticationSettingsContractResponse]{
		OutputState: o.OutputState,
	}
}

func (o AuthenticationSettingsContractResponsePtrOutput) Elem() AuthenticationSettingsContractResponseOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContractResponse) AuthenticationSettingsContractResponse {
		if v != nil {
			return *v
		}
		var ret AuthenticationSettingsContractResponse
		return ret
	}).(AuthenticationSettingsContractResponseOutput)
}

// OAuth2 Authentication settings
func (o AuthenticationSettingsContractResponsePtrOutput) OAuth2() OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContractResponse) *OAuth2AuthenticationSettingsContractResponse {
		if v == nil {
			return nil
		}
		return v.OAuth2
	}).(OAuth2AuthenticationSettingsContractResponsePtrOutput)
}

// OpenID Connect Authentication Settings
func (o AuthenticationSettingsContractResponsePtrOutput) Openid() OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return o.ApplyT(func(v *AuthenticationSettingsContractResponse) *OpenIdAuthenticationSettingsContractResponse {
		if v == nil {
			return nil
		}
		return v.Openid
	}).(OpenIdAuthenticationSettingsContractResponsePtrOutput)
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContract struct {
	// OAuth authorization server identifier.
	AuthorizationServerId *string `pulumi:"authorizationServerId"`
	// operations scope.
	Scope *string `pulumi:"scope"`
}

// OAuth2AuthenticationSettingsContractInput is an input type that accepts OAuth2AuthenticationSettingsContractArgs and OAuth2AuthenticationSettingsContractOutput values.
// You can construct a concrete instance of `OAuth2AuthenticationSettingsContractInput` via:
//
//	OAuth2AuthenticationSettingsContractArgs{...}
type OAuth2AuthenticationSettingsContractInput interface {
	pulumi.Input

	ToOAuth2AuthenticationSettingsContractOutput() OAuth2AuthenticationSettingsContractOutput
	ToOAuth2AuthenticationSettingsContractOutputWithContext(context.Context) OAuth2AuthenticationSettingsContractOutput
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContractArgs struct {
	// OAuth authorization server identifier.
	AuthorizationServerId pulumi.StringPtrInput `pulumi:"authorizationServerId"`
	// operations scope.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (OAuth2AuthenticationSettingsContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuth2AuthenticationSettingsContract)(nil)).Elem()
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOAuth2AuthenticationSettingsContractOutput() OAuth2AuthenticationSettingsContractOutput {
	return i.ToOAuth2AuthenticationSettingsContractOutputWithContext(context.Background())
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOAuth2AuthenticationSettingsContractOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuth2AuthenticationSettingsContractOutput)
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOutput(ctx context.Context) pulumix.Output[OAuth2AuthenticationSettingsContract] {
	return pulumix.Output[OAuth2AuthenticationSettingsContract]{
		OutputState: i.ToOAuth2AuthenticationSettingsContractOutputWithContext(ctx).OutputState,
	}
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput {
	return i.ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i OAuth2AuthenticationSettingsContractArgs) ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuth2AuthenticationSettingsContractOutput).ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx)
}

// OAuth2AuthenticationSettingsContractPtrInput is an input type that accepts OAuth2AuthenticationSettingsContractArgs, OAuth2AuthenticationSettingsContractPtr and OAuth2AuthenticationSettingsContractPtrOutput values.
// You can construct a concrete instance of `OAuth2AuthenticationSettingsContractPtrInput` via:
//
//	        OAuth2AuthenticationSettingsContractArgs{...}
//
//	or:
//
//	        nil
type OAuth2AuthenticationSettingsContractPtrInput interface {
	pulumi.Input

	ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput
	ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(context.Context) OAuth2AuthenticationSettingsContractPtrOutput
}

type oauth2AuthenticationSettingsContractPtrType OAuth2AuthenticationSettingsContractArgs

func OAuth2AuthenticationSettingsContractPtr(v *OAuth2AuthenticationSettingsContractArgs) OAuth2AuthenticationSettingsContractPtrInput {
	return (*oauth2AuthenticationSettingsContractPtrType)(v)
}

func (*oauth2AuthenticationSettingsContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuth2AuthenticationSettingsContract)(nil)).Elem()
}

func (i *oauth2AuthenticationSettingsContractPtrType) ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput {
	return i.ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i *oauth2AuthenticationSettingsContractPtrType) ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OAuth2AuthenticationSettingsContractPtrOutput)
}

func (i *oauth2AuthenticationSettingsContractPtrType) ToOutput(ctx context.Context) pulumix.Output[*OAuth2AuthenticationSettingsContract] {
	return pulumix.Output[*OAuth2AuthenticationSettingsContract]{
		OutputState: i.ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx).OutputState,
	}
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContractOutput struct{ *pulumi.OutputState }

func (OAuth2AuthenticationSettingsContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuth2AuthenticationSettingsContract)(nil)).Elem()
}

func (o OAuth2AuthenticationSettingsContractOutput) ToOAuth2AuthenticationSettingsContractOutput() OAuth2AuthenticationSettingsContractOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractOutput) ToOAuth2AuthenticationSettingsContractOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractOutput) ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput {
	return o.ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (o OAuth2AuthenticationSettingsContractOutput) ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OAuth2AuthenticationSettingsContract) *OAuth2AuthenticationSettingsContract {
		return &v
	}).(OAuth2AuthenticationSettingsContractPtrOutput)
}

func (o OAuth2AuthenticationSettingsContractOutput) ToOutput(ctx context.Context) pulumix.Output[OAuth2AuthenticationSettingsContract] {
	return pulumix.Output[OAuth2AuthenticationSettingsContract]{
		OutputState: o.OutputState,
	}
}

// OAuth authorization server identifier.
func (o OAuth2AuthenticationSettingsContractOutput) AuthorizationServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContract) *string { return v.AuthorizationServerId }).(pulumi.StringPtrOutput)
}

// operations scope.
func (o OAuth2AuthenticationSettingsContractOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContract) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type OAuth2AuthenticationSettingsContractPtrOutput struct{ *pulumi.OutputState }

func (OAuth2AuthenticationSettingsContractPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuth2AuthenticationSettingsContract)(nil)).Elem()
}

func (o OAuth2AuthenticationSettingsContractPtrOutput) ToOAuth2AuthenticationSettingsContractPtrOutput() OAuth2AuthenticationSettingsContractPtrOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractPtrOutput) ToOAuth2AuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractPtrOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OAuth2AuthenticationSettingsContract] {
	return pulumix.Output[*OAuth2AuthenticationSettingsContract]{
		OutputState: o.OutputState,
	}
}

func (o OAuth2AuthenticationSettingsContractPtrOutput) Elem() OAuth2AuthenticationSettingsContractOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContract) OAuth2AuthenticationSettingsContract {
		if v != nil {
			return *v
		}
		var ret OAuth2AuthenticationSettingsContract
		return ret
	}).(OAuth2AuthenticationSettingsContractOutput)
}

// OAuth authorization server identifier.
func (o OAuth2AuthenticationSettingsContractPtrOutput) AuthorizationServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContract) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationServerId
	}).(pulumi.StringPtrOutput)
}

// operations scope.
func (o OAuth2AuthenticationSettingsContractPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContract) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContractResponse struct {
	// OAuth authorization server identifier.
	AuthorizationServerId *string `pulumi:"authorizationServerId"`
	// operations scope.
	Scope *string `pulumi:"scope"`
}

// API OAuth2 Authentication settings details.
type OAuth2AuthenticationSettingsContractResponseOutput struct{ *pulumi.OutputState }

func (OAuth2AuthenticationSettingsContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OAuth2AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o OAuth2AuthenticationSettingsContractResponseOutput) ToOAuth2AuthenticationSettingsContractResponseOutput() OAuth2AuthenticationSettingsContractResponseOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractResponseOutput) ToOAuth2AuthenticationSettingsContractResponseOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractResponseOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractResponseOutput) ToOutput(ctx context.Context) pulumix.Output[OAuth2AuthenticationSettingsContractResponse] {
	return pulumix.Output[OAuth2AuthenticationSettingsContractResponse]{
		OutputState: o.OutputState,
	}
}

// OAuth authorization server identifier.
func (o OAuth2AuthenticationSettingsContractResponseOutput) AuthorizationServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContractResponse) *string { return v.AuthorizationServerId }).(pulumi.StringPtrOutput)
}

// operations scope.
func (o OAuth2AuthenticationSettingsContractResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OAuth2AuthenticationSettingsContractResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type OAuth2AuthenticationSettingsContractResponsePtrOutput struct{ *pulumi.OutputState }

func (OAuth2AuthenticationSettingsContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OAuth2AuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) ToOAuth2AuthenticationSettingsContractResponsePtrOutput() OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) ToOAuth2AuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) OAuth2AuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OAuth2AuthenticationSettingsContractResponse] {
	return pulumix.Output[*OAuth2AuthenticationSettingsContractResponse]{
		OutputState: o.OutputState,
	}
}

func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) Elem() OAuth2AuthenticationSettingsContractResponseOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContractResponse) OAuth2AuthenticationSettingsContractResponse {
		if v != nil {
			return *v
		}
		var ret OAuth2AuthenticationSettingsContractResponse
		return ret
	}).(OAuth2AuthenticationSettingsContractResponseOutput)
}

// OAuth authorization server identifier.
func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) AuthorizationServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationServerId
	}).(pulumi.StringPtrOutput)
}

// operations scope.
func (o OAuth2AuthenticationSettingsContractResponsePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OAuth2AuthenticationSettingsContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// API OAuth2 Authentication settings details.
type OpenIdAuthenticationSettingsContract struct {
	// How to send token to the server.
	BearerTokenSendingMethods []string `pulumi:"bearerTokenSendingMethods"`
	// OAuth authorization server identifier.
	OpenidProviderId *string `pulumi:"openidProviderId"`
}

// OpenIdAuthenticationSettingsContractInput is an input type that accepts OpenIdAuthenticationSettingsContractArgs and OpenIdAuthenticationSettingsContractOutput values.
// You can construct a concrete instance of `OpenIdAuthenticationSettingsContractInput` via:
//
//	OpenIdAuthenticationSettingsContractArgs{...}
type OpenIdAuthenticationSettingsContractInput interface {
	pulumi.Input

	ToOpenIdAuthenticationSettingsContractOutput() OpenIdAuthenticationSettingsContractOutput
	ToOpenIdAuthenticationSettingsContractOutputWithContext(context.Context) OpenIdAuthenticationSettingsContractOutput
}

// API OAuth2 Authentication settings details.
type OpenIdAuthenticationSettingsContractArgs struct {
	// How to send token to the server.
	BearerTokenSendingMethods pulumi.StringArrayInput `pulumi:"bearerTokenSendingMethods"`
	// OAuth authorization server identifier.
	OpenidProviderId pulumi.StringPtrInput `pulumi:"openidProviderId"`
}

func (OpenIdAuthenticationSettingsContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdAuthenticationSettingsContract)(nil)).Elem()
}

func (i OpenIdAuthenticationSettingsContractArgs) ToOpenIdAuthenticationSettingsContractOutput() OpenIdAuthenticationSettingsContractOutput {
	return i.ToOpenIdAuthenticationSettingsContractOutputWithContext(context.Background())
}

func (i OpenIdAuthenticationSettingsContractArgs) ToOpenIdAuthenticationSettingsContractOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdAuthenticationSettingsContractOutput)
}

func (i OpenIdAuthenticationSettingsContractArgs) ToOutput(ctx context.Context) pulumix.Output[OpenIdAuthenticationSettingsContract] {
	return pulumix.Output[OpenIdAuthenticationSettingsContract]{
		OutputState: i.ToOpenIdAuthenticationSettingsContractOutputWithContext(ctx).OutputState,
	}
}

func (i OpenIdAuthenticationSettingsContractArgs) ToOpenIdAuthenticationSettingsContractPtrOutput() OpenIdAuthenticationSettingsContractPtrOutput {
	return i.ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i OpenIdAuthenticationSettingsContractArgs) ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdAuthenticationSettingsContractOutput).ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(ctx)
}

// OpenIdAuthenticationSettingsContractPtrInput is an input type that accepts OpenIdAuthenticationSettingsContractArgs, OpenIdAuthenticationSettingsContractPtr and OpenIdAuthenticationSettingsContractPtrOutput values.
// You can construct a concrete instance of `OpenIdAuthenticationSettingsContractPtrInput` via:
//
//	        OpenIdAuthenticationSettingsContractArgs{...}
//
//	or:
//
//	        nil
type OpenIdAuthenticationSettingsContractPtrInput interface {
	pulumi.Input

	ToOpenIdAuthenticationSettingsContractPtrOutput() OpenIdAuthenticationSettingsContractPtrOutput
	ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(context.Context) OpenIdAuthenticationSettingsContractPtrOutput
}

type openIdAuthenticationSettingsContractPtrType OpenIdAuthenticationSettingsContractArgs

func OpenIdAuthenticationSettingsContractPtr(v *OpenIdAuthenticationSettingsContractArgs) OpenIdAuthenticationSettingsContractPtrInput {
	return (*openIdAuthenticationSettingsContractPtrType)(v)
}

func (*openIdAuthenticationSettingsContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdAuthenticationSettingsContract)(nil)).Elem()
}

func (i *openIdAuthenticationSettingsContractPtrType) ToOpenIdAuthenticationSettingsContractPtrOutput() OpenIdAuthenticationSettingsContractPtrOutput {
	return i.ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (i *openIdAuthenticationSettingsContractPtrType) ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdAuthenticationSettingsContractPtrOutput)
}

func (i *openIdAuthenticationSettingsContractPtrType) ToOutput(ctx context.Context) pulumix.Output[*OpenIdAuthenticationSettingsContract] {
	return pulumix.Output[*OpenIdAuthenticationSettingsContract]{
		OutputState: i.ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(ctx).OutputState,
	}
}

// API OAuth2 Authentication settings details.
type OpenIdAuthenticationSettingsContractOutput struct{ *pulumi.OutputState }

func (OpenIdAuthenticationSettingsContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdAuthenticationSettingsContract)(nil)).Elem()
}

func (o OpenIdAuthenticationSettingsContractOutput) ToOpenIdAuthenticationSettingsContractOutput() OpenIdAuthenticationSettingsContractOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractOutput) ToOpenIdAuthenticationSettingsContractOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractOutput) ToOpenIdAuthenticationSettingsContractPtrOutput() OpenIdAuthenticationSettingsContractPtrOutput {
	return o.ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(context.Background())
}

func (o OpenIdAuthenticationSettingsContractOutput) ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpenIdAuthenticationSettingsContract) *OpenIdAuthenticationSettingsContract {
		return &v
	}).(OpenIdAuthenticationSettingsContractPtrOutput)
}

func (o OpenIdAuthenticationSettingsContractOutput) ToOutput(ctx context.Context) pulumix.Output[OpenIdAuthenticationSettingsContract] {
	return pulumix.Output[OpenIdAuthenticationSettingsContract]{
		OutputState: o.OutputState,
	}
}

// How to send token to the server.
func (o OpenIdAuthenticationSettingsContractOutput) BearerTokenSendingMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OpenIdAuthenticationSettingsContract) []string { return v.BearerTokenSendingMethods }).(pulumi.StringArrayOutput)
}

// OAuth authorization server identifier.
func (o OpenIdAuthenticationSettingsContractOutput) OpenidProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdAuthenticationSettingsContract) *string { return v.OpenidProviderId }).(pulumi.StringPtrOutput)
}

type OpenIdAuthenticationSettingsContractPtrOutput struct{ *pulumi.OutputState }

func (OpenIdAuthenticationSettingsContractPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdAuthenticationSettingsContract)(nil)).Elem()
}

func (o OpenIdAuthenticationSettingsContractPtrOutput) ToOpenIdAuthenticationSettingsContractPtrOutput() OpenIdAuthenticationSettingsContractPtrOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractPtrOutput) ToOpenIdAuthenticationSettingsContractPtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractPtrOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OpenIdAuthenticationSettingsContract] {
	return pulumix.Output[*OpenIdAuthenticationSettingsContract]{
		OutputState: o.OutputState,
	}
}

func (o OpenIdAuthenticationSettingsContractPtrOutput) Elem() OpenIdAuthenticationSettingsContractOutput {
	return o.ApplyT(func(v *OpenIdAuthenticationSettingsContract) OpenIdAuthenticationSettingsContract {
		if v != nil {
			return *v
		}
		var ret OpenIdAuthenticationSettingsContract
		return ret
	}).(OpenIdAuthenticationSettingsContractOutput)
}

// How to send token to the server.
func (o OpenIdAuthenticationSettingsContractPtrOutput) BearerTokenSendingMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OpenIdAuthenticationSettingsContract) []string {
		if v == nil {
			return nil
		}
		return v.BearerTokenSendingMethods
	}).(pulumi.StringArrayOutput)
}

// OAuth authorization server identifier.
func (o OpenIdAuthenticationSettingsContractPtrOutput) OpenidProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdAuthenticationSettingsContract) *string {
		if v == nil {
			return nil
		}
		return v.OpenidProviderId
	}).(pulumi.StringPtrOutput)
}

// API OAuth2 Authentication settings details.
type OpenIdAuthenticationSettingsContractResponse struct {
	// How to send token to the server.
	BearerTokenSendingMethods []string `pulumi:"bearerTokenSendingMethods"`
	// OAuth authorization server identifier.
	OpenidProviderId *string `pulumi:"openidProviderId"`
}

// API OAuth2 Authentication settings details.
type OpenIdAuthenticationSettingsContractResponseOutput struct{ *pulumi.OutputState }

func (OpenIdAuthenticationSettingsContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdAuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o OpenIdAuthenticationSettingsContractResponseOutput) ToOpenIdAuthenticationSettingsContractResponseOutput() OpenIdAuthenticationSettingsContractResponseOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractResponseOutput) ToOpenIdAuthenticationSettingsContractResponseOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractResponseOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractResponseOutput) ToOutput(ctx context.Context) pulumix.Output[OpenIdAuthenticationSettingsContractResponse] {
	return pulumix.Output[OpenIdAuthenticationSettingsContractResponse]{
		OutputState: o.OutputState,
	}
}

// How to send token to the server.
func (o OpenIdAuthenticationSettingsContractResponseOutput) BearerTokenSendingMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OpenIdAuthenticationSettingsContractResponse) []string { return v.BearerTokenSendingMethods }).(pulumi.StringArrayOutput)
}

// OAuth authorization server identifier.
func (o OpenIdAuthenticationSettingsContractResponseOutput) OpenidProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdAuthenticationSettingsContractResponse) *string { return v.OpenidProviderId }).(pulumi.StringPtrOutput)
}

type OpenIdAuthenticationSettingsContractResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenIdAuthenticationSettingsContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdAuthenticationSettingsContractResponse)(nil)).Elem()
}

func (o OpenIdAuthenticationSettingsContractResponsePtrOutput) ToOpenIdAuthenticationSettingsContractResponsePtrOutput() OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractResponsePtrOutput) ToOpenIdAuthenticationSettingsContractResponsePtrOutputWithContext(ctx context.Context) OpenIdAuthenticationSettingsContractResponsePtrOutput {
	return o
}

func (o OpenIdAuthenticationSettingsContractResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OpenIdAuthenticationSettingsContractResponse] {
	return pulumix.Output[*OpenIdAuthenticationSettingsContractResponse]{
		OutputState: o.OutputState,
	}
}

func (o OpenIdAuthenticationSettingsContractResponsePtrOutput) Elem() OpenIdAuthenticationSettingsContractResponseOutput {
	return o.ApplyT(func(v *OpenIdAuthenticationSettingsContractResponse) OpenIdAuthenticationSettingsContractResponse {
		if v != nil {
			return *v
		}
		var ret OpenIdAuthenticationSettingsContractResponse
		return ret
	}).(OpenIdAuthenticationSettingsContractResponseOutput)
}

// How to send token to the server.
func (o OpenIdAuthenticationSettingsContractResponsePtrOutput) BearerTokenSendingMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OpenIdAuthenticationSettingsContractResponse) []string {
		if v == nil {
			return nil
		}
		return v.BearerTokenSendingMethods
	}).(pulumi.StringArrayOutput)
}

// OAuth authorization server identifier.
func (o OpenIdAuthenticationSettingsContractResponsePtrOutput) OpenidProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdAuthenticationSettingsContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.OpenidProviderId
	}).(pulumi.StringPtrOutput)
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContract struct {
	// Subscription key header name.
	Header *string `pulumi:"header"`
	// Subscription key query string parameter name.
	Query *string `pulumi:"query"`
}

// SubscriptionKeyParameterNamesContractInput is an input type that accepts SubscriptionKeyParameterNamesContractArgs and SubscriptionKeyParameterNamesContractOutput values.
// You can construct a concrete instance of `SubscriptionKeyParameterNamesContractInput` via:
//
//	SubscriptionKeyParameterNamesContractArgs{...}
type SubscriptionKeyParameterNamesContractInput interface {
	pulumi.Input

	ToSubscriptionKeyParameterNamesContractOutput() SubscriptionKeyParameterNamesContractOutput
	ToSubscriptionKeyParameterNamesContractOutputWithContext(context.Context) SubscriptionKeyParameterNamesContractOutput
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContractArgs struct {
	// Subscription key header name.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Subscription key query string parameter name.
	Query pulumi.StringPtrInput `pulumi:"query"`
}

func (SubscriptionKeyParameterNamesContractArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionKeyParameterNamesContract)(nil)).Elem()
}

func (i SubscriptionKeyParameterNamesContractArgs) ToSubscriptionKeyParameterNamesContractOutput() SubscriptionKeyParameterNamesContractOutput {
	return i.ToSubscriptionKeyParameterNamesContractOutputWithContext(context.Background())
}

func (i SubscriptionKeyParameterNamesContractArgs) ToSubscriptionKeyParameterNamesContractOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionKeyParameterNamesContractOutput)
}

func (i SubscriptionKeyParameterNamesContractArgs) ToOutput(ctx context.Context) pulumix.Output[SubscriptionKeyParameterNamesContract] {
	return pulumix.Output[SubscriptionKeyParameterNamesContract]{
		OutputState: i.ToSubscriptionKeyParameterNamesContractOutputWithContext(ctx).OutputState,
	}
}

func (i SubscriptionKeyParameterNamesContractArgs) ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput {
	return i.ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(context.Background())
}

func (i SubscriptionKeyParameterNamesContractArgs) ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionKeyParameterNamesContractOutput).ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx)
}

// SubscriptionKeyParameterNamesContractPtrInput is an input type that accepts SubscriptionKeyParameterNamesContractArgs, SubscriptionKeyParameterNamesContractPtr and SubscriptionKeyParameterNamesContractPtrOutput values.
// You can construct a concrete instance of `SubscriptionKeyParameterNamesContractPtrInput` via:
//
//	        SubscriptionKeyParameterNamesContractArgs{...}
//
//	or:
//
//	        nil
type SubscriptionKeyParameterNamesContractPtrInput interface {
	pulumi.Input

	ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput
	ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(context.Context) SubscriptionKeyParameterNamesContractPtrOutput
}

type subscriptionKeyParameterNamesContractPtrType SubscriptionKeyParameterNamesContractArgs

func SubscriptionKeyParameterNamesContractPtr(v *SubscriptionKeyParameterNamesContractArgs) SubscriptionKeyParameterNamesContractPtrInput {
	return (*subscriptionKeyParameterNamesContractPtrType)(v)
}

func (*subscriptionKeyParameterNamesContractPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionKeyParameterNamesContract)(nil)).Elem()
}

func (i *subscriptionKeyParameterNamesContractPtrType) ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput {
	return i.ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(context.Background())
}

func (i *subscriptionKeyParameterNamesContractPtrType) ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionKeyParameterNamesContractPtrOutput)
}

func (i *subscriptionKeyParameterNamesContractPtrType) ToOutput(ctx context.Context) pulumix.Output[*SubscriptionKeyParameterNamesContract] {
	return pulumix.Output[*SubscriptionKeyParameterNamesContract]{
		OutputState: i.ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx).OutputState,
	}
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContractOutput struct{ *pulumi.OutputState }

func (SubscriptionKeyParameterNamesContractOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionKeyParameterNamesContract)(nil)).Elem()
}

func (o SubscriptionKeyParameterNamesContractOutput) ToSubscriptionKeyParameterNamesContractOutput() SubscriptionKeyParameterNamesContractOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractOutput) ToSubscriptionKeyParameterNamesContractOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractOutput) ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput {
	return o.ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(context.Background())
}

func (o SubscriptionKeyParameterNamesContractOutput) ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionKeyParameterNamesContract) *SubscriptionKeyParameterNamesContract {
		return &v
	}).(SubscriptionKeyParameterNamesContractPtrOutput)
}

func (o SubscriptionKeyParameterNamesContractOutput) ToOutput(ctx context.Context) pulumix.Output[SubscriptionKeyParameterNamesContract] {
	return pulumix.Output[SubscriptionKeyParameterNamesContract]{
		OutputState: o.OutputState,
	}
}

// Subscription key header name.
func (o SubscriptionKeyParameterNamesContractOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContract) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Subscription key query string parameter name.
func (o SubscriptionKeyParameterNamesContractOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContract) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type SubscriptionKeyParameterNamesContractPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionKeyParameterNamesContractPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionKeyParameterNamesContract)(nil)).Elem()
}

func (o SubscriptionKeyParameterNamesContractPtrOutput) ToSubscriptionKeyParameterNamesContractPtrOutput() SubscriptionKeyParameterNamesContractPtrOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractPtrOutput) ToSubscriptionKeyParameterNamesContractPtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractPtrOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SubscriptionKeyParameterNamesContract] {
	return pulumix.Output[*SubscriptionKeyParameterNamesContract]{
		OutputState: o.OutputState,
	}
}

func (o SubscriptionKeyParameterNamesContractPtrOutput) Elem() SubscriptionKeyParameterNamesContractOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContract) SubscriptionKeyParameterNamesContract {
		if v != nil {
			return *v
		}
		var ret SubscriptionKeyParameterNamesContract
		return ret
	}).(SubscriptionKeyParameterNamesContractOutput)
}

// Subscription key header name.
func (o SubscriptionKeyParameterNamesContractPtrOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContract) *string {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.StringPtrOutput)
}

// Subscription key query string parameter name.
func (o SubscriptionKeyParameterNamesContractPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContract) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContractResponse struct {
	// Subscription key header name.
	Header *string `pulumi:"header"`
	// Subscription key query string parameter name.
	Query *string `pulumi:"query"`
}

// Subscription key parameter names details.
type SubscriptionKeyParameterNamesContractResponseOutput struct{ *pulumi.OutputState }

func (SubscriptionKeyParameterNamesContractResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionKeyParameterNamesContractResponse)(nil)).Elem()
}

func (o SubscriptionKeyParameterNamesContractResponseOutput) ToSubscriptionKeyParameterNamesContractResponseOutput() SubscriptionKeyParameterNamesContractResponseOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractResponseOutput) ToSubscriptionKeyParameterNamesContractResponseOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractResponseOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractResponseOutput) ToOutput(ctx context.Context) pulumix.Output[SubscriptionKeyParameterNamesContractResponse] {
	return pulumix.Output[SubscriptionKeyParameterNamesContractResponse]{
		OutputState: o.OutputState,
	}
}

// Subscription key header name.
func (o SubscriptionKeyParameterNamesContractResponseOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContractResponse) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Subscription key query string parameter name.
func (o SubscriptionKeyParameterNamesContractResponseOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionKeyParameterNamesContractResponse) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type SubscriptionKeyParameterNamesContractResponsePtrOutput struct{ *pulumi.OutputState }

func (SubscriptionKeyParameterNamesContractResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionKeyParameterNamesContractResponse)(nil)).Elem()
}

func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) ToSubscriptionKeyParameterNamesContractResponsePtrOutput() SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) ToSubscriptionKeyParameterNamesContractResponsePtrOutputWithContext(ctx context.Context) SubscriptionKeyParameterNamesContractResponsePtrOutput {
	return o
}

func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SubscriptionKeyParameterNamesContractResponse] {
	return pulumix.Output[*SubscriptionKeyParameterNamesContractResponse]{
		OutputState: o.OutputState,
	}
}

func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) Elem() SubscriptionKeyParameterNamesContractResponseOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContractResponse) SubscriptionKeyParameterNamesContractResponse {
		if v != nil {
			return *v
		}
		var ret SubscriptionKeyParameterNamesContractResponse
		return ret
	}).(SubscriptionKeyParameterNamesContractResponseOutput)
}

// Subscription key header name.
func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.StringPtrOutput)
}

// Subscription key query string parameter name.
func (o SubscriptionKeyParameterNamesContractResponsePtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriptionKeyParameterNamesContractResponse) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiCreateOrUpdatePropertiesWsdlSelectorOutput{})
	pulumi.RegisterOutputType(ApiCreateOrUpdatePropertiesWsdlSelectorPtrOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractDetailsOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractDetailsPtrOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractDetailsResponseOutput{})
	pulumi.RegisterOutputType(ApiVersionSetContractDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsContractOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsContractPtrOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsContractResponseOutput{})
	pulumi.RegisterOutputType(AuthenticationSettingsContractResponsePtrOutput{})
	pulumi.RegisterOutputType(OAuth2AuthenticationSettingsContractOutput{})
	pulumi.RegisterOutputType(OAuth2AuthenticationSettingsContractPtrOutput{})
	pulumi.RegisterOutputType(OAuth2AuthenticationSettingsContractResponseOutput{})
	pulumi.RegisterOutputType(OAuth2AuthenticationSettingsContractResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenIdAuthenticationSettingsContractOutput{})
	pulumi.RegisterOutputType(OpenIdAuthenticationSettingsContractPtrOutput{})
	pulumi.RegisterOutputType(OpenIdAuthenticationSettingsContractResponseOutput{})
	pulumi.RegisterOutputType(OpenIdAuthenticationSettingsContractResponsePtrOutput{})
	pulumi.RegisterOutputType(SubscriptionKeyParameterNamesContractOutput{})
	pulumi.RegisterOutputType(SubscriptionKeyParameterNamesContractPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionKeyParameterNamesContractResponseOutput{})
	pulumi.RegisterOutputType(SubscriptionKeyParameterNamesContractResponsePtrOutput{})
}
