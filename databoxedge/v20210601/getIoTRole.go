// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a specific role by name.
func GetIoTRole(ctx *pulumi.Context, args *GetIoTRoleArgs, opts ...pulumi.InvokeOption) (*GetIoTRoleResult, error) {
	var rv GetIoTRoleResult
	err := ctx.Invoke("azure-native:databoxedge/v20210601:getIoTRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetIoTRoleArgs struct {
	// The device name.
	DeviceName string `pulumi:"deviceName"`
	// The role name.
	Name string `pulumi:"name"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Compute role.
type GetIoTRoleResult struct {
	// Resource allocation
	ComputeResource *ComputeResourceResponse `pulumi:"computeResource"`
	// Host OS supported by the IoT role.
	HostPlatform string `pulumi:"hostPlatform"`
	// Platform where the Iot runtime is hosted.
	HostPlatformType string `pulumi:"hostPlatformType"`
	// The path ID that uniquely identifies the object.
	Id string `pulumi:"id"`
	// IoT device metadata to which data box edge device needs to be connected.
	IoTDeviceDetails IoTDeviceInfoResponse `pulumi:"ioTDeviceDetails"`
	// Iot edge agent details to download the agent and bootstrap iot runtime.
	IoTEdgeAgentInfo *IoTEdgeAgentInfoResponse `pulumi:"ioTEdgeAgentInfo"`
	// IoT edge device to which the IoT role needs to be configured.
	IoTEdgeDeviceDetails IoTDeviceInfoResponse `pulumi:"ioTEdgeDeviceDetails"`
	// Role type.
	// Expected value is 'IOT'.
	Kind string `pulumi:"kind"`
	// The object name.
	Name string `pulumi:"name"`
	// Role status.
	RoleStatus string `pulumi:"roleStatus"`
	// Mount points of shares in role(s).
	ShareMappings []MountPointMapResponse `pulumi:"shareMappings"`
	// Role configured on ASE resource
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

func GetIoTRoleOutput(ctx *pulumi.Context, args GetIoTRoleOutputArgs, opts ...pulumi.InvokeOption) GetIoTRoleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIoTRoleResult, error) {
			args := v.(GetIoTRoleArgs)
			r, err := GetIoTRole(ctx, &args, opts...)
			var s GetIoTRoleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIoTRoleResultOutput)
}

type GetIoTRoleOutputArgs struct {
	// The device name.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// The role name.
	Name pulumi.StringInput `pulumi:"name"`
	// The resource group name.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetIoTRoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIoTRoleArgs)(nil)).Elem()
}

// Compute role.
type GetIoTRoleResultOutput struct{ *pulumi.OutputState }

func (GetIoTRoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIoTRoleResult)(nil)).Elem()
}

func (o GetIoTRoleResultOutput) ToGetIoTRoleResultOutput() GetIoTRoleResultOutput {
	return o
}

func (o GetIoTRoleResultOutput) ToGetIoTRoleResultOutputWithContext(ctx context.Context) GetIoTRoleResultOutput {
	return o
}

// Resource allocation
func (o GetIoTRoleResultOutput) ComputeResource() ComputeResourceResponsePtrOutput {
	return o.ApplyT(func(v GetIoTRoleResult) *ComputeResourceResponse { return v.ComputeResource }).(ComputeResourceResponsePtrOutput)
}

// Host OS supported by the IoT role.
func (o GetIoTRoleResultOutput) HostPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v GetIoTRoleResult) string { return v.HostPlatform }).(pulumi.StringOutput)
}

// Platform where the Iot runtime is hosted.
func (o GetIoTRoleResultOutput) HostPlatformType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIoTRoleResult) string { return v.HostPlatformType }).(pulumi.StringOutput)
}

// The path ID that uniquely identifies the object.
func (o GetIoTRoleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIoTRoleResult) string { return v.Id }).(pulumi.StringOutput)
}

// IoT device metadata to which data box edge device needs to be connected.
func (o GetIoTRoleResultOutput) IoTDeviceDetails() IoTDeviceInfoResponseOutput {
	return o.ApplyT(func(v GetIoTRoleResult) IoTDeviceInfoResponse { return v.IoTDeviceDetails }).(IoTDeviceInfoResponseOutput)
}

// Iot edge agent details to download the agent and bootstrap iot runtime.
func (o GetIoTRoleResultOutput) IoTEdgeAgentInfo() IoTEdgeAgentInfoResponsePtrOutput {
	return o.ApplyT(func(v GetIoTRoleResult) *IoTEdgeAgentInfoResponse { return v.IoTEdgeAgentInfo }).(IoTEdgeAgentInfoResponsePtrOutput)
}

// IoT edge device to which the IoT role needs to be configured.
func (o GetIoTRoleResultOutput) IoTEdgeDeviceDetails() IoTDeviceInfoResponseOutput {
	return o.ApplyT(func(v GetIoTRoleResult) IoTDeviceInfoResponse { return v.IoTEdgeDeviceDetails }).(IoTDeviceInfoResponseOutput)
}

// Role type.
// Expected value is 'IOT'.
func (o GetIoTRoleResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetIoTRoleResult) string { return v.Kind }).(pulumi.StringOutput)
}

// The object name.
func (o GetIoTRoleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIoTRoleResult) string { return v.Name }).(pulumi.StringOutput)
}

// Role status.
func (o GetIoTRoleResultOutput) RoleStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetIoTRoleResult) string { return v.RoleStatus }).(pulumi.StringOutput)
}

// Mount points of shares in role(s).
func (o GetIoTRoleResultOutput) ShareMappings() MountPointMapResponseArrayOutput {
	return o.ApplyT(func(v GetIoTRoleResult) []MountPointMapResponse { return v.ShareMappings }).(MountPointMapResponseArrayOutput)
}

// Role configured on ASE resource
func (o GetIoTRoleResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v GetIoTRoleResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The hierarchical type of the object.
func (o GetIoTRoleResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetIoTRoleResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIoTRoleResultOutput{})
}
