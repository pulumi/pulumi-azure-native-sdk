// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The status of the Data Box Edge/Gateway device.
type DataBoxEdgeDeviceStatus string

const (
	DataBoxEdgeDeviceStatusReadyToSetup          = DataBoxEdgeDeviceStatus("ReadyToSetup")
	DataBoxEdgeDeviceStatusOnline                = DataBoxEdgeDeviceStatus("Online")
	DataBoxEdgeDeviceStatusOffline               = DataBoxEdgeDeviceStatus("Offline")
	DataBoxEdgeDeviceStatusNeedsAttention        = DataBoxEdgeDeviceStatus("NeedsAttention")
	DataBoxEdgeDeviceStatusDisconnected          = DataBoxEdgeDeviceStatus("Disconnected")
	DataBoxEdgeDeviceStatusPartiallyDisconnected = DataBoxEdgeDeviceStatus("PartiallyDisconnected")
	DataBoxEdgeDeviceStatusMaintenance           = DataBoxEdgeDeviceStatus("Maintenance")
)

func (DataBoxEdgeDeviceStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxEdgeDeviceStatus)(nil)).Elem()
}

func (e DataBoxEdgeDeviceStatus) ToDataBoxEdgeDeviceStatusOutput() DataBoxEdgeDeviceStatusOutput {
	return pulumi.ToOutput(e).(DataBoxEdgeDeviceStatusOutput)
}

func (e DataBoxEdgeDeviceStatus) ToDataBoxEdgeDeviceStatusOutputWithContext(ctx context.Context) DataBoxEdgeDeviceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataBoxEdgeDeviceStatusOutput)
}

func (e DataBoxEdgeDeviceStatus) ToDataBoxEdgeDeviceStatusPtrOutput() DataBoxEdgeDeviceStatusPtrOutput {
	return e.ToDataBoxEdgeDeviceStatusPtrOutputWithContext(context.Background())
}

func (e DataBoxEdgeDeviceStatus) ToDataBoxEdgeDeviceStatusPtrOutputWithContext(ctx context.Context) DataBoxEdgeDeviceStatusPtrOutput {
	return DataBoxEdgeDeviceStatus(e).ToDataBoxEdgeDeviceStatusOutputWithContext(ctx).ToDataBoxEdgeDeviceStatusPtrOutputWithContext(ctx)
}

func (e DataBoxEdgeDeviceStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataBoxEdgeDeviceStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataBoxEdgeDeviceStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataBoxEdgeDeviceStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataBoxEdgeDeviceStatusOutput struct{ *pulumi.OutputState }

func (DataBoxEdgeDeviceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxEdgeDeviceStatus)(nil)).Elem()
}

func (o DataBoxEdgeDeviceStatusOutput) ToDataBoxEdgeDeviceStatusOutput() DataBoxEdgeDeviceStatusOutput {
	return o
}

func (o DataBoxEdgeDeviceStatusOutput) ToDataBoxEdgeDeviceStatusOutputWithContext(ctx context.Context) DataBoxEdgeDeviceStatusOutput {
	return o
}

func (o DataBoxEdgeDeviceStatusOutput) ToDataBoxEdgeDeviceStatusPtrOutput() DataBoxEdgeDeviceStatusPtrOutput {
	return o.ToDataBoxEdgeDeviceStatusPtrOutputWithContext(context.Background())
}

func (o DataBoxEdgeDeviceStatusOutput) ToDataBoxEdgeDeviceStatusPtrOutputWithContext(ctx context.Context) DataBoxEdgeDeviceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataBoxEdgeDeviceStatus) *DataBoxEdgeDeviceStatus {
		return &v
	}).(DataBoxEdgeDeviceStatusPtrOutput)
}

func (o DataBoxEdgeDeviceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataBoxEdgeDeviceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataBoxEdgeDeviceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataBoxEdgeDeviceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataBoxEdgeDeviceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataBoxEdgeDeviceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataBoxEdgeDeviceStatusPtrOutput struct{ *pulumi.OutputState }

func (DataBoxEdgeDeviceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxEdgeDeviceStatus)(nil)).Elem()
}

func (o DataBoxEdgeDeviceStatusPtrOutput) ToDataBoxEdgeDeviceStatusPtrOutput() DataBoxEdgeDeviceStatusPtrOutput {
	return o
}

func (o DataBoxEdgeDeviceStatusPtrOutput) ToDataBoxEdgeDeviceStatusPtrOutputWithContext(ctx context.Context) DataBoxEdgeDeviceStatusPtrOutput {
	return o
}

func (o DataBoxEdgeDeviceStatusPtrOutput) Elem() DataBoxEdgeDeviceStatusOutput {
	return o.ApplyT(func(v *DataBoxEdgeDeviceStatus) DataBoxEdgeDeviceStatus {
		if v != nil {
			return *v
		}
		var ret DataBoxEdgeDeviceStatus
		return ret
	}).(DataBoxEdgeDeviceStatusOutput)
}

func (o DataBoxEdgeDeviceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataBoxEdgeDeviceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataBoxEdgeDeviceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataBoxEdgeDeviceStatusInput is an input type that accepts values of the DataBoxEdgeDeviceStatus enum
// A concrete instance of `DataBoxEdgeDeviceStatusInput` can be one of the following:
//
//	DataBoxEdgeDeviceStatusReadyToSetup
//	DataBoxEdgeDeviceStatusOnline
//	DataBoxEdgeDeviceStatusOffline
//	DataBoxEdgeDeviceStatusNeedsAttention
//	DataBoxEdgeDeviceStatusDisconnected
//	DataBoxEdgeDeviceStatusPartiallyDisconnected
//	DataBoxEdgeDeviceStatusMaintenance
type DataBoxEdgeDeviceStatusInput interface {
	pulumi.Input

	ToDataBoxEdgeDeviceStatusOutput() DataBoxEdgeDeviceStatusOutput
	ToDataBoxEdgeDeviceStatusOutputWithContext(context.Context) DataBoxEdgeDeviceStatusOutput
}

var dataBoxEdgeDeviceStatusPtrType = reflect.TypeOf((**DataBoxEdgeDeviceStatus)(nil)).Elem()

type DataBoxEdgeDeviceStatusPtrInput interface {
	pulumi.Input

	ToDataBoxEdgeDeviceStatusPtrOutput() DataBoxEdgeDeviceStatusPtrOutput
	ToDataBoxEdgeDeviceStatusPtrOutputWithContext(context.Context) DataBoxEdgeDeviceStatusPtrOutput
}

type dataBoxEdgeDeviceStatusPtr string

func DataBoxEdgeDeviceStatusPtr(v string) DataBoxEdgeDeviceStatusPtrInput {
	return (*dataBoxEdgeDeviceStatusPtr)(&v)
}

func (*dataBoxEdgeDeviceStatusPtr) ElementType() reflect.Type {
	return dataBoxEdgeDeviceStatusPtrType
}

func (in *dataBoxEdgeDeviceStatusPtr) ToDataBoxEdgeDeviceStatusPtrOutput() DataBoxEdgeDeviceStatusPtrOutput {
	return pulumi.ToOutput(in).(DataBoxEdgeDeviceStatusPtrOutput)
}

func (in *dataBoxEdgeDeviceStatusPtr) ToDataBoxEdgeDeviceStatusPtrOutputWithContext(ctx context.Context) DataBoxEdgeDeviceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataBoxEdgeDeviceStatusPtrOutput)
}

func (in *dataBoxEdgeDeviceStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*DataBoxEdgeDeviceStatus] {
	return pulumix.Output[*DataBoxEdgeDeviceStatus]{
		OutputState: in.ToDataBoxEdgeDeviceStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// The algorithm used to encrypt "Value".
type EncryptionAlgorithm string

const (
	EncryptionAlgorithmNone               = EncryptionAlgorithm("None")
	EncryptionAlgorithmAES256             = EncryptionAlgorithm("AES256")
	EncryptionAlgorithm_RSAES_PKCS1_v_1_5 = EncryptionAlgorithm("RSAES_PKCS1_v_1_5")
)

func (EncryptionAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAlgorithm)(nil)).Elem()
}

func (e EncryptionAlgorithm) ToEncryptionAlgorithmOutput() EncryptionAlgorithmOutput {
	return pulumi.ToOutput(e).(EncryptionAlgorithmOutput)
}

func (e EncryptionAlgorithm) ToEncryptionAlgorithmOutputWithContext(ctx context.Context) EncryptionAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionAlgorithmOutput)
}

func (e EncryptionAlgorithm) ToEncryptionAlgorithmPtrOutput() EncryptionAlgorithmPtrOutput {
	return e.ToEncryptionAlgorithmPtrOutputWithContext(context.Background())
}

func (e EncryptionAlgorithm) ToEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) EncryptionAlgorithmPtrOutput {
	return EncryptionAlgorithm(e).ToEncryptionAlgorithmOutputWithContext(ctx).ToEncryptionAlgorithmPtrOutputWithContext(ctx)
}

func (e EncryptionAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionAlgorithmOutput struct{ *pulumi.OutputState }

func (EncryptionAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAlgorithm)(nil)).Elem()
}

func (o EncryptionAlgorithmOutput) ToEncryptionAlgorithmOutput() EncryptionAlgorithmOutput {
	return o
}

func (o EncryptionAlgorithmOutput) ToEncryptionAlgorithmOutputWithContext(ctx context.Context) EncryptionAlgorithmOutput {
	return o
}

func (o EncryptionAlgorithmOutput) ToEncryptionAlgorithmPtrOutput() EncryptionAlgorithmPtrOutput {
	return o.ToEncryptionAlgorithmPtrOutputWithContext(context.Background())
}

func (o EncryptionAlgorithmOutput) ToEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) EncryptionAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionAlgorithm) *EncryptionAlgorithm {
		return &v
	}).(EncryptionAlgorithmPtrOutput)
}

func (o EncryptionAlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionAlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionAlgorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionAlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionAlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionAlgorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (EncryptionAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAlgorithm)(nil)).Elem()
}

func (o EncryptionAlgorithmPtrOutput) ToEncryptionAlgorithmPtrOutput() EncryptionAlgorithmPtrOutput {
	return o
}

func (o EncryptionAlgorithmPtrOutput) ToEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) EncryptionAlgorithmPtrOutput {
	return o
}

func (o EncryptionAlgorithmPtrOutput) Elem() EncryptionAlgorithmOutput {
	return o.ApplyT(func(v *EncryptionAlgorithm) EncryptionAlgorithm {
		if v != nil {
			return *v
		}
		var ret EncryptionAlgorithm
		return ret
	}).(EncryptionAlgorithmOutput)
}

func (o EncryptionAlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionAlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionAlgorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionAlgorithmInput is an input type that accepts values of the EncryptionAlgorithm enum
// A concrete instance of `EncryptionAlgorithmInput` can be one of the following:
//
//	EncryptionAlgorithmNone
//	EncryptionAlgorithmAES256
//	EncryptionAlgorithm_RSAES_PKCS1_v_1_5
type EncryptionAlgorithmInput interface {
	pulumi.Input

	ToEncryptionAlgorithmOutput() EncryptionAlgorithmOutput
	ToEncryptionAlgorithmOutputWithContext(context.Context) EncryptionAlgorithmOutput
}

var encryptionAlgorithmPtrType = reflect.TypeOf((**EncryptionAlgorithm)(nil)).Elem()

type EncryptionAlgorithmPtrInput interface {
	pulumi.Input

	ToEncryptionAlgorithmPtrOutput() EncryptionAlgorithmPtrOutput
	ToEncryptionAlgorithmPtrOutputWithContext(context.Context) EncryptionAlgorithmPtrOutput
}

type encryptionAlgorithmPtr string

func EncryptionAlgorithmPtr(v string) EncryptionAlgorithmPtrInput {
	return (*encryptionAlgorithmPtr)(&v)
}

func (*encryptionAlgorithmPtr) ElementType() reflect.Type {
	return encryptionAlgorithmPtrType
}

func (in *encryptionAlgorithmPtr) ToEncryptionAlgorithmPtrOutput() EncryptionAlgorithmPtrOutput {
	return pulumi.ToOutput(in).(EncryptionAlgorithmPtrOutput)
}

func (in *encryptionAlgorithmPtr) ToEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) EncryptionAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionAlgorithmPtrOutput)
}

func (in *encryptionAlgorithmPtr) ToOutput(ctx context.Context) pulumix.Output[*EncryptionAlgorithm] {
	return pulumix.Output[*EncryptionAlgorithm]{
		OutputState: in.ToEncryptionAlgorithmPtrOutputWithContext(ctx).OutputState,
	}
}

// Identity type
type MsiIdentityType string

const (
	MsiIdentityTypeNone           = MsiIdentityType("None")
	MsiIdentityTypeSystemAssigned = MsiIdentityType("SystemAssigned")
	MsiIdentityTypeUserAssigned   = MsiIdentityType("UserAssigned")
)

func (MsiIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*MsiIdentityType)(nil)).Elem()
}

func (e MsiIdentityType) ToMsiIdentityTypeOutput() MsiIdentityTypeOutput {
	return pulumi.ToOutput(e).(MsiIdentityTypeOutput)
}

func (e MsiIdentityType) ToMsiIdentityTypeOutputWithContext(ctx context.Context) MsiIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MsiIdentityTypeOutput)
}

func (e MsiIdentityType) ToMsiIdentityTypePtrOutput() MsiIdentityTypePtrOutput {
	return e.ToMsiIdentityTypePtrOutputWithContext(context.Background())
}

func (e MsiIdentityType) ToMsiIdentityTypePtrOutputWithContext(ctx context.Context) MsiIdentityTypePtrOutput {
	return MsiIdentityType(e).ToMsiIdentityTypeOutputWithContext(ctx).ToMsiIdentityTypePtrOutputWithContext(ctx)
}

func (e MsiIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MsiIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MsiIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MsiIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MsiIdentityTypeOutput struct{ *pulumi.OutputState }

func (MsiIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MsiIdentityType)(nil)).Elem()
}

func (o MsiIdentityTypeOutput) ToMsiIdentityTypeOutput() MsiIdentityTypeOutput {
	return o
}

func (o MsiIdentityTypeOutput) ToMsiIdentityTypeOutputWithContext(ctx context.Context) MsiIdentityTypeOutput {
	return o
}

func (o MsiIdentityTypeOutput) ToMsiIdentityTypePtrOutput() MsiIdentityTypePtrOutput {
	return o.ToMsiIdentityTypePtrOutputWithContext(context.Background())
}

func (o MsiIdentityTypeOutput) ToMsiIdentityTypePtrOutputWithContext(ctx context.Context) MsiIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MsiIdentityType) *MsiIdentityType {
		return &v
	}).(MsiIdentityTypePtrOutput)
}

func (o MsiIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MsiIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MsiIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MsiIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MsiIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MsiIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MsiIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (MsiIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MsiIdentityType)(nil)).Elem()
}

func (o MsiIdentityTypePtrOutput) ToMsiIdentityTypePtrOutput() MsiIdentityTypePtrOutput {
	return o
}

func (o MsiIdentityTypePtrOutput) ToMsiIdentityTypePtrOutputWithContext(ctx context.Context) MsiIdentityTypePtrOutput {
	return o
}

func (o MsiIdentityTypePtrOutput) Elem() MsiIdentityTypeOutput {
	return o.ApplyT(func(v *MsiIdentityType) MsiIdentityType {
		if v != nil {
			return *v
		}
		var ret MsiIdentityType
		return ret
	}).(MsiIdentityTypeOutput)
}

func (o MsiIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MsiIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MsiIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MsiIdentityTypeInput is an input type that accepts values of the MsiIdentityType enum
// A concrete instance of `MsiIdentityTypeInput` can be one of the following:
//
//	MsiIdentityTypeNone
//	MsiIdentityTypeSystemAssigned
//	MsiIdentityTypeUserAssigned
type MsiIdentityTypeInput interface {
	pulumi.Input

	ToMsiIdentityTypeOutput() MsiIdentityTypeOutput
	ToMsiIdentityTypeOutputWithContext(context.Context) MsiIdentityTypeOutput
}

var msiIdentityTypePtrType = reflect.TypeOf((**MsiIdentityType)(nil)).Elem()

type MsiIdentityTypePtrInput interface {
	pulumi.Input

	ToMsiIdentityTypePtrOutput() MsiIdentityTypePtrOutput
	ToMsiIdentityTypePtrOutputWithContext(context.Context) MsiIdentityTypePtrOutput
}

type msiIdentityTypePtr string

func MsiIdentityTypePtr(v string) MsiIdentityTypePtrInput {
	return (*msiIdentityTypePtr)(&v)
}

func (*msiIdentityTypePtr) ElementType() reflect.Type {
	return msiIdentityTypePtrType
}

func (in *msiIdentityTypePtr) ToMsiIdentityTypePtrOutput() MsiIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(MsiIdentityTypePtrOutput)
}

func (in *msiIdentityTypePtr) ToMsiIdentityTypePtrOutputWithContext(ctx context.Context) MsiIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MsiIdentityTypePtrOutput)
}

func (in *msiIdentityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*MsiIdentityType] {
	return pulumix.Output[*MsiIdentityType]{
		OutputState: in.ToMsiIdentityTypePtrOutputWithContext(ctx).OutputState,
	}
}

// SKU name.
type SkuName string

const (
	SkuNameGateway               = SkuName("Gateway")
	SkuNameEdge                  = SkuName("Edge")
	SkuName_TEA_1Node            = SkuName("TEA_1Node")
	SkuName_TEA_1Node_UPS        = SkuName("TEA_1Node_UPS")
	SkuName_TEA_1Node_Heater     = SkuName("TEA_1Node_Heater")
	SkuName_TEA_1Node_UPS_Heater = SkuName("TEA_1Node_UPS_Heater")
	SkuName_TEA_4Node_Heater     = SkuName("TEA_4Node_Heater")
	SkuName_TEA_4Node_UPS_Heater = SkuName("TEA_4Node_UPS_Heater")
	SkuNameTMA                   = SkuName("TMA")
	SkuNameTDC                   = SkuName("TDC")
	SkuName_TCA_Small            = SkuName("TCA_Small")
	SkuNameGPU                   = SkuName("GPU")
	SkuName_TCA_Large            = SkuName("TCA_Large")
	SkuName_EdgeP_Base           = SkuName("EdgeP_Base")
	SkuName_EdgeP_High           = SkuName("EdgeP_High")
	SkuName_EdgePR_Base          = SkuName("EdgePR_Base")
	SkuName_EdgePR_Base_UPS      = SkuName("EdgePR_Base_UPS")
	SkuName_EP2_64_1VPU_W        = SkuName("EP2_64_1VPU_W")
	SkuName_EP2_128_1T4_Mx1_W    = SkuName("EP2_128_1T4_Mx1_W")
	SkuName_EP2_256_2T4_W        = SkuName("EP2_256_2T4_W")
	SkuName_EdgeMR_Mini          = SkuName("EdgeMR_Mini")
	SkuName_RCA_Small            = SkuName("RCA_Small")
	SkuName_RCA_Large            = SkuName("RCA_Large")
	SkuNameRDC                   = SkuName("RDC")
	SkuNameManagement            = SkuName("Management")
)

func (SkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (e SkuName) ToSkuNameOutput() SkuNameOutput {
	return pulumi.ToOutput(e).(SkuNameOutput)
}

func (e SkuName) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuNameOutput)
}

func (e SkuName) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return e.ToSkuNamePtrOutputWithContext(context.Background())
}

func (e SkuName) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return SkuName(e).ToSkuNameOutputWithContext(ctx).ToSkuNamePtrOutputWithContext(ctx)
}

func (e SkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuNameOutput struct{ *pulumi.OutputState }

func (SkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (o SkuNameOutput) ToSkuNameOutput() SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o.ToSkuNamePtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuName) *SkuName {
		return &v
	}).(SkuNamePtrOutput)
}

func (o SkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuNamePtrOutput struct{ *pulumi.OutputState }

func (SkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuName)(nil)).Elem()
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) Elem() SkuNameOutput {
	return o.ApplyT(func(v *SkuName) SkuName {
		if v != nil {
			return *v
		}
		var ret SkuName
		return ret
	}).(SkuNameOutput)
}

func (o SkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuNameInput is an input type that accepts values of the SkuName enum
// A concrete instance of `SkuNameInput` can be one of the following:
//
//	SkuNameGateway
//	SkuNameEdge
//	SkuName_TEA_1Node
//	SkuName_TEA_1Node_UPS
//	SkuName_TEA_1Node_Heater
//	SkuName_TEA_1Node_UPS_Heater
//	SkuName_TEA_4Node_Heater
//	SkuName_TEA_4Node_UPS_Heater
//	SkuNameTMA
//	SkuNameTDC
//	SkuName_TCA_Small
//	SkuNameGPU
//	SkuName_TCA_Large
//	SkuName_EdgeP_Base
//	SkuName_EdgeP_High
//	SkuName_EdgePR_Base
//	SkuName_EdgePR_Base_UPS
//	SkuName_EP2_64_1VPU_W
//	SkuName_EP2_128_1T4_Mx1_W
//	SkuName_EP2_256_2T4_W
//	SkuName_EdgeMR_Mini
//	SkuName_RCA_Small
//	SkuName_RCA_Large
//	SkuNameRDC
//	SkuNameManagement
type SkuNameInput interface {
	pulumi.Input

	ToSkuNameOutput() SkuNameOutput
	ToSkuNameOutputWithContext(context.Context) SkuNameOutput
}

var skuNamePtrType = reflect.TypeOf((**SkuName)(nil)).Elem()

type SkuNamePtrInput interface {
	pulumi.Input

	ToSkuNamePtrOutput() SkuNamePtrOutput
	ToSkuNamePtrOutputWithContext(context.Context) SkuNamePtrOutput
}

type skuNamePtr string

func SkuNamePtr(v string) SkuNamePtrInput {
	return (*skuNamePtr)(&v)
}

func (*skuNamePtr) ElementType() reflect.Type {
	return skuNamePtrType
}

func (in *skuNamePtr) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return pulumi.ToOutput(in).(SkuNamePtrOutput)
}

func (in *skuNamePtr) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuNamePtrOutput)
}

func (in *skuNamePtr) ToOutput(ctx context.Context) pulumix.Output[*SkuName] {
	return pulumix.Output[*SkuName]{
		OutputState: in.ToSkuNamePtrOutputWithContext(ctx).OutputState,
	}
}

// The SKU tier. This is based on the SKU name.
type SkuTier string

const (
	SkuTierStandard = SkuTier("Standard")
)

func (SkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (e SkuTier) ToSkuTierOutput() SkuTierOutput {
	return pulumi.ToOutput(e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return e.ToSkuTierPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return SkuTier(e).ToSkuTierOutputWithContext(ctx).ToSkuTierPtrOutputWithContext(ctx)
}

func (e SkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuTierOutput struct{ *pulumi.OutputState }

func (SkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (o SkuTierOutput) ToSkuTierOutput() SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o.ToSkuTierPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuTier) *SkuTier {
		return &v
	}).(SkuTierPtrOutput)
}

func (o SkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuTierPtrOutput struct{ *pulumi.OutputState }

func (SkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuTier)(nil)).Elem()
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) Elem() SkuTierOutput {
	return o.ApplyT(func(v *SkuTier) SkuTier {
		if v != nil {
			return *v
		}
		var ret SkuTier
		return ret
	}).(SkuTierOutput)
}

func (o SkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuTierInput is an input type that accepts values of the SkuTier enum
// A concrete instance of `SkuTierInput` can be one of the following:
//
//	SkuTierStandard
type SkuTierInput interface {
	pulumi.Input

	ToSkuTierOutput() SkuTierOutput
	ToSkuTierOutputWithContext(context.Context) SkuTierOutput
}

var skuTierPtrType = reflect.TypeOf((**SkuTier)(nil)).Elem()

type SkuTierPtrInput interface {
	pulumi.Input

	ToSkuTierPtrOutput() SkuTierPtrOutput
	ToSkuTierPtrOutputWithContext(context.Context) SkuTierPtrOutput
}

type skuTierPtr string

func SkuTierPtr(v string) SkuTierPtrInput {
	return (*skuTierPtr)(&v)
}

func (*skuTierPtr) ElementType() reflect.Type {
	return skuTierPtrType
}

func (in *skuTierPtr) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return pulumi.ToOutput(in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToOutput(ctx context.Context) pulumix.Output[*SkuTier] {
	return pulumix.Output[*SkuTier]{
		OutputState: in.ToSkuTierPtrOutputWithContext(ctx).OutputState,
	}
}

// Type of the user.
type UserType string

const (
	UserTypeShare           = UserType("Share")
	UserTypeLocalManagement = UserType("LocalManagement")
	UserTypeARM             = UserType("ARM")
)

func (UserType) ElementType() reflect.Type {
	return reflect.TypeOf((*UserType)(nil)).Elem()
}

func (e UserType) ToUserTypeOutput() UserTypeOutput {
	return pulumi.ToOutput(e).(UserTypeOutput)
}

func (e UserType) ToUserTypeOutputWithContext(ctx context.Context) UserTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UserTypeOutput)
}

func (e UserType) ToUserTypePtrOutput() UserTypePtrOutput {
	return e.ToUserTypePtrOutputWithContext(context.Background())
}

func (e UserType) ToUserTypePtrOutputWithContext(ctx context.Context) UserTypePtrOutput {
	return UserType(e).ToUserTypeOutputWithContext(ctx).ToUserTypePtrOutputWithContext(ctx)
}

func (e UserType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UserType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UserTypeOutput struct{ *pulumi.OutputState }

func (UserTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserType)(nil)).Elem()
}

func (o UserTypeOutput) ToUserTypeOutput() UserTypeOutput {
	return o
}

func (o UserTypeOutput) ToUserTypeOutputWithContext(ctx context.Context) UserTypeOutput {
	return o
}

func (o UserTypeOutput) ToUserTypePtrOutput() UserTypePtrOutput {
	return o.ToUserTypePtrOutputWithContext(context.Background())
}

func (o UserTypeOutput) ToUserTypePtrOutputWithContext(ctx context.Context) UserTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserType) *UserType {
		return &v
	}).(UserTypePtrOutput)
}

func (o UserTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UserTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UserTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UserTypePtrOutput struct{ *pulumi.OutputState }

func (UserTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserType)(nil)).Elem()
}

func (o UserTypePtrOutput) ToUserTypePtrOutput() UserTypePtrOutput {
	return o
}

func (o UserTypePtrOutput) ToUserTypePtrOutputWithContext(ctx context.Context) UserTypePtrOutput {
	return o
}

func (o UserTypePtrOutput) Elem() UserTypeOutput {
	return o.ApplyT(func(v *UserType) UserType {
		if v != nil {
			return *v
		}
		var ret UserType
		return ret
	}).(UserTypeOutput)
}

func (o UserTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UserType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UserTypeInput is an input type that accepts values of the UserType enum
// A concrete instance of `UserTypeInput` can be one of the following:
//
//	UserTypeShare
//	UserTypeLocalManagement
//	UserTypeARM
type UserTypeInput interface {
	pulumi.Input

	ToUserTypeOutput() UserTypeOutput
	ToUserTypeOutputWithContext(context.Context) UserTypeOutput
}

var userTypePtrType = reflect.TypeOf((**UserType)(nil)).Elem()

type UserTypePtrInput interface {
	pulumi.Input

	ToUserTypePtrOutput() UserTypePtrOutput
	ToUserTypePtrOutputWithContext(context.Context) UserTypePtrOutput
}

type userTypePtr string

func UserTypePtr(v string) UserTypePtrInput {
	return (*userTypePtr)(&v)
}

func (*userTypePtr) ElementType() reflect.Type {
	return userTypePtrType
}

func (in *userTypePtr) ToUserTypePtrOutput() UserTypePtrOutput {
	return pulumi.ToOutput(in).(UserTypePtrOutput)
}

func (in *userTypePtr) ToUserTypePtrOutputWithContext(ctx context.Context) UserTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UserTypePtrOutput)
}

func (in *userTypePtr) ToOutput(ctx context.Context) pulumix.Output[*UserType] {
	return pulumix.Output[*UserType]{
		OutputState: in.ToUserTypePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(DataBoxEdgeDeviceStatusOutput{})
	pulumi.RegisterOutputType(DataBoxEdgeDeviceStatusPtrOutput{})
	pulumi.RegisterOutputType(EncryptionAlgorithmOutput{})
	pulumi.RegisterOutputType(EncryptionAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(MsiIdentityTypeOutput{})
	pulumi.RegisterOutputType(MsiIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(SkuNameOutput{})
	pulumi.RegisterOutputType(SkuNamePtrOutput{})
	pulumi.RegisterOutputType(SkuTierOutput{})
	pulumi.RegisterOutputType(SkuTierPtrOutput{})
	pulumi.RegisterOutputType(UserTypeOutput{})
	pulumi.RegisterOutputType(UserTypePtrOutput{})
}
