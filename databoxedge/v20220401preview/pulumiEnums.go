// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// DataResidencyType enum
type DataResidencyType string

const (
	DataResidencyTypeGeoZoneReplication = DataResidencyType("GeoZoneReplication")
	DataResidencyTypeZoneReplication    = DataResidencyType("ZoneReplication")
)

func (DataResidencyType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataResidencyType)(nil)).Elem()
}

func (e DataResidencyType) ToDataResidencyTypeOutput() DataResidencyTypeOutput {
	return pulumi.ToOutput(e).(DataResidencyTypeOutput)
}

func (e DataResidencyType) ToDataResidencyTypeOutputWithContext(ctx context.Context) DataResidencyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataResidencyTypeOutput)
}

func (e DataResidencyType) ToDataResidencyTypePtrOutput() DataResidencyTypePtrOutput {
	return e.ToDataResidencyTypePtrOutputWithContext(context.Background())
}

func (e DataResidencyType) ToDataResidencyTypePtrOutputWithContext(ctx context.Context) DataResidencyTypePtrOutput {
	return DataResidencyType(e).ToDataResidencyTypeOutputWithContext(ctx).ToDataResidencyTypePtrOutputWithContext(ctx)
}

func (e DataResidencyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataResidencyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataResidencyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataResidencyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataResidencyTypeOutput struct{ *pulumi.OutputState }

func (DataResidencyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataResidencyType)(nil)).Elem()
}

func (o DataResidencyTypeOutput) ToDataResidencyTypeOutput() DataResidencyTypeOutput {
	return o
}

func (o DataResidencyTypeOutput) ToDataResidencyTypeOutputWithContext(ctx context.Context) DataResidencyTypeOutput {
	return o
}

func (o DataResidencyTypeOutput) ToDataResidencyTypePtrOutput() DataResidencyTypePtrOutput {
	return o.ToDataResidencyTypePtrOutputWithContext(context.Background())
}

func (o DataResidencyTypeOutput) ToDataResidencyTypePtrOutputWithContext(ctx context.Context) DataResidencyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataResidencyType) *DataResidencyType {
		return &v
	}).(DataResidencyTypePtrOutput)
}

func (o DataResidencyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataResidencyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataResidencyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataResidencyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataResidencyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataResidencyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataResidencyTypePtrOutput struct{ *pulumi.OutputState }

func (DataResidencyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataResidencyType)(nil)).Elem()
}

func (o DataResidencyTypePtrOutput) ToDataResidencyTypePtrOutput() DataResidencyTypePtrOutput {
	return o
}

func (o DataResidencyTypePtrOutput) ToDataResidencyTypePtrOutputWithContext(ctx context.Context) DataResidencyTypePtrOutput {
	return o
}

func (o DataResidencyTypePtrOutput) Elem() DataResidencyTypeOutput {
	return o.ApplyT(func(v *DataResidencyType) DataResidencyType {
		if v != nil {
			return *v
		}
		var ret DataResidencyType
		return ret
	}).(DataResidencyTypeOutput)
}

func (o DataResidencyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataResidencyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataResidencyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataResidencyTypeInput is an input type that accepts values of the DataResidencyType enum
// A concrete instance of `DataResidencyTypeInput` can be one of the following:
//
//	DataResidencyTypeGeoZoneReplication
//	DataResidencyTypeZoneReplication
type DataResidencyTypeInput interface {
	pulumi.Input

	ToDataResidencyTypeOutput() DataResidencyTypeOutput
	ToDataResidencyTypeOutputWithContext(context.Context) DataResidencyTypeOutput
}

var dataResidencyTypePtrType = reflect.TypeOf((**DataResidencyType)(nil)).Elem()

type DataResidencyTypePtrInput interface {
	pulumi.Input

	ToDataResidencyTypePtrOutput() DataResidencyTypePtrOutput
	ToDataResidencyTypePtrOutputWithContext(context.Context) DataResidencyTypePtrOutput
}

type dataResidencyTypePtr string

func DataResidencyTypePtr(v string) DataResidencyTypePtrInput {
	return (*dataResidencyTypePtr)(&v)
}

func (*dataResidencyTypePtr) ElementType() reflect.Type {
	return dataResidencyTypePtrType
}

func (in *dataResidencyTypePtr) ToDataResidencyTypePtrOutput() DataResidencyTypePtrOutput {
	return pulumi.ToOutput(in).(DataResidencyTypePtrOutput)
}

func (in *dataResidencyTypePtr) ToDataResidencyTypePtrOutputWithContext(ctx context.Context) DataResidencyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataResidencyTypePtrOutput)
}

// ShipmentType of the order
type ShipmentType string

const (
	ShipmentTypeNotApplicable     = ShipmentType("NotApplicable")
	ShipmentTypeShippedToCustomer = ShipmentType("ShippedToCustomer")
	ShipmentTypeSelfPickup        = ShipmentType("SelfPickup")
)

func (ShipmentType) ElementType() reflect.Type {
	return reflect.TypeOf((*ShipmentType)(nil)).Elem()
}

func (e ShipmentType) ToShipmentTypeOutput() ShipmentTypeOutput {
	return pulumi.ToOutput(e).(ShipmentTypeOutput)
}

func (e ShipmentType) ToShipmentTypeOutputWithContext(ctx context.Context) ShipmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ShipmentTypeOutput)
}

func (e ShipmentType) ToShipmentTypePtrOutput() ShipmentTypePtrOutput {
	return e.ToShipmentTypePtrOutputWithContext(context.Background())
}

func (e ShipmentType) ToShipmentTypePtrOutputWithContext(ctx context.Context) ShipmentTypePtrOutput {
	return ShipmentType(e).ToShipmentTypeOutputWithContext(ctx).ToShipmentTypePtrOutputWithContext(ctx)
}

func (e ShipmentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ShipmentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ShipmentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ShipmentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ShipmentTypeOutput struct{ *pulumi.OutputState }

func (ShipmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShipmentType)(nil)).Elem()
}

func (o ShipmentTypeOutput) ToShipmentTypeOutput() ShipmentTypeOutput {
	return o
}

func (o ShipmentTypeOutput) ToShipmentTypeOutputWithContext(ctx context.Context) ShipmentTypeOutput {
	return o
}

func (o ShipmentTypeOutput) ToShipmentTypePtrOutput() ShipmentTypePtrOutput {
	return o.ToShipmentTypePtrOutputWithContext(context.Background())
}

func (o ShipmentTypeOutput) ToShipmentTypePtrOutputWithContext(ctx context.Context) ShipmentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShipmentType) *ShipmentType {
		return &v
	}).(ShipmentTypePtrOutput)
}

func (o ShipmentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ShipmentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ShipmentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ShipmentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ShipmentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ShipmentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ShipmentTypePtrOutput struct{ *pulumi.OutputState }

func (ShipmentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShipmentType)(nil)).Elem()
}

func (o ShipmentTypePtrOutput) ToShipmentTypePtrOutput() ShipmentTypePtrOutput {
	return o
}

func (o ShipmentTypePtrOutput) ToShipmentTypePtrOutputWithContext(ctx context.Context) ShipmentTypePtrOutput {
	return o
}

func (o ShipmentTypePtrOutput) Elem() ShipmentTypeOutput {
	return o.ApplyT(func(v *ShipmentType) ShipmentType {
		if v != nil {
			return *v
		}
		var ret ShipmentType
		return ret
	}).(ShipmentTypeOutput)
}

func (o ShipmentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ShipmentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ShipmentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ShipmentTypeInput is an input type that accepts values of the ShipmentType enum
// A concrete instance of `ShipmentTypeInput` can be one of the following:
//
//	ShipmentTypeNotApplicable
//	ShipmentTypeShippedToCustomer
//	ShipmentTypeSelfPickup
type ShipmentTypeInput interface {
	pulumi.Input

	ToShipmentTypeOutput() ShipmentTypeOutput
	ToShipmentTypeOutputWithContext(context.Context) ShipmentTypeOutput
}

var shipmentTypePtrType = reflect.TypeOf((**ShipmentType)(nil)).Elem()

type ShipmentTypePtrInput interface {
	pulumi.Input

	ToShipmentTypePtrOutput() ShipmentTypePtrOutput
	ToShipmentTypePtrOutputWithContext(context.Context) ShipmentTypePtrOutput
}

type shipmentTypePtr string

func ShipmentTypePtr(v string) ShipmentTypePtrInput {
	return (*shipmentTypePtr)(&v)
}

func (*shipmentTypePtr) ElementType() reflect.Type {
	return shipmentTypePtrType
}

func (in *shipmentTypePtr) ToShipmentTypePtrOutput() ShipmentTypePtrOutput {
	return pulumi.ToOutput(in).(ShipmentTypePtrOutput)
}

func (in *shipmentTypePtr) ToShipmentTypePtrOutputWithContext(ctx context.Context) ShipmentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ShipmentTypePtrOutput)
}

// SKU name.
type SkuName string

const (
	SkuNameGateway               = SkuName("Gateway")
	SkuNameEdge                  = SkuName("Edge")
	SkuName_TEA_1Node            = SkuName("TEA_1Node")
	SkuName_TEA_1Node_UPS        = SkuName("TEA_1Node_UPS")
	SkuName_TEA_1Node_Heater     = SkuName("TEA_1Node_Heater")
	SkuName_TEA_1Node_UPS_Heater = SkuName("TEA_1Node_UPS_Heater")
	SkuName_TEA_4Node_Heater     = SkuName("TEA_4Node_Heater")
	SkuName_TEA_4Node_UPS_Heater = SkuName("TEA_4Node_UPS_Heater")
	SkuNameTMA                   = SkuName("TMA")
	SkuNameTDC                   = SkuName("TDC")
	SkuName_TCA_Small            = SkuName("TCA_Small")
	SkuNameGPU                   = SkuName("GPU")
	SkuName_TCA_Large            = SkuName("TCA_Large")
	SkuName_EdgeP_Base           = SkuName("EdgeP_Base")
	SkuName_EdgeP_High           = SkuName("EdgeP_High")
	SkuName_EdgePR_Base          = SkuName("EdgePR_Base")
	SkuName_EdgePR_Base_UPS      = SkuName("EdgePR_Base_UPS")
	SkuName_EP2_64_1VPU_W        = SkuName("EP2_64_1VPU_W")
	SkuName_EP2_128_1T4_Mx1_W    = SkuName("EP2_128_1T4_Mx1_W")
	SkuName_EP2_256_2T4_W        = SkuName("EP2_256_2T4_W")
	SkuName_EdgeMR_Mini          = SkuName("EdgeMR_Mini")
	SkuName_RCA_Small            = SkuName("RCA_Small")
	SkuName_RCA_Large            = SkuName("RCA_Large")
	SkuNameRDC                   = SkuName("RDC")
	SkuNameManagement            = SkuName("Management")
	SkuName_EP2_64_Mx1_W         = SkuName("EP2_64_Mx1_W")
	SkuName_EP2_128_GPU1_Mx1_W   = SkuName("EP2_128_GPU1_Mx1_W")
	SkuName_EP2_256_GPU2_Mx1     = SkuName("EP2_256_GPU2_Mx1")
	SkuName_EdgeMR_TCP           = SkuName("EdgeMR_TCP")
)

func (SkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (e SkuName) ToSkuNameOutput() SkuNameOutput {
	return pulumi.ToOutput(e).(SkuNameOutput)
}

func (e SkuName) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuNameOutput)
}

func (e SkuName) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return e.ToSkuNamePtrOutputWithContext(context.Background())
}

func (e SkuName) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return SkuName(e).ToSkuNameOutputWithContext(ctx).ToSkuNamePtrOutputWithContext(ctx)
}

func (e SkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuNameOutput struct{ *pulumi.OutputState }

func (SkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (o SkuNameOutput) ToSkuNameOutput() SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o.ToSkuNamePtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuName) *SkuName {
		return &v
	}).(SkuNamePtrOutput)
}

func (o SkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuNamePtrOutput struct{ *pulumi.OutputState }

func (SkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuName)(nil)).Elem()
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) Elem() SkuNameOutput {
	return o.ApplyT(func(v *SkuName) SkuName {
		if v != nil {
			return *v
		}
		var ret SkuName
		return ret
	}).(SkuNameOutput)
}

func (o SkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuNameInput is an input type that accepts values of the SkuName enum
// A concrete instance of `SkuNameInput` can be one of the following:
//
//	SkuNameGateway
//	SkuNameEdge
//	SkuName_TEA_1Node
//	SkuName_TEA_1Node_UPS
//	SkuName_TEA_1Node_Heater
//	SkuName_TEA_1Node_UPS_Heater
//	SkuName_TEA_4Node_Heater
//	SkuName_TEA_4Node_UPS_Heater
//	SkuNameTMA
//	SkuNameTDC
//	SkuName_TCA_Small
//	SkuNameGPU
//	SkuName_TCA_Large
//	SkuName_EdgeP_Base
//	SkuName_EdgeP_High
//	SkuName_EdgePR_Base
//	SkuName_EdgePR_Base_UPS
//	SkuName_EP2_64_1VPU_W
//	SkuName_EP2_128_1T4_Mx1_W
//	SkuName_EP2_256_2T4_W
//	SkuName_EdgeMR_Mini
//	SkuName_RCA_Small
//	SkuName_RCA_Large
//	SkuNameRDC
//	SkuNameManagement
//	SkuName_EP2_64_Mx1_W
//	SkuName_EP2_128_GPU1_Mx1_W
//	SkuName_EP2_256_GPU2_Mx1
//	SkuName_EdgeMR_TCP
type SkuNameInput interface {
	pulumi.Input

	ToSkuNameOutput() SkuNameOutput
	ToSkuNameOutputWithContext(context.Context) SkuNameOutput
}

var skuNamePtrType = reflect.TypeOf((**SkuName)(nil)).Elem()

type SkuNamePtrInput interface {
	pulumi.Input

	ToSkuNamePtrOutput() SkuNamePtrOutput
	ToSkuNamePtrOutputWithContext(context.Context) SkuNamePtrOutput
}

type skuNamePtr string

func SkuNamePtr(v string) SkuNamePtrInput {
	return (*skuNamePtr)(&v)
}

func (*skuNamePtr) ElementType() reflect.Type {
	return skuNamePtrType
}

func (in *skuNamePtr) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return pulumi.ToOutput(in).(SkuNamePtrOutput)
}

func (in *skuNamePtr) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuNamePtrOutput)
}

// The SKU tier. This is based on the SKU name.
type SkuTier string

const (
	SkuTierStandard = SkuTier("Standard")
)

func (SkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (e SkuTier) ToSkuTierOutput() SkuTierOutput {
	return pulumi.ToOutput(e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return e.ToSkuTierPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return SkuTier(e).ToSkuTierOutputWithContext(ctx).ToSkuTierPtrOutputWithContext(ctx)
}

func (e SkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuTierOutput struct{ *pulumi.OutputState }

func (SkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (o SkuTierOutput) ToSkuTierOutput() SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o.ToSkuTierPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuTier) *SkuTier {
		return &v
	}).(SkuTierPtrOutput)
}

func (o SkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuTierPtrOutput struct{ *pulumi.OutputState }

func (SkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuTier)(nil)).Elem()
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) Elem() SkuTierOutput {
	return o.ApplyT(func(v *SkuTier) SkuTier {
		if v != nil {
			return *v
		}
		var ret SkuTier
		return ret
	}).(SkuTierOutput)
}

func (o SkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuTierInput is an input type that accepts values of the SkuTier enum
// A concrete instance of `SkuTierInput` can be one of the following:
//
//	SkuTierStandard
type SkuTierInput interface {
	pulumi.Input

	ToSkuTierOutput() SkuTierOutput
	ToSkuTierOutputWithContext(context.Context) SkuTierOutput
}

var skuTierPtrType = reflect.TypeOf((**SkuTier)(nil)).Elem()

type SkuTierPtrInput interface {
	pulumi.Input

	ToSkuTierPtrOutput() SkuTierPtrOutput
	ToSkuTierPtrOutputWithContext(context.Context) SkuTierPtrOutput
}

type skuTierPtr string

func SkuTierPtr(v string) SkuTierPtrInput {
	return (*skuTierPtr)(&v)
}

func (*skuTierPtr) ElementType() reflect.Type {
	return skuTierPtrType
}

func (in *skuTierPtr) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return pulumi.ToOutput(in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuTierPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DataResidencyTypeOutput{})
	pulumi.RegisterOutputType(DataResidencyTypePtrOutput{})
	pulumi.RegisterOutputType(ShipmentTypeOutput{})
	pulumi.RegisterOutputType(ShipmentTypePtrOutput{})
	pulumi.RegisterOutputType(SkuNameOutput{})
	pulumi.RegisterOutputType(SkuNamePtrOutput{})
	pulumi.RegisterOutputType(SkuTierOutput{})
	pulumi.RegisterOutputType(SkuTierPtrOutput{})
}
