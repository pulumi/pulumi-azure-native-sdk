// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220301

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecret struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
	EncryptionCertThumbprint *string `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value string `pulumi:"value"`
}

// AsymmetricEncryptedSecretInput is an input type that accepts AsymmetricEncryptedSecretArgs and AsymmetricEncryptedSecretOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretInput` via:
//
//	AsymmetricEncryptedSecretArgs{...}
type AsymmetricEncryptedSecretInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput
	ToAsymmetricEncryptedSecretOutputWithContext(context.Context) AsymmetricEncryptedSecretOutput
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretArgs struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
	EncryptionCertThumbprint pulumi.StringPtrInput `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AsymmetricEncryptedSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecret)(nil)).Elem()
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput {
	return i.ToAsymmetricEncryptedSecretOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretOutput)
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return i.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (i AsymmetricEncryptedSecretArgs) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretOutput).ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx)
}

// AsymmetricEncryptedSecretPtrInput is an input type that accepts AsymmetricEncryptedSecretArgs, AsymmetricEncryptedSecretPtr and AsymmetricEncryptedSecretPtrOutput values.
// You can construct a concrete instance of `AsymmetricEncryptedSecretPtrInput` via:
//
//	        AsymmetricEncryptedSecretArgs{...}
//
//	or:
//
//	        nil
type AsymmetricEncryptedSecretPtrInput interface {
	pulumi.Input

	ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput
	ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Context) AsymmetricEncryptedSecretPtrOutput
}

type asymmetricEncryptedSecretPtrType AsymmetricEncryptedSecretArgs

func AsymmetricEncryptedSecretPtr(v *AsymmetricEncryptedSecretArgs) AsymmetricEncryptedSecretPtrInput {
	return (*asymmetricEncryptedSecretPtrType)(v)
}

func (*asymmetricEncryptedSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecret)(nil)).Elem()
}

func (i *asymmetricEncryptedSecretPtrType) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return i.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (i *asymmetricEncryptedSecretPtrType) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AsymmetricEncryptedSecretPtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecret)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretOutput() AsymmetricEncryptedSecretOutput {
	return o
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretOutput {
	return o
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return o.ToAsymmetricEncryptedSecretPtrOutputWithContext(context.Background())
}

func (o AsymmetricEncryptedSecretOutput) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AsymmetricEncryptedSecret) *AsymmetricEncryptedSecret {
		return &v
	}).(AsymmetricEncryptedSecretPtrOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
func (o AsymmetricEncryptedSecretOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) *string { return v.EncryptionCertThumbprint }).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecret) string { return v.Value }).(pulumi.StringOutput)
}

type AsymmetricEncryptedSecretPtrOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecret)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretPtrOutput) ToAsymmetricEncryptedSecretPtrOutput() AsymmetricEncryptedSecretPtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretPtrOutput) ToAsymmetricEncryptedSecretPtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretPtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretPtrOutput) Elem() AsymmetricEncryptedSecretOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) AsymmetricEncryptedSecret {
		if v != nil {
			return *v
		}
		var ret AsymmetricEncryptedSecret
		return ret
	}).(AsymmetricEncryptedSecretOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretPtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
func (o AsymmetricEncryptedSecretPtrOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionCertThumbprint
	}).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponse struct {
	// The algorithm used to encrypt "Value".
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
	EncryptionCertThumbprint *string `pulumi:"encryptionCertThumbprint"`
	// The value of the secret.
	Value string `pulumi:"value"`
}

// Represent the secrets intended for encryption with asymmetric key pair.
type AsymmetricEncryptedSecretResponseOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponseOutput() AsymmetricEncryptedSecretResponseOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponseOutput) ToAsymmetricEncryptedSecretResponseOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponseOutput {
	return o
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretResponseOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
func (o AsymmetricEncryptedSecretResponseOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) *string { return v.EncryptionCertThumbprint }).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AsymmetricEncryptedSecretResponse) string { return v.Value }).(pulumi.StringOutput)
}

type AsymmetricEncryptedSecretResponsePtrOutput struct{ *pulumi.OutputState }

func (AsymmetricEncryptedSecretResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AsymmetricEncryptedSecretResponse)(nil)).Elem()
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) ToAsymmetricEncryptedSecretResponsePtrOutput() AsymmetricEncryptedSecretResponsePtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) ToAsymmetricEncryptedSecretResponsePtrOutputWithContext(ctx context.Context) AsymmetricEncryptedSecretResponsePtrOutput {
	return o
}

func (o AsymmetricEncryptedSecretResponsePtrOutput) Elem() AsymmetricEncryptedSecretResponseOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) AsymmetricEncryptedSecretResponse {
		if v != nil {
			return *v
		}
		var ret AsymmetricEncryptedSecretResponse
		return ret
	}).(AsymmetricEncryptedSecretResponseOutput)
}

// The algorithm used to encrypt "Value".
func (o AsymmetricEncryptedSecretResponsePtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be null.
func (o AsymmetricEncryptedSecretResponsePtrOutput) EncryptionCertThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionCertThumbprint
	}).(pulumi.StringPtrOutput)
}

// The value of the secret.
func (o AsymmetricEncryptedSecretResponsePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AsymmetricEncryptedSecretResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

// Authentication mechanism for IoT devices.
type Authentication struct {
	// Symmetric key for authentication.
	SymmetricKey *SymmetricKey `pulumi:"symmetricKey"`
}

// AuthenticationInput is an input type that accepts AuthenticationArgs and AuthenticationOutput values.
// You can construct a concrete instance of `AuthenticationInput` via:
//
//	AuthenticationArgs{...}
type AuthenticationInput interface {
	pulumi.Input

	ToAuthenticationOutput() AuthenticationOutput
	ToAuthenticationOutputWithContext(context.Context) AuthenticationOutput
}

// Authentication mechanism for IoT devices.
type AuthenticationArgs struct {
	// Symmetric key for authentication.
	SymmetricKey SymmetricKeyPtrInput `pulumi:"symmetricKey"`
}

func (AuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Authentication)(nil)).Elem()
}

func (i AuthenticationArgs) ToAuthenticationOutput() AuthenticationOutput {
	return i.ToAuthenticationOutputWithContext(context.Background())
}

func (i AuthenticationArgs) ToAuthenticationOutputWithContext(ctx context.Context) AuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationOutput)
}

func (i AuthenticationArgs) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return i.ToAuthenticationPtrOutputWithContext(context.Background())
}

func (i AuthenticationArgs) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationOutput).ToAuthenticationPtrOutputWithContext(ctx)
}

// AuthenticationPtrInput is an input type that accepts AuthenticationArgs, AuthenticationPtr and AuthenticationPtrOutput values.
// You can construct a concrete instance of `AuthenticationPtrInput` via:
//
//	        AuthenticationArgs{...}
//
//	or:
//
//	        nil
type AuthenticationPtrInput interface {
	pulumi.Input

	ToAuthenticationPtrOutput() AuthenticationPtrOutput
	ToAuthenticationPtrOutputWithContext(context.Context) AuthenticationPtrOutput
}

type authenticationPtrType AuthenticationArgs

func AuthenticationPtr(v *AuthenticationArgs) AuthenticationPtrInput {
	return (*authenticationPtrType)(v)
}

func (*authenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Authentication)(nil)).Elem()
}

func (i *authenticationPtrType) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return i.ToAuthenticationPtrOutputWithContext(context.Background())
}

func (i *authenticationPtrType) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationPtrOutput)
}

// Authentication mechanism for IoT devices.
type AuthenticationOutput struct{ *pulumi.OutputState }

func (AuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Authentication)(nil)).Elem()
}

func (o AuthenticationOutput) ToAuthenticationOutput() AuthenticationOutput {
	return o
}

func (o AuthenticationOutput) ToAuthenticationOutputWithContext(ctx context.Context) AuthenticationOutput {
	return o
}

func (o AuthenticationOutput) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return o.ToAuthenticationPtrOutputWithContext(context.Background())
}

func (o AuthenticationOutput) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Authentication) *Authentication {
		return &v
	}).(AuthenticationPtrOutput)
}

// Symmetric key for authentication.
func (o AuthenticationOutput) SymmetricKey() SymmetricKeyPtrOutput {
	return o.ApplyT(func(v Authentication) *SymmetricKey { return v.SymmetricKey }).(SymmetricKeyPtrOutput)
}

type AuthenticationPtrOutput struct{ *pulumi.OutputState }

func (AuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Authentication)(nil)).Elem()
}

func (o AuthenticationPtrOutput) ToAuthenticationPtrOutput() AuthenticationPtrOutput {
	return o
}

func (o AuthenticationPtrOutput) ToAuthenticationPtrOutputWithContext(ctx context.Context) AuthenticationPtrOutput {
	return o
}

func (o AuthenticationPtrOutput) Elem() AuthenticationOutput {
	return o.ApplyT(func(v *Authentication) Authentication {
		if v != nil {
			return *v
		}
		var ret Authentication
		return ret
	}).(AuthenticationOutput)
}

// Symmetric key for authentication.
func (o AuthenticationPtrOutput) SymmetricKey() SymmetricKeyPtrOutput {
	return o.ApplyT(func(v *Authentication) *SymmetricKey {
		if v == nil {
			return nil
		}
		return v.SymmetricKey
	}).(SymmetricKeyPtrOutput)
}

// Authentication mechanism for IoT devices.
type AuthenticationResponse struct {
	// Symmetric key for authentication.
	SymmetricKey *SymmetricKeyResponse `pulumi:"symmetricKey"`
}

// Authentication mechanism for IoT devices.
type AuthenticationResponseOutput struct{ *pulumi.OutputState }

func (AuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationResponse)(nil)).Elem()
}

func (o AuthenticationResponseOutput) ToAuthenticationResponseOutput() AuthenticationResponseOutput {
	return o
}

func (o AuthenticationResponseOutput) ToAuthenticationResponseOutputWithContext(ctx context.Context) AuthenticationResponseOutput {
	return o
}

// Symmetric key for authentication.
func (o AuthenticationResponseOutput) SymmetricKey() SymmetricKeyResponsePtrOutput {
	return o.ApplyT(func(v AuthenticationResponse) *SymmetricKeyResponse { return v.SymmetricKey }).(SymmetricKeyResponsePtrOutput)
}

type AuthenticationResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthenticationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationResponse)(nil)).Elem()
}

func (o AuthenticationResponsePtrOutput) ToAuthenticationResponsePtrOutput() AuthenticationResponsePtrOutput {
	return o
}

func (o AuthenticationResponsePtrOutput) ToAuthenticationResponsePtrOutputWithContext(ctx context.Context) AuthenticationResponsePtrOutput {
	return o
}

func (o AuthenticationResponsePtrOutput) Elem() AuthenticationResponseOutput {
	return o.ApplyT(func(v *AuthenticationResponse) AuthenticationResponse {
		if v != nil {
			return *v
		}
		var ret AuthenticationResponse
		return ret
	}).(AuthenticationResponseOutput)
}

// Symmetric key for authentication.
func (o AuthenticationResponsePtrOutput) SymmetricKey() SymmetricKeyResponsePtrOutput {
	return o.ApplyT(func(v *AuthenticationResponse) *SymmetricKeyResponse {
		if v == nil {
			return nil
		}
		return v.SymmetricKey
	}).(SymmetricKeyResponsePtrOutput)
}

// Cni configuration
type CniConfigResponse struct {
	// Pod Subnet
	PodSubnet string `pulumi:"podSubnet"`
	// Service subnet
	ServiceSubnet string `pulumi:"serviceSubnet"`
	// Cni type
	Type string `pulumi:"type"`
	// Cni version
	Version string `pulumi:"version"`
}

// Cni configuration
type CniConfigResponseOutput struct{ *pulumi.OutputState }

func (CniConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CniConfigResponse)(nil)).Elem()
}

func (o CniConfigResponseOutput) ToCniConfigResponseOutput() CniConfigResponseOutput {
	return o
}

func (o CniConfigResponseOutput) ToCniConfigResponseOutputWithContext(ctx context.Context) CniConfigResponseOutput {
	return o
}

// Pod Subnet
func (o CniConfigResponseOutput) PodSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v CniConfigResponse) string { return v.PodSubnet }).(pulumi.StringOutput)
}

// Service subnet
func (o CniConfigResponseOutput) ServiceSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v CniConfigResponse) string { return v.ServiceSubnet }).(pulumi.StringOutput)
}

// Cni type
func (o CniConfigResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CniConfigResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Cni version
func (o CniConfigResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v CniConfigResponse) string { return v.Version }).(pulumi.StringOutput)
}

// Compute infrastructure Resource
type ComputeResource struct {
	// Memory in GB
	MemoryInGB float64 `pulumi:"memoryInGB"`
	// Processor count
	ProcessorCount int `pulumi:"processorCount"`
}

// ComputeResourceInput is an input type that accepts ComputeResourceArgs and ComputeResourceOutput values.
// You can construct a concrete instance of `ComputeResourceInput` via:
//
//	ComputeResourceArgs{...}
type ComputeResourceInput interface {
	pulumi.Input

	ToComputeResourceOutput() ComputeResourceOutput
	ToComputeResourceOutputWithContext(context.Context) ComputeResourceOutput
}

// Compute infrastructure Resource
type ComputeResourceArgs struct {
	// Memory in GB
	MemoryInGB pulumi.Float64Input `pulumi:"memoryInGB"`
	// Processor count
	ProcessorCount pulumi.IntInput `pulumi:"processorCount"`
}

func (ComputeResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeResource)(nil)).Elem()
}

func (i ComputeResourceArgs) ToComputeResourceOutput() ComputeResourceOutput {
	return i.ToComputeResourceOutputWithContext(context.Background())
}

func (i ComputeResourceArgs) ToComputeResourceOutputWithContext(ctx context.Context) ComputeResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeResourceOutput)
}

func (i ComputeResourceArgs) ToComputeResourcePtrOutput() ComputeResourcePtrOutput {
	return i.ToComputeResourcePtrOutputWithContext(context.Background())
}

func (i ComputeResourceArgs) ToComputeResourcePtrOutputWithContext(ctx context.Context) ComputeResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeResourceOutput).ToComputeResourcePtrOutputWithContext(ctx)
}

// ComputeResourcePtrInput is an input type that accepts ComputeResourceArgs, ComputeResourcePtr and ComputeResourcePtrOutput values.
// You can construct a concrete instance of `ComputeResourcePtrInput` via:
//
//	        ComputeResourceArgs{...}
//
//	or:
//
//	        nil
type ComputeResourcePtrInput interface {
	pulumi.Input

	ToComputeResourcePtrOutput() ComputeResourcePtrOutput
	ToComputeResourcePtrOutputWithContext(context.Context) ComputeResourcePtrOutput
}

type computeResourcePtrType ComputeResourceArgs

func ComputeResourcePtr(v *ComputeResourceArgs) ComputeResourcePtrInput {
	return (*computeResourcePtrType)(v)
}

func (*computeResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeResource)(nil)).Elem()
}

func (i *computeResourcePtrType) ToComputeResourcePtrOutput() ComputeResourcePtrOutput {
	return i.ToComputeResourcePtrOutputWithContext(context.Background())
}

func (i *computeResourcePtrType) ToComputeResourcePtrOutputWithContext(ctx context.Context) ComputeResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeResourcePtrOutput)
}

// Compute infrastructure Resource
type ComputeResourceOutput struct{ *pulumi.OutputState }

func (ComputeResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeResource)(nil)).Elem()
}

func (o ComputeResourceOutput) ToComputeResourceOutput() ComputeResourceOutput {
	return o
}

func (o ComputeResourceOutput) ToComputeResourceOutputWithContext(ctx context.Context) ComputeResourceOutput {
	return o
}

func (o ComputeResourceOutput) ToComputeResourcePtrOutput() ComputeResourcePtrOutput {
	return o.ToComputeResourcePtrOutputWithContext(context.Background())
}

func (o ComputeResourceOutput) ToComputeResourcePtrOutputWithContext(ctx context.Context) ComputeResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeResource) *ComputeResource {
		return &v
	}).(ComputeResourcePtrOutput)
}

// Memory in GB
func (o ComputeResourceOutput) MemoryInGB() pulumi.Float64Output {
	return o.ApplyT(func(v ComputeResource) float64 { return v.MemoryInGB }).(pulumi.Float64Output)
}

// Processor count
func (o ComputeResourceOutput) ProcessorCount() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeResource) int { return v.ProcessorCount }).(pulumi.IntOutput)
}

type ComputeResourcePtrOutput struct{ *pulumi.OutputState }

func (ComputeResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeResource)(nil)).Elem()
}

func (o ComputeResourcePtrOutput) ToComputeResourcePtrOutput() ComputeResourcePtrOutput {
	return o
}

func (o ComputeResourcePtrOutput) ToComputeResourcePtrOutputWithContext(ctx context.Context) ComputeResourcePtrOutput {
	return o
}

func (o ComputeResourcePtrOutput) Elem() ComputeResourceOutput {
	return o.ApplyT(func(v *ComputeResource) ComputeResource {
		if v != nil {
			return *v
		}
		var ret ComputeResource
		return ret
	}).(ComputeResourceOutput)
}

// Memory in GB
func (o ComputeResourcePtrOutput) MemoryInGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeResource) *float64 {
		if v == nil {
			return nil
		}
		return &v.MemoryInGB
	}).(pulumi.Float64PtrOutput)
}

// Processor count
func (o ComputeResourcePtrOutput) ProcessorCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeResource) *int {
		if v == nil {
			return nil
		}
		return &v.ProcessorCount
	}).(pulumi.IntPtrOutput)
}

// Compute infrastructure Resource
type ComputeResourceResponse struct {
	// Memory in GB
	MemoryInGB float64 `pulumi:"memoryInGB"`
	// Processor count
	ProcessorCount int `pulumi:"processorCount"`
}

// Compute infrastructure Resource
type ComputeResourceResponseOutput struct{ *pulumi.OutputState }

func (ComputeResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeResourceResponse)(nil)).Elem()
}

func (o ComputeResourceResponseOutput) ToComputeResourceResponseOutput() ComputeResourceResponseOutput {
	return o
}

func (o ComputeResourceResponseOutput) ToComputeResourceResponseOutputWithContext(ctx context.Context) ComputeResourceResponseOutput {
	return o
}

// Memory in GB
func (o ComputeResourceResponseOutput) MemoryInGB() pulumi.Float64Output {
	return o.ApplyT(func(v ComputeResourceResponse) float64 { return v.MemoryInGB }).(pulumi.Float64Output)
}

// Processor count
func (o ComputeResourceResponseOutput) ProcessorCount() pulumi.IntOutput {
	return o.ApplyT(func(v ComputeResourceResponse) int { return v.ProcessorCount }).(pulumi.IntOutput)
}

type ComputeResourceResponsePtrOutput struct{ *pulumi.OutputState }

func (ComputeResourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeResourceResponse)(nil)).Elem()
}

func (o ComputeResourceResponsePtrOutput) ToComputeResourceResponsePtrOutput() ComputeResourceResponsePtrOutput {
	return o
}

func (o ComputeResourceResponsePtrOutput) ToComputeResourceResponsePtrOutputWithContext(ctx context.Context) ComputeResourceResponsePtrOutput {
	return o
}

func (o ComputeResourceResponsePtrOutput) Elem() ComputeResourceResponseOutput {
	return o.ApplyT(func(v *ComputeResourceResponse) ComputeResourceResponse {
		if v != nil {
			return *v
		}
		var ret ComputeResourceResponse
		return ret
	}).(ComputeResourceResponseOutput)
}

// Memory in GB
func (o ComputeResourceResponsePtrOutput) MemoryInGB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeResourceResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.MemoryInGB
	}).(pulumi.Float64PtrOutput)
}

// Processor count
func (o ComputeResourceResponsePtrOutput) ProcessorCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComputeResourceResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ProcessorCount
	}).(pulumi.IntPtrOutput)
}

// Details about Edge Profile for the resource
type EdgeProfileResponse struct {
	// Edge Profile Subscription
	Subscription *EdgeProfileSubscriptionResponse `pulumi:"subscription"`
}

// Details about Edge Profile for the resource
type EdgeProfileResponseOutput struct{ *pulumi.OutputState }

func (EdgeProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeProfileResponse)(nil)).Elem()
}

func (o EdgeProfileResponseOutput) ToEdgeProfileResponseOutput() EdgeProfileResponseOutput {
	return o
}

func (o EdgeProfileResponseOutput) ToEdgeProfileResponseOutputWithContext(ctx context.Context) EdgeProfileResponseOutput {
	return o
}

// Edge Profile Subscription
func (o EdgeProfileResponseOutput) Subscription() EdgeProfileSubscriptionResponsePtrOutput {
	return o.ApplyT(func(v EdgeProfileResponse) *EdgeProfileSubscriptionResponse { return v.Subscription }).(EdgeProfileSubscriptionResponsePtrOutput)
}

// Subscription details for the Edge Profile
type EdgeProfileSubscriptionResponse struct {
	// ARM ID of the subscription
	Id                  *string                                  `pulumi:"id"`
	LocationPlacementId *string                                  `pulumi:"locationPlacementId"`
	QuotaId             *string                                  `pulumi:"quotaId"`
	RegisteredFeatures  []SubscriptionRegisteredFeaturesResponse `pulumi:"registeredFeatures"`
	RegistrationDate    *string                                  `pulumi:"registrationDate"`
	// Edge Subscription Registration ID
	RegistrationId    *string `pulumi:"registrationId"`
	SerializedDetails *string `pulumi:"serializedDetails"`
	State             *string `pulumi:"state"`
	SubscriptionId    *string `pulumi:"subscriptionId"`
	TenantId          *string `pulumi:"tenantId"`
}

// Subscription details for the Edge Profile
type EdgeProfileSubscriptionResponseOutput struct{ *pulumi.OutputState }

func (EdgeProfileSubscriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeProfileSubscriptionResponse)(nil)).Elem()
}

func (o EdgeProfileSubscriptionResponseOutput) ToEdgeProfileSubscriptionResponseOutput() EdgeProfileSubscriptionResponseOutput {
	return o
}

func (o EdgeProfileSubscriptionResponseOutput) ToEdgeProfileSubscriptionResponseOutputWithContext(ctx context.Context) EdgeProfileSubscriptionResponseOutput {
	return o
}

// ARM ID of the subscription
func (o EdgeProfileSubscriptionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponseOutput) LocationPlacementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.LocationPlacementId }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponseOutput) QuotaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.QuotaId }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponseOutput) RegisteredFeatures() SubscriptionRegisteredFeaturesResponseArrayOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) []SubscriptionRegisteredFeaturesResponse {
		return v.RegisteredFeatures
	}).(SubscriptionRegisteredFeaturesResponseArrayOutput)
}

func (o EdgeProfileSubscriptionResponseOutput) RegistrationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.RegistrationDate }).(pulumi.StringPtrOutput)
}

// Edge Subscription Registration ID
func (o EdgeProfileSubscriptionResponseOutput) RegistrationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.RegistrationId }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponseOutput) SerializedDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.SerializedDetails }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeProfileSubscriptionResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type EdgeProfileSubscriptionResponsePtrOutput struct{ *pulumi.OutputState }

func (EdgeProfileSubscriptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeProfileSubscriptionResponse)(nil)).Elem()
}

func (o EdgeProfileSubscriptionResponsePtrOutput) ToEdgeProfileSubscriptionResponsePtrOutput() EdgeProfileSubscriptionResponsePtrOutput {
	return o
}

func (o EdgeProfileSubscriptionResponsePtrOutput) ToEdgeProfileSubscriptionResponsePtrOutputWithContext(ctx context.Context) EdgeProfileSubscriptionResponsePtrOutput {
	return o
}

func (o EdgeProfileSubscriptionResponsePtrOutput) Elem() EdgeProfileSubscriptionResponseOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) EdgeProfileSubscriptionResponse {
		if v != nil {
			return *v
		}
		var ret EdgeProfileSubscriptionResponse
		return ret
	}).(EdgeProfileSubscriptionResponseOutput)
}

// ARM ID of the subscription
func (o EdgeProfileSubscriptionResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponsePtrOutput) LocationPlacementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.LocationPlacementId
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponsePtrOutput) QuotaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.QuotaId
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponsePtrOutput) RegisteredFeatures() SubscriptionRegisteredFeaturesResponseArrayOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) []SubscriptionRegisteredFeaturesResponse {
		if v == nil {
			return nil
		}
		return v.RegisteredFeatures
	}).(SubscriptionRegisteredFeaturesResponseArrayOutput)
}

func (o EdgeProfileSubscriptionResponsePtrOutput) RegistrationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationDate
	}).(pulumi.StringPtrOutput)
}

// Edge Subscription Registration ID
func (o EdgeProfileSubscriptionResponsePtrOutput) RegistrationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationId
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponsePtrOutput) SerializedDetails() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.SerializedDetails
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponsePtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

func (o EdgeProfileSubscriptionResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeProfileSubscriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Etcd configuration
type EtcdInfoResponse struct {
	// Etcd type
	Type string `pulumi:"type"`
	// Etcd version
	Version string `pulumi:"version"`
}

// Etcd configuration
type EtcdInfoResponseOutput struct{ *pulumi.OutputState }

func (EtcdInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EtcdInfoResponse)(nil)).Elem()
}

func (o EtcdInfoResponseOutput) ToEtcdInfoResponseOutput() EtcdInfoResponseOutput {
	return o
}

func (o EtcdInfoResponseOutput) ToEtcdInfoResponseOutputWithContext(ctx context.Context) EtcdInfoResponseOutput {
	return o
}

// Etcd type
func (o EtcdInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EtcdInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Etcd version
func (o EtcdInfoResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v EtcdInfoResponse) string { return v.Version }).(pulumi.StringOutput)
}

// File source details.
type FileSourceInfo struct {
	// File share ID.
	ShareId string `pulumi:"shareId"`
}

// FileSourceInfoInput is an input type that accepts FileSourceInfoArgs and FileSourceInfoOutput values.
// You can construct a concrete instance of `FileSourceInfoInput` via:
//
//	FileSourceInfoArgs{...}
type FileSourceInfoInput interface {
	pulumi.Input

	ToFileSourceInfoOutput() FileSourceInfoOutput
	ToFileSourceInfoOutputWithContext(context.Context) FileSourceInfoOutput
}

// File source details.
type FileSourceInfoArgs struct {
	// File share ID.
	ShareId pulumi.StringInput `pulumi:"shareId"`
}

func (FileSourceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSourceInfo)(nil)).Elem()
}

func (i FileSourceInfoArgs) ToFileSourceInfoOutput() FileSourceInfoOutput {
	return i.ToFileSourceInfoOutputWithContext(context.Background())
}

func (i FileSourceInfoArgs) ToFileSourceInfoOutputWithContext(ctx context.Context) FileSourceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSourceInfoOutput)
}

// File source details.
type FileSourceInfoOutput struct{ *pulumi.OutputState }

func (FileSourceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSourceInfo)(nil)).Elem()
}

func (o FileSourceInfoOutput) ToFileSourceInfoOutput() FileSourceInfoOutput {
	return o
}

func (o FileSourceInfoOutput) ToFileSourceInfoOutputWithContext(ctx context.Context) FileSourceInfoOutput {
	return o
}

// File share ID.
func (o FileSourceInfoOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v FileSourceInfo) string { return v.ShareId }).(pulumi.StringOutput)
}

// File source details.
type FileSourceInfoResponse struct {
	// File share ID.
	ShareId string `pulumi:"shareId"`
}

// File source details.
type FileSourceInfoResponseOutput struct{ *pulumi.OutputState }

func (FileSourceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSourceInfoResponse)(nil)).Elem()
}

func (o FileSourceInfoResponseOutput) ToFileSourceInfoResponseOutput() FileSourceInfoResponseOutput {
	return o
}

func (o FileSourceInfoResponseOutput) ToFileSourceInfoResponseOutputWithContext(ctx context.Context) FileSourceInfoResponseOutput {
	return o
}

// File share ID.
func (o FileSourceInfoResponseOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v FileSourceInfoResponse) string { return v.ShareId }).(pulumi.StringOutput)
}

// Image repository credential.
type ImageRepositoryCredential struct {
	// Image repository url (e.g.: mcr.microsoft.com).
	ImageRepositoryUrl string `pulumi:"imageRepositoryUrl"`
	// Repository user password.
	Password *AsymmetricEncryptedSecret `pulumi:"password"`
	// Repository user name.
	UserName string `pulumi:"userName"`
}

// ImageRepositoryCredentialInput is an input type that accepts ImageRepositoryCredentialArgs and ImageRepositoryCredentialOutput values.
// You can construct a concrete instance of `ImageRepositoryCredentialInput` via:
//
//	ImageRepositoryCredentialArgs{...}
type ImageRepositoryCredentialInput interface {
	pulumi.Input

	ToImageRepositoryCredentialOutput() ImageRepositoryCredentialOutput
	ToImageRepositoryCredentialOutputWithContext(context.Context) ImageRepositoryCredentialOutput
}

// Image repository credential.
type ImageRepositoryCredentialArgs struct {
	// Image repository url (e.g.: mcr.microsoft.com).
	ImageRepositoryUrl pulumi.StringInput `pulumi:"imageRepositoryUrl"`
	// Repository user password.
	Password AsymmetricEncryptedSecretPtrInput `pulumi:"password"`
	// Repository user name.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ImageRepositoryCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRepositoryCredential)(nil)).Elem()
}

func (i ImageRepositoryCredentialArgs) ToImageRepositoryCredentialOutput() ImageRepositoryCredentialOutput {
	return i.ToImageRepositoryCredentialOutputWithContext(context.Background())
}

func (i ImageRepositoryCredentialArgs) ToImageRepositoryCredentialOutputWithContext(ctx context.Context) ImageRepositoryCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRepositoryCredentialOutput)
}

func (i ImageRepositoryCredentialArgs) ToImageRepositoryCredentialPtrOutput() ImageRepositoryCredentialPtrOutput {
	return i.ToImageRepositoryCredentialPtrOutputWithContext(context.Background())
}

func (i ImageRepositoryCredentialArgs) ToImageRepositoryCredentialPtrOutputWithContext(ctx context.Context) ImageRepositoryCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRepositoryCredentialOutput).ToImageRepositoryCredentialPtrOutputWithContext(ctx)
}

// ImageRepositoryCredentialPtrInput is an input type that accepts ImageRepositoryCredentialArgs, ImageRepositoryCredentialPtr and ImageRepositoryCredentialPtrOutput values.
// You can construct a concrete instance of `ImageRepositoryCredentialPtrInput` via:
//
//	        ImageRepositoryCredentialArgs{...}
//
//	or:
//
//	        nil
type ImageRepositoryCredentialPtrInput interface {
	pulumi.Input

	ToImageRepositoryCredentialPtrOutput() ImageRepositoryCredentialPtrOutput
	ToImageRepositoryCredentialPtrOutputWithContext(context.Context) ImageRepositoryCredentialPtrOutput
}

type imageRepositoryCredentialPtrType ImageRepositoryCredentialArgs

func ImageRepositoryCredentialPtr(v *ImageRepositoryCredentialArgs) ImageRepositoryCredentialPtrInput {
	return (*imageRepositoryCredentialPtrType)(v)
}

func (*imageRepositoryCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageRepositoryCredential)(nil)).Elem()
}

func (i *imageRepositoryCredentialPtrType) ToImageRepositoryCredentialPtrOutput() ImageRepositoryCredentialPtrOutput {
	return i.ToImageRepositoryCredentialPtrOutputWithContext(context.Background())
}

func (i *imageRepositoryCredentialPtrType) ToImageRepositoryCredentialPtrOutputWithContext(ctx context.Context) ImageRepositoryCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRepositoryCredentialPtrOutput)
}

// Image repository credential.
type ImageRepositoryCredentialOutput struct{ *pulumi.OutputState }

func (ImageRepositoryCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRepositoryCredential)(nil)).Elem()
}

func (o ImageRepositoryCredentialOutput) ToImageRepositoryCredentialOutput() ImageRepositoryCredentialOutput {
	return o
}

func (o ImageRepositoryCredentialOutput) ToImageRepositoryCredentialOutputWithContext(ctx context.Context) ImageRepositoryCredentialOutput {
	return o
}

func (o ImageRepositoryCredentialOutput) ToImageRepositoryCredentialPtrOutput() ImageRepositoryCredentialPtrOutput {
	return o.ToImageRepositoryCredentialPtrOutputWithContext(context.Background())
}

func (o ImageRepositoryCredentialOutput) ToImageRepositoryCredentialPtrOutputWithContext(ctx context.Context) ImageRepositoryCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageRepositoryCredential) *ImageRepositoryCredential {
		return &v
	}).(ImageRepositoryCredentialPtrOutput)
}

// Image repository url (e.g.: mcr.microsoft.com).
func (o ImageRepositoryCredentialOutput) ImageRepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ImageRepositoryCredential) string { return v.ImageRepositoryUrl }).(pulumi.StringOutput)
}

// Repository user password.
func (o ImageRepositoryCredentialOutput) Password() AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyT(func(v ImageRepositoryCredential) *AsymmetricEncryptedSecret { return v.Password }).(AsymmetricEncryptedSecretPtrOutput)
}

// Repository user name.
func (o ImageRepositoryCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ImageRepositoryCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type ImageRepositoryCredentialPtrOutput struct{ *pulumi.OutputState }

func (ImageRepositoryCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageRepositoryCredential)(nil)).Elem()
}

func (o ImageRepositoryCredentialPtrOutput) ToImageRepositoryCredentialPtrOutput() ImageRepositoryCredentialPtrOutput {
	return o
}

func (o ImageRepositoryCredentialPtrOutput) ToImageRepositoryCredentialPtrOutputWithContext(ctx context.Context) ImageRepositoryCredentialPtrOutput {
	return o
}

func (o ImageRepositoryCredentialPtrOutput) Elem() ImageRepositoryCredentialOutput {
	return o.ApplyT(func(v *ImageRepositoryCredential) ImageRepositoryCredential {
		if v != nil {
			return *v
		}
		var ret ImageRepositoryCredential
		return ret
	}).(ImageRepositoryCredentialOutput)
}

// Image repository url (e.g.: mcr.microsoft.com).
func (o ImageRepositoryCredentialPtrOutput) ImageRepositoryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageRepositoryCredential) *string {
		if v == nil {
			return nil
		}
		return &v.ImageRepositoryUrl
	}).(pulumi.StringPtrOutput)
}

// Repository user password.
func (o ImageRepositoryCredentialPtrOutput) Password() AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyT(func(v *ImageRepositoryCredential) *AsymmetricEncryptedSecret {
		if v == nil {
			return nil
		}
		return v.Password
	}).(AsymmetricEncryptedSecretPtrOutput)
}

// Repository user name.
func (o ImageRepositoryCredentialPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageRepositoryCredential) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

// Image repository credential.
type ImageRepositoryCredentialResponse struct {
	// Image repository url (e.g.: mcr.microsoft.com).
	ImageRepositoryUrl string `pulumi:"imageRepositoryUrl"`
	// Repository user password.
	Password *AsymmetricEncryptedSecretResponse `pulumi:"password"`
	// Repository user name.
	UserName string `pulumi:"userName"`
}

// Image repository credential.
type ImageRepositoryCredentialResponseOutput struct{ *pulumi.OutputState }

func (ImageRepositoryCredentialResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRepositoryCredentialResponse)(nil)).Elem()
}

func (o ImageRepositoryCredentialResponseOutput) ToImageRepositoryCredentialResponseOutput() ImageRepositoryCredentialResponseOutput {
	return o
}

func (o ImageRepositoryCredentialResponseOutput) ToImageRepositoryCredentialResponseOutputWithContext(ctx context.Context) ImageRepositoryCredentialResponseOutput {
	return o
}

// Image repository url (e.g.: mcr.microsoft.com).
func (o ImageRepositoryCredentialResponseOutput) ImageRepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ImageRepositoryCredentialResponse) string { return v.ImageRepositoryUrl }).(pulumi.StringOutput)
}

// Repository user password.
func (o ImageRepositoryCredentialResponseOutput) Password() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v ImageRepositoryCredentialResponse) *AsymmetricEncryptedSecretResponse { return v.Password }).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// Repository user name.
func (o ImageRepositoryCredentialResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ImageRepositoryCredentialResponse) string { return v.UserName }).(pulumi.StringOutput)
}

type ImageRepositoryCredentialResponsePtrOutput struct{ *pulumi.OutputState }

func (ImageRepositoryCredentialResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageRepositoryCredentialResponse)(nil)).Elem()
}

func (o ImageRepositoryCredentialResponsePtrOutput) ToImageRepositoryCredentialResponsePtrOutput() ImageRepositoryCredentialResponsePtrOutput {
	return o
}

func (o ImageRepositoryCredentialResponsePtrOutput) ToImageRepositoryCredentialResponsePtrOutputWithContext(ctx context.Context) ImageRepositoryCredentialResponsePtrOutput {
	return o
}

func (o ImageRepositoryCredentialResponsePtrOutput) Elem() ImageRepositoryCredentialResponseOutput {
	return o.ApplyT(func(v *ImageRepositoryCredentialResponse) ImageRepositoryCredentialResponse {
		if v != nil {
			return *v
		}
		var ret ImageRepositoryCredentialResponse
		return ret
	}).(ImageRepositoryCredentialResponseOutput)
}

// Image repository url (e.g.: mcr.microsoft.com).
func (o ImageRepositoryCredentialResponsePtrOutput) ImageRepositoryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageRepositoryCredentialResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ImageRepositoryUrl
	}).(pulumi.StringPtrOutput)
}

// Repository user password.
func (o ImageRepositoryCredentialResponsePtrOutput) Password() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v *ImageRepositoryCredentialResponse) *AsymmetricEncryptedSecretResponse {
		if v == nil {
			return nil
		}
		return v.Password
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// Repository user name.
func (o ImageRepositoryCredentialResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageRepositoryCredentialResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

// Metadata of IoT device/IoT Edge device to be configured.
type IoTDeviceInfo struct {
	// Encrypted IoT device/IoT edge device connection string.
	Authentication *Authentication `pulumi:"authentication"`
	// ID of the IoT device/edge device.
	DeviceId string `pulumi:"deviceId"`
	// Host name for the IoT hub associated to the device.
	IoTHostHub string `pulumi:"ioTHostHub"`
	// Id for the IoT hub associated to the device.
	IoTHostHubId *string `pulumi:"ioTHostHubId"`
}

// IoTDeviceInfoInput is an input type that accepts IoTDeviceInfoArgs and IoTDeviceInfoOutput values.
// You can construct a concrete instance of `IoTDeviceInfoInput` via:
//
//	IoTDeviceInfoArgs{...}
type IoTDeviceInfoInput interface {
	pulumi.Input

	ToIoTDeviceInfoOutput() IoTDeviceInfoOutput
	ToIoTDeviceInfoOutputWithContext(context.Context) IoTDeviceInfoOutput
}

// Metadata of IoT device/IoT Edge device to be configured.
type IoTDeviceInfoArgs struct {
	// Encrypted IoT device/IoT edge device connection string.
	Authentication AuthenticationPtrInput `pulumi:"authentication"`
	// ID of the IoT device/edge device.
	DeviceId pulumi.StringInput `pulumi:"deviceId"`
	// Host name for the IoT hub associated to the device.
	IoTHostHub pulumi.StringInput `pulumi:"ioTHostHub"`
	// Id for the IoT hub associated to the device.
	IoTHostHubId pulumi.StringPtrInput `pulumi:"ioTHostHubId"`
}

func (IoTDeviceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTDeviceInfo)(nil)).Elem()
}

func (i IoTDeviceInfoArgs) ToIoTDeviceInfoOutput() IoTDeviceInfoOutput {
	return i.ToIoTDeviceInfoOutputWithContext(context.Background())
}

func (i IoTDeviceInfoArgs) ToIoTDeviceInfoOutputWithContext(ctx context.Context) IoTDeviceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTDeviceInfoOutput)
}

// Metadata of IoT device/IoT Edge device to be configured.
type IoTDeviceInfoOutput struct{ *pulumi.OutputState }

func (IoTDeviceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTDeviceInfo)(nil)).Elem()
}

func (o IoTDeviceInfoOutput) ToIoTDeviceInfoOutput() IoTDeviceInfoOutput {
	return o
}

func (o IoTDeviceInfoOutput) ToIoTDeviceInfoOutputWithContext(ctx context.Context) IoTDeviceInfoOutput {
	return o
}

// Encrypted IoT device/IoT edge device connection string.
func (o IoTDeviceInfoOutput) Authentication() AuthenticationPtrOutput {
	return o.ApplyT(func(v IoTDeviceInfo) *Authentication { return v.Authentication }).(AuthenticationPtrOutput)
}

// ID of the IoT device/edge device.
func (o IoTDeviceInfoOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v IoTDeviceInfo) string { return v.DeviceId }).(pulumi.StringOutput)
}

// Host name for the IoT hub associated to the device.
func (o IoTDeviceInfoOutput) IoTHostHub() pulumi.StringOutput {
	return o.ApplyT(func(v IoTDeviceInfo) string { return v.IoTHostHub }).(pulumi.StringOutput)
}

// Id for the IoT hub associated to the device.
func (o IoTDeviceInfoOutput) IoTHostHubId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTDeviceInfo) *string { return v.IoTHostHubId }).(pulumi.StringPtrOutput)
}

// Metadata of IoT device/IoT Edge device to be configured.
type IoTDeviceInfoResponse struct {
	// Encrypted IoT device/IoT edge device connection string.
	Authentication *AuthenticationResponse `pulumi:"authentication"`
	// ID of the IoT device/edge device.
	DeviceId string `pulumi:"deviceId"`
	// Host name for the IoT hub associated to the device.
	IoTHostHub string `pulumi:"ioTHostHub"`
	// Id for the IoT hub associated to the device.
	IoTHostHubId *string `pulumi:"ioTHostHubId"`
}

// Metadata of IoT device/IoT Edge device to be configured.
type IoTDeviceInfoResponseOutput struct{ *pulumi.OutputState }

func (IoTDeviceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTDeviceInfoResponse)(nil)).Elem()
}

func (o IoTDeviceInfoResponseOutput) ToIoTDeviceInfoResponseOutput() IoTDeviceInfoResponseOutput {
	return o
}

func (o IoTDeviceInfoResponseOutput) ToIoTDeviceInfoResponseOutputWithContext(ctx context.Context) IoTDeviceInfoResponseOutput {
	return o
}

// Encrypted IoT device/IoT edge device connection string.
func (o IoTDeviceInfoResponseOutput) Authentication() AuthenticationResponsePtrOutput {
	return o.ApplyT(func(v IoTDeviceInfoResponse) *AuthenticationResponse { return v.Authentication }).(AuthenticationResponsePtrOutput)
}

// ID of the IoT device/edge device.
func (o IoTDeviceInfoResponseOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v IoTDeviceInfoResponse) string { return v.DeviceId }).(pulumi.StringOutput)
}

// Host name for the IoT hub associated to the device.
func (o IoTDeviceInfoResponseOutput) IoTHostHub() pulumi.StringOutput {
	return o.ApplyT(func(v IoTDeviceInfoResponse) string { return v.IoTHostHub }).(pulumi.StringOutput)
}

// Id for the IoT hub associated to the device.
func (o IoTDeviceInfoResponseOutput) IoTHostHubId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTDeviceInfoResponse) *string { return v.IoTHostHubId }).(pulumi.StringPtrOutput)
}

// IoT edge agent details is optional, this will be used for download system Agent module while bootstrapping IoT Role if specified.
type IoTEdgeAgentInfo struct {
	// Name of the IoT edge agent image.
	ImageName string `pulumi:"imageName"`
	// Image repository details.
	ImageRepository *ImageRepositoryCredential `pulumi:"imageRepository"`
	// Image Tag.
	Tag string `pulumi:"tag"`
}

// IoTEdgeAgentInfoInput is an input type that accepts IoTEdgeAgentInfoArgs and IoTEdgeAgentInfoOutput values.
// You can construct a concrete instance of `IoTEdgeAgentInfoInput` via:
//
//	IoTEdgeAgentInfoArgs{...}
type IoTEdgeAgentInfoInput interface {
	pulumi.Input

	ToIoTEdgeAgentInfoOutput() IoTEdgeAgentInfoOutput
	ToIoTEdgeAgentInfoOutputWithContext(context.Context) IoTEdgeAgentInfoOutput
}

// IoT edge agent details is optional, this will be used for download system Agent module while bootstrapping IoT Role if specified.
type IoTEdgeAgentInfoArgs struct {
	// Name of the IoT edge agent image.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// Image repository details.
	ImageRepository ImageRepositoryCredentialPtrInput `pulumi:"imageRepository"`
	// Image Tag.
	Tag pulumi.StringInput `pulumi:"tag"`
}

func (IoTEdgeAgentInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTEdgeAgentInfo)(nil)).Elem()
}

func (i IoTEdgeAgentInfoArgs) ToIoTEdgeAgentInfoOutput() IoTEdgeAgentInfoOutput {
	return i.ToIoTEdgeAgentInfoOutputWithContext(context.Background())
}

func (i IoTEdgeAgentInfoArgs) ToIoTEdgeAgentInfoOutputWithContext(ctx context.Context) IoTEdgeAgentInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTEdgeAgentInfoOutput)
}

func (i IoTEdgeAgentInfoArgs) ToIoTEdgeAgentInfoPtrOutput() IoTEdgeAgentInfoPtrOutput {
	return i.ToIoTEdgeAgentInfoPtrOutputWithContext(context.Background())
}

func (i IoTEdgeAgentInfoArgs) ToIoTEdgeAgentInfoPtrOutputWithContext(ctx context.Context) IoTEdgeAgentInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTEdgeAgentInfoOutput).ToIoTEdgeAgentInfoPtrOutputWithContext(ctx)
}

// IoTEdgeAgentInfoPtrInput is an input type that accepts IoTEdgeAgentInfoArgs, IoTEdgeAgentInfoPtr and IoTEdgeAgentInfoPtrOutput values.
// You can construct a concrete instance of `IoTEdgeAgentInfoPtrInput` via:
//
//	        IoTEdgeAgentInfoArgs{...}
//
//	or:
//
//	        nil
type IoTEdgeAgentInfoPtrInput interface {
	pulumi.Input

	ToIoTEdgeAgentInfoPtrOutput() IoTEdgeAgentInfoPtrOutput
	ToIoTEdgeAgentInfoPtrOutputWithContext(context.Context) IoTEdgeAgentInfoPtrOutput
}

type ioTEdgeAgentInfoPtrType IoTEdgeAgentInfoArgs

func IoTEdgeAgentInfoPtr(v *IoTEdgeAgentInfoArgs) IoTEdgeAgentInfoPtrInput {
	return (*ioTEdgeAgentInfoPtrType)(v)
}

func (*ioTEdgeAgentInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTEdgeAgentInfo)(nil)).Elem()
}

func (i *ioTEdgeAgentInfoPtrType) ToIoTEdgeAgentInfoPtrOutput() IoTEdgeAgentInfoPtrOutput {
	return i.ToIoTEdgeAgentInfoPtrOutputWithContext(context.Background())
}

func (i *ioTEdgeAgentInfoPtrType) ToIoTEdgeAgentInfoPtrOutputWithContext(ctx context.Context) IoTEdgeAgentInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTEdgeAgentInfoPtrOutput)
}

// IoT edge agent details is optional, this will be used for download system Agent module while bootstrapping IoT Role if specified.
type IoTEdgeAgentInfoOutput struct{ *pulumi.OutputState }

func (IoTEdgeAgentInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTEdgeAgentInfo)(nil)).Elem()
}

func (o IoTEdgeAgentInfoOutput) ToIoTEdgeAgentInfoOutput() IoTEdgeAgentInfoOutput {
	return o
}

func (o IoTEdgeAgentInfoOutput) ToIoTEdgeAgentInfoOutputWithContext(ctx context.Context) IoTEdgeAgentInfoOutput {
	return o
}

func (o IoTEdgeAgentInfoOutput) ToIoTEdgeAgentInfoPtrOutput() IoTEdgeAgentInfoPtrOutput {
	return o.ToIoTEdgeAgentInfoPtrOutputWithContext(context.Background())
}

func (o IoTEdgeAgentInfoOutput) ToIoTEdgeAgentInfoPtrOutputWithContext(ctx context.Context) IoTEdgeAgentInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IoTEdgeAgentInfo) *IoTEdgeAgentInfo {
		return &v
	}).(IoTEdgeAgentInfoPtrOutput)
}

// Name of the IoT edge agent image.
func (o IoTEdgeAgentInfoOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v IoTEdgeAgentInfo) string { return v.ImageName }).(pulumi.StringOutput)
}

// Image repository details.
func (o IoTEdgeAgentInfoOutput) ImageRepository() ImageRepositoryCredentialPtrOutput {
	return o.ApplyT(func(v IoTEdgeAgentInfo) *ImageRepositoryCredential { return v.ImageRepository }).(ImageRepositoryCredentialPtrOutput)
}

// Image Tag.
func (o IoTEdgeAgentInfoOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v IoTEdgeAgentInfo) string { return v.Tag }).(pulumi.StringOutput)
}

type IoTEdgeAgentInfoPtrOutput struct{ *pulumi.OutputState }

func (IoTEdgeAgentInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTEdgeAgentInfo)(nil)).Elem()
}

func (o IoTEdgeAgentInfoPtrOutput) ToIoTEdgeAgentInfoPtrOutput() IoTEdgeAgentInfoPtrOutput {
	return o
}

func (o IoTEdgeAgentInfoPtrOutput) ToIoTEdgeAgentInfoPtrOutputWithContext(ctx context.Context) IoTEdgeAgentInfoPtrOutput {
	return o
}

func (o IoTEdgeAgentInfoPtrOutput) Elem() IoTEdgeAgentInfoOutput {
	return o.ApplyT(func(v *IoTEdgeAgentInfo) IoTEdgeAgentInfo {
		if v != nil {
			return *v
		}
		var ret IoTEdgeAgentInfo
		return ret
	}).(IoTEdgeAgentInfoOutput)
}

// Name of the IoT edge agent image.
func (o IoTEdgeAgentInfoPtrOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTEdgeAgentInfo) *string {
		if v == nil {
			return nil
		}
		return &v.ImageName
	}).(pulumi.StringPtrOutput)
}

// Image repository details.
func (o IoTEdgeAgentInfoPtrOutput) ImageRepository() ImageRepositoryCredentialPtrOutput {
	return o.ApplyT(func(v *IoTEdgeAgentInfo) *ImageRepositoryCredential {
		if v == nil {
			return nil
		}
		return v.ImageRepository
	}).(ImageRepositoryCredentialPtrOutput)
}

// Image Tag.
func (o IoTEdgeAgentInfoPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTEdgeAgentInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Tag
	}).(pulumi.StringPtrOutput)
}

// IoT edge agent details is optional, this will be used for download system Agent module while bootstrapping IoT Role if specified.
type IoTEdgeAgentInfoResponse struct {
	// Name of the IoT edge agent image.
	ImageName string `pulumi:"imageName"`
	// Image repository details.
	ImageRepository *ImageRepositoryCredentialResponse `pulumi:"imageRepository"`
	// Image Tag.
	Tag string `pulumi:"tag"`
}

// IoT edge agent details is optional, this will be used for download system Agent module while bootstrapping IoT Role if specified.
type IoTEdgeAgentInfoResponseOutput struct{ *pulumi.OutputState }

func (IoTEdgeAgentInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTEdgeAgentInfoResponse)(nil)).Elem()
}

func (o IoTEdgeAgentInfoResponseOutput) ToIoTEdgeAgentInfoResponseOutput() IoTEdgeAgentInfoResponseOutput {
	return o
}

func (o IoTEdgeAgentInfoResponseOutput) ToIoTEdgeAgentInfoResponseOutputWithContext(ctx context.Context) IoTEdgeAgentInfoResponseOutput {
	return o
}

// Name of the IoT edge agent image.
func (o IoTEdgeAgentInfoResponseOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v IoTEdgeAgentInfoResponse) string { return v.ImageName }).(pulumi.StringOutput)
}

// Image repository details.
func (o IoTEdgeAgentInfoResponseOutput) ImageRepository() ImageRepositoryCredentialResponsePtrOutput {
	return o.ApplyT(func(v IoTEdgeAgentInfoResponse) *ImageRepositoryCredentialResponse { return v.ImageRepository }).(ImageRepositoryCredentialResponsePtrOutput)
}

// Image Tag.
func (o IoTEdgeAgentInfoResponseOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v IoTEdgeAgentInfoResponse) string { return v.Tag }).(pulumi.StringOutput)
}

type IoTEdgeAgentInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (IoTEdgeAgentInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTEdgeAgentInfoResponse)(nil)).Elem()
}

func (o IoTEdgeAgentInfoResponsePtrOutput) ToIoTEdgeAgentInfoResponsePtrOutput() IoTEdgeAgentInfoResponsePtrOutput {
	return o
}

func (o IoTEdgeAgentInfoResponsePtrOutput) ToIoTEdgeAgentInfoResponsePtrOutputWithContext(ctx context.Context) IoTEdgeAgentInfoResponsePtrOutput {
	return o
}

func (o IoTEdgeAgentInfoResponsePtrOutput) Elem() IoTEdgeAgentInfoResponseOutput {
	return o.ApplyT(func(v *IoTEdgeAgentInfoResponse) IoTEdgeAgentInfoResponse {
		if v != nil {
			return *v
		}
		var ret IoTEdgeAgentInfoResponse
		return ret
	}).(IoTEdgeAgentInfoResponseOutput)
}

// Name of the IoT edge agent image.
func (o IoTEdgeAgentInfoResponsePtrOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTEdgeAgentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ImageName
	}).(pulumi.StringPtrOutput)
}

// Image repository details.
func (o IoTEdgeAgentInfoResponsePtrOutput) ImageRepository() ImageRepositoryCredentialResponsePtrOutput {
	return o.ApplyT(func(v *IoTEdgeAgentInfoResponse) *ImageRepositoryCredentialResponse {
		if v == nil {
			return nil
		}
		return v.ImageRepository
	}).(ImageRepositoryCredentialResponsePtrOutput)
}

// Image Tag.
func (o IoTEdgeAgentInfoResponsePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTEdgeAgentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tag
	}).(pulumi.StringPtrOutput)
}

// Kubernetes cluster configuration
type KubernetesClusterInfo struct {
	// Kubernetes cluster version
	Version string `pulumi:"version"`
}

// KubernetesClusterInfoInput is an input type that accepts KubernetesClusterInfoArgs and KubernetesClusterInfoOutput values.
// You can construct a concrete instance of `KubernetesClusterInfoInput` via:
//
//	KubernetesClusterInfoArgs{...}
type KubernetesClusterInfoInput interface {
	pulumi.Input

	ToKubernetesClusterInfoOutput() KubernetesClusterInfoOutput
	ToKubernetesClusterInfoOutputWithContext(context.Context) KubernetesClusterInfoOutput
}

// Kubernetes cluster configuration
type KubernetesClusterInfoArgs struct {
	// Kubernetes cluster version
	Version pulumi.StringInput `pulumi:"version"`
}

func (KubernetesClusterInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterInfo)(nil)).Elem()
}

func (i KubernetesClusterInfoArgs) ToKubernetesClusterInfoOutput() KubernetesClusterInfoOutput {
	return i.ToKubernetesClusterInfoOutputWithContext(context.Background())
}

func (i KubernetesClusterInfoArgs) ToKubernetesClusterInfoOutputWithContext(ctx context.Context) KubernetesClusterInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterInfoOutput)
}

// Kubernetes cluster configuration
type KubernetesClusterInfoOutput struct{ *pulumi.OutputState }

func (KubernetesClusterInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterInfo)(nil)).Elem()
}

func (o KubernetesClusterInfoOutput) ToKubernetesClusterInfoOutput() KubernetesClusterInfoOutput {
	return o
}

func (o KubernetesClusterInfoOutput) ToKubernetesClusterInfoOutputWithContext(ctx context.Context) KubernetesClusterInfoOutput {
	return o
}

// Kubernetes cluster version
func (o KubernetesClusterInfoOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterInfo) string { return v.Version }).(pulumi.StringOutput)
}

// Kubernetes cluster configuration
type KubernetesClusterInfoResponse struct {
	// Etcd configuration
	EtcdInfo EtcdInfoResponse `pulumi:"etcdInfo"`
	// Kubernetes cluster nodes
	Nodes []NodeInfoResponse `pulumi:"nodes"`
	// Kubernetes cluster version
	Version string `pulumi:"version"`
}

// Kubernetes cluster configuration
type KubernetesClusterInfoResponseOutput struct{ *pulumi.OutputState }

func (KubernetesClusterInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterInfoResponse)(nil)).Elem()
}

func (o KubernetesClusterInfoResponseOutput) ToKubernetesClusterInfoResponseOutput() KubernetesClusterInfoResponseOutput {
	return o
}

func (o KubernetesClusterInfoResponseOutput) ToKubernetesClusterInfoResponseOutputWithContext(ctx context.Context) KubernetesClusterInfoResponseOutput {
	return o
}

// Etcd configuration
func (o KubernetesClusterInfoResponseOutput) EtcdInfo() EtcdInfoResponseOutput {
	return o.ApplyT(func(v KubernetesClusterInfoResponse) EtcdInfoResponse { return v.EtcdInfo }).(EtcdInfoResponseOutput)
}

// Kubernetes cluster nodes
func (o KubernetesClusterInfoResponseOutput) Nodes() NodeInfoResponseArrayOutput {
	return o.ApplyT(func(v KubernetesClusterInfoResponse) []NodeInfoResponse { return v.Nodes }).(NodeInfoResponseArrayOutput)
}

// Kubernetes cluster version
func (o KubernetesClusterInfoResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterInfoResponse) string { return v.Version }).(pulumi.StringOutput)
}

// Kubernetes node IP configuration
type KubernetesIPConfigurationResponse struct {
	// IP address of the Kubernetes node.
	IpAddress *string `pulumi:"ipAddress"`
	// Port of the Kubernetes node.
	Port string `pulumi:"port"`
}

// Kubernetes node IP configuration
type KubernetesIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (KubernetesIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesIPConfigurationResponse)(nil)).Elem()
}

func (o KubernetesIPConfigurationResponseOutput) ToKubernetesIPConfigurationResponseOutput() KubernetesIPConfigurationResponseOutput {
	return o
}

func (o KubernetesIPConfigurationResponseOutput) ToKubernetesIPConfigurationResponseOutputWithContext(ctx context.Context) KubernetesIPConfigurationResponseOutput {
	return o
}

// IP address of the Kubernetes node.
func (o KubernetesIPConfigurationResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesIPConfigurationResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Port of the Kubernetes node.
func (o KubernetesIPConfigurationResponseOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesIPConfigurationResponse) string { return v.Port }).(pulumi.StringOutput)
}

type KubernetesIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (KubernetesIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesIPConfigurationResponse)(nil)).Elem()
}

func (o KubernetesIPConfigurationResponseArrayOutput) ToKubernetesIPConfigurationResponseArrayOutput() KubernetesIPConfigurationResponseArrayOutput {
	return o
}

func (o KubernetesIPConfigurationResponseArrayOutput) ToKubernetesIPConfigurationResponseArrayOutputWithContext(ctx context.Context) KubernetesIPConfigurationResponseArrayOutput {
	return o
}

func (o KubernetesIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) KubernetesIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesIPConfigurationResponse {
		return vs[0].([]KubernetesIPConfigurationResponse)[vs[1].(int)]
	}).(KubernetesIPConfigurationResponseOutput)
}

// Kubernetes role compute resource
type KubernetesRoleCompute struct {
	// VM profile
	VmProfile string `pulumi:"vmProfile"`
}

// KubernetesRoleComputeInput is an input type that accepts KubernetesRoleComputeArgs and KubernetesRoleComputeOutput values.
// You can construct a concrete instance of `KubernetesRoleComputeInput` via:
//
//	KubernetesRoleComputeArgs{...}
type KubernetesRoleComputeInput interface {
	pulumi.Input

	ToKubernetesRoleComputeOutput() KubernetesRoleComputeOutput
	ToKubernetesRoleComputeOutputWithContext(context.Context) KubernetesRoleComputeOutput
}

// Kubernetes role compute resource
type KubernetesRoleComputeArgs struct {
	// VM profile
	VmProfile pulumi.StringInput `pulumi:"vmProfile"`
}

func (KubernetesRoleComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesRoleCompute)(nil)).Elem()
}

func (i KubernetesRoleComputeArgs) ToKubernetesRoleComputeOutput() KubernetesRoleComputeOutput {
	return i.ToKubernetesRoleComputeOutputWithContext(context.Background())
}

func (i KubernetesRoleComputeArgs) ToKubernetesRoleComputeOutputWithContext(ctx context.Context) KubernetesRoleComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesRoleComputeOutput)
}

// Kubernetes role compute resource
type KubernetesRoleComputeOutput struct{ *pulumi.OutputState }

func (KubernetesRoleComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesRoleCompute)(nil)).Elem()
}

func (o KubernetesRoleComputeOutput) ToKubernetesRoleComputeOutput() KubernetesRoleComputeOutput {
	return o
}

func (o KubernetesRoleComputeOutput) ToKubernetesRoleComputeOutputWithContext(ctx context.Context) KubernetesRoleComputeOutput {
	return o
}

// VM profile
func (o KubernetesRoleComputeOutput) VmProfile() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesRoleCompute) string { return v.VmProfile }).(pulumi.StringOutput)
}

// Kubernetes role compute resource
type KubernetesRoleComputeResponse struct {
	// Memory in bytes
	MemoryInBytes float64 `pulumi:"memoryInBytes"`
	// Processor count
	ProcessorCount int `pulumi:"processorCount"`
	// VM profile
	VmProfile string `pulumi:"vmProfile"`
}

// Kubernetes role compute resource
type KubernetesRoleComputeResponseOutput struct{ *pulumi.OutputState }

func (KubernetesRoleComputeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesRoleComputeResponse)(nil)).Elem()
}

func (o KubernetesRoleComputeResponseOutput) ToKubernetesRoleComputeResponseOutput() KubernetesRoleComputeResponseOutput {
	return o
}

func (o KubernetesRoleComputeResponseOutput) ToKubernetesRoleComputeResponseOutputWithContext(ctx context.Context) KubernetesRoleComputeResponseOutput {
	return o
}

// Memory in bytes
func (o KubernetesRoleComputeResponseOutput) MemoryInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v KubernetesRoleComputeResponse) float64 { return v.MemoryInBytes }).(pulumi.Float64Output)
}

// Processor count
func (o KubernetesRoleComputeResponseOutput) ProcessorCount() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesRoleComputeResponse) int { return v.ProcessorCount }).(pulumi.IntOutput)
}

// VM profile
func (o KubernetesRoleComputeResponseOutput) VmProfile() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesRoleComputeResponse) string { return v.VmProfile }).(pulumi.StringOutput)
}

// Kubernetes role network resource
type KubernetesRoleNetworkResponse struct {
	// Cni configuration
	CniConfig CniConfigResponse `pulumi:"cniConfig"`
	// Load balancer configuration
	LoadBalancerConfig LoadBalancerConfigResponse `pulumi:"loadBalancerConfig"`
}

// Kubernetes role network resource
type KubernetesRoleNetworkResponseOutput struct{ *pulumi.OutputState }

func (KubernetesRoleNetworkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesRoleNetworkResponse)(nil)).Elem()
}

func (o KubernetesRoleNetworkResponseOutput) ToKubernetesRoleNetworkResponseOutput() KubernetesRoleNetworkResponseOutput {
	return o
}

func (o KubernetesRoleNetworkResponseOutput) ToKubernetesRoleNetworkResponseOutputWithContext(ctx context.Context) KubernetesRoleNetworkResponseOutput {
	return o
}

// Cni configuration
func (o KubernetesRoleNetworkResponseOutput) CniConfig() CniConfigResponseOutput {
	return o.ApplyT(func(v KubernetesRoleNetworkResponse) CniConfigResponse { return v.CniConfig }).(CniConfigResponseOutput)
}

// Load balancer configuration
func (o KubernetesRoleNetworkResponseOutput) LoadBalancerConfig() LoadBalancerConfigResponseOutput {
	return o.ApplyT(func(v KubernetesRoleNetworkResponse) LoadBalancerConfigResponse { return v.LoadBalancerConfig }).(LoadBalancerConfigResponseOutput)
}

// Kubernetes role resources
type KubernetesRoleResources struct {
	// Kubernetes role compute resource
	Compute KubernetesRoleCompute `pulumi:"compute"`
	// Kubernetes role storage resource
	Storage *KubernetesRoleStorage `pulumi:"storage"`
}

// KubernetesRoleResourcesInput is an input type that accepts KubernetesRoleResourcesArgs and KubernetesRoleResourcesOutput values.
// You can construct a concrete instance of `KubernetesRoleResourcesInput` via:
//
//	KubernetesRoleResourcesArgs{...}
type KubernetesRoleResourcesInput interface {
	pulumi.Input

	ToKubernetesRoleResourcesOutput() KubernetesRoleResourcesOutput
	ToKubernetesRoleResourcesOutputWithContext(context.Context) KubernetesRoleResourcesOutput
}

// Kubernetes role resources
type KubernetesRoleResourcesArgs struct {
	// Kubernetes role compute resource
	Compute KubernetesRoleComputeInput `pulumi:"compute"`
	// Kubernetes role storage resource
	Storage KubernetesRoleStoragePtrInput `pulumi:"storage"`
}

func (KubernetesRoleResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesRoleResources)(nil)).Elem()
}

func (i KubernetesRoleResourcesArgs) ToKubernetesRoleResourcesOutput() KubernetesRoleResourcesOutput {
	return i.ToKubernetesRoleResourcesOutputWithContext(context.Background())
}

func (i KubernetesRoleResourcesArgs) ToKubernetesRoleResourcesOutputWithContext(ctx context.Context) KubernetesRoleResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesRoleResourcesOutput)
}

// Kubernetes role resources
type KubernetesRoleResourcesOutput struct{ *pulumi.OutputState }

func (KubernetesRoleResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesRoleResources)(nil)).Elem()
}

func (o KubernetesRoleResourcesOutput) ToKubernetesRoleResourcesOutput() KubernetesRoleResourcesOutput {
	return o
}

func (o KubernetesRoleResourcesOutput) ToKubernetesRoleResourcesOutputWithContext(ctx context.Context) KubernetesRoleResourcesOutput {
	return o
}

// Kubernetes role compute resource
func (o KubernetesRoleResourcesOutput) Compute() KubernetesRoleComputeOutput {
	return o.ApplyT(func(v KubernetesRoleResources) KubernetesRoleCompute { return v.Compute }).(KubernetesRoleComputeOutput)
}

// Kubernetes role storage resource
func (o KubernetesRoleResourcesOutput) Storage() KubernetesRoleStoragePtrOutput {
	return o.ApplyT(func(v KubernetesRoleResources) *KubernetesRoleStorage { return v.Storage }).(KubernetesRoleStoragePtrOutput)
}

// Kubernetes role resources
type KubernetesRoleResourcesResponse struct {
	// Kubernetes role compute resource
	Compute KubernetesRoleComputeResponse `pulumi:"compute"`
	// Kubernetes role network resource
	Network KubernetesRoleNetworkResponse `pulumi:"network"`
	// Kubernetes role storage resource
	Storage *KubernetesRoleStorageResponse `pulumi:"storage"`
}

// Kubernetes role resources
type KubernetesRoleResourcesResponseOutput struct{ *pulumi.OutputState }

func (KubernetesRoleResourcesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesRoleResourcesResponse)(nil)).Elem()
}

func (o KubernetesRoleResourcesResponseOutput) ToKubernetesRoleResourcesResponseOutput() KubernetesRoleResourcesResponseOutput {
	return o
}

func (o KubernetesRoleResourcesResponseOutput) ToKubernetesRoleResourcesResponseOutputWithContext(ctx context.Context) KubernetesRoleResourcesResponseOutput {
	return o
}

// Kubernetes role compute resource
func (o KubernetesRoleResourcesResponseOutput) Compute() KubernetesRoleComputeResponseOutput {
	return o.ApplyT(func(v KubernetesRoleResourcesResponse) KubernetesRoleComputeResponse { return v.Compute }).(KubernetesRoleComputeResponseOutput)
}

// Kubernetes role network resource
func (o KubernetesRoleResourcesResponseOutput) Network() KubernetesRoleNetworkResponseOutput {
	return o.ApplyT(func(v KubernetesRoleResourcesResponse) KubernetesRoleNetworkResponse { return v.Network }).(KubernetesRoleNetworkResponseOutput)
}

// Kubernetes role storage resource
func (o KubernetesRoleResourcesResponseOutput) Storage() KubernetesRoleStorageResponsePtrOutput {
	return o.ApplyT(func(v KubernetesRoleResourcesResponse) *KubernetesRoleStorageResponse { return v.Storage }).(KubernetesRoleStorageResponsePtrOutput)
}

// Kubernetes role storage resource
type KubernetesRoleStorage struct {
	// Mount points of shares in role(s).
	Endpoints []MountPointMap `pulumi:"endpoints"`
}

// KubernetesRoleStorageInput is an input type that accepts KubernetesRoleStorageArgs and KubernetesRoleStorageOutput values.
// You can construct a concrete instance of `KubernetesRoleStorageInput` via:
//
//	KubernetesRoleStorageArgs{...}
type KubernetesRoleStorageInput interface {
	pulumi.Input

	ToKubernetesRoleStorageOutput() KubernetesRoleStorageOutput
	ToKubernetesRoleStorageOutputWithContext(context.Context) KubernetesRoleStorageOutput
}

// Kubernetes role storage resource
type KubernetesRoleStorageArgs struct {
	// Mount points of shares in role(s).
	Endpoints MountPointMapArrayInput `pulumi:"endpoints"`
}

func (KubernetesRoleStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesRoleStorage)(nil)).Elem()
}

func (i KubernetesRoleStorageArgs) ToKubernetesRoleStorageOutput() KubernetesRoleStorageOutput {
	return i.ToKubernetesRoleStorageOutputWithContext(context.Background())
}

func (i KubernetesRoleStorageArgs) ToKubernetesRoleStorageOutputWithContext(ctx context.Context) KubernetesRoleStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesRoleStorageOutput)
}

func (i KubernetesRoleStorageArgs) ToKubernetesRoleStoragePtrOutput() KubernetesRoleStoragePtrOutput {
	return i.ToKubernetesRoleStoragePtrOutputWithContext(context.Background())
}

func (i KubernetesRoleStorageArgs) ToKubernetesRoleStoragePtrOutputWithContext(ctx context.Context) KubernetesRoleStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesRoleStorageOutput).ToKubernetesRoleStoragePtrOutputWithContext(ctx)
}

// KubernetesRoleStoragePtrInput is an input type that accepts KubernetesRoleStorageArgs, KubernetesRoleStoragePtr and KubernetesRoleStoragePtrOutput values.
// You can construct a concrete instance of `KubernetesRoleStoragePtrInput` via:
//
//	        KubernetesRoleStorageArgs{...}
//
//	or:
//
//	        nil
type KubernetesRoleStoragePtrInput interface {
	pulumi.Input

	ToKubernetesRoleStoragePtrOutput() KubernetesRoleStoragePtrOutput
	ToKubernetesRoleStoragePtrOutputWithContext(context.Context) KubernetesRoleStoragePtrOutput
}

type kubernetesRoleStoragePtrType KubernetesRoleStorageArgs

func KubernetesRoleStoragePtr(v *KubernetesRoleStorageArgs) KubernetesRoleStoragePtrInput {
	return (*kubernetesRoleStoragePtrType)(v)
}

func (*kubernetesRoleStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesRoleStorage)(nil)).Elem()
}

func (i *kubernetesRoleStoragePtrType) ToKubernetesRoleStoragePtrOutput() KubernetesRoleStoragePtrOutput {
	return i.ToKubernetesRoleStoragePtrOutputWithContext(context.Background())
}

func (i *kubernetesRoleStoragePtrType) ToKubernetesRoleStoragePtrOutputWithContext(ctx context.Context) KubernetesRoleStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesRoleStoragePtrOutput)
}

// Kubernetes role storage resource
type KubernetesRoleStorageOutput struct{ *pulumi.OutputState }

func (KubernetesRoleStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesRoleStorage)(nil)).Elem()
}

func (o KubernetesRoleStorageOutput) ToKubernetesRoleStorageOutput() KubernetesRoleStorageOutput {
	return o
}

func (o KubernetesRoleStorageOutput) ToKubernetesRoleStorageOutputWithContext(ctx context.Context) KubernetesRoleStorageOutput {
	return o
}

func (o KubernetesRoleStorageOutput) ToKubernetesRoleStoragePtrOutput() KubernetesRoleStoragePtrOutput {
	return o.ToKubernetesRoleStoragePtrOutputWithContext(context.Background())
}

func (o KubernetesRoleStorageOutput) ToKubernetesRoleStoragePtrOutputWithContext(ctx context.Context) KubernetesRoleStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesRoleStorage) *KubernetesRoleStorage {
		return &v
	}).(KubernetesRoleStoragePtrOutput)
}

// Mount points of shares in role(s).
func (o KubernetesRoleStorageOutput) Endpoints() MountPointMapArrayOutput {
	return o.ApplyT(func(v KubernetesRoleStorage) []MountPointMap { return v.Endpoints }).(MountPointMapArrayOutput)
}

type KubernetesRoleStoragePtrOutput struct{ *pulumi.OutputState }

func (KubernetesRoleStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesRoleStorage)(nil)).Elem()
}

func (o KubernetesRoleStoragePtrOutput) ToKubernetesRoleStoragePtrOutput() KubernetesRoleStoragePtrOutput {
	return o
}

func (o KubernetesRoleStoragePtrOutput) ToKubernetesRoleStoragePtrOutputWithContext(ctx context.Context) KubernetesRoleStoragePtrOutput {
	return o
}

func (o KubernetesRoleStoragePtrOutput) Elem() KubernetesRoleStorageOutput {
	return o.ApplyT(func(v *KubernetesRoleStorage) KubernetesRoleStorage {
		if v != nil {
			return *v
		}
		var ret KubernetesRoleStorage
		return ret
	}).(KubernetesRoleStorageOutput)
}

// Mount points of shares in role(s).
func (o KubernetesRoleStoragePtrOutput) Endpoints() MountPointMapArrayOutput {
	return o.ApplyT(func(v *KubernetesRoleStorage) []MountPointMap {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(MountPointMapArrayOutput)
}

// Kubernetes storage class info.
type KubernetesRoleStorageClassInfoResponse struct {
	// Storage class name.
	Name string `pulumi:"name"`
	// If provisioned storage is posix compliant.
	PosixCompliant string `pulumi:"posixCompliant"`
	// Storage class type.
	Type string `pulumi:"type"`
}

// Kubernetes storage class info.
type KubernetesRoleStorageClassInfoResponseOutput struct{ *pulumi.OutputState }

func (KubernetesRoleStorageClassInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesRoleStorageClassInfoResponse)(nil)).Elem()
}

func (o KubernetesRoleStorageClassInfoResponseOutput) ToKubernetesRoleStorageClassInfoResponseOutput() KubernetesRoleStorageClassInfoResponseOutput {
	return o
}

func (o KubernetesRoleStorageClassInfoResponseOutput) ToKubernetesRoleStorageClassInfoResponseOutputWithContext(ctx context.Context) KubernetesRoleStorageClassInfoResponseOutput {
	return o
}

// Storage class name.
func (o KubernetesRoleStorageClassInfoResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesRoleStorageClassInfoResponse) string { return v.Name }).(pulumi.StringOutput)
}

// If provisioned storage is posix compliant.
func (o KubernetesRoleStorageClassInfoResponseOutput) PosixCompliant() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesRoleStorageClassInfoResponse) string { return v.PosixCompliant }).(pulumi.StringOutput)
}

// Storage class type.
func (o KubernetesRoleStorageClassInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesRoleStorageClassInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

type KubernetesRoleStorageClassInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (KubernetesRoleStorageClassInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesRoleStorageClassInfoResponse)(nil)).Elem()
}

func (o KubernetesRoleStorageClassInfoResponseArrayOutput) ToKubernetesRoleStorageClassInfoResponseArrayOutput() KubernetesRoleStorageClassInfoResponseArrayOutput {
	return o
}

func (o KubernetesRoleStorageClassInfoResponseArrayOutput) ToKubernetesRoleStorageClassInfoResponseArrayOutputWithContext(ctx context.Context) KubernetesRoleStorageClassInfoResponseArrayOutput {
	return o
}

func (o KubernetesRoleStorageClassInfoResponseArrayOutput) Index(i pulumi.IntInput) KubernetesRoleStorageClassInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesRoleStorageClassInfoResponse {
		return vs[0].([]KubernetesRoleStorageClassInfoResponse)[vs[1].(int)]
	}).(KubernetesRoleStorageClassInfoResponseOutput)
}

// Kubernetes role storage resource
type KubernetesRoleStorageResponse struct {
	// Mount points of shares in role(s).
	Endpoints []MountPointMapResponse `pulumi:"endpoints"`
	// Kubernetes storage class info.
	StorageClasses []KubernetesRoleStorageClassInfoResponse `pulumi:"storageClasses"`
}

// Kubernetes role storage resource
type KubernetesRoleStorageResponseOutput struct{ *pulumi.OutputState }

func (KubernetesRoleStorageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesRoleStorageResponse)(nil)).Elem()
}

func (o KubernetesRoleStorageResponseOutput) ToKubernetesRoleStorageResponseOutput() KubernetesRoleStorageResponseOutput {
	return o
}

func (o KubernetesRoleStorageResponseOutput) ToKubernetesRoleStorageResponseOutputWithContext(ctx context.Context) KubernetesRoleStorageResponseOutput {
	return o
}

// Mount points of shares in role(s).
func (o KubernetesRoleStorageResponseOutput) Endpoints() MountPointMapResponseArrayOutput {
	return o.ApplyT(func(v KubernetesRoleStorageResponse) []MountPointMapResponse { return v.Endpoints }).(MountPointMapResponseArrayOutput)
}

// Kubernetes storage class info.
func (o KubernetesRoleStorageResponseOutput) StorageClasses() KubernetesRoleStorageClassInfoResponseArrayOutput {
	return o.ApplyT(func(v KubernetesRoleStorageResponse) []KubernetesRoleStorageClassInfoResponse {
		return v.StorageClasses
	}).(KubernetesRoleStorageClassInfoResponseArrayOutput)
}

type KubernetesRoleStorageResponsePtrOutput struct{ *pulumi.OutputState }

func (KubernetesRoleStorageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesRoleStorageResponse)(nil)).Elem()
}

func (o KubernetesRoleStorageResponsePtrOutput) ToKubernetesRoleStorageResponsePtrOutput() KubernetesRoleStorageResponsePtrOutput {
	return o
}

func (o KubernetesRoleStorageResponsePtrOutput) ToKubernetesRoleStorageResponsePtrOutputWithContext(ctx context.Context) KubernetesRoleStorageResponsePtrOutput {
	return o
}

func (o KubernetesRoleStorageResponsePtrOutput) Elem() KubernetesRoleStorageResponseOutput {
	return o.ApplyT(func(v *KubernetesRoleStorageResponse) KubernetesRoleStorageResponse {
		if v != nil {
			return *v
		}
		var ret KubernetesRoleStorageResponse
		return ret
	}).(KubernetesRoleStorageResponseOutput)
}

// Mount points of shares in role(s).
func (o KubernetesRoleStorageResponsePtrOutput) Endpoints() MountPointMapResponseArrayOutput {
	return o.ApplyT(func(v *KubernetesRoleStorageResponse) []MountPointMapResponse {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(MountPointMapResponseArrayOutput)
}

// Kubernetes storage class info.
func (o KubernetesRoleStorageResponsePtrOutput) StorageClasses() KubernetesRoleStorageClassInfoResponseArrayOutput {
	return o.ApplyT(func(v *KubernetesRoleStorageResponse) []KubernetesRoleStorageClassInfoResponse {
		if v == nil {
			return nil
		}
		return v.StorageClasses
	}).(KubernetesRoleStorageClassInfoResponseArrayOutput)
}

// Load balancer configuration
type LoadBalancerConfigResponse struct {
	// Load balancer type
	Type string `pulumi:"type"`
	// Load balancer version
	Version string `pulumi:"version"`
}

// Load balancer configuration
type LoadBalancerConfigResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerConfigResponse)(nil)).Elem()
}

func (o LoadBalancerConfigResponseOutput) ToLoadBalancerConfigResponseOutput() LoadBalancerConfigResponseOutput {
	return o
}

func (o LoadBalancerConfigResponseOutput) ToLoadBalancerConfigResponseOutputWithContext(ctx context.Context) LoadBalancerConfigResponseOutput {
	return o
}

// Load balancer type
func (o LoadBalancerConfigResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerConfigResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Load balancer version
func (o LoadBalancerConfigResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerConfigResponse) string { return v.Version }).(pulumi.StringOutput)
}

// The share mount point.
type MountPointMap struct {
	// ID of the share mounted to the role VM.
	ShareId string `pulumi:"shareId"`
}

// MountPointMapInput is an input type that accepts MountPointMap and MountPointMapOutput values.
// You can construct a concrete instance of `MountPointMapInput` via:
//
//	MountPointMap{ "key": MountPointArgs{...} }
type MountPointMapInput interface {
	pulumi.Input

	ToMountPointMapOutput() MountPointMapOutput
	ToMountPointMapOutputWithContext(context.Context) MountPointMapOutput
}

// The share mount point.
type MountPointMapArgs struct {
	// ID of the share mounted to the role VM.
	ShareId pulumi.StringInput `pulumi:"shareId"`
}

func (MountPointMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountPointMap)(nil)).Elem()
}

func (i MountPointMapArgs) ToMountPointMapOutput() MountPointMapOutput {
	return i.ToMountPointMapOutputWithContext(context.Background())
}

func (i MountPointMapArgs) ToMountPointMapOutputWithContext(ctx context.Context) MountPointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountPointMapOutput)
}

// MountPointMapArrayInput is an input type that accepts MountPointMapArray and MountPointMapArrayOutput values.
// You can construct a concrete instance of `MountPointMapArrayInput` via:
//
//	MountPointMapArray{ MountPointMapArgs{...} }
type MountPointMapArrayInput interface {
	pulumi.Input

	ToMountPointMapArrayOutput() MountPointMapArrayOutput
	ToMountPointMapArrayOutputWithContext(context.Context) MountPointMapArrayOutput
}

type MountPointMapArray []MountPointMapInput

func (MountPointMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountPointMap)(nil)).Elem()
}

func (i MountPointMapArray) ToMountPointMapArrayOutput() MountPointMapArrayOutput {
	return i.ToMountPointMapArrayOutputWithContext(context.Background())
}

func (i MountPointMapArray) ToMountPointMapArrayOutputWithContext(ctx context.Context) MountPointMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountPointMapArrayOutput)
}

// The share mount point.
type MountPointMapOutput struct{ *pulumi.OutputState }

func (MountPointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountPointMap)(nil)).Elem()
}

func (o MountPointMapOutput) ToMountPointMapOutput() MountPointMapOutput {
	return o
}

func (o MountPointMapOutput) ToMountPointMapOutputWithContext(ctx context.Context) MountPointMapOutput {
	return o
}

// ID of the share mounted to the role VM.
func (o MountPointMapOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointMap) string { return v.ShareId }).(pulumi.StringOutput)
}

type MountPointMapArrayOutput struct{ *pulumi.OutputState }

func (MountPointMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountPointMap)(nil)).Elem()
}

func (o MountPointMapArrayOutput) ToMountPointMapArrayOutput() MountPointMapArrayOutput {
	return o
}

func (o MountPointMapArrayOutput) ToMountPointMapArrayOutputWithContext(ctx context.Context) MountPointMapArrayOutput {
	return o
}

func (o MountPointMapArrayOutput) Index(i pulumi.IntInput) MountPointMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MountPointMap {
		return vs[0].([]MountPointMap)[vs[1].(int)]
	}).(MountPointMapOutput)
}

// The share mount point.
type MountPointMapResponse struct {
	// Mount point for the share.
	MountPoint string `pulumi:"mountPoint"`
	// Mounting type.
	MountType string `pulumi:"mountType"`
	// ID of the role to which share is mounted.
	RoleId string `pulumi:"roleId"`
	// Role type.
	RoleType string `pulumi:"roleType"`
	// ID of the share mounted to the role VM.
	ShareId string `pulumi:"shareId"`
}

// The share mount point.
type MountPointMapResponseOutput struct{ *pulumi.OutputState }

func (MountPointMapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountPointMapResponse)(nil)).Elem()
}

func (o MountPointMapResponseOutput) ToMountPointMapResponseOutput() MountPointMapResponseOutput {
	return o
}

func (o MountPointMapResponseOutput) ToMountPointMapResponseOutputWithContext(ctx context.Context) MountPointMapResponseOutput {
	return o
}

// Mount point for the share.
func (o MountPointMapResponseOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointMapResponse) string { return v.MountPoint }).(pulumi.StringOutput)
}

// Mounting type.
func (o MountPointMapResponseOutput) MountType() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointMapResponse) string { return v.MountType }).(pulumi.StringOutput)
}

// ID of the role to which share is mounted.
func (o MountPointMapResponseOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointMapResponse) string { return v.RoleId }).(pulumi.StringOutput)
}

// Role type.
func (o MountPointMapResponseOutput) RoleType() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointMapResponse) string { return v.RoleType }).(pulumi.StringOutput)
}

// ID of the share mounted to the role VM.
func (o MountPointMapResponseOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointMapResponse) string { return v.ShareId }).(pulumi.StringOutput)
}

type MountPointMapResponseArrayOutput struct{ *pulumi.OutputState }

func (MountPointMapResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountPointMapResponse)(nil)).Elem()
}

func (o MountPointMapResponseArrayOutput) ToMountPointMapResponseArrayOutput() MountPointMapResponseArrayOutput {
	return o
}

func (o MountPointMapResponseArrayOutput) ToMountPointMapResponseArrayOutputWithContext(ctx context.Context) MountPointMapResponseArrayOutput {
	return o
}

func (o MountPointMapResponseArrayOutput) Index(i pulumi.IntInput) MountPointMapResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MountPointMapResponse {
		return vs[0].([]MountPointMapResponse)[vs[1].(int)]
	}).(MountPointMapResponseOutput)
}

// Kubernetes node info
type NodeInfoResponse struct {
	// IP Configuration of the Kubernetes node.
	IpConfiguration []KubernetesIPConfigurationResponse `pulumi:"ipConfiguration"`
	// Node name.
	Name string `pulumi:"name"`
	// Node type - Master/Worker
	Type string `pulumi:"type"`
}

// Kubernetes node info
type NodeInfoResponseOutput struct{ *pulumi.OutputState }

func (NodeInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeInfoResponse)(nil)).Elem()
}

func (o NodeInfoResponseOutput) ToNodeInfoResponseOutput() NodeInfoResponseOutput {
	return o
}

func (o NodeInfoResponseOutput) ToNodeInfoResponseOutputWithContext(ctx context.Context) NodeInfoResponseOutput {
	return o
}

// IP Configuration of the Kubernetes node.
func (o NodeInfoResponseOutput) IpConfiguration() KubernetesIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NodeInfoResponse) []KubernetesIPConfigurationResponse { return v.IpConfiguration }).(KubernetesIPConfigurationResponseArrayOutput)
}

// Node name.
func (o NodeInfoResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NodeInfoResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Node type - Master/Worker
func (o NodeInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NodeInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

type NodeInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (NodeInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeInfoResponse)(nil)).Elem()
}

func (o NodeInfoResponseArrayOutput) ToNodeInfoResponseArrayOutput() NodeInfoResponseArrayOutput {
	return o
}

func (o NodeInfoResponseArrayOutput) ToNodeInfoResponseArrayOutputWithContext(ctx context.Context) NodeInfoResponseArrayOutput {
	return o
}

func (o NodeInfoResponseArrayOutput) Index(i pulumi.IntInput) NodeInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeInfoResponse {
		return vs[0].([]NodeInfoResponse)[vs[1].(int)]
	}).(NodeInfoResponseOutput)
}

// Periodic timer event source.
type PeriodicTimerSourceInfo struct {
	// Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.
	Schedule string `pulumi:"schedule"`
	// The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds. If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC time.
	StartTime string `pulumi:"startTime"`
	// Topic where periodic events are published to IoT device.
	Topic *string `pulumi:"topic"`
}

// PeriodicTimerSourceInfoInput is an input type that accepts PeriodicTimerSourceInfoArgs and PeriodicTimerSourceInfoOutput values.
// You can construct a concrete instance of `PeriodicTimerSourceInfoInput` via:
//
//	PeriodicTimerSourceInfoArgs{...}
type PeriodicTimerSourceInfoInput interface {
	pulumi.Input

	ToPeriodicTimerSourceInfoOutput() PeriodicTimerSourceInfoOutput
	ToPeriodicTimerSourceInfoOutputWithContext(context.Context) PeriodicTimerSourceInfoOutput
}

// Periodic timer event source.
type PeriodicTimerSourceInfoArgs struct {
	// Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds. If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Topic where periodic events are published to IoT device.
	Topic pulumi.StringPtrInput `pulumi:"topic"`
}

func (PeriodicTimerSourceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeriodicTimerSourceInfo)(nil)).Elem()
}

func (i PeriodicTimerSourceInfoArgs) ToPeriodicTimerSourceInfoOutput() PeriodicTimerSourceInfoOutput {
	return i.ToPeriodicTimerSourceInfoOutputWithContext(context.Background())
}

func (i PeriodicTimerSourceInfoArgs) ToPeriodicTimerSourceInfoOutputWithContext(ctx context.Context) PeriodicTimerSourceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeriodicTimerSourceInfoOutput)
}

// Periodic timer event source.
type PeriodicTimerSourceInfoOutput struct{ *pulumi.OutputState }

func (PeriodicTimerSourceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeriodicTimerSourceInfo)(nil)).Elem()
}

func (o PeriodicTimerSourceInfoOutput) ToPeriodicTimerSourceInfoOutput() PeriodicTimerSourceInfoOutput {
	return o
}

func (o PeriodicTimerSourceInfoOutput) ToPeriodicTimerSourceInfoOutputWithContext(ctx context.Context) PeriodicTimerSourceInfoOutput {
	return o
}

// Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.
func (o PeriodicTimerSourceInfoOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v PeriodicTimerSourceInfo) string { return v.Schedule }).(pulumi.StringOutput)
}

// The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds. If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC time.
func (o PeriodicTimerSourceInfoOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v PeriodicTimerSourceInfo) string { return v.StartTime }).(pulumi.StringOutput)
}

// Topic where periodic events are published to IoT device.
func (o PeriodicTimerSourceInfoOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeriodicTimerSourceInfo) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

// Periodic timer event source.
type PeriodicTimerSourceInfoResponse struct {
	// Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.
	Schedule string `pulumi:"schedule"`
	// The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds. If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC time.
	StartTime string `pulumi:"startTime"`
	// Topic where periodic events are published to IoT device.
	Topic *string `pulumi:"topic"`
}

// Periodic timer event source.
type PeriodicTimerSourceInfoResponseOutput struct{ *pulumi.OutputState }

func (PeriodicTimerSourceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeriodicTimerSourceInfoResponse)(nil)).Elem()
}

func (o PeriodicTimerSourceInfoResponseOutput) ToPeriodicTimerSourceInfoResponseOutput() PeriodicTimerSourceInfoResponseOutput {
	return o
}

func (o PeriodicTimerSourceInfoResponseOutput) ToPeriodicTimerSourceInfoResponseOutputWithContext(ctx context.Context) PeriodicTimerSourceInfoResponseOutput {
	return o
}

// Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.
func (o PeriodicTimerSourceInfoResponseOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v PeriodicTimerSourceInfoResponse) string { return v.Schedule }).(pulumi.StringOutput)
}

// The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds. If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC time.
func (o PeriodicTimerSourceInfoResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v PeriodicTimerSourceInfoResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Topic where periodic events are published to IoT device.
func (o PeriodicTimerSourceInfoResponseOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeriodicTimerSourceInfoResponse) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

// Compute role against which events will be raised.
type RoleSinkInfo struct {
	// Compute role ID.
	RoleId string `pulumi:"roleId"`
}

// RoleSinkInfoInput is an input type that accepts RoleSinkInfoArgs and RoleSinkInfoOutput values.
// You can construct a concrete instance of `RoleSinkInfoInput` via:
//
//	RoleSinkInfoArgs{...}
type RoleSinkInfoInput interface {
	pulumi.Input

	ToRoleSinkInfoOutput() RoleSinkInfoOutput
	ToRoleSinkInfoOutputWithContext(context.Context) RoleSinkInfoOutput
}

// Compute role against which events will be raised.
type RoleSinkInfoArgs struct {
	// Compute role ID.
	RoleId pulumi.StringInput `pulumi:"roleId"`
}

func (RoleSinkInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleSinkInfo)(nil)).Elem()
}

func (i RoleSinkInfoArgs) ToRoleSinkInfoOutput() RoleSinkInfoOutput {
	return i.ToRoleSinkInfoOutputWithContext(context.Background())
}

func (i RoleSinkInfoArgs) ToRoleSinkInfoOutputWithContext(ctx context.Context) RoleSinkInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleSinkInfoOutput)
}

// Compute role against which events will be raised.
type RoleSinkInfoOutput struct{ *pulumi.OutputState }

func (RoleSinkInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleSinkInfo)(nil)).Elem()
}

func (o RoleSinkInfoOutput) ToRoleSinkInfoOutput() RoleSinkInfoOutput {
	return o
}

func (o RoleSinkInfoOutput) ToRoleSinkInfoOutputWithContext(ctx context.Context) RoleSinkInfoOutput {
	return o
}

// Compute role ID.
func (o RoleSinkInfoOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v RoleSinkInfo) string { return v.RoleId }).(pulumi.StringOutput)
}

// Compute role against which events will be raised.
type RoleSinkInfoResponse struct {
	// Compute role ID.
	RoleId string `pulumi:"roleId"`
}

// Compute role against which events will be raised.
type RoleSinkInfoResponseOutput struct{ *pulumi.OutputState }

func (RoleSinkInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleSinkInfoResponse)(nil)).Elem()
}

func (o RoleSinkInfoResponseOutput) ToRoleSinkInfoResponseOutput() RoleSinkInfoResponseOutput {
	return o
}

func (o RoleSinkInfoResponseOutput) ToRoleSinkInfoResponseOutputWithContext(ctx context.Context) RoleSinkInfoResponseOutput {
	return o
}

// Compute role ID.
func (o RoleSinkInfoResponseOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v RoleSinkInfoResponse) string { return v.RoleId }).(pulumi.StringOutput)
}

// Holds device secret either as a KeyVault reference or as an encrypted value.
type SecretResponse struct {
	// Encrypted (using device public key) secret value.
	EncryptedSecret *AsymmetricEncryptedSecretResponse `pulumi:"encryptedSecret"`
	// Id of the Key-Vault where secret is stored (ex: secrets/AuthClientSecret/82ef4346187a4033a10d629cde07d740).
	KeyVaultId *string `pulumi:"keyVaultId"`
}

// Holds device secret either as a KeyVault reference or as an encrypted value.
type SecretResponseOutput struct{ *pulumi.OutputState }

func (SecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretResponse)(nil)).Elem()
}

func (o SecretResponseOutput) ToSecretResponseOutput() SecretResponseOutput {
	return o
}

func (o SecretResponseOutput) ToSecretResponseOutputWithContext(ctx context.Context) SecretResponseOutput {
	return o
}

// Encrypted (using device public key) secret value.
func (o SecretResponseOutput) EncryptedSecret() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v SecretResponse) *AsymmetricEncryptedSecretResponse { return v.EncryptedSecret }).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// Id of the Key-Vault where secret is stored (ex: secrets/AuthClientSecret/82ef4346187a4033a10d629cde07d740).
func (o SecretResponseOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretResponse) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

type SecretResponseMapOutput struct{ *pulumi.OutputState }

func (SecretResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SecretResponse)(nil)).Elem()
}

func (o SecretResponseMapOutput) ToSecretResponseMapOutput() SecretResponseMapOutput {
	return o
}

func (o SecretResponseMapOutput) ToSecretResponseMapOutputWithContext(ctx context.Context) SecretResponseMapOutput {
	return o
}

func (o SecretResponseMapOutput) MapIndex(k pulumi.StringInput) SecretResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SecretResponse {
		return vs[0].(map[string]SecretResponse)[vs[1].(string)]
	}).(SecretResponseOutput)
}

type SubscriptionRegisteredFeaturesResponse struct {
	Name  *string `pulumi:"name"`
	State *string `pulumi:"state"`
}

type SubscriptionRegisteredFeaturesResponseOutput struct{ *pulumi.OutputState }

func (SubscriptionRegisteredFeaturesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionRegisteredFeaturesResponse)(nil)).Elem()
}

func (o SubscriptionRegisteredFeaturesResponseOutput) ToSubscriptionRegisteredFeaturesResponseOutput() SubscriptionRegisteredFeaturesResponseOutput {
	return o
}

func (o SubscriptionRegisteredFeaturesResponseOutput) ToSubscriptionRegisteredFeaturesResponseOutputWithContext(ctx context.Context) SubscriptionRegisteredFeaturesResponseOutput {
	return o
}

func (o SubscriptionRegisteredFeaturesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionRegisteredFeaturesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SubscriptionRegisteredFeaturesResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionRegisteredFeaturesResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type SubscriptionRegisteredFeaturesResponseArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionRegisteredFeaturesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionRegisteredFeaturesResponse)(nil)).Elem()
}

func (o SubscriptionRegisteredFeaturesResponseArrayOutput) ToSubscriptionRegisteredFeaturesResponseArrayOutput() SubscriptionRegisteredFeaturesResponseArrayOutput {
	return o
}

func (o SubscriptionRegisteredFeaturesResponseArrayOutput) ToSubscriptionRegisteredFeaturesResponseArrayOutputWithContext(ctx context.Context) SubscriptionRegisteredFeaturesResponseArrayOutput {
	return o
}

func (o SubscriptionRegisteredFeaturesResponseArrayOutput) Index(i pulumi.IntInput) SubscriptionRegisteredFeaturesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionRegisteredFeaturesResponse {
		return vs[0].([]SubscriptionRegisteredFeaturesResponse)[vs[1].(int)]
	}).(SubscriptionRegisteredFeaturesResponseOutput)
}

// Symmetric key for authentication.
type SymmetricKey struct {
	// Connection string based on the symmetric key.
	ConnectionString *AsymmetricEncryptedSecret `pulumi:"connectionString"`
}

// SymmetricKeyInput is an input type that accepts SymmetricKeyArgs and SymmetricKeyOutput values.
// You can construct a concrete instance of `SymmetricKeyInput` via:
//
//	SymmetricKeyArgs{...}
type SymmetricKeyInput interface {
	pulumi.Input

	ToSymmetricKeyOutput() SymmetricKeyOutput
	ToSymmetricKeyOutputWithContext(context.Context) SymmetricKeyOutput
}

// Symmetric key for authentication.
type SymmetricKeyArgs struct {
	// Connection string based on the symmetric key.
	ConnectionString AsymmetricEncryptedSecretPtrInput `pulumi:"connectionString"`
}

func (SymmetricKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SymmetricKey)(nil)).Elem()
}

func (i SymmetricKeyArgs) ToSymmetricKeyOutput() SymmetricKeyOutput {
	return i.ToSymmetricKeyOutputWithContext(context.Background())
}

func (i SymmetricKeyArgs) ToSymmetricKeyOutputWithContext(ctx context.Context) SymmetricKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SymmetricKeyOutput)
}

func (i SymmetricKeyArgs) ToSymmetricKeyPtrOutput() SymmetricKeyPtrOutput {
	return i.ToSymmetricKeyPtrOutputWithContext(context.Background())
}

func (i SymmetricKeyArgs) ToSymmetricKeyPtrOutputWithContext(ctx context.Context) SymmetricKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SymmetricKeyOutput).ToSymmetricKeyPtrOutputWithContext(ctx)
}

// SymmetricKeyPtrInput is an input type that accepts SymmetricKeyArgs, SymmetricKeyPtr and SymmetricKeyPtrOutput values.
// You can construct a concrete instance of `SymmetricKeyPtrInput` via:
//
//	        SymmetricKeyArgs{...}
//
//	or:
//
//	        nil
type SymmetricKeyPtrInput interface {
	pulumi.Input

	ToSymmetricKeyPtrOutput() SymmetricKeyPtrOutput
	ToSymmetricKeyPtrOutputWithContext(context.Context) SymmetricKeyPtrOutput
}

type symmetricKeyPtrType SymmetricKeyArgs

func SymmetricKeyPtr(v *SymmetricKeyArgs) SymmetricKeyPtrInput {
	return (*symmetricKeyPtrType)(v)
}

func (*symmetricKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SymmetricKey)(nil)).Elem()
}

func (i *symmetricKeyPtrType) ToSymmetricKeyPtrOutput() SymmetricKeyPtrOutput {
	return i.ToSymmetricKeyPtrOutputWithContext(context.Background())
}

func (i *symmetricKeyPtrType) ToSymmetricKeyPtrOutputWithContext(ctx context.Context) SymmetricKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SymmetricKeyPtrOutput)
}

// Symmetric key for authentication.
type SymmetricKeyOutput struct{ *pulumi.OutputState }

func (SymmetricKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SymmetricKey)(nil)).Elem()
}

func (o SymmetricKeyOutput) ToSymmetricKeyOutput() SymmetricKeyOutput {
	return o
}

func (o SymmetricKeyOutput) ToSymmetricKeyOutputWithContext(ctx context.Context) SymmetricKeyOutput {
	return o
}

func (o SymmetricKeyOutput) ToSymmetricKeyPtrOutput() SymmetricKeyPtrOutput {
	return o.ToSymmetricKeyPtrOutputWithContext(context.Background())
}

func (o SymmetricKeyOutput) ToSymmetricKeyPtrOutputWithContext(ctx context.Context) SymmetricKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SymmetricKey) *SymmetricKey {
		return &v
	}).(SymmetricKeyPtrOutput)
}

// Connection string based on the symmetric key.
func (o SymmetricKeyOutput) ConnectionString() AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyT(func(v SymmetricKey) *AsymmetricEncryptedSecret { return v.ConnectionString }).(AsymmetricEncryptedSecretPtrOutput)
}

type SymmetricKeyPtrOutput struct{ *pulumi.OutputState }

func (SymmetricKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SymmetricKey)(nil)).Elem()
}

func (o SymmetricKeyPtrOutput) ToSymmetricKeyPtrOutput() SymmetricKeyPtrOutput {
	return o
}

func (o SymmetricKeyPtrOutput) ToSymmetricKeyPtrOutputWithContext(ctx context.Context) SymmetricKeyPtrOutput {
	return o
}

func (o SymmetricKeyPtrOutput) Elem() SymmetricKeyOutput {
	return o.ApplyT(func(v *SymmetricKey) SymmetricKey {
		if v != nil {
			return *v
		}
		var ret SymmetricKey
		return ret
	}).(SymmetricKeyOutput)
}

// Connection string based on the symmetric key.
func (o SymmetricKeyPtrOutput) ConnectionString() AsymmetricEncryptedSecretPtrOutput {
	return o.ApplyT(func(v *SymmetricKey) *AsymmetricEncryptedSecret {
		if v == nil {
			return nil
		}
		return v.ConnectionString
	}).(AsymmetricEncryptedSecretPtrOutput)
}

// Symmetric key for authentication.
type SymmetricKeyResponse struct {
	// Connection string based on the symmetric key.
	ConnectionString *AsymmetricEncryptedSecretResponse `pulumi:"connectionString"`
}

// Symmetric key for authentication.
type SymmetricKeyResponseOutput struct{ *pulumi.OutputState }

func (SymmetricKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SymmetricKeyResponse)(nil)).Elem()
}

func (o SymmetricKeyResponseOutput) ToSymmetricKeyResponseOutput() SymmetricKeyResponseOutput {
	return o
}

func (o SymmetricKeyResponseOutput) ToSymmetricKeyResponseOutputWithContext(ctx context.Context) SymmetricKeyResponseOutput {
	return o
}

// Connection string based on the symmetric key.
func (o SymmetricKeyResponseOutput) ConnectionString() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v SymmetricKeyResponse) *AsymmetricEncryptedSecretResponse { return v.ConnectionString }).(AsymmetricEncryptedSecretResponsePtrOutput)
}

type SymmetricKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (SymmetricKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SymmetricKeyResponse)(nil)).Elem()
}

func (o SymmetricKeyResponsePtrOutput) ToSymmetricKeyResponsePtrOutput() SymmetricKeyResponsePtrOutput {
	return o
}

func (o SymmetricKeyResponsePtrOutput) ToSymmetricKeyResponsePtrOutputWithContext(ctx context.Context) SymmetricKeyResponsePtrOutput {
	return o
}

func (o SymmetricKeyResponsePtrOutput) Elem() SymmetricKeyResponseOutput {
	return o.ApplyT(func(v *SymmetricKeyResponse) SymmetricKeyResponse {
		if v != nil {
			return *v
		}
		var ret SymmetricKeyResponse
		return ret
	}).(SymmetricKeyResponseOutput)
}

// Connection string based on the symmetric key.
func (o SymmetricKeyResponsePtrOutput) ConnectionString() AsymmetricEncryptedSecretResponsePtrOutput {
	return o.ApplyT(func(v *SymmetricKeyResponse) *AsymmetricEncryptedSecretResponse {
		if v == nil {
			return nil
		}
		return v.ConnectionString
	}).(AsymmetricEncryptedSecretResponsePtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretPtrOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretResponseOutput{})
	pulumi.RegisterOutputType(AsymmetricEncryptedSecretResponsePtrOutput{})
	pulumi.RegisterOutputType(AuthenticationOutput{})
	pulumi.RegisterOutputType(AuthenticationPtrOutput{})
	pulumi.RegisterOutputType(AuthenticationResponseOutput{})
	pulumi.RegisterOutputType(AuthenticationResponsePtrOutput{})
	pulumi.RegisterOutputType(CniConfigResponseOutput{})
	pulumi.RegisterOutputType(ComputeResourceOutput{})
	pulumi.RegisterOutputType(ComputeResourcePtrOutput{})
	pulumi.RegisterOutputType(ComputeResourceResponseOutput{})
	pulumi.RegisterOutputType(ComputeResourceResponsePtrOutput{})
	pulumi.RegisterOutputType(EdgeProfileResponseOutput{})
	pulumi.RegisterOutputType(EdgeProfileSubscriptionResponseOutput{})
	pulumi.RegisterOutputType(EdgeProfileSubscriptionResponsePtrOutput{})
	pulumi.RegisterOutputType(EtcdInfoResponseOutput{})
	pulumi.RegisterOutputType(FileSourceInfoOutput{})
	pulumi.RegisterOutputType(FileSourceInfoResponseOutput{})
	pulumi.RegisterOutputType(ImageRepositoryCredentialOutput{})
	pulumi.RegisterOutputType(ImageRepositoryCredentialPtrOutput{})
	pulumi.RegisterOutputType(ImageRepositoryCredentialResponseOutput{})
	pulumi.RegisterOutputType(ImageRepositoryCredentialResponsePtrOutput{})
	pulumi.RegisterOutputType(IoTDeviceInfoOutput{})
	pulumi.RegisterOutputType(IoTDeviceInfoResponseOutput{})
	pulumi.RegisterOutputType(IoTEdgeAgentInfoOutput{})
	pulumi.RegisterOutputType(IoTEdgeAgentInfoPtrOutput{})
	pulumi.RegisterOutputType(IoTEdgeAgentInfoResponseOutput{})
	pulumi.RegisterOutputType(IoTEdgeAgentInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterInfoOutput{})
	pulumi.RegisterOutputType(KubernetesClusterInfoResponseOutput{})
	pulumi.RegisterOutputType(KubernetesIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(KubernetesIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(KubernetesRoleComputeOutput{})
	pulumi.RegisterOutputType(KubernetesRoleComputeResponseOutput{})
	pulumi.RegisterOutputType(KubernetesRoleNetworkResponseOutput{})
	pulumi.RegisterOutputType(KubernetesRoleResourcesOutput{})
	pulumi.RegisterOutputType(KubernetesRoleResourcesResponseOutput{})
	pulumi.RegisterOutputType(KubernetesRoleStorageOutput{})
	pulumi.RegisterOutputType(KubernetesRoleStoragePtrOutput{})
	pulumi.RegisterOutputType(KubernetesRoleStorageClassInfoResponseOutput{})
	pulumi.RegisterOutputType(KubernetesRoleStorageClassInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(KubernetesRoleStorageResponseOutput{})
	pulumi.RegisterOutputType(KubernetesRoleStorageResponsePtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerConfigResponseOutput{})
	pulumi.RegisterOutputType(MountPointMapOutput{})
	pulumi.RegisterOutputType(MountPointMapArrayOutput{})
	pulumi.RegisterOutputType(MountPointMapResponseOutput{})
	pulumi.RegisterOutputType(MountPointMapResponseArrayOutput{})
	pulumi.RegisterOutputType(NodeInfoResponseOutput{})
	pulumi.RegisterOutputType(NodeInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(PeriodicTimerSourceInfoOutput{})
	pulumi.RegisterOutputType(PeriodicTimerSourceInfoResponseOutput{})
	pulumi.RegisterOutputType(RoleSinkInfoOutput{})
	pulumi.RegisterOutputType(RoleSinkInfoResponseOutput{})
	pulumi.RegisterOutputType(SecretResponseOutput{})
	pulumi.RegisterOutputType(SecretResponseMapOutput{})
	pulumi.RegisterOutputType(SubscriptionRegisteredFeaturesResponseOutput{})
	pulumi.RegisterOutputType(SubscriptionRegisteredFeaturesResponseArrayOutput{})
	pulumi.RegisterOutputType(SymmetricKeyOutput{})
	pulumi.RegisterOutputType(SymmetricKeyPtrOutput{})
	pulumi.RegisterOutputType(SymmetricKeyResponseOutput{})
	pulumi.RegisterOutputType(SymmetricKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
}
