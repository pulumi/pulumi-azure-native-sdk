// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220301

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a specific role by name.
func GetKubernetesRole(ctx *pulumi.Context, args *GetKubernetesRoleArgs, opts ...pulumi.InvokeOption) (*GetKubernetesRoleResult, error) {
	var rv GetKubernetesRoleResult
	err := ctx.Invoke("azure-native:databoxedge/v20220301:getKubernetesRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetKubernetesRoleArgs struct {
	// The device name.
	DeviceName string `pulumi:"deviceName"`
	// The role name.
	Name string `pulumi:"name"`
	// The resource group name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The limited preview of Kubernetes Cluster Management from the Azure supports:
//  1. Using a simple turn-key option in Azure Portal, deploy a Kubernetes cluster on your Azure Stack Edge device.
//  2. Configure Kubernetes cluster running on your device with Arc enabled Kubernetes with a click of a button in the Azure Portal.
//     Azure Arc enables organizations to view, manage, and govern their on-premises Kubernetes clusters using the Azure Portal, command line tools, and APIs.
//  3. Easily configure Persistent Volumes using SMB and NFS shares for storing container data.
//     For more information, refer to the document here: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8-Cloud-Management-20210323.pdf
//     Or Demo: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8S-Cloud-Management-20210323.mp4
//     By using this feature, you agree to the preview legal terms. See the https://azure.microsoft.com/en-us/support/legal/preview-supplemental-terms/
type GetKubernetesRoleResult struct {
	// Host OS supported by the Kubernetes role.
	HostPlatform string `pulumi:"hostPlatform"`
	// Platform where the runtime is hosted.
	HostPlatformType string `pulumi:"hostPlatformType"`
	// The path ID that uniquely identifies the object.
	Id string `pulumi:"id"`
	// Role type.
	// Expected value is 'Kubernetes'.
	Kind string `pulumi:"kind"`
	// Kubernetes cluster configuration
	KubernetesClusterInfo KubernetesClusterInfoResponse `pulumi:"kubernetesClusterInfo"`
	// Kubernetes role resources
	KubernetesRoleResources KubernetesRoleResourcesResponse `pulumi:"kubernetesRoleResources"`
	// The object name.
	Name string `pulumi:"name"`
	// State of Kubernetes deployment
	ProvisioningState string `pulumi:"provisioningState"`
	// Role status.
	RoleStatus string `pulumi:"roleStatus"`
	// Metadata pertaining to creation and last modification of Role
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The hierarchical type of the object.
	Type string `pulumi:"type"`
}

func GetKubernetesRoleOutput(ctx *pulumi.Context, args GetKubernetesRoleOutputArgs, opts ...pulumi.InvokeOption) GetKubernetesRoleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetKubernetesRoleResult, error) {
			args := v.(GetKubernetesRoleArgs)
			r, err := GetKubernetesRole(ctx, &args, opts...)
			var s GetKubernetesRoleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetKubernetesRoleResultOutput)
}

type GetKubernetesRoleOutputArgs struct {
	// The device name.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// The role name.
	Name pulumi.StringInput `pulumi:"name"`
	// The resource group name.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetKubernetesRoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesRoleArgs)(nil)).Elem()
}

// The limited preview of Kubernetes Cluster Management from the Azure supports:
//  1. Using a simple turn-key option in Azure Portal, deploy a Kubernetes cluster on your Azure Stack Edge device.
//  2. Configure Kubernetes cluster running on your device with Arc enabled Kubernetes with a click of a button in the Azure Portal.
//     Azure Arc enables organizations to view, manage, and govern their on-premises Kubernetes clusters using the Azure Portal, command line tools, and APIs.
//  3. Easily configure Persistent Volumes using SMB and NFS shares for storing container data.
//     For more information, refer to the document here: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8-Cloud-Management-20210323.pdf
//     Or Demo: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8S-Cloud-Management-20210323.mp4
//     By using this feature, you agree to the preview legal terms. See the https://azure.microsoft.com/en-us/support/legal/preview-supplemental-terms/
type GetKubernetesRoleResultOutput struct{ *pulumi.OutputState }

func (GetKubernetesRoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesRoleResult)(nil)).Elem()
}

func (o GetKubernetesRoleResultOutput) ToGetKubernetesRoleResultOutput() GetKubernetesRoleResultOutput {
	return o
}

func (o GetKubernetesRoleResultOutput) ToGetKubernetesRoleResultOutputWithContext(ctx context.Context) GetKubernetesRoleResultOutput {
	return o
}

// Host OS supported by the Kubernetes role.
func (o GetKubernetesRoleResultOutput) HostPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesRoleResult) string { return v.HostPlatform }).(pulumi.StringOutput)
}

// Platform where the runtime is hosted.
func (o GetKubernetesRoleResultOutput) HostPlatformType() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesRoleResult) string { return v.HostPlatformType }).(pulumi.StringOutput)
}

// The path ID that uniquely identifies the object.
func (o GetKubernetesRoleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesRoleResult) string { return v.Id }).(pulumi.StringOutput)
}

// Role type.
// Expected value is 'Kubernetes'.
func (o GetKubernetesRoleResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesRoleResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Kubernetes cluster configuration
func (o GetKubernetesRoleResultOutput) KubernetesClusterInfo() KubernetesClusterInfoResponseOutput {
	return o.ApplyT(func(v GetKubernetesRoleResult) KubernetesClusterInfoResponse { return v.KubernetesClusterInfo }).(KubernetesClusterInfoResponseOutput)
}

// Kubernetes role resources
func (o GetKubernetesRoleResultOutput) KubernetesRoleResources() KubernetesRoleResourcesResponseOutput {
	return o.ApplyT(func(v GetKubernetesRoleResult) KubernetesRoleResourcesResponse { return v.KubernetesRoleResources }).(KubernetesRoleResourcesResponseOutput)
}

// The object name.
func (o GetKubernetesRoleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesRoleResult) string { return v.Name }).(pulumi.StringOutput)
}

// State of Kubernetes deployment
func (o GetKubernetesRoleResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesRoleResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Role status.
func (o GetKubernetesRoleResultOutput) RoleStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesRoleResult) string { return v.RoleStatus }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of Role
func (o GetKubernetesRoleResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v GetKubernetesRoleResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The hierarchical type of the object.
func (o GetKubernetesRoleResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesRoleResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKubernetesRoleResultOutput{})
}
