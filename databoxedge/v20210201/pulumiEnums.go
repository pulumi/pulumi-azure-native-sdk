// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210201

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The kind of the device.
type DataBoxEdgeDeviceKind string

const (
	DataBoxEdgeDeviceKindAzureDataBoxGateway    = DataBoxEdgeDeviceKind("AzureDataBoxGateway")
	DataBoxEdgeDeviceKindAzureStackEdge         = DataBoxEdgeDeviceKind("AzureStackEdge")
	DataBoxEdgeDeviceKindAzureStackHub          = DataBoxEdgeDeviceKind("AzureStackHub")
	DataBoxEdgeDeviceKindAzureModularDataCentre = DataBoxEdgeDeviceKind("AzureModularDataCentre")
)

func (DataBoxEdgeDeviceKind) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxEdgeDeviceKind)(nil)).Elem()
}

func (e DataBoxEdgeDeviceKind) ToDataBoxEdgeDeviceKindOutput() DataBoxEdgeDeviceKindOutput {
	return pulumi.ToOutput(e).(DataBoxEdgeDeviceKindOutput)
}

func (e DataBoxEdgeDeviceKind) ToDataBoxEdgeDeviceKindOutputWithContext(ctx context.Context) DataBoxEdgeDeviceKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataBoxEdgeDeviceKindOutput)
}

func (e DataBoxEdgeDeviceKind) ToDataBoxEdgeDeviceKindPtrOutput() DataBoxEdgeDeviceKindPtrOutput {
	return e.ToDataBoxEdgeDeviceKindPtrOutputWithContext(context.Background())
}

func (e DataBoxEdgeDeviceKind) ToDataBoxEdgeDeviceKindPtrOutputWithContext(ctx context.Context) DataBoxEdgeDeviceKindPtrOutput {
	return DataBoxEdgeDeviceKind(e).ToDataBoxEdgeDeviceKindOutputWithContext(ctx).ToDataBoxEdgeDeviceKindPtrOutputWithContext(ctx)
}

func (e DataBoxEdgeDeviceKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataBoxEdgeDeviceKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataBoxEdgeDeviceKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataBoxEdgeDeviceKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataBoxEdgeDeviceKindOutput struct{ *pulumi.OutputState }

func (DataBoxEdgeDeviceKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxEdgeDeviceKind)(nil)).Elem()
}

func (o DataBoxEdgeDeviceKindOutput) ToDataBoxEdgeDeviceKindOutput() DataBoxEdgeDeviceKindOutput {
	return o
}

func (o DataBoxEdgeDeviceKindOutput) ToDataBoxEdgeDeviceKindOutputWithContext(ctx context.Context) DataBoxEdgeDeviceKindOutput {
	return o
}

func (o DataBoxEdgeDeviceKindOutput) ToDataBoxEdgeDeviceKindPtrOutput() DataBoxEdgeDeviceKindPtrOutput {
	return o.ToDataBoxEdgeDeviceKindPtrOutputWithContext(context.Background())
}

func (o DataBoxEdgeDeviceKindOutput) ToDataBoxEdgeDeviceKindPtrOutputWithContext(ctx context.Context) DataBoxEdgeDeviceKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataBoxEdgeDeviceKind) *DataBoxEdgeDeviceKind {
		return &v
	}).(DataBoxEdgeDeviceKindPtrOutput)
}

func (o DataBoxEdgeDeviceKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataBoxEdgeDeviceKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataBoxEdgeDeviceKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataBoxEdgeDeviceKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataBoxEdgeDeviceKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataBoxEdgeDeviceKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataBoxEdgeDeviceKindPtrOutput struct{ *pulumi.OutputState }

func (DataBoxEdgeDeviceKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxEdgeDeviceKind)(nil)).Elem()
}

func (o DataBoxEdgeDeviceKindPtrOutput) ToDataBoxEdgeDeviceKindPtrOutput() DataBoxEdgeDeviceKindPtrOutput {
	return o
}

func (o DataBoxEdgeDeviceKindPtrOutput) ToDataBoxEdgeDeviceKindPtrOutputWithContext(ctx context.Context) DataBoxEdgeDeviceKindPtrOutput {
	return o
}

func (o DataBoxEdgeDeviceKindPtrOutput) Elem() DataBoxEdgeDeviceKindOutput {
	return o.ApplyT(func(v *DataBoxEdgeDeviceKind) DataBoxEdgeDeviceKind {
		if v != nil {
			return *v
		}
		var ret DataBoxEdgeDeviceKind
		return ret
	}).(DataBoxEdgeDeviceKindOutput)
}

func (o DataBoxEdgeDeviceKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataBoxEdgeDeviceKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataBoxEdgeDeviceKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataBoxEdgeDeviceKindInput is an input type that accepts values of the DataBoxEdgeDeviceKind enum
// A concrete instance of `DataBoxEdgeDeviceKindInput` can be one of the following:
//
//	DataBoxEdgeDeviceKindAzureDataBoxGateway
//	DataBoxEdgeDeviceKindAzureStackEdge
//	DataBoxEdgeDeviceKindAzureStackHub
//	DataBoxEdgeDeviceKindAzureModularDataCentre
type DataBoxEdgeDeviceKindInput interface {
	pulumi.Input

	ToDataBoxEdgeDeviceKindOutput() DataBoxEdgeDeviceKindOutput
	ToDataBoxEdgeDeviceKindOutputWithContext(context.Context) DataBoxEdgeDeviceKindOutput
}

var dataBoxEdgeDeviceKindPtrType = reflect.TypeOf((**DataBoxEdgeDeviceKind)(nil)).Elem()

type DataBoxEdgeDeviceKindPtrInput interface {
	pulumi.Input

	ToDataBoxEdgeDeviceKindPtrOutput() DataBoxEdgeDeviceKindPtrOutput
	ToDataBoxEdgeDeviceKindPtrOutputWithContext(context.Context) DataBoxEdgeDeviceKindPtrOutput
}

type dataBoxEdgeDeviceKindPtr string

func DataBoxEdgeDeviceKindPtr(v string) DataBoxEdgeDeviceKindPtrInput {
	return (*dataBoxEdgeDeviceKindPtr)(&v)
}

func (*dataBoxEdgeDeviceKindPtr) ElementType() reflect.Type {
	return dataBoxEdgeDeviceKindPtrType
}

func (in *dataBoxEdgeDeviceKindPtr) ToDataBoxEdgeDeviceKindPtrOutput() DataBoxEdgeDeviceKindPtrOutput {
	return pulumi.ToOutput(in).(DataBoxEdgeDeviceKindPtrOutput)
}

func (in *dataBoxEdgeDeviceKindPtr) ToDataBoxEdgeDeviceKindPtrOutputWithContext(ctx context.Context) DataBoxEdgeDeviceKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataBoxEdgeDeviceKindPtrOutput)
}

func (in *dataBoxEdgeDeviceKindPtr) ToOutput(ctx context.Context) pulumix.Output[*DataBoxEdgeDeviceKind] {
	return pulumix.Output[*DataBoxEdgeDeviceKind]{
		OutputState: in.ToDataBoxEdgeDeviceKindPtrOutputWithContext(ctx).OutputState,
	}
}

// The status of the Data Box Edge/Gateway device.
type DataBoxEdgeDeviceStatus string

const (
	DataBoxEdgeDeviceStatusReadyToSetup          = DataBoxEdgeDeviceStatus("ReadyToSetup")
	DataBoxEdgeDeviceStatusOnline                = DataBoxEdgeDeviceStatus("Online")
	DataBoxEdgeDeviceStatusOffline               = DataBoxEdgeDeviceStatus("Offline")
	DataBoxEdgeDeviceStatusNeedsAttention        = DataBoxEdgeDeviceStatus("NeedsAttention")
	DataBoxEdgeDeviceStatusDisconnected          = DataBoxEdgeDeviceStatus("Disconnected")
	DataBoxEdgeDeviceStatusPartiallyDisconnected = DataBoxEdgeDeviceStatus("PartiallyDisconnected")
	DataBoxEdgeDeviceStatusMaintenance           = DataBoxEdgeDeviceStatus("Maintenance")
)

func (DataBoxEdgeDeviceStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxEdgeDeviceStatus)(nil)).Elem()
}

func (e DataBoxEdgeDeviceStatus) ToDataBoxEdgeDeviceStatusOutput() DataBoxEdgeDeviceStatusOutput {
	return pulumi.ToOutput(e).(DataBoxEdgeDeviceStatusOutput)
}

func (e DataBoxEdgeDeviceStatus) ToDataBoxEdgeDeviceStatusOutputWithContext(ctx context.Context) DataBoxEdgeDeviceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataBoxEdgeDeviceStatusOutput)
}

func (e DataBoxEdgeDeviceStatus) ToDataBoxEdgeDeviceStatusPtrOutput() DataBoxEdgeDeviceStatusPtrOutput {
	return e.ToDataBoxEdgeDeviceStatusPtrOutputWithContext(context.Background())
}

func (e DataBoxEdgeDeviceStatus) ToDataBoxEdgeDeviceStatusPtrOutputWithContext(ctx context.Context) DataBoxEdgeDeviceStatusPtrOutput {
	return DataBoxEdgeDeviceStatus(e).ToDataBoxEdgeDeviceStatusOutputWithContext(ctx).ToDataBoxEdgeDeviceStatusPtrOutputWithContext(ctx)
}

func (e DataBoxEdgeDeviceStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataBoxEdgeDeviceStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataBoxEdgeDeviceStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataBoxEdgeDeviceStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataBoxEdgeDeviceStatusOutput struct{ *pulumi.OutputState }

func (DataBoxEdgeDeviceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataBoxEdgeDeviceStatus)(nil)).Elem()
}

func (o DataBoxEdgeDeviceStatusOutput) ToDataBoxEdgeDeviceStatusOutput() DataBoxEdgeDeviceStatusOutput {
	return o
}

func (o DataBoxEdgeDeviceStatusOutput) ToDataBoxEdgeDeviceStatusOutputWithContext(ctx context.Context) DataBoxEdgeDeviceStatusOutput {
	return o
}

func (o DataBoxEdgeDeviceStatusOutput) ToDataBoxEdgeDeviceStatusPtrOutput() DataBoxEdgeDeviceStatusPtrOutput {
	return o.ToDataBoxEdgeDeviceStatusPtrOutputWithContext(context.Background())
}

func (o DataBoxEdgeDeviceStatusOutput) ToDataBoxEdgeDeviceStatusPtrOutputWithContext(ctx context.Context) DataBoxEdgeDeviceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataBoxEdgeDeviceStatus) *DataBoxEdgeDeviceStatus {
		return &v
	}).(DataBoxEdgeDeviceStatusPtrOutput)
}

func (o DataBoxEdgeDeviceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataBoxEdgeDeviceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataBoxEdgeDeviceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataBoxEdgeDeviceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataBoxEdgeDeviceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataBoxEdgeDeviceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataBoxEdgeDeviceStatusPtrOutput struct{ *pulumi.OutputState }

func (DataBoxEdgeDeviceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataBoxEdgeDeviceStatus)(nil)).Elem()
}

func (o DataBoxEdgeDeviceStatusPtrOutput) ToDataBoxEdgeDeviceStatusPtrOutput() DataBoxEdgeDeviceStatusPtrOutput {
	return o
}

func (o DataBoxEdgeDeviceStatusPtrOutput) ToDataBoxEdgeDeviceStatusPtrOutputWithContext(ctx context.Context) DataBoxEdgeDeviceStatusPtrOutput {
	return o
}

func (o DataBoxEdgeDeviceStatusPtrOutput) Elem() DataBoxEdgeDeviceStatusOutput {
	return o.ApplyT(func(v *DataBoxEdgeDeviceStatus) DataBoxEdgeDeviceStatus {
		if v != nil {
			return *v
		}
		var ret DataBoxEdgeDeviceStatus
		return ret
	}).(DataBoxEdgeDeviceStatusOutput)
}

func (o DataBoxEdgeDeviceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataBoxEdgeDeviceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataBoxEdgeDeviceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataBoxEdgeDeviceStatusInput is an input type that accepts values of the DataBoxEdgeDeviceStatus enum
// A concrete instance of `DataBoxEdgeDeviceStatusInput` can be one of the following:
//
//	DataBoxEdgeDeviceStatusReadyToSetup
//	DataBoxEdgeDeviceStatusOnline
//	DataBoxEdgeDeviceStatusOffline
//	DataBoxEdgeDeviceStatusNeedsAttention
//	DataBoxEdgeDeviceStatusDisconnected
//	DataBoxEdgeDeviceStatusPartiallyDisconnected
//	DataBoxEdgeDeviceStatusMaintenance
type DataBoxEdgeDeviceStatusInput interface {
	pulumi.Input

	ToDataBoxEdgeDeviceStatusOutput() DataBoxEdgeDeviceStatusOutput
	ToDataBoxEdgeDeviceStatusOutputWithContext(context.Context) DataBoxEdgeDeviceStatusOutput
}

var dataBoxEdgeDeviceStatusPtrType = reflect.TypeOf((**DataBoxEdgeDeviceStatus)(nil)).Elem()

type DataBoxEdgeDeviceStatusPtrInput interface {
	pulumi.Input

	ToDataBoxEdgeDeviceStatusPtrOutput() DataBoxEdgeDeviceStatusPtrOutput
	ToDataBoxEdgeDeviceStatusPtrOutputWithContext(context.Context) DataBoxEdgeDeviceStatusPtrOutput
}

type dataBoxEdgeDeviceStatusPtr string

func DataBoxEdgeDeviceStatusPtr(v string) DataBoxEdgeDeviceStatusPtrInput {
	return (*dataBoxEdgeDeviceStatusPtr)(&v)
}

func (*dataBoxEdgeDeviceStatusPtr) ElementType() reflect.Type {
	return dataBoxEdgeDeviceStatusPtrType
}

func (in *dataBoxEdgeDeviceStatusPtr) ToDataBoxEdgeDeviceStatusPtrOutput() DataBoxEdgeDeviceStatusPtrOutput {
	return pulumi.ToOutput(in).(DataBoxEdgeDeviceStatusPtrOutput)
}

func (in *dataBoxEdgeDeviceStatusPtr) ToDataBoxEdgeDeviceStatusPtrOutputWithContext(ctx context.Context) DataBoxEdgeDeviceStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataBoxEdgeDeviceStatusPtrOutput)
}

func (in *dataBoxEdgeDeviceStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*DataBoxEdgeDeviceStatus] {
	return pulumix.Output[*DataBoxEdgeDeviceStatus]{
		OutputState: in.ToDataBoxEdgeDeviceStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// DataResidencyType enum
type DataResidencyType string

const (
	DataResidencyTypeGeoZoneReplication = DataResidencyType("GeoZoneReplication")
	DataResidencyTypeZoneReplication    = DataResidencyType("ZoneReplication")
)

func (DataResidencyType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataResidencyType)(nil)).Elem()
}

func (e DataResidencyType) ToDataResidencyTypeOutput() DataResidencyTypeOutput {
	return pulumi.ToOutput(e).(DataResidencyTypeOutput)
}

func (e DataResidencyType) ToDataResidencyTypeOutputWithContext(ctx context.Context) DataResidencyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataResidencyTypeOutput)
}

func (e DataResidencyType) ToDataResidencyTypePtrOutput() DataResidencyTypePtrOutput {
	return e.ToDataResidencyTypePtrOutputWithContext(context.Background())
}

func (e DataResidencyType) ToDataResidencyTypePtrOutputWithContext(ctx context.Context) DataResidencyTypePtrOutput {
	return DataResidencyType(e).ToDataResidencyTypeOutputWithContext(ctx).ToDataResidencyTypePtrOutputWithContext(ctx)
}

func (e DataResidencyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataResidencyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataResidencyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataResidencyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataResidencyTypeOutput struct{ *pulumi.OutputState }

func (DataResidencyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataResidencyType)(nil)).Elem()
}

func (o DataResidencyTypeOutput) ToDataResidencyTypeOutput() DataResidencyTypeOutput {
	return o
}

func (o DataResidencyTypeOutput) ToDataResidencyTypeOutputWithContext(ctx context.Context) DataResidencyTypeOutput {
	return o
}

func (o DataResidencyTypeOutput) ToDataResidencyTypePtrOutput() DataResidencyTypePtrOutput {
	return o.ToDataResidencyTypePtrOutputWithContext(context.Background())
}

func (o DataResidencyTypeOutput) ToDataResidencyTypePtrOutputWithContext(ctx context.Context) DataResidencyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataResidencyType) *DataResidencyType {
		return &v
	}).(DataResidencyTypePtrOutput)
}

func (o DataResidencyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataResidencyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataResidencyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataResidencyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataResidencyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataResidencyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataResidencyTypePtrOutput struct{ *pulumi.OutputState }

func (DataResidencyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataResidencyType)(nil)).Elem()
}

func (o DataResidencyTypePtrOutput) ToDataResidencyTypePtrOutput() DataResidencyTypePtrOutput {
	return o
}

func (o DataResidencyTypePtrOutput) ToDataResidencyTypePtrOutputWithContext(ctx context.Context) DataResidencyTypePtrOutput {
	return o
}

func (o DataResidencyTypePtrOutput) Elem() DataResidencyTypeOutput {
	return o.ApplyT(func(v *DataResidencyType) DataResidencyType {
		if v != nil {
			return *v
		}
		var ret DataResidencyType
		return ret
	}).(DataResidencyTypeOutput)
}

func (o DataResidencyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataResidencyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataResidencyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataResidencyTypeInput is an input type that accepts values of the DataResidencyType enum
// A concrete instance of `DataResidencyTypeInput` can be one of the following:
//
//	DataResidencyTypeGeoZoneReplication
//	DataResidencyTypeZoneReplication
type DataResidencyTypeInput interface {
	pulumi.Input

	ToDataResidencyTypeOutput() DataResidencyTypeOutput
	ToDataResidencyTypeOutputWithContext(context.Context) DataResidencyTypeOutput
}

var dataResidencyTypePtrType = reflect.TypeOf((**DataResidencyType)(nil)).Elem()

type DataResidencyTypePtrInput interface {
	pulumi.Input

	ToDataResidencyTypePtrOutput() DataResidencyTypePtrOutput
	ToDataResidencyTypePtrOutputWithContext(context.Context) DataResidencyTypePtrOutput
}

type dataResidencyTypePtr string

func DataResidencyTypePtr(v string) DataResidencyTypePtrInput {
	return (*dataResidencyTypePtr)(&v)
}

func (*dataResidencyTypePtr) ElementType() reflect.Type {
	return dataResidencyTypePtrType
}

func (in *dataResidencyTypePtr) ToDataResidencyTypePtrOutput() DataResidencyTypePtrOutput {
	return pulumi.ToOutput(in).(DataResidencyTypePtrOutput)
}

func (in *dataResidencyTypePtr) ToDataResidencyTypePtrOutputWithContext(ctx context.Context) DataResidencyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataResidencyTypePtrOutput)
}

func (in *dataResidencyTypePtr) ToOutput(ctx context.Context) pulumix.Output[*DataResidencyType] {
	return pulumix.Output[*DataResidencyType]{
		OutputState: in.ToDataResidencyTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Identity type
type MsiIdentityType string

const (
	MsiIdentityTypeNone           = MsiIdentityType("None")
	MsiIdentityTypeSystemAssigned = MsiIdentityType("SystemAssigned")
	MsiIdentityTypeUserAssigned   = MsiIdentityType("UserAssigned")
)

func (MsiIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*MsiIdentityType)(nil)).Elem()
}

func (e MsiIdentityType) ToMsiIdentityTypeOutput() MsiIdentityTypeOutput {
	return pulumi.ToOutput(e).(MsiIdentityTypeOutput)
}

func (e MsiIdentityType) ToMsiIdentityTypeOutputWithContext(ctx context.Context) MsiIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MsiIdentityTypeOutput)
}

func (e MsiIdentityType) ToMsiIdentityTypePtrOutput() MsiIdentityTypePtrOutput {
	return e.ToMsiIdentityTypePtrOutputWithContext(context.Background())
}

func (e MsiIdentityType) ToMsiIdentityTypePtrOutputWithContext(ctx context.Context) MsiIdentityTypePtrOutput {
	return MsiIdentityType(e).ToMsiIdentityTypeOutputWithContext(ctx).ToMsiIdentityTypePtrOutputWithContext(ctx)
}

func (e MsiIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MsiIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MsiIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MsiIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MsiIdentityTypeOutput struct{ *pulumi.OutputState }

func (MsiIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MsiIdentityType)(nil)).Elem()
}

func (o MsiIdentityTypeOutput) ToMsiIdentityTypeOutput() MsiIdentityTypeOutput {
	return o
}

func (o MsiIdentityTypeOutput) ToMsiIdentityTypeOutputWithContext(ctx context.Context) MsiIdentityTypeOutput {
	return o
}

func (o MsiIdentityTypeOutput) ToMsiIdentityTypePtrOutput() MsiIdentityTypePtrOutput {
	return o.ToMsiIdentityTypePtrOutputWithContext(context.Background())
}

func (o MsiIdentityTypeOutput) ToMsiIdentityTypePtrOutputWithContext(ctx context.Context) MsiIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MsiIdentityType) *MsiIdentityType {
		return &v
	}).(MsiIdentityTypePtrOutput)
}

func (o MsiIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MsiIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MsiIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MsiIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MsiIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MsiIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MsiIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (MsiIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MsiIdentityType)(nil)).Elem()
}

func (o MsiIdentityTypePtrOutput) ToMsiIdentityTypePtrOutput() MsiIdentityTypePtrOutput {
	return o
}

func (o MsiIdentityTypePtrOutput) ToMsiIdentityTypePtrOutputWithContext(ctx context.Context) MsiIdentityTypePtrOutput {
	return o
}

func (o MsiIdentityTypePtrOutput) Elem() MsiIdentityTypeOutput {
	return o.ApplyT(func(v *MsiIdentityType) MsiIdentityType {
		if v != nil {
			return *v
		}
		var ret MsiIdentityType
		return ret
	}).(MsiIdentityTypeOutput)
}

func (o MsiIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MsiIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MsiIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MsiIdentityTypeInput is an input type that accepts values of the MsiIdentityType enum
// A concrete instance of `MsiIdentityTypeInput` can be one of the following:
//
//	MsiIdentityTypeNone
//	MsiIdentityTypeSystemAssigned
//	MsiIdentityTypeUserAssigned
type MsiIdentityTypeInput interface {
	pulumi.Input

	ToMsiIdentityTypeOutput() MsiIdentityTypeOutput
	ToMsiIdentityTypeOutputWithContext(context.Context) MsiIdentityTypeOutput
}

var msiIdentityTypePtrType = reflect.TypeOf((**MsiIdentityType)(nil)).Elem()

type MsiIdentityTypePtrInput interface {
	pulumi.Input

	ToMsiIdentityTypePtrOutput() MsiIdentityTypePtrOutput
	ToMsiIdentityTypePtrOutputWithContext(context.Context) MsiIdentityTypePtrOutput
}

type msiIdentityTypePtr string

func MsiIdentityTypePtr(v string) MsiIdentityTypePtrInput {
	return (*msiIdentityTypePtr)(&v)
}

func (*msiIdentityTypePtr) ElementType() reflect.Type {
	return msiIdentityTypePtrType
}

func (in *msiIdentityTypePtr) ToMsiIdentityTypePtrOutput() MsiIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(MsiIdentityTypePtrOutput)
}

func (in *msiIdentityTypePtr) ToMsiIdentityTypePtrOutputWithContext(ctx context.Context) MsiIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MsiIdentityTypePtrOutput)
}

func (in *msiIdentityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*MsiIdentityType] {
	return pulumix.Output[*MsiIdentityType]{
		OutputState: in.ToMsiIdentityTypePtrOutputWithContext(ctx).OutputState,
	}
}

// SKU name.
type SkuName string

const (
	SkuNameGateway               = SkuName("Gateway")
	SkuNameEdge                  = SkuName("Edge")
	SkuName_TEA_1Node            = SkuName("TEA_1Node")
	SkuName_TEA_1Node_UPS        = SkuName("TEA_1Node_UPS")
	SkuName_TEA_1Node_Heater     = SkuName("TEA_1Node_Heater")
	SkuName_TEA_1Node_UPS_Heater = SkuName("TEA_1Node_UPS_Heater")
	SkuName_TEA_4Node_Heater     = SkuName("TEA_4Node_Heater")
	SkuName_TEA_4Node_UPS_Heater = SkuName("TEA_4Node_UPS_Heater")
	SkuNameTMA                   = SkuName("TMA")
	SkuNameTDC                   = SkuName("TDC")
	SkuName_TCA_Small            = SkuName("TCA_Small")
	SkuNameGPU                   = SkuName("GPU")
	SkuName_TCA_Large            = SkuName("TCA_Large")
	SkuName_EdgeP_Base           = SkuName("EdgeP_Base")
	SkuName_EdgeP_High           = SkuName("EdgeP_High")
	SkuName_EdgePR_Base          = SkuName("EdgePR_Base")
	SkuName_EdgePR_Base_UPS      = SkuName("EdgePR_Base_UPS")
	SkuName_EP2_64_1VPU_W        = SkuName("EP2_64_1VPU_W")
	SkuName_EP2_128_1T4_Mx1_W    = SkuName("EP2_128_1T4_Mx1_W")
	SkuName_EP2_256_2T4_W        = SkuName("EP2_256_2T4_W")
	SkuName_EdgeMR_Mini          = SkuName("EdgeMR_Mini")
	SkuName_RCA_Small            = SkuName("RCA_Small")
	SkuName_RCA_Large            = SkuName("RCA_Large")
	SkuNameRDC                   = SkuName("RDC")
	SkuNameManagement            = SkuName("Management")
)

func (SkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (e SkuName) ToSkuNameOutput() SkuNameOutput {
	return pulumi.ToOutput(e).(SkuNameOutput)
}

func (e SkuName) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuNameOutput)
}

func (e SkuName) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return e.ToSkuNamePtrOutputWithContext(context.Background())
}

func (e SkuName) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return SkuName(e).ToSkuNameOutputWithContext(ctx).ToSkuNamePtrOutputWithContext(ctx)
}

func (e SkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuNameOutput struct{ *pulumi.OutputState }

func (SkuNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuName)(nil)).Elem()
}

func (o SkuNameOutput) ToSkuNameOutput() SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNameOutputWithContext(ctx context.Context) SkuNameOutput {
	return o
}

func (o SkuNameOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o.ToSkuNamePtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuName) *SkuName {
		return &v
	}).(SkuNamePtrOutput)
}

func (o SkuNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuNamePtrOutput struct{ *pulumi.OutputState }

func (SkuNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuName)(nil)).Elem()
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return o
}

func (o SkuNamePtrOutput) Elem() SkuNameOutput {
	return o.ApplyT(func(v *SkuName) SkuName {
		if v != nil {
			return *v
		}
		var ret SkuName
		return ret
	}).(SkuNameOutput)
}

func (o SkuNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuNameInput is an input type that accepts values of the SkuName enum
// A concrete instance of `SkuNameInput` can be one of the following:
//
//	SkuNameGateway
//	SkuNameEdge
//	SkuName_TEA_1Node
//	SkuName_TEA_1Node_UPS
//	SkuName_TEA_1Node_Heater
//	SkuName_TEA_1Node_UPS_Heater
//	SkuName_TEA_4Node_Heater
//	SkuName_TEA_4Node_UPS_Heater
//	SkuNameTMA
//	SkuNameTDC
//	SkuName_TCA_Small
//	SkuNameGPU
//	SkuName_TCA_Large
//	SkuName_EdgeP_Base
//	SkuName_EdgeP_High
//	SkuName_EdgePR_Base
//	SkuName_EdgePR_Base_UPS
//	SkuName_EP2_64_1VPU_W
//	SkuName_EP2_128_1T4_Mx1_W
//	SkuName_EP2_256_2T4_W
//	SkuName_EdgeMR_Mini
//	SkuName_RCA_Small
//	SkuName_RCA_Large
//	SkuNameRDC
//	SkuNameManagement
type SkuNameInput interface {
	pulumi.Input

	ToSkuNameOutput() SkuNameOutput
	ToSkuNameOutputWithContext(context.Context) SkuNameOutput
}

var skuNamePtrType = reflect.TypeOf((**SkuName)(nil)).Elem()

type SkuNamePtrInput interface {
	pulumi.Input

	ToSkuNamePtrOutput() SkuNamePtrOutput
	ToSkuNamePtrOutputWithContext(context.Context) SkuNamePtrOutput
}

type skuNamePtr string

func SkuNamePtr(v string) SkuNamePtrInput {
	return (*skuNamePtr)(&v)
}

func (*skuNamePtr) ElementType() reflect.Type {
	return skuNamePtrType
}

func (in *skuNamePtr) ToSkuNamePtrOutput() SkuNamePtrOutput {
	return pulumi.ToOutput(in).(SkuNamePtrOutput)
}

func (in *skuNamePtr) ToSkuNamePtrOutputWithContext(ctx context.Context) SkuNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuNamePtrOutput)
}

func (in *skuNamePtr) ToOutput(ctx context.Context) pulumix.Output[*SkuName] {
	return pulumix.Output[*SkuName]{
		OutputState: in.ToSkuNamePtrOutputWithContext(ctx).OutputState,
	}
}

// The SKU tier. This is based on the SKU name.
type SkuTier string

const (
	SkuTierStandard = SkuTier("Standard")
)

func (SkuTier) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (e SkuTier) ToSkuTierOutput() SkuTierOutput {
	return pulumi.ToOutput(e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuTierOutput)
}

func (e SkuTier) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return e.ToSkuTierPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return SkuTier(e).ToSkuTierOutputWithContext(ctx).ToSkuTierPtrOutputWithContext(ctx)
}

func (e SkuTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuTierOutput struct{ *pulumi.OutputState }

func (SkuTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuTier)(nil)).Elem()
}

func (o SkuTierOutput) ToSkuTierOutput() SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierOutputWithContext(ctx context.Context) SkuTierOutput {
	return o
}

func (o SkuTierOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o.ToSkuTierPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuTier) *SkuTier {
		return &v
	}).(SkuTierPtrOutput)
}

func (o SkuTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuTierPtrOutput struct{ *pulumi.OutputState }

func (SkuTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuTier)(nil)).Elem()
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return o
}

func (o SkuTierPtrOutput) Elem() SkuTierOutput {
	return o.ApplyT(func(v *SkuTier) SkuTier {
		if v != nil {
			return *v
		}
		var ret SkuTier
		return ret
	}).(SkuTierOutput)
}

func (o SkuTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuTierInput is an input type that accepts values of the SkuTier enum
// A concrete instance of `SkuTierInput` can be one of the following:
//
//	SkuTierStandard
type SkuTierInput interface {
	pulumi.Input

	ToSkuTierOutput() SkuTierOutput
	ToSkuTierOutputWithContext(context.Context) SkuTierOutput
}

var skuTierPtrType = reflect.TypeOf((**SkuTier)(nil)).Elem()

type SkuTierPtrInput interface {
	pulumi.Input

	ToSkuTierPtrOutput() SkuTierPtrOutput
	ToSkuTierPtrOutputWithContext(context.Context) SkuTierPtrOutput
}

type skuTierPtr string

func SkuTierPtr(v string) SkuTierPtrInput {
	return (*skuTierPtr)(&v)
}

func (*skuTierPtr) ElementType() reflect.Type {
	return skuTierPtrType
}

func (in *skuTierPtr) ToSkuTierPtrOutput() SkuTierPtrOutput {
	return pulumi.ToOutput(in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToSkuTierPtrOutputWithContext(ctx context.Context) SkuTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuTierPtrOutput)
}

func (in *skuTierPtr) ToOutput(ctx context.Context) pulumix.Output[*SkuTier] {
	return pulumix.Output[*SkuTier]{
		OutputState: in.ToSkuTierPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(DataBoxEdgeDeviceKindOutput{})
	pulumi.RegisterOutputType(DataBoxEdgeDeviceKindPtrOutput{})
	pulumi.RegisterOutputType(DataBoxEdgeDeviceStatusOutput{})
	pulumi.RegisterOutputType(DataBoxEdgeDeviceStatusPtrOutput{})
	pulumi.RegisterOutputType(DataResidencyTypeOutput{})
	pulumi.RegisterOutputType(DataResidencyTypePtrOutput{})
	pulumi.RegisterOutputType(MsiIdentityTypeOutput{})
	pulumi.RegisterOutputType(MsiIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(SkuNameOutput{})
	pulumi.RegisterOutputType(SkuNamePtrOutput{})
	pulumi.RegisterOutputType(SkuTierOutput{})
	pulumi.RegisterOutputType(SkuTierPtrOutput{})
}
