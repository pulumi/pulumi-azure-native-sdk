// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Parameters to reconcile to the AzureBlob source kind type.
type AzureBlobDefinition struct {
	// The account key (shared key) to access the storage account
	AccountKey *string `pulumi:"accountKey"`
	// The Azure Blob container name to sync from the url endpoint for the flux configuration.
	ContainerName *string `pulumi:"containerName"`
	// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
	LocalAuthRef *string `pulumi:"localAuthRef"`
	// Parameters to authenticate using a Managed Identity.
	ManagedIdentity *ManagedIdentityDefinition `pulumi:"managedIdentity"`
	// The Shared Access token to access the storage container
	SasToken *string `pulumi:"sasToken"`
	// Parameters to authenticate using Service Principal.
	ServicePrincipal *ServicePrincipalDefinition `pulumi:"servicePrincipal"`
	// The interval at which to re-reconcile the cluster Azure Blob source with the remote.
	SyncIntervalInSeconds *float64 `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
	TimeoutInSeconds *float64 `pulumi:"timeoutInSeconds"`
	// The URL to sync for the flux configuration Azure Blob storage account.
	Url *string `pulumi:"url"`
}

// Defaults sets the appropriate defaults for AzureBlobDefinition
func (val *AzureBlobDefinition) Defaults() *AzureBlobDefinition {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ServicePrincipal = tmp.ServicePrincipal.Defaults()

	if tmp.SyncIntervalInSeconds == nil {
		syncIntervalInSeconds_ := 600.0
		tmp.SyncIntervalInSeconds = &syncIntervalInSeconds_
	}
	if tmp.TimeoutInSeconds == nil {
		timeoutInSeconds_ := 600.0
		tmp.TimeoutInSeconds = &timeoutInSeconds_
	}
	return &tmp
}

// AzureBlobDefinitionInput is an input type that accepts AzureBlobDefinitionArgs and AzureBlobDefinitionOutput values.
// You can construct a concrete instance of `AzureBlobDefinitionInput` via:
//
//	AzureBlobDefinitionArgs{...}
type AzureBlobDefinitionInput interface {
	pulumi.Input

	ToAzureBlobDefinitionOutput() AzureBlobDefinitionOutput
	ToAzureBlobDefinitionOutputWithContext(context.Context) AzureBlobDefinitionOutput
}

// Parameters to reconcile to the AzureBlob source kind type.
type AzureBlobDefinitionArgs struct {
	// The account key (shared key) to access the storage account
	AccountKey pulumi.StringPtrInput `pulumi:"accountKey"`
	// The Azure Blob container name to sync from the url endpoint for the flux configuration.
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
	LocalAuthRef pulumi.StringPtrInput `pulumi:"localAuthRef"`
	// Parameters to authenticate using a Managed Identity.
	ManagedIdentity ManagedIdentityDefinitionPtrInput `pulumi:"managedIdentity"`
	// The Shared Access token to access the storage container
	SasToken pulumi.StringPtrInput `pulumi:"sasToken"`
	// Parameters to authenticate using Service Principal.
	ServicePrincipal ServicePrincipalDefinitionPtrInput `pulumi:"servicePrincipal"`
	// The interval at which to re-reconcile the cluster Azure Blob source with the remote.
	SyncIntervalInSeconds pulumi.Float64PtrInput `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
	TimeoutInSeconds pulumi.Float64PtrInput `pulumi:"timeoutInSeconds"`
	// The URL to sync for the flux configuration Azure Blob storage account.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

// Defaults sets the appropriate defaults for AzureBlobDefinitionArgs
func (val *AzureBlobDefinitionArgs) Defaults() *AzureBlobDefinitionArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.SyncIntervalInSeconds == nil {
		tmp.SyncIntervalInSeconds = pulumi.Float64Ptr(600.0)
	}
	if tmp.TimeoutInSeconds == nil {
		tmp.TimeoutInSeconds = pulumi.Float64Ptr(600.0)
	}
	return &tmp
}
func (AzureBlobDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobDefinition)(nil)).Elem()
}

func (i AzureBlobDefinitionArgs) ToAzureBlobDefinitionOutput() AzureBlobDefinitionOutput {
	return i.ToAzureBlobDefinitionOutputWithContext(context.Background())
}

func (i AzureBlobDefinitionArgs) ToAzureBlobDefinitionOutputWithContext(ctx context.Context) AzureBlobDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobDefinitionOutput)
}

func (i AzureBlobDefinitionArgs) ToAzureBlobDefinitionPtrOutput() AzureBlobDefinitionPtrOutput {
	return i.ToAzureBlobDefinitionPtrOutputWithContext(context.Background())
}

func (i AzureBlobDefinitionArgs) ToAzureBlobDefinitionPtrOutputWithContext(ctx context.Context) AzureBlobDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobDefinitionOutput).ToAzureBlobDefinitionPtrOutputWithContext(ctx)
}

// AzureBlobDefinitionPtrInput is an input type that accepts AzureBlobDefinitionArgs, AzureBlobDefinitionPtr and AzureBlobDefinitionPtrOutput values.
// You can construct a concrete instance of `AzureBlobDefinitionPtrInput` via:
//
//	        AzureBlobDefinitionArgs{...}
//
//	or:
//
//	        nil
type AzureBlobDefinitionPtrInput interface {
	pulumi.Input

	ToAzureBlobDefinitionPtrOutput() AzureBlobDefinitionPtrOutput
	ToAzureBlobDefinitionPtrOutputWithContext(context.Context) AzureBlobDefinitionPtrOutput
}

type azureBlobDefinitionPtrType AzureBlobDefinitionArgs

func AzureBlobDefinitionPtr(v *AzureBlobDefinitionArgs) AzureBlobDefinitionPtrInput {
	return (*azureBlobDefinitionPtrType)(v)
}

func (*azureBlobDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobDefinition)(nil)).Elem()
}

func (i *azureBlobDefinitionPtrType) ToAzureBlobDefinitionPtrOutput() AzureBlobDefinitionPtrOutput {
	return i.ToAzureBlobDefinitionPtrOutputWithContext(context.Background())
}

func (i *azureBlobDefinitionPtrType) ToAzureBlobDefinitionPtrOutputWithContext(ctx context.Context) AzureBlobDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobDefinitionPtrOutput)
}

// Parameters to reconcile to the AzureBlob source kind type.
type AzureBlobDefinitionOutput struct{ *pulumi.OutputState }

func (AzureBlobDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobDefinition)(nil)).Elem()
}

func (o AzureBlobDefinitionOutput) ToAzureBlobDefinitionOutput() AzureBlobDefinitionOutput {
	return o
}

func (o AzureBlobDefinitionOutput) ToAzureBlobDefinitionOutputWithContext(ctx context.Context) AzureBlobDefinitionOutput {
	return o
}

func (o AzureBlobDefinitionOutput) ToAzureBlobDefinitionPtrOutput() AzureBlobDefinitionPtrOutput {
	return o.ToAzureBlobDefinitionPtrOutputWithContext(context.Background())
}

func (o AzureBlobDefinitionOutput) ToAzureBlobDefinitionPtrOutputWithContext(ctx context.Context) AzureBlobDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureBlobDefinition) *AzureBlobDefinition {
		return &v
	}).(AzureBlobDefinitionPtrOutput)
}

// The account key (shared key) to access the storage account
func (o AzureBlobDefinitionOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobDefinition) *string { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// The Azure Blob container name to sync from the url endpoint for the flux configuration.
func (o AzureBlobDefinitionOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobDefinition) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o AzureBlobDefinitionOutput) LocalAuthRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobDefinition) *string { return v.LocalAuthRef }).(pulumi.StringPtrOutput)
}

// Parameters to authenticate using a Managed Identity.
func (o AzureBlobDefinitionOutput) ManagedIdentity() ManagedIdentityDefinitionPtrOutput {
	return o.ApplyT(func(v AzureBlobDefinition) *ManagedIdentityDefinition { return v.ManagedIdentity }).(ManagedIdentityDefinitionPtrOutput)
}

// The Shared Access token to access the storage container
func (o AzureBlobDefinitionOutput) SasToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobDefinition) *string { return v.SasToken }).(pulumi.StringPtrOutput)
}

// Parameters to authenticate using Service Principal.
func (o AzureBlobDefinitionOutput) ServicePrincipal() ServicePrincipalDefinitionPtrOutput {
	return o.ApplyT(func(v AzureBlobDefinition) *ServicePrincipalDefinition { return v.ServicePrincipal }).(ServicePrincipalDefinitionPtrOutput)
}

// The interval at which to re-reconcile the cluster Azure Blob source with the remote.
func (o AzureBlobDefinitionOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureBlobDefinition) *float64 { return v.SyncIntervalInSeconds }).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
func (o AzureBlobDefinitionOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureBlobDefinition) *float64 { return v.TimeoutInSeconds }).(pulumi.Float64PtrOutput)
}

// The URL to sync for the flux configuration Azure Blob storage account.
func (o AzureBlobDefinitionOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobDefinition) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type AzureBlobDefinitionPtrOutput struct{ *pulumi.OutputState }

func (AzureBlobDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobDefinition)(nil)).Elem()
}

func (o AzureBlobDefinitionPtrOutput) ToAzureBlobDefinitionPtrOutput() AzureBlobDefinitionPtrOutput {
	return o
}

func (o AzureBlobDefinitionPtrOutput) ToAzureBlobDefinitionPtrOutputWithContext(ctx context.Context) AzureBlobDefinitionPtrOutput {
	return o
}

func (o AzureBlobDefinitionPtrOutput) Elem() AzureBlobDefinitionOutput {
	return o.ApplyT(func(v *AzureBlobDefinition) AzureBlobDefinition {
		if v != nil {
			return *v
		}
		var ret AzureBlobDefinition
		return ret
	}).(AzureBlobDefinitionOutput)
}

// The account key (shared key) to access the storage account
func (o AzureBlobDefinitionPtrOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinition) *string {
		if v == nil {
			return nil
		}
		return v.AccountKey
	}).(pulumi.StringPtrOutput)
}

// The Azure Blob container name to sync from the url endpoint for the flux configuration.
func (o AzureBlobDefinitionPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o AzureBlobDefinitionPtrOutput) LocalAuthRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinition) *string {
		if v == nil {
			return nil
		}
		return v.LocalAuthRef
	}).(pulumi.StringPtrOutput)
}

// Parameters to authenticate using a Managed Identity.
func (o AzureBlobDefinitionPtrOutput) ManagedIdentity() ManagedIdentityDefinitionPtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinition) *ManagedIdentityDefinition {
		if v == nil {
			return nil
		}
		return v.ManagedIdentity
	}).(ManagedIdentityDefinitionPtrOutput)
}

// The Shared Access token to access the storage container
func (o AzureBlobDefinitionPtrOutput) SasToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinition) *string {
		if v == nil {
			return nil
		}
		return v.SasToken
	}).(pulumi.StringPtrOutput)
}

// Parameters to authenticate using Service Principal.
func (o AzureBlobDefinitionPtrOutput) ServicePrincipal() ServicePrincipalDefinitionPtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinition) *ServicePrincipalDefinition {
		if v == nil {
			return nil
		}
		return v.ServicePrincipal
	}).(ServicePrincipalDefinitionPtrOutput)
}

// The interval at which to re-reconcile the cluster Azure Blob source with the remote.
func (o AzureBlobDefinitionPtrOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinition) *float64 {
		if v == nil {
			return nil
		}
		return v.SyncIntervalInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
func (o AzureBlobDefinitionPtrOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinition) *float64 {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The URL to sync for the flux configuration Azure Blob storage account.
func (o AzureBlobDefinitionPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Parameters to reconcile to the AzureBlob source kind type.
type AzureBlobDefinitionResponse struct {
	// The account key (shared key) to access the storage account
	AccountKey *string `pulumi:"accountKey"`
	// The Azure Blob container name to sync from the url endpoint for the flux configuration.
	ContainerName *string `pulumi:"containerName"`
	// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
	LocalAuthRef *string `pulumi:"localAuthRef"`
	// Parameters to authenticate using a Managed Identity.
	ManagedIdentity *ManagedIdentityDefinitionResponse `pulumi:"managedIdentity"`
	// The Shared Access token to access the storage container
	SasToken *string `pulumi:"sasToken"`
	// Parameters to authenticate using Service Principal.
	ServicePrincipal *ServicePrincipalDefinitionResponse `pulumi:"servicePrincipal"`
	// The interval at which to re-reconcile the cluster Azure Blob source with the remote.
	SyncIntervalInSeconds *float64 `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
	TimeoutInSeconds *float64 `pulumi:"timeoutInSeconds"`
	// The URL to sync for the flux configuration Azure Blob storage account.
	Url *string `pulumi:"url"`
}

// Defaults sets the appropriate defaults for AzureBlobDefinitionResponse
func (val *AzureBlobDefinitionResponse) Defaults() *AzureBlobDefinitionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ServicePrincipal = tmp.ServicePrincipal.Defaults()

	if tmp.SyncIntervalInSeconds == nil {
		syncIntervalInSeconds_ := 600.0
		tmp.SyncIntervalInSeconds = &syncIntervalInSeconds_
	}
	if tmp.TimeoutInSeconds == nil {
		timeoutInSeconds_ := 600.0
		tmp.TimeoutInSeconds = &timeoutInSeconds_
	}
	return &tmp
}

// Parameters to reconcile to the AzureBlob source kind type.
type AzureBlobDefinitionResponseOutput struct{ *pulumi.OutputState }

func (AzureBlobDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobDefinitionResponse)(nil)).Elem()
}

func (o AzureBlobDefinitionResponseOutput) ToAzureBlobDefinitionResponseOutput() AzureBlobDefinitionResponseOutput {
	return o
}

func (o AzureBlobDefinitionResponseOutput) ToAzureBlobDefinitionResponseOutputWithContext(ctx context.Context) AzureBlobDefinitionResponseOutput {
	return o
}

// The account key (shared key) to access the storage account
func (o AzureBlobDefinitionResponseOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobDefinitionResponse) *string { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// The Azure Blob container name to sync from the url endpoint for the flux configuration.
func (o AzureBlobDefinitionResponseOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobDefinitionResponse) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o AzureBlobDefinitionResponseOutput) LocalAuthRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobDefinitionResponse) *string { return v.LocalAuthRef }).(pulumi.StringPtrOutput)
}

// Parameters to authenticate using a Managed Identity.
func (o AzureBlobDefinitionResponseOutput) ManagedIdentity() ManagedIdentityDefinitionResponsePtrOutput {
	return o.ApplyT(func(v AzureBlobDefinitionResponse) *ManagedIdentityDefinitionResponse { return v.ManagedIdentity }).(ManagedIdentityDefinitionResponsePtrOutput)
}

// The Shared Access token to access the storage container
func (o AzureBlobDefinitionResponseOutput) SasToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobDefinitionResponse) *string { return v.SasToken }).(pulumi.StringPtrOutput)
}

// Parameters to authenticate using Service Principal.
func (o AzureBlobDefinitionResponseOutput) ServicePrincipal() ServicePrincipalDefinitionResponsePtrOutput {
	return o.ApplyT(func(v AzureBlobDefinitionResponse) *ServicePrincipalDefinitionResponse { return v.ServicePrincipal }).(ServicePrincipalDefinitionResponsePtrOutput)
}

// The interval at which to re-reconcile the cluster Azure Blob source with the remote.
func (o AzureBlobDefinitionResponseOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureBlobDefinitionResponse) *float64 { return v.SyncIntervalInSeconds }).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
func (o AzureBlobDefinitionResponseOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureBlobDefinitionResponse) *float64 { return v.TimeoutInSeconds }).(pulumi.Float64PtrOutput)
}

// The URL to sync for the flux configuration Azure Blob storage account.
func (o AzureBlobDefinitionResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobDefinitionResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type AzureBlobDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureBlobDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobDefinitionResponse)(nil)).Elem()
}

func (o AzureBlobDefinitionResponsePtrOutput) ToAzureBlobDefinitionResponsePtrOutput() AzureBlobDefinitionResponsePtrOutput {
	return o
}

func (o AzureBlobDefinitionResponsePtrOutput) ToAzureBlobDefinitionResponsePtrOutputWithContext(ctx context.Context) AzureBlobDefinitionResponsePtrOutput {
	return o
}

func (o AzureBlobDefinitionResponsePtrOutput) Elem() AzureBlobDefinitionResponseOutput {
	return o.ApplyT(func(v *AzureBlobDefinitionResponse) AzureBlobDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret AzureBlobDefinitionResponse
		return ret
	}).(AzureBlobDefinitionResponseOutput)
}

// The account key (shared key) to access the storage account
func (o AzureBlobDefinitionResponsePtrOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.AccountKey
	}).(pulumi.StringPtrOutput)
}

// The Azure Blob container name to sync from the url endpoint for the flux configuration.
func (o AzureBlobDefinitionResponsePtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o AzureBlobDefinitionResponsePtrOutput) LocalAuthRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.LocalAuthRef
	}).(pulumi.StringPtrOutput)
}

// Parameters to authenticate using a Managed Identity.
func (o AzureBlobDefinitionResponsePtrOutput) ManagedIdentity() ManagedIdentityDefinitionResponsePtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinitionResponse) *ManagedIdentityDefinitionResponse {
		if v == nil {
			return nil
		}
		return v.ManagedIdentity
	}).(ManagedIdentityDefinitionResponsePtrOutput)
}

// The Shared Access token to access the storage container
func (o AzureBlobDefinitionResponsePtrOutput) SasToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.SasToken
	}).(pulumi.StringPtrOutput)
}

// Parameters to authenticate using Service Principal.
func (o AzureBlobDefinitionResponsePtrOutput) ServicePrincipal() ServicePrincipalDefinitionResponsePtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinitionResponse) *ServicePrincipalDefinitionResponse {
		if v == nil {
			return nil
		}
		return v.ServicePrincipal
	}).(ServicePrincipalDefinitionResponsePtrOutput)
}

// The interval at which to re-reconcile the cluster Azure Blob source with the remote.
func (o AzureBlobDefinitionResponsePtrOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinitionResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.SyncIntervalInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
func (o AzureBlobDefinitionResponsePtrOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinitionResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The URL to sync for the flux configuration Azure Blob storage account.
func (o AzureBlobDefinitionResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Parameters to reconcile to the Bucket source kind type.
type BucketDefinition struct {
	// Plaintext access key used to securely access the S3 bucket
	AccessKey *string `pulumi:"accessKey"`
	// The bucket name to sync from the url endpoint for the flux configuration.
	BucketName *string `pulumi:"bucketName"`
	// Specify whether to use insecure communication when puling data from the S3 bucket.
	Insecure *bool `pulumi:"insecure"`
	// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
	LocalAuthRef *string `pulumi:"localAuthRef"`
	// The interval at which to re-reconcile the cluster bucket source with the remote.
	SyncIntervalInSeconds *float64 `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the cluster bucket source with the remote.
	TimeoutInSeconds *float64 `pulumi:"timeoutInSeconds"`
	// The URL to sync for the flux configuration S3 bucket.
	Url *string `pulumi:"url"`
}

// Defaults sets the appropriate defaults for BucketDefinition
func (val *BucketDefinition) Defaults() *BucketDefinition {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Insecure == nil {
		insecure_ := true
		tmp.Insecure = &insecure_
	}
	if tmp.SyncIntervalInSeconds == nil {
		syncIntervalInSeconds_ := 600.0
		tmp.SyncIntervalInSeconds = &syncIntervalInSeconds_
	}
	if tmp.TimeoutInSeconds == nil {
		timeoutInSeconds_ := 600.0
		tmp.TimeoutInSeconds = &timeoutInSeconds_
	}
	return &tmp
}

// BucketDefinitionInput is an input type that accepts BucketDefinitionArgs and BucketDefinitionOutput values.
// You can construct a concrete instance of `BucketDefinitionInput` via:
//
//	BucketDefinitionArgs{...}
type BucketDefinitionInput interface {
	pulumi.Input

	ToBucketDefinitionOutput() BucketDefinitionOutput
	ToBucketDefinitionOutputWithContext(context.Context) BucketDefinitionOutput
}

// Parameters to reconcile to the Bucket source kind type.
type BucketDefinitionArgs struct {
	// Plaintext access key used to securely access the S3 bucket
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// The bucket name to sync from the url endpoint for the flux configuration.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Specify whether to use insecure communication when puling data from the S3 bucket.
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
	LocalAuthRef pulumi.StringPtrInput `pulumi:"localAuthRef"`
	// The interval at which to re-reconcile the cluster bucket source with the remote.
	SyncIntervalInSeconds pulumi.Float64PtrInput `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the cluster bucket source with the remote.
	TimeoutInSeconds pulumi.Float64PtrInput `pulumi:"timeoutInSeconds"`
	// The URL to sync for the flux configuration S3 bucket.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

// Defaults sets the appropriate defaults for BucketDefinitionArgs
func (val *BucketDefinitionArgs) Defaults() *BucketDefinitionArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Insecure == nil {
		tmp.Insecure = pulumi.BoolPtr(true)
	}
	if tmp.SyncIntervalInSeconds == nil {
		tmp.SyncIntervalInSeconds = pulumi.Float64Ptr(600.0)
	}
	if tmp.TimeoutInSeconds == nil {
		tmp.TimeoutInSeconds = pulumi.Float64Ptr(600.0)
	}
	return &tmp
}
func (BucketDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketDefinition)(nil)).Elem()
}

func (i BucketDefinitionArgs) ToBucketDefinitionOutput() BucketDefinitionOutput {
	return i.ToBucketDefinitionOutputWithContext(context.Background())
}

func (i BucketDefinitionArgs) ToBucketDefinitionOutputWithContext(ctx context.Context) BucketDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketDefinitionOutput)
}

func (i BucketDefinitionArgs) ToBucketDefinitionPtrOutput() BucketDefinitionPtrOutput {
	return i.ToBucketDefinitionPtrOutputWithContext(context.Background())
}

func (i BucketDefinitionArgs) ToBucketDefinitionPtrOutputWithContext(ctx context.Context) BucketDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketDefinitionOutput).ToBucketDefinitionPtrOutputWithContext(ctx)
}

// BucketDefinitionPtrInput is an input type that accepts BucketDefinitionArgs, BucketDefinitionPtr and BucketDefinitionPtrOutput values.
// You can construct a concrete instance of `BucketDefinitionPtrInput` via:
//
//	        BucketDefinitionArgs{...}
//
//	or:
//
//	        nil
type BucketDefinitionPtrInput interface {
	pulumi.Input

	ToBucketDefinitionPtrOutput() BucketDefinitionPtrOutput
	ToBucketDefinitionPtrOutputWithContext(context.Context) BucketDefinitionPtrOutput
}

type bucketDefinitionPtrType BucketDefinitionArgs

func BucketDefinitionPtr(v *BucketDefinitionArgs) BucketDefinitionPtrInput {
	return (*bucketDefinitionPtrType)(v)
}

func (*bucketDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketDefinition)(nil)).Elem()
}

func (i *bucketDefinitionPtrType) ToBucketDefinitionPtrOutput() BucketDefinitionPtrOutput {
	return i.ToBucketDefinitionPtrOutputWithContext(context.Background())
}

func (i *bucketDefinitionPtrType) ToBucketDefinitionPtrOutputWithContext(ctx context.Context) BucketDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketDefinitionPtrOutput)
}

// Parameters to reconcile to the Bucket source kind type.
type BucketDefinitionOutput struct{ *pulumi.OutputState }

func (BucketDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketDefinition)(nil)).Elem()
}

func (o BucketDefinitionOutput) ToBucketDefinitionOutput() BucketDefinitionOutput {
	return o
}

func (o BucketDefinitionOutput) ToBucketDefinitionOutputWithContext(ctx context.Context) BucketDefinitionOutput {
	return o
}

func (o BucketDefinitionOutput) ToBucketDefinitionPtrOutput() BucketDefinitionPtrOutput {
	return o.ToBucketDefinitionPtrOutputWithContext(context.Background())
}

func (o BucketDefinitionOutput) ToBucketDefinitionPtrOutputWithContext(ctx context.Context) BucketDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketDefinition) *BucketDefinition {
		return &v
	}).(BucketDefinitionPtrOutput)
}

// Plaintext access key used to securely access the S3 bucket
func (o BucketDefinitionOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketDefinition) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// The bucket name to sync from the url endpoint for the flux configuration.
func (o BucketDefinitionOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketDefinition) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// Specify whether to use insecure communication when puling data from the S3 bucket.
func (o BucketDefinitionOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketDefinition) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o BucketDefinitionOutput) LocalAuthRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketDefinition) *string { return v.LocalAuthRef }).(pulumi.StringPtrOutput)
}

// The interval at which to re-reconcile the cluster bucket source with the remote.
func (o BucketDefinitionOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BucketDefinition) *float64 { return v.SyncIntervalInSeconds }).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the cluster bucket source with the remote.
func (o BucketDefinitionOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BucketDefinition) *float64 { return v.TimeoutInSeconds }).(pulumi.Float64PtrOutput)
}

// The URL to sync for the flux configuration S3 bucket.
func (o BucketDefinitionOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketDefinition) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type BucketDefinitionPtrOutput struct{ *pulumi.OutputState }

func (BucketDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketDefinition)(nil)).Elem()
}

func (o BucketDefinitionPtrOutput) ToBucketDefinitionPtrOutput() BucketDefinitionPtrOutput {
	return o
}

func (o BucketDefinitionPtrOutput) ToBucketDefinitionPtrOutputWithContext(ctx context.Context) BucketDefinitionPtrOutput {
	return o
}

func (o BucketDefinitionPtrOutput) Elem() BucketDefinitionOutput {
	return o.ApplyT(func(v *BucketDefinition) BucketDefinition {
		if v != nil {
			return *v
		}
		var ret BucketDefinition
		return ret
	}).(BucketDefinitionOutput)
}

// Plaintext access key used to securely access the S3 bucket
func (o BucketDefinitionPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketDefinition) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// The bucket name to sync from the url endpoint for the flux configuration.
func (o BucketDefinitionPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketDefinition) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Specify whether to use insecure communication when puling data from the S3 bucket.
func (o BucketDefinitionPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o BucketDefinitionPtrOutput) LocalAuthRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketDefinition) *string {
		if v == nil {
			return nil
		}
		return v.LocalAuthRef
	}).(pulumi.StringPtrOutput)
}

// The interval at which to re-reconcile the cluster bucket source with the remote.
func (o BucketDefinitionPtrOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BucketDefinition) *float64 {
		if v == nil {
			return nil
		}
		return v.SyncIntervalInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the cluster bucket source with the remote.
func (o BucketDefinitionPtrOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BucketDefinition) *float64 {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The URL to sync for the flux configuration S3 bucket.
func (o BucketDefinitionPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Parameters to reconcile to the Bucket source kind type.
type BucketDefinitionResponse struct {
	// Plaintext access key used to securely access the S3 bucket
	AccessKey *string `pulumi:"accessKey"`
	// The bucket name to sync from the url endpoint for the flux configuration.
	BucketName *string `pulumi:"bucketName"`
	// Specify whether to use insecure communication when puling data from the S3 bucket.
	Insecure *bool `pulumi:"insecure"`
	// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
	LocalAuthRef *string `pulumi:"localAuthRef"`
	// The interval at which to re-reconcile the cluster bucket source with the remote.
	SyncIntervalInSeconds *float64 `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the cluster bucket source with the remote.
	TimeoutInSeconds *float64 `pulumi:"timeoutInSeconds"`
	// The URL to sync for the flux configuration S3 bucket.
	Url *string `pulumi:"url"`
}

// Defaults sets the appropriate defaults for BucketDefinitionResponse
func (val *BucketDefinitionResponse) Defaults() *BucketDefinitionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Insecure == nil {
		insecure_ := true
		tmp.Insecure = &insecure_
	}
	if tmp.SyncIntervalInSeconds == nil {
		syncIntervalInSeconds_ := 600.0
		tmp.SyncIntervalInSeconds = &syncIntervalInSeconds_
	}
	if tmp.TimeoutInSeconds == nil {
		timeoutInSeconds_ := 600.0
		tmp.TimeoutInSeconds = &timeoutInSeconds_
	}
	return &tmp
}

// Parameters to reconcile to the Bucket source kind type.
type BucketDefinitionResponseOutput struct{ *pulumi.OutputState }

func (BucketDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketDefinitionResponse)(nil)).Elem()
}

func (o BucketDefinitionResponseOutput) ToBucketDefinitionResponseOutput() BucketDefinitionResponseOutput {
	return o
}

func (o BucketDefinitionResponseOutput) ToBucketDefinitionResponseOutputWithContext(ctx context.Context) BucketDefinitionResponseOutput {
	return o
}

// Plaintext access key used to securely access the S3 bucket
func (o BucketDefinitionResponseOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketDefinitionResponse) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// The bucket name to sync from the url endpoint for the flux configuration.
func (o BucketDefinitionResponseOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketDefinitionResponse) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// Specify whether to use insecure communication when puling data from the S3 bucket.
func (o BucketDefinitionResponseOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketDefinitionResponse) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o BucketDefinitionResponseOutput) LocalAuthRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketDefinitionResponse) *string { return v.LocalAuthRef }).(pulumi.StringPtrOutput)
}

// The interval at which to re-reconcile the cluster bucket source with the remote.
func (o BucketDefinitionResponseOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BucketDefinitionResponse) *float64 { return v.SyncIntervalInSeconds }).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the cluster bucket source with the remote.
func (o BucketDefinitionResponseOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BucketDefinitionResponse) *float64 { return v.TimeoutInSeconds }).(pulumi.Float64PtrOutput)
}

// The URL to sync for the flux configuration S3 bucket.
func (o BucketDefinitionResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketDefinitionResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type BucketDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (BucketDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketDefinitionResponse)(nil)).Elem()
}

func (o BucketDefinitionResponsePtrOutput) ToBucketDefinitionResponsePtrOutput() BucketDefinitionResponsePtrOutput {
	return o
}

func (o BucketDefinitionResponsePtrOutput) ToBucketDefinitionResponsePtrOutputWithContext(ctx context.Context) BucketDefinitionResponsePtrOutput {
	return o
}

func (o BucketDefinitionResponsePtrOutput) Elem() BucketDefinitionResponseOutput {
	return o.ApplyT(func(v *BucketDefinitionResponse) BucketDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret BucketDefinitionResponse
		return ret
	}).(BucketDefinitionResponseOutput)
}

// Plaintext access key used to securely access the S3 bucket
func (o BucketDefinitionResponsePtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// The bucket name to sync from the url endpoint for the flux configuration.
func (o BucketDefinitionResponsePtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Specify whether to use insecure communication when puling data from the S3 bucket.
func (o BucketDefinitionResponsePtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketDefinitionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o BucketDefinitionResponsePtrOutput) LocalAuthRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.LocalAuthRef
	}).(pulumi.StringPtrOutput)
}

// The interval at which to re-reconcile the cluster bucket source with the remote.
func (o BucketDefinitionResponsePtrOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BucketDefinitionResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.SyncIntervalInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the cluster bucket source with the remote.
func (o BucketDefinitionResponsePtrOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BucketDefinitionResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The URL to sync for the flux configuration S3 bucket.
func (o BucketDefinitionResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Parameters to reconcile to the GitRepository source kind type.
type GitRepositoryDefinition struct {
	// Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS
	HttpsCACert *string `pulumi:"httpsCACert"`
	// Plaintext HTTPS username used to access private git repositories over HTTPS
	HttpsUser *string `pulumi:"httpsUser"`
	// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
	LocalAuthRef *string `pulumi:"localAuthRef"`
	// The source reference for the GitRepository object.
	RepositoryRef *RepositoryRefDefinition `pulumi:"repositoryRef"`
	// Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH
	SshKnownHosts *string `pulumi:"sshKnownHosts"`
	// The interval at which to re-reconcile the cluster git repository source with the remote.
	SyncIntervalInSeconds *float64 `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the cluster git repository source with the remote.
	TimeoutInSeconds *float64 `pulumi:"timeoutInSeconds"`
	// The URL to sync for the flux configuration git repository.
	Url *string `pulumi:"url"`
}

// Defaults sets the appropriate defaults for GitRepositoryDefinition
func (val *GitRepositoryDefinition) Defaults() *GitRepositoryDefinition {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.SyncIntervalInSeconds == nil {
		syncIntervalInSeconds_ := 600.0
		tmp.SyncIntervalInSeconds = &syncIntervalInSeconds_
	}
	if tmp.TimeoutInSeconds == nil {
		timeoutInSeconds_ := 600.0
		tmp.TimeoutInSeconds = &timeoutInSeconds_
	}
	return &tmp
}

// GitRepositoryDefinitionInput is an input type that accepts GitRepositoryDefinitionArgs and GitRepositoryDefinitionOutput values.
// You can construct a concrete instance of `GitRepositoryDefinitionInput` via:
//
//	GitRepositoryDefinitionArgs{...}
type GitRepositoryDefinitionInput interface {
	pulumi.Input

	ToGitRepositoryDefinitionOutput() GitRepositoryDefinitionOutput
	ToGitRepositoryDefinitionOutputWithContext(context.Context) GitRepositoryDefinitionOutput
}

// Parameters to reconcile to the GitRepository source kind type.
type GitRepositoryDefinitionArgs struct {
	// Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS
	HttpsCACert pulumi.StringPtrInput `pulumi:"httpsCACert"`
	// Plaintext HTTPS username used to access private git repositories over HTTPS
	HttpsUser pulumi.StringPtrInput `pulumi:"httpsUser"`
	// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
	LocalAuthRef pulumi.StringPtrInput `pulumi:"localAuthRef"`
	// The source reference for the GitRepository object.
	RepositoryRef RepositoryRefDefinitionPtrInput `pulumi:"repositoryRef"`
	// Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH
	SshKnownHosts pulumi.StringPtrInput `pulumi:"sshKnownHosts"`
	// The interval at which to re-reconcile the cluster git repository source with the remote.
	SyncIntervalInSeconds pulumi.Float64PtrInput `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the cluster git repository source with the remote.
	TimeoutInSeconds pulumi.Float64PtrInput `pulumi:"timeoutInSeconds"`
	// The URL to sync for the flux configuration git repository.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

// Defaults sets the appropriate defaults for GitRepositoryDefinitionArgs
func (val *GitRepositoryDefinitionArgs) Defaults() *GitRepositoryDefinitionArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.SyncIntervalInSeconds == nil {
		tmp.SyncIntervalInSeconds = pulumi.Float64Ptr(600.0)
	}
	if tmp.TimeoutInSeconds == nil {
		tmp.TimeoutInSeconds = pulumi.Float64Ptr(600.0)
	}
	return &tmp
}
func (GitRepositoryDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitRepositoryDefinition)(nil)).Elem()
}

func (i GitRepositoryDefinitionArgs) ToGitRepositoryDefinitionOutput() GitRepositoryDefinitionOutput {
	return i.ToGitRepositoryDefinitionOutputWithContext(context.Background())
}

func (i GitRepositoryDefinitionArgs) ToGitRepositoryDefinitionOutputWithContext(ctx context.Context) GitRepositoryDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitRepositoryDefinitionOutput)
}

func (i GitRepositoryDefinitionArgs) ToGitRepositoryDefinitionPtrOutput() GitRepositoryDefinitionPtrOutput {
	return i.ToGitRepositoryDefinitionPtrOutputWithContext(context.Background())
}

func (i GitRepositoryDefinitionArgs) ToGitRepositoryDefinitionPtrOutputWithContext(ctx context.Context) GitRepositoryDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitRepositoryDefinitionOutput).ToGitRepositoryDefinitionPtrOutputWithContext(ctx)
}

// GitRepositoryDefinitionPtrInput is an input type that accepts GitRepositoryDefinitionArgs, GitRepositoryDefinitionPtr and GitRepositoryDefinitionPtrOutput values.
// You can construct a concrete instance of `GitRepositoryDefinitionPtrInput` via:
//
//	        GitRepositoryDefinitionArgs{...}
//
//	or:
//
//	        nil
type GitRepositoryDefinitionPtrInput interface {
	pulumi.Input

	ToGitRepositoryDefinitionPtrOutput() GitRepositoryDefinitionPtrOutput
	ToGitRepositoryDefinitionPtrOutputWithContext(context.Context) GitRepositoryDefinitionPtrOutput
}

type gitRepositoryDefinitionPtrType GitRepositoryDefinitionArgs

func GitRepositoryDefinitionPtr(v *GitRepositoryDefinitionArgs) GitRepositoryDefinitionPtrInput {
	return (*gitRepositoryDefinitionPtrType)(v)
}

func (*gitRepositoryDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitRepositoryDefinition)(nil)).Elem()
}

func (i *gitRepositoryDefinitionPtrType) ToGitRepositoryDefinitionPtrOutput() GitRepositoryDefinitionPtrOutput {
	return i.ToGitRepositoryDefinitionPtrOutputWithContext(context.Background())
}

func (i *gitRepositoryDefinitionPtrType) ToGitRepositoryDefinitionPtrOutputWithContext(ctx context.Context) GitRepositoryDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitRepositoryDefinitionPtrOutput)
}

// Parameters to reconcile to the GitRepository source kind type.
type GitRepositoryDefinitionOutput struct{ *pulumi.OutputState }

func (GitRepositoryDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitRepositoryDefinition)(nil)).Elem()
}

func (o GitRepositoryDefinitionOutput) ToGitRepositoryDefinitionOutput() GitRepositoryDefinitionOutput {
	return o
}

func (o GitRepositoryDefinitionOutput) ToGitRepositoryDefinitionOutputWithContext(ctx context.Context) GitRepositoryDefinitionOutput {
	return o
}

func (o GitRepositoryDefinitionOutput) ToGitRepositoryDefinitionPtrOutput() GitRepositoryDefinitionPtrOutput {
	return o.ToGitRepositoryDefinitionPtrOutputWithContext(context.Background())
}

func (o GitRepositoryDefinitionOutput) ToGitRepositoryDefinitionPtrOutputWithContext(ctx context.Context) GitRepositoryDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitRepositoryDefinition) *GitRepositoryDefinition {
		return &v
	}).(GitRepositoryDefinitionPtrOutput)
}

// Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS
func (o GitRepositoryDefinitionOutput) HttpsCACert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitRepositoryDefinition) *string { return v.HttpsCACert }).(pulumi.StringPtrOutput)
}

// Plaintext HTTPS username used to access private git repositories over HTTPS
func (o GitRepositoryDefinitionOutput) HttpsUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitRepositoryDefinition) *string { return v.HttpsUser }).(pulumi.StringPtrOutput)
}

// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o GitRepositoryDefinitionOutput) LocalAuthRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitRepositoryDefinition) *string { return v.LocalAuthRef }).(pulumi.StringPtrOutput)
}

// The source reference for the GitRepository object.
func (o GitRepositoryDefinitionOutput) RepositoryRef() RepositoryRefDefinitionPtrOutput {
	return o.ApplyT(func(v GitRepositoryDefinition) *RepositoryRefDefinition { return v.RepositoryRef }).(RepositoryRefDefinitionPtrOutput)
}

// Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH
func (o GitRepositoryDefinitionOutput) SshKnownHosts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitRepositoryDefinition) *string { return v.SshKnownHosts }).(pulumi.StringPtrOutput)
}

// The interval at which to re-reconcile the cluster git repository source with the remote.
func (o GitRepositoryDefinitionOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GitRepositoryDefinition) *float64 { return v.SyncIntervalInSeconds }).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the cluster git repository source with the remote.
func (o GitRepositoryDefinitionOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GitRepositoryDefinition) *float64 { return v.TimeoutInSeconds }).(pulumi.Float64PtrOutput)
}

// The URL to sync for the flux configuration git repository.
func (o GitRepositoryDefinitionOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitRepositoryDefinition) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type GitRepositoryDefinitionPtrOutput struct{ *pulumi.OutputState }

func (GitRepositoryDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitRepositoryDefinition)(nil)).Elem()
}

func (o GitRepositoryDefinitionPtrOutput) ToGitRepositoryDefinitionPtrOutput() GitRepositoryDefinitionPtrOutput {
	return o
}

func (o GitRepositoryDefinitionPtrOutput) ToGitRepositoryDefinitionPtrOutputWithContext(ctx context.Context) GitRepositoryDefinitionPtrOutput {
	return o
}

func (o GitRepositoryDefinitionPtrOutput) Elem() GitRepositoryDefinitionOutput {
	return o.ApplyT(func(v *GitRepositoryDefinition) GitRepositoryDefinition {
		if v != nil {
			return *v
		}
		var ret GitRepositoryDefinition
		return ret
	}).(GitRepositoryDefinitionOutput)
}

// Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS
func (o GitRepositoryDefinitionPtrOutput) HttpsCACert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitRepositoryDefinition) *string {
		if v == nil {
			return nil
		}
		return v.HttpsCACert
	}).(pulumi.StringPtrOutput)
}

// Plaintext HTTPS username used to access private git repositories over HTTPS
func (o GitRepositoryDefinitionPtrOutput) HttpsUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitRepositoryDefinition) *string {
		if v == nil {
			return nil
		}
		return v.HttpsUser
	}).(pulumi.StringPtrOutput)
}

// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o GitRepositoryDefinitionPtrOutput) LocalAuthRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitRepositoryDefinition) *string {
		if v == nil {
			return nil
		}
		return v.LocalAuthRef
	}).(pulumi.StringPtrOutput)
}

// The source reference for the GitRepository object.
func (o GitRepositoryDefinitionPtrOutput) RepositoryRef() RepositoryRefDefinitionPtrOutput {
	return o.ApplyT(func(v *GitRepositoryDefinition) *RepositoryRefDefinition {
		if v == nil {
			return nil
		}
		return v.RepositoryRef
	}).(RepositoryRefDefinitionPtrOutput)
}

// Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH
func (o GitRepositoryDefinitionPtrOutput) SshKnownHosts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitRepositoryDefinition) *string {
		if v == nil {
			return nil
		}
		return v.SshKnownHosts
	}).(pulumi.StringPtrOutput)
}

// The interval at which to re-reconcile the cluster git repository source with the remote.
func (o GitRepositoryDefinitionPtrOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GitRepositoryDefinition) *float64 {
		if v == nil {
			return nil
		}
		return v.SyncIntervalInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the cluster git repository source with the remote.
func (o GitRepositoryDefinitionPtrOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GitRepositoryDefinition) *float64 {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The URL to sync for the flux configuration git repository.
func (o GitRepositoryDefinitionPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitRepositoryDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Parameters to reconcile to the GitRepository source kind type.
type GitRepositoryDefinitionResponse struct {
	// Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS
	HttpsCACert *string `pulumi:"httpsCACert"`
	// Plaintext HTTPS username used to access private git repositories over HTTPS
	HttpsUser *string `pulumi:"httpsUser"`
	// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
	LocalAuthRef *string `pulumi:"localAuthRef"`
	// The source reference for the GitRepository object.
	RepositoryRef *RepositoryRefDefinitionResponse `pulumi:"repositoryRef"`
	// Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH
	SshKnownHosts *string `pulumi:"sshKnownHosts"`
	// The interval at which to re-reconcile the cluster git repository source with the remote.
	SyncIntervalInSeconds *float64 `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the cluster git repository source with the remote.
	TimeoutInSeconds *float64 `pulumi:"timeoutInSeconds"`
	// The URL to sync for the flux configuration git repository.
	Url *string `pulumi:"url"`
}

// Defaults sets the appropriate defaults for GitRepositoryDefinitionResponse
func (val *GitRepositoryDefinitionResponse) Defaults() *GitRepositoryDefinitionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.SyncIntervalInSeconds == nil {
		syncIntervalInSeconds_ := 600.0
		tmp.SyncIntervalInSeconds = &syncIntervalInSeconds_
	}
	if tmp.TimeoutInSeconds == nil {
		timeoutInSeconds_ := 600.0
		tmp.TimeoutInSeconds = &timeoutInSeconds_
	}
	return &tmp
}

// Parameters to reconcile to the GitRepository source kind type.
type GitRepositoryDefinitionResponseOutput struct{ *pulumi.OutputState }

func (GitRepositoryDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitRepositoryDefinitionResponse)(nil)).Elem()
}

func (o GitRepositoryDefinitionResponseOutput) ToGitRepositoryDefinitionResponseOutput() GitRepositoryDefinitionResponseOutput {
	return o
}

func (o GitRepositoryDefinitionResponseOutput) ToGitRepositoryDefinitionResponseOutputWithContext(ctx context.Context) GitRepositoryDefinitionResponseOutput {
	return o
}

// Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS
func (o GitRepositoryDefinitionResponseOutput) HttpsCACert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitRepositoryDefinitionResponse) *string { return v.HttpsCACert }).(pulumi.StringPtrOutput)
}

// Plaintext HTTPS username used to access private git repositories over HTTPS
func (o GitRepositoryDefinitionResponseOutput) HttpsUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitRepositoryDefinitionResponse) *string { return v.HttpsUser }).(pulumi.StringPtrOutput)
}

// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o GitRepositoryDefinitionResponseOutput) LocalAuthRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitRepositoryDefinitionResponse) *string { return v.LocalAuthRef }).(pulumi.StringPtrOutput)
}

// The source reference for the GitRepository object.
func (o GitRepositoryDefinitionResponseOutput) RepositoryRef() RepositoryRefDefinitionResponsePtrOutput {
	return o.ApplyT(func(v GitRepositoryDefinitionResponse) *RepositoryRefDefinitionResponse { return v.RepositoryRef }).(RepositoryRefDefinitionResponsePtrOutput)
}

// Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH
func (o GitRepositoryDefinitionResponseOutput) SshKnownHosts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitRepositoryDefinitionResponse) *string { return v.SshKnownHosts }).(pulumi.StringPtrOutput)
}

// The interval at which to re-reconcile the cluster git repository source with the remote.
func (o GitRepositoryDefinitionResponseOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GitRepositoryDefinitionResponse) *float64 { return v.SyncIntervalInSeconds }).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the cluster git repository source with the remote.
func (o GitRepositoryDefinitionResponseOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GitRepositoryDefinitionResponse) *float64 { return v.TimeoutInSeconds }).(pulumi.Float64PtrOutput)
}

// The URL to sync for the flux configuration git repository.
func (o GitRepositoryDefinitionResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitRepositoryDefinitionResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type GitRepositoryDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (GitRepositoryDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitRepositoryDefinitionResponse)(nil)).Elem()
}

func (o GitRepositoryDefinitionResponsePtrOutput) ToGitRepositoryDefinitionResponsePtrOutput() GitRepositoryDefinitionResponsePtrOutput {
	return o
}

func (o GitRepositoryDefinitionResponsePtrOutput) ToGitRepositoryDefinitionResponsePtrOutputWithContext(ctx context.Context) GitRepositoryDefinitionResponsePtrOutput {
	return o
}

func (o GitRepositoryDefinitionResponsePtrOutput) Elem() GitRepositoryDefinitionResponseOutput {
	return o.ApplyT(func(v *GitRepositoryDefinitionResponse) GitRepositoryDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret GitRepositoryDefinitionResponse
		return ret
	}).(GitRepositoryDefinitionResponseOutput)
}

// Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS
func (o GitRepositoryDefinitionResponsePtrOutput) HttpsCACert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitRepositoryDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.HttpsCACert
	}).(pulumi.StringPtrOutput)
}

// Plaintext HTTPS username used to access private git repositories over HTTPS
func (o GitRepositoryDefinitionResponsePtrOutput) HttpsUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitRepositoryDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.HttpsUser
	}).(pulumi.StringPtrOutput)
}

// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o GitRepositoryDefinitionResponsePtrOutput) LocalAuthRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitRepositoryDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.LocalAuthRef
	}).(pulumi.StringPtrOutput)
}

// The source reference for the GitRepository object.
func (o GitRepositoryDefinitionResponsePtrOutput) RepositoryRef() RepositoryRefDefinitionResponsePtrOutput {
	return o.ApplyT(func(v *GitRepositoryDefinitionResponse) *RepositoryRefDefinitionResponse {
		if v == nil {
			return nil
		}
		return v.RepositoryRef
	}).(RepositoryRefDefinitionResponsePtrOutput)
}

// Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH
func (o GitRepositoryDefinitionResponsePtrOutput) SshKnownHosts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitRepositoryDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.SshKnownHosts
	}).(pulumi.StringPtrOutput)
}

// The interval at which to re-reconcile the cluster git repository source with the remote.
func (o GitRepositoryDefinitionResponsePtrOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GitRepositoryDefinitionResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.SyncIntervalInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the cluster git repository source with the remote.
func (o GitRepositoryDefinitionResponsePtrOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GitRepositoryDefinitionResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The URL to sync for the flux configuration git repository.
func (o GitRepositoryDefinitionResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitRepositoryDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Properties for HelmRelease objects
type HelmReleasePropertiesDefinitionResponse struct {
	// Total number of times that the HelmRelease failed to install or upgrade
	FailureCount *float64 `pulumi:"failureCount"`
	// The reference to the HelmChart object used as the source to this HelmRelease
	HelmChartRef *ObjectReferenceDefinitionResponse `pulumi:"helmChartRef"`
	// Number of times that the HelmRelease failed to install
	InstallFailureCount *float64 `pulumi:"installFailureCount"`
	// The revision number of the last released object change
	LastRevisionApplied *float64 `pulumi:"lastRevisionApplied"`
	// Number of times that the HelmRelease failed to upgrade
	UpgradeFailureCount *float64 `pulumi:"upgradeFailureCount"`
}

// Properties for HelmRelease objects
type HelmReleasePropertiesDefinitionResponseOutput struct{ *pulumi.OutputState }

func (HelmReleasePropertiesDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmReleasePropertiesDefinitionResponse)(nil)).Elem()
}

func (o HelmReleasePropertiesDefinitionResponseOutput) ToHelmReleasePropertiesDefinitionResponseOutput() HelmReleasePropertiesDefinitionResponseOutput {
	return o
}

func (o HelmReleasePropertiesDefinitionResponseOutput) ToHelmReleasePropertiesDefinitionResponseOutputWithContext(ctx context.Context) HelmReleasePropertiesDefinitionResponseOutput {
	return o
}

// Total number of times that the HelmRelease failed to install or upgrade
func (o HelmReleasePropertiesDefinitionResponseOutput) FailureCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v HelmReleasePropertiesDefinitionResponse) *float64 { return v.FailureCount }).(pulumi.Float64PtrOutput)
}

// The reference to the HelmChart object used as the source to this HelmRelease
func (o HelmReleasePropertiesDefinitionResponseOutput) HelmChartRef() ObjectReferenceDefinitionResponsePtrOutput {
	return o.ApplyT(func(v HelmReleasePropertiesDefinitionResponse) *ObjectReferenceDefinitionResponse {
		return v.HelmChartRef
	}).(ObjectReferenceDefinitionResponsePtrOutput)
}

// Number of times that the HelmRelease failed to install
func (o HelmReleasePropertiesDefinitionResponseOutput) InstallFailureCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v HelmReleasePropertiesDefinitionResponse) *float64 { return v.InstallFailureCount }).(pulumi.Float64PtrOutput)
}

// The revision number of the last released object change
func (o HelmReleasePropertiesDefinitionResponseOutput) LastRevisionApplied() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v HelmReleasePropertiesDefinitionResponse) *float64 { return v.LastRevisionApplied }).(pulumi.Float64PtrOutput)
}

// Number of times that the HelmRelease failed to upgrade
func (o HelmReleasePropertiesDefinitionResponseOutput) UpgradeFailureCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v HelmReleasePropertiesDefinitionResponse) *float64 { return v.UpgradeFailureCount }).(pulumi.Float64PtrOutput)
}

type HelmReleasePropertiesDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (HelmReleasePropertiesDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmReleasePropertiesDefinitionResponse)(nil)).Elem()
}

func (o HelmReleasePropertiesDefinitionResponsePtrOutput) ToHelmReleasePropertiesDefinitionResponsePtrOutput() HelmReleasePropertiesDefinitionResponsePtrOutput {
	return o
}

func (o HelmReleasePropertiesDefinitionResponsePtrOutput) ToHelmReleasePropertiesDefinitionResponsePtrOutputWithContext(ctx context.Context) HelmReleasePropertiesDefinitionResponsePtrOutput {
	return o
}

func (o HelmReleasePropertiesDefinitionResponsePtrOutput) Elem() HelmReleasePropertiesDefinitionResponseOutput {
	return o.ApplyT(func(v *HelmReleasePropertiesDefinitionResponse) HelmReleasePropertiesDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret HelmReleasePropertiesDefinitionResponse
		return ret
	}).(HelmReleasePropertiesDefinitionResponseOutput)
}

// Total number of times that the HelmRelease failed to install or upgrade
func (o HelmReleasePropertiesDefinitionResponsePtrOutput) FailureCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *HelmReleasePropertiesDefinitionResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.FailureCount
	}).(pulumi.Float64PtrOutput)
}

// The reference to the HelmChart object used as the source to this HelmRelease
func (o HelmReleasePropertiesDefinitionResponsePtrOutput) HelmChartRef() ObjectReferenceDefinitionResponsePtrOutput {
	return o.ApplyT(func(v *HelmReleasePropertiesDefinitionResponse) *ObjectReferenceDefinitionResponse {
		if v == nil {
			return nil
		}
		return v.HelmChartRef
	}).(ObjectReferenceDefinitionResponsePtrOutput)
}

// Number of times that the HelmRelease failed to install
func (o HelmReleasePropertiesDefinitionResponsePtrOutput) InstallFailureCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *HelmReleasePropertiesDefinitionResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.InstallFailureCount
	}).(pulumi.Float64PtrOutput)
}

// The revision number of the last released object change
func (o HelmReleasePropertiesDefinitionResponsePtrOutput) LastRevisionApplied() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *HelmReleasePropertiesDefinitionResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.LastRevisionApplied
	}).(pulumi.Float64PtrOutput)
}

// Number of times that the HelmRelease failed to upgrade
func (o HelmReleasePropertiesDefinitionResponsePtrOutput) UpgradeFailureCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *HelmReleasePropertiesDefinitionResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.UpgradeFailureCount
	}).(pulumi.Float64PtrOutput)
}

// The Kustomization defining how to reconcile the artifact pulled by the source type on the cluster.
type KustomizationDefinition struct {
	// Specifies other Kustomizations that this Kustomization depends on. This Kustomization will not reconcile until all dependencies have completed their reconciliation.
	DependsOn []string `pulumi:"dependsOn"`
	// Enable/disable re-creating Kubernetes resources on the cluster when patching fails due to an immutable field change.
	Force *bool `pulumi:"force"`
	// The path in the source reference to reconcile on the cluster.
	Path *string `pulumi:"path"`
	// Used for variable substitution for this Kustomization after kustomize build.
	PostBuild *PostBuildDefinition `pulumi:"postBuild"`
	// Enable/disable garbage collections of Kubernetes objects created by this Kustomization.
	Prune *bool `pulumi:"prune"`
	// The interval at which to re-reconcile the Kustomization on the cluster in the event of failure on reconciliation.
	RetryIntervalInSeconds *float64 `pulumi:"retryIntervalInSeconds"`
	// The interval at which to re-reconcile the Kustomization on the cluster.
	SyncIntervalInSeconds *float64 `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the Kustomization on the cluster.
	TimeoutInSeconds *float64 `pulumi:"timeoutInSeconds"`
	// Enable/disable health check for all Kubernetes objects created by this Kustomization.
	Wait *bool `pulumi:"wait"`
}

// Defaults sets the appropriate defaults for KustomizationDefinition
func (val *KustomizationDefinition) Defaults() *KustomizationDefinition {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Force == nil {
		force_ := false
		tmp.Force = &force_
	}
	if tmp.Path == nil {
		path_ := ""
		tmp.Path = &path_
	}
	if tmp.Prune == nil {
		prune_ := false
		tmp.Prune = &prune_
	}
	if tmp.SyncIntervalInSeconds == nil {
		syncIntervalInSeconds_ := 600.0
		tmp.SyncIntervalInSeconds = &syncIntervalInSeconds_
	}
	if tmp.TimeoutInSeconds == nil {
		timeoutInSeconds_ := 600.0
		tmp.TimeoutInSeconds = &timeoutInSeconds_
	}
	if tmp.Wait == nil {
		wait_ := true
		tmp.Wait = &wait_
	}
	return &tmp
}

// KustomizationDefinitionInput is an input type that accepts KustomizationDefinitionArgs and KustomizationDefinitionOutput values.
// You can construct a concrete instance of `KustomizationDefinitionInput` via:
//
//	KustomizationDefinitionArgs{...}
type KustomizationDefinitionInput interface {
	pulumi.Input

	ToKustomizationDefinitionOutput() KustomizationDefinitionOutput
	ToKustomizationDefinitionOutputWithContext(context.Context) KustomizationDefinitionOutput
}

// The Kustomization defining how to reconcile the artifact pulled by the source type on the cluster.
type KustomizationDefinitionArgs struct {
	// Specifies other Kustomizations that this Kustomization depends on. This Kustomization will not reconcile until all dependencies have completed their reconciliation.
	DependsOn pulumi.StringArrayInput `pulumi:"dependsOn"`
	// Enable/disable re-creating Kubernetes resources on the cluster when patching fails due to an immutable field change.
	Force pulumi.BoolPtrInput `pulumi:"force"`
	// The path in the source reference to reconcile on the cluster.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Used for variable substitution for this Kustomization after kustomize build.
	PostBuild PostBuildDefinitionPtrInput `pulumi:"postBuild"`
	// Enable/disable garbage collections of Kubernetes objects created by this Kustomization.
	Prune pulumi.BoolPtrInput `pulumi:"prune"`
	// The interval at which to re-reconcile the Kustomization on the cluster in the event of failure on reconciliation.
	RetryIntervalInSeconds pulumi.Float64PtrInput `pulumi:"retryIntervalInSeconds"`
	// The interval at which to re-reconcile the Kustomization on the cluster.
	SyncIntervalInSeconds pulumi.Float64PtrInput `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the Kustomization on the cluster.
	TimeoutInSeconds pulumi.Float64PtrInput `pulumi:"timeoutInSeconds"`
	// Enable/disable health check for all Kubernetes objects created by this Kustomization.
	Wait pulumi.BoolPtrInput `pulumi:"wait"`
}

// Defaults sets the appropriate defaults for KustomizationDefinitionArgs
func (val *KustomizationDefinitionArgs) Defaults() *KustomizationDefinitionArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Force == nil {
		tmp.Force = pulumi.BoolPtr(false)
	}
	if tmp.Path == nil {
		tmp.Path = pulumi.StringPtr("")
	}
	if tmp.Prune == nil {
		tmp.Prune = pulumi.BoolPtr(false)
	}
	if tmp.SyncIntervalInSeconds == nil {
		tmp.SyncIntervalInSeconds = pulumi.Float64Ptr(600.0)
	}
	if tmp.TimeoutInSeconds == nil {
		tmp.TimeoutInSeconds = pulumi.Float64Ptr(600.0)
	}
	if tmp.Wait == nil {
		tmp.Wait = pulumi.BoolPtr(true)
	}
	return &tmp
}
func (KustomizationDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KustomizationDefinition)(nil)).Elem()
}

func (i KustomizationDefinitionArgs) ToKustomizationDefinitionOutput() KustomizationDefinitionOutput {
	return i.ToKustomizationDefinitionOutputWithContext(context.Background())
}

func (i KustomizationDefinitionArgs) ToKustomizationDefinitionOutputWithContext(ctx context.Context) KustomizationDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KustomizationDefinitionOutput)
}

// KustomizationDefinitionMapInput is an input type that accepts KustomizationDefinitionMap and KustomizationDefinitionMapOutput values.
// You can construct a concrete instance of `KustomizationDefinitionMapInput` via:
//
//	KustomizationDefinitionMap{ "key": KustomizationDefinitionArgs{...} }
type KustomizationDefinitionMapInput interface {
	pulumi.Input

	ToKustomizationDefinitionMapOutput() KustomizationDefinitionMapOutput
	ToKustomizationDefinitionMapOutputWithContext(context.Context) KustomizationDefinitionMapOutput
}

type KustomizationDefinitionMap map[string]KustomizationDefinitionInput

func (KustomizationDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]KustomizationDefinition)(nil)).Elem()
}

func (i KustomizationDefinitionMap) ToKustomizationDefinitionMapOutput() KustomizationDefinitionMapOutput {
	return i.ToKustomizationDefinitionMapOutputWithContext(context.Background())
}

func (i KustomizationDefinitionMap) ToKustomizationDefinitionMapOutputWithContext(ctx context.Context) KustomizationDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KustomizationDefinitionMapOutput)
}

// The Kustomization defining how to reconcile the artifact pulled by the source type on the cluster.
type KustomizationDefinitionOutput struct{ *pulumi.OutputState }

func (KustomizationDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KustomizationDefinition)(nil)).Elem()
}

func (o KustomizationDefinitionOutput) ToKustomizationDefinitionOutput() KustomizationDefinitionOutput {
	return o
}

func (o KustomizationDefinitionOutput) ToKustomizationDefinitionOutputWithContext(ctx context.Context) KustomizationDefinitionOutput {
	return o
}

// Specifies other Kustomizations that this Kustomization depends on. This Kustomization will not reconcile until all dependencies have completed their reconciliation.
func (o KustomizationDefinitionOutput) DependsOn() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KustomizationDefinition) []string { return v.DependsOn }).(pulumi.StringArrayOutput)
}

// Enable/disable re-creating Kubernetes resources on the cluster when patching fails due to an immutable field change.
func (o KustomizationDefinitionOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KustomizationDefinition) *bool { return v.Force }).(pulumi.BoolPtrOutput)
}

// The path in the source reference to reconcile on the cluster.
func (o KustomizationDefinitionOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KustomizationDefinition) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Used for variable substitution for this Kustomization after kustomize build.
func (o KustomizationDefinitionOutput) PostBuild() PostBuildDefinitionPtrOutput {
	return o.ApplyT(func(v KustomizationDefinition) *PostBuildDefinition { return v.PostBuild }).(PostBuildDefinitionPtrOutput)
}

// Enable/disable garbage collections of Kubernetes objects created by this Kustomization.
func (o KustomizationDefinitionOutput) Prune() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KustomizationDefinition) *bool { return v.Prune }).(pulumi.BoolPtrOutput)
}

// The interval at which to re-reconcile the Kustomization on the cluster in the event of failure on reconciliation.
func (o KustomizationDefinitionOutput) RetryIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v KustomizationDefinition) *float64 { return v.RetryIntervalInSeconds }).(pulumi.Float64PtrOutput)
}

// The interval at which to re-reconcile the Kustomization on the cluster.
func (o KustomizationDefinitionOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v KustomizationDefinition) *float64 { return v.SyncIntervalInSeconds }).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the Kustomization on the cluster.
func (o KustomizationDefinitionOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v KustomizationDefinition) *float64 { return v.TimeoutInSeconds }).(pulumi.Float64PtrOutput)
}

// Enable/disable health check for all Kubernetes objects created by this Kustomization.
func (o KustomizationDefinitionOutput) Wait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KustomizationDefinition) *bool { return v.Wait }).(pulumi.BoolPtrOutput)
}

type KustomizationDefinitionMapOutput struct{ *pulumi.OutputState }

func (KustomizationDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]KustomizationDefinition)(nil)).Elem()
}

func (o KustomizationDefinitionMapOutput) ToKustomizationDefinitionMapOutput() KustomizationDefinitionMapOutput {
	return o
}

func (o KustomizationDefinitionMapOutput) ToKustomizationDefinitionMapOutputWithContext(ctx context.Context) KustomizationDefinitionMapOutput {
	return o
}

func (o KustomizationDefinitionMapOutput) MapIndex(k pulumi.StringInput) KustomizationDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) KustomizationDefinition {
		return vs[0].(map[string]KustomizationDefinition)[vs[1].(string)]
	}).(KustomizationDefinitionOutput)
}

// The Kustomization defining how to reconcile the artifact pulled by the source type on the cluster.
type KustomizationDefinitionResponse struct {
	// Specifies other Kustomizations that this Kustomization depends on. This Kustomization will not reconcile until all dependencies have completed their reconciliation.
	DependsOn []string `pulumi:"dependsOn"`
	// Enable/disable re-creating Kubernetes resources on the cluster when patching fails due to an immutable field change.
	Force *bool `pulumi:"force"`
	// Name of the Kustomization, matching the key in the Kustomizations object map.
	Name string `pulumi:"name"`
	// The path in the source reference to reconcile on the cluster.
	Path *string `pulumi:"path"`
	// Used for variable substitution for this Kustomization after kustomize build.
	PostBuild *PostBuildDefinitionResponse `pulumi:"postBuild"`
	// Enable/disable garbage collections of Kubernetes objects created by this Kustomization.
	Prune *bool `pulumi:"prune"`
	// The interval at which to re-reconcile the Kustomization on the cluster in the event of failure on reconciliation.
	RetryIntervalInSeconds *float64 `pulumi:"retryIntervalInSeconds"`
	// The interval at which to re-reconcile the Kustomization on the cluster.
	SyncIntervalInSeconds *float64 `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the Kustomization on the cluster.
	TimeoutInSeconds *float64 `pulumi:"timeoutInSeconds"`
	// Enable/disable health check for all Kubernetes objects created by this Kustomization.
	Wait *bool `pulumi:"wait"`
}

// Defaults sets the appropriate defaults for KustomizationDefinitionResponse
func (val *KustomizationDefinitionResponse) Defaults() *KustomizationDefinitionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Force == nil {
		force_ := false
		tmp.Force = &force_
	}
	if tmp.Path == nil {
		path_ := ""
		tmp.Path = &path_
	}
	if tmp.Prune == nil {
		prune_ := false
		tmp.Prune = &prune_
	}
	if tmp.SyncIntervalInSeconds == nil {
		syncIntervalInSeconds_ := 600.0
		tmp.SyncIntervalInSeconds = &syncIntervalInSeconds_
	}
	if tmp.TimeoutInSeconds == nil {
		timeoutInSeconds_ := 600.0
		tmp.TimeoutInSeconds = &timeoutInSeconds_
	}
	if tmp.Wait == nil {
		wait_ := true
		tmp.Wait = &wait_
	}
	return &tmp
}

// The Kustomization defining how to reconcile the artifact pulled by the source type on the cluster.
type KustomizationDefinitionResponseOutput struct{ *pulumi.OutputState }

func (KustomizationDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KustomizationDefinitionResponse)(nil)).Elem()
}

func (o KustomizationDefinitionResponseOutput) ToKustomizationDefinitionResponseOutput() KustomizationDefinitionResponseOutput {
	return o
}

func (o KustomizationDefinitionResponseOutput) ToKustomizationDefinitionResponseOutputWithContext(ctx context.Context) KustomizationDefinitionResponseOutput {
	return o
}

// Specifies other Kustomizations that this Kustomization depends on. This Kustomization will not reconcile until all dependencies have completed their reconciliation.
func (o KustomizationDefinitionResponseOutput) DependsOn() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KustomizationDefinitionResponse) []string { return v.DependsOn }).(pulumi.StringArrayOutput)
}

// Enable/disable re-creating Kubernetes resources on the cluster when patching fails due to an immutable field change.
func (o KustomizationDefinitionResponseOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KustomizationDefinitionResponse) *bool { return v.Force }).(pulumi.BoolPtrOutput)
}

// Name of the Kustomization, matching the key in the Kustomizations object map.
func (o KustomizationDefinitionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KustomizationDefinitionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The path in the source reference to reconcile on the cluster.
func (o KustomizationDefinitionResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KustomizationDefinitionResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Used for variable substitution for this Kustomization after kustomize build.
func (o KustomizationDefinitionResponseOutput) PostBuild() PostBuildDefinitionResponsePtrOutput {
	return o.ApplyT(func(v KustomizationDefinitionResponse) *PostBuildDefinitionResponse { return v.PostBuild }).(PostBuildDefinitionResponsePtrOutput)
}

// Enable/disable garbage collections of Kubernetes objects created by this Kustomization.
func (o KustomizationDefinitionResponseOutput) Prune() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KustomizationDefinitionResponse) *bool { return v.Prune }).(pulumi.BoolPtrOutput)
}

// The interval at which to re-reconcile the Kustomization on the cluster in the event of failure on reconciliation.
func (o KustomizationDefinitionResponseOutput) RetryIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v KustomizationDefinitionResponse) *float64 { return v.RetryIntervalInSeconds }).(pulumi.Float64PtrOutput)
}

// The interval at which to re-reconcile the Kustomization on the cluster.
func (o KustomizationDefinitionResponseOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v KustomizationDefinitionResponse) *float64 { return v.SyncIntervalInSeconds }).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the Kustomization on the cluster.
func (o KustomizationDefinitionResponseOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v KustomizationDefinitionResponse) *float64 { return v.TimeoutInSeconds }).(pulumi.Float64PtrOutput)
}

// Enable/disable health check for all Kubernetes objects created by this Kustomization.
func (o KustomizationDefinitionResponseOutput) Wait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KustomizationDefinitionResponse) *bool { return v.Wait }).(pulumi.BoolPtrOutput)
}

type KustomizationDefinitionResponseMapOutput struct{ *pulumi.OutputState }

func (KustomizationDefinitionResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]KustomizationDefinitionResponse)(nil)).Elem()
}

func (o KustomizationDefinitionResponseMapOutput) ToKustomizationDefinitionResponseMapOutput() KustomizationDefinitionResponseMapOutput {
	return o
}

func (o KustomizationDefinitionResponseMapOutput) ToKustomizationDefinitionResponseMapOutputWithContext(ctx context.Context) KustomizationDefinitionResponseMapOutput {
	return o
}

func (o KustomizationDefinitionResponseMapOutput) MapIndex(k pulumi.StringInput) KustomizationDefinitionResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) KustomizationDefinitionResponse {
		return vs[0].(map[string]KustomizationDefinitionResponse)[vs[1].(string)]
	}).(KustomizationDefinitionResponseOutput)
}

// Parameters to specify which layer to pull from the OCI artifact. By default, the first layer in the artifact is pulled.
type LayerSelectorDefinition struct {
	// The first layer matching the specified media type will be used.
	MediaType *string `pulumi:"mediaType"`
	// The operation to be performed on the selected layer. The default value is 'extract', but it can be set to 'copy'.
	Operation *string `pulumi:"operation"`
}

// LayerSelectorDefinitionInput is an input type that accepts LayerSelectorDefinitionArgs and LayerSelectorDefinitionOutput values.
// You can construct a concrete instance of `LayerSelectorDefinitionInput` via:
//
//	LayerSelectorDefinitionArgs{...}
type LayerSelectorDefinitionInput interface {
	pulumi.Input

	ToLayerSelectorDefinitionOutput() LayerSelectorDefinitionOutput
	ToLayerSelectorDefinitionOutputWithContext(context.Context) LayerSelectorDefinitionOutput
}

// Parameters to specify which layer to pull from the OCI artifact. By default, the first layer in the artifact is pulled.
type LayerSelectorDefinitionArgs struct {
	// The first layer matching the specified media type will be used.
	MediaType pulumi.StringPtrInput `pulumi:"mediaType"`
	// The operation to be performed on the selected layer. The default value is 'extract', but it can be set to 'copy'.
	Operation pulumi.StringPtrInput `pulumi:"operation"`
}

func (LayerSelectorDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LayerSelectorDefinition)(nil)).Elem()
}

func (i LayerSelectorDefinitionArgs) ToLayerSelectorDefinitionOutput() LayerSelectorDefinitionOutput {
	return i.ToLayerSelectorDefinitionOutputWithContext(context.Background())
}

func (i LayerSelectorDefinitionArgs) ToLayerSelectorDefinitionOutputWithContext(ctx context.Context) LayerSelectorDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LayerSelectorDefinitionOutput)
}

func (i LayerSelectorDefinitionArgs) ToLayerSelectorDefinitionPtrOutput() LayerSelectorDefinitionPtrOutput {
	return i.ToLayerSelectorDefinitionPtrOutputWithContext(context.Background())
}

func (i LayerSelectorDefinitionArgs) ToLayerSelectorDefinitionPtrOutputWithContext(ctx context.Context) LayerSelectorDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LayerSelectorDefinitionOutput).ToLayerSelectorDefinitionPtrOutputWithContext(ctx)
}

// LayerSelectorDefinitionPtrInput is an input type that accepts LayerSelectorDefinitionArgs, LayerSelectorDefinitionPtr and LayerSelectorDefinitionPtrOutput values.
// You can construct a concrete instance of `LayerSelectorDefinitionPtrInput` via:
//
//	        LayerSelectorDefinitionArgs{...}
//
//	or:
//
//	        nil
type LayerSelectorDefinitionPtrInput interface {
	pulumi.Input

	ToLayerSelectorDefinitionPtrOutput() LayerSelectorDefinitionPtrOutput
	ToLayerSelectorDefinitionPtrOutputWithContext(context.Context) LayerSelectorDefinitionPtrOutput
}

type layerSelectorDefinitionPtrType LayerSelectorDefinitionArgs

func LayerSelectorDefinitionPtr(v *LayerSelectorDefinitionArgs) LayerSelectorDefinitionPtrInput {
	return (*layerSelectorDefinitionPtrType)(v)
}

func (*layerSelectorDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LayerSelectorDefinition)(nil)).Elem()
}

func (i *layerSelectorDefinitionPtrType) ToLayerSelectorDefinitionPtrOutput() LayerSelectorDefinitionPtrOutput {
	return i.ToLayerSelectorDefinitionPtrOutputWithContext(context.Background())
}

func (i *layerSelectorDefinitionPtrType) ToLayerSelectorDefinitionPtrOutputWithContext(ctx context.Context) LayerSelectorDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LayerSelectorDefinitionPtrOutput)
}

// Parameters to specify which layer to pull from the OCI artifact. By default, the first layer in the artifact is pulled.
type LayerSelectorDefinitionOutput struct{ *pulumi.OutputState }

func (LayerSelectorDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LayerSelectorDefinition)(nil)).Elem()
}

func (o LayerSelectorDefinitionOutput) ToLayerSelectorDefinitionOutput() LayerSelectorDefinitionOutput {
	return o
}

func (o LayerSelectorDefinitionOutput) ToLayerSelectorDefinitionOutputWithContext(ctx context.Context) LayerSelectorDefinitionOutput {
	return o
}

func (o LayerSelectorDefinitionOutput) ToLayerSelectorDefinitionPtrOutput() LayerSelectorDefinitionPtrOutput {
	return o.ToLayerSelectorDefinitionPtrOutputWithContext(context.Background())
}

func (o LayerSelectorDefinitionOutput) ToLayerSelectorDefinitionPtrOutputWithContext(ctx context.Context) LayerSelectorDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LayerSelectorDefinition) *LayerSelectorDefinition {
		return &v
	}).(LayerSelectorDefinitionPtrOutput)
}

// The first layer matching the specified media type will be used.
func (o LayerSelectorDefinitionOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LayerSelectorDefinition) *string { return v.MediaType }).(pulumi.StringPtrOutput)
}

// The operation to be performed on the selected layer. The default value is 'extract', but it can be set to 'copy'.
func (o LayerSelectorDefinitionOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LayerSelectorDefinition) *string { return v.Operation }).(pulumi.StringPtrOutput)
}

type LayerSelectorDefinitionPtrOutput struct{ *pulumi.OutputState }

func (LayerSelectorDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LayerSelectorDefinition)(nil)).Elem()
}

func (o LayerSelectorDefinitionPtrOutput) ToLayerSelectorDefinitionPtrOutput() LayerSelectorDefinitionPtrOutput {
	return o
}

func (o LayerSelectorDefinitionPtrOutput) ToLayerSelectorDefinitionPtrOutputWithContext(ctx context.Context) LayerSelectorDefinitionPtrOutput {
	return o
}

func (o LayerSelectorDefinitionPtrOutput) Elem() LayerSelectorDefinitionOutput {
	return o.ApplyT(func(v *LayerSelectorDefinition) LayerSelectorDefinition {
		if v != nil {
			return *v
		}
		var ret LayerSelectorDefinition
		return ret
	}).(LayerSelectorDefinitionOutput)
}

// The first layer matching the specified media type will be used.
func (o LayerSelectorDefinitionPtrOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LayerSelectorDefinition) *string {
		if v == nil {
			return nil
		}
		return v.MediaType
	}).(pulumi.StringPtrOutput)
}

// The operation to be performed on the selected layer. The default value is 'extract', but it can be set to 'copy'.
func (o LayerSelectorDefinitionPtrOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LayerSelectorDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Operation
	}).(pulumi.StringPtrOutput)
}

// Parameters to specify which layer to pull from the OCI artifact. By default, the first layer in the artifact is pulled.
type LayerSelectorDefinitionResponse struct {
	// The first layer matching the specified media type will be used.
	MediaType *string `pulumi:"mediaType"`
	// The operation to be performed on the selected layer. The default value is 'extract', but it can be set to 'copy'.
	Operation *string `pulumi:"operation"`
}

// Parameters to specify which layer to pull from the OCI artifact. By default, the first layer in the artifact is pulled.
type LayerSelectorDefinitionResponseOutput struct{ *pulumi.OutputState }

func (LayerSelectorDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LayerSelectorDefinitionResponse)(nil)).Elem()
}

func (o LayerSelectorDefinitionResponseOutput) ToLayerSelectorDefinitionResponseOutput() LayerSelectorDefinitionResponseOutput {
	return o
}

func (o LayerSelectorDefinitionResponseOutput) ToLayerSelectorDefinitionResponseOutputWithContext(ctx context.Context) LayerSelectorDefinitionResponseOutput {
	return o
}

// The first layer matching the specified media type will be used.
func (o LayerSelectorDefinitionResponseOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LayerSelectorDefinitionResponse) *string { return v.MediaType }).(pulumi.StringPtrOutput)
}

// The operation to be performed on the selected layer. The default value is 'extract', but it can be set to 'copy'.
func (o LayerSelectorDefinitionResponseOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LayerSelectorDefinitionResponse) *string { return v.Operation }).(pulumi.StringPtrOutput)
}

type LayerSelectorDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (LayerSelectorDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LayerSelectorDefinitionResponse)(nil)).Elem()
}

func (o LayerSelectorDefinitionResponsePtrOutput) ToLayerSelectorDefinitionResponsePtrOutput() LayerSelectorDefinitionResponsePtrOutput {
	return o
}

func (o LayerSelectorDefinitionResponsePtrOutput) ToLayerSelectorDefinitionResponsePtrOutputWithContext(ctx context.Context) LayerSelectorDefinitionResponsePtrOutput {
	return o
}

func (o LayerSelectorDefinitionResponsePtrOutput) Elem() LayerSelectorDefinitionResponseOutput {
	return o.ApplyT(func(v *LayerSelectorDefinitionResponse) LayerSelectorDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret LayerSelectorDefinitionResponse
		return ret
	}).(LayerSelectorDefinitionResponseOutput)
}

// The first layer matching the specified media type will be used.
func (o LayerSelectorDefinitionResponsePtrOutput) MediaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LayerSelectorDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.MediaType
	}).(pulumi.StringPtrOutput)
}

// The operation to be performed on the selected layer. The default value is 'extract', but it can be set to 'copy'.
func (o LayerSelectorDefinitionResponsePtrOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LayerSelectorDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Operation
	}).(pulumi.StringPtrOutput)
}

// Parameters to authenticate using a Managed Identity.
type ManagedIdentityDefinition struct {
	// The client Id for authenticating a Managed Identity.
	ClientId *string `pulumi:"clientId"`
}

// ManagedIdentityDefinitionInput is an input type that accepts ManagedIdentityDefinitionArgs and ManagedIdentityDefinitionOutput values.
// You can construct a concrete instance of `ManagedIdentityDefinitionInput` via:
//
//	ManagedIdentityDefinitionArgs{...}
type ManagedIdentityDefinitionInput interface {
	pulumi.Input

	ToManagedIdentityDefinitionOutput() ManagedIdentityDefinitionOutput
	ToManagedIdentityDefinitionOutputWithContext(context.Context) ManagedIdentityDefinitionOutput
}

// Parameters to authenticate using a Managed Identity.
type ManagedIdentityDefinitionArgs struct {
	// The client Id for authenticating a Managed Identity.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
}

func (ManagedIdentityDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityDefinition)(nil)).Elem()
}

func (i ManagedIdentityDefinitionArgs) ToManagedIdentityDefinitionOutput() ManagedIdentityDefinitionOutput {
	return i.ToManagedIdentityDefinitionOutputWithContext(context.Background())
}

func (i ManagedIdentityDefinitionArgs) ToManagedIdentityDefinitionOutputWithContext(ctx context.Context) ManagedIdentityDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityDefinitionOutput)
}

func (i ManagedIdentityDefinitionArgs) ToManagedIdentityDefinitionPtrOutput() ManagedIdentityDefinitionPtrOutput {
	return i.ToManagedIdentityDefinitionPtrOutputWithContext(context.Background())
}

func (i ManagedIdentityDefinitionArgs) ToManagedIdentityDefinitionPtrOutputWithContext(ctx context.Context) ManagedIdentityDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityDefinitionOutput).ToManagedIdentityDefinitionPtrOutputWithContext(ctx)
}

// ManagedIdentityDefinitionPtrInput is an input type that accepts ManagedIdentityDefinitionArgs, ManagedIdentityDefinitionPtr and ManagedIdentityDefinitionPtrOutput values.
// You can construct a concrete instance of `ManagedIdentityDefinitionPtrInput` via:
//
//	        ManagedIdentityDefinitionArgs{...}
//
//	or:
//
//	        nil
type ManagedIdentityDefinitionPtrInput interface {
	pulumi.Input

	ToManagedIdentityDefinitionPtrOutput() ManagedIdentityDefinitionPtrOutput
	ToManagedIdentityDefinitionPtrOutputWithContext(context.Context) ManagedIdentityDefinitionPtrOutput
}

type managedIdentityDefinitionPtrType ManagedIdentityDefinitionArgs

func ManagedIdentityDefinitionPtr(v *ManagedIdentityDefinitionArgs) ManagedIdentityDefinitionPtrInput {
	return (*managedIdentityDefinitionPtrType)(v)
}

func (*managedIdentityDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityDefinition)(nil)).Elem()
}

func (i *managedIdentityDefinitionPtrType) ToManagedIdentityDefinitionPtrOutput() ManagedIdentityDefinitionPtrOutput {
	return i.ToManagedIdentityDefinitionPtrOutputWithContext(context.Background())
}

func (i *managedIdentityDefinitionPtrType) ToManagedIdentityDefinitionPtrOutputWithContext(ctx context.Context) ManagedIdentityDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedIdentityDefinitionPtrOutput)
}

// Parameters to authenticate using a Managed Identity.
type ManagedIdentityDefinitionOutput struct{ *pulumi.OutputState }

func (ManagedIdentityDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityDefinition)(nil)).Elem()
}

func (o ManagedIdentityDefinitionOutput) ToManagedIdentityDefinitionOutput() ManagedIdentityDefinitionOutput {
	return o
}

func (o ManagedIdentityDefinitionOutput) ToManagedIdentityDefinitionOutputWithContext(ctx context.Context) ManagedIdentityDefinitionOutput {
	return o
}

func (o ManagedIdentityDefinitionOutput) ToManagedIdentityDefinitionPtrOutput() ManagedIdentityDefinitionPtrOutput {
	return o.ToManagedIdentityDefinitionPtrOutputWithContext(context.Background())
}

func (o ManagedIdentityDefinitionOutput) ToManagedIdentityDefinitionPtrOutputWithContext(ctx context.Context) ManagedIdentityDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedIdentityDefinition) *ManagedIdentityDefinition {
		return &v
	}).(ManagedIdentityDefinitionPtrOutput)
}

// The client Id for authenticating a Managed Identity.
func (o ManagedIdentityDefinitionOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityDefinition) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

type ManagedIdentityDefinitionPtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityDefinition)(nil)).Elem()
}

func (o ManagedIdentityDefinitionPtrOutput) ToManagedIdentityDefinitionPtrOutput() ManagedIdentityDefinitionPtrOutput {
	return o
}

func (o ManagedIdentityDefinitionPtrOutput) ToManagedIdentityDefinitionPtrOutputWithContext(ctx context.Context) ManagedIdentityDefinitionPtrOutput {
	return o
}

func (o ManagedIdentityDefinitionPtrOutput) Elem() ManagedIdentityDefinitionOutput {
	return o.ApplyT(func(v *ManagedIdentityDefinition) ManagedIdentityDefinition {
		if v != nil {
			return *v
		}
		var ret ManagedIdentityDefinition
		return ret
	}).(ManagedIdentityDefinitionOutput)
}

// The client Id for authenticating a Managed Identity.
func (o ManagedIdentityDefinitionPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Parameters to authenticate using a Managed Identity.
type ManagedIdentityDefinitionResponse struct {
	// The client Id for authenticating a Managed Identity.
	ClientId *string `pulumi:"clientId"`
}

// Parameters to authenticate using a Managed Identity.
type ManagedIdentityDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ManagedIdentityDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedIdentityDefinitionResponse)(nil)).Elem()
}

func (o ManagedIdentityDefinitionResponseOutput) ToManagedIdentityDefinitionResponseOutput() ManagedIdentityDefinitionResponseOutput {
	return o
}

func (o ManagedIdentityDefinitionResponseOutput) ToManagedIdentityDefinitionResponseOutputWithContext(ctx context.Context) ManagedIdentityDefinitionResponseOutput {
	return o
}

// The client Id for authenticating a Managed Identity.
func (o ManagedIdentityDefinitionResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedIdentityDefinitionResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

type ManagedIdentityDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedIdentityDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedIdentityDefinitionResponse)(nil)).Elem()
}

func (o ManagedIdentityDefinitionResponsePtrOutput) ToManagedIdentityDefinitionResponsePtrOutput() ManagedIdentityDefinitionResponsePtrOutput {
	return o
}

func (o ManagedIdentityDefinitionResponsePtrOutput) ToManagedIdentityDefinitionResponsePtrOutputWithContext(ctx context.Context) ManagedIdentityDefinitionResponsePtrOutput {
	return o
}

func (o ManagedIdentityDefinitionResponsePtrOutput) Elem() ManagedIdentityDefinitionResponseOutput {
	return o.ApplyT(func(v *ManagedIdentityDefinitionResponse) ManagedIdentityDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret ManagedIdentityDefinitionResponse
		return ret
	}).(ManagedIdentityDefinitionResponseOutput)
}

// The client Id for authenticating a Managed Identity.
func (o ManagedIdentityDefinitionResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedIdentityDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// MatchOIDCIdentity defines the criteria for matching the identity while verifying an OCI artifact.
type MatchOidcIdentityDefinition struct {
	// The regex pattern to match against to verify the OIDC issuer.
	Issuer *string `pulumi:"issuer"`
	// The regex pattern to match against to verify the identity subject.
	Subject *string `pulumi:"subject"`
}

// MatchOidcIdentityDefinitionInput is an input type that accepts MatchOidcIdentityDefinitionArgs and MatchOidcIdentityDefinitionOutput values.
// You can construct a concrete instance of `MatchOidcIdentityDefinitionInput` via:
//
//	MatchOidcIdentityDefinitionArgs{...}
type MatchOidcIdentityDefinitionInput interface {
	pulumi.Input

	ToMatchOidcIdentityDefinitionOutput() MatchOidcIdentityDefinitionOutput
	ToMatchOidcIdentityDefinitionOutputWithContext(context.Context) MatchOidcIdentityDefinitionOutput
}

// MatchOIDCIdentity defines the criteria for matching the identity while verifying an OCI artifact.
type MatchOidcIdentityDefinitionArgs struct {
	// The regex pattern to match against to verify the OIDC issuer.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// The regex pattern to match against to verify the identity subject.
	Subject pulumi.StringPtrInput `pulumi:"subject"`
}

func (MatchOidcIdentityDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchOidcIdentityDefinition)(nil)).Elem()
}

func (i MatchOidcIdentityDefinitionArgs) ToMatchOidcIdentityDefinitionOutput() MatchOidcIdentityDefinitionOutput {
	return i.ToMatchOidcIdentityDefinitionOutputWithContext(context.Background())
}

func (i MatchOidcIdentityDefinitionArgs) ToMatchOidcIdentityDefinitionOutputWithContext(ctx context.Context) MatchOidcIdentityDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchOidcIdentityDefinitionOutput)
}

// MatchOidcIdentityDefinitionArrayInput is an input type that accepts MatchOidcIdentityDefinitionArray and MatchOidcIdentityDefinitionArrayOutput values.
// You can construct a concrete instance of `MatchOidcIdentityDefinitionArrayInput` via:
//
//	MatchOidcIdentityDefinitionArray{ MatchOidcIdentityDefinitionArgs{...} }
type MatchOidcIdentityDefinitionArrayInput interface {
	pulumi.Input

	ToMatchOidcIdentityDefinitionArrayOutput() MatchOidcIdentityDefinitionArrayOutput
	ToMatchOidcIdentityDefinitionArrayOutputWithContext(context.Context) MatchOidcIdentityDefinitionArrayOutput
}

type MatchOidcIdentityDefinitionArray []MatchOidcIdentityDefinitionInput

func (MatchOidcIdentityDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchOidcIdentityDefinition)(nil)).Elem()
}

func (i MatchOidcIdentityDefinitionArray) ToMatchOidcIdentityDefinitionArrayOutput() MatchOidcIdentityDefinitionArrayOutput {
	return i.ToMatchOidcIdentityDefinitionArrayOutputWithContext(context.Background())
}

func (i MatchOidcIdentityDefinitionArray) ToMatchOidcIdentityDefinitionArrayOutputWithContext(ctx context.Context) MatchOidcIdentityDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchOidcIdentityDefinitionArrayOutput)
}

// MatchOIDCIdentity defines the criteria for matching the identity while verifying an OCI artifact.
type MatchOidcIdentityDefinitionOutput struct{ *pulumi.OutputState }

func (MatchOidcIdentityDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchOidcIdentityDefinition)(nil)).Elem()
}

func (o MatchOidcIdentityDefinitionOutput) ToMatchOidcIdentityDefinitionOutput() MatchOidcIdentityDefinitionOutput {
	return o
}

func (o MatchOidcIdentityDefinitionOutput) ToMatchOidcIdentityDefinitionOutputWithContext(ctx context.Context) MatchOidcIdentityDefinitionOutput {
	return o
}

// The regex pattern to match against to verify the OIDC issuer.
func (o MatchOidcIdentityDefinitionOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatchOidcIdentityDefinition) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// The regex pattern to match against to verify the identity subject.
func (o MatchOidcIdentityDefinitionOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatchOidcIdentityDefinition) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

type MatchOidcIdentityDefinitionArrayOutput struct{ *pulumi.OutputState }

func (MatchOidcIdentityDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchOidcIdentityDefinition)(nil)).Elem()
}

func (o MatchOidcIdentityDefinitionArrayOutput) ToMatchOidcIdentityDefinitionArrayOutput() MatchOidcIdentityDefinitionArrayOutput {
	return o
}

func (o MatchOidcIdentityDefinitionArrayOutput) ToMatchOidcIdentityDefinitionArrayOutputWithContext(ctx context.Context) MatchOidcIdentityDefinitionArrayOutput {
	return o
}

func (o MatchOidcIdentityDefinitionArrayOutput) Index(i pulumi.IntInput) MatchOidcIdentityDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchOidcIdentityDefinition {
		return vs[0].([]MatchOidcIdentityDefinition)[vs[1].(int)]
	}).(MatchOidcIdentityDefinitionOutput)
}

// MatchOIDCIdentity defines the criteria for matching the identity while verifying an OCI artifact.
type MatchOidcIdentityDefinitionResponse struct {
	// The regex pattern to match against to verify the OIDC issuer.
	Issuer *string `pulumi:"issuer"`
	// The regex pattern to match against to verify the identity subject.
	Subject *string `pulumi:"subject"`
}

// MatchOIDCIdentity defines the criteria for matching the identity while verifying an OCI artifact.
type MatchOidcIdentityDefinitionResponseOutput struct{ *pulumi.OutputState }

func (MatchOidcIdentityDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchOidcIdentityDefinitionResponse)(nil)).Elem()
}

func (o MatchOidcIdentityDefinitionResponseOutput) ToMatchOidcIdentityDefinitionResponseOutput() MatchOidcIdentityDefinitionResponseOutput {
	return o
}

func (o MatchOidcIdentityDefinitionResponseOutput) ToMatchOidcIdentityDefinitionResponseOutputWithContext(ctx context.Context) MatchOidcIdentityDefinitionResponseOutput {
	return o
}

// The regex pattern to match against to verify the OIDC issuer.
func (o MatchOidcIdentityDefinitionResponseOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatchOidcIdentityDefinitionResponse) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// The regex pattern to match against to verify the identity subject.
func (o MatchOidcIdentityDefinitionResponseOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatchOidcIdentityDefinitionResponse) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

type MatchOidcIdentityDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (MatchOidcIdentityDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchOidcIdentityDefinitionResponse)(nil)).Elem()
}

func (o MatchOidcIdentityDefinitionResponseArrayOutput) ToMatchOidcIdentityDefinitionResponseArrayOutput() MatchOidcIdentityDefinitionResponseArrayOutput {
	return o
}

func (o MatchOidcIdentityDefinitionResponseArrayOutput) ToMatchOidcIdentityDefinitionResponseArrayOutputWithContext(ctx context.Context) MatchOidcIdentityDefinitionResponseArrayOutput {
	return o
}

func (o MatchOidcIdentityDefinitionResponseArrayOutput) Index(i pulumi.IntInput) MatchOidcIdentityDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchOidcIdentityDefinitionResponse {
		return vs[0].([]MatchOidcIdentityDefinitionResponse)[vs[1].(int)]
	}).(MatchOidcIdentityDefinitionResponseOutput)
}

// Parameters to reconcile to the OCIRepository source kind type.
type OCIRepositoryDefinition struct {
	// Specify whether to allow connecting to a non-TLS HTTP container registry.
	Insecure *bool `pulumi:"insecure"`
	// The layer to be pulled from the OCI artifact.
	LayerSelector *LayerSelectorDefinition `pulumi:"layerSelector"`
	// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
	LocalAuthRef *string `pulumi:"localAuthRef"`
	// The source reference for the OCIRepository object.
	RepositoryRef *OCIRepositoryRefDefinition `pulumi:"repositoryRef"`
	// The service account name to authenticate with the OCI repository.
	ServiceAccountName *string `pulumi:"serviceAccountName"`
	// The interval at which to re-reconcile the cluster OCI repository source with the remote.
	SyncIntervalInSeconds *float64 `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the cluster OCI repository source with the remote.
	TimeoutInSeconds *float64 `pulumi:"timeoutInSeconds"`
	// Parameters to authenticate using TLS config for OCI repository.
	TlsConfig *TlsConfigDefinition `pulumi:"tlsConfig"`
	// The URL to sync for the flux configuration OCI repository.
	Url *string `pulumi:"url"`
	// Specifies whether to use Workload Identity to authenticate with the OCI repository.
	UseWorkloadIdentity *bool `pulumi:"useWorkloadIdentity"`
	// Verification of the authenticity of an OCI Artifact.
	Verify *VerifyDefinition `pulumi:"verify"`
}

// Defaults sets the appropriate defaults for OCIRepositoryDefinition
func (val *OCIRepositoryDefinition) Defaults() *OCIRepositoryDefinition {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Insecure == nil {
		insecure_ := false
		tmp.Insecure = &insecure_
	}
	if tmp.SyncIntervalInSeconds == nil {
		syncIntervalInSeconds_ := 600.0
		tmp.SyncIntervalInSeconds = &syncIntervalInSeconds_
	}
	if tmp.TimeoutInSeconds == nil {
		timeoutInSeconds_ := 600.0
		tmp.TimeoutInSeconds = &timeoutInSeconds_
	}
	if tmp.UseWorkloadIdentity == nil {
		useWorkloadIdentity_ := false
		tmp.UseWorkloadIdentity = &useWorkloadIdentity_
	}
	return &tmp
}

// OCIRepositoryDefinitionInput is an input type that accepts OCIRepositoryDefinitionArgs and OCIRepositoryDefinitionOutput values.
// You can construct a concrete instance of `OCIRepositoryDefinitionInput` via:
//
//	OCIRepositoryDefinitionArgs{...}
type OCIRepositoryDefinitionInput interface {
	pulumi.Input

	ToOCIRepositoryDefinitionOutput() OCIRepositoryDefinitionOutput
	ToOCIRepositoryDefinitionOutputWithContext(context.Context) OCIRepositoryDefinitionOutput
}

// Parameters to reconcile to the OCIRepository source kind type.
type OCIRepositoryDefinitionArgs struct {
	// Specify whether to allow connecting to a non-TLS HTTP container registry.
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// The layer to be pulled from the OCI artifact.
	LayerSelector LayerSelectorDefinitionPtrInput `pulumi:"layerSelector"`
	// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
	LocalAuthRef pulumi.StringPtrInput `pulumi:"localAuthRef"`
	// The source reference for the OCIRepository object.
	RepositoryRef OCIRepositoryRefDefinitionPtrInput `pulumi:"repositoryRef"`
	// The service account name to authenticate with the OCI repository.
	ServiceAccountName pulumi.StringPtrInput `pulumi:"serviceAccountName"`
	// The interval at which to re-reconcile the cluster OCI repository source with the remote.
	SyncIntervalInSeconds pulumi.Float64PtrInput `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the cluster OCI repository source with the remote.
	TimeoutInSeconds pulumi.Float64PtrInput `pulumi:"timeoutInSeconds"`
	// Parameters to authenticate using TLS config for OCI repository.
	TlsConfig TlsConfigDefinitionPtrInput `pulumi:"tlsConfig"`
	// The URL to sync for the flux configuration OCI repository.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// Specifies whether to use Workload Identity to authenticate with the OCI repository.
	UseWorkloadIdentity pulumi.BoolPtrInput `pulumi:"useWorkloadIdentity"`
	// Verification of the authenticity of an OCI Artifact.
	Verify VerifyDefinitionPtrInput `pulumi:"verify"`
}

// Defaults sets the appropriate defaults for OCIRepositoryDefinitionArgs
func (val *OCIRepositoryDefinitionArgs) Defaults() *OCIRepositoryDefinitionArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Insecure == nil {
		tmp.Insecure = pulumi.BoolPtr(false)
	}
	if tmp.SyncIntervalInSeconds == nil {
		tmp.SyncIntervalInSeconds = pulumi.Float64Ptr(600.0)
	}
	if tmp.TimeoutInSeconds == nil {
		tmp.TimeoutInSeconds = pulumi.Float64Ptr(600.0)
	}
	if tmp.UseWorkloadIdentity == nil {
		tmp.UseWorkloadIdentity = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (OCIRepositoryDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OCIRepositoryDefinition)(nil)).Elem()
}

func (i OCIRepositoryDefinitionArgs) ToOCIRepositoryDefinitionOutput() OCIRepositoryDefinitionOutput {
	return i.ToOCIRepositoryDefinitionOutputWithContext(context.Background())
}

func (i OCIRepositoryDefinitionArgs) ToOCIRepositoryDefinitionOutputWithContext(ctx context.Context) OCIRepositoryDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OCIRepositoryDefinitionOutput)
}

func (i OCIRepositoryDefinitionArgs) ToOCIRepositoryDefinitionPtrOutput() OCIRepositoryDefinitionPtrOutput {
	return i.ToOCIRepositoryDefinitionPtrOutputWithContext(context.Background())
}

func (i OCIRepositoryDefinitionArgs) ToOCIRepositoryDefinitionPtrOutputWithContext(ctx context.Context) OCIRepositoryDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OCIRepositoryDefinitionOutput).ToOCIRepositoryDefinitionPtrOutputWithContext(ctx)
}

// OCIRepositoryDefinitionPtrInput is an input type that accepts OCIRepositoryDefinitionArgs, OCIRepositoryDefinitionPtr and OCIRepositoryDefinitionPtrOutput values.
// You can construct a concrete instance of `OCIRepositoryDefinitionPtrInput` via:
//
//	        OCIRepositoryDefinitionArgs{...}
//
//	or:
//
//	        nil
type OCIRepositoryDefinitionPtrInput interface {
	pulumi.Input

	ToOCIRepositoryDefinitionPtrOutput() OCIRepositoryDefinitionPtrOutput
	ToOCIRepositoryDefinitionPtrOutputWithContext(context.Context) OCIRepositoryDefinitionPtrOutput
}

type ocirepositoryDefinitionPtrType OCIRepositoryDefinitionArgs

func OCIRepositoryDefinitionPtr(v *OCIRepositoryDefinitionArgs) OCIRepositoryDefinitionPtrInput {
	return (*ocirepositoryDefinitionPtrType)(v)
}

func (*ocirepositoryDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OCIRepositoryDefinition)(nil)).Elem()
}

func (i *ocirepositoryDefinitionPtrType) ToOCIRepositoryDefinitionPtrOutput() OCIRepositoryDefinitionPtrOutput {
	return i.ToOCIRepositoryDefinitionPtrOutputWithContext(context.Background())
}

func (i *ocirepositoryDefinitionPtrType) ToOCIRepositoryDefinitionPtrOutputWithContext(ctx context.Context) OCIRepositoryDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OCIRepositoryDefinitionPtrOutput)
}

// Parameters to reconcile to the OCIRepository source kind type.
type OCIRepositoryDefinitionOutput struct{ *pulumi.OutputState }

func (OCIRepositoryDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OCIRepositoryDefinition)(nil)).Elem()
}

func (o OCIRepositoryDefinitionOutput) ToOCIRepositoryDefinitionOutput() OCIRepositoryDefinitionOutput {
	return o
}

func (o OCIRepositoryDefinitionOutput) ToOCIRepositoryDefinitionOutputWithContext(ctx context.Context) OCIRepositoryDefinitionOutput {
	return o
}

func (o OCIRepositoryDefinitionOutput) ToOCIRepositoryDefinitionPtrOutput() OCIRepositoryDefinitionPtrOutput {
	return o.ToOCIRepositoryDefinitionPtrOutputWithContext(context.Background())
}

func (o OCIRepositoryDefinitionOutput) ToOCIRepositoryDefinitionPtrOutputWithContext(ctx context.Context) OCIRepositoryDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OCIRepositoryDefinition) *OCIRepositoryDefinition {
		return &v
	}).(OCIRepositoryDefinitionPtrOutput)
}

// Specify whether to allow connecting to a non-TLS HTTP container registry.
func (o OCIRepositoryDefinitionOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinition) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// The layer to be pulled from the OCI artifact.
func (o OCIRepositoryDefinitionOutput) LayerSelector() LayerSelectorDefinitionPtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinition) *LayerSelectorDefinition { return v.LayerSelector }).(LayerSelectorDefinitionPtrOutput)
}

// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o OCIRepositoryDefinitionOutput) LocalAuthRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinition) *string { return v.LocalAuthRef }).(pulumi.StringPtrOutput)
}

// The source reference for the OCIRepository object.
func (o OCIRepositoryDefinitionOutput) RepositoryRef() OCIRepositoryRefDefinitionPtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinition) *OCIRepositoryRefDefinition { return v.RepositoryRef }).(OCIRepositoryRefDefinitionPtrOutput)
}

// The service account name to authenticate with the OCI repository.
func (o OCIRepositoryDefinitionOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinition) *string { return v.ServiceAccountName }).(pulumi.StringPtrOutput)
}

// The interval at which to re-reconcile the cluster OCI repository source with the remote.
func (o OCIRepositoryDefinitionOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinition) *float64 { return v.SyncIntervalInSeconds }).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the cluster OCI repository source with the remote.
func (o OCIRepositoryDefinitionOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinition) *float64 { return v.TimeoutInSeconds }).(pulumi.Float64PtrOutput)
}

// Parameters to authenticate using TLS config for OCI repository.
func (o OCIRepositoryDefinitionOutput) TlsConfig() TlsConfigDefinitionPtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinition) *TlsConfigDefinition { return v.TlsConfig }).(TlsConfigDefinitionPtrOutput)
}

// The URL to sync for the flux configuration OCI repository.
func (o OCIRepositoryDefinitionOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinition) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Specifies whether to use Workload Identity to authenticate with the OCI repository.
func (o OCIRepositoryDefinitionOutput) UseWorkloadIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinition) *bool { return v.UseWorkloadIdentity }).(pulumi.BoolPtrOutput)
}

// Verification of the authenticity of an OCI Artifact.
func (o OCIRepositoryDefinitionOutput) Verify() VerifyDefinitionPtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinition) *VerifyDefinition { return v.Verify }).(VerifyDefinitionPtrOutput)
}

type OCIRepositoryDefinitionPtrOutput struct{ *pulumi.OutputState }

func (OCIRepositoryDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OCIRepositoryDefinition)(nil)).Elem()
}

func (o OCIRepositoryDefinitionPtrOutput) ToOCIRepositoryDefinitionPtrOutput() OCIRepositoryDefinitionPtrOutput {
	return o
}

func (o OCIRepositoryDefinitionPtrOutput) ToOCIRepositoryDefinitionPtrOutputWithContext(ctx context.Context) OCIRepositoryDefinitionPtrOutput {
	return o
}

func (o OCIRepositoryDefinitionPtrOutput) Elem() OCIRepositoryDefinitionOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinition) OCIRepositoryDefinition {
		if v != nil {
			return *v
		}
		var ret OCIRepositoryDefinition
		return ret
	}).(OCIRepositoryDefinitionOutput)
}

// Specify whether to allow connecting to a non-TLS HTTP container registry.
func (o OCIRepositoryDefinitionPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// The layer to be pulled from the OCI artifact.
func (o OCIRepositoryDefinitionPtrOutput) LayerSelector() LayerSelectorDefinitionPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinition) *LayerSelectorDefinition {
		if v == nil {
			return nil
		}
		return v.LayerSelector
	}).(LayerSelectorDefinitionPtrOutput)
}

// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o OCIRepositoryDefinitionPtrOutput) LocalAuthRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinition) *string {
		if v == nil {
			return nil
		}
		return v.LocalAuthRef
	}).(pulumi.StringPtrOutput)
}

// The source reference for the OCIRepository object.
func (o OCIRepositoryDefinitionPtrOutput) RepositoryRef() OCIRepositoryRefDefinitionPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinition) *OCIRepositoryRefDefinition {
		if v == nil {
			return nil
		}
		return v.RepositoryRef
	}).(OCIRepositoryRefDefinitionPtrOutput)
}

// The service account name to authenticate with the OCI repository.
func (o OCIRepositoryDefinitionPtrOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountName
	}).(pulumi.StringPtrOutput)
}

// The interval at which to re-reconcile the cluster OCI repository source with the remote.
func (o OCIRepositoryDefinitionPtrOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinition) *float64 {
		if v == nil {
			return nil
		}
		return v.SyncIntervalInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the cluster OCI repository source with the remote.
func (o OCIRepositoryDefinitionPtrOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinition) *float64 {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.Float64PtrOutput)
}

// Parameters to authenticate using TLS config for OCI repository.
func (o OCIRepositoryDefinitionPtrOutput) TlsConfig() TlsConfigDefinitionPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinition) *TlsConfigDefinition {
		if v == nil {
			return nil
		}
		return v.TlsConfig
	}).(TlsConfigDefinitionPtrOutput)
}

// The URL to sync for the flux configuration OCI repository.
func (o OCIRepositoryDefinitionPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Specifies whether to use Workload Identity to authenticate with the OCI repository.
func (o OCIRepositoryDefinitionPtrOutput) UseWorkloadIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.UseWorkloadIdentity
	}).(pulumi.BoolPtrOutput)
}

// Verification of the authenticity of an OCI Artifact.
func (o OCIRepositoryDefinitionPtrOutput) Verify() VerifyDefinitionPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinition) *VerifyDefinition {
		if v == nil {
			return nil
		}
		return v.Verify
	}).(VerifyDefinitionPtrOutput)
}

// Parameters to reconcile to the OCIRepository source kind type.
type OCIRepositoryDefinitionResponse struct {
	// Specify whether to allow connecting to a non-TLS HTTP container registry.
	Insecure *bool `pulumi:"insecure"`
	// The layer to be pulled from the OCI artifact.
	LayerSelector *LayerSelectorDefinitionResponse `pulumi:"layerSelector"`
	// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
	LocalAuthRef *string `pulumi:"localAuthRef"`
	// The source reference for the OCIRepository object.
	RepositoryRef *OCIRepositoryRefDefinitionResponse `pulumi:"repositoryRef"`
	// The service account name to authenticate with the OCI repository.
	ServiceAccountName *string `pulumi:"serviceAccountName"`
	// The interval at which to re-reconcile the cluster OCI repository source with the remote.
	SyncIntervalInSeconds *float64 `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the cluster OCI repository source with the remote.
	TimeoutInSeconds *float64 `pulumi:"timeoutInSeconds"`
	// Parameters to authenticate using TLS config for OCI repository.
	TlsConfig *TlsConfigDefinitionResponse `pulumi:"tlsConfig"`
	// The URL to sync for the flux configuration OCI repository.
	Url *string `pulumi:"url"`
	// Specifies whether to use Workload Identity to authenticate with the OCI repository.
	UseWorkloadIdentity *bool `pulumi:"useWorkloadIdentity"`
	// Verification of the authenticity of an OCI Artifact.
	Verify *VerifyDefinitionResponse `pulumi:"verify"`
}

// Defaults sets the appropriate defaults for OCIRepositoryDefinitionResponse
func (val *OCIRepositoryDefinitionResponse) Defaults() *OCIRepositoryDefinitionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Insecure == nil {
		insecure_ := false
		tmp.Insecure = &insecure_
	}
	if tmp.SyncIntervalInSeconds == nil {
		syncIntervalInSeconds_ := 600.0
		tmp.SyncIntervalInSeconds = &syncIntervalInSeconds_
	}
	if tmp.TimeoutInSeconds == nil {
		timeoutInSeconds_ := 600.0
		tmp.TimeoutInSeconds = &timeoutInSeconds_
	}
	if tmp.UseWorkloadIdentity == nil {
		useWorkloadIdentity_ := false
		tmp.UseWorkloadIdentity = &useWorkloadIdentity_
	}
	return &tmp
}

// Parameters to reconcile to the OCIRepository source kind type.
type OCIRepositoryDefinitionResponseOutput struct{ *pulumi.OutputState }

func (OCIRepositoryDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OCIRepositoryDefinitionResponse)(nil)).Elem()
}

func (o OCIRepositoryDefinitionResponseOutput) ToOCIRepositoryDefinitionResponseOutput() OCIRepositoryDefinitionResponseOutput {
	return o
}

func (o OCIRepositoryDefinitionResponseOutput) ToOCIRepositoryDefinitionResponseOutputWithContext(ctx context.Context) OCIRepositoryDefinitionResponseOutput {
	return o
}

// Specify whether to allow connecting to a non-TLS HTTP container registry.
func (o OCIRepositoryDefinitionResponseOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinitionResponse) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// The layer to be pulled from the OCI artifact.
func (o OCIRepositoryDefinitionResponseOutput) LayerSelector() LayerSelectorDefinitionResponsePtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinitionResponse) *LayerSelectorDefinitionResponse { return v.LayerSelector }).(LayerSelectorDefinitionResponsePtrOutput)
}

// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o OCIRepositoryDefinitionResponseOutput) LocalAuthRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinitionResponse) *string { return v.LocalAuthRef }).(pulumi.StringPtrOutput)
}

// The source reference for the OCIRepository object.
func (o OCIRepositoryDefinitionResponseOutput) RepositoryRef() OCIRepositoryRefDefinitionResponsePtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinitionResponse) *OCIRepositoryRefDefinitionResponse { return v.RepositoryRef }).(OCIRepositoryRefDefinitionResponsePtrOutput)
}

// The service account name to authenticate with the OCI repository.
func (o OCIRepositoryDefinitionResponseOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinitionResponse) *string { return v.ServiceAccountName }).(pulumi.StringPtrOutput)
}

// The interval at which to re-reconcile the cluster OCI repository source with the remote.
func (o OCIRepositoryDefinitionResponseOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinitionResponse) *float64 { return v.SyncIntervalInSeconds }).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the cluster OCI repository source with the remote.
func (o OCIRepositoryDefinitionResponseOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinitionResponse) *float64 { return v.TimeoutInSeconds }).(pulumi.Float64PtrOutput)
}

// Parameters to authenticate using TLS config for OCI repository.
func (o OCIRepositoryDefinitionResponseOutput) TlsConfig() TlsConfigDefinitionResponsePtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinitionResponse) *TlsConfigDefinitionResponse { return v.TlsConfig }).(TlsConfigDefinitionResponsePtrOutput)
}

// The URL to sync for the flux configuration OCI repository.
func (o OCIRepositoryDefinitionResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinitionResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Specifies whether to use Workload Identity to authenticate with the OCI repository.
func (o OCIRepositoryDefinitionResponseOutput) UseWorkloadIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinitionResponse) *bool { return v.UseWorkloadIdentity }).(pulumi.BoolPtrOutput)
}

// Verification of the authenticity of an OCI Artifact.
func (o OCIRepositoryDefinitionResponseOutput) Verify() VerifyDefinitionResponsePtrOutput {
	return o.ApplyT(func(v OCIRepositoryDefinitionResponse) *VerifyDefinitionResponse { return v.Verify }).(VerifyDefinitionResponsePtrOutput)
}

type OCIRepositoryDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (OCIRepositoryDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OCIRepositoryDefinitionResponse)(nil)).Elem()
}

func (o OCIRepositoryDefinitionResponsePtrOutput) ToOCIRepositoryDefinitionResponsePtrOutput() OCIRepositoryDefinitionResponsePtrOutput {
	return o
}

func (o OCIRepositoryDefinitionResponsePtrOutput) ToOCIRepositoryDefinitionResponsePtrOutputWithContext(ctx context.Context) OCIRepositoryDefinitionResponsePtrOutput {
	return o
}

func (o OCIRepositoryDefinitionResponsePtrOutput) Elem() OCIRepositoryDefinitionResponseOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinitionResponse) OCIRepositoryDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret OCIRepositoryDefinitionResponse
		return ret
	}).(OCIRepositoryDefinitionResponseOutput)
}

// Specify whether to allow connecting to a non-TLS HTTP container registry.
func (o OCIRepositoryDefinitionResponsePtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinitionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// The layer to be pulled from the OCI artifact.
func (o OCIRepositoryDefinitionResponsePtrOutput) LayerSelector() LayerSelectorDefinitionResponsePtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinitionResponse) *LayerSelectorDefinitionResponse {
		if v == nil {
			return nil
		}
		return v.LayerSelector
	}).(LayerSelectorDefinitionResponsePtrOutput)
}

// Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o OCIRepositoryDefinitionResponsePtrOutput) LocalAuthRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.LocalAuthRef
	}).(pulumi.StringPtrOutput)
}

// The source reference for the OCIRepository object.
func (o OCIRepositoryDefinitionResponsePtrOutput) RepositoryRef() OCIRepositoryRefDefinitionResponsePtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinitionResponse) *OCIRepositoryRefDefinitionResponse {
		if v == nil {
			return nil
		}
		return v.RepositoryRef
	}).(OCIRepositoryRefDefinitionResponsePtrOutput)
}

// The service account name to authenticate with the OCI repository.
func (o OCIRepositoryDefinitionResponsePtrOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountName
	}).(pulumi.StringPtrOutput)
}

// The interval at which to re-reconcile the cluster OCI repository source with the remote.
func (o OCIRepositoryDefinitionResponsePtrOutput) SyncIntervalInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinitionResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.SyncIntervalInSeconds
	}).(pulumi.Float64PtrOutput)
}

// The maximum time to attempt to reconcile the cluster OCI repository source with the remote.
func (o OCIRepositoryDefinitionResponsePtrOutput) TimeoutInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinitionResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.Float64PtrOutput)
}

// Parameters to authenticate using TLS config for OCI repository.
func (o OCIRepositoryDefinitionResponsePtrOutput) TlsConfig() TlsConfigDefinitionResponsePtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinitionResponse) *TlsConfigDefinitionResponse {
		if v == nil {
			return nil
		}
		return v.TlsConfig
	}).(TlsConfigDefinitionResponsePtrOutput)
}

// The URL to sync for the flux configuration OCI repository.
func (o OCIRepositoryDefinitionResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Specifies whether to use Workload Identity to authenticate with the OCI repository.
func (o OCIRepositoryDefinitionResponsePtrOutput) UseWorkloadIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinitionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.UseWorkloadIdentity
	}).(pulumi.BoolPtrOutput)
}

// Verification of the authenticity of an OCI Artifact.
func (o OCIRepositoryDefinitionResponsePtrOutput) Verify() VerifyDefinitionResponsePtrOutput {
	return o.ApplyT(func(v *OCIRepositoryDefinitionResponse) *VerifyDefinitionResponse {
		if v == nil {
			return nil
		}
		return v.Verify
	}).(VerifyDefinitionResponsePtrOutput)
}

// The source reference for the OCIRepository object.
type OCIRepositoryRefDefinition struct {
	// The image digest to pull from OCI repository, the value should be in the format ‘sha256:’. This takes precedence over semver.
	Digest *string `pulumi:"digest"`
	// The semver range used to match against OCI repository tags. This takes precedence over tag.
	Semver *string `pulumi:"semver"`
	// The OCI repository image tag name to pull. This defaults to 'latest'.
	Tag *string `pulumi:"tag"`
}

// OCIRepositoryRefDefinitionInput is an input type that accepts OCIRepositoryRefDefinitionArgs and OCIRepositoryRefDefinitionOutput values.
// You can construct a concrete instance of `OCIRepositoryRefDefinitionInput` via:
//
//	OCIRepositoryRefDefinitionArgs{...}
type OCIRepositoryRefDefinitionInput interface {
	pulumi.Input

	ToOCIRepositoryRefDefinitionOutput() OCIRepositoryRefDefinitionOutput
	ToOCIRepositoryRefDefinitionOutputWithContext(context.Context) OCIRepositoryRefDefinitionOutput
}

// The source reference for the OCIRepository object.
type OCIRepositoryRefDefinitionArgs struct {
	// The image digest to pull from OCI repository, the value should be in the format ‘sha256:’. This takes precedence over semver.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// The semver range used to match against OCI repository tags. This takes precedence over tag.
	Semver pulumi.StringPtrInput `pulumi:"semver"`
	// The OCI repository image tag name to pull. This defaults to 'latest'.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (OCIRepositoryRefDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OCIRepositoryRefDefinition)(nil)).Elem()
}

func (i OCIRepositoryRefDefinitionArgs) ToOCIRepositoryRefDefinitionOutput() OCIRepositoryRefDefinitionOutput {
	return i.ToOCIRepositoryRefDefinitionOutputWithContext(context.Background())
}

func (i OCIRepositoryRefDefinitionArgs) ToOCIRepositoryRefDefinitionOutputWithContext(ctx context.Context) OCIRepositoryRefDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OCIRepositoryRefDefinitionOutput)
}

func (i OCIRepositoryRefDefinitionArgs) ToOCIRepositoryRefDefinitionPtrOutput() OCIRepositoryRefDefinitionPtrOutput {
	return i.ToOCIRepositoryRefDefinitionPtrOutputWithContext(context.Background())
}

func (i OCIRepositoryRefDefinitionArgs) ToOCIRepositoryRefDefinitionPtrOutputWithContext(ctx context.Context) OCIRepositoryRefDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OCIRepositoryRefDefinitionOutput).ToOCIRepositoryRefDefinitionPtrOutputWithContext(ctx)
}

// OCIRepositoryRefDefinitionPtrInput is an input type that accepts OCIRepositoryRefDefinitionArgs, OCIRepositoryRefDefinitionPtr and OCIRepositoryRefDefinitionPtrOutput values.
// You can construct a concrete instance of `OCIRepositoryRefDefinitionPtrInput` via:
//
//	        OCIRepositoryRefDefinitionArgs{...}
//
//	or:
//
//	        nil
type OCIRepositoryRefDefinitionPtrInput interface {
	pulumi.Input

	ToOCIRepositoryRefDefinitionPtrOutput() OCIRepositoryRefDefinitionPtrOutput
	ToOCIRepositoryRefDefinitionPtrOutputWithContext(context.Context) OCIRepositoryRefDefinitionPtrOutput
}

type ocirepositoryRefDefinitionPtrType OCIRepositoryRefDefinitionArgs

func OCIRepositoryRefDefinitionPtr(v *OCIRepositoryRefDefinitionArgs) OCIRepositoryRefDefinitionPtrInput {
	return (*ocirepositoryRefDefinitionPtrType)(v)
}

func (*ocirepositoryRefDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OCIRepositoryRefDefinition)(nil)).Elem()
}

func (i *ocirepositoryRefDefinitionPtrType) ToOCIRepositoryRefDefinitionPtrOutput() OCIRepositoryRefDefinitionPtrOutput {
	return i.ToOCIRepositoryRefDefinitionPtrOutputWithContext(context.Background())
}

func (i *ocirepositoryRefDefinitionPtrType) ToOCIRepositoryRefDefinitionPtrOutputWithContext(ctx context.Context) OCIRepositoryRefDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OCIRepositoryRefDefinitionPtrOutput)
}

// The source reference for the OCIRepository object.
type OCIRepositoryRefDefinitionOutput struct{ *pulumi.OutputState }

func (OCIRepositoryRefDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OCIRepositoryRefDefinition)(nil)).Elem()
}

func (o OCIRepositoryRefDefinitionOutput) ToOCIRepositoryRefDefinitionOutput() OCIRepositoryRefDefinitionOutput {
	return o
}

func (o OCIRepositoryRefDefinitionOutput) ToOCIRepositoryRefDefinitionOutputWithContext(ctx context.Context) OCIRepositoryRefDefinitionOutput {
	return o
}

func (o OCIRepositoryRefDefinitionOutput) ToOCIRepositoryRefDefinitionPtrOutput() OCIRepositoryRefDefinitionPtrOutput {
	return o.ToOCIRepositoryRefDefinitionPtrOutputWithContext(context.Background())
}

func (o OCIRepositoryRefDefinitionOutput) ToOCIRepositoryRefDefinitionPtrOutputWithContext(ctx context.Context) OCIRepositoryRefDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OCIRepositoryRefDefinition) *OCIRepositoryRefDefinition {
		return &v
	}).(OCIRepositoryRefDefinitionPtrOutput)
}

// The image digest to pull from OCI repository, the value should be in the format ‘sha256:’. This takes precedence over semver.
func (o OCIRepositoryRefDefinitionOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OCIRepositoryRefDefinition) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// The semver range used to match against OCI repository tags. This takes precedence over tag.
func (o OCIRepositoryRefDefinitionOutput) Semver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OCIRepositoryRefDefinition) *string { return v.Semver }).(pulumi.StringPtrOutput)
}

// The OCI repository image tag name to pull. This defaults to 'latest'.
func (o OCIRepositoryRefDefinitionOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OCIRepositoryRefDefinition) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type OCIRepositoryRefDefinitionPtrOutput struct{ *pulumi.OutputState }

func (OCIRepositoryRefDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OCIRepositoryRefDefinition)(nil)).Elem()
}

func (o OCIRepositoryRefDefinitionPtrOutput) ToOCIRepositoryRefDefinitionPtrOutput() OCIRepositoryRefDefinitionPtrOutput {
	return o
}

func (o OCIRepositoryRefDefinitionPtrOutput) ToOCIRepositoryRefDefinitionPtrOutputWithContext(ctx context.Context) OCIRepositoryRefDefinitionPtrOutput {
	return o
}

func (o OCIRepositoryRefDefinitionPtrOutput) Elem() OCIRepositoryRefDefinitionOutput {
	return o.ApplyT(func(v *OCIRepositoryRefDefinition) OCIRepositoryRefDefinition {
		if v != nil {
			return *v
		}
		var ret OCIRepositoryRefDefinition
		return ret
	}).(OCIRepositoryRefDefinitionOutput)
}

// The image digest to pull from OCI repository, the value should be in the format ‘sha256:’. This takes precedence over semver.
func (o OCIRepositoryRefDefinitionPtrOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryRefDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Digest
	}).(pulumi.StringPtrOutput)
}

// The semver range used to match against OCI repository tags. This takes precedence over tag.
func (o OCIRepositoryRefDefinitionPtrOutput) Semver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryRefDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Semver
	}).(pulumi.StringPtrOutput)
}

// The OCI repository image tag name to pull. This defaults to 'latest'.
func (o OCIRepositoryRefDefinitionPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryRefDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// The source reference for the OCIRepository object.
type OCIRepositoryRefDefinitionResponse struct {
	// The image digest to pull from OCI repository, the value should be in the format ‘sha256:’. This takes precedence over semver.
	Digest *string `pulumi:"digest"`
	// The semver range used to match against OCI repository tags. This takes precedence over tag.
	Semver *string `pulumi:"semver"`
	// The OCI repository image tag name to pull. This defaults to 'latest'.
	Tag *string `pulumi:"tag"`
}

// The source reference for the OCIRepository object.
type OCIRepositoryRefDefinitionResponseOutput struct{ *pulumi.OutputState }

func (OCIRepositoryRefDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OCIRepositoryRefDefinitionResponse)(nil)).Elem()
}

func (o OCIRepositoryRefDefinitionResponseOutput) ToOCIRepositoryRefDefinitionResponseOutput() OCIRepositoryRefDefinitionResponseOutput {
	return o
}

func (o OCIRepositoryRefDefinitionResponseOutput) ToOCIRepositoryRefDefinitionResponseOutputWithContext(ctx context.Context) OCIRepositoryRefDefinitionResponseOutput {
	return o
}

// The image digest to pull from OCI repository, the value should be in the format ‘sha256:’. This takes precedence over semver.
func (o OCIRepositoryRefDefinitionResponseOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OCIRepositoryRefDefinitionResponse) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// The semver range used to match against OCI repository tags. This takes precedence over tag.
func (o OCIRepositoryRefDefinitionResponseOutput) Semver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OCIRepositoryRefDefinitionResponse) *string { return v.Semver }).(pulumi.StringPtrOutput)
}

// The OCI repository image tag name to pull. This defaults to 'latest'.
func (o OCIRepositoryRefDefinitionResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OCIRepositoryRefDefinitionResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type OCIRepositoryRefDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (OCIRepositoryRefDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OCIRepositoryRefDefinitionResponse)(nil)).Elem()
}

func (o OCIRepositoryRefDefinitionResponsePtrOutput) ToOCIRepositoryRefDefinitionResponsePtrOutput() OCIRepositoryRefDefinitionResponsePtrOutput {
	return o
}

func (o OCIRepositoryRefDefinitionResponsePtrOutput) ToOCIRepositoryRefDefinitionResponsePtrOutputWithContext(ctx context.Context) OCIRepositoryRefDefinitionResponsePtrOutput {
	return o
}

func (o OCIRepositoryRefDefinitionResponsePtrOutput) Elem() OCIRepositoryRefDefinitionResponseOutput {
	return o.ApplyT(func(v *OCIRepositoryRefDefinitionResponse) OCIRepositoryRefDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret OCIRepositoryRefDefinitionResponse
		return ret
	}).(OCIRepositoryRefDefinitionResponseOutput)
}

// The image digest to pull from OCI repository, the value should be in the format ‘sha256:’. This takes precedence over semver.
func (o OCIRepositoryRefDefinitionResponsePtrOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryRefDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Digest
	}).(pulumi.StringPtrOutput)
}

// The semver range used to match against OCI repository tags. This takes precedence over tag.
func (o OCIRepositoryRefDefinitionResponsePtrOutput) Semver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryRefDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Semver
	}).(pulumi.StringPtrOutput)
}

// The OCI repository image tag name to pull. This defaults to 'latest'.
func (o OCIRepositoryRefDefinitionResponsePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OCIRepositoryRefDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// Object reference to a Kubernetes object on a cluster
type ObjectReferenceDefinitionResponse struct {
	// Name of the object
	Name *string `pulumi:"name"`
	// Namespace of the object
	Namespace *string `pulumi:"namespace"`
}

// Object reference to a Kubernetes object on a cluster
type ObjectReferenceDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ObjectReferenceDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectReferenceDefinitionResponse)(nil)).Elem()
}

func (o ObjectReferenceDefinitionResponseOutput) ToObjectReferenceDefinitionResponseOutput() ObjectReferenceDefinitionResponseOutput {
	return o
}

func (o ObjectReferenceDefinitionResponseOutput) ToObjectReferenceDefinitionResponseOutputWithContext(ctx context.Context) ObjectReferenceDefinitionResponseOutput {
	return o
}

// Name of the object
func (o ObjectReferenceDefinitionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectReferenceDefinitionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the object
func (o ObjectReferenceDefinitionResponseOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectReferenceDefinitionResponse) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ObjectReferenceDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (ObjectReferenceDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectReferenceDefinitionResponse)(nil)).Elem()
}

func (o ObjectReferenceDefinitionResponsePtrOutput) ToObjectReferenceDefinitionResponsePtrOutput() ObjectReferenceDefinitionResponsePtrOutput {
	return o
}

func (o ObjectReferenceDefinitionResponsePtrOutput) ToObjectReferenceDefinitionResponsePtrOutputWithContext(ctx context.Context) ObjectReferenceDefinitionResponsePtrOutput {
	return o
}

func (o ObjectReferenceDefinitionResponsePtrOutput) Elem() ObjectReferenceDefinitionResponseOutput {
	return o.ApplyT(func(v *ObjectReferenceDefinitionResponse) ObjectReferenceDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret ObjectReferenceDefinitionResponse
		return ret
	}).(ObjectReferenceDefinitionResponseOutput)
}

// Name of the object
func (o ObjectReferenceDefinitionResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectReferenceDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the object
func (o ObjectReferenceDefinitionResponsePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectReferenceDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Status condition of Kubernetes object
type ObjectStatusConditionDefinitionResponse struct {
	// Last time this status condition has changed
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// A more verbose description of the object status condition
	Message *string `pulumi:"message"`
	// Reason for the specified status condition type status
	Reason *string `pulumi:"reason"`
	// Status of the Kubernetes object condition type
	Status *string `pulumi:"status"`
	// Object status condition type for this object
	Type *string `pulumi:"type"`
}

// Status condition of Kubernetes object
type ObjectStatusConditionDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ObjectStatusConditionDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStatusConditionDefinitionResponse)(nil)).Elem()
}

func (o ObjectStatusConditionDefinitionResponseOutput) ToObjectStatusConditionDefinitionResponseOutput() ObjectStatusConditionDefinitionResponseOutput {
	return o
}

func (o ObjectStatusConditionDefinitionResponseOutput) ToObjectStatusConditionDefinitionResponseOutputWithContext(ctx context.Context) ObjectStatusConditionDefinitionResponseOutput {
	return o
}

// Last time this status condition has changed
func (o ObjectStatusConditionDefinitionResponseOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectStatusConditionDefinitionResponse) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// A more verbose description of the object status condition
func (o ObjectStatusConditionDefinitionResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectStatusConditionDefinitionResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Reason for the specified status condition type status
func (o ObjectStatusConditionDefinitionResponseOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectStatusConditionDefinitionResponse) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Status of the Kubernetes object condition type
func (o ObjectStatusConditionDefinitionResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectStatusConditionDefinitionResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Object status condition type for this object
func (o ObjectStatusConditionDefinitionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectStatusConditionDefinitionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ObjectStatusConditionDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (ObjectStatusConditionDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectStatusConditionDefinitionResponse)(nil)).Elem()
}

func (o ObjectStatusConditionDefinitionResponseArrayOutput) ToObjectStatusConditionDefinitionResponseArrayOutput() ObjectStatusConditionDefinitionResponseArrayOutput {
	return o
}

func (o ObjectStatusConditionDefinitionResponseArrayOutput) ToObjectStatusConditionDefinitionResponseArrayOutputWithContext(ctx context.Context) ObjectStatusConditionDefinitionResponseArrayOutput {
	return o
}

func (o ObjectStatusConditionDefinitionResponseArrayOutput) Index(i pulumi.IntInput) ObjectStatusConditionDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectStatusConditionDefinitionResponse {
		return vs[0].([]ObjectStatusConditionDefinitionResponse)[vs[1].(int)]
	}).(ObjectStatusConditionDefinitionResponseOutput)
}

// Statuses of objects deployed by the user-specified kustomizations from the git repository.
type ObjectStatusDefinitionResponse struct {
	// Object reference to the Kustomization that applied this object
	AppliedBy *ObjectReferenceDefinitionResponse `pulumi:"appliedBy"`
	// Compliance state of the applied object showing whether the applied object has come into a ready state on the cluster.
	ComplianceState *string `pulumi:"complianceState"`
	// Additional properties that are provided from objects of the HelmRelease kind
	HelmReleaseProperties *HelmReleasePropertiesDefinitionResponse `pulumi:"helmReleaseProperties"`
	// Kind of the applied object
	Kind *string `pulumi:"kind"`
	// Name of the applied object
	Name *string `pulumi:"name"`
	// Namespace of the applied object
	Namespace *string `pulumi:"namespace"`
	// List of Kubernetes object status conditions present on the cluster
	StatusConditions []ObjectStatusConditionDefinitionResponse `pulumi:"statusConditions"`
}

// Statuses of objects deployed by the user-specified kustomizations from the git repository.
type ObjectStatusDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ObjectStatusDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStatusDefinitionResponse)(nil)).Elem()
}

func (o ObjectStatusDefinitionResponseOutput) ToObjectStatusDefinitionResponseOutput() ObjectStatusDefinitionResponseOutput {
	return o
}

func (o ObjectStatusDefinitionResponseOutput) ToObjectStatusDefinitionResponseOutputWithContext(ctx context.Context) ObjectStatusDefinitionResponseOutput {
	return o
}

// Object reference to the Kustomization that applied this object
func (o ObjectStatusDefinitionResponseOutput) AppliedBy() ObjectReferenceDefinitionResponsePtrOutput {
	return o.ApplyT(func(v ObjectStatusDefinitionResponse) *ObjectReferenceDefinitionResponse { return v.AppliedBy }).(ObjectReferenceDefinitionResponsePtrOutput)
}

// Compliance state of the applied object showing whether the applied object has come into a ready state on the cluster.
func (o ObjectStatusDefinitionResponseOutput) ComplianceState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectStatusDefinitionResponse) *string { return v.ComplianceState }).(pulumi.StringPtrOutput)
}

// Additional properties that are provided from objects of the HelmRelease kind
func (o ObjectStatusDefinitionResponseOutput) HelmReleaseProperties() HelmReleasePropertiesDefinitionResponsePtrOutput {
	return o.ApplyT(func(v ObjectStatusDefinitionResponse) *HelmReleasePropertiesDefinitionResponse {
		return v.HelmReleaseProperties
	}).(HelmReleasePropertiesDefinitionResponsePtrOutput)
}

// Kind of the applied object
func (o ObjectStatusDefinitionResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectStatusDefinitionResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the applied object
func (o ObjectStatusDefinitionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectStatusDefinitionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the applied object
func (o ObjectStatusDefinitionResponseOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectStatusDefinitionResponse) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// List of Kubernetes object status conditions present on the cluster
func (o ObjectStatusDefinitionResponseOutput) StatusConditions() ObjectStatusConditionDefinitionResponseArrayOutput {
	return o.ApplyT(func(v ObjectStatusDefinitionResponse) []ObjectStatusConditionDefinitionResponse {
		return v.StatusConditions
	}).(ObjectStatusConditionDefinitionResponseArrayOutput)
}

type ObjectStatusDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (ObjectStatusDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectStatusDefinitionResponse)(nil)).Elem()
}

func (o ObjectStatusDefinitionResponseArrayOutput) ToObjectStatusDefinitionResponseArrayOutput() ObjectStatusDefinitionResponseArrayOutput {
	return o
}

func (o ObjectStatusDefinitionResponseArrayOutput) ToObjectStatusDefinitionResponseArrayOutputWithContext(ctx context.Context) ObjectStatusDefinitionResponseArrayOutput {
	return o
}

func (o ObjectStatusDefinitionResponseArrayOutput) Index(i pulumi.IntInput) ObjectStatusDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectStatusDefinitionResponse {
		return vs[0].([]ObjectStatusDefinitionResponse)[vs[1].(int)]
	}).(ObjectStatusDefinitionResponseOutput)
}

// The postBuild definitions defining variable substitutions for this Kustomization after kustomize build.
type PostBuildDefinition struct {
	// Key/value pairs holding the variables to be substituted in this Kustomization.
	Substitute map[string]string `pulumi:"substitute"`
	// Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
	SubstituteFrom []SubstituteFromDefinition `pulumi:"substituteFrom"`
}

// PostBuildDefinitionInput is an input type that accepts PostBuildDefinitionArgs and PostBuildDefinitionOutput values.
// You can construct a concrete instance of `PostBuildDefinitionInput` via:
//
//	PostBuildDefinitionArgs{...}
type PostBuildDefinitionInput interface {
	pulumi.Input

	ToPostBuildDefinitionOutput() PostBuildDefinitionOutput
	ToPostBuildDefinitionOutputWithContext(context.Context) PostBuildDefinitionOutput
}

// The postBuild definitions defining variable substitutions for this Kustomization after kustomize build.
type PostBuildDefinitionArgs struct {
	// Key/value pairs holding the variables to be substituted in this Kustomization.
	Substitute pulumi.StringMapInput `pulumi:"substitute"`
	// Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
	SubstituteFrom SubstituteFromDefinitionArrayInput `pulumi:"substituteFrom"`
}

func (PostBuildDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostBuildDefinition)(nil)).Elem()
}

func (i PostBuildDefinitionArgs) ToPostBuildDefinitionOutput() PostBuildDefinitionOutput {
	return i.ToPostBuildDefinitionOutputWithContext(context.Background())
}

func (i PostBuildDefinitionArgs) ToPostBuildDefinitionOutputWithContext(ctx context.Context) PostBuildDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostBuildDefinitionOutput)
}

func (i PostBuildDefinitionArgs) ToPostBuildDefinitionPtrOutput() PostBuildDefinitionPtrOutput {
	return i.ToPostBuildDefinitionPtrOutputWithContext(context.Background())
}

func (i PostBuildDefinitionArgs) ToPostBuildDefinitionPtrOutputWithContext(ctx context.Context) PostBuildDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostBuildDefinitionOutput).ToPostBuildDefinitionPtrOutputWithContext(ctx)
}

// PostBuildDefinitionPtrInput is an input type that accepts PostBuildDefinitionArgs, PostBuildDefinitionPtr and PostBuildDefinitionPtrOutput values.
// You can construct a concrete instance of `PostBuildDefinitionPtrInput` via:
//
//	        PostBuildDefinitionArgs{...}
//
//	or:
//
//	        nil
type PostBuildDefinitionPtrInput interface {
	pulumi.Input

	ToPostBuildDefinitionPtrOutput() PostBuildDefinitionPtrOutput
	ToPostBuildDefinitionPtrOutputWithContext(context.Context) PostBuildDefinitionPtrOutput
}

type postBuildDefinitionPtrType PostBuildDefinitionArgs

func PostBuildDefinitionPtr(v *PostBuildDefinitionArgs) PostBuildDefinitionPtrInput {
	return (*postBuildDefinitionPtrType)(v)
}

func (*postBuildDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PostBuildDefinition)(nil)).Elem()
}

func (i *postBuildDefinitionPtrType) ToPostBuildDefinitionPtrOutput() PostBuildDefinitionPtrOutput {
	return i.ToPostBuildDefinitionPtrOutputWithContext(context.Background())
}

func (i *postBuildDefinitionPtrType) ToPostBuildDefinitionPtrOutputWithContext(ctx context.Context) PostBuildDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostBuildDefinitionPtrOutput)
}

// The postBuild definitions defining variable substitutions for this Kustomization after kustomize build.
type PostBuildDefinitionOutput struct{ *pulumi.OutputState }

func (PostBuildDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostBuildDefinition)(nil)).Elem()
}

func (o PostBuildDefinitionOutput) ToPostBuildDefinitionOutput() PostBuildDefinitionOutput {
	return o
}

func (o PostBuildDefinitionOutput) ToPostBuildDefinitionOutputWithContext(ctx context.Context) PostBuildDefinitionOutput {
	return o
}

func (o PostBuildDefinitionOutput) ToPostBuildDefinitionPtrOutput() PostBuildDefinitionPtrOutput {
	return o.ToPostBuildDefinitionPtrOutputWithContext(context.Background())
}

func (o PostBuildDefinitionOutput) ToPostBuildDefinitionPtrOutputWithContext(ctx context.Context) PostBuildDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostBuildDefinition) *PostBuildDefinition {
		return &v
	}).(PostBuildDefinitionPtrOutput)
}

// Key/value pairs holding the variables to be substituted in this Kustomization.
func (o PostBuildDefinitionOutput) Substitute() pulumi.StringMapOutput {
	return o.ApplyT(func(v PostBuildDefinition) map[string]string { return v.Substitute }).(pulumi.StringMapOutput)
}

// Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
func (o PostBuildDefinitionOutput) SubstituteFrom() SubstituteFromDefinitionArrayOutput {
	return o.ApplyT(func(v PostBuildDefinition) []SubstituteFromDefinition { return v.SubstituteFrom }).(SubstituteFromDefinitionArrayOutput)
}

type PostBuildDefinitionPtrOutput struct{ *pulumi.OutputState }

func (PostBuildDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostBuildDefinition)(nil)).Elem()
}

func (o PostBuildDefinitionPtrOutput) ToPostBuildDefinitionPtrOutput() PostBuildDefinitionPtrOutput {
	return o
}

func (o PostBuildDefinitionPtrOutput) ToPostBuildDefinitionPtrOutputWithContext(ctx context.Context) PostBuildDefinitionPtrOutput {
	return o
}

func (o PostBuildDefinitionPtrOutput) Elem() PostBuildDefinitionOutput {
	return o.ApplyT(func(v *PostBuildDefinition) PostBuildDefinition {
		if v != nil {
			return *v
		}
		var ret PostBuildDefinition
		return ret
	}).(PostBuildDefinitionOutput)
}

// Key/value pairs holding the variables to be substituted in this Kustomization.
func (o PostBuildDefinitionPtrOutput) Substitute() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PostBuildDefinition) map[string]string {
		if v == nil {
			return nil
		}
		return v.Substitute
	}).(pulumi.StringMapOutput)
}

// Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
func (o PostBuildDefinitionPtrOutput) SubstituteFrom() SubstituteFromDefinitionArrayOutput {
	return o.ApplyT(func(v *PostBuildDefinition) []SubstituteFromDefinition {
		if v == nil {
			return nil
		}
		return v.SubstituteFrom
	}).(SubstituteFromDefinitionArrayOutput)
}

// The postBuild definitions defining variable substitutions for this Kustomization after kustomize build.
type PostBuildDefinitionResponse struct {
	// Key/value pairs holding the variables to be substituted in this Kustomization.
	Substitute map[string]string `pulumi:"substitute"`
	// Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
	SubstituteFrom []SubstituteFromDefinitionResponse `pulumi:"substituteFrom"`
}

// The postBuild definitions defining variable substitutions for this Kustomization after kustomize build.
type PostBuildDefinitionResponseOutput struct{ *pulumi.OutputState }

func (PostBuildDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostBuildDefinitionResponse)(nil)).Elem()
}

func (o PostBuildDefinitionResponseOutput) ToPostBuildDefinitionResponseOutput() PostBuildDefinitionResponseOutput {
	return o
}

func (o PostBuildDefinitionResponseOutput) ToPostBuildDefinitionResponseOutputWithContext(ctx context.Context) PostBuildDefinitionResponseOutput {
	return o
}

// Key/value pairs holding the variables to be substituted in this Kustomization.
func (o PostBuildDefinitionResponseOutput) Substitute() pulumi.StringMapOutput {
	return o.ApplyT(func(v PostBuildDefinitionResponse) map[string]string { return v.Substitute }).(pulumi.StringMapOutput)
}

// Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
func (o PostBuildDefinitionResponseOutput) SubstituteFrom() SubstituteFromDefinitionResponseArrayOutput {
	return o.ApplyT(func(v PostBuildDefinitionResponse) []SubstituteFromDefinitionResponse { return v.SubstituteFrom }).(SubstituteFromDefinitionResponseArrayOutput)
}

type PostBuildDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (PostBuildDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostBuildDefinitionResponse)(nil)).Elem()
}

func (o PostBuildDefinitionResponsePtrOutput) ToPostBuildDefinitionResponsePtrOutput() PostBuildDefinitionResponsePtrOutput {
	return o
}

func (o PostBuildDefinitionResponsePtrOutput) ToPostBuildDefinitionResponsePtrOutputWithContext(ctx context.Context) PostBuildDefinitionResponsePtrOutput {
	return o
}

func (o PostBuildDefinitionResponsePtrOutput) Elem() PostBuildDefinitionResponseOutput {
	return o.ApplyT(func(v *PostBuildDefinitionResponse) PostBuildDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret PostBuildDefinitionResponse
		return ret
	}).(PostBuildDefinitionResponseOutput)
}

// Key/value pairs holding the variables to be substituted in this Kustomization.
func (o PostBuildDefinitionResponsePtrOutput) Substitute() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PostBuildDefinitionResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Substitute
	}).(pulumi.StringMapOutput)
}

// Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
func (o PostBuildDefinitionResponsePtrOutput) SubstituteFrom() SubstituteFromDefinitionResponseArrayOutput {
	return o.ApplyT(func(v *PostBuildDefinitionResponse) []SubstituteFromDefinitionResponse {
		if v == nil {
			return nil
		}
		return v.SubstituteFrom
	}).(SubstituteFromDefinitionResponseArrayOutput)
}

// The source reference for the GitRepository object.
type RepositoryRefDefinition struct {
	// The git repository branch name to checkout.
	Branch *string `pulumi:"branch"`
	// The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver.
	Commit *string `pulumi:"commit"`
	// The semver range used to match against git repository tags. This takes precedence over tag.
	Semver *string `pulumi:"semver"`
	// The git repository tag name to checkout. This takes precedence over branch.
	Tag *string `pulumi:"tag"`
}

// RepositoryRefDefinitionInput is an input type that accepts RepositoryRefDefinitionArgs and RepositoryRefDefinitionOutput values.
// You can construct a concrete instance of `RepositoryRefDefinitionInput` via:
//
//	RepositoryRefDefinitionArgs{...}
type RepositoryRefDefinitionInput interface {
	pulumi.Input

	ToRepositoryRefDefinitionOutput() RepositoryRefDefinitionOutput
	ToRepositoryRefDefinitionOutputWithContext(context.Context) RepositoryRefDefinitionOutput
}

// The source reference for the GitRepository object.
type RepositoryRefDefinitionArgs struct {
	// The git repository branch name to checkout.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver.
	Commit pulumi.StringPtrInput `pulumi:"commit"`
	// The semver range used to match against git repository tags. This takes precedence over tag.
	Semver pulumi.StringPtrInput `pulumi:"semver"`
	// The git repository tag name to checkout. This takes precedence over branch.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (RepositoryRefDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryRefDefinition)(nil)).Elem()
}

func (i RepositoryRefDefinitionArgs) ToRepositoryRefDefinitionOutput() RepositoryRefDefinitionOutput {
	return i.ToRepositoryRefDefinitionOutputWithContext(context.Background())
}

func (i RepositoryRefDefinitionArgs) ToRepositoryRefDefinitionOutputWithContext(ctx context.Context) RepositoryRefDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryRefDefinitionOutput)
}

func (i RepositoryRefDefinitionArgs) ToRepositoryRefDefinitionPtrOutput() RepositoryRefDefinitionPtrOutput {
	return i.ToRepositoryRefDefinitionPtrOutputWithContext(context.Background())
}

func (i RepositoryRefDefinitionArgs) ToRepositoryRefDefinitionPtrOutputWithContext(ctx context.Context) RepositoryRefDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryRefDefinitionOutput).ToRepositoryRefDefinitionPtrOutputWithContext(ctx)
}

// RepositoryRefDefinitionPtrInput is an input type that accepts RepositoryRefDefinitionArgs, RepositoryRefDefinitionPtr and RepositoryRefDefinitionPtrOutput values.
// You can construct a concrete instance of `RepositoryRefDefinitionPtrInput` via:
//
//	        RepositoryRefDefinitionArgs{...}
//
//	or:
//
//	        nil
type RepositoryRefDefinitionPtrInput interface {
	pulumi.Input

	ToRepositoryRefDefinitionPtrOutput() RepositoryRefDefinitionPtrOutput
	ToRepositoryRefDefinitionPtrOutputWithContext(context.Context) RepositoryRefDefinitionPtrOutput
}

type repositoryRefDefinitionPtrType RepositoryRefDefinitionArgs

func RepositoryRefDefinitionPtr(v *RepositoryRefDefinitionArgs) RepositoryRefDefinitionPtrInput {
	return (*repositoryRefDefinitionPtrType)(v)
}

func (*repositoryRefDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryRefDefinition)(nil)).Elem()
}

func (i *repositoryRefDefinitionPtrType) ToRepositoryRefDefinitionPtrOutput() RepositoryRefDefinitionPtrOutput {
	return i.ToRepositoryRefDefinitionPtrOutputWithContext(context.Background())
}

func (i *repositoryRefDefinitionPtrType) ToRepositoryRefDefinitionPtrOutputWithContext(ctx context.Context) RepositoryRefDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryRefDefinitionPtrOutput)
}

// The source reference for the GitRepository object.
type RepositoryRefDefinitionOutput struct{ *pulumi.OutputState }

func (RepositoryRefDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryRefDefinition)(nil)).Elem()
}

func (o RepositoryRefDefinitionOutput) ToRepositoryRefDefinitionOutput() RepositoryRefDefinitionOutput {
	return o
}

func (o RepositoryRefDefinitionOutput) ToRepositoryRefDefinitionOutputWithContext(ctx context.Context) RepositoryRefDefinitionOutput {
	return o
}

func (o RepositoryRefDefinitionOutput) ToRepositoryRefDefinitionPtrOutput() RepositoryRefDefinitionPtrOutput {
	return o.ToRepositoryRefDefinitionPtrOutputWithContext(context.Background())
}

func (o RepositoryRefDefinitionOutput) ToRepositoryRefDefinitionPtrOutputWithContext(ctx context.Context) RepositoryRefDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryRefDefinition) *RepositoryRefDefinition {
		return &v
	}).(RepositoryRefDefinitionPtrOutput)
}

// The git repository branch name to checkout.
func (o RepositoryRefDefinitionOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryRefDefinition) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver.
func (o RepositoryRefDefinitionOutput) Commit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryRefDefinition) *string { return v.Commit }).(pulumi.StringPtrOutput)
}

// The semver range used to match against git repository tags. This takes precedence over tag.
func (o RepositoryRefDefinitionOutput) Semver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryRefDefinition) *string { return v.Semver }).(pulumi.StringPtrOutput)
}

// The git repository tag name to checkout. This takes precedence over branch.
func (o RepositoryRefDefinitionOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryRefDefinition) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type RepositoryRefDefinitionPtrOutput struct{ *pulumi.OutputState }

func (RepositoryRefDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryRefDefinition)(nil)).Elem()
}

func (o RepositoryRefDefinitionPtrOutput) ToRepositoryRefDefinitionPtrOutput() RepositoryRefDefinitionPtrOutput {
	return o
}

func (o RepositoryRefDefinitionPtrOutput) ToRepositoryRefDefinitionPtrOutputWithContext(ctx context.Context) RepositoryRefDefinitionPtrOutput {
	return o
}

func (o RepositoryRefDefinitionPtrOutput) Elem() RepositoryRefDefinitionOutput {
	return o.ApplyT(func(v *RepositoryRefDefinition) RepositoryRefDefinition {
		if v != nil {
			return *v
		}
		var ret RepositoryRefDefinition
		return ret
	}).(RepositoryRefDefinitionOutput)
}

// The git repository branch name to checkout.
func (o RepositoryRefDefinitionPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryRefDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver.
func (o RepositoryRefDefinitionPtrOutput) Commit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryRefDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Commit
	}).(pulumi.StringPtrOutput)
}

// The semver range used to match against git repository tags. This takes precedence over tag.
func (o RepositoryRefDefinitionPtrOutput) Semver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryRefDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Semver
	}).(pulumi.StringPtrOutput)
}

// The git repository tag name to checkout. This takes precedence over branch.
func (o RepositoryRefDefinitionPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryRefDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// The source reference for the GitRepository object.
type RepositoryRefDefinitionResponse struct {
	// The git repository branch name to checkout.
	Branch *string `pulumi:"branch"`
	// The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver.
	Commit *string `pulumi:"commit"`
	// The semver range used to match against git repository tags. This takes precedence over tag.
	Semver *string `pulumi:"semver"`
	// The git repository tag name to checkout. This takes precedence over branch.
	Tag *string `pulumi:"tag"`
}

// The source reference for the GitRepository object.
type RepositoryRefDefinitionResponseOutput struct{ *pulumi.OutputState }

func (RepositoryRefDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryRefDefinitionResponse)(nil)).Elem()
}

func (o RepositoryRefDefinitionResponseOutput) ToRepositoryRefDefinitionResponseOutput() RepositoryRefDefinitionResponseOutput {
	return o
}

func (o RepositoryRefDefinitionResponseOutput) ToRepositoryRefDefinitionResponseOutputWithContext(ctx context.Context) RepositoryRefDefinitionResponseOutput {
	return o
}

// The git repository branch name to checkout.
func (o RepositoryRefDefinitionResponseOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryRefDefinitionResponse) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver.
func (o RepositoryRefDefinitionResponseOutput) Commit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryRefDefinitionResponse) *string { return v.Commit }).(pulumi.StringPtrOutput)
}

// The semver range used to match against git repository tags. This takes precedence over tag.
func (o RepositoryRefDefinitionResponseOutput) Semver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryRefDefinitionResponse) *string { return v.Semver }).(pulumi.StringPtrOutput)
}

// The git repository tag name to checkout. This takes precedence over branch.
func (o RepositoryRefDefinitionResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryRefDefinitionResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type RepositoryRefDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (RepositoryRefDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryRefDefinitionResponse)(nil)).Elem()
}

func (o RepositoryRefDefinitionResponsePtrOutput) ToRepositoryRefDefinitionResponsePtrOutput() RepositoryRefDefinitionResponsePtrOutput {
	return o
}

func (o RepositoryRefDefinitionResponsePtrOutput) ToRepositoryRefDefinitionResponsePtrOutputWithContext(ctx context.Context) RepositoryRefDefinitionResponsePtrOutput {
	return o
}

func (o RepositoryRefDefinitionResponsePtrOutput) Elem() RepositoryRefDefinitionResponseOutput {
	return o.ApplyT(func(v *RepositoryRefDefinitionResponse) RepositoryRefDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret RepositoryRefDefinitionResponse
		return ret
	}).(RepositoryRefDefinitionResponseOutput)
}

// The git repository branch name to checkout.
func (o RepositoryRefDefinitionResponsePtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryRefDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver.
func (o RepositoryRefDefinitionResponsePtrOutput) Commit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryRefDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Commit
	}).(pulumi.StringPtrOutput)
}

// The semver range used to match against git repository tags. This takes precedence over tag.
func (o RepositoryRefDefinitionResponsePtrOutput) Semver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryRefDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Semver
	}).(pulumi.StringPtrOutput)
}

// The git repository tag name to checkout. This takes precedence over branch.
func (o RepositoryRefDefinitionResponsePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryRefDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// Parameters to authenticate using Service Principal.
type ServicePrincipalDefinition struct {
	// Base64-encoded certificate used to authenticate a Service Principal
	ClientCertificate *string `pulumi:"clientCertificate"`
	// The password for the certificate used to authenticate a Service Principal
	ClientCertificatePassword *string `pulumi:"clientCertificatePassword"`
	// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the Client Certificate
	ClientCertificateSendChain *bool `pulumi:"clientCertificateSendChain"`
	// The client Id for authenticating a Service Principal.
	ClientId *string `pulumi:"clientId"`
	// The client secret for authenticating a Service Principal
	ClientSecret *string `pulumi:"clientSecret"`
	// The tenant Id for authenticating a Service Principal
	TenantId *string `pulumi:"tenantId"`
}

// Defaults sets the appropriate defaults for ServicePrincipalDefinition
func (val *ServicePrincipalDefinition) Defaults() *ServicePrincipalDefinition {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ClientCertificateSendChain == nil {
		clientCertificateSendChain_ := false
		tmp.ClientCertificateSendChain = &clientCertificateSendChain_
	}
	return &tmp
}

// ServicePrincipalDefinitionInput is an input type that accepts ServicePrincipalDefinitionArgs and ServicePrincipalDefinitionOutput values.
// You can construct a concrete instance of `ServicePrincipalDefinitionInput` via:
//
//	ServicePrincipalDefinitionArgs{...}
type ServicePrincipalDefinitionInput interface {
	pulumi.Input

	ToServicePrincipalDefinitionOutput() ServicePrincipalDefinitionOutput
	ToServicePrincipalDefinitionOutputWithContext(context.Context) ServicePrincipalDefinitionOutput
}

// Parameters to authenticate using Service Principal.
type ServicePrincipalDefinitionArgs struct {
	// Base64-encoded certificate used to authenticate a Service Principal
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// The password for the certificate used to authenticate a Service Principal
	ClientCertificatePassword pulumi.StringPtrInput `pulumi:"clientCertificatePassword"`
	// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the Client Certificate
	ClientCertificateSendChain pulumi.BoolPtrInput `pulumi:"clientCertificateSendChain"`
	// The client Id for authenticating a Service Principal.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The client secret for authenticating a Service Principal
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// The tenant Id for authenticating a Service Principal
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

// Defaults sets the appropriate defaults for ServicePrincipalDefinitionArgs
func (val *ServicePrincipalDefinitionArgs) Defaults() *ServicePrincipalDefinitionArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ClientCertificateSendChain == nil {
		tmp.ClientCertificateSendChain = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (ServicePrincipalDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalDefinition)(nil)).Elem()
}

func (i ServicePrincipalDefinitionArgs) ToServicePrincipalDefinitionOutput() ServicePrincipalDefinitionOutput {
	return i.ToServicePrincipalDefinitionOutputWithContext(context.Background())
}

func (i ServicePrincipalDefinitionArgs) ToServicePrincipalDefinitionOutputWithContext(ctx context.Context) ServicePrincipalDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalDefinitionOutput)
}

func (i ServicePrincipalDefinitionArgs) ToServicePrincipalDefinitionPtrOutput() ServicePrincipalDefinitionPtrOutput {
	return i.ToServicePrincipalDefinitionPtrOutputWithContext(context.Background())
}

func (i ServicePrincipalDefinitionArgs) ToServicePrincipalDefinitionPtrOutputWithContext(ctx context.Context) ServicePrincipalDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalDefinitionOutput).ToServicePrincipalDefinitionPtrOutputWithContext(ctx)
}

// ServicePrincipalDefinitionPtrInput is an input type that accepts ServicePrincipalDefinitionArgs, ServicePrincipalDefinitionPtr and ServicePrincipalDefinitionPtrOutput values.
// You can construct a concrete instance of `ServicePrincipalDefinitionPtrInput` via:
//
//	        ServicePrincipalDefinitionArgs{...}
//
//	or:
//
//	        nil
type ServicePrincipalDefinitionPtrInput interface {
	pulumi.Input

	ToServicePrincipalDefinitionPtrOutput() ServicePrincipalDefinitionPtrOutput
	ToServicePrincipalDefinitionPtrOutputWithContext(context.Context) ServicePrincipalDefinitionPtrOutput
}

type servicePrincipalDefinitionPtrType ServicePrincipalDefinitionArgs

func ServicePrincipalDefinitionPtr(v *ServicePrincipalDefinitionArgs) ServicePrincipalDefinitionPtrInput {
	return (*servicePrincipalDefinitionPtrType)(v)
}

func (*servicePrincipalDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalDefinition)(nil)).Elem()
}

func (i *servicePrincipalDefinitionPtrType) ToServicePrincipalDefinitionPtrOutput() ServicePrincipalDefinitionPtrOutput {
	return i.ToServicePrincipalDefinitionPtrOutputWithContext(context.Background())
}

func (i *servicePrincipalDefinitionPtrType) ToServicePrincipalDefinitionPtrOutputWithContext(ctx context.Context) ServicePrincipalDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalDefinitionPtrOutput)
}

// Parameters to authenticate using Service Principal.
type ServicePrincipalDefinitionOutput struct{ *pulumi.OutputState }

func (ServicePrincipalDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalDefinition)(nil)).Elem()
}

func (o ServicePrincipalDefinitionOutput) ToServicePrincipalDefinitionOutput() ServicePrincipalDefinitionOutput {
	return o
}

func (o ServicePrincipalDefinitionOutput) ToServicePrincipalDefinitionOutputWithContext(ctx context.Context) ServicePrincipalDefinitionOutput {
	return o
}

func (o ServicePrincipalDefinitionOutput) ToServicePrincipalDefinitionPtrOutput() ServicePrincipalDefinitionPtrOutput {
	return o.ToServicePrincipalDefinitionPtrOutputWithContext(context.Background())
}

func (o ServicePrincipalDefinitionOutput) ToServicePrincipalDefinitionPtrOutputWithContext(ctx context.Context) ServicePrincipalDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServicePrincipalDefinition) *ServicePrincipalDefinition {
		return &v
	}).(ServicePrincipalDefinitionPtrOutput)
}

// Base64-encoded certificate used to authenticate a Service Principal
func (o ServicePrincipalDefinitionOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDefinition) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// The password for the certificate used to authenticate a Service Principal
func (o ServicePrincipalDefinitionOutput) ClientCertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDefinition) *string { return v.ClientCertificatePassword }).(pulumi.StringPtrOutput)
}

// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the Client Certificate
func (o ServicePrincipalDefinitionOutput) ClientCertificateSendChain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDefinition) *bool { return v.ClientCertificateSendChain }).(pulumi.BoolPtrOutput)
}

// The client Id for authenticating a Service Principal.
func (o ServicePrincipalDefinitionOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDefinition) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The client secret for authenticating a Service Principal
func (o ServicePrincipalDefinitionOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDefinition) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// The tenant Id for authenticating a Service Principal
func (o ServicePrincipalDefinitionOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDefinition) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type ServicePrincipalDefinitionPtrOutput struct{ *pulumi.OutputState }

func (ServicePrincipalDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalDefinition)(nil)).Elem()
}

func (o ServicePrincipalDefinitionPtrOutput) ToServicePrincipalDefinitionPtrOutput() ServicePrincipalDefinitionPtrOutput {
	return o
}

func (o ServicePrincipalDefinitionPtrOutput) ToServicePrincipalDefinitionPtrOutputWithContext(ctx context.Context) ServicePrincipalDefinitionPtrOutput {
	return o
}

func (o ServicePrincipalDefinitionPtrOutput) Elem() ServicePrincipalDefinitionOutput {
	return o.ApplyT(func(v *ServicePrincipalDefinition) ServicePrincipalDefinition {
		if v != nil {
			return *v
		}
		var ret ServicePrincipalDefinition
		return ret
	}).(ServicePrincipalDefinitionOutput)
}

// Base64-encoded certificate used to authenticate a Service Principal
func (o ServicePrincipalDefinitionPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// The password for the certificate used to authenticate a Service Principal
func (o ServicePrincipalDefinitionPtrOutput) ClientCertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificatePassword
	}).(pulumi.StringPtrOutput)
}

// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the Client Certificate
func (o ServicePrincipalDefinitionPtrOutput) ClientCertificateSendChain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.ClientCertificateSendChain
	}).(pulumi.BoolPtrOutput)
}

// The client Id for authenticating a Service Principal.
func (o ServicePrincipalDefinitionPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret for authenticating a Service Principal
func (o ServicePrincipalDefinitionPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The tenant Id for authenticating a Service Principal
func (o ServicePrincipalDefinitionPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalDefinition) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Parameters to authenticate using Service Principal.
type ServicePrincipalDefinitionResponse struct {
	// Base64-encoded certificate used to authenticate a Service Principal
	ClientCertificate *string `pulumi:"clientCertificate"`
	// The password for the certificate used to authenticate a Service Principal
	ClientCertificatePassword *string `pulumi:"clientCertificatePassword"`
	// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the Client Certificate
	ClientCertificateSendChain *bool `pulumi:"clientCertificateSendChain"`
	// The client Id for authenticating a Service Principal.
	ClientId *string `pulumi:"clientId"`
	// The client secret for authenticating a Service Principal
	ClientSecret *string `pulumi:"clientSecret"`
	// The tenant Id for authenticating a Service Principal
	TenantId *string `pulumi:"tenantId"`
}

// Defaults sets the appropriate defaults for ServicePrincipalDefinitionResponse
func (val *ServicePrincipalDefinitionResponse) Defaults() *ServicePrincipalDefinitionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ClientCertificateSendChain == nil {
		clientCertificateSendChain_ := false
		tmp.ClientCertificateSendChain = &clientCertificateSendChain_
	}
	return &tmp
}

// Parameters to authenticate using Service Principal.
type ServicePrincipalDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ServicePrincipalDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePrincipalDefinitionResponse)(nil)).Elem()
}

func (o ServicePrincipalDefinitionResponseOutput) ToServicePrincipalDefinitionResponseOutput() ServicePrincipalDefinitionResponseOutput {
	return o
}

func (o ServicePrincipalDefinitionResponseOutput) ToServicePrincipalDefinitionResponseOutputWithContext(ctx context.Context) ServicePrincipalDefinitionResponseOutput {
	return o
}

// Base64-encoded certificate used to authenticate a Service Principal
func (o ServicePrincipalDefinitionResponseOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDefinitionResponse) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// The password for the certificate used to authenticate a Service Principal
func (o ServicePrincipalDefinitionResponseOutput) ClientCertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDefinitionResponse) *string { return v.ClientCertificatePassword }).(pulumi.StringPtrOutput)
}

// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the Client Certificate
func (o ServicePrincipalDefinitionResponseOutput) ClientCertificateSendChain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDefinitionResponse) *bool { return v.ClientCertificateSendChain }).(pulumi.BoolPtrOutput)
}

// The client Id for authenticating a Service Principal.
func (o ServicePrincipalDefinitionResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDefinitionResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The client secret for authenticating a Service Principal
func (o ServicePrincipalDefinitionResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDefinitionResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// The tenant Id for authenticating a Service Principal
func (o ServicePrincipalDefinitionResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePrincipalDefinitionResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type ServicePrincipalDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (ServicePrincipalDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipalDefinitionResponse)(nil)).Elem()
}

func (o ServicePrincipalDefinitionResponsePtrOutput) ToServicePrincipalDefinitionResponsePtrOutput() ServicePrincipalDefinitionResponsePtrOutput {
	return o
}

func (o ServicePrincipalDefinitionResponsePtrOutput) ToServicePrincipalDefinitionResponsePtrOutputWithContext(ctx context.Context) ServicePrincipalDefinitionResponsePtrOutput {
	return o
}

func (o ServicePrincipalDefinitionResponsePtrOutput) Elem() ServicePrincipalDefinitionResponseOutput {
	return o.ApplyT(func(v *ServicePrincipalDefinitionResponse) ServicePrincipalDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret ServicePrincipalDefinitionResponse
		return ret
	}).(ServicePrincipalDefinitionResponseOutput)
}

// Base64-encoded certificate used to authenticate a Service Principal
func (o ServicePrincipalDefinitionResponsePtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// The password for the certificate used to authenticate a Service Principal
func (o ServicePrincipalDefinitionResponsePtrOutput) ClientCertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificatePassword
	}).(pulumi.StringPtrOutput)
}

// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the Client Certificate
func (o ServicePrincipalDefinitionResponsePtrOutput) ClientCertificateSendChain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalDefinitionResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ClientCertificateSendChain
	}).(pulumi.BoolPtrOutput)
}

// The client Id for authenticating a Service Principal.
func (o ServicePrincipalDefinitionResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret for authenticating a Service Principal
func (o ServicePrincipalDefinitionResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The tenant Id for authenticating a Service Principal
func (o ServicePrincipalDefinitionResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePrincipalDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
type SubstituteFromDefinition struct {
	// Define whether it is ConfigMap or Secret that holds the variables to be used in substitution.
	Kind *string `pulumi:"kind"`
	// Name of the ConfigMap/Secret that holds the variables to be used in substitution.
	Name *string `pulumi:"name"`
	// Set to True to proceed without ConfigMap/Secret, if it is not present.
	Optional *bool `pulumi:"optional"`
}

// Defaults sets the appropriate defaults for SubstituteFromDefinition
func (val *SubstituteFromDefinition) Defaults() *SubstituteFromDefinition {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Optional == nil {
		optional_ := false
		tmp.Optional = &optional_
	}
	return &tmp
}

// SubstituteFromDefinitionInput is an input type that accepts SubstituteFromDefinitionArgs and SubstituteFromDefinitionOutput values.
// You can construct a concrete instance of `SubstituteFromDefinitionInput` via:
//
//	SubstituteFromDefinitionArgs{...}
type SubstituteFromDefinitionInput interface {
	pulumi.Input

	ToSubstituteFromDefinitionOutput() SubstituteFromDefinitionOutput
	ToSubstituteFromDefinitionOutputWithContext(context.Context) SubstituteFromDefinitionOutput
}

// Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
type SubstituteFromDefinitionArgs struct {
	// Define whether it is ConfigMap or Secret that holds the variables to be used in substitution.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the ConfigMap/Secret that holds the variables to be used in substitution.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Set to True to proceed without ConfigMap/Secret, if it is not present.
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

// Defaults sets the appropriate defaults for SubstituteFromDefinitionArgs
func (val *SubstituteFromDefinitionArgs) Defaults() *SubstituteFromDefinitionArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Optional == nil {
		tmp.Optional = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (SubstituteFromDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubstituteFromDefinition)(nil)).Elem()
}

func (i SubstituteFromDefinitionArgs) ToSubstituteFromDefinitionOutput() SubstituteFromDefinitionOutput {
	return i.ToSubstituteFromDefinitionOutputWithContext(context.Background())
}

func (i SubstituteFromDefinitionArgs) ToSubstituteFromDefinitionOutputWithContext(ctx context.Context) SubstituteFromDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubstituteFromDefinitionOutput)
}

// SubstituteFromDefinitionArrayInput is an input type that accepts SubstituteFromDefinitionArray and SubstituteFromDefinitionArrayOutput values.
// You can construct a concrete instance of `SubstituteFromDefinitionArrayInput` via:
//
//	SubstituteFromDefinitionArray{ SubstituteFromDefinitionArgs{...} }
type SubstituteFromDefinitionArrayInput interface {
	pulumi.Input

	ToSubstituteFromDefinitionArrayOutput() SubstituteFromDefinitionArrayOutput
	ToSubstituteFromDefinitionArrayOutputWithContext(context.Context) SubstituteFromDefinitionArrayOutput
}

type SubstituteFromDefinitionArray []SubstituteFromDefinitionInput

func (SubstituteFromDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubstituteFromDefinition)(nil)).Elem()
}

func (i SubstituteFromDefinitionArray) ToSubstituteFromDefinitionArrayOutput() SubstituteFromDefinitionArrayOutput {
	return i.ToSubstituteFromDefinitionArrayOutputWithContext(context.Background())
}

func (i SubstituteFromDefinitionArray) ToSubstituteFromDefinitionArrayOutputWithContext(ctx context.Context) SubstituteFromDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubstituteFromDefinitionArrayOutput)
}

// Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
type SubstituteFromDefinitionOutput struct{ *pulumi.OutputState }

func (SubstituteFromDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubstituteFromDefinition)(nil)).Elem()
}

func (o SubstituteFromDefinitionOutput) ToSubstituteFromDefinitionOutput() SubstituteFromDefinitionOutput {
	return o
}

func (o SubstituteFromDefinitionOutput) ToSubstituteFromDefinitionOutputWithContext(ctx context.Context) SubstituteFromDefinitionOutput {
	return o
}

// Define whether it is ConfigMap or Secret that holds the variables to be used in substitution.
func (o SubstituteFromDefinitionOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubstituteFromDefinition) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the ConfigMap/Secret that holds the variables to be used in substitution.
func (o SubstituteFromDefinitionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubstituteFromDefinition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Set to True to proceed without ConfigMap/Secret, if it is not present.
func (o SubstituteFromDefinitionOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SubstituteFromDefinition) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type SubstituteFromDefinitionArrayOutput struct{ *pulumi.OutputState }

func (SubstituteFromDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubstituteFromDefinition)(nil)).Elem()
}

func (o SubstituteFromDefinitionArrayOutput) ToSubstituteFromDefinitionArrayOutput() SubstituteFromDefinitionArrayOutput {
	return o
}

func (o SubstituteFromDefinitionArrayOutput) ToSubstituteFromDefinitionArrayOutputWithContext(ctx context.Context) SubstituteFromDefinitionArrayOutput {
	return o
}

func (o SubstituteFromDefinitionArrayOutput) Index(i pulumi.IntInput) SubstituteFromDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubstituteFromDefinition {
		return vs[0].([]SubstituteFromDefinition)[vs[1].(int)]
	}).(SubstituteFromDefinitionOutput)
}

// Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
type SubstituteFromDefinitionResponse struct {
	// Define whether it is ConfigMap or Secret that holds the variables to be used in substitution.
	Kind *string `pulumi:"kind"`
	// Name of the ConfigMap/Secret that holds the variables to be used in substitution.
	Name *string `pulumi:"name"`
	// Set to True to proceed without ConfigMap/Secret, if it is not present.
	Optional *bool `pulumi:"optional"`
}

// Defaults sets the appropriate defaults for SubstituteFromDefinitionResponse
func (val *SubstituteFromDefinitionResponse) Defaults() *SubstituteFromDefinitionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Optional == nil {
		optional_ := false
		tmp.Optional = &optional_
	}
	return &tmp
}

// Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
type SubstituteFromDefinitionResponseOutput struct{ *pulumi.OutputState }

func (SubstituteFromDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubstituteFromDefinitionResponse)(nil)).Elem()
}

func (o SubstituteFromDefinitionResponseOutput) ToSubstituteFromDefinitionResponseOutput() SubstituteFromDefinitionResponseOutput {
	return o
}

func (o SubstituteFromDefinitionResponseOutput) ToSubstituteFromDefinitionResponseOutputWithContext(ctx context.Context) SubstituteFromDefinitionResponseOutput {
	return o
}

// Define whether it is ConfigMap or Secret that holds the variables to be used in substitution.
func (o SubstituteFromDefinitionResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubstituteFromDefinitionResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the ConfigMap/Secret that holds the variables to be used in substitution.
func (o SubstituteFromDefinitionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubstituteFromDefinitionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Set to True to proceed without ConfigMap/Secret, if it is not present.
func (o SubstituteFromDefinitionResponseOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SubstituteFromDefinitionResponse) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type SubstituteFromDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (SubstituteFromDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubstituteFromDefinitionResponse)(nil)).Elem()
}

func (o SubstituteFromDefinitionResponseArrayOutput) ToSubstituteFromDefinitionResponseArrayOutput() SubstituteFromDefinitionResponseArrayOutput {
	return o
}

func (o SubstituteFromDefinitionResponseArrayOutput) ToSubstituteFromDefinitionResponseArrayOutputWithContext(ctx context.Context) SubstituteFromDefinitionResponseArrayOutput {
	return o
}

func (o SubstituteFromDefinitionResponseArrayOutput) Index(i pulumi.IntInput) SubstituteFromDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubstituteFromDefinitionResponse {
		return vs[0].([]SubstituteFromDefinitionResponse)[vs[1].(int)]
	}).(SubstituteFromDefinitionResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Parameters to authenticate using TLS config for OCI repository.
type TlsConfigDefinition struct {
	// Base64-encoded CA certificate used to verify the server.
	CaCertificate *string `pulumi:"caCertificate"`
	// Base64-encoded certificate used to authenticate a client with the OCI repository.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Base64-encoded private key used to authenticate a client with the OCI repository.
	PrivateKey *string `pulumi:"privateKey"`
}

// TlsConfigDefinitionInput is an input type that accepts TlsConfigDefinitionArgs and TlsConfigDefinitionOutput values.
// You can construct a concrete instance of `TlsConfigDefinitionInput` via:
//
//	TlsConfigDefinitionArgs{...}
type TlsConfigDefinitionInput interface {
	pulumi.Input

	ToTlsConfigDefinitionOutput() TlsConfigDefinitionOutput
	ToTlsConfigDefinitionOutputWithContext(context.Context) TlsConfigDefinitionOutput
}

// Parameters to authenticate using TLS config for OCI repository.
type TlsConfigDefinitionArgs struct {
	// Base64-encoded CA certificate used to verify the server.
	CaCertificate pulumi.StringPtrInput `pulumi:"caCertificate"`
	// Base64-encoded certificate used to authenticate a client with the OCI repository.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Base64-encoded private key used to authenticate a client with the OCI repository.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
}

func (TlsConfigDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsConfigDefinition)(nil)).Elem()
}

func (i TlsConfigDefinitionArgs) ToTlsConfigDefinitionOutput() TlsConfigDefinitionOutput {
	return i.ToTlsConfigDefinitionOutputWithContext(context.Background())
}

func (i TlsConfigDefinitionArgs) ToTlsConfigDefinitionOutputWithContext(ctx context.Context) TlsConfigDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsConfigDefinitionOutput)
}

func (i TlsConfigDefinitionArgs) ToTlsConfigDefinitionPtrOutput() TlsConfigDefinitionPtrOutput {
	return i.ToTlsConfigDefinitionPtrOutputWithContext(context.Background())
}

func (i TlsConfigDefinitionArgs) ToTlsConfigDefinitionPtrOutputWithContext(ctx context.Context) TlsConfigDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsConfigDefinitionOutput).ToTlsConfigDefinitionPtrOutputWithContext(ctx)
}

// TlsConfigDefinitionPtrInput is an input type that accepts TlsConfigDefinitionArgs, TlsConfigDefinitionPtr and TlsConfigDefinitionPtrOutput values.
// You can construct a concrete instance of `TlsConfigDefinitionPtrInput` via:
//
//	        TlsConfigDefinitionArgs{...}
//
//	or:
//
//	        nil
type TlsConfigDefinitionPtrInput interface {
	pulumi.Input

	ToTlsConfigDefinitionPtrOutput() TlsConfigDefinitionPtrOutput
	ToTlsConfigDefinitionPtrOutputWithContext(context.Context) TlsConfigDefinitionPtrOutput
}

type tlsConfigDefinitionPtrType TlsConfigDefinitionArgs

func TlsConfigDefinitionPtr(v *TlsConfigDefinitionArgs) TlsConfigDefinitionPtrInput {
	return (*tlsConfigDefinitionPtrType)(v)
}

func (*tlsConfigDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsConfigDefinition)(nil)).Elem()
}

func (i *tlsConfigDefinitionPtrType) ToTlsConfigDefinitionPtrOutput() TlsConfigDefinitionPtrOutput {
	return i.ToTlsConfigDefinitionPtrOutputWithContext(context.Background())
}

func (i *tlsConfigDefinitionPtrType) ToTlsConfigDefinitionPtrOutputWithContext(ctx context.Context) TlsConfigDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsConfigDefinitionPtrOutput)
}

// Parameters to authenticate using TLS config for OCI repository.
type TlsConfigDefinitionOutput struct{ *pulumi.OutputState }

func (TlsConfigDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsConfigDefinition)(nil)).Elem()
}

func (o TlsConfigDefinitionOutput) ToTlsConfigDefinitionOutput() TlsConfigDefinitionOutput {
	return o
}

func (o TlsConfigDefinitionOutput) ToTlsConfigDefinitionOutputWithContext(ctx context.Context) TlsConfigDefinitionOutput {
	return o
}

func (o TlsConfigDefinitionOutput) ToTlsConfigDefinitionPtrOutput() TlsConfigDefinitionPtrOutput {
	return o.ToTlsConfigDefinitionPtrOutputWithContext(context.Background())
}

func (o TlsConfigDefinitionOutput) ToTlsConfigDefinitionPtrOutputWithContext(ctx context.Context) TlsConfigDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TlsConfigDefinition) *TlsConfigDefinition {
		return &v
	}).(TlsConfigDefinitionPtrOutput)
}

// Base64-encoded CA certificate used to verify the server.
func (o TlsConfigDefinitionOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TlsConfigDefinition) *string { return v.CaCertificate }).(pulumi.StringPtrOutput)
}

// Base64-encoded certificate used to authenticate a client with the OCI repository.
func (o TlsConfigDefinitionOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TlsConfigDefinition) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Base64-encoded private key used to authenticate a client with the OCI repository.
func (o TlsConfigDefinitionOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TlsConfigDefinition) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

type TlsConfigDefinitionPtrOutput struct{ *pulumi.OutputState }

func (TlsConfigDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsConfigDefinition)(nil)).Elem()
}

func (o TlsConfigDefinitionPtrOutput) ToTlsConfigDefinitionPtrOutput() TlsConfigDefinitionPtrOutput {
	return o
}

func (o TlsConfigDefinitionPtrOutput) ToTlsConfigDefinitionPtrOutputWithContext(ctx context.Context) TlsConfigDefinitionPtrOutput {
	return o
}

func (o TlsConfigDefinitionPtrOutput) Elem() TlsConfigDefinitionOutput {
	return o.ApplyT(func(v *TlsConfigDefinition) TlsConfigDefinition {
		if v != nil {
			return *v
		}
		var ret TlsConfigDefinition
		return ret
	}).(TlsConfigDefinitionOutput)
}

// Base64-encoded CA certificate used to verify the server.
func (o TlsConfigDefinitionPtrOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsConfigDefinition) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificate
	}).(pulumi.StringPtrOutput)
}

// Base64-encoded certificate used to authenticate a client with the OCI repository.
func (o TlsConfigDefinitionPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsConfigDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Base64-encoded private key used to authenticate a client with the OCI repository.
func (o TlsConfigDefinitionPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsConfigDefinition) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// Parameters to authenticate using TLS config for OCI repository.
type TlsConfigDefinitionResponse struct {
	// Base64-encoded CA certificate used to verify the server.
	CaCertificate *string `pulumi:"caCertificate"`
	// Base64-encoded certificate used to authenticate a client with the OCI repository.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Base64-encoded private key used to authenticate a client with the OCI repository.
	PrivateKey *string `pulumi:"privateKey"`
}

// Parameters to authenticate using TLS config for OCI repository.
type TlsConfigDefinitionResponseOutput struct{ *pulumi.OutputState }

func (TlsConfigDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsConfigDefinitionResponse)(nil)).Elem()
}

func (o TlsConfigDefinitionResponseOutput) ToTlsConfigDefinitionResponseOutput() TlsConfigDefinitionResponseOutput {
	return o
}

func (o TlsConfigDefinitionResponseOutput) ToTlsConfigDefinitionResponseOutputWithContext(ctx context.Context) TlsConfigDefinitionResponseOutput {
	return o
}

// Base64-encoded CA certificate used to verify the server.
func (o TlsConfigDefinitionResponseOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TlsConfigDefinitionResponse) *string { return v.CaCertificate }).(pulumi.StringPtrOutput)
}

// Base64-encoded certificate used to authenticate a client with the OCI repository.
func (o TlsConfigDefinitionResponseOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TlsConfigDefinitionResponse) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Base64-encoded private key used to authenticate a client with the OCI repository.
func (o TlsConfigDefinitionResponseOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TlsConfigDefinitionResponse) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

type TlsConfigDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (TlsConfigDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsConfigDefinitionResponse)(nil)).Elem()
}

func (o TlsConfigDefinitionResponsePtrOutput) ToTlsConfigDefinitionResponsePtrOutput() TlsConfigDefinitionResponsePtrOutput {
	return o
}

func (o TlsConfigDefinitionResponsePtrOutput) ToTlsConfigDefinitionResponsePtrOutputWithContext(ctx context.Context) TlsConfigDefinitionResponsePtrOutput {
	return o
}

func (o TlsConfigDefinitionResponsePtrOutput) Elem() TlsConfigDefinitionResponseOutput {
	return o.ApplyT(func(v *TlsConfigDefinitionResponse) TlsConfigDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret TlsConfigDefinitionResponse
		return ret
	}).(TlsConfigDefinitionResponseOutput)
}

// Base64-encoded CA certificate used to verify the server.
func (o TlsConfigDefinitionResponsePtrOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsConfigDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificate
	}).(pulumi.StringPtrOutput)
}

// Base64-encoded certificate used to authenticate a client with the OCI repository.
func (o TlsConfigDefinitionResponsePtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsConfigDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Base64-encoded private key used to authenticate a client with the OCI repository.
func (o TlsConfigDefinitionResponsePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsConfigDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// Parameters to verify the authenticity of an OCI Artifact.
type VerifyDefinition struct {
	// Array defining the criteria for matching the identity while verifying an OCI artifact.
	MatchOidcIdentity []MatchOidcIdentityDefinition `pulumi:"matchOidcIdentity"`
	// Verification provider name.
	Provider *string `pulumi:"provider"`
	// An object containing trusted public keys of trusted authors.
	VerificationConfig map[string]string `pulumi:"verificationConfig"`
}

// VerifyDefinitionInput is an input type that accepts VerifyDefinitionArgs and VerifyDefinitionOutput values.
// You can construct a concrete instance of `VerifyDefinitionInput` via:
//
//	VerifyDefinitionArgs{...}
type VerifyDefinitionInput interface {
	pulumi.Input

	ToVerifyDefinitionOutput() VerifyDefinitionOutput
	ToVerifyDefinitionOutputWithContext(context.Context) VerifyDefinitionOutput
}

// Parameters to verify the authenticity of an OCI Artifact.
type VerifyDefinitionArgs struct {
	// Array defining the criteria for matching the identity while verifying an OCI artifact.
	MatchOidcIdentity MatchOidcIdentityDefinitionArrayInput `pulumi:"matchOidcIdentity"`
	// Verification provider name.
	Provider pulumi.StringPtrInput `pulumi:"provider"`
	// An object containing trusted public keys of trusted authors.
	VerificationConfig pulumi.StringMapInput `pulumi:"verificationConfig"`
}

func (VerifyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VerifyDefinition)(nil)).Elem()
}

func (i VerifyDefinitionArgs) ToVerifyDefinitionOutput() VerifyDefinitionOutput {
	return i.ToVerifyDefinitionOutputWithContext(context.Background())
}

func (i VerifyDefinitionArgs) ToVerifyDefinitionOutputWithContext(ctx context.Context) VerifyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VerifyDefinitionOutput)
}

func (i VerifyDefinitionArgs) ToVerifyDefinitionPtrOutput() VerifyDefinitionPtrOutput {
	return i.ToVerifyDefinitionPtrOutputWithContext(context.Background())
}

func (i VerifyDefinitionArgs) ToVerifyDefinitionPtrOutputWithContext(ctx context.Context) VerifyDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VerifyDefinitionOutput).ToVerifyDefinitionPtrOutputWithContext(ctx)
}

// VerifyDefinitionPtrInput is an input type that accepts VerifyDefinitionArgs, VerifyDefinitionPtr and VerifyDefinitionPtrOutput values.
// You can construct a concrete instance of `VerifyDefinitionPtrInput` via:
//
//	        VerifyDefinitionArgs{...}
//
//	or:
//
//	        nil
type VerifyDefinitionPtrInput interface {
	pulumi.Input

	ToVerifyDefinitionPtrOutput() VerifyDefinitionPtrOutput
	ToVerifyDefinitionPtrOutputWithContext(context.Context) VerifyDefinitionPtrOutput
}

type verifyDefinitionPtrType VerifyDefinitionArgs

func VerifyDefinitionPtr(v *VerifyDefinitionArgs) VerifyDefinitionPtrInput {
	return (*verifyDefinitionPtrType)(v)
}

func (*verifyDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VerifyDefinition)(nil)).Elem()
}

func (i *verifyDefinitionPtrType) ToVerifyDefinitionPtrOutput() VerifyDefinitionPtrOutput {
	return i.ToVerifyDefinitionPtrOutputWithContext(context.Background())
}

func (i *verifyDefinitionPtrType) ToVerifyDefinitionPtrOutputWithContext(ctx context.Context) VerifyDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VerifyDefinitionPtrOutput)
}

// Parameters to verify the authenticity of an OCI Artifact.
type VerifyDefinitionOutput struct{ *pulumi.OutputState }

func (VerifyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VerifyDefinition)(nil)).Elem()
}

func (o VerifyDefinitionOutput) ToVerifyDefinitionOutput() VerifyDefinitionOutput {
	return o
}

func (o VerifyDefinitionOutput) ToVerifyDefinitionOutputWithContext(ctx context.Context) VerifyDefinitionOutput {
	return o
}

func (o VerifyDefinitionOutput) ToVerifyDefinitionPtrOutput() VerifyDefinitionPtrOutput {
	return o.ToVerifyDefinitionPtrOutputWithContext(context.Background())
}

func (o VerifyDefinitionOutput) ToVerifyDefinitionPtrOutputWithContext(ctx context.Context) VerifyDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VerifyDefinition) *VerifyDefinition {
		return &v
	}).(VerifyDefinitionPtrOutput)
}

// Array defining the criteria for matching the identity while verifying an OCI artifact.
func (o VerifyDefinitionOutput) MatchOidcIdentity() MatchOidcIdentityDefinitionArrayOutput {
	return o.ApplyT(func(v VerifyDefinition) []MatchOidcIdentityDefinition { return v.MatchOidcIdentity }).(MatchOidcIdentityDefinitionArrayOutput)
}

// Verification provider name.
func (o VerifyDefinitionOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VerifyDefinition) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

// An object containing trusted public keys of trusted authors.
func (o VerifyDefinitionOutput) VerificationConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v VerifyDefinition) map[string]string { return v.VerificationConfig }).(pulumi.StringMapOutput)
}

type VerifyDefinitionPtrOutput struct{ *pulumi.OutputState }

func (VerifyDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VerifyDefinition)(nil)).Elem()
}

func (o VerifyDefinitionPtrOutput) ToVerifyDefinitionPtrOutput() VerifyDefinitionPtrOutput {
	return o
}

func (o VerifyDefinitionPtrOutput) ToVerifyDefinitionPtrOutputWithContext(ctx context.Context) VerifyDefinitionPtrOutput {
	return o
}

func (o VerifyDefinitionPtrOutput) Elem() VerifyDefinitionOutput {
	return o.ApplyT(func(v *VerifyDefinition) VerifyDefinition {
		if v != nil {
			return *v
		}
		var ret VerifyDefinition
		return ret
	}).(VerifyDefinitionOutput)
}

// Array defining the criteria for matching the identity while verifying an OCI artifact.
func (o VerifyDefinitionPtrOutput) MatchOidcIdentity() MatchOidcIdentityDefinitionArrayOutput {
	return o.ApplyT(func(v *VerifyDefinition) []MatchOidcIdentityDefinition {
		if v == nil {
			return nil
		}
		return v.MatchOidcIdentity
	}).(MatchOidcIdentityDefinitionArrayOutput)
}

// Verification provider name.
func (o VerifyDefinitionPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VerifyDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

// An object containing trusted public keys of trusted authors.
func (o VerifyDefinitionPtrOutput) VerificationConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VerifyDefinition) map[string]string {
		if v == nil {
			return nil
		}
		return v.VerificationConfig
	}).(pulumi.StringMapOutput)
}

// Parameters to verify the authenticity of an OCI Artifact.
type VerifyDefinitionResponse struct {
	// Array defining the criteria for matching the identity while verifying an OCI artifact.
	MatchOidcIdentity []MatchOidcIdentityDefinitionResponse `pulumi:"matchOidcIdentity"`
	// Verification provider name.
	Provider *string `pulumi:"provider"`
	// An object containing trusted public keys of trusted authors.
	VerificationConfig map[string]string `pulumi:"verificationConfig"`
}

// Parameters to verify the authenticity of an OCI Artifact.
type VerifyDefinitionResponseOutput struct{ *pulumi.OutputState }

func (VerifyDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VerifyDefinitionResponse)(nil)).Elem()
}

func (o VerifyDefinitionResponseOutput) ToVerifyDefinitionResponseOutput() VerifyDefinitionResponseOutput {
	return o
}

func (o VerifyDefinitionResponseOutput) ToVerifyDefinitionResponseOutputWithContext(ctx context.Context) VerifyDefinitionResponseOutput {
	return o
}

// Array defining the criteria for matching the identity while verifying an OCI artifact.
func (o VerifyDefinitionResponseOutput) MatchOidcIdentity() MatchOidcIdentityDefinitionResponseArrayOutput {
	return o.ApplyT(func(v VerifyDefinitionResponse) []MatchOidcIdentityDefinitionResponse { return v.MatchOidcIdentity }).(MatchOidcIdentityDefinitionResponseArrayOutput)
}

// Verification provider name.
func (o VerifyDefinitionResponseOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VerifyDefinitionResponse) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

// An object containing trusted public keys of trusted authors.
func (o VerifyDefinitionResponseOutput) VerificationConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v VerifyDefinitionResponse) map[string]string { return v.VerificationConfig }).(pulumi.StringMapOutput)
}

type VerifyDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (VerifyDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VerifyDefinitionResponse)(nil)).Elem()
}

func (o VerifyDefinitionResponsePtrOutput) ToVerifyDefinitionResponsePtrOutput() VerifyDefinitionResponsePtrOutput {
	return o
}

func (o VerifyDefinitionResponsePtrOutput) ToVerifyDefinitionResponsePtrOutputWithContext(ctx context.Context) VerifyDefinitionResponsePtrOutput {
	return o
}

func (o VerifyDefinitionResponsePtrOutput) Elem() VerifyDefinitionResponseOutput {
	return o.ApplyT(func(v *VerifyDefinitionResponse) VerifyDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret VerifyDefinitionResponse
		return ret
	}).(VerifyDefinitionResponseOutput)
}

// Array defining the criteria for matching the identity while verifying an OCI artifact.
func (o VerifyDefinitionResponsePtrOutput) MatchOidcIdentity() MatchOidcIdentityDefinitionResponseArrayOutput {
	return o.ApplyT(func(v *VerifyDefinitionResponse) []MatchOidcIdentityDefinitionResponse {
		if v == nil {
			return nil
		}
		return v.MatchOidcIdentity
	}).(MatchOidcIdentityDefinitionResponseArrayOutput)
}

// Verification provider name.
func (o VerifyDefinitionResponsePtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VerifyDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

// An object containing trusted public keys of trusted authors.
func (o VerifyDefinitionResponsePtrOutput) VerificationConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VerifyDefinitionResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.VerificationConfig
	}).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(AzureBlobDefinitionOutput{})
	pulumi.RegisterOutputType(AzureBlobDefinitionPtrOutput{})
	pulumi.RegisterOutputType(AzureBlobDefinitionResponseOutput{})
	pulumi.RegisterOutputType(AzureBlobDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(BucketDefinitionOutput{})
	pulumi.RegisterOutputType(BucketDefinitionPtrOutput{})
	pulumi.RegisterOutputType(BucketDefinitionResponseOutput{})
	pulumi.RegisterOutputType(BucketDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(GitRepositoryDefinitionOutput{})
	pulumi.RegisterOutputType(GitRepositoryDefinitionPtrOutput{})
	pulumi.RegisterOutputType(GitRepositoryDefinitionResponseOutput{})
	pulumi.RegisterOutputType(GitRepositoryDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(HelmReleasePropertiesDefinitionResponseOutput{})
	pulumi.RegisterOutputType(HelmReleasePropertiesDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(KustomizationDefinitionOutput{})
	pulumi.RegisterOutputType(KustomizationDefinitionMapOutput{})
	pulumi.RegisterOutputType(KustomizationDefinitionResponseOutput{})
	pulumi.RegisterOutputType(KustomizationDefinitionResponseMapOutput{})
	pulumi.RegisterOutputType(LayerSelectorDefinitionOutput{})
	pulumi.RegisterOutputType(LayerSelectorDefinitionPtrOutput{})
	pulumi.RegisterOutputType(LayerSelectorDefinitionResponseOutput{})
	pulumi.RegisterOutputType(LayerSelectorDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityDefinitionOutput{})
	pulumi.RegisterOutputType(ManagedIdentityDefinitionPtrOutput{})
	pulumi.RegisterOutputType(ManagedIdentityDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ManagedIdentityDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(MatchOidcIdentityDefinitionOutput{})
	pulumi.RegisterOutputType(MatchOidcIdentityDefinitionArrayOutput{})
	pulumi.RegisterOutputType(MatchOidcIdentityDefinitionResponseOutput{})
	pulumi.RegisterOutputType(MatchOidcIdentityDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(OCIRepositoryDefinitionOutput{})
	pulumi.RegisterOutputType(OCIRepositoryDefinitionPtrOutput{})
	pulumi.RegisterOutputType(OCIRepositoryDefinitionResponseOutput{})
	pulumi.RegisterOutputType(OCIRepositoryDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(OCIRepositoryRefDefinitionOutput{})
	pulumi.RegisterOutputType(OCIRepositoryRefDefinitionPtrOutput{})
	pulumi.RegisterOutputType(OCIRepositoryRefDefinitionResponseOutput{})
	pulumi.RegisterOutputType(OCIRepositoryRefDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(ObjectReferenceDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ObjectReferenceDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(ObjectStatusConditionDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ObjectStatusConditionDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(ObjectStatusDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ObjectStatusDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(PostBuildDefinitionOutput{})
	pulumi.RegisterOutputType(PostBuildDefinitionPtrOutput{})
	pulumi.RegisterOutputType(PostBuildDefinitionResponseOutput{})
	pulumi.RegisterOutputType(PostBuildDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(RepositoryRefDefinitionOutput{})
	pulumi.RegisterOutputType(RepositoryRefDefinitionPtrOutput{})
	pulumi.RegisterOutputType(RepositoryRefDefinitionResponseOutput{})
	pulumi.RegisterOutputType(RepositoryRefDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(ServicePrincipalDefinitionOutput{})
	pulumi.RegisterOutputType(ServicePrincipalDefinitionPtrOutput{})
	pulumi.RegisterOutputType(ServicePrincipalDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ServicePrincipalDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(SubstituteFromDefinitionOutput{})
	pulumi.RegisterOutputType(SubstituteFromDefinitionArrayOutput{})
	pulumi.RegisterOutputType(SubstituteFromDefinitionResponseOutput{})
	pulumi.RegisterOutputType(SubstituteFromDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TlsConfigDefinitionOutput{})
	pulumi.RegisterOutputType(TlsConfigDefinitionPtrOutput{})
	pulumi.RegisterOutputType(TlsConfigDefinitionResponseOutput{})
	pulumi.RegisterOutputType(TlsConfigDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(VerifyDefinitionOutput{})
	pulumi.RegisterOutputType(VerifyDefinitionPtrOutput{})
	pulumi.RegisterOutputType(VerifyDefinitionResponseOutput{})
	pulumi.RegisterOutputType(VerifyDefinitionResponsePtrOutput{})
}
