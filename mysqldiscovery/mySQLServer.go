// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysqldiscovery

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The MySQLServer resource definition.
//
// Uses Azure REST API version 2024-09-30-preview. In version 2.x of the Azure Native provider, it used API version 2024-09-30-preview.
type MySQLServer struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// mysql server edition.
	Edition pulumi.StringPtrOutput `pulumi:"edition"`
	// The list of errors.
	Errors ErrorResponseArrayOutput `pulumi:"errors"`
	// The Server IP/host name.
	HostIp pulumi.StringArrayOutput `pulumi:"hostIp"`
	// The Server IP/host name.
	HostName pulumi.StringOutput `pulumi:"hostName"`
	// Resource labels.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// discovery Machine Id
	MachineId pulumi.StringPtrOutput `pulumi:"machineId"`
	// The mysql server version.
	MysqlVersion pulumi.StringPtrOutput `pulumi:"mysqlVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The number of database.
	NumberOfDatabase pulumi.Float64PtrOutput `pulumi:"numberOfDatabase"`
	// MySQL Server port number
	PortNumber pulumi.StringOutput `pulumi:"portNumber"`
	// Gets or sets the provisioning state.
	ProvisioningState pulumi.StringPtrOutput `pulumi:"provisioningState"`
	// Time when mysql version support end.
	SupportEndIn pulumi.StringPtrOutput `pulumi:"supportEndIn"`
	// mysql version support status.
	SupportStatus pulumi.StringPtrOutput `pulumi:"supportStatus"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMySQLServer registers a new resource with the given unique name, arguments, and options.
func NewMySQLServer(ctx *pulumi.Context,
	name string, args *MySQLServerArgs, opts ...pulumi.ResourceOption) (*MySQLServer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HostName == nil {
		return nil, errors.New("invalid value for required argument 'HostName'")
	}
	if args.PortNumber == nil {
		return nil, errors.New("invalid value for required argument 'PortNumber'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SiteName == nil {
		return nil, errors.New("invalid value for required argument 'SiteName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:mysqldiscovery/v20240930preview:MySQLServer"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource MySQLServer
	err := ctx.RegisterResource("azure-native:mysqldiscovery:MySQLServer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMySQLServer gets an existing MySQLServer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMySQLServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MySQLServerState, opts ...pulumi.ResourceOption) (*MySQLServer, error) {
	var resource MySQLServer
	err := ctx.ReadResource("azure-native:mysqldiscovery:MySQLServer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MySQLServer resources.
type mySQLServerState struct {
}

type MySQLServerState struct {
}

func (MySQLServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*mySQLServerState)(nil)).Elem()
}

type mySQLServerArgs struct {
	// mysql server edition.
	Edition *string `pulumi:"edition"`
	// The list of errors.
	Errors []Error `pulumi:"errors"`
	// The Server IP/host name.
	HostIp []string `pulumi:"hostIp"`
	// The Server IP/host name.
	HostName string `pulumi:"hostName"`
	// Resource labels.
	Labels map[string]string `pulumi:"labels"`
	// discovery Machine Id
	MachineId *string `pulumi:"machineId"`
	// The mysql server version.
	MysqlVersion *string `pulumi:"mysqlVersion"`
	// The number of database.
	NumberOfDatabase *float64 `pulumi:"numberOfDatabase"`
	// MySQL Server port number
	PortNumber string `pulumi:"portNumber"`
	// Gets or sets the provisioning state.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of Server
	ServerName *string `pulumi:"serverName"`
	// The name of Site
	SiteName string `pulumi:"siteName"`
	// Time when mysql version support end.
	SupportEndIn *string `pulumi:"supportEndIn"`
	// mysql version support status.
	SupportStatus *string `pulumi:"supportStatus"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a MySQLServer resource.
type MySQLServerArgs struct {
	// mysql server edition.
	Edition pulumi.StringPtrInput
	// The list of errors.
	Errors ErrorArrayInput
	// The Server IP/host name.
	HostIp pulumi.StringArrayInput
	// The Server IP/host name.
	HostName pulumi.StringInput
	// Resource labels.
	Labels pulumi.StringMapInput
	// discovery Machine Id
	MachineId pulumi.StringPtrInput
	// The mysql server version.
	MysqlVersion pulumi.StringPtrInput
	// The number of database.
	NumberOfDatabase pulumi.Float64PtrInput
	// MySQL Server port number
	PortNumber pulumi.StringInput
	// Gets or sets the provisioning state.
	ProvisioningState pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of Server
	ServerName pulumi.StringPtrInput
	// The name of Site
	SiteName pulumi.StringInput
	// Time when mysql version support end.
	SupportEndIn pulumi.StringPtrInput
	// mysql version support status.
	SupportStatus pulumi.StringPtrInput
	// Resource tags
	Tags pulumi.StringMapInput
}

func (MySQLServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mySQLServerArgs)(nil)).Elem()
}

type MySQLServerInput interface {
	pulumi.Input

	ToMySQLServerOutput() MySQLServerOutput
	ToMySQLServerOutputWithContext(ctx context.Context) MySQLServerOutput
}

func (*MySQLServer) ElementType() reflect.Type {
	return reflect.TypeOf((**MySQLServer)(nil)).Elem()
}

func (i *MySQLServer) ToMySQLServerOutput() MySQLServerOutput {
	return i.ToMySQLServerOutputWithContext(context.Background())
}

func (i *MySQLServer) ToMySQLServerOutputWithContext(ctx context.Context) MySQLServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySQLServerOutput)
}

type MySQLServerOutput struct{ *pulumi.OutputState }

func (MySQLServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySQLServer)(nil)).Elem()
}

func (o MySQLServerOutput) ToMySQLServerOutput() MySQLServerOutput {
	return o
}

func (o MySQLServerOutput) ToMySQLServerOutputWithContext(ctx context.Context) MySQLServerOutput {
	return o
}

// The Azure API version of the resource.
func (o MySQLServerOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *MySQLServer) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// mysql server edition.
func (o MySQLServerOutput) Edition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySQLServer) pulumi.StringPtrOutput { return v.Edition }).(pulumi.StringPtrOutput)
}

// The list of errors.
func (o MySQLServerOutput) Errors() ErrorResponseArrayOutput {
	return o.ApplyT(func(v *MySQLServer) ErrorResponseArrayOutput { return v.Errors }).(ErrorResponseArrayOutput)
}

// The Server IP/host name.
func (o MySQLServerOutput) HostIp() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MySQLServer) pulumi.StringArrayOutput { return v.HostIp }).(pulumi.StringArrayOutput)
}

// The Server IP/host name.
func (o MySQLServerOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v *MySQLServer) pulumi.StringOutput { return v.HostName }).(pulumi.StringOutput)
}

// Resource labels.
func (o MySQLServerOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MySQLServer) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// discovery Machine Id
func (o MySQLServerOutput) MachineId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySQLServer) pulumi.StringPtrOutput { return v.MachineId }).(pulumi.StringPtrOutput)
}

// The mysql server version.
func (o MySQLServerOutput) MysqlVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySQLServer) pulumi.StringPtrOutput { return v.MysqlVersion }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o MySQLServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MySQLServer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The number of database.
func (o MySQLServerOutput) NumberOfDatabase() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MySQLServer) pulumi.Float64PtrOutput { return v.NumberOfDatabase }).(pulumi.Float64PtrOutput)
}

// MySQL Server port number
func (o MySQLServerOutput) PortNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *MySQLServer) pulumi.StringOutput { return v.PortNumber }).(pulumi.StringOutput)
}

// Gets or sets the provisioning state.
func (o MySQLServerOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySQLServer) pulumi.StringPtrOutput { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Time when mysql version support end.
func (o MySQLServerOutput) SupportEndIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySQLServer) pulumi.StringPtrOutput { return v.SupportEndIn }).(pulumi.StringPtrOutput)
}

// mysql version support status.
func (o MySQLServerOutput) SupportStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySQLServer) pulumi.StringPtrOutput { return v.SupportStatus }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o MySQLServerOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *MySQLServer) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags
func (o MySQLServerOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MySQLServer) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o MySQLServerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *MySQLServer) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(MySQLServerOutput{})
}
