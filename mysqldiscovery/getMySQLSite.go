// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysqldiscovery

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the MySQLSites resource.
// Azure REST API version: 2024-09-30-preview.
func LookupMySQLSite(ctx *pulumi.Context, args *LookupMySQLSiteArgs, opts ...pulumi.InvokeOption) (*LookupMySQLSiteResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupMySQLSiteResult
	err := ctx.Invoke("azure-native:mysqldiscovery:getMySQLSite", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMySQLSiteArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of Site
	SiteName string `pulumi:"siteName"`
}

// The MySQLSite resource definition.
type LookupMySQLSiteResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// The extended location.
	ExtendedLocation ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The mapped master Site Id.
	MasterSiteId string `pulumi:"masterSiteId"`
	// The mapped migrate project Id.
	MigrateProjectId string `pulumi:"migrateProjectId"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Gets or sets the provisioning state.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupMySQLSiteOutput(ctx *pulumi.Context, args LookupMySQLSiteOutputArgs, opts ...pulumi.InvokeOption) LookupMySQLSiteResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMySQLSiteResultOutput, error) {
			args := v.(LookupMySQLSiteArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:mysqldiscovery:getMySQLSite", args, LookupMySQLSiteResultOutput{}, options).(LookupMySQLSiteResultOutput), nil
		}).(LookupMySQLSiteResultOutput)
}

type LookupMySQLSiteOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of Site
	SiteName pulumi.StringInput `pulumi:"siteName"`
}

func (LookupMySQLSiteOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMySQLSiteArgs)(nil)).Elem()
}

// The MySQLSite resource definition.
type LookupMySQLSiteResultOutput struct{ *pulumi.OutputState }

func (LookupMySQLSiteResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMySQLSiteResult)(nil)).Elem()
}

func (o LookupMySQLSiteResultOutput) ToLookupMySQLSiteResultOutput() LookupMySQLSiteResultOutput {
	return o
}

func (o LookupMySQLSiteResultOutput) ToLookupMySQLSiteResultOutputWithContext(ctx context.Context) LookupMySQLSiteResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupMySQLSiteResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMySQLSiteResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The extended location.
func (o LookupMySQLSiteResultOutput) ExtendedLocation() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v LookupMySQLSiteResult) ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponseOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupMySQLSiteResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMySQLSiteResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupMySQLSiteResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMySQLSiteResult) string { return v.Location }).(pulumi.StringOutput)
}

// The mapped master Site Id.
func (o LookupMySQLSiteResultOutput) MasterSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMySQLSiteResult) string { return v.MasterSiteId }).(pulumi.StringOutput)
}

// The mapped migrate project Id.
func (o LookupMySQLSiteResultOutput) MigrateProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMySQLSiteResult) string { return v.MigrateProjectId }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupMySQLSiteResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMySQLSiteResult) string { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets the provisioning state.
func (o LookupMySQLSiteResultOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMySQLSiteResult) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupMySQLSiteResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupMySQLSiteResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupMySQLSiteResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMySQLSiteResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupMySQLSiteResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMySQLSiteResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMySQLSiteResultOutput{})
}
