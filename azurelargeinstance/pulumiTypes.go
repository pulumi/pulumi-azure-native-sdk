// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azurelargeinstance

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Specifies the disk information fo the Azure Large Instance
type Disk struct {
	// Specifies the size of an empty data disk in gigabytes.
	DiskSizeGB *int `pulumi:"diskSizeGB"`
	// The disk name.
	Name *string `pulumi:"name"`
}

// DiskInput is an input type that accepts DiskArgs and DiskOutput values.
// You can construct a concrete instance of `DiskInput` via:
//
//	DiskArgs{...}
type DiskInput interface {
	pulumi.Input

	ToDiskOutput() DiskOutput
	ToDiskOutputWithContext(context.Context) DiskOutput
}

// Specifies the disk information fo the Azure Large Instance
type DiskArgs struct {
	// Specifies the size of an empty data disk in gigabytes.
	DiskSizeGB pulumi.IntPtrInput `pulumi:"diskSizeGB"`
	// The disk name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Disk)(nil)).Elem()
}

func (i DiskArgs) ToDiskOutput() DiskOutput {
	return i.ToDiskOutputWithContext(context.Background())
}

func (i DiskArgs) ToDiskOutputWithContext(ctx context.Context) DiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskOutput)
}

// DiskArrayInput is an input type that accepts DiskArray and DiskArrayOutput values.
// You can construct a concrete instance of `DiskArrayInput` via:
//
//	DiskArray{ DiskArgs{...} }
type DiskArrayInput interface {
	pulumi.Input

	ToDiskArrayOutput() DiskArrayOutput
	ToDiskArrayOutputWithContext(context.Context) DiskArrayOutput
}

type DiskArray []DiskInput

func (DiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Disk)(nil)).Elem()
}

func (i DiskArray) ToDiskArrayOutput() DiskArrayOutput {
	return i.ToDiskArrayOutputWithContext(context.Background())
}

func (i DiskArray) ToDiskArrayOutputWithContext(ctx context.Context) DiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskArrayOutput)
}

// Specifies the disk information fo the Azure Large Instance
type DiskOutput struct{ *pulumi.OutputState }

func (DiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Disk)(nil)).Elem()
}

func (o DiskOutput) ToDiskOutput() DiskOutput {
	return o
}

func (o DiskOutput) ToDiskOutputWithContext(ctx context.Context) DiskOutput {
	return o
}

// Specifies the size of an empty data disk in gigabytes.
func (o DiskOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Disk) *int { return v.DiskSizeGB }).(pulumi.IntPtrOutput)
}

// The disk name.
func (o DiskOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Disk) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DiskArrayOutput struct{ *pulumi.OutputState }

func (DiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Disk)(nil)).Elem()
}

func (o DiskArrayOutput) ToDiskArrayOutput() DiskArrayOutput {
	return o
}

func (o DiskArrayOutput) ToDiskArrayOutputWithContext(ctx context.Context) DiskArrayOutput {
	return o
}

func (o DiskArrayOutput) Index(i pulumi.IntInput) DiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Disk {
		return vs[0].([]Disk)[vs[1].(int)]
	}).(DiskOutput)
}

// Specifies the disk information fo the Azure Large Instance
type DiskResponse struct {
	// Specifies the size of an empty data disk in gigabytes.
	DiskSizeGB *int `pulumi:"diskSizeGB"`
	// Specifies the logical unit number of the data disk. This value is used to
	// identify data disks within the VM and therefore must be unique for each data
	// disk attached to a VM.
	Lun int `pulumi:"lun"`
	// The disk name.
	Name *string `pulumi:"name"`
}

// Specifies the disk information fo the Azure Large Instance
type DiskResponseOutput struct{ *pulumi.OutputState }

func (DiskResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskResponse)(nil)).Elem()
}

func (o DiskResponseOutput) ToDiskResponseOutput() DiskResponseOutput {
	return o
}

func (o DiskResponseOutput) ToDiskResponseOutputWithContext(ctx context.Context) DiskResponseOutput {
	return o
}

// Specifies the size of an empty data disk in gigabytes.
func (o DiskResponseOutput) DiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DiskResponse) *int { return v.DiskSizeGB }).(pulumi.IntPtrOutput)
}

// Specifies the logical unit number of the data disk. This value is used to
// identify data disks within the VM and therefore must be unique for each data
// disk attached to a VM.
func (o DiskResponseOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v DiskResponse) int { return v.Lun }).(pulumi.IntOutput)
}

// The disk name.
func (o DiskResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DiskResponseArrayOutput struct{ *pulumi.OutputState }

func (DiskResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiskResponse)(nil)).Elem()
}

func (o DiskResponseArrayOutput) ToDiskResponseArrayOutput() DiskResponseArrayOutput {
	return o
}

func (o DiskResponseArrayOutput) ToDiskResponseArrayOutputWithContext(ctx context.Context) DiskResponseArrayOutput {
	return o
}

func (o DiskResponseArrayOutput) Index(i pulumi.IntInput) DiskResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiskResponse {
		return vs[0].([]DiskResponse)[vs[1].(int)]
	}).(DiskResponseOutput)
}

// Specifies the hardware settings for the Azure Large Instance.
type HardwareProfile struct {
	// Specifies the Azure Large Instance SKU.
	AzureLargeInstanceSize *string `pulumi:"azureLargeInstanceSize"`
	// Name of the hardware type (vendor and/or their product name)
	HardwareType *string `pulumi:"hardwareType"`
}

// HardwareProfileInput is an input type that accepts HardwareProfileArgs and HardwareProfileOutput values.
// You can construct a concrete instance of `HardwareProfileInput` via:
//
//	HardwareProfileArgs{...}
type HardwareProfileInput interface {
	pulumi.Input

	ToHardwareProfileOutput() HardwareProfileOutput
	ToHardwareProfileOutputWithContext(context.Context) HardwareProfileOutput
}

// Specifies the hardware settings for the Azure Large Instance.
type HardwareProfileArgs struct {
	// Specifies the Azure Large Instance SKU.
	AzureLargeInstanceSize pulumi.StringPtrInput `pulumi:"azureLargeInstanceSize"`
	// Name of the hardware type (vendor and/or their product name)
	HardwareType pulumi.StringPtrInput `pulumi:"hardwareType"`
}

func (HardwareProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HardwareProfile)(nil)).Elem()
}

func (i HardwareProfileArgs) ToHardwareProfileOutput() HardwareProfileOutput {
	return i.ToHardwareProfileOutputWithContext(context.Background())
}

func (i HardwareProfileArgs) ToHardwareProfileOutputWithContext(ctx context.Context) HardwareProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HardwareProfileOutput)
}

func (i HardwareProfileArgs) ToHardwareProfilePtrOutput() HardwareProfilePtrOutput {
	return i.ToHardwareProfilePtrOutputWithContext(context.Background())
}

func (i HardwareProfileArgs) ToHardwareProfilePtrOutputWithContext(ctx context.Context) HardwareProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HardwareProfileOutput).ToHardwareProfilePtrOutputWithContext(ctx)
}

// HardwareProfilePtrInput is an input type that accepts HardwareProfileArgs, HardwareProfilePtr and HardwareProfilePtrOutput values.
// You can construct a concrete instance of `HardwareProfilePtrInput` via:
//
//	        HardwareProfileArgs{...}
//
//	or:
//
//	        nil
type HardwareProfilePtrInput interface {
	pulumi.Input

	ToHardwareProfilePtrOutput() HardwareProfilePtrOutput
	ToHardwareProfilePtrOutputWithContext(context.Context) HardwareProfilePtrOutput
}

type hardwareProfilePtrType HardwareProfileArgs

func HardwareProfilePtr(v *HardwareProfileArgs) HardwareProfilePtrInput {
	return (*hardwareProfilePtrType)(v)
}

func (*hardwareProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HardwareProfile)(nil)).Elem()
}

func (i *hardwareProfilePtrType) ToHardwareProfilePtrOutput() HardwareProfilePtrOutput {
	return i.ToHardwareProfilePtrOutputWithContext(context.Background())
}

func (i *hardwareProfilePtrType) ToHardwareProfilePtrOutputWithContext(ctx context.Context) HardwareProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HardwareProfilePtrOutput)
}

// Specifies the hardware settings for the Azure Large Instance.
type HardwareProfileOutput struct{ *pulumi.OutputState }

func (HardwareProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HardwareProfile)(nil)).Elem()
}

func (o HardwareProfileOutput) ToHardwareProfileOutput() HardwareProfileOutput {
	return o
}

func (o HardwareProfileOutput) ToHardwareProfileOutputWithContext(ctx context.Context) HardwareProfileOutput {
	return o
}

func (o HardwareProfileOutput) ToHardwareProfilePtrOutput() HardwareProfilePtrOutput {
	return o.ToHardwareProfilePtrOutputWithContext(context.Background())
}

func (o HardwareProfileOutput) ToHardwareProfilePtrOutputWithContext(ctx context.Context) HardwareProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HardwareProfile) *HardwareProfile {
		return &v
	}).(HardwareProfilePtrOutput)
}

// Specifies the Azure Large Instance SKU.
func (o HardwareProfileOutput) AzureLargeInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HardwareProfile) *string { return v.AzureLargeInstanceSize }).(pulumi.StringPtrOutput)
}

// Name of the hardware type (vendor and/or their product name)
func (o HardwareProfileOutput) HardwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HardwareProfile) *string { return v.HardwareType }).(pulumi.StringPtrOutput)
}

type HardwareProfilePtrOutput struct{ *pulumi.OutputState }

func (HardwareProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HardwareProfile)(nil)).Elem()
}

func (o HardwareProfilePtrOutput) ToHardwareProfilePtrOutput() HardwareProfilePtrOutput {
	return o
}

func (o HardwareProfilePtrOutput) ToHardwareProfilePtrOutputWithContext(ctx context.Context) HardwareProfilePtrOutput {
	return o
}

func (o HardwareProfilePtrOutput) Elem() HardwareProfileOutput {
	return o.ApplyT(func(v *HardwareProfile) HardwareProfile {
		if v != nil {
			return *v
		}
		var ret HardwareProfile
		return ret
	}).(HardwareProfileOutput)
}

// Specifies the Azure Large Instance SKU.
func (o HardwareProfilePtrOutput) AzureLargeInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HardwareProfile) *string {
		if v == nil {
			return nil
		}
		return v.AzureLargeInstanceSize
	}).(pulumi.StringPtrOutput)
}

// Name of the hardware type (vendor and/or their product name)
func (o HardwareProfilePtrOutput) HardwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HardwareProfile) *string {
		if v == nil {
			return nil
		}
		return v.HardwareType
	}).(pulumi.StringPtrOutput)
}

// Specifies the hardware settings for the Azure Large Instance.
type HardwareProfileResponse struct {
	// Specifies the Azure Large Instance SKU.
	AzureLargeInstanceSize *string `pulumi:"azureLargeInstanceSize"`
	// Name of the hardware type (vendor and/or their product name)
	HardwareType *string `pulumi:"hardwareType"`
}

// Specifies the hardware settings for the Azure Large Instance.
type HardwareProfileResponseOutput struct{ *pulumi.OutputState }

func (HardwareProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HardwareProfileResponse)(nil)).Elem()
}

func (o HardwareProfileResponseOutput) ToHardwareProfileResponseOutput() HardwareProfileResponseOutput {
	return o
}

func (o HardwareProfileResponseOutput) ToHardwareProfileResponseOutputWithContext(ctx context.Context) HardwareProfileResponseOutput {
	return o
}

// Specifies the Azure Large Instance SKU.
func (o HardwareProfileResponseOutput) AzureLargeInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HardwareProfileResponse) *string { return v.AzureLargeInstanceSize }).(pulumi.StringPtrOutput)
}

// Name of the hardware type (vendor and/or their product name)
func (o HardwareProfileResponseOutput) HardwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HardwareProfileResponse) *string { return v.HardwareType }).(pulumi.StringPtrOutput)
}

type HardwareProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (HardwareProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HardwareProfileResponse)(nil)).Elem()
}

func (o HardwareProfileResponsePtrOutput) ToHardwareProfileResponsePtrOutput() HardwareProfileResponsePtrOutput {
	return o
}

func (o HardwareProfileResponsePtrOutput) ToHardwareProfileResponsePtrOutputWithContext(ctx context.Context) HardwareProfileResponsePtrOutput {
	return o
}

func (o HardwareProfileResponsePtrOutput) Elem() HardwareProfileResponseOutput {
	return o.ApplyT(func(v *HardwareProfileResponse) HardwareProfileResponse {
		if v != nil {
			return *v
		}
		var ret HardwareProfileResponse
		return ret
	}).(HardwareProfileResponseOutput)
}

// Specifies the Azure Large Instance SKU.
func (o HardwareProfileResponsePtrOutput) AzureLargeInstanceSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HardwareProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.AzureLargeInstanceSize
	}).(pulumi.StringPtrOutput)
}

// Name of the hardware type (vendor and/or their product name)
func (o HardwareProfileResponsePtrOutput) HardwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HardwareProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.HardwareType
	}).(pulumi.StringPtrOutput)
}

// Specifies the IP address of the network interface.
type IpAddress struct {
	// Specifies the IP address of the network interface.
	IpAddress *string `pulumi:"ipAddress"`
}

// IpAddressInput is an input type that accepts IpAddressArgs and IpAddressOutput values.
// You can construct a concrete instance of `IpAddressInput` via:
//
//	IpAddressArgs{...}
type IpAddressInput interface {
	pulumi.Input

	ToIpAddressOutput() IpAddressOutput
	ToIpAddressOutputWithContext(context.Context) IpAddressOutput
}

// Specifies the IP address of the network interface.
type IpAddressArgs struct {
	// Specifies the IP address of the network interface.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (IpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAddress)(nil)).Elem()
}

func (i IpAddressArgs) ToIpAddressOutput() IpAddressOutput {
	return i.ToIpAddressOutputWithContext(context.Background())
}

func (i IpAddressArgs) ToIpAddressOutputWithContext(ctx context.Context) IpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAddressOutput)
}

// IpAddressArrayInput is an input type that accepts IpAddressArray and IpAddressArrayOutput values.
// You can construct a concrete instance of `IpAddressArrayInput` via:
//
//	IpAddressArray{ IpAddressArgs{...} }
type IpAddressArrayInput interface {
	pulumi.Input

	ToIpAddressArrayOutput() IpAddressArrayOutput
	ToIpAddressArrayOutputWithContext(context.Context) IpAddressArrayOutput
}

type IpAddressArray []IpAddressInput

func (IpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpAddress)(nil)).Elem()
}

func (i IpAddressArray) ToIpAddressArrayOutput() IpAddressArrayOutput {
	return i.ToIpAddressArrayOutputWithContext(context.Background())
}

func (i IpAddressArray) ToIpAddressArrayOutputWithContext(ctx context.Context) IpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAddressArrayOutput)
}

// Specifies the IP address of the network interface.
type IpAddressOutput struct{ *pulumi.OutputState }

func (IpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAddress)(nil)).Elem()
}

func (o IpAddressOutput) ToIpAddressOutput() IpAddressOutput {
	return o
}

func (o IpAddressOutput) ToIpAddressOutputWithContext(ctx context.Context) IpAddressOutput {
	return o
}

// Specifies the IP address of the network interface.
func (o IpAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type IpAddressArrayOutput struct{ *pulumi.OutputState }

func (IpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpAddress)(nil)).Elem()
}

func (o IpAddressArrayOutput) ToIpAddressArrayOutput() IpAddressArrayOutput {
	return o
}

func (o IpAddressArrayOutput) ToIpAddressArrayOutputWithContext(ctx context.Context) IpAddressArrayOutput {
	return o
}

func (o IpAddressArrayOutput) Index(i pulumi.IntInput) IpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpAddress {
		return vs[0].([]IpAddress)[vs[1].(int)]
	}).(IpAddressOutput)
}

// Specifies the IP address of the network interface.
type IpAddressResponse struct {
	// Specifies the IP address of the network interface.
	IpAddress *string `pulumi:"ipAddress"`
}

// Specifies the IP address of the network interface.
type IpAddressResponseOutput struct{ *pulumi.OutputState }

func (IpAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAddressResponse)(nil)).Elem()
}

func (o IpAddressResponseOutput) ToIpAddressResponseOutput() IpAddressResponseOutput {
	return o
}

func (o IpAddressResponseOutput) ToIpAddressResponseOutputWithContext(ctx context.Context) IpAddressResponseOutput {
	return o
}

// Specifies the IP address of the network interface.
func (o IpAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type IpAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (IpAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpAddressResponse)(nil)).Elem()
}

func (o IpAddressResponseArrayOutput) ToIpAddressResponseArrayOutput() IpAddressResponseArrayOutput {
	return o
}

func (o IpAddressResponseArrayOutput) ToIpAddressResponseArrayOutputWithContext(ctx context.Context) IpAddressResponseArrayOutput {
	return o
}

func (o IpAddressResponseArrayOutput) Index(i pulumi.IntInput) IpAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpAddressResponse {
		return vs[0].([]IpAddressResponse)[vs[1].(int)]
	}).(IpAddressResponseOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Specifies the network settings for the Azure Large Instance disks.
type NetworkProfile struct {
	// Specifies the circuit id for connecting to express route.
	CircuitId *string `pulumi:"circuitId"`
	// Specifies the network interfaces for the Azure Large Instance.
	NetworkInterfaces []IpAddress `pulumi:"networkInterfaces"`
}

// NetworkProfileInput is an input type that accepts NetworkProfileArgs and NetworkProfileOutput values.
// You can construct a concrete instance of `NetworkProfileInput` via:
//
//	NetworkProfileArgs{...}
type NetworkProfileInput interface {
	pulumi.Input

	ToNetworkProfileOutput() NetworkProfileOutput
	ToNetworkProfileOutputWithContext(context.Context) NetworkProfileOutput
}

// Specifies the network settings for the Azure Large Instance disks.
type NetworkProfileArgs struct {
	// Specifies the circuit id for connecting to express route.
	CircuitId pulumi.StringPtrInput `pulumi:"circuitId"`
	// Specifies the network interfaces for the Azure Large Instance.
	NetworkInterfaces IpAddressArrayInput `pulumi:"networkInterfaces"`
}

func (NetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (i NetworkProfileArgs) ToNetworkProfileOutput() NetworkProfileOutput {
	return i.ToNetworkProfileOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput)
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i NetworkProfileArgs) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput).ToNetworkProfilePtrOutputWithContext(ctx)
}

// NetworkProfilePtrInput is an input type that accepts NetworkProfileArgs, NetworkProfilePtr and NetworkProfilePtrOutput values.
// You can construct a concrete instance of `NetworkProfilePtrInput` via:
//
//	        NetworkProfileArgs{...}
//
//	or:
//
//	        nil
type NetworkProfilePtrInput interface {
	pulumi.Input

	ToNetworkProfilePtrOutput() NetworkProfilePtrOutput
	ToNetworkProfilePtrOutputWithContext(context.Context) NetworkProfilePtrOutput
}

type networkProfilePtrType NetworkProfileArgs

func NetworkProfilePtr(v *NetworkProfileArgs) NetworkProfilePtrInput {
	return (*networkProfilePtrType)(v)
}

func (*networkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return i.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *networkProfilePtrType) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfilePtrOutput)
}

// Specifies the network settings for the Azure Large Instance disks.
type NetworkProfileOutput struct{ *pulumi.OutputState }

func (NetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (o NetworkProfileOutput) ToNetworkProfileOutput() NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return o.ToNetworkProfilePtrOutputWithContext(context.Background())
}

func (o NetworkProfileOutput) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkProfile) *NetworkProfile {
		return &v
	}).(NetworkProfilePtrOutput)
}

// Specifies the circuit id for connecting to express route.
func (o NetworkProfileOutput) CircuitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfile) *string { return v.CircuitId }).(pulumi.StringPtrOutput)
}

// Specifies the network interfaces for the Azure Large Instance.
func (o NetworkProfileOutput) NetworkInterfaces() IpAddressArrayOutput {
	return o.ApplyT(func(v NetworkProfile) []IpAddress { return v.NetworkInterfaces }).(IpAddressArrayOutput)
}

type NetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (o NetworkProfilePtrOutput) ToNetworkProfilePtrOutput() NetworkProfilePtrOutput {
	return o
}

func (o NetworkProfilePtrOutput) ToNetworkProfilePtrOutputWithContext(ctx context.Context) NetworkProfilePtrOutput {
	return o
}

func (o NetworkProfilePtrOutput) Elem() NetworkProfileOutput {
	return o.ApplyT(func(v *NetworkProfile) NetworkProfile {
		if v != nil {
			return *v
		}
		var ret NetworkProfile
		return ret
	}).(NetworkProfileOutput)
}

// Specifies the circuit id for connecting to express route.
func (o NetworkProfilePtrOutput) CircuitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.CircuitId
	}).(pulumi.StringPtrOutput)
}

// Specifies the network interfaces for the Azure Large Instance.
func (o NetworkProfilePtrOutput) NetworkInterfaces() IpAddressArrayOutput {
	return o.ApplyT(func(v *NetworkProfile) []IpAddress {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(IpAddressArrayOutput)
}

// Specifies the network settings for the Azure Large Instance disks.
type NetworkProfileResponse struct {
	// Specifies the circuit id for connecting to express route.
	CircuitId *string `pulumi:"circuitId"`
	// Specifies the network interfaces for the Azure Large Instance.
	NetworkInterfaces []IpAddressResponse `pulumi:"networkInterfaces"`
}

// Specifies the network settings for the Azure Large Instance disks.
type NetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutput() NetworkProfileResponseOutput {
	return o
}

func (o NetworkProfileResponseOutput) ToNetworkProfileResponseOutputWithContext(ctx context.Context) NetworkProfileResponseOutput {
	return o
}

// Specifies the circuit id for connecting to express route.
func (o NetworkProfileResponseOutput) CircuitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileResponse) *string { return v.CircuitId }).(pulumi.StringPtrOutput)
}

// Specifies the network interfaces for the Azure Large Instance.
func (o NetworkProfileResponseOutput) NetworkInterfaces() IpAddressResponseArrayOutput {
	return o.ApplyT(func(v NetworkProfileResponse) []IpAddressResponse { return v.NetworkInterfaces }).(IpAddressResponseArrayOutput)
}

type NetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfileResponse)(nil)).Elem()
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutput() NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) ToNetworkProfileResponsePtrOutputWithContext(ctx context.Context) NetworkProfileResponsePtrOutput {
	return o
}

func (o NetworkProfileResponsePtrOutput) Elem() NetworkProfileResponseOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) NetworkProfileResponse {
		if v != nil {
			return *v
		}
		var ret NetworkProfileResponse
		return ret
	}).(NetworkProfileResponseOutput)
}

// Specifies the circuit id for connecting to express route.
func (o NetworkProfileResponsePtrOutput) CircuitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.CircuitId
	}).(pulumi.StringPtrOutput)
}

// Specifies the network interfaces for the Azure Large Instance.
func (o NetworkProfileResponsePtrOutput) NetworkInterfaces() IpAddressResponseArrayOutput {
	return o.ApplyT(func(v *NetworkProfileResponse) []IpAddressResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(IpAddressResponseArrayOutput)
}

// Specifies the operating system settings for the Azure Large Instance.
type OsProfile struct {
	// Specifies the host OS name of the Azure Large Instance.
	ComputerName *string `pulumi:"computerName"`
	// This property allows you to specify the type of the OS.
	OsType *string `pulumi:"osType"`
	// Specifies the SSH public key used to access the operating system.
	SshPublicKey *string `pulumi:"sshPublicKey"`
	// Specifies version of operating system.
	Version *string `pulumi:"version"`
}

// OsProfileInput is an input type that accepts OsProfileArgs and OsProfileOutput values.
// You can construct a concrete instance of `OsProfileInput` via:
//
//	OsProfileArgs{...}
type OsProfileInput interface {
	pulumi.Input

	ToOsProfileOutput() OsProfileOutput
	ToOsProfileOutputWithContext(context.Context) OsProfileOutput
}

// Specifies the operating system settings for the Azure Large Instance.
type OsProfileArgs struct {
	// Specifies the host OS name of the Azure Large Instance.
	ComputerName pulumi.StringPtrInput `pulumi:"computerName"`
	// This property allows you to specify the type of the OS.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Specifies the SSH public key used to access the operating system.
	SshPublicKey pulumi.StringPtrInput `pulumi:"sshPublicKey"`
	// Specifies version of operating system.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (OsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OsProfile)(nil)).Elem()
}

func (i OsProfileArgs) ToOsProfileOutput() OsProfileOutput {
	return i.ToOsProfileOutputWithContext(context.Background())
}

func (i OsProfileArgs) ToOsProfileOutputWithContext(ctx context.Context) OsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsProfileOutput)
}

func (i OsProfileArgs) ToOsProfilePtrOutput() OsProfilePtrOutput {
	return i.ToOsProfilePtrOutputWithContext(context.Background())
}

func (i OsProfileArgs) ToOsProfilePtrOutputWithContext(ctx context.Context) OsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsProfileOutput).ToOsProfilePtrOutputWithContext(ctx)
}

// OsProfilePtrInput is an input type that accepts OsProfileArgs, OsProfilePtr and OsProfilePtrOutput values.
// You can construct a concrete instance of `OsProfilePtrInput` via:
//
//	        OsProfileArgs{...}
//
//	or:
//
//	        nil
type OsProfilePtrInput interface {
	pulumi.Input

	ToOsProfilePtrOutput() OsProfilePtrOutput
	ToOsProfilePtrOutputWithContext(context.Context) OsProfilePtrOutput
}

type osProfilePtrType OsProfileArgs

func OsProfilePtr(v *OsProfileArgs) OsProfilePtrInput {
	return (*osProfilePtrType)(v)
}

func (*osProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OsProfile)(nil)).Elem()
}

func (i *osProfilePtrType) ToOsProfilePtrOutput() OsProfilePtrOutput {
	return i.ToOsProfilePtrOutputWithContext(context.Background())
}

func (i *osProfilePtrType) ToOsProfilePtrOutputWithContext(ctx context.Context) OsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsProfilePtrOutput)
}

// Specifies the operating system settings for the Azure Large Instance.
type OsProfileOutput struct{ *pulumi.OutputState }

func (OsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsProfile)(nil)).Elem()
}

func (o OsProfileOutput) ToOsProfileOutput() OsProfileOutput {
	return o
}

func (o OsProfileOutput) ToOsProfileOutputWithContext(ctx context.Context) OsProfileOutput {
	return o
}

func (o OsProfileOutput) ToOsProfilePtrOutput() OsProfilePtrOutput {
	return o.ToOsProfilePtrOutputWithContext(context.Background())
}

func (o OsProfileOutput) ToOsProfilePtrOutputWithContext(ctx context.Context) OsProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsProfile) *OsProfile {
		return &v
	}).(OsProfilePtrOutput)
}

// Specifies the host OS name of the Azure Large Instance.
func (o OsProfileOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsProfile) *string { return v.ComputerName }).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS.
func (o OsProfileOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsProfile) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Specifies the SSH public key used to access the operating system.
func (o OsProfileOutput) SshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsProfile) *string { return v.SshPublicKey }).(pulumi.StringPtrOutput)
}

// Specifies version of operating system.
func (o OsProfileOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsProfile) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type OsProfilePtrOutput struct{ *pulumi.OutputState }

func (OsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsProfile)(nil)).Elem()
}

func (o OsProfilePtrOutput) ToOsProfilePtrOutput() OsProfilePtrOutput {
	return o
}

func (o OsProfilePtrOutput) ToOsProfilePtrOutputWithContext(ctx context.Context) OsProfilePtrOutput {
	return o
}

func (o OsProfilePtrOutput) Elem() OsProfileOutput {
	return o.ApplyT(func(v *OsProfile) OsProfile {
		if v != nil {
			return *v
		}
		var ret OsProfile
		return ret
	}).(OsProfileOutput)
}

// Specifies the host OS name of the Azure Large Instance.
func (o OsProfilePtrOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsProfile) *string {
		if v == nil {
			return nil
		}
		return v.ComputerName
	}).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS.
func (o OsProfilePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsProfile) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// Specifies the SSH public key used to access the operating system.
func (o OsProfilePtrOutput) SshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsProfile) *string {
		if v == nil {
			return nil
		}
		return v.SshPublicKey
	}).(pulumi.StringPtrOutput)
}

// Specifies version of operating system.
func (o OsProfilePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsProfile) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Specifies the operating system settings for the Azure Large Instance.
type OsProfileResponse struct {
	// Specifies the host OS name of the Azure Large Instance.
	ComputerName *string `pulumi:"computerName"`
	// This property allows you to specify the type of the OS.
	OsType *string `pulumi:"osType"`
	// Specifies the SSH public key used to access the operating system.
	SshPublicKey *string `pulumi:"sshPublicKey"`
	// Specifies version of operating system.
	Version *string `pulumi:"version"`
}

// Specifies the operating system settings for the Azure Large Instance.
type OsProfileResponseOutput struct{ *pulumi.OutputState }

func (OsProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsProfileResponse)(nil)).Elem()
}

func (o OsProfileResponseOutput) ToOsProfileResponseOutput() OsProfileResponseOutput {
	return o
}

func (o OsProfileResponseOutput) ToOsProfileResponseOutputWithContext(ctx context.Context) OsProfileResponseOutput {
	return o
}

// Specifies the host OS name of the Azure Large Instance.
func (o OsProfileResponseOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsProfileResponse) *string { return v.ComputerName }).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS.
func (o OsProfileResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsProfileResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Specifies the SSH public key used to access the operating system.
func (o OsProfileResponseOutput) SshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsProfileResponse) *string { return v.SshPublicKey }).(pulumi.StringPtrOutput)
}

// Specifies version of operating system.
func (o OsProfileResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OsProfileResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type OsProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (OsProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsProfileResponse)(nil)).Elem()
}

func (o OsProfileResponsePtrOutput) ToOsProfileResponsePtrOutput() OsProfileResponsePtrOutput {
	return o
}

func (o OsProfileResponsePtrOutput) ToOsProfileResponsePtrOutputWithContext(ctx context.Context) OsProfileResponsePtrOutput {
	return o
}

func (o OsProfileResponsePtrOutput) Elem() OsProfileResponseOutput {
	return o.ApplyT(func(v *OsProfileResponse) OsProfileResponse {
		if v != nil {
			return *v
		}
		var ret OsProfileResponse
		return ret
	}).(OsProfileResponseOutput)
}

// Specifies the host OS name of the Azure Large Instance.
func (o OsProfileResponsePtrOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ComputerName
	}).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS.
func (o OsProfileResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// Specifies the SSH public key used to access the operating system.
func (o OsProfileResponsePtrOutput) SshPublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.SshPublicKey
	}).(pulumi.StringPtrOutput)
}

// Specifies version of operating system.
func (o OsProfileResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Describes the billing related details of the AzureLargeStorageInstance.
type StorageBillingProperties struct {
	// the billing mode for the storage instance
	BillingMode *string `pulumi:"billingMode"`
	// the SKU type that is provisioned
	Sku *string `pulumi:"sku"`
}

// StorageBillingPropertiesInput is an input type that accepts StorageBillingPropertiesArgs and StorageBillingPropertiesOutput values.
// You can construct a concrete instance of `StorageBillingPropertiesInput` via:
//
//	StorageBillingPropertiesArgs{...}
type StorageBillingPropertiesInput interface {
	pulumi.Input

	ToStorageBillingPropertiesOutput() StorageBillingPropertiesOutput
	ToStorageBillingPropertiesOutputWithContext(context.Context) StorageBillingPropertiesOutput
}

// Describes the billing related details of the AzureLargeStorageInstance.
type StorageBillingPropertiesArgs struct {
	// the billing mode for the storage instance
	BillingMode pulumi.StringPtrInput `pulumi:"billingMode"`
	// the SKU type that is provisioned
	Sku pulumi.StringPtrInput `pulumi:"sku"`
}

func (StorageBillingPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBillingProperties)(nil)).Elem()
}

func (i StorageBillingPropertiesArgs) ToStorageBillingPropertiesOutput() StorageBillingPropertiesOutput {
	return i.ToStorageBillingPropertiesOutputWithContext(context.Background())
}

func (i StorageBillingPropertiesArgs) ToStorageBillingPropertiesOutputWithContext(ctx context.Context) StorageBillingPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBillingPropertiesOutput)
}

func (i StorageBillingPropertiesArgs) ToStorageBillingPropertiesPtrOutput() StorageBillingPropertiesPtrOutput {
	return i.ToStorageBillingPropertiesPtrOutputWithContext(context.Background())
}

func (i StorageBillingPropertiesArgs) ToStorageBillingPropertiesPtrOutputWithContext(ctx context.Context) StorageBillingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBillingPropertiesOutput).ToStorageBillingPropertiesPtrOutputWithContext(ctx)
}

// StorageBillingPropertiesPtrInput is an input type that accepts StorageBillingPropertiesArgs, StorageBillingPropertiesPtr and StorageBillingPropertiesPtrOutput values.
// You can construct a concrete instance of `StorageBillingPropertiesPtrInput` via:
//
//	        StorageBillingPropertiesArgs{...}
//
//	or:
//
//	        nil
type StorageBillingPropertiesPtrInput interface {
	pulumi.Input

	ToStorageBillingPropertiesPtrOutput() StorageBillingPropertiesPtrOutput
	ToStorageBillingPropertiesPtrOutputWithContext(context.Context) StorageBillingPropertiesPtrOutput
}

type storageBillingPropertiesPtrType StorageBillingPropertiesArgs

func StorageBillingPropertiesPtr(v *StorageBillingPropertiesArgs) StorageBillingPropertiesPtrInput {
	return (*storageBillingPropertiesPtrType)(v)
}

func (*storageBillingPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBillingProperties)(nil)).Elem()
}

func (i *storageBillingPropertiesPtrType) ToStorageBillingPropertiesPtrOutput() StorageBillingPropertiesPtrOutput {
	return i.ToStorageBillingPropertiesPtrOutputWithContext(context.Background())
}

func (i *storageBillingPropertiesPtrType) ToStorageBillingPropertiesPtrOutputWithContext(ctx context.Context) StorageBillingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBillingPropertiesPtrOutput)
}

// Describes the billing related details of the AzureLargeStorageInstance.
type StorageBillingPropertiesOutput struct{ *pulumi.OutputState }

func (StorageBillingPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBillingProperties)(nil)).Elem()
}

func (o StorageBillingPropertiesOutput) ToStorageBillingPropertiesOutput() StorageBillingPropertiesOutput {
	return o
}

func (o StorageBillingPropertiesOutput) ToStorageBillingPropertiesOutputWithContext(ctx context.Context) StorageBillingPropertiesOutput {
	return o
}

func (o StorageBillingPropertiesOutput) ToStorageBillingPropertiesPtrOutput() StorageBillingPropertiesPtrOutput {
	return o.ToStorageBillingPropertiesPtrOutputWithContext(context.Background())
}

func (o StorageBillingPropertiesOutput) ToStorageBillingPropertiesPtrOutputWithContext(ctx context.Context) StorageBillingPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageBillingProperties) *StorageBillingProperties {
		return &v
	}).(StorageBillingPropertiesPtrOutput)
}

// the billing mode for the storage instance
func (o StorageBillingPropertiesOutput) BillingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageBillingProperties) *string { return v.BillingMode }).(pulumi.StringPtrOutput)
}

// the SKU type that is provisioned
func (o StorageBillingPropertiesOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageBillingProperties) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

type StorageBillingPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StorageBillingPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBillingProperties)(nil)).Elem()
}

func (o StorageBillingPropertiesPtrOutput) ToStorageBillingPropertiesPtrOutput() StorageBillingPropertiesPtrOutput {
	return o
}

func (o StorageBillingPropertiesPtrOutput) ToStorageBillingPropertiesPtrOutputWithContext(ctx context.Context) StorageBillingPropertiesPtrOutput {
	return o
}

func (o StorageBillingPropertiesPtrOutput) Elem() StorageBillingPropertiesOutput {
	return o.ApplyT(func(v *StorageBillingProperties) StorageBillingProperties {
		if v != nil {
			return *v
		}
		var ret StorageBillingProperties
		return ret
	}).(StorageBillingPropertiesOutput)
}

// the billing mode for the storage instance
func (o StorageBillingPropertiesPtrOutput) BillingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageBillingProperties) *string {
		if v == nil {
			return nil
		}
		return v.BillingMode
	}).(pulumi.StringPtrOutput)
}

// the SKU type that is provisioned
func (o StorageBillingPropertiesPtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageBillingProperties) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// Describes the billing related details of the AzureLargeStorageInstance.
type StorageBillingPropertiesResponse struct {
	// the billing mode for the storage instance
	BillingMode *string `pulumi:"billingMode"`
	// the SKU type that is provisioned
	Sku *string `pulumi:"sku"`
}

// Describes the billing related details of the AzureLargeStorageInstance.
type StorageBillingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageBillingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBillingPropertiesResponse)(nil)).Elem()
}

func (o StorageBillingPropertiesResponseOutput) ToStorageBillingPropertiesResponseOutput() StorageBillingPropertiesResponseOutput {
	return o
}

func (o StorageBillingPropertiesResponseOutput) ToStorageBillingPropertiesResponseOutputWithContext(ctx context.Context) StorageBillingPropertiesResponseOutput {
	return o
}

// the billing mode for the storage instance
func (o StorageBillingPropertiesResponseOutput) BillingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageBillingPropertiesResponse) *string { return v.BillingMode }).(pulumi.StringPtrOutput)
}

// the SKU type that is provisioned
func (o StorageBillingPropertiesResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageBillingPropertiesResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

type StorageBillingPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageBillingPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBillingPropertiesResponse)(nil)).Elem()
}

func (o StorageBillingPropertiesResponsePtrOutput) ToStorageBillingPropertiesResponsePtrOutput() StorageBillingPropertiesResponsePtrOutput {
	return o
}

func (o StorageBillingPropertiesResponsePtrOutput) ToStorageBillingPropertiesResponsePtrOutputWithContext(ctx context.Context) StorageBillingPropertiesResponsePtrOutput {
	return o
}

func (o StorageBillingPropertiesResponsePtrOutput) Elem() StorageBillingPropertiesResponseOutput {
	return o.ApplyT(func(v *StorageBillingPropertiesResponse) StorageBillingPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret StorageBillingPropertiesResponse
		return ret
	}).(StorageBillingPropertiesResponseOutput)
}

// the billing mode for the storage instance
func (o StorageBillingPropertiesResponsePtrOutput) BillingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageBillingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.BillingMode
	}).(pulumi.StringPtrOutput)
}

// the SKU type that is provisioned
func (o StorageBillingPropertiesResponsePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageBillingPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// Specifies the storage settings for the Azure Large Instance disks.
type StorageProfile struct {
	// IP Address to connect to storage.
	NfsIpAddress *string `pulumi:"nfsIpAddress"`
	// Specifies information about the operating system disk used by Azure Large
	// Instance.
	OsDisks []Disk `pulumi:"osDisks"`
}

// StorageProfileInput is an input type that accepts StorageProfileArgs and StorageProfileOutput values.
// You can construct a concrete instance of `StorageProfileInput` via:
//
//	StorageProfileArgs{...}
type StorageProfileInput interface {
	pulumi.Input

	ToStorageProfileOutput() StorageProfileOutput
	ToStorageProfileOutputWithContext(context.Context) StorageProfileOutput
}

// Specifies the storage settings for the Azure Large Instance disks.
type StorageProfileArgs struct {
	// IP Address to connect to storage.
	NfsIpAddress pulumi.StringPtrInput `pulumi:"nfsIpAddress"`
	// Specifies information about the operating system disk used by Azure Large
	// Instance.
	OsDisks DiskArrayInput `pulumi:"osDisks"`
}

func (StorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfile)(nil)).Elem()
}

func (i StorageProfileArgs) ToStorageProfileOutput() StorageProfileOutput {
	return i.ToStorageProfileOutputWithContext(context.Background())
}

func (i StorageProfileArgs) ToStorageProfileOutputWithContext(ctx context.Context) StorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileOutput)
}

func (i StorageProfileArgs) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return i.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (i StorageProfileArgs) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileOutput).ToStorageProfilePtrOutputWithContext(ctx)
}

// StorageProfilePtrInput is an input type that accepts StorageProfileArgs, StorageProfilePtr and StorageProfilePtrOutput values.
// You can construct a concrete instance of `StorageProfilePtrInput` via:
//
//	        StorageProfileArgs{...}
//
//	or:
//
//	        nil
type StorageProfilePtrInput interface {
	pulumi.Input

	ToStorageProfilePtrOutput() StorageProfilePtrOutput
	ToStorageProfilePtrOutputWithContext(context.Context) StorageProfilePtrOutput
}

type storageProfilePtrType StorageProfileArgs

func StorageProfilePtr(v *StorageProfileArgs) StorageProfilePtrInput {
	return (*storageProfilePtrType)(v)
}

func (*storageProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfile)(nil)).Elem()
}

func (i *storageProfilePtrType) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return i.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (i *storageProfilePtrType) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfilePtrOutput)
}

// Specifies the storage settings for the Azure Large Instance disks.
type StorageProfileOutput struct{ *pulumi.OutputState }

func (StorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfile)(nil)).Elem()
}

func (o StorageProfileOutput) ToStorageProfileOutput() StorageProfileOutput {
	return o
}

func (o StorageProfileOutput) ToStorageProfileOutputWithContext(ctx context.Context) StorageProfileOutput {
	return o
}

func (o StorageProfileOutput) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return o.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (o StorageProfileOutput) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageProfile) *StorageProfile {
		return &v
	}).(StorageProfilePtrOutput)
}

// IP Address to connect to storage.
func (o StorageProfileOutput) NfsIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProfile) *string { return v.NfsIpAddress }).(pulumi.StringPtrOutput)
}

// Specifies information about the operating system disk used by Azure Large
// Instance.
func (o StorageProfileOutput) OsDisks() DiskArrayOutput {
	return o.ApplyT(func(v StorageProfile) []Disk { return v.OsDisks }).(DiskArrayOutput)
}

type StorageProfilePtrOutput struct{ *pulumi.OutputState }

func (StorageProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfile)(nil)).Elem()
}

func (o StorageProfilePtrOutput) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return o
}

func (o StorageProfilePtrOutput) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return o
}

func (o StorageProfilePtrOutput) Elem() StorageProfileOutput {
	return o.ApplyT(func(v *StorageProfile) StorageProfile {
		if v != nil {
			return *v
		}
		var ret StorageProfile
		return ret
	}).(StorageProfileOutput)
}

// IP Address to connect to storage.
func (o StorageProfilePtrOutput) NfsIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProfile) *string {
		if v == nil {
			return nil
		}
		return v.NfsIpAddress
	}).(pulumi.StringPtrOutput)
}

// Specifies information about the operating system disk used by Azure Large
// Instance.
func (o StorageProfilePtrOutput) OsDisks() DiskArrayOutput {
	return o.ApplyT(func(v *StorageProfile) []Disk {
		if v == nil {
			return nil
		}
		return v.OsDisks
	}).(DiskArrayOutput)
}

// Specifies the storage settings for the Azure Large Instance disks.
type StorageProfileResponse struct {
	// IP Address to connect to storage.
	NfsIpAddress *string `pulumi:"nfsIpAddress"`
	// Specifies information about the operating system disk used by Azure Large
	// Instance.
	OsDisks []DiskResponse `pulumi:"osDisks"`
}

// Specifies the storage settings for the Azure Large Instance disks.
type StorageProfileResponseOutput struct{ *pulumi.OutputState }

func (StorageProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfileResponse)(nil)).Elem()
}

func (o StorageProfileResponseOutput) ToStorageProfileResponseOutput() StorageProfileResponseOutput {
	return o
}

func (o StorageProfileResponseOutput) ToStorageProfileResponseOutputWithContext(ctx context.Context) StorageProfileResponseOutput {
	return o
}

// IP Address to connect to storage.
func (o StorageProfileResponseOutput) NfsIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProfileResponse) *string { return v.NfsIpAddress }).(pulumi.StringPtrOutput)
}

// Specifies information about the operating system disk used by Azure Large
// Instance.
func (o StorageProfileResponseOutput) OsDisks() DiskResponseArrayOutput {
	return o.ApplyT(func(v StorageProfileResponse) []DiskResponse { return v.OsDisks }).(DiskResponseArrayOutput)
}

type StorageProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfileResponse)(nil)).Elem()
}

func (o StorageProfileResponsePtrOutput) ToStorageProfileResponsePtrOutput() StorageProfileResponsePtrOutput {
	return o
}

func (o StorageProfileResponsePtrOutput) ToStorageProfileResponsePtrOutputWithContext(ctx context.Context) StorageProfileResponsePtrOutput {
	return o
}

func (o StorageProfileResponsePtrOutput) Elem() StorageProfileResponseOutput {
	return o.ApplyT(func(v *StorageProfileResponse) StorageProfileResponse {
		if v != nil {
			return *v
		}
		var ret StorageProfileResponse
		return ret
	}).(StorageProfileResponseOutput)
}

// IP Address to connect to storage.
func (o StorageProfileResponsePtrOutput) NfsIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.NfsIpAddress
	}).(pulumi.StringPtrOutput)
}

// Specifies information about the operating system disk used by Azure Large
// Instance.
func (o StorageProfileResponsePtrOutput) OsDisks() DiskResponseArrayOutput {
	return o.ApplyT(func(v *StorageProfileResponse) []DiskResponse {
		if v == nil {
			return nil
		}
		return v.OsDisks
	}).(DiskResponseArrayOutput)
}

// described the storage properties of the azure large storage instance
type StorageProperties struct {
	// the kind of storage instance
	Generation *string `pulumi:"generation"`
	// the hardware type of the storage instance
	HardwareType *string `pulumi:"hardwareType"`
	// the offering type for which the resource is getting provisioned
	OfferingType *string `pulumi:"offeringType"`
	// the billing related information for the resource
	StorageBillingProperties *StorageBillingProperties `pulumi:"storageBillingProperties"`
	// the storage protocol for which the resource is getting provisioned
	StorageType *string `pulumi:"storageType"`
	// the workload for which the resource is getting provisioned
	WorkloadType *string `pulumi:"workloadType"`
}

// StoragePropertiesInput is an input type that accepts StoragePropertiesArgs and StoragePropertiesOutput values.
// You can construct a concrete instance of `StoragePropertiesInput` via:
//
//	StoragePropertiesArgs{...}
type StoragePropertiesInput interface {
	pulumi.Input

	ToStoragePropertiesOutput() StoragePropertiesOutput
	ToStoragePropertiesOutputWithContext(context.Context) StoragePropertiesOutput
}

// described the storage properties of the azure large storage instance
type StoragePropertiesArgs struct {
	// the kind of storage instance
	Generation pulumi.StringPtrInput `pulumi:"generation"`
	// the hardware type of the storage instance
	HardwareType pulumi.StringPtrInput `pulumi:"hardwareType"`
	// the offering type for which the resource is getting provisioned
	OfferingType pulumi.StringPtrInput `pulumi:"offeringType"`
	// the billing related information for the resource
	StorageBillingProperties StorageBillingPropertiesPtrInput `pulumi:"storageBillingProperties"`
	// the storage protocol for which the resource is getting provisioned
	StorageType pulumi.StringPtrInput `pulumi:"storageType"`
	// the workload for which the resource is getting provisioned
	WorkloadType pulumi.StringPtrInput `pulumi:"workloadType"`
}

func (StoragePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProperties)(nil)).Elem()
}

func (i StoragePropertiesArgs) ToStoragePropertiesOutput() StoragePropertiesOutput {
	return i.ToStoragePropertiesOutputWithContext(context.Background())
}

func (i StoragePropertiesArgs) ToStoragePropertiesOutputWithContext(ctx context.Context) StoragePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoragePropertiesOutput)
}

func (i StoragePropertiesArgs) ToStoragePropertiesPtrOutput() StoragePropertiesPtrOutput {
	return i.ToStoragePropertiesPtrOutputWithContext(context.Background())
}

func (i StoragePropertiesArgs) ToStoragePropertiesPtrOutputWithContext(ctx context.Context) StoragePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoragePropertiesOutput).ToStoragePropertiesPtrOutputWithContext(ctx)
}

// StoragePropertiesPtrInput is an input type that accepts StoragePropertiesArgs, StoragePropertiesPtr and StoragePropertiesPtrOutput values.
// You can construct a concrete instance of `StoragePropertiesPtrInput` via:
//
//	        StoragePropertiesArgs{...}
//
//	or:
//
//	        nil
type StoragePropertiesPtrInput interface {
	pulumi.Input

	ToStoragePropertiesPtrOutput() StoragePropertiesPtrOutput
	ToStoragePropertiesPtrOutputWithContext(context.Context) StoragePropertiesPtrOutput
}

type storagePropertiesPtrType StoragePropertiesArgs

func StoragePropertiesPtr(v *StoragePropertiesArgs) StoragePropertiesPtrInput {
	return (*storagePropertiesPtrType)(v)
}

func (*storagePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProperties)(nil)).Elem()
}

func (i *storagePropertiesPtrType) ToStoragePropertiesPtrOutput() StoragePropertiesPtrOutput {
	return i.ToStoragePropertiesPtrOutputWithContext(context.Background())
}

func (i *storagePropertiesPtrType) ToStoragePropertiesPtrOutputWithContext(ctx context.Context) StoragePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoragePropertiesPtrOutput)
}

// described the storage properties of the azure large storage instance
type StoragePropertiesOutput struct{ *pulumi.OutputState }

func (StoragePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProperties)(nil)).Elem()
}

func (o StoragePropertiesOutput) ToStoragePropertiesOutput() StoragePropertiesOutput {
	return o
}

func (o StoragePropertiesOutput) ToStoragePropertiesOutputWithContext(ctx context.Context) StoragePropertiesOutput {
	return o
}

func (o StoragePropertiesOutput) ToStoragePropertiesPtrOutput() StoragePropertiesPtrOutput {
	return o.ToStoragePropertiesPtrOutputWithContext(context.Background())
}

func (o StoragePropertiesOutput) ToStoragePropertiesPtrOutputWithContext(ctx context.Context) StoragePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageProperties) *StorageProperties {
		return &v
	}).(StoragePropertiesPtrOutput)
}

// the kind of storage instance
func (o StoragePropertiesOutput) Generation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProperties) *string { return v.Generation }).(pulumi.StringPtrOutput)
}

// the hardware type of the storage instance
func (o StoragePropertiesOutput) HardwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProperties) *string { return v.HardwareType }).(pulumi.StringPtrOutput)
}

// the offering type for which the resource is getting provisioned
func (o StoragePropertiesOutput) OfferingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProperties) *string { return v.OfferingType }).(pulumi.StringPtrOutput)
}

// the billing related information for the resource
func (o StoragePropertiesOutput) StorageBillingProperties() StorageBillingPropertiesPtrOutput {
	return o.ApplyT(func(v StorageProperties) *StorageBillingProperties { return v.StorageBillingProperties }).(StorageBillingPropertiesPtrOutput)
}

// the storage protocol for which the resource is getting provisioned
func (o StoragePropertiesOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProperties) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

// the workload for which the resource is getting provisioned
func (o StoragePropertiesOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProperties) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

type StoragePropertiesPtrOutput struct{ *pulumi.OutputState }

func (StoragePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProperties)(nil)).Elem()
}

func (o StoragePropertiesPtrOutput) ToStoragePropertiesPtrOutput() StoragePropertiesPtrOutput {
	return o
}

func (o StoragePropertiesPtrOutput) ToStoragePropertiesPtrOutputWithContext(ctx context.Context) StoragePropertiesPtrOutput {
	return o
}

func (o StoragePropertiesPtrOutput) Elem() StoragePropertiesOutput {
	return o.ApplyT(func(v *StorageProperties) StorageProperties {
		if v != nil {
			return *v
		}
		var ret StorageProperties
		return ret
	}).(StoragePropertiesOutput)
}

// the kind of storage instance
func (o StoragePropertiesPtrOutput) Generation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProperties) *string {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.StringPtrOutput)
}

// the hardware type of the storage instance
func (o StoragePropertiesPtrOutput) HardwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProperties) *string {
		if v == nil {
			return nil
		}
		return v.HardwareType
	}).(pulumi.StringPtrOutput)
}

// the offering type for which the resource is getting provisioned
func (o StoragePropertiesPtrOutput) OfferingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProperties) *string {
		if v == nil {
			return nil
		}
		return v.OfferingType
	}).(pulumi.StringPtrOutput)
}

// the billing related information for the resource
func (o StoragePropertiesPtrOutput) StorageBillingProperties() StorageBillingPropertiesPtrOutput {
	return o.ApplyT(func(v *StorageProperties) *StorageBillingProperties {
		if v == nil {
			return nil
		}
		return v.StorageBillingProperties
	}).(StorageBillingPropertiesPtrOutput)
}

// the storage protocol for which the resource is getting provisioned
func (o StoragePropertiesPtrOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProperties) *string {
		if v == nil {
			return nil
		}
		return v.StorageType
	}).(pulumi.StringPtrOutput)
}

// the workload for which the resource is getting provisioned
func (o StoragePropertiesPtrOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadType
	}).(pulumi.StringPtrOutput)
}

// described the storage properties of the azure large storage instance
type StoragePropertiesResponse struct {
	// the kind of storage instance
	Generation *string `pulumi:"generation"`
	// the hardware type of the storage instance
	HardwareType *string `pulumi:"hardwareType"`
	// the offering type for which the resource is getting provisioned
	OfferingType *string `pulumi:"offeringType"`
	// State of provisioning of the AzureLargeStorageInstance
	ProvisioningState string `pulumi:"provisioningState"`
	// the billing related information for the resource
	StorageBillingProperties *StorageBillingPropertiesResponse `pulumi:"storageBillingProperties"`
	// the storage protocol for which the resource is getting provisioned
	StorageType *string `pulumi:"storageType"`
	// the workload for which the resource is getting provisioned
	WorkloadType *string `pulumi:"workloadType"`
}

// described the storage properties of the azure large storage instance
type StoragePropertiesResponseOutput struct{ *pulumi.OutputState }

func (StoragePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StoragePropertiesResponse)(nil)).Elem()
}

func (o StoragePropertiesResponseOutput) ToStoragePropertiesResponseOutput() StoragePropertiesResponseOutput {
	return o
}

func (o StoragePropertiesResponseOutput) ToStoragePropertiesResponseOutputWithContext(ctx context.Context) StoragePropertiesResponseOutput {
	return o
}

// the kind of storage instance
func (o StoragePropertiesResponseOutput) Generation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StoragePropertiesResponse) *string { return v.Generation }).(pulumi.StringPtrOutput)
}

// the hardware type of the storage instance
func (o StoragePropertiesResponseOutput) HardwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StoragePropertiesResponse) *string { return v.HardwareType }).(pulumi.StringPtrOutput)
}

// the offering type for which the resource is getting provisioned
func (o StoragePropertiesResponseOutput) OfferingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StoragePropertiesResponse) *string { return v.OfferingType }).(pulumi.StringPtrOutput)
}

// State of provisioning of the AzureLargeStorageInstance
func (o StoragePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v StoragePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// the billing related information for the resource
func (o StoragePropertiesResponseOutput) StorageBillingProperties() StorageBillingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v StoragePropertiesResponse) *StorageBillingPropertiesResponse { return v.StorageBillingProperties }).(StorageBillingPropertiesResponsePtrOutput)
}

// the storage protocol for which the resource is getting provisioned
func (o StoragePropertiesResponseOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StoragePropertiesResponse) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

// the workload for which the resource is getting provisioned
func (o StoragePropertiesResponseOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StoragePropertiesResponse) *string { return v.WorkloadType }).(pulumi.StringPtrOutput)
}

type StoragePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StoragePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StoragePropertiesResponse)(nil)).Elem()
}

func (o StoragePropertiesResponsePtrOutput) ToStoragePropertiesResponsePtrOutput() StoragePropertiesResponsePtrOutput {
	return o
}

func (o StoragePropertiesResponsePtrOutput) ToStoragePropertiesResponsePtrOutputWithContext(ctx context.Context) StoragePropertiesResponsePtrOutput {
	return o
}

func (o StoragePropertiesResponsePtrOutput) Elem() StoragePropertiesResponseOutput {
	return o.ApplyT(func(v *StoragePropertiesResponse) StoragePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret StoragePropertiesResponse
		return ret
	}).(StoragePropertiesResponseOutput)
}

// the kind of storage instance
func (o StoragePropertiesResponsePtrOutput) Generation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StoragePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Generation
	}).(pulumi.StringPtrOutput)
}

// the hardware type of the storage instance
func (o StoragePropertiesResponsePtrOutput) HardwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StoragePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.HardwareType
	}).(pulumi.StringPtrOutput)
}

// the offering type for which the resource is getting provisioned
func (o StoragePropertiesResponsePtrOutput) OfferingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StoragePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OfferingType
	}).(pulumi.StringPtrOutput)
}

// State of provisioning of the AzureLargeStorageInstance
func (o StoragePropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StoragePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// the billing related information for the resource
func (o StoragePropertiesResponsePtrOutput) StorageBillingProperties() StorageBillingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *StoragePropertiesResponse) *StorageBillingPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.StorageBillingProperties
	}).(StorageBillingPropertiesResponsePtrOutput)
}

// the storage protocol for which the resource is getting provisioned
func (o StoragePropertiesResponsePtrOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StoragePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageType
	}).(pulumi.StringPtrOutput)
}

// the workload for which the resource is getting provisioned
func (o StoragePropertiesResponsePtrOutput) WorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StoragePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadType
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(DiskOutput{})
	pulumi.RegisterOutputType(DiskArrayOutput{})
	pulumi.RegisterOutputType(DiskResponseOutput{})
	pulumi.RegisterOutputType(DiskResponseArrayOutput{})
	pulumi.RegisterOutputType(HardwareProfileOutput{})
	pulumi.RegisterOutputType(HardwareProfilePtrOutput{})
	pulumi.RegisterOutputType(HardwareProfileResponseOutput{})
	pulumi.RegisterOutputType(HardwareProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(IpAddressOutput{})
	pulumi.RegisterOutputType(IpAddressArrayOutput{})
	pulumi.RegisterOutputType(IpAddressResponseOutput{})
	pulumi.RegisterOutputType(IpAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileOutput{})
	pulumi.RegisterOutputType(NetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(NetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(OsProfileOutput{})
	pulumi.RegisterOutputType(OsProfilePtrOutput{})
	pulumi.RegisterOutputType(OsProfileResponseOutput{})
	pulumi.RegisterOutputType(OsProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageBillingPropertiesOutput{})
	pulumi.RegisterOutputType(StorageBillingPropertiesPtrOutput{})
	pulumi.RegisterOutputType(StorageBillingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageBillingPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageProfileOutput{})
	pulumi.RegisterOutputType(StorageProfilePtrOutput{})
	pulumi.RegisterOutputType(StorageProfileResponseOutput{})
	pulumi.RegisterOutputType(StorageProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(StoragePropertiesOutput{})
	pulumi.RegisterOutputType(StoragePropertiesPtrOutput{})
	pulumi.RegisterOutputType(StoragePropertiesResponseOutput{})
	pulumi.RegisterOutputType(StoragePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
}
