// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240801preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Azure Large Instance info on Azure (ARM properties and AzureLargeInstance
// properties)
type AzureLargeInstance struct {
	pulumi.CustomResourceState

	// Specifies the Azure Large Instance unique ID.
	AzureLargeInstanceId pulumi.StringPtrOutput `pulumi:"azureLargeInstanceId"`
	// Specifies the hardware settings for the Azure Large Instance.
	HardwareProfile HardwareProfileResponsePtrOutput `pulumi:"hardwareProfile"`
	// Hardware revision of an Azure Large Instance
	HwRevision pulumi.StringPtrOutput `pulumi:"hwRevision"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the network settings for the Azure Large Instance.
	NetworkProfile NetworkProfileResponsePtrOutput `pulumi:"networkProfile"`
	// Specifies the operating system settings for the Azure Large Instance.
	OsProfile OsProfileResponsePtrOutput `pulumi:"osProfile"`
	// Resource power state
	PowerState pulumi.StringPtrOutput `pulumi:"powerState"`
	// State of provisioning of the AzureLargeInstance
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Resource proximity placement group
	ProximityPlacementGroup pulumi.StringPtrOutput `pulumi:"proximityPlacementGroup"`
	// Specifies the storage settings for the Azure Large Instance disks.
	StorageProfile StorageProfileResponsePtrOutput `pulumi:"storageProfile"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAzureLargeInstance registers a new resource with the given unique name, arguments, and options.
func NewAzureLargeInstance(ctx *pulumi.Context,
	name string, args *AzureLargeInstanceArgs, opts ...pulumi.ResourceOption) (*AzureLargeInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:azurelargeinstance:AzureLargeInstance"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AzureLargeInstance
	err := ctx.RegisterResource("azure-native:azurelargeinstance/v20240801preview:AzureLargeInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureLargeInstance gets an existing AzureLargeInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureLargeInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureLargeInstanceState, opts ...pulumi.ResourceOption) (*AzureLargeInstance, error) {
	var resource AzureLargeInstance
	err := ctx.ReadResource("azure-native:azurelargeinstance/v20240801preview:AzureLargeInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureLargeInstance resources.
type azureLargeInstanceState struct {
}

type AzureLargeInstanceState struct {
}

func (AzureLargeInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureLargeInstanceState)(nil)).Elem()
}

type azureLargeInstanceArgs struct {
	// Specifies the Azure Large Instance unique ID.
	AzureLargeInstanceId *string `pulumi:"azureLargeInstanceId"`
	// Name of the AzureLargeInstance.
	AzureLargeInstanceName *string `pulumi:"azureLargeInstanceName"`
	// Specifies the hardware settings for the Azure Large Instance.
	HardwareProfile *HardwareProfile `pulumi:"hardwareProfile"`
	// Hardware revision of an Azure Large Instance
	HwRevision *string `pulumi:"hwRevision"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Specifies the network settings for the Azure Large Instance.
	NetworkProfile *NetworkProfile `pulumi:"networkProfile"`
	// Specifies the operating system settings for the Azure Large Instance.
	OsProfile *OsProfile `pulumi:"osProfile"`
	// Resource power state
	PowerState *string `pulumi:"powerState"`
	// Resource proximity placement group
	ProximityPlacementGroup *string `pulumi:"proximityPlacementGroup"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Specifies the storage settings for the Azure Large Instance disks.
	StorageProfile *StorageProfile `pulumi:"storageProfile"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AzureLargeInstance resource.
type AzureLargeInstanceArgs struct {
	// Specifies the Azure Large Instance unique ID.
	AzureLargeInstanceId pulumi.StringPtrInput
	// Name of the AzureLargeInstance.
	AzureLargeInstanceName pulumi.StringPtrInput
	// Specifies the hardware settings for the Azure Large Instance.
	HardwareProfile HardwareProfilePtrInput
	// Hardware revision of an Azure Large Instance
	HwRevision pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Specifies the network settings for the Azure Large Instance.
	NetworkProfile NetworkProfilePtrInput
	// Specifies the operating system settings for the Azure Large Instance.
	OsProfile OsProfilePtrInput
	// Resource power state
	PowerState pulumi.StringPtrInput
	// Resource proximity placement group
	ProximityPlacementGroup pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Specifies the storage settings for the Azure Large Instance disks.
	StorageProfile StorageProfilePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (AzureLargeInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureLargeInstanceArgs)(nil)).Elem()
}

type AzureLargeInstanceInput interface {
	pulumi.Input

	ToAzureLargeInstanceOutput() AzureLargeInstanceOutput
	ToAzureLargeInstanceOutputWithContext(ctx context.Context) AzureLargeInstanceOutput
}

func (*AzureLargeInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureLargeInstance)(nil)).Elem()
}

func (i *AzureLargeInstance) ToAzureLargeInstanceOutput() AzureLargeInstanceOutput {
	return i.ToAzureLargeInstanceOutputWithContext(context.Background())
}

func (i *AzureLargeInstance) ToAzureLargeInstanceOutputWithContext(ctx context.Context) AzureLargeInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureLargeInstanceOutput)
}

type AzureLargeInstanceOutput struct{ *pulumi.OutputState }

func (AzureLargeInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureLargeInstance)(nil)).Elem()
}

func (o AzureLargeInstanceOutput) ToAzureLargeInstanceOutput() AzureLargeInstanceOutput {
	return o
}

func (o AzureLargeInstanceOutput) ToAzureLargeInstanceOutputWithContext(ctx context.Context) AzureLargeInstanceOutput {
	return o
}

// Specifies the Azure Large Instance unique ID.
func (o AzureLargeInstanceOutput) AzureLargeInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureLargeInstance) pulumi.StringPtrOutput { return v.AzureLargeInstanceId }).(pulumi.StringPtrOutput)
}

// Specifies the hardware settings for the Azure Large Instance.
func (o AzureLargeInstanceOutput) HardwareProfile() HardwareProfileResponsePtrOutput {
	return o.ApplyT(func(v *AzureLargeInstance) HardwareProfileResponsePtrOutput { return v.HardwareProfile }).(HardwareProfileResponsePtrOutput)
}

// Hardware revision of an Azure Large Instance
func (o AzureLargeInstanceOutput) HwRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureLargeInstance) pulumi.StringPtrOutput { return v.HwRevision }).(pulumi.StringPtrOutput)
}

// The geo-location where the resource lives
func (o AzureLargeInstanceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureLargeInstance) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o AzureLargeInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureLargeInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the network settings for the Azure Large Instance.
func (o AzureLargeInstanceOutput) NetworkProfile() NetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v *AzureLargeInstance) NetworkProfileResponsePtrOutput { return v.NetworkProfile }).(NetworkProfileResponsePtrOutput)
}

// Specifies the operating system settings for the Azure Large Instance.
func (o AzureLargeInstanceOutput) OsProfile() OsProfileResponsePtrOutput {
	return o.ApplyT(func(v *AzureLargeInstance) OsProfileResponsePtrOutput { return v.OsProfile }).(OsProfileResponsePtrOutput)
}

// Resource power state
func (o AzureLargeInstanceOutput) PowerState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureLargeInstance) pulumi.StringPtrOutput { return v.PowerState }).(pulumi.StringPtrOutput)
}

// State of provisioning of the AzureLargeInstance
func (o AzureLargeInstanceOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureLargeInstance) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource proximity placement group
func (o AzureLargeInstanceOutput) ProximityPlacementGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureLargeInstance) pulumi.StringPtrOutput { return v.ProximityPlacementGroup }).(pulumi.StringPtrOutput)
}

// Specifies the storage settings for the Azure Large Instance disks.
func (o AzureLargeInstanceOutput) StorageProfile() StorageProfileResponsePtrOutput {
	return o.ApplyT(func(v *AzureLargeInstance) StorageProfileResponsePtrOutput { return v.StorageProfile }).(StorageProfileResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o AzureLargeInstanceOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *AzureLargeInstance) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o AzureLargeInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AzureLargeInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AzureLargeInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureLargeInstance) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AzureLargeInstanceOutput{})
}
