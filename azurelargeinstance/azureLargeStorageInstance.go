// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azurelargeinstance

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AzureLargeStorageInstance info on Azure (ARM properties and
// AzureLargeStorageInstance properties)
// Azure REST API version: 2024-08-01-preview.
type AzureLargeStorageInstance struct {
	pulumi.CustomResourceState

	// Specifies the AzureLargeStorageInstance unique ID.
	AzureLargeStorageInstanceUniqueIdentifier pulumi.StringPtrOutput `pulumi:"azureLargeStorageInstanceUniqueIdentifier"`
	// The managed service identities assigned to this resource.
	Identity ManagedServiceIdentityResponsePtrOutput `pulumi:"identity"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the storage properties for the AzureLargeStorage instance.
	StorageProperties StoragePropertiesResponsePtrOutput `pulumi:"storageProperties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAzureLargeStorageInstance registers a new resource with the given unique name, arguments, and options.
func NewAzureLargeStorageInstance(ctx *pulumi.Context,
	name string, args *AzureLargeStorageInstanceArgs, opts ...pulumi.ResourceOption) (*AzureLargeStorageInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:azurelargeinstance/v20240801preview:AzureLargeStorageInstance"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AzureLargeStorageInstance
	err := ctx.RegisterResource("azure-native:azurelargeinstance:AzureLargeStorageInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureLargeStorageInstance gets an existing AzureLargeStorageInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureLargeStorageInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureLargeStorageInstanceState, opts ...pulumi.ResourceOption) (*AzureLargeStorageInstance, error) {
	var resource AzureLargeStorageInstance
	err := ctx.ReadResource("azure-native:azurelargeinstance:AzureLargeStorageInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureLargeStorageInstance resources.
type azureLargeStorageInstanceState struct {
}

type AzureLargeStorageInstanceState struct {
}

func (AzureLargeStorageInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureLargeStorageInstanceState)(nil)).Elem()
}

type azureLargeStorageInstanceArgs struct {
	// Name of the AzureLargeStorageInstance.
	AzureLargeStorageInstanceName *string `pulumi:"azureLargeStorageInstanceName"`
	// Specifies the AzureLargeStorageInstance unique ID.
	AzureLargeStorageInstanceUniqueIdentifier *string `pulumi:"azureLargeStorageInstanceUniqueIdentifier"`
	// The managed service identities assigned to this resource.
	Identity *ManagedServiceIdentity `pulumi:"identity"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Specifies the storage properties for the AzureLargeStorage instance.
	StorageProperties *StorageProperties `pulumi:"storageProperties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AzureLargeStorageInstance resource.
type AzureLargeStorageInstanceArgs struct {
	// Name of the AzureLargeStorageInstance.
	AzureLargeStorageInstanceName pulumi.StringPtrInput
	// Specifies the AzureLargeStorageInstance unique ID.
	AzureLargeStorageInstanceUniqueIdentifier pulumi.StringPtrInput
	// The managed service identities assigned to this resource.
	Identity ManagedServiceIdentityPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Specifies the storage properties for the AzureLargeStorage instance.
	StorageProperties StoragePropertiesPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (AzureLargeStorageInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureLargeStorageInstanceArgs)(nil)).Elem()
}

type AzureLargeStorageInstanceInput interface {
	pulumi.Input

	ToAzureLargeStorageInstanceOutput() AzureLargeStorageInstanceOutput
	ToAzureLargeStorageInstanceOutputWithContext(ctx context.Context) AzureLargeStorageInstanceOutput
}

func (*AzureLargeStorageInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureLargeStorageInstance)(nil)).Elem()
}

func (i *AzureLargeStorageInstance) ToAzureLargeStorageInstanceOutput() AzureLargeStorageInstanceOutput {
	return i.ToAzureLargeStorageInstanceOutputWithContext(context.Background())
}

func (i *AzureLargeStorageInstance) ToAzureLargeStorageInstanceOutputWithContext(ctx context.Context) AzureLargeStorageInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureLargeStorageInstanceOutput)
}

type AzureLargeStorageInstanceOutput struct{ *pulumi.OutputState }

func (AzureLargeStorageInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureLargeStorageInstance)(nil)).Elem()
}

func (o AzureLargeStorageInstanceOutput) ToAzureLargeStorageInstanceOutput() AzureLargeStorageInstanceOutput {
	return o
}

func (o AzureLargeStorageInstanceOutput) ToAzureLargeStorageInstanceOutputWithContext(ctx context.Context) AzureLargeStorageInstanceOutput {
	return o
}

// Specifies the AzureLargeStorageInstance unique ID.
func (o AzureLargeStorageInstanceOutput) AzureLargeStorageInstanceUniqueIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureLargeStorageInstance) pulumi.StringPtrOutput {
		return v.AzureLargeStorageInstanceUniqueIdentifier
	}).(pulumi.StringPtrOutput)
}

// The managed service identities assigned to this resource.
func (o AzureLargeStorageInstanceOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v *AzureLargeStorageInstance) ManagedServiceIdentityResponsePtrOutput { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o AzureLargeStorageInstanceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureLargeStorageInstance) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o AzureLargeStorageInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureLargeStorageInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the storage properties for the AzureLargeStorage instance.
func (o AzureLargeStorageInstanceOutput) StorageProperties() StoragePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *AzureLargeStorageInstance) StoragePropertiesResponsePtrOutput { return v.StorageProperties }).(StoragePropertiesResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o AzureLargeStorageInstanceOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *AzureLargeStorageInstance) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o AzureLargeStorageInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AzureLargeStorageInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AzureLargeStorageInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureLargeStorageInstance) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AzureLargeStorageInstanceOutput{})
}
