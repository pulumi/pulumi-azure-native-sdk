// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230801

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The mode of generation to be used for generating Dockerfiles.
type DockerfileGenerationMode string

const (
	// Dockerfiles will be generated
	DockerfileGenerationModeEnabled = DockerfileGenerationMode("enabled")
	// Dockerfiles will not be generated
	DockerfileGenerationModeDisabled = DockerfileGenerationMode("disabled")
)

func (DockerfileGenerationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerfileGenerationMode)(nil)).Elem()
}

func (e DockerfileGenerationMode) ToDockerfileGenerationModeOutput() DockerfileGenerationModeOutput {
	return pulumi.ToOutput(e).(DockerfileGenerationModeOutput)
}

func (e DockerfileGenerationMode) ToDockerfileGenerationModeOutputWithContext(ctx context.Context) DockerfileGenerationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DockerfileGenerationModeOutput)
}

func (e DockerfileGenerationMode) ToDockerfileGenerationModePtrOutput() DockerfileGenerationModePtrOutput {
	return e.ToDockerfileGenerationModePtrOutputWithContext(context.Background())
}

func (e DockerfileGenerationMode) ToDockerfileGenerationModePtrOutputWithContext(ctx context.Context) DockerfileGenerationModePtrOutput {
	return DockerfileGenerationMode(e).ToDockerfileGenerationModeOutputWithContext(ctx).ToDockerfileGenerationModePtrOutputWithContext(ctx)
}

func (e DockerfileGenerationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DockerfileGenerationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DockerfileGenerationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DockerfileGenerationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DockerfileGenerationModeOutput struct{ *pulumi.OutputState }

func (DockerfileGenerationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerfileGenerationMode)(nil)).Elem()
}

func (o DockerfileGenerationModeOutput) ToDockerfileGenerationModeOutput() DockerfileGenerationModeOutput {
	return o
}

func (o DockerfileGenerationModeOutput) ToDockerfileGenerationModeOutputWithContext(ctx context.Context) DockerfileGenerationModeOutput {
	return o
}

func (o DockerfileGenerationModeOutput) ToDockerfileGenerationModePtrOutput() DockerfileGenerationModePtrOutput {
	return o.ToDockerfileGenerationModePtrOutputWithContext(context.Background())
}

func (o DockerfileGenerationModeOutput) ToDockerfileGenerationModePtrOutputWithContext(ctx context.Context) DockerfileGenerationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DockerfileGenerationMode) *DockerfileGenerationMode {
		return &v
	}).(DockerfileGenerationModePtrOutput)
}

func (o DockerfileGenerationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DockerfileGenerationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DockerfileGenerationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DockerfileGenerationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DockerfileGenerationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DockerfileGenerationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DockerfileGenerationModePtrOutput struct{ *pulumi.OutputState }

func (DockerfileGenerationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerfileGenerationMode)(nil)).Elem()
}

func (o DockerfileGenerationModePtrOutput) ToDockerfileGenerationModePtrOutput() DockerfileGenerationModePtrOutput {
	return o
}

func (o DockerfileGenerationModePtrOutput) ToDockerfileGenerationModePtrOutputWithContext(ctx context.Context) DockerfileGenerationModePtrOutput {
	return o
}

func (o DockerfileGenerationModePtrOutput) Elem() DockerfileGenerationModeOutput {
	return o.ApplyT(func(v *DockerfileGenerationMode) DockerfileGenerationMode {
		if v != nil {
			return *v
		}
		var ret DockerfileGenerationMode
		return ret
	}).(DockerfileGenerationModeOutput)
}

func (o DockerfileGenerationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DockerfileGenerationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DockerfileGenerationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DockerfileGenerationModeInput is an input type that accepts values of the DockerfileGenerationMode enum
// A concrete instance of `DockerfileGenerationModeInput` can be one of the following:
//
//	DockerfileGenerationModeEnabled
//	DockerfileGenerationModeDisabled
type DockerfileGenerationModeInput interface {
	pulumi.Input

	ToDockerfileGenerationModeOutput() DockerfileGenerationModeOutput
	ToDockerfileGenerationModeOutputWithContext(context.Context) DockerfileGenerationModeOutput
}

var dockerfileGenerationModePtrType = reflect.TypeOf((**DockerfileGenerationMode)(nil)).Elem()

type DockerfileGenerationModePtrInput interface {
	pulumi.Input

	ToDockerfileGenerationModePtrOutput() DockerfileGenerationModePtrOutput
	ToDockerfileGenerationModePtrOutputWithContext(context.Context) DockerfileGenerationModePtrOutput
}

type dockerfileGenerationModePtr string

func DockerfileGenerationModePtr(v string) DockerfileGenerationModePtrInput {
	return (*dockerfileGenerationModePtr)(&v)
}

func (*dockerfileGenerationModePtr) ElementType() reflect.Type {
	return dockerfileGenerationModePtrType
}

func (in *dockerfileGenerationModePtr) ToDockerfileGenerationModePtrOutput() DockerfileGenerationModePtrOutput {
	return pulumi.ToOutput(in).(DockerfileGenerationModePtrOutput)
}

func (in *dockerfileGenerationModePtr) ToDockerfileGenerationModePtrOutputWithContext(ctx context.Context) DockerfileGenerationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DockerfileGenerationModePtrOutput)
}

// The programming language used.
type GenerationLanguage string

const (
	// clojure language
	GenerationLanguageClojure = GenerationLanguage("clojure")
	// csharp language
	GenerationLanguageCsharp = GenerationLanguage("csharp")
	// erlang language
	GenerationLanguageErlang = GenerationLanguage("erlang")
	// go language
	GenerationLanguageGo = GenerationLanguage("go")
	// gomodule language
	GenerationLanguageGomodule = GenerationLanguage("gomodule")
	// gradle language
	GenerationLanguageGradle = GenerationLanguage("gradle")
	// java language
	GenerationLanguageJava = GenerationLanguage("java")
	// javascript language
	GenerationLanguageJavascript = GenerationLanguage("javascript")
	// php language
	GenerationLanguagePhp = GenerationLanguage("php")
	// python language
	GenerationLanguagePython = GenerationLanguage("python")
	// ruby language
	GenerationLanguageRuby = GenerationLanguage("ruby")
	// rust language
	GenerationLanguageRust = GenerationLanguage("rust")
	// swift language
	GenerationLanguageSwift = GenerationLanguage("swift")
)

func (GenerationLanguage) ElementType() reflect.Type {
	return reflect.TypeOf((*GenerationLanguage)(nil)).Elem()
}

func (e GenerationLanguage) ToGenerationLanguageOutput() GenerationLanguageOutput {
	return pulumi.ToOutput(e).(GenerationLanguageOutput)
}

func (e GenerationLanguage) ToGenerationLanguageOutputWithContext(ctx context.Context) GenerationLanguageOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GenerationLanguageOutput)
}

func (e GenerationLanguage) ToGenerationLanguagePtrOutput() GenerationLanguagePtrOutput {
	return e.ToGenerationLanguagePtrOutputWithContext(context.Background())
}

func (e GenerationLanguage) ToGenerationLanguagePtrOutputWithContext(ctx context.Context) GenerationLanguagePtrOutput {
	return GenerationLanguage(e).ToGenerationLanguageOutputWithContext(ctx).ToGenerationLanguagePtrOutputWithContext(ctx)
}

func (e GenerationLanguage) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GenerationLanguage) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GenerationLanguage) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GenerationLanguage) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GenerationLanguageOutput struct{ *pulumi.OutputState }

func (GenerationLanguageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenerationLanguage)(nil)).Elem()
}

func (o GenerationLanguageOutput) ToGenerationLanguageOutput() GenerationLanguageOutput {
	return o
}

func (o GenerationLanguageOutput) ToGenerationLanguageOutputWithContext(ctx context.Context) GenerationLanguageOutput {
	return o
}

func (o GenerationLanguageOutput) ToGenerationLanguagePtrOutput() GenerationLanguagePtrOutput {
	return o.ToGenerationLanguagePtrOutputWithContext(context.Background())
}

func (o GenerationLanguageOutput) ToGenerationLanguagePtrOutputWithContext(ctx context.Context) GenerationLanguagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GenerationLanguage) *GenerationLanguage {
		return &v
	}).(GenerationLanguagePtrOutput)
}

func (o GenerationLanguageOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GenerationLanguageOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GenerationLanguage) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GenerationLanguageOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GenerationLanguageOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GenerationLanguage) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GenerationLanguagePtrOutput struct{ *pulumi.OutputState }

func (GenerationLanguagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GenerationLanguage)(nil)).Elem()
}

func (o GenerationLanguagePtrOutput) ToGenerationLanguagePtrOutput() GenerationLanguagePtrOutput {
	return o
}

func (o GenerationLanguagePtrOutput) ToGenerationLanguagePtrOutputWithContext(ctx context.Context) GenerationLanguagePtrOutput {
	return o
}

func (o GenerationLanguagePtrOutput) Elem() GenerationLanguageOutput {
	return o.ApplyT(func(v *GenerationLanguage) GenerationLanguage {
		if v != nil {
			return *v
		}
		var ret GenerationLanguage
		return ret
	}).(GenerationLanguageOutput)
}

func (o GenerationLanguagePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GenerationLanguagePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GenerationLanguage) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GenerationLanguageInput is an input type that accepts values of the GenerationLanguage enum
// A concrete instance of `GenerationLanguageInput` can be one of the following:
//
//	GenerationLanguageClojure
//	GenerationLanguageCsharp
//	GenerationLanguageErlang
//	GenerationLanguageGo
//	GenerationLanguageGomodule
//	GenerationLanguageGradle
//	GenerationLanguageJava
//	GenerationLanguageJavascript
//	GenerationLanguagePhp
//	GenerationLanguagePython
//	GenerationLanguageRuby
//	GenerationLanguageRust
//	GenerationLanguageSwift
type GenerationLanguageInput interface {
	pulumi.Input

	ToGenerationLanguageOutput() GenerationLanguageOutput
	ToGenerationLanguageOutputWithContext(context.Context) GenerationLanguageOutput
}

var generationLanguagePtrType = reflect.TypeOf((**GenerationLanguage)(nil)).Elem()

type GenerationLanguagePtrInput interface {
	pulumi.Input

	ToGenerationLanguagePtrOutput() GenerationLanguagePtrOutput
	ToGenerationLanguagePtrOutputWithContext(context.Context) GenerationLanguagePtrOutput
}

type generationLanguagePtr string

func GenerationLanguagePtr(v string) GenerationLanguagePtrInput {
	return (*generationLanguagePtr)(&v)
}

func (*generationLanguagePtr) ElementType() reflect.Type {
	return generationLanguagePtrType
}

func (in *generationLanguagePtr) ToGenerationLanguagePtrOutput() GenerationLanguagePtrOutput {
	return pulumi.ToOutput(in).(GenerationLanguagePtrOutput)
}

func (in *generationLanguagePtr) ToGenerationLanguagePtrOutputWithContext(ctx context.Context) GenerationLanguagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GenerationLanguagePtrOutput)
}

// Determines the type of manifests to be generated.
type GenerationManifestType string

const (
	// Helm manifests
	GenerationManifestTypeHelm = GenerationManifestType("helm")
	// Kubernetes manifests
	GenerationManifestTypeKube = GenerationManifestType("kube")
)

func (GenerationManifestType) ElementType() reflect.Type {
	return reflect.TypeOf((*GenerationManifestType)(nil)).Elem()
}

func (e GenerationManifestType) ToGenerationManifestTypeOutput() GenerationManifestTypeOutput {
	return pulumi.ToOutput(e).(GenerationManifestTypeOutput)
}

func (e GenerationManifestType) ToGenerationManifestTypeOutputWithContext(ctx context.Context) GenerationManifestTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GenerationManifestTypeOutput)
}

func (e GenerationManifestType) ToGenerationManifestTypePtrOutput() GenerationManifestTypePtrOutput {
	return e.ToGenerationManifestTypePtrOutputWithContext(context.Background())
}

func (e GenerationManifestType) ToGenerationManifestTypePtrOutputWithContext(ctx context.Context) GenerationManifestTypePtrOutput {
	return GenerationManifestType(e).ToGenerationManifestTypeOutputWithContext(ctx).ToGenerationManifestTypePtrOutputWithContext(ctx)
}

func (e GenerationManifestType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GenerationManifestType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GenerationManifestType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GenerationManifestType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GenerationManifestTypeOutput struct{ *pulumi.OutputState }

func (GenerationManifestTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenerationManifestType)(nil)).Elem()
}

func (o GenerationManifestTypeOutput) ToGenerationManifestTypeOutput() GenerationManifestTypeOutput {
	return o
}

func (o GenerationManifestTypeOutput) ToGenerationManifestTypeOutputWithContext(ctx context.Context) GenerationManifestTypeOutput {
	return o
}

func (o GenerationManifestTypeOutput) ToGenerationManifestTypePtrOutput() GenerationManifestTypePtrOutput {
	return o.ToGenerationManifestTypePtrOutputWithContext(context.Background())
}

func (o GenerationManifestTypeOutput) ToGenerationManifestTypePtrOutputWithContext(ctx context.Context) GenerationManifestTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GenerationManifestType) *GenerationManifestType {
		return &v
	}).(GenerationManifestTypePtrOutput)
}

func (o GenerationManifestTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GenerationManifestTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GenerationManifestType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GenerationManifestTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GenerationManifestTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GenerationManifestType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GenerationManifestTypePtrOutput struct{ *pulumi.OutputState }

func (GenerationManifestTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GenerationManifestType)(nil)).Elem()
}

func (o GenerationManifestTypePtrOutput) ToGenerationManifestTypePtrOutput() GenerationManifestTypePtrOutput {
	return o
}

func (o GenerationManifestTypePtrOutput) ToGenerationManifestTypePtrOutputWithContext(ctx context.Context) GenerationManifestTypePtrOutput {
	return o
}

func (o GenerationManifestTypePtrOutput) Elem() GenerationManifestTypeOutput {
	return o.ApplyT(func(v *GenerationManifestType) GenerationManifestType {
		if v != nil {
			return *v
		}
		var ret GenerationManifestType
		return ret
	}).(GenerationManifestTypeOutput)
}

func (o GenerationManifestTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GenerationManifestTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GenerationManifestType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GenerationManifestTypeInput is an input type that accepts values of the GenerationManifestType enum
// A concrete instance of `GenerationManifestTypeInput` can be one of the following:
//
//	GenerationManifestTypeHelm
//	GenerationManifestTypeKube
type GenerationManifestTypeInput interface {
	pulumi.Input

	ToGenerationManifestTypeOutput() GenerationManifestTypeOutput
	ToGenerationManifestTypeOutputWithContext(context.Context) GenerationManifestTypeOutput
}

var generationManifestTypePtrType = reflect.TypeOf((**GenerationManifestType)(nil)).Elem()

type GenerationManifestTypePtrInput interface {
	pulumi.Input

	ToGenerationManifestTypePtrOutput() GenerationManifestTypePtrOutput
	ToGenerationManifestTypePtrOutputWithContext(context.Context) GenerationManifestTypePtrOutput
}

type generationManifestTypePtr string

func GenerationManifestTypePtr(v string) GenerationManifestTypePtrInput {
	return (*generationManifestTypePtr)(&v)
}

func (*generationManifestTypePtr) ElementType() reflect.Type {
	return generationManifestTypePtrType
}

func (in *generationManifestTypePtr) ToGenerationManifestTypePtrOutput() GenerationManifestTypePtrOutput {
	return pulumi.ToOutput(in).(GenerationManifestTypePtrOutput)
}

func (in *generationManifestTypePtr) ToGenerationManifestTypePtrOutputWithContext(ctx context.Context) GenerationManifestTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GenerationManifestTypePtrOutput)
}

// The mode of generation to be used for generating Manifest.
type ManifestGenerationMode string

const (
	// Manifests will be generated
	ManifestGenerationModeEnabled = ManifestGenerationMode("enabled")
	// Manifests will not be generated
	ManifestGenerationModeDisabled = ManifestGenerationMode("disabled")
)

func (ManifestGenerationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ManifestGenerationMode)(nil)).Elem()
}

func (e ManifestGenerationMode) ToManifestGenerationModeOutput() ManifestGenerationModeOutput {
	return pulumi.ToOutput(e).(ManifestGenerationModeOutput)
}

func (e ManifestGenerationMode) ToManifestGenerationModeOutputWithContext(ctx context.Context) ManifestGenerationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManifestGenerationModeOutput)
}

func (e ManifestGenerationMode) ToManifestGenerationModePtrOutput() ManifestGenerationModePtrOutput {
	return e.ToManifestGenerationModePtrOutputWithContext(context.Background())
}

func (e ManifestGenerationMode) ToManifestGenerationModePtrOutputWithContext(ctx context.Context) ManifestGenerationModePtrOutput {
	return ManifestGenerationMode(e).ToManifestGenerationModeOutputWithContext(ctx).ToManifestGenerationModePtrOutputWithContext(ctx)
}

func (e ManifestGenerationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManifestGenerationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManifestGenerationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManifestGenerationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManifestGenerationModeOutput struct{ *pulumi.OutputState }

func (ManifestGenerationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManifestGenerationMode)(nil)).Elem()
}

func (o ManifestGenerationModeOutput) ToManifestGenerationModeOutput() ManifestGenerationModeOutput {
	return o
}

func (o ManifestGenerationModeOutput) ToManifestGenerationModeOutputWithContext(ctx context.Context) ManifestGenerationModeOutput {
	return o
}

func (o ManifestGenerationModeOutput) ToManifestGenerationModePtrOutput() ManifestGenerationModePtrOutput {
	return o.ToManifestGenerationModePtrOutputWithContext(context.Background())
}

func (o ManifestGenerationModeOutput) ToManifestGenerationModePtrOutputWithContext(ctx context.Context) ManifestGenerationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManifestGenerationMode) *ManifestGenerationMode {
		return &v
	}).(ManifestGenerationModePtrOutput)
}

func (o ManifestGenerationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManifestGenerationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManifestGenerationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManifestGenerationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManifestGenerationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManifestGenerationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManifestGenerationModePtrOutput struct{ *pulumi.OutputState }

func (ManifestGenerationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManifestGenerationMode)(nil)).Elem()
}

func (o ManifestGenerationModePtrOutput) ToManifestGenerationModePtrOutput() ManifestGenerationModePtrOutput {
	return o
}

func (o ManifestGenerationModePtrOutput) ToManifestGenerationModePtrOutputWithContext(ctx context.Context) ManifestGenerationModePtrOutput {
	return o
}

func (o ManifestGenerationModePtrOutput) Elem() ManifestGenerationModeOutput {
	return o.ApplyT(func(v *ManifestGenerationMode) ManifestGenerationMode {
		if v != nil {
			return *v
		}
		var ret ManifestGenerationMode
		return ret
	}).(ManifestGenerationModeOutput)
}

func (o ManifestGenerationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManifestGenerationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManifestGenerationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManifestGenerationModeInput is an input type that accepts values of the ManifestGenerationMode enum
// A concrete instance of `ManifestGenerationModeInput` can be one of the following:
//
//	ManifestGenerationModeEnabled
//	ManifestGenerationModeDisabled
type ManifestGenerationModeInput interface {
	pulumi.Input

	ToManifestGenerationModeOutput() ManifestGenerationModeOutput
	ToManifestGenerationModeOutputWithContext(context.Context) ManifestGenerationModeOutput
}

var manifestGenerationModePtrType = reflect.TypeOf((**ManifestGenerationMode)(nil)).Elem()

type ManifestGenerationModePtrInput interface {
	pulumi.Input

	ToManifestGenerationModePtrOutput() ManifestGenerationModePtrOutput
	ToManifestGenerationModePtrOutputWithContext(context.Context) ManifestGenerationModePtrOutput
}

type manifestGenerationModePtr string

func ManifestGenerationModePtr(v string) ManifestGenerationModePtrInput {
	return (*manifestGenerationModePtr)(&v)
}

func (*manifestGenerationModePtr) ElementType() reflect.Type {
	return manifestGenerationModePtrType
}

func (in *manifestGenerationModePtr) ToManifestGenerationModePtrOutput() ManifestGenerationModePtrOutput {
	return pulumi.ToOutput(in).(ManifestGenerationModePtrOutput)
}

func (in *manifestGenerationModePtr) ToManifestGenerationModePtrOutputWithContext(ctx context.Context) ManifestGenerationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManifestGenerationModePtrOutput)
}

// Determines the type of manifests within the repository.
type ManifestType string

const (
	// Repositories using helm
	ManifestTypeHelm = ManifestType("helm")
	// Repositories using kubernetes manifests
	ManifestTypeKube = ManifestType("kube")
)

func (ManifestType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManifestType)(nil)).Elem()
}

func (e ManifestType) ToManifestTypeOutput() ManifestTypeOutput {
	return pulumi.ToOutput(e).(ManifestTypeOutput)
}

func (e ManifestType) ToManifestTypeOutputWithContext(ctx context.Context) ManifestTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManifestTypeOutput)
}

func (e ManifestType) ToManifestTypePtrOutput() ManifestTypePtrOutput {
	return e.ToManifestTypePtrOutputWithContext(context.Background())
}

func (e ManifestType) ToManifestTypePtrOutputWithContext(ctx context.Context) ManifestTypePtrOutput {
	return ManifestType(e).ToManifestTypeOutputWithContext(ctx).ToManifestTypePtrOutputWithContext(ctx)
}

func (e ManifestType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManifestType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManifestType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManifestType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManifestTypeOutput struct{ *pulumi.OutputState }

func (ManifestTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManifestType)(nil)).Elem()
}

func (o ManifestTypeOutput) ToManifestTypeOutput() ManifestTypeOutput {
	return o
}

func (o ManifestTypeOutput) ToManifestTypeOutputWithContext(ctx context.Context) ManifestTypeOutput {
	return o
}

func (o ManifestTypeOutput) ToManifestTypePtrOutput() ManifestTypePtrOutput {
	return o.ToManifestTypePtrOutputWithContext(context.Background())
}

func (o ManifestTypeOutput) ToManifestTypePtrOutputWithContext(ctx context.Context) ManifestTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManifestType) *ManifestType {
		return &v
	}).(ManifestTypePtrOutput)
}

func (o ManifestTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManifestTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManifestType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManifestTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManifestTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManifestType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManifestTypePtrOutput struct{ *pulumi.OutputState }

func (ManifestTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManifestType)(nil)).Elem()
}

func (o ManifestTypePtrOutput) ToManifestTypePtrOutput() ManifestTypePtrOutput {
	return o
}

func (o ManifestTypePtrOutput) ToManifestTypePtrOutputWithContext(ctx context.Context) ManifestTypePtrOutput {
	return o
}

func (o ManifestTypePtrOutput) Elem() ManifestTypeOutput {
	return o.ApplyT(func(v *ManifestType) ManifestType {
		if v != nil {
			return *v
		}
		var ret ManifestType
		return ret
	}).(ManifestTypeOutput)
}

func (o ManifestTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManifestTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManifestType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManifestTypeInput is an input type that accepts values of the ManifestType enum
// A concrete instance of `ManifestTypeInput` can be one of the following:
//
//	ManifestTypeHelm
//	ManifestTypeKube
type ManifestTypeInput interface {
	pulumi.Input

	ToManifestTypeOutput() ManifestTypeOutput
	ToManifestTypeOutputWithContext(context.Context) ManifestTypeOutput
}

var manifestTypePtrType = reflect.TypeOf((**ManifestType)(nil)).Elem()

type ManifestTypePtrInput interface {
	pulumi.Input

	ToManifestTypePtrOutput() ManifestTypePtrOutput
	ToManifestTypePtrOutputWithContext(context.Context) ManifestTypePtrOutput
}

type manifestTypePtr string

func ManifestTypePtr(v string) ManifestTypePtrInput {
	return (*manifestTypePtr)(&v)
}

func (*manifestTypePtr) ElementType() reflect.Type {
	return manifestTypePtrType
}

func (in *manifestTypePtr) ToManifestTypePtrOutput() ManifestTypePtrOutput {
	return pulumi.ToOutput(in).(ManifestTypePtrOutput)
}

func (in *manifestTypePtr) ToManifestTypePtrOutputWithContext(ctx context.Context) ManifestTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManifestTypePtrOutput)
}

// Describes the status of the workflow run
type WorkflowRunStatus string

const (
	// Workflow run is queued
	WorkflowRunStatusQueued = WorkflowRunStatus("queued")
	// Workflow run is inprogress
	WorkflowRunStatusInprogress = WorkflowRunStatus("inprogress")
	// Workflow run is completed
	WorkflowRunStatusCompleted = WorkflowRunStatus("completed")
)

func (WorkflowRunStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowRunStatus)(nil)).Elem()
}

func (e WorkflowRunStatus) ToWorkflowRunStatusOutput() WorkflowRunStatusOutput {
	return pulumi.ToOutput(e).(WorkflowRunStatusOutput)
}

func (e WorkflowRunStatus) ToWorkflowRunStatusOutputWithContext(ctx context.Context) WorkflowRunStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WorkflowRunStatusOutput)
}

func (e WorkflowRunStatus) ToWorkflowRunStatusPtrOutput() WorkflowRunStatusPtrOutput {
	return e.ToWorkflowRunStatusPtrOutputWithContext(context.Background())
}

func (e WorkflowRunStatus) ToWorkflowRunStatusPtrOutputWithContext(ctx context.Context) WorkflowRunStatusPtrOutput {
	return WorkflowRunStatus(e).ToWorkflowRunStatusOutputWithContext(ctx).ToWorkflowRunStatusPtrOutputWithContext(ctx)
}

func (e WorkflowRunStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkflowRunStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkflowRunStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WorkflowRunStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WorkflowRunStatusOutput struct{ *pulumi.OutputState }

func (WorkflowRunStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowRunStatus)(nil)).Elem()
}

func (o WorkflowRunStatusOutput) ToWorkflowRunStatusOutput() WorkflowRunStatusOutput {
	return o
}

func (o WorkflowRunStatusOutput) ToWorkflowRunStatusOutputWithContext(ctx context.Context) WorkflowRunStatusOutput {
	return o
}

func (o WorkflowRunStatusOutput) ToWorkflowRunStatusPtrOutput() WorkflowRunStatusPtrOutput {
	return o.ToWorkflowRunStatusPtrOutputWithContext(context.Background())
}

func (o WorkflowRunStatusOutput) ToWorkflowRunStatusPtrOutputWithContext(ctx context.Context) WorkflowRunStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowRunStatus) *WorkflowRunStatus {
		return &v
	}).(WorkflowRunStatusPtrOutput)
}

func (o WorkflowRunStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WorkflowRunStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkflowRunStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WorkflowRunStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkflowRunStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkflowRunStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkflowRunStatusPtrOutput struct{ *pulumi.OutputState }

func (WorkflowRunStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowRunStatus)(nil)).Elem()
}

func (o WorkflowRunStatusPtrOutput) ToWorkflowRunStatusPtrOutput() WorkflowRunStatusPtrOutput {
	return o
}

func (o WorkflowRunStatusPtrOutput) ToWorkflowRunStatusPtrOutputWithContext(ctx context.Context) WorkflowRunStatusPtrOutput {
	return o
}

func (o WorkflowRunStatusPtrOutput) Elem() WorkflowRunStatusOutput {
	return o.ApplyT(func(v *WorkflowRunStatus) WorkflowRunStatus {
		if v != nil {
			return *v
		}
		var ret WorkflowRunStatus
		return ret
	}).(WorkflowRunStatusOutput)
}

func (o WorkflowRunStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkflowRunStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WorkflowRunStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WorkflowRunStatusInput is an input type that accepts values of the WorkflowRunStatus enum
// A concrete instance of `WorkflowRunStatusInput` can be one of the following:
//
//	WorkflowRunStatusQueued
//	WorkflowRunStatusInprogress
//	WorkflowRunStatusCompleted
type WorkflowRunStatusInput interface {
	pulumi.Input

	ToWorkflowRunStatusOutput() WorkflowRunStatusOutput
	ToWorkflowRunStatusOutputWithContext(context.Context) WorkflowRunStatusOutput
}

var workflowRunStatusPtrType = reflect.TypeOf((**WorkflowRunStatus)(nil)).Elem()

type WorkflowRunStatusPtrInput interface {
	pulumi.Input

	ToWorkflowRunStatusPtrOutput() WorkflowRunStatusPtrOutput
	ToWorkflowRunStatusPtrOutputWithContext(context.Context) WorkflowRunStatusPtrOutput
}

type workflowRunStatusPtr string

func WorkflowRunStatusPtr(v string) WorkflowRunStatusPtrInput {
	return (*workflowRunStatusPtr)(&v)
}

func (*workflowRunStatusPtr) ElementType() reflect.Type {
	return workflowRunStatusPtrType
}

func (in *workflowRunStatusPtr) ToWorkflowRunStatusPtrOutput() WorkflowRunStatusPtrOutput {
	return pulumi.ToOutput(in).(WorkflowRunStatusPtrOutput)
}

func (in *workflowRunStatusPtr) ToWorkflowRunStatusPtrOutputWithContext(ctx context.Context) WorkflowRunStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WorkflowRunStatusPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DockerfileGenerationModeOutput{})
	pulumi.RegisterOutputType(DockerfileGenerationModePtrOutput{})
	pulumi.RegisterOutputType(GenerationLanguageOutput{})
	pulumi.RegisterOutputType(GenerationLanguagePtrOutput{})
	pulumi.RegisterOutputType(GenerationManifestTypeOutput{})
	pulumi.RegisterOutputType(GenerationManifestTypePtrOutput{})
	pulumi.RegisterOutputType(ManifestGenerationModeOutput{})
	pulumi.RegisterOutputType(ManifestGenerationModePtrOutput{})
	pulumi.RegisterOutputType(ManifestTypeOutput{})
	pulumi.RegisterOutputType(ManifestTypePtrOutput{})
	pulumi.RegisterOutputType(WorkflowRunStatusOutput{})
	pulumi.RegisterOutputType(WorkflowRunStatusPtrOutput{})
}
