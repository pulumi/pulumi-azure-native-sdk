// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20250301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// URL used to authorize the Developer Hub GitHub App
func GetGitHubOAuth(ctx *pulumi.Context, args *GetGitHubOAuthArgs, opts ...pulumi.InvokeOption) (*GetGitHubOAuthResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetGitHubOAuthResult
	err := ctx.Invoke("azure-native:devhub/v20250301preview:getGitHubOAuth", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetGitHubOAuthArgs struct {
	// The name of the Azure region.
	Location string `pulumi:"location"`
	// The URL the client will redirect to on successful authentication. If empty, no redirect will occur.
	RedirectUrl *string `pulumi:"redirectUrl"`
}

// URL used to authorize the Developer Hub GitHub App
type GetGitHubOAuthResult struct {
	// URL for authorizing the Developer Hub GitHub App
	AuthURL *string `pulumi:"authURL"`
	// OAuth token used to make calls to GitHub
	Token *string `pulumi:"token"`
}

func GetGitHubOAuthOutput(ctx *pulumi.Context, args GetGitHubOAuthOutputArgs, opts ...pulumi.InvokeOption) GetGitHubOAuthResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetGitHubOAuthResultOutput, error) {
			args := v.(GetGitHubOAuthArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:devhub/v20250301preview:getGitHubOAuth", args, GetGitHubOAuthResultOutput{}, options).(GetGitHubOAuthResultOutput), nil
		}).(GetGitHubOAuthResultOutput)
}

type GetGitHubOAuthOutputArgs struct {
	// The name of the Azure region.
	Location pulumi.StringInput `pulumi:"location"`
	// The URL the client will redirect to on successful authentication. If empty, no redirect will occur.
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
}

func (GetGitHubOAuthOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitHubOAuthArgs)(nil)).Elem()
}

// URL used to authorize the Developer Hub GitHub App
type GetGitHubOAuthResultOutput struct{ *pulumi.OutputState }

func (GetGitHubOAuthResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitHubOAuthResult)(nil)).Elem()
}

func (o GetGitHubOAuthResultOutput) ToGetGitHubOAuthResultOutput() GetGitHubOAuthResultOutput {
	return o
}

func (o GetGitHubOAuthResultOutput) ToGetGitHubOAuthResultOutputWithContext(ctx context.Context) GetGitHubOAuthResultOutput {
	return o
}

// URL for authorizing the Developer Hub GitHub App
func (o GetGitHubOAuthResultOutput) AuthURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitHubOAuthResult) *string { return v.AuthURL }).(pulumi.StringPtrOutput)
}

// OAuth token used to make calls to GitHub
func (o GetGitHubOAuthResultOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitHubOAuthResult) *string { return v.Token }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGitHubOAuthResultOutput{})
}
