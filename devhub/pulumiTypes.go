// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Information on the azure container registry
type ACR struct {
	// ACR registry
	AcrRegistryName *string `pulumi:"acrRegistryName"`
	// ACR repository
	AcrRepositoryName *string `pulumi:"acrRepositoryName"`
	// ACR resource group
	AcrResourceGroup *string `pulumi:"acrResourceGroup"`
	// ACR subscription id
	AcrSubscriptionId *string `pulumi:"acrSubscriptionId"`
}

// ACRInput is an input type that accepts ACRArgs and ACROutput values.
// You can construct a concrete instance of `ACRInput` via:
//
//	ACRArgs{...}
type ACRInput interface {
	pulumi.Input

	ToACROutput() ACROutput
	ToACROutputWithContext(context.Context) ACROutput
}

// Information on the azure container registry
type ACRArgs struct {
	// ACR registry
	AcrRegistryName pulumi.StringPtrInput `pulumi:"acrRegistryName"`
	// ACR repository
	AcrRepositoryName pulumi.StringPtrInput `pulumi:"acrRepositoryName"`
	// ACR resource group
	AcrResourceGroup pulumi.StringPtrInput `pulumi:"acrResourceGroup"`
	// ACR subscription id
	AcrSubscriptionId pulumi.StringPtrInput `pulumi:"acrSubscriptionId"`
}

func (ACRArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ACR)(nil)).Elem()
}

func (i ACRArgs) ToACROutput() ACROutput {
	return i.ToACROutputWithContext(context.Background())
}

func (i ACRArgs) ToACROutputWithContext(ctx context.Context) ACROutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACROutput)
}

func (i ACRArgs) ToACRPtrOutput() ACRPtrOutput {
	return i.ToACRPtrOutputWithContext(context.Background())
}

func (i ACRArgs) ToACRPtrOutputWithContext(ctx context.Context) ACRPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACROutput).ToACRPtrOutputWithContext(ctx)
}

// ACRPtrInput is an input type that accepts ACRArgs, ACRPtr and ACRPtrOutput values.
// You can construct a concrete instance of `ACRPtrInput` via:
//
//	        ACRArgs{...}
//
//	or:
//
//	        nil
type ACRPtrInput interface {
	pulumi.Input

	ToACRPtrOutput() ACRPtrOutput
	ToACRPtrOutputWithContext(context.Context) ACRPtrOutput
}

type acrPtrType ACRArgs

func ACRPtr(v *ACRArgs) ACRPtrInput {
	return (*acrPtrType)(v)
}

func (*acrPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ACR)(nil)).Elem()
}

func (i *acrPtrType) ToACRPtrOutput() ACRPtrOutput {
	return i.ToACRPtrOutputWithContext(context.Background())
}

func (i *acrPtrType) ToACRPtrOutputWithContext(ctx context.Context) ACRPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACRPtrOutput)
}

// Information on the azure container registry
type ACROutput struct{ *pulumi.OutputState }

func (ACROutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACR)(nil)).Elem()
}

func (o ACROutput) ToACROutput() ACROutput {
	return o
}

func (o ACROutput) ToACROutputWithContext(ctx context.Context) ACROutput {
	return o
}

func (o ACROutput) ToACRPtrOutput() ACRPtrOutput {
	return o.ToACRPtrOutputWithContext(context.Background())
}

func (o ACROutput) ToACRPtrOutputWithContext(ctx context.Context) ACRPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ACR) *ACR {
		return &v
	}).(ACRPtrOutput)
}

// ACR registry
func (o ACROutput) AcrRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACR) *string { return v.AcrRegistryName }).(pulumi.StringPtrOutput)
}

// ACR repository
func (o ACROutput) AcrRepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACR) *string { return v.AcrRepositoryName }).(pulumi.StringPtrOutput)
}

// ACR resource group
func (o ACROutput) AcrResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACR) *string { return v.AcrResourceGroup }).(pulumi.StringPtrOutput)
}

// ACR subscription id
func (o ACROutput) AcrSubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACR) *string { return v.AcrSubscriptionId }).(pulumi.StringPtrOutput)
}

type ACRPtrOutput struct{ *pulumi.OutputState }

func (ACRPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACR)(nil)).Elem()
}

func (o ACRPtrOutput) ToACRPtrOutput() ACRPtrOutput {
	return o
}

func (o ACRPtrOutput) ToACRPtrOutputWithContext(ctx context.Context) ACRPtrOutput {
	return o
}

func (o ACRPtrOutput) Elem() ACROutput {
	return o.ApplyT(func(v *ACR) ACR {
		if v != nil {
			return *v
		}
		var ret ACR
		return ret
	}).(ACROutput)
}

// ACR registry
func (o ACRPtrOutput) AcrRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACR) *string {
		if v == nil {
			return nil
		}
		return v.AcrRegistryName
	}).(pulumi.StringPtrOutput)
}

// ACR repository
func (o ACRPtrOutput) AcrRepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACR) *string {
		if v == nil {
			return nil
		}
		return v.AcrRepositoryName
	}).(pulumi.StringPtrOutput)
}

// ACR resource group
func (o ACRPtrOutput) AcrResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACR) *string {
		if v == nil {
			return nil
		}
		return v.AcrResourceGroup
	}).(pulumi.StringPtrOutput)
}

// ACR subscription id
func (o ACRPtrOutput) AcrSubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACR) *string {
		if v == nil {
			return nil
		}
		return v.AcrSubscriptionId
	}).(pulumi.StringPtrOutput)
}

// Information on the azure container registry
type ACRResponse struct {
	// ACR registry
	AcrRegistryName *string `pulumi:"acrRegistryName"`
	// ACR repository
	AcrRepositoryName *string `pulumi:"acrRepositoryName"`
	// ACR resource group
	AcrResourceGroup *string `pulumi:"acrResourceGroup"`
	// ACR subscription id
	AcrSubscriptionId *string `pulumi:"acrSubscriptionId"`
}

// Information on the azure container registry
type ACRResponseOutput struct{ *pulumi.OutputState }

func (ACRResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ACRResponse)(nil)).Elem()
}

func (o ACRResponseOutput) ToACRResponseOutput() ACRResponseOutput {
	return o
}

func (o ACRResponseOutput) ToACRResponseOutputWithContext(ctx context.Context) ACRResponseOutput {
	return o
}

// ACR registry
func (o ACRResponseOutput) AcrRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACRResponse) *string { return v.AcrRegistryName }).(pulumi.StringPtrOutput)
}

// ACR repository
func (o ACRResponseOutput) AcrRepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACRResponse) *string { return v.AcrRepositoryName }).(pulumi.StringPtrOutput)
}

// ACR resource group
func (o ACRResponseOutput) AcrResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACRResponse) *string { return v.AcrResourceGroup }).(pulumi.StringPtrOutput)
}

// ACR subscription id
func (o ACRResponseOutput) AcrSubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ACRResponse) *string { return v.AcrSubscriptionId }).(pulumi.StringPtrOutput)
}

type ACRResponsePtrOutput struct{ *pulumi.OutputState }

func (ACRResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACRResponse)(nil)).Elem()
}

func (o ACRResponsePtrOutput) ToACRResponsePtrOutput() ACRResponsePtrOutput {
	return o
}

func (o ACRResponsePtrOutput) ToACRResponsePtrOutputWithContext(ctx context.Context) ACRResponsePtrOutput {
	return o
}

func (o ACRResponsePtrOutput) Elem() ACRResponseOutput {
	return o.ApplyT(func(v *ACRResponse) ACRResponse {
		if v != nil {
			return *v
		}
		var ret ACRResponse
		return ret
	}).(ACRResponseOutput)
}

// ACR registry
func (o ACRResponsePtrOutput) AcrRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACRResponse) *string {
		if v == nil {
			return nil
		}
		return v.AcrRegistryName
	}).(pulumi.StringPtrOutput)
}

// ACR repository
func (o ACRResponsePtrOutput) AcrRepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACRResponse) *string {
		if v == nil {
			return nil
		}
		return v.AcrRepositoryName
	}).(pulumi.StringPtrOutput)
}

// ACR resource group
func (o ACRResponsePtrOutput) AcrResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACRResponse) *string {
		if v == nil {
			return nil
		}
		return v.AcrResourceGroup
	}).(pulumi.StringPtrOutput)
}

// ACR subscription id
func (o ACRResponsePtrOutput) AcrSubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ACRResponse) *string {
		if v == nil {
			return nil
		}
		return v.AcrSubscriptionId
	}).(pulumi.StringPtrOutput)
}

type DeploymentProperties struct {
	// Helm chart directory path in repository.
	HelmChartPath *string `pulumi:"helmChartPath"`
	// Helm Values.yaml file location in repository.
	HelmValues            *string  `pulumi:"helmValues"`
	KubeManifestLocations []string `pulumi:"kubeManifestLocations"`
	// Determines the type of manifests within the repository.
	ManifestType *string `pulumi:"manifestType"`
	// Manifest override values.
	Overrides map[string]string `pulumi:"overrides"`
}

// DeploymentPropertiesInput is an input type that accepts DeploymentPropertiesArgs and DeploymentPropertiesOutput values.
// You can construct a concrete instance of `DeploymentPropertiesInput` via:
//
//	DeploymentPropertiesArgs{...}
type DeploymentPropertiesInput interface {
	pulumi.Input

	ToDeploymentPropertiesOutput() DeploymentPropertiesOutput
	ToDeploymentPropertiesOutputWithContext(context.Context) DeploymentPropertiesOutput
}

type DeploymentPropertiesArgs struct {
	// Helm chart directory path in repository.
	HelmChartPath pulumi.StringPtrInput `pulumi:"helmChartPath"`
	// Helm Values.yaml file location in repository.
	HelmValues            pulumi.StringPtrInput   `pulumi:"helmValues"`
	KubeManifestLocations pulumi.StringArrayInput `pulumi:"kubeManifestLocations"`
	// Determines the type of manifests within the repository.
	ManifestType pulumi.StringPtrInput `pulumi:"manifestType"`
	// Manifest override values.
	Overrides pulumi.StringMapInput `pulumi:"overrides"`
}

func (DeploymentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentProperties)(nil)).Elem()
}

func (i DeploymentPropertiesArgs) ToDeploymentPropertiesOutput() DeploymentPropertiesOutput {
	return i.ToDeploymentPropertiesOutputWithContext(context.Background())
}

func (i DeploymentPropertiesArgs) ToDeploymentPropertiesOutputWithContext(ctx context.Context) DeploymentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPropertiesOutput)
}

func (i DeploymentPropertiesArgs) ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput {
	return i.ToDeploymentPropertiesPtrOutputWithContext(context.Background())
}

func (i DeploymentPropertiesArgs) ToDeploymentPropertiesPtrOutputWithContext(ctx context.Context) DeploymentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPropertiesOutput).ToDeploymentPropertiesPtrOutputWithContext(ctx)
}

// DeploymentPropertiesPtrInput is an input type that accepts DeploymentPropertiesArgs, DeploymentPropertiesPtr and DeploymentPropertiesPtrOutput values.
// You can construct a concrete instance of `DeploymentPropertiesPtrInput` via:
//
//	        DeploymentPropertiesArgs{...}
//
//	or:
//
//	        nil
type DeploymentPropertiesPtrInput interface {
	pulumi.Input

	ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput
	ToDeploymentPropertiesPtrOutputWithContext(context.Context) DeploymentPropertiesPtrOutput
}

type deploymentPropertiesPtrType DeploymentPropertiesArgs

func DeploymentPropertiesPtr(v *DeploymentPropertiesArgs) DeploymentPropertiesPtrInput {
	return (*deploymentPropertiesPtrType)(v)
}

func (*deploymentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentProperties)(nil)).Elem()
}

func (i *deploymentPropertiesPtrType) ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput {
	return i.ToDeploymentPropertiesPtrOutputWithContext(context.Background())
}

func (i *deploymentPropertiesPtrType) ToDeploymentPropertiesPtrOutputWithContext(ctx context.Context) DeploymentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPropertiesPtrOutput)
}

type DeploymentPropertiesOutput struct{ *pulumi.OutputState }

func (DeploymentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentProperties)(nil)).Elem()
}

func (o DeploymentPropertiesOutput) ToDeploymentPropertiesOutput() DeploymentPropertiesOutput {
	return o
}

func (o DeploymentPropertiesOutput) ToDeploymentPropertiesOutputWithContext(ctx context.Context) DeploymentPropertiesOutput {
	return o
}

func (o DeploymentPropertiesOutput) ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput {
	return o.ToDeploymentPropertiesPtrOutputWithContext(context.Background())
}

func (o DeploymentPropertiesOutput) ToDeploymentPropertiesPtrOutputWithContext(ctx context.Context) DeploymentPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentProperties) *DeploymentProperties {
		return &v
	}).(DeploymentPropertiesPtrOutput)
}

// Helm chart directory path in repository.
func (o DeploymentPropertiesOutput) HelmChartPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *string { return v.HelmChartPath }).(pulumi.StringPtrOutput)
}

// Helm Values.yaml file location in repository.
func (o DeploymentPropertiesOutput) HelmValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *string { return v.HelmValues }).(pulumi.StringPtrOutput)
}

func (o DeploymentPropertiesOutput) KubeManifestLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentProperties) []string { return v.KubeManifestLocations }).(pulumi.StringArrayOutput)
}

// Determines the type of manifests within the repository.
func (o DeploymentPropertiesOutput) ManifestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentProperties) *string { return v.ManifestType }).(pulumi.StringPtrOutput)
}

// Manifest override values.
func (o DeploymentPropertiesOutput) Overrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v DeploymentProperties) map[string]string { return v.Overrides }).(pulumi.StringMapOutput)
}

type DeploymentPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DeploymentPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentProperties)(nil)).Elem()
}

func (o DeploymentPropertiesPtrOutput) ToDeploymentPropertiesPtrOutput() DeploymentPropertiesPtrOutput {
	return o
}

func (o DeploymentPropertiesPtrOutput) ToDeploymentPropertiesPtrOutputWithContext(ctx context.Context) DeploymentPropertiesPtrOutput {
	return o
}

func (o DeploymentPropertiesPtrOutput) Elem() DeploymentPropertiesOutput {
	return o.ApplyT(func(v *DeploymentProperties) DeploymentProperties {
		if v != nil {
			return *v
		}
		var ret DeploymentProperties
		return ret
	}).(DeploymentPropertiesOutput)
}

// Helm chart directory path in repository.
func (o DeploymentPropertiesPtrOutput) HelmChartPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *string {
		if v == nil {
			return nil
		}
		return v.HelmChartPath
	}).(pulumi.StringPtrOutput)
}

// Helm Values.yaml file location in repository.
func (o DeploymentPropertiesPtrOutput) HelmValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *string {
		if v == nil {
			return nil
		}
		return v.HelmValues
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentPropertiesPtrOutput) KubeManifestLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeploymentProperties) []string {
		if v == nil {
			return nil
		}
		return v.KubeManifestLocations
	}).(pulumi.StringArrayOutput)
}

// Determines the type of manifests within the repository.
func (o DeploymentPropertiesPtrOutput) ManifestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentProperties) *string {
		if v == nil {
			return nil
		}
		return v.ManifestType
	}).(pulumi.StringPtrOutput)
}

// Manifest override values.
func (o DeploymentPropertiesPtrOutput) Overrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DeploymentProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Overrides
	}).(pulumi.StringMapOutput)
}

type DeploymentPropertiesResponse struct {
	// Helm chart directory path in repository.
	HelmChartPath *string `pulumi:"helmChartPath"`
	// Helm Values.yaml file location in repository.
	HelmValues            *string  `pulumi:"helmValues"`
	KubeManifestLocations []string `pulumi:"kubeManifestLocations"`
	// Determines the type of manifests within the repository.
	ManifestType *string `pulumi:"manifestType"`
	// Manifest override values.
	Overrides map[string]string `pulumi:"overrides"`
}

type DeploymentPropertiesResponseOutput struct{ *pulumi.OutputState }

func (DeploymentPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentPropertiesResponse)(nil)).Elem()
}

func (o DeploymentPropertiesResponseOutput) ToDeploymentPropertiesResponseOutput() DeploymentPropertiesResponseOutput {
	return o
}

func (o DeploymentPropertiesResponseOutput) ToDeploymentPropertiesResponseOutputWithContext(ctx context.Context) DeploymentPropertiesResponseOutput {
	return o
}

// Helm chart directory path in repository.
func (o DeploymentPropertiesResponseOutput) HelmChartPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) *string { return v.HelmChartPath }).(pulumi.StringPtrOutput)
}

// Helm Values.yaml file location in repository.
func (o DeploymentPropertiesResponseOutput) HelmValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) *string { return v.HelmValues }).(pulumi.StringPtrOutput)
}

func (o DeploymentPropertiesResponseOutput) KubeManifestLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) []string { return v.KubeManifestLocations }).(pulumi.StringArrayOutput)
}

// Determines the type of manifests within the repository.
func (o DeploymentPropertiesResponseOutput) ManifestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) *string { return v.ManifestType }).(pulumi.StringPtrOutput)
}

// Manifest override values.
func (o DeploymentPropertiesResponseOutput) Overrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v DeploymentPropertiesResponse) map[string]string { return v.Overrides }).(pulumi.StringMapOutput)
}

type DeploymentPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DeploymentPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentPropertiesResponse)(nil)).Elem()
}

func (o DeploymentPropertiesResponsePtrOutput) ToDeploymentPropertiesResponsePtrOutput() DeploymentPropertiesResponsePtrOutput {
	return o
}

func (o DeploymentPropertiesResponsePtrOutput) ToDeploymentPropertiesResponsePtrOutputWithContext(ctx context.Context) DeploymentPropertiesResponsePtrOutput {
	return o
}

func (o DeploymentPropertiesResponsePtrOutput) Elem() DeploymentPropertiesResponseOutput {
	return o.ApplyT(func(v *DeploymentPropertiesResponse) DeploymentPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret DeploymentPropertiesResponse
		return ret
	}).(DeploymentPropertiesResponseOutput)
}

// Helm chart directory path in repository.
func (o DeploymentPropertiesResponsePtrOutput) HelmChartPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.HelmChartPath
	}).(pulumi.StringPtrOutput)
}

// Helm Values.yaml file location in repository.
func (o DeploymentPropertiesResponsePtrOutput) HelmValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.HelmValues
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentPropertiesResponsePtrOutput) KubeManifestLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeploymentPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.KubeManifestLocations
	}).(pulumi.StringArrayOutput)
}

// Determines the type of manifests within the repository.
func (o DeploymentPropertiesResponsePtrOutput) ManifestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ManifestType
	}).(pulumi.StringPtrOutput)
}

// Manifest override values.
func (o DeploymentPropertiesResponsePtrOutput) Overrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DeploymentPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Overrides
	}).(pulumi.StringMapOutput)
}

// The fields needed for OIDC with GitHub.
type GitHubWorkflowProfileOidcCredentials struct {
	// Azure Application Client ID
	AzureClientId *string `pulumi:"azureClientId"`
	// Azure Directory (tenant) ID
	AzureTenantId *string `pulumi:"azureTenantId"`
}

// GitHubWorkflowProfileOidcCredentialsInput is an input type that accepts GitHubWorkflowProfileOidcCredentialsArgs and GitHubWorkflowProfileOidcCredentialsOutput values.
// You can construct a concrete instance of `GitHubWorkflowProfileOidcCredentialsInput` via:
//
//	GitHubWorkflowProfileOidcCredentialsArgs{...}
type GitHubWorkflowProfileOidcCredentialsInput interface {
	pulumi.Input

	ToGitHubWorkflowProfileOidcCredentialsOutput() GitHubWorkflowProfileOidcCredentialsOutput
	ToGitHubWorkflowProfileOidcCredentialsOutputWithContext(context.Context) GitHubWorkflowProfileOidcCredentialsOutput
}

// The fields needed for OIDC with GitHub.
type GitHubWorkflowProfileOidcCredentialsArgs struct {
	// Azure Application Client ID
	AzureClientId pulumi.StringPtrInput `pulumi:"azureClientId"`
	// Azure Directory (tenant) ID
	AzureTenantId pulumi.StringPtrInput `pulumi:"azureTenantId"`
}

func (GitHubWorkflowProfileOidcCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubWorkflowProfileOidcCredentials)(nil)).Elem()
}

func (i GitHubWorkflowProfileOidcCredentialsArgs) ToGitHubWorkflowProfileOidcCredentialsOutput() GitHubWorkflowProfileOidcCredentialsOutput {
	return i.ToGitHubWorkflowProfileOidcCredentialsOutputWithContext(context.Background())
}

func (i GitHubWorkflowProfileOidcCredentialsArgs) ToGitHubWorkflowProfileOidcCredentialsOutputWithContext(ctx context.Context) GitHubWorkflowProfileOidcCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubWorkflowProfileOidcCredentialsOutput)
}

func (i GitHubWorkflowProfileOidcCredentialsArgs) ToGitHubWorkflowProfileOidcCredentialsPtrOutput() GitHubWorkflowProfileOidcCredentialsPtrOutput {
	return i.ToGitHubWorkflowProfileOidcCredentialsPtrOutputWithContext(context.Background())
}

func (i GitHubWorkflowProfileOidcCredentialsArgs) ToGitHubWorkflowProfileOidcCredentialsPtrOutputWithContext(ctx context.Context) GitHubWorkflowProfileOidcCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubWorkflowProfileOidcCredentialsOutput).ToGitHubWorkflowProfileOidcCredentialsPtrOutputWithContext(ctx)
}

// GitHubWorkflowProfileOidcCredentialsPtrInput is an input type that accepts GitHubWorkflowProfileOidcCredentialsArgs, GitHubWorkflowProfileOidcCredentialsPtr and GitHubWorkflowProfileOidcCredentialsPtrOutput values.
// You can construct a concrete instance of `GitHubWorkflowProfileOidcCredentialsPtrInput` via:
//
//	        GitHubWorkflowProfileOidcCredentialsArgs{...}
//
//	or:
//
//	        nil
type GitHubWorkflowProfileOidcCredentialsPtrInput interface {
	pulumi.Input

	ToGitHubWorkflowProfileOidcCredentialsPtrOutput() GitHubWorkflowProfileOidcCredentialsPtrOutput
	ToGitHubWorkflowProfileOidcCredentialsPtrOutputWithContext(context.Context) GitHubWorkflowProfileOidcCredentialsPtrOutput
}

type gitHubWorkflowProfileOidcCredentialsPtrType GitHubWorkflowProfileOidcCredentialsArgs

func GitHubWorkflowProfileOidcCredentialsPtr(v *GitHubWorkflowProfileOidcCredentialsArgs) GitHubWorkflowProfileOidcCredentialsPtrInput {
	return (*gitHubWorkflowProfileOidcCredentialsPtrType)(v)
}

func (*gitHubWorkflowProfileOidcCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubWorkflowProfileOidcCredentials)(nil)).Elem()
}

func (i *gitHubWorkflowProfileOidcCredentialsPtrType) ToGitHubWorkflowProfileOidcCredentialsPtrOutput() GitHubWorkflowProfileOidcCredentialsPtrOutput {
	return i.ToGitHubWorkflowProfileOidcCredentialsPtrOutputWithContext(context.Background())
}

func (i *gitHubWorkflowProfileOidcCredentialsPtrType) ToGitHubWorkflowProfileOidcCredentialsPtrOutputWithContext(ctx context.Context) GitHubWorkflowProfileOidcCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubWorkflowProfileOidcCredentialsPtrOutput)
}

// The fields needed for OIDC with GitHub.
type GitHubWorkflowProfileOidcCredentialsOutput struct{ *pulumi.OutputState }

func (GitHubWorkflowProfileOidcCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubWorkflowProfileOidcCredentials)(nil)).Elem()
}

func (o GitHubWorkflowProfileOidcCredentialsOutput) ToGitHubWorkflowProfileOidcCredentialsOutput() GitHubWorkflowProfileOidcCredentialsOutput {
	return o
}

func (o GitHubWorkflowProfileOidcCredentialsOutput) ToGitHubWorkflowProfileOidcCredentialsOutputWithContext(ctx context.Context) GitHubWorkflowProfileOidcCredentialsOutput {
	return o
}

func (o GitHubWorkflowProfileOidcCredentialsOutput) ToGitHubWorkflowProfileOidcCredentialsPtrOutput() GitHubWorkflowProfileOidcCredentialsPtrOutput {
	return o.ToGitHubWorkflowProfileOidcCredentialsPtrOutputWithContext(context.Background())
}

func (o GitHubWorkflowProfileOidcCredentialsOutput) ToGitHubWorkflowProfileOidcCredentialsPtrOutputWithContext(ctx context.Context) GitHubWorkflowProfileOidcCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitHubWorkflowProfileOidcCredentials) *GitHubWorkflowProfileOidcCredentials {
		return &v
	}).(GitHubWorkflowProfileOidcCredentialsPtrOutput)
}

// Azure Application Client ID
func (o GitHubWorkflowProfileOidcCredentialsOutput) AzureClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubWorkflowProfileOidcCredentials) *string { return v.AzureClientId }).(pulumi.StringPtrOutput)
}

// Azure Directory (tenant) ID
func (o GitHubWorkflowProfileOidcCredentialsOutput) AzureTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubWorkflowProfileOidcCredentials) *string { return v.AzureTenantId }).(pulumi.StringPtrOutput)
}

type GitHubWorkflowProfileOidcCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GitHubWorkflowProfileOidcCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubWorkflowProfileOidcCredentials)(nil)).Elem()
}

func (o GitHubWorkflowProfileOidcCredentialsPtrOutput) ToGitHubWorkflowProfileOidcCredentialsPtrOutput() GitHubWorkflowProfileOidcCredentialsPtrOutput {
	return o
}

func (o GitHubWorkflowProfileOidcCredentialsPtrOutput) ToGitHubWorkflowProfileOidcCredentialsPtrOutputWithContext(ctx context.Context) GitHubWorkflowProfileOidcCredentialsPtrOutput {
	return o
}

func (o GitHubWorkflowProfileOidcCredentialsPtrOutput) Elem() GitHubWorkflowProfileOidcCredentialsOutput {
	return o.ApplyT(func(v *GitHubWorkflowProfileOidcCredentials) GitHubWorkflowProfileOidcCredentials {
		if v != nil {
			return *v
		}
		var ret GitHubWorkflowProfileOidcCredentials
		return ret
	}).(GitHubWorkflowProfileOidcCredentialsOutput)
}

// Azure Application Client ID
func (o GitHubWorkflowProfileOidcCredentialsPtrOutput) AzureClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubWorkflowProfileOidcCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AzureClientId
	}).(pulumi.StringPtrOutput)
}

// Azure Directory (tenant) ID
func (o GitHubWorkflowProfileOidcCredentialsPtrOutput) AzureTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubWorkflowProfileOidcCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AzureTenantId
	}).(pulumi.StringPtrOutput)
}

// The fields needed for OIDC with GitHub.
type GitHubWorkflowProfileResponseOidcCredentials struct {
	// Azure Application Client ID
	AzureClientId *string `pulumi:"azureClientId"`
	// Azure Directory (tenant) ID
	AzureTenantId *string `pulumi:"azureTenantId"`
}

// The fields needed for OIDC with GitHub.
type GitHubWorkflowProfileResponseOidcCredentialsOutput struct{ *pulumi.OutputState }

func (GitHubWorkflowProfileResponseOidcCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubWorkflowProfileResponseOidcCredentials)(nil)).Elem()
}

func (o GitHubWorkflowProfileResponseOidcCredentialsOutput) ToGitHubWorkflowProfileResponseOidcCredentialsOutput() GitHubWorkflowProfileResponseOidcCredentialsOutput {
	return o
}

func (o GitHubWorkflowProfileResponseOidcCredentialsOutput) ToGitHubWorkflowProfileResponseOidcCredentialsOutputWithContext(ctx context.Context) GitHubWorkflowProfileResponseOidcCredentialsOutput {
	return o
}

// Azure Application Client ID
func (o GitHubWorkflowProfileResponseOidcCredentialsOutput) AzureClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubWorkflowProfileResponseOidcCredentials) *string { return v.AzureClientId }).(pulumi.StringPtrOutput)
}

// Azure Directory (tenant) ID
func (o GitHubWorkflowProfileResponseOidcCredentialsOutput) AzureTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubWorkflowProfileResponseOidcCredentials) *string { return v.AzureTenantId }).(pulumi.StringPtrOutput)
}

type GitHubWorkflowProfileResponseOidcCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GitHubWorkflowProfileResponseOidcCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubWorkflowProfileResponseOidcCredentials)(nil)).Elem()
}

func (o GitHubWorkflowProfileResponseOidcCredentialsPtrOutput) ToGitHubWorkflowProfileResponseOidcCredentialsPtrOutput() GitHubWorkflowProfileResponseOidcCredentialsPtrOutput {
	return o
}

func (o GitHubWorkflowProfileResponseOidcCredentialsPtrOutput) ToGitHubWorkflowProfileResponseOidcCredentialsPtrOutputWithContext(ctx context.Context) GitHubWorkflowProfileResponseOidcCredentialsPtrOutput {
	return o
}

func (o GitHubWorkflowProfileResponseOidcCredentialsPtrOutput) Elem() GitHubWorkflowProfileResponseOidcCredentialsOutput {
	return o.ApplyT(func(v *GitHubWorkflowProfileResponseOidcCredentials) GitHubWorkflowProfileResponseOidcCredentials {
		if v != nil {
			return *v
		}
		var ret GitHubWorkflowProfileResponseOidcCredentials
		return ret
	}).(GitHubWorkflowProfileResponseOidcCredentialsOutput)
}

// Azure Application Client ID
func (o GitHubWorkflowProfileResponseOidcCredentialsPtrOutput) AzureClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubWorkflowProfileResponseOidcCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AzureClientId
	}).(pulumi.StringPtrOutput)
}

// Azure Directory (tenant) ID
func (o GitHubWorkflowProfileResponseOidcCredentialsPtrOutput) AzureTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubWorkflowProfileResponseOidcCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AzureTenantId
	}).(pulumi.StringPtrOutput)
}

type IacTemplateDetails struct {
	// Count of the product
	Count *int `pulumi:"count"`
	// Naming convention of this product
	NamingConvention *string `pulumi:"namingConvention"`
	// The name of the products.
	ProductName *string `pulumi:"productName"`
}

// IacTemplateDetailsInput is an input type that accepts IacTemplateDetailsArgs and IacTemplateDetailsOutput values.
// You can construct a concrete instance of `IacTemplateDetailsInput` via:
//
//	IacTemplateDetailsArgs{...}
type IacTemplateDetailsInput interface {
	pulumi.Input

	ToIacTemplateDetailsOutput() IacTemplateDetailsOutput
	ToIacTemplateDetailsOutputWithContext(context.Context) IacTemplateDetailsOutput
}

type IacTemplateDetailsArgs struct {
	// Count of the product
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Naming convention of this product
	NamingConvention pulumi.StringPtrInput `pulumi:"namingConvention"`
	// The name of the products.
	ProductName pulumi.StringPtrInput `pulumi:"productName"`
}

func (IacTemplateDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IacTemplateDetails)(nil)).Elem()
}

func (i IacTemplateDetailsArgs) ToIacTemplateDetailsOutput() IacTemplateDetailsOutput {
	return i.ToIacTemplateDetailsOutputWithContext(context.Background())
}

func (i IacTemplateDetailsArgs) ToIacTemplateDetailsOutputWithContext(ctx context.Context) IacTemplateDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IacTemplateDetailsOutput)
}

// IacTemplateDetailsArrayInput is an input type that accepts IacTemplateDetailsArray and IacTemplateDetailsArrayOutput values.
// You can construct a concrete instance of `IacTemplateDetailsArrayInput` via:
//
//	IacTemplateDetailsArray{ IacTemplateDetailsArgs{...} }
type IacTemplateDetailsArrayInput interface {
	pulumi.Input

	ToIacTemplateDetailsArrayOutput() IacTemplateDetailsArrayOutput
	ToIacTemplateDetailsArrayOutputWithContext(context.Context) IacTemplateDetailsArrayOutput
}

type IacTemplateDetailsArray []IacTemplateDetailsInput

func (IacTemplateDetailsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IacTemplateDetails)(nil)).Elem()
}

func (i IacTemplateDetailsArray) ToIacTemplateDetailsArrayOutput() IacTemplateDetailsArrayOutput {
	return i.ToIacTemplateDetailsArrayOutputWithContext(context.Background())
}

func (i IacTemplateDetailsArray) ToIacTemplateDetailsArrayOutputWithContext(ctx context.Context) IacTemplateDetailsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IacTemplateDetailsArrayOutput)
}

type IacTemplateDetailsOutput struct{ *pulumi.OutputState }

func (IacTemplateDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IacTemplateDetails)(nil)).Elem()
}

func (o IacTemplateDetailsOutput) ToIacTemplateDetailsOutput() IacTemplateDetailsOutput {
	return o
}

func (o IacTemplateDetailsOutput) ToIacTemplateDetailsOutputWithContext(ctx context.Context) IacTemplateDetailsOutput {
	return o
}

// Count of the product
func (o IacTemplateDetailsOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IacTemplateDetails) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Naming convention of this product
func (o IacTemplateDetailsOutput) NamingConvention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IacTemplateDetails) *string { return v.NamingConvention }).(pulumi.StringPtrOutput)
}

// The name of the products.
func (o IacTemplateDetailsOutput) ProductName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IacTemplateDetails) *string { return v.ProductName }).(pulumi.StringPtrOutput)
}

type IacTemplateDetailsArrayOutput struct{ *pulumi.OutputState }

func (IacTemplateDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IacTemplateDetails)(nil)).Elem()
}

func (o IacTemplateDetailsArrayOutput) ToIacTemplateDetailsArrayOutput() IacTemplateDetailsArrayOutput {
	return o
}

func (o IacTemplateDetailsArrayOutput) ToIacTemplateDetailsArrayOutputWithContext(ctx context.Context) IacTemplateDetailsArrayOutput {
	return o
}

func (o IacTemplateDetailsArrayOutput) Index(i pulumi.IntInput) IacTemplateDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IacTemplateDetails {
		return vs[0].([]IacTemplateDetails)[vs[1].(int)]
	}).(IacTemplateDetailsOutput)
}

type IacTemplateDetailsResponse struct {
	// Count of the product
	Count *int `pulumi:"count"`
	// Naming convention of this product
	NamingConvention *string `pulumi:"namingConvention"`
	// The name of the products.
	ProductName *string `pulumi:"productName"`
}

type IacTemplateDetailsResponseOutput struct{ *pulumi.OutputState }

func (IacTemplateDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IacTemplateDetailsResponse)(nil)).Elem()
}

func (o IacTemplateDetailsResponseOutput) ToIacTemplateDetailsResponseOutput() IacTemplateDetailsResponseOutput {
	return o
}

func (o IacTemplateDetailsResponseOutput) ToIacTemplateDetailsResponseOutputWithContext(ctx context.Context) IacTemplateDetailsResponseOutput {
	return o
}

// Count of the product
func (o IacTemplateDetailsResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IacTemplateDetailsResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Naming convention of this product
func (o IacTemplateDetailsResponseOutput) NamingConvention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IacTemplateDetailsResponse) *string { return v.NamingConvention }).(pulumi.StringPtrOutput)
}

// The name of the products.
func (o IacTemplateDetailsResponseOutput) ProductName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IacTemplateDetailsResponse) *string { return v.ProductName }).(pulumi.StringPtrOutput)
}

type IacTemplateDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (IacTemplateDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IacTemplateDetailsResponse)(nil)).Elem()
}

func (o IacTemplateDetailsResponseArrayOutput) ToIacTemplateDetailsResponseArrayOutput() IacTemplateDetailsResponseArrayOutput {
	return o
}

func (o IacTemplateDetailsResponseArrayOutput) ToIacTemplateDetailsResponseArrayOutputWithContext(ctx context.Context) IacTemplateDetailsResponseArrayOutput {
	return o
}

func (o IacTemplateDetailsResponseArrayOutput) Index(i pulumi.IntInput) IacTemplateDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IacTemplateDetailsResponse {
		return vs[0].([]IacTemplateDetailsResponse)[vs[1].(int)]
	}).(IacTemplateDetailsResponseOutput)
}

// Properties of a IacTemplate.
type IacTemplateProperties struct {
	// the sample instance name of the template
	InstanceName *string `pulumi:"instanceName"`
	// the source stage of the template
	InstanceStage *string `pulumi:"instanceStage"`
	// the source store of the template
	SourceResourceId *string              `pulumi:"sourceResourceId"`
	TemplateDetails  []IacTemplateDetails `pulumi:"templateDetails"`
	// Template Name
	TemplateName *string `pulumi:"templateName"`
}

// IacTemplatePropertiesInput is an input type that accepts IacTemplatePropertiesArgs and IacTemplatePropertiesOutput values.
// You can construct a concrete instance of `IacTemplatePropertiesInput` via:
//
//	IacTemplatePropertiesArgs{...}
type IacTemplatePropertiesInput interface {
	pulumi.Input

	ToIacTemplatePropertiesOutput() IacTemplatePropertiesOutput
	ToIacTemplatePropertiesOutputWithContext(context.Context) IacTemplatePropertiesOutput
}

// Properties of a IacTemplate.
type IacTemplatePropertiesArgs struct {
	// the sample instance name of the template
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// the source stage of the template
	InstanceStage pulumi.StringPtrInput `pulumi:"instanceStage"`
	// the source store of the template
	SourceResourceId pulumi.StringPtrInput        `pulumi:"sourceResourceId"`
	TemplateDetails  IacTemplateDetailsArrayInput `pulumi:"templateDetails"`
	// Template Name
	TemplateName pulumi.StringPtrInput `pulumi:"templateName"`
}

func (IacTemplatePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IacTemplateProperties)(nil)).Elem()
}

func (i IacTemplatePropertiesArgs) ToIacTemplatePropertiesOutput() IacTemplatePropertiesOutput {
	return i.ToIacTemplatePropertiesOutputWithContext(context.Background())
}

func (i IacTemplatePropertiesArgs) ToIacTemplatePropertiesOutputWithContext(ctx context.Context) IacTemplatePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IacTemplatePropertiesOutput)
}

// IacTemplatePropertiesArrayInput is an input type that accepts IacTemplatePropertiesArray and IacTemplatePropertiesArrayOutput values.
// You can construct a concrete instance of `IacTemplatePropertiesArrayInput` via:
//
//	IacTemplatePropertiesArray{ IacTemplatePropertiesArgs{...} }
type IacTemplatePropertiesArrayInput interface {
	pulumi.Input

	ToIacTemplatePropertiesArrayOutput() IacTemplatePropertiesArrayOutput
	ToIacTemplatePropertiesArrayOutputWithContext(context.Context) IacTemplatePropertiesArrayOutput
}

type IacTemplatePropertiesArray []IacTemplatePropertiesInput

func (IacTemplatePropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IacTemplateProperties)(nil)).Elem()
}

func (i IacTemplatePropertiesArray) ToIacTemplatePropertiesArrayOutput() IacTemplatePropertiesArrayOutput {
	return i.ToIacTemplatePropertiesArrayOutputWithContext(context.Background())
}

func (i IacTemplatePropertiesArray) ToIacTemplatePropertiesArrayOutputWithContext(ctx context.Context) IacTemplatePropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IacTemplatePropertiesArrayOutput)
}

// Properties of a IacTemplate.
type IacTemplatePropertiesOutput struct{ *pulumi.OutputState }

func (IacTemplatePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IacTemplateProperties)(nil)).Elem()
}

func (o IacTemplatePropertiesOutput) ToIacTemplatePropertiesOutput() IacTemplatePropertiesOutput {
	return o
}

func (o IacTemplatePropertiesOutput) ToIacTemplatePropertiesOutputWithContext(ctx context.Context) IacTemplatePropertiesOutput {
	return o
}

// the sample instance name of the template
func (o IacTemplatePropertiesOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IacTemplateProperties) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// the source stage of the template
func (o IacTemplatePropertiesOutput) InstanceStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IacTemplateProperties) *string { return v.InstanceStage }).(pulumi.StringPtrOutput)
}

// the source store of the template
func (o IacTemplatePropertiesOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IacTemplateProperties) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

func (o IacTemplatePropertiesOutput) TemplateDetails() IacTemplateDetailsArrayOutput {
	return o.ApplyT(func(v IacTemplateProperties) []IacTemplateDetails { return v.TemplateDetails }).(IacTemplateDetailsArrayOutput)
}

// Template Name
func (o IacTemplatePropertiesOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IacTemplateProperties) *string { return v.TemplateName }).(pulumi.StringPtrOutput)
}

type IacTemplatePropertiesArrayOutput struct{ *pulumi.OutputState }

func (IacTemplatePropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IacTemplateProperties)(nil)).Elem()
}

func (o IacTemplatePropertiesArrayOutput) ToIacTemplatePropertiesArrayOutput() IacTemplatePropertiesArrayOutput {
	return o
}

func (o IacTemplatePropertiesArrayOutput) ToIacTemplatePropertiesArrayOutputWithContext(ctx context.Context) IacTemplatePropertiesArrayOutput {
	return o
}

func (o IacTemplatePropertiesArrayOutput) Index(i pulumi.IntInput) IacTemplatePropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IacTemplateProperties {
		return vs[0].([]IacTemplateProperties)[vs[1].(int)]
	}).(IacTemplatePropertiesOutput)
}

// Properties of a IacTemplate.
type IacTemplatePropertiesResponse struct {
	// the sample instance name of the template
	InstanceName *string `pulumi:"instanceName"`
	// the source stage of the template
	InstanceStage *string `pulumi:"instanceStage"`
	// Determines the authorization status of requests.
	QuickStartTemplateType string `pulumi:"quickStartTemplateType"`
	// the source store of the template
	SourceResourceId *string                      `pulumi:"sourceResourceId"`
	TemplateDetails  []IacTemplateDetailsResponse `pulumi:"templateDetails"`
	// Template Name
	TemplateName *string `pulumi:"templateName"`
}

// Properties of a IacTemplate.
type IacTemplatePropertiesResponseOutput struct{ *pulumi.OutputState }

func (IacTemplatePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IacTemplatePropertiesResponse)(nil)).Elem()
}

func (o IacTemplatePropertiesResponseOutput) ToIacTemplatePropertiesResponseOutput() IacTemplatePropertiesResponseOutput {
	return o
}

func (o IacTemplatePropertiesResponseOutput) ToIacTemplatePropertiesResponseOutputWithContext(ctx context.Context) IacTemplatePropertiesResponseOutput {
	return o
}

// the sample instance name of the template
func (o IacTemplatePropertiesResponseOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IacTemplatePropertiesResponse) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// the source stage of the template
func (o IacTemplatePropertiesResponseOutput) InstanceStage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IacTemplatePropertiesResponse) *string { return v.InstanceStage }).(pulumi.StringPtrOutput)
}

// Determines the authorization status of requests.
func (o IacTemplatePropertiesResponseOutput) QuickStartTemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v IacTemplatePropertiesResponse) string { return v.QuickStartTemplateType }).(pulumi.StringOutput)
}

// the source store of the template
func (o IacTemplatePropertiesResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IacTemplatePropertiesResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

func (o IacTemplatePropertiesResponseOutput) TemplateDetails() IacTemplateDetailsResponseArrayOutput {
	return o.ApplyT(func(v IacTemplatePropertiesResponse) []IacTemplateDetailsResponse { return v.TemplateDetails }).(IacTemplateDetailsResponseArrayOutput)
}

// Template Name
func (o IacTemplatePropertiesResponseOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IacTemplatePropertiesResponse) *string { return v.TemplateName }).(pulumi.StringPtrOutput)
}

type IacTemplatePropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (IacTemplatePropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IacTemplatePropertiesResponse)(nil)).Elem()
}

func (o IacTemplatePropertiesResponseArrayOutput) ToIacTemplatePropertiesResponseArrayOutput() IacTemplatePropertiesResponseArrayOutput {
	return o
}

func (o IacTemplatePropertiesResponseArrayOutput) ToIacTemplatePropertiesResponseArrayOutputWithContext(ctx context.Context) IacTemplatePropertiesResponseArrayOutput {
	return o
}

func (o IacTemplatePropertiesResponseArrayOutput) Index(i pulumi.IntInput) IacTemplatePropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IacTemplatePropertiesResponse {
		return vs[0].([]IacTemplatePropertiesResponse)[vs[1].(int)]
	}).(IacTemplatePropertiesResponseOutput)
}

// Properties of a Stage.
type StageProperties struct {
	Dependencies   []string `pulumi:"dependencies"`
	GitEnvironment *string  `pulumi:"gitEnvironment"`
	// Stage Name
	StageName *string `pulumi:"stageName"`
}

// StagePropertiesInput is an input type that accepts StagePropertiesArgs and StagePropertiesOutput values.
// You can construct a concrete instance of `StagePropertiesInput` via:
//
//	StagePropertiesArgs{...}
type StagePropertiesInput interface {
	pulumi.Input

	ToStagePropertiesOutput() StagePropertiesOutput
	ToStagePropertiesOutputWithContext(context.Context) StagePropertiesOutput
}

// Properties of a Stage.
type StagePropertiesArgs struct {
	Dependencies   pulumi.StringArrayInput `pulumi:"dependencies"`
	GitEnvironment pulumi.StringPtrInput   `pulumi:"gitEnvironment"`
	// Stage Name
	StageName pulumi.StringPtrInput `pulumi:"stageName"`
}

func (StagePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageProperties)(nil)).Elem()
}

func (i StagePropertiesArgs) ToStagePropertiesOutput() StagePropertiesOutput {
	return i.ToStagePropertiesOutputWithContext(context.Background())
}

func (i StagePropertiesArgs) ToStagePropertiesOutputWithContext(ctx context.Context) StagePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StagePropertiesOutput)
}

// StagePropertiesArrayInput is an input type that accepts StagePropertiesArray and StagePropertiesArrayOutput values.
// You can construct a concrete instance of `StagePropertiesArrayInput` via:
//
//	StagePropertiesArray{ StagePropertiesArgs{...} }
type StagePropertiesArrayInput interface {
	pulumi.Input

	ToStagePropertiesArrayOutput() StagePropertiesArrayOutput
	ToStagePropertiesArrayOutputWithContext(context.Context) StagePropertiesArrayOutput
}

type StagePropertiesArray []StagePropertiesInput

func (StagePropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageProperties)(nil)).Elem()
}

func (i StagePropertiesArray) ToStagePropertiesArrayOutput() StagePropertiesArrayOutput {
	return i.ToStagePropertiesArrayOutputWithContext(context.Background())
}

func (i StagePropertiesArray) ToStagePropertiesArrayOutputWithContext(ctx context.Context) StagePropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StagePropertiesArrayOutput)
}

// Properties of a Stage.
type StagePropertiesOutput struct{ *pulumi.OutputState }

func (StagePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageProperties)(nil)).Elem()
}

func (o StagePropertiesOutput) ToStagePropertiesOutput() StagePropertiesOutput {
	return o
}

func (o StagePropertiesOutput) ToStagePropertiesOutputWithContext(ctx context.Context) StagePropertiesOutput {
	return o
}

func (o StagePropertiesOutput) Dependencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StageProperties) []string { return v.Dependencies }).(pulumi.StringArrayOutput)
}

func (o StagePropertiesOutput) GitEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageProperties) *string { return v.GitEnvironment }).(pulumi.StringPtrOutput)
}

// Stage Name
func (o StagePropertiesOutput) StageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageProperties) *string { return v.StageName }).(pulumi.StringPtrOutput)
}

type StagePropertiesArrayOutput struct{ *pulumi.OutputState }

func (StagePropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageProperties)(nil)).Elem()
}

func (o StagePropertiesArrayOutput) ToStagePropertiesArrayOutput() StagePropertiesArrayOutput {
	return o
}

func (o StagePropertiesArrayOutput) ToStagePropertiesArrayOutputWithContext(ctx context.Context) StagePropertiesArrayOutput {
	return o
}

func (o StagePropertiesArrayOutput) Index(i pulumi.IntInput) StagePropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageProperties {
		return vs[0].([]StageProperties)[vs[1].(int)]
	}).(StagePropertiesOutput)
}

// Properties of a Stage.
type StagePropertiesResponse struct {
	Dependencies   []string `pulumi:"dependencies"`
	GitEnvironment *string  `pulumi:"gitEnvironment"`
	// Stage Name
	StageName *string `pulumi:"stageName"`
}

// Properties of a Stage.
type StagePropertiesResponseOutput struct{ *pulumi.OutputState }

func (StagePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StagePropertiesResponse)(nil)).Elem()
}

func (o StagePropertiesResponseOutput) ToStagePropertiesResponseOutput() StagePropertiesResponseOutput {
	return o
}

func (o StagePropertiesResponseOutput) ToStagePropertiesResponseOutputWithContext(ctx context.Context) StagePropertiesResponseOutput {
	return o
}

func (o StagePropertiesResponseOutput) Dependencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StagePropertiesResponse) []string { return v.Dependencies }).(pulumi.StringArrayOutput)
}

func (o StagePropertiesResponseOutput) GitEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StagePropertiesResponse) *string { return v.GitEnvironment }).(pulumi.StringPtrOutput)
}

// Stage Name
func (o StagePropertiesResponseOutput) StageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StagePropertiesResponse) *string { return v.StageName }).(pulumi.StringPtrOutput)
}

type StagePropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (StagePropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StagePropertiesResponse)(nil)).Elem()
}

func (o StagePropertiesResponseArrayOutput) ToStagePropertiesResponseArrayOutput() StagePropertiesResponseArrayOutput {
	return o
}

func (o StagePropertiesResponseArrayOutput) ToStagePropertiesResponseArrayOutputWithContext(ctx context.Context) StagePropertiesResponseArrayOutput {
	return o
}

func (o StagePropertiesResponseArrayOutput) Index(i pulumi.IntInput) StagePropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StagePropertiesResponse {
		return vs[0].([]StagePropertiesResponse)[vs[1].(int)]
	}).(StagePropertiesResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

type WorkflowRun struct {
	// Describes the status of the workflow run
	WorkflowRunStatus *string `pulumi:"workflowRunStatus"`
}

// WorkflowRunInput is an input type that accepts WorkflowRunArgs and WorkflowRunOutput values.
// You can construct a concrete instance of `WorkflowRunInput` via:
//
//	WorkflowRunArgs{...}
type WorkflowRunInput interface {
	pulumi.Input

	ToWorkflowRunOutput() WorkflowRunOutput
	ToWorkflowRunOutputWithContext(context.Context) WorkflowRunOutput
}

type WorkflowRunArgs struct {
	// Describes the status of the workflow run
	WorkflowRunStatus pulumi.StringPtrInput `pulumi:"workflowRunStatus"`
}

func (WorkflowRunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowRun)(nil)).Elem()
}

func (i WorkflowRunArgs) ToWorkflowRunOutput() WorkflowRunOutput {
	return i.ToWorkflowRunOutputWithContext(context.Background())
}

func (i WorkflowRunArgs) ToWorkflowRunOutputWithContext(ctx context.Context) WorkflowRunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowRunOutput)
}

func (i WorkflowRunArgs) ToWorkflowRunPtrOutput() WorkflowRunPtrOutput {
	return i.ToWorkflowRunPtrOutputWithContext(context.Background())
}

func (i WorkflowRunArgs) ToWorkflowRunPtrOutputWithContext(ctx context.Context) WorkflowRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowRunOutput).ToWorkflowRunPtrOutputWithContext(ctx)
}

// WorkflowRunPtrInput is an input type that accepts WorkflowRunArgs, WorkflowRunPtr and WorkflowRunPtrOutput values.
// You can construct a concrete instance of `WorkflowRunPtrInput` via:
//
//	        WorkflowRunArgs{...}
//
//	or:
//
//	        nil
type WorkflowRunPtrInput interface {
	pulumi.Input

	ToWorkflowRunPtrOutput() WorkflowRunPtrOutput
	ToWorkflowRunPtrOutputWithContext(context.Context) WorkflowRunPtrOutput
}

type workflowRunPtrType WorkflowRunArgs

func WorkflowRunPtr(v *WorkflowRunArgs) WorkflowRunPtrInput {
	return (*workflowRunPtrType)(v)
}

func (*workflowRunPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowRun)(nil)).Elem()
}

func (i *workflowRunPtrType) ToWorkflowRunPtrOutput() WorkflowRunPtrOutput {
	return i.ToWorkflowRunPtrOutputWithContext(context.Background())
}

func (i *workflowRunPtrType) ToWorkflowRunPtrOutputWithContext(ctx context.Context) WorkflowRunPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowRunPtrOutput)
}

type WorkflowRunOutput struct{ *pulumi.OutputState }

func (WorkflowRunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowRun)(nil)).Elem()
}

func (o WorkflowRunOutput) ToWorkflowRunOutput() WorkflowRunOutput {
	return o
}

func (o WorkflowRunOutput) ToWorkflowRunOutputWithContext(ctx context.Context) WorkflowRunOutput {
	return o
}

func (o WorkflowRunOutput) ToWorkflowRunPtrOutput() WorkflowRunPtrOutput {
	return o.ToWorkflowRunPtrOutputWithContext(context.Background())
}

func (o WorkflowRunOutput) ToWorkflowRunPtrOutputWithContext(ctx context.Context) WorkflowRunPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowRun) *WorkflowRun {
		return &v
	}).(WorkflowRunPtrOutput)
}

// Describes the status of the workflow run
func (o WorkflowRunOutput) WorkflowRunStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowRun) *string { return v.WorkflowRunStatus }).(pulumi.StringPtrOutput)
}

type WorkflowRunPtrOutput struct{ *pulumi.OutputState }

func (WorkflowRunPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowRun)(nil)).Elem()
}

func (o WorkflowRunPtrOutput) ToWorkflowRunPtrOutput() WorkflowRunPtrOutput {
	return o
}

func (o WorkflowRunPtrOutput) ToWorkflowRunPtrOutputWithContext(ctx context.Context) WorkflowRunPtrOutput {
	return o
}

func (o WorkflowRunPtrOutput) Elem() WorkflowRunOutput {
	return o.ApplyT(func(v *WorkflowRun) WorkflowRun {
		if v != nil {
			return *v
		}
		var ret WorkflowRun
		return ret
	}).(WorkflowRunOutput)
}

// Describes the status of the workflow run
func (o WorkflowRunPtrOutput) WorkflowRunStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowRun) *string {
		if v == nil {
			return nil
		}
		return v.WorkflowRunStatus
	}).(pulumi.StringPtrOutput)
}

type WorkflowRunResponse struct {
	// The timestamp of the last workflow run.
	LastRunAt string `pulumi:"lastRunAt"`
	// Describes if the workflow run succeeded.
	Succeeded bool `pulumi:"succeeded"`
	// Describes the status of the workflow run
	WorkflowRunStatus *string `pulumi:"workflowRunStatus"`
	// URL to the run of the workflow.
	WorkflowRunURL string `pulumi:"workflowRunURL"`
}

type WorkflowRunResponseOutput struct{ *pulumi.OutputState }

func (WorkflowRunResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowRunResponse)(nil)).Elem()
}

func (o WorkflowRunResponseOutput) ToWorkflowRunResponseOutput() WorkflowRunResponseOutput {
	return o
}

func (o WorkflowRunResponseOutput) ToWorkflowRunResponseOutputWithContext(ctx context.Context) WorkflowRunResponseOutput {
	return o
}

// The timestamp of the last workflow run.
func (o WorkflowRunResponseOutput) LastRunAt() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowRunResponse) string { return v.LastRunAt }).(pulumi.StringOutput)
}

// Describes if the workflow run succeeded.
func (o WorkflowRunResponseOutput) Succeeded() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkflowRunResponse) bool { return v.Succeeded }).(pulumi.BoolOutput)
}

// Describes the status of the workflow run
func (o WorkflowRunResponseOutput) WorkflowRunStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowRunResponse) *string { return v.WorkflowRunStatus }).(pulumi.StringPtrOutput)
}

// URL to the run of the workflow.
func (o WorkflowRunResponseOutput) WorkflowRunURL() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowRunResponse) string { return v.WorkflowRunURL }).(pulumi.StringOutput)
}

type WorkflowRunResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkflowRunResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowRunResponse)(nil)).Elem()
}

func (o WorkflowRunResponsePtrOutput) ToWorkflowRunResponsePtrOutput() WorkflowRunResponsePtrOutput {
	return o
}

func (o WorkflowRunResponsePtrOutput) ToWorkflowRunResponsePtrOutputWithContext(ctx context.Context) WorkflowRunResponsePtrOutput {
	return o
}

func (o WorkflowRunResponsePtrOutput) Elem() WorkflowRunResponseOutput {
	return o.ApplyT(func(v *WorkflowRunResponse) WorkflowRunResponse {
		if v != nil {
			return *v
		}
		var ret WorkflowRunResponse
		return ret
	}).(WorkflowRunResponseOutput)
}

// The timestamp of the last workflow run.
func (o WorkflowRunResponsePtrOutput) LastRunAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowRunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastRunAt
	}).(pulumi.StringPtrOutput)
}

// Describes if the workflow run succeeded.
func (o WorkflowRunResponsePtrOutput) Succeeded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowRunResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Succeeded
	}).(pulumi.BoolPtrOutput)
}

// Describes the status of the workflow run
func (o WorkflowRunResponsePtrOutput) WorkflowRunStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowRunResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkflowRunStatus
	}).(pulumi.StringPtrOutput)
}

// URL to the run of the workflow.
func (o WorkflowRunResponsePtrOutput) WorkflowRunURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowRunResponse) *string {
		if v == nil {
			return nil
		}
		return &v.WorkflowRunURL
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ACROutput{})
	pulumi.RegisterOutputType(ACRPtrOutput{})
	pulumi.RegisterOutputType(ACRResponseOutput{})
	pulumi.RegisterOutputType(ACRResponsePtrOutput{})
	pulumi.RegisterOutputType(DeploymentPropertiesOutput{})
	pulumi.RegisterOutputType(DeploymentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DeploymentPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DeploymentPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(GitHubWorkflowProfileOidcCredentialsOutput{})
	pulumi.RegisterOutputType(GitHubWorkflowProfileOidcCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GitHubWorkflowProfileResponseOidcCredentialsOutput{})
	pulumi.RegisterOutputType(GitHubWorkflowProfileResponseOidcCredentialsPtrOutput{})
	pulumi.RegisterOutputType(IacTemplateDetailsOutput{})
	pulumi.RegisterOutputType(IacTemplateDetailsArrayOutput{})
	pulumi.RegisterOutputType(IacTemplateDetailsResponseOutput{})
	pulumi.RegisterOutputType(IacTemplateDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(IacTemplatePropertiesOutput{})
	pulumi.RegisterOutputType(IacTemplatePropertiesArrayOutput{})
	pulumi.RegisterOutputType(IacTemplatePropertiesResponseOutput{})
	pulumi.RegisterOutputType(IacTemplatePropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(StagePropertiesOutput{})
	pulumi.RegisterOutputType(StagePropertiesArrayOutput{})
	pulumi.RegisterOutputType(StagePropertiesResponseOutput{})
	pulumi.RegisterOutputType(StagePropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(WorkflowRunOutput{})
	pulumi.RegisterOutputType(WorkflowRunPtrOutput{})
	pulumi.RegisterOutputType(WorkflowRunResponseOutput{})
	pulumi.RegisterOutputType(WorkflowRunResponsePtrOutput{})
}
