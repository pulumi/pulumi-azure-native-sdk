// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package offazurespringboot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Defines the error.
type Error struct {
	// The error code.
	Code *string `pulumi:"code"`
	// The error ID.
	Id *float64 `pulumi:"id"`
	// The detailed error message.
	Message *string `pulumi:"message"`
	// The error possible causes.
	PossibleCauses *string `pulumi:"possibleCauses"`
	// The error recommended action
	RecommendedAction *string `pulumi:"recommendedAction"`
	// The account ID used to login.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
	// The error severity
	Severity *string `pulumi:"severity"`
	// The summarized error message.
	SummaryMessage *string `pulumi:"summaryMessage"`
	// Time when this error was last updated.
	UpdatedTimeStamp *string `pulumi:"updatedTimeStamp"`
}

// ErrorInput is an input type that accepts ErrorArgs and ErrorOutput values.
// You can construct a concrete instance of `ErrorInput` via:
//
//	ErrorArgs{...}
type ErrorInput interface {
	pulumi.Input

	ToErrorOutput() ErrorOutput
	ToErrorOutputWithContext(context.Context) ErrorOutput
}

// Defines the error.
type ErrorArgs struct {
	// The error code.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// The error ID.
	Id pulumi.Float64PtrInput `pulumi:"id"`
	// The detailed error message.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The error possible causes.
	PossibleCauses pulumi.StringPtrInput `pulumi:"possibleCauses"`
	// The error recommended action
	RecommendedAction pulumi.StringPtrInput `pulumi:"recommendedAction"`
	// The account ID used to login.
	RunAsAccountId pulumi.StringPtrInput `pulumi:"runAsAccountId"`
	// The error severity
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// The summarized error message.
	SummaryMessage pulumi.StringPtrInput `pulumi:"summaryMessage"`
	// Time when this error was last updated.
	UpdatedTimeStamp pulumi.StringPtrInput `pulumi:"updatedTimeStamp"`
}

func (ErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Error)(nil)).Elem()
}

func (i ErrorArgs) ToErrorOutput() ErrorOutput {
	return i.ToErrorOutputWithContext(context.Background())
}

func (i ErrorArgs) ToErrorOutputWithContext(ctx context.Context) ErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorOutput)
}

// ErrorArrayInput is an input type that accepts ErrorArray and ErrorArrayOutput values.
// You can construct a concrete instance of `ErrorArrayInput` via:
//
//	ErrorArray{ ErrorArgs{...} }
type ErrorArrayInput interface {
	pulumi.Input

	ToErrorArrayOutput() ErrorArrayOutput
	ToErrorArrayOutputWithContext(context.Context) ErrorArrayOutput
}

type ErrorArray []ErrorInput

func (ErrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Error)(nil)).Elem()
}

func (i ErrorArray) ToErrorArrayOutput() ErrorArrayOutput {
	return i.ToErrorArrayOutputWithContext(context.Background())
}

func (i ErrorArray) ToErrorArrayOutputWithContext(ctx context.Context) ErrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ErrorArrayOutput)
}

// Defines the error.
type ErrorOutput struct{ *pulumi.OutputState }

func (ErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Error)(nil)).Elem()
}

func (o ErrorOutput) ToErrorOutput() ErrorOutput {
	return o
}

func (o ErrorOutput) ToErrorOutputWithContext(ctx context.Context) ErrorOutput {
	return o
}

// The error code.
func (o ErrorOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Error) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// The error ID.
func (o ErrorOutput) Id() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v Error) *float64 { return v.Id }).(pulumi.Float64PtrOutput)
}

// The detailed error message.
func (o ErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Error) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The error possible causes.
func (o ErrorOutput) PossibleCauses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Error) *string { return v.PossibleCauses }).(pulumi.StringPtrOutput)
}

// The error recommended action
func (o ErrorOutput) RecommendedAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Error) *string { return v.RecommendedAction }).(pulumi.StringPtrOutput)
}

// The account ID used to login.
func (o ErrorOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Error) *string { return v.RunAsAccountId }).(pulumi.StringPtrOutput)
}

// The error severity
func (o ErrorOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Error) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// The summarized error message.
func (o ErrorOutput) SummaryMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Error) *string { return v.SummaryMessage }).(pulumi.StringPtrOutput)
}

// Time when this error was last updated.
func (o ErrorOutput) UpdatedTimeStamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Error) *string { return v.UpdatedTimeStamp }).(pulumi.StringPtrOutput)
}

type ErrorArrayOutput struct{ *pulumi.OutputState }

func (ErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Error)(nil)).Elem()
}

func (o ErrorArrayOutput) ToErrorArrayOutput() ErrorArrayOutput {
	return o
}

func (o ErrorArrayOutput) ToErrorArrayOutputWithContext(ctx context.Context) ErrorArrayOutput {
	return o
}

func (o ErrorArrayOutput) Index(i pulumi.IntInput) ErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Error {
		return vs[0].([]Error)[vs[1].(int)]
	}).(ErrorOutput)
}

// Defines the error.
type ErrorResponse struct {
	// The error code.
	Code *string `pulumi:"code"`
	// The error ID.
	Id *float64 `pulumi:"id"`
	// The detailed error message.
	Message *string `pulumi:"message"`
	// The error possible causes.
	PossibleCauses *string `pulumi:"possibleCauses"`
	// The error recommended action
	RecommendedAction *string `pulumi:"recommendedAction"`
	// The account ID used to login.
	RunAsAccountId *string `pulumi:"runAsAccountId"`
	// The error severity
	Severity *string `pulumi:"severity"`
	// The summarized error message.
	SummaryMessage *string `pulumi:"summaryMessage"`
	// Time when this error was last updated.
	UpdatedTimeStamp *string `pulumi:"updatedTimeStamp"`
}

// Defines the error.
type ErrorResponseOutput struct{ *pulumi.OutputState }

func (ErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorResponse)(nil)).Elem()
}

func (o ErrorResponseOutput) ToErrorResponseOutput() ErrorResponseOutput {
	return o
}

func (o ErrorResponseOutput) ToErrorResponseOutputWithContext(ctx context.Context) ErrorResponseOutput {
	return o
}

// The error code.
func (o ErrorResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// The error ID.
func (o ErrorResponseOutput) Id() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ErrorResponse) *float64 { return v.Id }).(pulumi.Float64PtrOutput)
}

// The detailed error message.
func (o ErrorResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The error possible causes.
func (o ErrorResponseOutput) PossibleCauses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorResponse) *string { return v.PossibleCauses }).(pulumi.StringPtrOutput)
}

// The error recommended action
func (o ErrorResponseOutput) RecommendedAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorResponse) *string { return v.RecommendedAction }).(pulumi.StringPtrOutput)
}

// The account ID used to login.
func (o ErrorResponseOutput) RunAsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorResponse) *string { return v.RunAsAccountId }).(pulumi.StringPtrOutput)
}

// The error severity
func (o ErrorResponseOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorResponse) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// The summarized error message.
func (o ErrorResponseOutput) SummaryMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorResponse) *string { return v.SummaryMessage }).(pulumi.StringPtrOutput)
}

// Time when this error was last updated.
func (o ErrorResponseOutput) UpdatedTimeStamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorResponse) *string { return v.UpdatedTimeStamp }).(pulumi.StringPtrOutput)
}

type ErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorResponse)(nil)).Elem()
}

func (o ErrorResponseArrayOutput) ToErrorResponseArrayOutput() ErrorResponseArrayOutput {
	return o
}

func (o ErrorResponseArrayOutput) ToErrorResponseArrayOutputWithContext(ctx context.Context) ErrorResponseArrayOutput {
	return o
}

func (o ErrorResponseArrayOutput) Index(i pulumi.IntInput) ErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorResponse {
		return vs[0].([]ErrorResponse)[vs[1].(int)]
	}).(ErrorResponseOutput)
}

// The springbootapps resource definition.
type SpringbootappsProperties struct {
	// The name of SpringBootApp.
	AppName *string `pulumi:"appName"`
	// The application port.
	AppPort *int `pulumi:"appPort"`
	// The application type, whether it is a SpringBoot app.
	AppType *string `pulumi:"appType"`
	// The application configuration file list.
	ApplicationConfigurations []SpringbootappsPropertiesApplicationConfigurations `pulumi:"applicationConfigurations"`
	// The artifact name of SpringBootApp.
	ArtifactName *string `pulumi:"artifactName"`
	// The application binding port list.
	BindingPorts []int `pulumi:"bindingPorts"`
	// The jdk version in build.
	BuildJdkVersion *string `pulumi:"buildJdkVersion"`
	// The certificate file list.
	Certificates []string `pulumi:"certificates"`
	// The checksum of jar file.
	Checksum *string `pulumi:"checksum"`
	// The connection string list.
	ConnectionStrings []string `pulumi:"connectionStrings"`
	// The dependency list.
	Dependencies []string `pulumi:"dependencies"`
	// The environment variable list.
	Environments []string `pulumi:"environments"`
	// The list of errors.
	Errors []Error `pulumi:"errors"`
	// The total instance count the app deployed.
	InstanceCount *int `pulumi:"instanceCount"`
	// The breakdown info for app instances on all the servers
	Instances []SpringbootappsPropertiesInstances `pulumi:"instances"`
	// The jar file location on the server.
	JarFileLocation *string `pulumi:"jarFileLocation"`
	// The jvm heap memory allocated.
	JvmMemoryInMB *int `pulumi:"jvmMemoryInMB"`
	// The jvm options.
	JvmOptions []string `pulumi:"jvmOptions"`
	// Resource labels
	Labels map[string]string `pulumi:"labels"`
	// Time when this springbootapps jar file was last modified.
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// Time when this springbootapps instance was last refreshed.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// The machine ARM id list the app belongs to.
	MachineArmIds []string `pulumi:"machineArmIds"`
	// The other types of date collected.
	Miscs []SpringbootappsPropertiesMiscs `pulumi:"miscs"`
	// The jdk version installed on server
	RuntimeJdkVersion *string `pulumi:"runtimeJdkVersion"`
	// The server list the app installed
	Servers []string `pulumi:"servers"`
	// The spring boot version.
	SpringBootVersion *string `pulumi:"springBootVersion"`
	// The static content location list.
	StaticContentLocations []string `pulumi:"staticContentLocations"`
}

// SpringbootappsPropertiesInput is an input type that accepts SpringbootappsPropertiesArgs and SpringbootappsPropertiesOutput values.
// You can construct a concrete instance of `SpringbootappsPropertiesInput` via:
//
//	SpringbootappsPropertiesArgs{...}
type SpringbootappsPropertiesInput interface {
	pulumi.Input

	ToSpringbootappsPropertiesOutput() SpringbootappsPropertiesOutput
	ToSpringbootappsPropertiesOutputWithContext(context.Context) SpringbootappsPropertiesOutput
}

// The springbootapps resource definition.
type SpringbootappsPropertiesArgs struct {
	// The name of SpringBootApp.
	AppName pulumi.StringPtrInput `pulumi:"appName"`
	// The application port.
	AppPort pulumi.IntPtrInput `pulumi:"appPort"`
	// The application type, whether it is a SpringBoot app.
	AppType pulumi.StringPtrInput `pulumi:"appType"`
	// The application configuration file list.
	ApplicationConfigurations SpringbootappsPropertiesApplicationConfigurationsArrayInput `pulumi:"applicationConfigurations"`
	// The artifact name of SpringBootApp.
	ArtifactName pulumi.StringPtrInput `pulumi:"artifactName"`
	// The application binding port list.
	BindingPorts pulumi.IntArrayInput `pulumi:"bindingPorts"`
	// The jdk version in build.
	BuildJdkVersion pulumi.StringPtrInput `pulumi:"buildJdkVersion"`
	// The certificate file list.
	Certificates pulumi.StringArrayInput `pulumi:"certificates"`
	// The checksum of jar file.
	Checksum pulumi.StringPtrInput `pulumi:"checksum"`
	// The connection string list.
	ConnectionStrings pulumi.StringArrayInput `pulumi:"connectionStrings"`
	// The dependency list.
	Dependencies pulumi.StringArrayInput `pulumi:"dependencies"`
	// The environment variable list.
	Environments pulumi.StringArrayInput `pulumi:"environments"`
	// The list of errors.
	Errors ErrorArrayInput `pulumi:"errors"`
	// The total instance count the app deployed.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// The breakdown info for app instances on all the servers
	Instances SpringbootappsPropertiesInstancesArrayInput `pulumi:"instances"`
	// The jar file location on the server.
	JarFileLocation pulumi.StringPtrInput `pulumi:"jarFileLocation"`
	// The jvm heap memory allocated.
	JvmMemoryInMB pulumi.IntPtrInput `pulumi:"jvmMemoryInMB"`
	// The jvm options.
	JvmOptions pulumi.StringArrayInput `pulumi:"jvmOptions"`
	// Resource labels
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Time when this springbootapps jar file was last modified.
	LastModifiedTime pulumi.StringPtrInput `pulumi:"lastModifiedTime"`
	// Time when this springbootapps instance was last refreshed.
	LastUpdatedTime pulumi.StringPtrInput `pulumi:"lastUpdatedTime"`
	// The machine ARM id list the app belongs to.
	MachineArmIds pulumi.StringArrayInput `pulumi:"machineArmIds"`
	// The other types of date collected.
	Miscs SpringbootappsPropertiesMiscsArrayInput `pulumi:"miscs"`
	// The jdk version installed on server
	RuntimeJdkVersion pulumi.StringPtrInput `pulumi:"runtimeJdkVersion"`
	// The server list the app installed
	Servers pulumi.StringArrayInput `pulumi:"servers"`
	// The spring boot version.
	SpringBootVersion pulumi.StringPtrInput `pulumi:"springBootVersion"`
	// The static content location list.
	StaticContentLocations pulumi.StringArrayInput `pulumi:"staticContentLocations"`
}

func (SpringbootappsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootappsProperties)(nil)).Elem()
}

func (i SpringbootappsPropertiesArgs) ToSpringbootappsPropertiesOutput() SpringbootappsPropertiesOutput {
	return i.ToSpringbootappsPropertiesOutputWithContext(context.Background())
}

func (i SpringbootappsPropertiesArgs) ToSpringbootappsPropertiesOutputWithContext(ctx context.Context) SpringbootappsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootappsPropertiesOutput)
}

func (i SpringbootappsPropertiesArgs) ToSpringbootappsPropertiesPtrOutput() SpringbootappsPropertiesPtrOutput {
	return i.ToSpringbootappsPropertiesPtrOutputWithContext(context.Background())
}

func (i SpringbootappsPropertiesArgs) ToSpringbootappsPropertiesPtrOutputWithContext(ctx context.Context) SpringbootappsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootappsPropertiesOutput).ToSpringbootappsPropertiesPtrOutputWithContext(ctx)
}

// SpringbootappsPropertiesPtrInput is an input type that accepts SpringbootappsPropertiesArgs, SpringbootappsPropertiesPtr and SpringbootappsPropertiesPtrOutput values.
// You can construct a concrete instance of `SpringbootappsPropertiesPtrInput` via:
//
//	        SpringbootappsPropertiesArgs{...}
//
//	or:
//
//	        nil
type SpringbootappsPropertiesPtrInput interface {
	pulumi.Input

	ToSpringbootappsPropertiesPtrOutput() SpringbootappsPropertiesPtrOutput
	ToSpringbootappsPropertiesPtrOutputWithContext(context.Context) SpringbootappsPropertiesPtrOutput
}

type springbootappsPropertiesPtrType SpringbootappsPropertiesArgs

func SpringbootappsPropertiesPtr(v *SpringbootappsPropertiesArgs) SpringbootappsPropertiesPtrInput {
	return (*springbootappsPropertiesPtrType)(v)
}

func (*springbootappsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringbootappsProperties)(nil)).Elem()
}

func (i *springbootappsPropertiesPtrType) ToSpringbootappsPropertiesPtrOutput() SpringbootappsPropertiesPtrOutput {
	return i.ToSpringbootappsPropertiesPtrOutputWithContext(context.Background())
}

func (i *springbootappsPropertiesPtrType) ToSpringbootappsPropertiesPtrOutputWithContext(ctx context.Context) SpringbootappsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootappsPropertiesPtrOutput)
}

// The springbootapps resource definition.
type SpringbootappsPropertiesOutput struct{ *pulumi.OutputState }

func (SpringbootappsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootappsProperties)(nil)).Elem()
}

func (o SpringbootappsPropertiesOutput) ToSpringbootappsPropertiesOutput() SpringbootappsPropertiesOutput {
	return o
}

func (o SpringbootappsPropertiesOutput) ToSpringbootappsPropertiesOutputWithContext(ctx context.Context) SpringbootappsPropertiesOutput {
	return o
}

func (o SpringbootappsPropertiesOutput) ToSpringbootappsPropertiesPtrOutput() SpringbootappsPropertiesPtrOutput {
	return o.ToSpringbootappsPropertiesPtrOutputWithContext(context.Background())
}

func (o SpringbootappsPropertiesOutput) ToSpringbootappsPropertiesPtrOutputWithContext(ctx context.Context) SpringbootappsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpringbootappsProperties) *SpringbootappsProperties {
		return &v
	}).(SpringbootappsPropertiesPtrOutput)
}

// The name of SpringBootApp.
func (o SpringbootappsPropertiesOutput) AppName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsProperties) *string { return v.AppName }).(pulumi.StringPtrOutput)
}

// The application port.
func (o SpringbootappsPropertiesOutput) AppPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpringbootappsProperties) *int { return v.AppPort }).(pulumi.IntPtrOutput)
}

// The application type, whether it is a SpringBoot app.
func (o SpringbootappsPropertiesOutput) AppType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsProperties) *string { return v.AppType }).(pulumi.StringPtrOutput)
}

// The application configuration file list.
func (o SpringbootappsPropertiesOutput) ApplicationConfigurations() SpringbootappsPropertiesApplicationConfigurationsArrayOutput {
	return o.ApplyT(func(v SpringbootappsProperties) []SpringbootappsPropertiesApplicationConfigurations {
		return v.ApplicationConfigurations
	}).(SpringbootappsPropertiesApplicationConfigurationsArrayOutput)
}

// The artifact name of SpringBootApp.
func (o SpringbootappsPropertiesOutput) ArtifactName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsProperties) *string { return v.ArtifactName }).(pulumi.StringPtrOutput)
}

// The application binding port list.
func (o SpringbootappsPropertiesOutput) BindingPorts() pulumi.IntArrayOutput {
	return o.ApplyT(func(v SpringbootappsProperties) []int { return v.BindingPorts }).(pulumi.IntArrayOutput)
}

// The jdk version in build.
func (o SpringbootappsPropertiesOutput) BuildJdkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsProperties) *string { return v.BuildJdkVersion }).(pulumi.StringPtrOutput)
}

// The certificate file list.
func (o SpringbootappsPropertiesOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootappsProperties) []string { return v.Certificates }).(pulumi.StringArrayOutput)
}

// The checksum of jar file.
func (o SpringbootappsPropertiesOutput) Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsProperties) *string { return v.Checksum }).(pulumi.StringPtrOutput)
}

// The connection string list.
func (o SpringbootappsPropertiesOutput) ConnectionStrings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootappsProperties) []string { return v.ConnectionStrings }).(pulumi.StringArrayOutput)
}

// The dependency list.
func (o SpringbootappsPropertiesOutput) Dependencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootappsProperties) []string { return v.Dependencies }).(pulumi.StringArrayOutput)
}

// The environment variable list.
func (o SpringbootappsPropertiesOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootappsProperties) []string { return v.Environments }).(pulumi.StringArrayOutput)
}

// The list of errors.
func (o SpringbootappsPropertiesOutput) Errors() ErrorArrayOutput {
	return o.ApplyT(func(v SpringbootappsProperties) []Error { return v.Errors }).(ErrorArrayOutput)
}

// The total instance count the app deployed.
func (o SpringbootappsPropertiesOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpringbootappsProperties) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The breakdown info for app instances on all the servers
func (o SpringbootappsPropertiesOutput) Instances() SpringbootappsPropertiesInstancesArrayOutput {
	return o.ApplyT(func(v SpringbootappsProperties) []SpringbootappsPropertiesInstances { return v.Instances }).(SpringbootappsPropertiesInstancesArrayOutput)
}

// The jar file location on the server.
func (o SpringbootappsPropertiesOutput) JarFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsProperties) *string { return v.JarFileLocation }).(pulumi.StringPtrOutput)
}

// The jvm heap memory allocated.
func (o SpringbootappsPropertiesOutput) JvmMemoryInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpringbootappsProperties) *int { return v.JvmMemoryInMB }).(pulumi.IntPtrOutput)
}

// The jvm options.
func (o SpringbootappsPropertiesOutput) JvmOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootappsProperties) []string { return v.JvmOptions }).(pulumi.StringArrayOutput)
}

// Resource labels
func (o SpringbootappsPropertiesOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v SpringbootappsProperties) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Time when this springbootapps jar file was last modified.
func (o SpringbootappsPropertiesOutput) LastModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsProperties) *string { return v.LastModifiedTime }).(pulumi.StringPtrOutput)
}

// Time when this springbootapps instance was last refreshed.
func (o SpringbootappsPropertiesOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsProperties) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// The machine ARM id list the app belongs to.
func (o SpringbootappsPropertiesOutput) MachineArmIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootappsProperties) []string { return v.MachineArmIds }).(pulumi.StringArrayOutput)
}

// The other types of date collected.
func (o SpringbootappsPropertiesOutput) Miscs() SpringbootappsPropertiesMiscsArrayOutput {
	return o.ApplyT(func(v SpringbootappsProperties) []SpringbootappsPropertiesMiscs { return v.Miscs }).(SpringbootappsPropertiesMiscsArrayOutput)
}

// The jdk version installed on server
func (o SpringbootappsPropertiesOutput) RuntimeJdkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsProperties) *string { return v.RuntimeJdkVersion }).(pulumi.StringPtrOutput)
}

// The server list the app installed
func (o SpringbootappsPropertiesOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootappsProperties) []string { return v.Servers }).(pulumi.StringArrayOutput)
}

// The spring boot version.
func (o SpringbootappsPropertiesOutput) SpringBootVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsProperties) *string { return v.SpringBootVersion }).(pulumi.StringPtrOutput)
}

// The static content location list.
func (o SpringbootappsPropertiesOutput) StaticContentLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootappsProperties) []string { return v.StaticContentLocations }).(pulumi.StringArrayOutput)
}

type SpringbootappsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SpringbootappsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringbootappsProperties)(nil)).Elem()
}

func (o SpringbootappsPropertiesPtrOutput) ToSpringbootappsPropertiesPtrOutput() SpringbootappsPropertiesPtrOutput {
	return o
}

func (o SpringbootappsPropertiesPtrOutput) ToSpringbootappsPropertiesPtrOutputWithContext(ctx context.Context) SpringbootappsPropertiesPtrOutput {
	return o
}

func (o SpringbootappsPropertiesPtrOutput) Elem() SpringbootappsPropertiesOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) SpringbootappsProperties {
		if v != nil {
			return *v
		}
		var ret SpringbootappsProperties
		return ret
	}).(SpringbootappsPropertiesOutput)
}

// The name of SpringBootApp.
func (o SpringbootappsPropertiesPtrOutput) AppName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) *string {
		if v == nil {
			return nil
		}
		return v.AppName
	}).(pulumi.StringPtrOutput)
}

// The application port.
func (o SpringbootappsPropertiesPtrOutput) AppPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) *int {
		if v == nil {
			return nil
		}
		return v.AppPort
	}).(pulumi.IntPtrOutput)
}

// The application type, whether it is a SpringBoot app.
func (o SpringbootappsPropertiesPtrOutput) AppType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) *string {
		if v == nil {
			return nil
		}
		return v.AppType
	}).(pulumi.StringPtrOutput)
}

// The application configuration file list.
func (o SpringbootappsPropertiesPtrOutput) ApplicationConfigurations() SpringbootappsPropertiesApplicationConfigurationsArrayOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) []SpringbootappsPropertiesApplicationConfigurations {
		if v == nil {
			return nil
		}
		return v.ApplicationConfigurations
	}).(SpringbootappsPropertiesApplicationConfigurationsArrayOutput)
}

// The artifact name of SpringBootApp.
func (o SpringbootappsPropertiesPtrOutput) ArtifactName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactName
	}).(pulumi.StringPtrOutput)
}

// The application binding port list.
func (o SpringbootappsPropertiesPtrOutput) BindingPorts() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) []int {
		if v == nil {
			return nil
		}
		return v.BindingPorts
	}).(pulumi.IntArrayOutput)
}

// The jdk version in build.
func (o SpringbootappsPropertiesPtrOutput) BuildJdkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) *string {
		if v == nil {
			return nil
		}
		return v.BuildJdkVersion
	}).(pulumi.StringPtrOutput)
}

// The certificate file list.
func (o SpringbootappsPropertiesPtrOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) []string {
		if v == nil {
			return nil
		}
		return v.Certificates
	}).(pulumi.StringArrayOutput)
}

// The checksum of jar file.
func (o SpringbootappsPropertiesPtrOutput) Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) *string {
		if v == nil {
			return nil
		}
		return v.Checksum
	}).(pulumi.StringPtrOutput)
}

// The connection string list.
func (o SpringbootappsPropertiesPtrOutput) ConnectionStrings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) []string {
		if v == nil {
			return nil
		}
		return v.ConnectionStrings
	}).(pulumi.StringArrayOutput)
}

// The dependency list.
func (o SpringbootappsPropertiesPtrOutput) Dependencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) []string {
		if v == nil {
			return nil
		}
		return v.Dependencies
	}).(pulumi.StringArrayOutput)
}

// The environment variable list.
func (o SpringbootappsPropertiesPtrOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) []string {
		if v == nil {
			return nil
		}
		return v.Environments
	}).(pulumi.StringArrayOutput)
}

// The list of errors.
func (o SpringbootappsPropertiesPtrOutput) Errors() ErrorArrayOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) []Error {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(ErrorArrayOutput)
}

// The total instance count the app deployed.
func (o SpringbootappsPropertiesPtrOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) *int {
		if v == nil {
			return nil
		}
		return v.InstanceCount
	}).(pulumi.IntPtrOutput)
}

// The breakdown info for app instances on all the servers
func (o SpringbootappsPropertiesPtrOutput) Instances() SpringbootappsPropertiesInstancesArrayOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) []SpringbootappsPropertiesInstances {
		if v == nil {
			return nil
		}
		return v.Instances
	}).(SpringbootappsPropertiesInstancesArrayOutput)
}

// The jar file location on the server.
func (o SpringbootappsPropertiesPtrOutput) JarFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) *string {
		if v == nil {
			return nil
		}
		return v.JarFileLocation
	}).(pulumi.StringPtrOutput)
}

// The jvm heap memory allocated.
func (o SpringbootappsPropertiesPtrOutput) JvmMemoryInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) *int {
		if v == nil {
			return nil
		}
		return v.JvmMemoryInMB
	}).(pulumi.IntPtrOutput)
}

// The jvm options.
func (o SpringbootappsPropertiesPtrOutput) JvmOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) []string {
		if v == nil {
			return nil
		}
		return v.JvmOptions
	}).(pulumi.StringArrayOutput)
}

// Resource labels
func (o SpringbootappsPropertiesPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// Time when this springbootapps jar file was last modified.
func (o SpringbootappsPropertiesPtrOutput) LastModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedTime
	}).(pulumi.StringPtrOutput)
}

// Time when this springbootapps instance was last refreshed.
func (o SpringbootappsPropertiesPtrOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdatedTime
	}).(pulumi.StringPtrOutput)
}

// The machine ARM id list the app belongs to.
func (o SpringbootappsPropertiesPtrOutput) MachineArmIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) []string {
		if v == nil {
			return nil
		}
		return v.MachineArmIds
	}).(pulumi.StringArrayOutput)
}

// The other types of date collected.
func (o SpringbootappsPropertiesPtrOutput) Miscs() SpringbootappsPropertiesMiscsArrayOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) []SpringbootappsPropertiesMiscs {
		if v == nil {
			return nil
		}
		return v.Miscs
	}).(SpringbootappsPropertiesMiscsArrayOutput)
}

// The jdk version installed on server
func (o SpringbootappsPropertiesPtrOutput) RuntimeJdkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeJdkVersion
	}).(pulumi.StringPtrOutput)
}

// The server list the app installed
func (o SpringbootappsPropertiesPtrOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) []string {
		if v == nil {
			return nil
		}
		return v.Servers
	}).(pulumi.StringArrayOutput)
}

// The spring boot version.
func (o SpringbootappsPropertiesPtrOutput) SpringBootVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) *string {
		if v == nil {
			return nil
		}
		return v.SpringBootVersion
	}).(pulumi.StringPtrOutput)
}

// The static content location list.
func (o SpringbootappsPropertiesPtrOutput) StaticContentLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpringbootappsProperties) []string {
		if v == nil {
			return nil
		}
		return v.StaticContentLocations
	}).(pulumi.StringArrayOutput)
}

type SpringbootappsPropertiesApplicationConfigurations struct {
	// The application config file name.
	Key string `pulumi:"key"`
	// The application config file content, only contains config keys.
	Value *string `pulumi:"value"`
}

// SpringbootappsPropertiesApplicationConfigurationsInput is an input type that accepts SpringbootappsPropertiesApplicationConfigurationsArgs and SpringbootappsPropertiesApplicationConfigurationsOutput values.
// You can construct a concrete instance of `SpringbootappsPropertiesApplicationConfigurationsInput` via:
//
//	SpringbootappsPropertiesApplicationConfigurationsArgs{...}
type SpringbootappsPropertiesApplicationConfigurationsInput interface {
	pulumi.Input

	ToSpringbootappsPropertiesApplicationConfigurationsOutput() SpringbootappsPropertiesApplicationConfigurationsOutput
	ToSpringbootappsPropertiesApplicationConfigurationsOutputWithContext(context.Context) SpringbootappsPropertiesApplicationConfigurationsOutput
}

type SpringbootappsPropertiesApplicationConfigurationsArgs struct {
	// The application config file name.
	Key pulumi.StringInput `pulumi:"key"`
	// The application config file content, only contains config keys.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SpringbootappsPropertiesApplicationConfigurationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootappsPropertiesApplicationConfigurations)(nil)).Elem()
}

func (i SpringbootappsPropertiesApplicationConfigurationsArgs) ToSpringbootappsPropertiesApplicationConfigurationsOutput() SpringbootappsPropertiesApplicationConfigurationsOutput {
	return i.ToSpringbootappsPropertiesApplicationConfigurationsOutputWithContext(context.Background())
}

func (i SpringbootappsPropertiesApplicationConfigurationsArgs) ToSpringbootappsPropertiesApplicationConfigurationsOutputWithContext(ctx context.Context) SpringbootappsPropertiesApplicationConfigurationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootappsPropertiesApplicationConfigurationsOutput)
}

// SpringbootappsPropertiesApplicationConfigurationsArrayInput is an input type that accepts SpringbootappsPropertiesApplicationConfigurationsArray and SpringbootappsPropertiesApplicationConfigurationsArrayOutput values.
// You can construct a concrete instance of `SpringbootappsPropertiesApplicationConfigurationsArrayInput` via:
//
//	SpringbootappsPropertiesApplicationConfigurationsArray{ SpringbootappsPropertiesApplicationConfigurationsArgs{...} }
type SpringbootappsPropertiesApplicationConfigurationsArrayInput interface {
	pulumi.Input

	ToSpringbootappsPropertiesApplicationConfigurationsArrayOutput() SpringbootappsPropertiesApplicationConfigurationsArrayOutput
	ToSpringbootappsPropertiesApplicationConfigurationsArrayOutputWithContext(context.Context) SpringbootappsPropertiesApplicationConfigurationsArrayOutput
}

type SpringbootappsPropertiesApplicationConfigurationsArray []SpringbootappsPropertiesApplicationConfigurationsInput

func (SpringbootappsPropertiesApplicationConfigurationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpringbootappsPropertiesApplicationConfigurations)(nil)).Elem()
}

func (i SpringbootappsPropertiesApplicationConfigurationsArray) ToSpringbootappsPropertiesApplicationConfigurationsArrayOutput() SpringbootappsPropertiesApplicationConfigurationsArrayOutput {
	return i.ToSpringbootappsPropertiesApplicationConfigurationsArrayOutputWithContext(context.Background())
}

func (i SpringbootappsPropertiesApplicationConfigurationsArray) ToSpringbootappsPropertiesApplicationConfigurationsArrayOutputWithContext(ctx context.Context) SpringbootappsPropertiesApplicationConfigurationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootappsPropertiesApplicationConfigurationsArrayOutput)
}

type SpringbootappsPropertiesApplicationConfigurationsOutput struct{ *pulumi.OutputState }

func (SpringbootappsPropertiesApplicationConfigurationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootappsPropertiesApplicationConfigurations)(nil)).Elem()
}

func (o SpringbootappsPropertiesApplicationConfigurationsOutput) ToSpringbootappsPropertiesApplicationConfigurationsOutput() SpringbootappsPropertiesApplicationConfigurationsOutput {
	return o
}

func (o SpringbootappsPropertiesApplicationConfigurationsOutput) ToSpringbootappsPropertiesApplicationConfigurationsOutputWithContext(ctx context.Context) SpringbootappsPropertiesApplicationConfigurationsOutput {
	return o
}

// The application config file name.
func (o SpringbootappsPropertiesApplicationConfigurationsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesApplicationConfigurations) string { return v.Key }).(pulumi.StringOutput)
}

// The application config file content, only contains config keys.
func (o SpringbootappsPropertiesApplicationConfigurationsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesApplicationConfigurations) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SpringbootappsPropertiesApplicationConfigurationsArrayOutput struct{ *pulumi.OutputState }

func (SpringbootappsPropertiesApplicationConfigurationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpringbootappsPropertiesApplicationConfigurations)(nil)).Elem()
}

func (o SpringbootappsPropertiesApplicationConfigurationsArrayOutput) ToSpringbootappsPropertiesApplicationConfigurationsArrayOutput() SpringbootappsPropertiesApplicationConfigurationsArrayOutput {
	return o
}

func (o SpringbootappsPropertiesApplicationConfigurationsArrayOutput) ToSpringbootappsPropertiesApplicationConfigurationsArrayOutputWithContext(ctx context.Context) SpringbootappsPropertiesApplicationConfigurationsArrayOutput {
	return o
}

func (o SpringbootappsPropertiesApplicationConfigurationsArrayOutput) Index(i pulumi.IntInput) SpringbootappsPropertiesApplicationConfigurationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpringbootappsPropertiesApplicationConfigurations {
		return vs[0].([]SpringbootappsPropertiesApplicationConfigurations)[vs[1].(int)]
	}).(SpringbootappsPropertiesApplicationConfigurationsOutput)
}

type SpringbootappsPropertiesInstances struct {
	// The instance count of this app instance
	InstanceCount *int `pulumi:"instanceCount"`
	// The jvm heap memory allocated of this app instance
	JvmMemoryInMB *int `pulumi:"jvmMemoryInMB"`
	// The machine ARM resource Id of this app instance
	MachineArmId string `pulumi:"machineArmId"`
}

// SpringbootappsPropertiesInstancesInput is an input type that accepts SpringbootappsPropertiesInstancesArgs and SpringbootappsPropertiesInstancesOutput values.
// You can construct a concrete instance of `SpringbootappsPropertiesInstancesInput` via:
//
//	SpringbootappsPropertiesInstancesArgs{...}
type SpringbootappsPropertiesInstancesInput interface {
	pulumi.Input

	ToSpringbootappsPropertiesInstancesOutput() SpringbootappsPropertiesInstancesOutput
	ToSpringbootappsPropertiesInstancesOutputWithContext(context.Context) SpringbootappsPropertiesInstancesOutput
}

type SpringbootappsPropertiesInstancesArgs struct {
	// The instance count of this app instance
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// The jvm heap memory allocated of this app instance
	JvmMemoryInMB pulumi.IntPtrInput `pulumi:"jvmMemoryInMB"`
	// The machine ARM resource Id of this app instance
	MachineArmId pulumi.StringInput `pulumi:"machineArmId"`
}

func (SpringbootappsPropertiesInstancesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootappsPropertiesInstances)(nil)).Elem()
}

func (i SpringbootappsPropertiesInstancesArgs) ToSpringbootappsPropertiesInstancesOutput() SpringbootappsPropertiesInstancesOutput {
	return i.ToSpringbootappsPropertiesInstancesOutputWithContext(context.Background())
}

func (i SpringbootappsPropertiesInstancesArgs) ToSpringbootappsPropertiesInstancesOutputWithContext(ctx context.Context) SpringbootappsPropertiesInstancesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootappsPropertiesInstancesOutput)
}

// SpringbootappsPropertiesInstancesArrayInput is an input type that accepts SpringbootappsPropertiesInstancesArray and SpringbootappsPropertiesInstancesArrayOutput values.
// You can construct a concrete instance of `SpringbootappsPropertiesInstancesArrayInput` via:
//
//	SpringbootappsPropertiesInstancesArray{ SpringbootappsPropertiesInstancesArgs{...} }
type SpringbootappsPropertiesInstancesArrayInput interface {
	pulumi.Input

	ToSpringbootappsPropertiesInstancesArrayOutput() SpringbootappsPropertiesInstancesArrayOutput
	ToSpringbootappsPropertiesInstancesArrayOutputWithContext(context.Context) SpringbootappsPropertiesInstancesArrayOutput
}

type SpringbootappsPropertiesInstancesArray []SpringbootappsPropertiesInstancesInput

func (SpringbootappsPropertiesInstancesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpringbootappsPropertiesInstances)(nil)).Elem()
}

func (i SpringbootappsPropertiesInstancesArray) ToSpringbootappsPropertiesInstancesArrayOutput() SpringbootappsPropertiesInstancesArrayOutput {
	return i.ToSpringbootappsPropertiesInstancesArrayOutputWithContext(context.Background())
}

func (i SpringbootappsPropertiesInstancesArray) ToSpringbootappsPropertiesInstancesArrayOutputWithContext(ctx context.Context) SpringbootappsPropertiesInstancesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootappsPropertiesInstancesArrayOutput)
}

type SpringbootappsPropertiesInstancesOutput struct{ *pulumi.OutputState }

func (SpringbootappsPropertiesInstancesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootappsPropertiesInstances)(nil)).Elem()
}

func (o SpringbootappsPropertiesInstancesOutput) ToSpringbootappsPropertiesInstancesOutput() SpringbootappsPropertiesInstancesOutput {
	return o
}

func (o SpringbootappsPropertiesInstancesOutput) ToSpringbootappsPropertiesInstancesOutputWithContext(ctx context.Context) SpringbootappsPropertiesInstancesOutput {
	return o
}

// The instance count of this app instance
func (o SpringbootappsPropertiesInstancesOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesInstances) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The jvm heap memory allocated of this app instance
func (o SpringbootappsPropertiesInstancesOutput) JvmMemoryInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesInstances) *int { return v.JvmMemoryInMB }).(pulumi.IntPtrOutput)
}

// The machine ARM resource Id of this app instance
func (o SpringbootappsPropertiesInstancesOutput) MachineArmId() pulumi.StringOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesInstances) string { return v.MachineArmId }).(pulumi.StringOutput)
}

type SpringbootappsPropertiesInstancesArrayOutput struct{ *pulumi.OutputState }

func (SpringbootappsPropertiesInstancesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpringbootappsPropertiesInstances)(nil)).Elem()
}

func (o SpringbootappsPropertiesInstancesArrayOutput) ToSpringbootappsPropertiesInstancesArrayOutput() SpringbootappsPropertiesInstancesArrayOutput {
	return o
}

func (o SpringbootappsPropertiesInstancesArrayOutput) ToSpringbootappsPropertiesInstancesArrayOutputWithContext(ctx context.Context) SpringbootappsPropertiesInstancesArrayOutput {
	return o
}

func (o SpringbootappsPropertiesInstancesArrayOutput) Index(i pulumi.IntInput) SpringbootappsPropertiesInstancesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpringbootappsPropertiesInstances {
		return vs[0].([]SpringbootappsPropertiesInstances)[vs[1].(int)]
	}).(SpringbootappsPropertiesInstancesOutput)
}

type SpringbootappsPropertiesMiscs struct {
	// The miscs. key.
	Key string `pulumi:"key"`
	// The miscs. value.
	Value *string `pulumi:"value"`
}

// SpringbootappsPropertiesMiscsInput is an input type that accepts SpringbootappsPropertiesMiscsArgs and SpringbootappsPropertiesMiscsOutput values.
// You can construct a concrete instance of `SpringbootappsPropertiesMiscsInput` via:
//
//	SpringbootappsPropertiesMiscsArgs{...}
type SpringbootappsPropertiesMiscsInput interface {
	pulumi.Input

	ToSpringbootappsPropertiesMiscsOutput() SpringbootappsPropertiesMiscsOutput
	ToSpringbootappsPropertiesMiscsOutputWithContext(context.Context) SpringbootappsPropertiesMiscsOutput
}

type SpringbootappsPropertiesMiscsArgs struct {
	// The miscs. key.
	Key pulumi.StringInput `pulumi:"key"`
	// The miscs. value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SpringbootappsPropertiesMiscsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootappsPropertiesMiscs)(nil)).Elem()
}

func (i SpringbootappsPropertiesMiscsArgs) ToSpringbootappsPropertiesMiscsOutput() SpringbootappsPropertiesMiscsOutput {
	return i.ToSpringbootappsPropertiesMiscsOutputWithContext(context.Background())
}

func (i SpringbootappsPropertiesMiscsArgs) ToSpringbootappsPropertiesMiscsOutputWithContext(ctx context.Context) SpringbootappsPropertiesMiscsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootappsPropertiesMiscsOutput)
}

// SpringbootappsPropertiesMiscsArrayInput is an input type that accepts SpringbootappsPropertiesMiscsArray and SpringbootappsPropertiesMiscsArrayOutput values.
// You can construct a concrete instance of `SpringbootappsPropertiesMiscsArrayInput` via:
//
//	SpringbootappsPropertiesMiscsArray{ SpringbootappsPropertiesMiscsArgs{...} }
type SpringbootappsPropertiesMiscsArrayInput interface {
	pulumi.Input

	ToSpringbootappsPropertiesMiscsArrayOutput() SpringbootappsPropertiesMiscsArrayOutput
	ToSpringbootappsPropertiesMiscsArrayOutputWithContext(context.Context) SpringbootappsPropertiesMiscsArrayOutput
}

type SpringbootappsPropertiesMiscsArray []SpringbootappsPropertiesMiscsInput

func (SpringbootappsPropertiesMiscsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpringbootappsPropertiesMiscs)(nil)).Elem()
}

func (i SpringbootappsPropertiesMiscsArray) ToSpringbootappsPropertiesMiscsArrayOutput() SpringbootappsPropertiesMiscsArrayOutput {
	return i.ToSpringbootappsPropertiesMiscsArrayOutputWithContext(context.Background())
}

func (i SpringbootappsPropertiesMiscsArray) ToSpringbootappsPropertiesMiscsArrayOutputWithContext(ctx context.Context) SpringbootappsPropertiesMiscsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootappsPropertiesMiscsArrayOutput)
}

type SpringbootappsPropertiesMiscsOutput struct{ *pulumi.OutputState }

func (SpringbootappsPropertiesMiscsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootappsPropertiesMiscs)(nil)).Elem()
}

func (o SpringbootappsPropertiesMiscsOutput) ToSpringbootappsPropertiesMiscsOutput() SpringbootappsPropertiesMiscsOutput {
	return o
}

func (o SpringbootappsPropertiesMiscsOutput) ToSpringbootappsPropertiesMiscsOutputWithContext(ctx context.Context) SpringbootappsPropertiesMiscsOutput {
	return o
}

// The miscs. key.
func (o SpringbootappsPropertiesMiscsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesMiscs) string { return v.Key }).(pulumi.StringOutput)
}

// The miscs. value.
func (o SpringbootappsPropertiesMiscsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesMiscs) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SpringbootappsPropertiesMiscsArrayOutput struct{ *pulumi.OutputState }

func (SpringbootappsPropertiesMiscsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpringbootappsPropertiesMiscs)(nil)).Elem()
}

func (o SpringbootappsPropertiesMiscsArrayOutput) ToSpringbootappsPropertiesMiscsArrayOutput() SpringbootappsPropertiesMiscsArrayOutput {
	return o
}

func (o SpringbootappsPropertiesMiscsArrayOutput) ToSpringbootappsPropertiesMiscsArrayOutputWithContext(ctx context.Context) SpringbootappsPropertiesMiscsArrayOutput {
	return o
}

func (o SpringbootappsPropertiesMiscsArrayOutput) Index(i pulumi.IntInput) SpringbootappsPropertiesMiscsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpringbootappsPropertiesMiscs {
		return vs[0].([]SpringbootappsPropertiesMiscs)[vs[1].(int)]
	}).(SpringbootappsPropertiesMiscsOutput)
}

// The springbootapps resource definition.
type SpringbootappsPropertiesResponse struct {
	// The name of SpringBootApp.
	AppName *string `pulumi:"appName"`
	// The application port.
	AppPort *int `pulumi:"appPort"`
	// The application type, whether it is a SpringBoot app.
	AppType *string `pulumi:"appType"`
	// The application configuration file list.
	ApplicationConfigurations []SpringbootappsPropertiesResponseApplicationConfigurations `pulumi:"applicationConfigurations"`
	// The artifact name of SpringBootApp.
	ArtifactName *string `pulumi:"artifactName"`
	// The application binding port list.
	BindingPorts []int `pulumi:"bindingPorts"`
	// The jdk version in build.
	BuildJdkVersion *string `pulumi:"buildJdkVersion"`
	// The certificate file list.
	Certificates []string `pulumi:"certificates"`
	// The checksum of jar file.
	Checksum *string `pulumi:"checksum"`
	// The connection string list.
	ConnectionStrings []string `pulumi:"connectionStrings"`
	// The dependency list.
	Dependencies []string `pulumi:"dependencies"`
	// The environment variable list.
	Environments []string `pulumi:"environments"`
	// The list of errors.
	Errors []ErrorResponse `pulumi:"errors"`
	// The total instance count the app deployed.
	InstanceCount *int `pulumi:"instanceCount"`
	// The breakdown info for app instances on all the servers
	Instances []SpringbootappsPropertiesResponseInstances `pulumi:"instances"`
	// The jar file location on the server.
	JarFileLocation *string `pulumi:"jarFileLocation"`
	// The jvm heap memory allocated.
	JvmMemoryInMB *int `pulumi:"jvmMemoryInMB"`
	// The jvm options.
	JvmOptions []string `pulumi:"jvmOptions"`
	// Resource labels
	Labels map[string]string `pulumi:"labels"`
	// Time when this springbootapps jar file was last modified.
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// Time when this springbootapps instance was last refreshed.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// The machine ARM id list the app belongs to.
	MachineArmIds []string `pulumi:"machineArmIds"`
	// The other types of date collected.
	Miscs []SpringbootappsPropertiesResponseMiscs `pulumi:"miscs"`
	// The resource provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// The jdk version installed on server
	RuntimeJdkVersion *string `pulumi:"runtimeJdkVersion"`
	// The server list the app installed
	Servers []string `pulumi:"servers"`
	// The spring boot version.
	SpringBootVersion *string `pulumi:"springBootVersion"`
	// The static content location list.
	StaticContentLocations []string `pulumi:"staticContentLocations"`
}

// The springbootapps resource definition.
type SpringbootappsPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SpringbootappsPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootappsPropertiesResponse)(nil)).Elem()
}

func (o SpringbootappsPropertiesResponseOutput) ToSpringbootappsPropertiesResponseOutput() SpringbootappsPropertiesResponseOutput {
	return o
}

func (o SpringbootappsPropertiesResponseOutput) ToSpringbootappsPropertiesResponseOutputWithContext(ctx context.Context) SpringbootappsPropertiesResponseOutput {
	return o
}

// The name of SpringBootApp.
func (o SpringbootappsPropertiesResponseOutput) AppName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) *string { return v.AppName }).(pulumi.StringPtrOutput)
}

// The application port.
func (o SpringbootappsPropertiesResponseOutput) AppPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) *int { return v.AppPort }).(pulumi.IntPtrOutput)
}

// The application type, whether it is a SpringBoot app.
func (o SpringbootappsPropertiesResponseOutput) AppType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) *string { return v.AppType }).(pulumi.StringPtrOutput)
}

// The application configuration file list.
func (o SpringbootappsPropertiesResponseOutput) ApplicationConfigurations() SpringbootappsPropertiesResponseApplicationConfigurationsArrayOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) []SpringbootappsPropertiesResponseApplicationConfigurations {
		return v.ApplicationConfigurations
	}).(SpringbootappsPropertiesResponseApplicationConfigurationsArrayOutput)
}

// The artifact name of SpringBootApp.
func (o SpringbootappsPropertiesResponseOutput) ArtifactName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) *string { return v.ArtifactName }).(pulumi.StringPtrOutput)
}

// The application binding port list.
func (o SpringbootappsPropertiesResponseOutput) BindingPorts() pulumi.IntArrayOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) []int { return v.BindingPorts }).(pulumi.IntArrayOutput)
}

// The jdk version in build.
func (o SpringbootappsPropertiesResponseOutput) BuildJdkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) *string { return v.BuildJdkVersion }).(pulumi.StringPtrOutput)
}

// The certificate file list.
func (o SpringbootappsPropertiesResponseOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) []string { return v.Certificates }).(pulumi.StringArrayOutput)
}

// The checksum of jar file.
func (o SpringbootappsPropertiesResponseOutput) Checksum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) *string { return v.Checksum }).(pulumi.StringPtrOutput)
}

// The connection string list.
func (o SpringbootappsPropertiesResponseOutput) ConnectionStrings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) []string { return v.ConnectionStrings }).(pulumi.StringArrayOutput)
}

// The dependency list.
func (o SpringbootappsPropertiesResponseOutput) Dependencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) []string { return v.Dependencies }).(pulumi.StringArrayOutput)
}

// The environment variable list.
func (o SpringbootappsPropertiesResponseOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) []string { return v.Environments }).(pulumi.StringArrayOutput)
}

// The list of errors.
func (o SpringbootappsPropertiesResponseOutput) Errors() ErrorResponseArrayOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) []ErrorResponse { return v.Errors }).(ErrorResponseArrayOutput)
}

// The total instance count the app deployed.
func (o SpringbootappsPropertiesResponseOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The breakdown info for app instances on all the servers
func (o SpringbootappsPropertiesResponseOutput) Instances() SpringbootappsPropertiesResponseInstancesArrayOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) []SpringbootappsPropertiesResponseInstances {
		return v.Instances
	}).(SpringbootappsPropertiesResponseInstancesArrayOutput)
}

// The jar file location on the server.
func (o SpringbootappsPropertiesResponseOutput) JarFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) *string { return v.JarFileLocation }).(pulumi.StringPtrOutput)
}

// The jvm heap memory allocated.
func (o SpringbootappsPropertiesResponseOutput) JvmMemoryInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) *int { return v.JvmMemoryInMB }).(pulumi.IntPtrOutput)
}

// The jvm options.
func (o SpringbootappsPropertiesResponseOutput) JvmOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) []string { return v.JvmOptions }).(pulumi.StringArrayOutput)
}

// Resource labels
func (o SpringbootappsPropertiesResponseOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Time when this springbootapps jar file was last modified.
func (o SpringbootappsPropertiesResponseOutput) LastModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) *string { return v.LastModifiedTime }).(pulumi.StringPtrOutput)
}

// Time when this springbootapps instance was last refreshed.
func (o SpringbootappsPropertiesResponseOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// The machine ARM id list the app belongs to.
func (o SpringbootappsPropertiesResponseOutput) MachineArmIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) []string { return v.MachineArmIds }).(pulumi.StringArrayOutput)
}

// The other types of date collected.
func (o SpringbootappsPropertiesResponseOutput) Miscs() SpringbootappsPropertiesResponseMiscsArrayOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) []SpringbootappsPropertiesResponseMiscs { return v.Miscs }).(SpringbootappsPropertiesResponseMiscsArrayOutput)
}

// The resource provisioning state.
func (o SpringbootappsPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The jdk version installed on server
func (o SpringbootappsPropertiesResponseOutput) RuntimeJdkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) *string { return v.RuntimeJdkVersion }).(pulumi.StringPtrOutput)
}

// The server list the app installed
func (o SpringbootappsPropertiesResponseOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) []string { return v.Servers }).(pulumi.StringArrayOutput)
}

// The spring boot version.
func (o SpringbootappsPropertiesResponseOutput) SpringBootVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) *string { return v.SpringBootVersion }).(pulumi.StringPtrOutput)
}

// The static content location list.
func (o SpringbootappsPropertiesResponseOutput) StaticContentLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponse) []string { return v.StaticContentLocations }).(pulumi.StringArrayOutput)
}

type SpringbootappsPropertiesResponseApplicationConfigurations struct {
	// The application config file name.
	Key string `pulumi:"key"`
	// The application config file content, only contains config keys.
	Value *string `pulumi:"value"`
}

type SpringbootappsPropertiesResponseApplicationConfigurationsOutput struct{ *pulumi.OutputState }

func (SpringbootappsPropertiesResponseApplicationConfigurationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootappsPropertiesResponseApplicationConfigurations)(nil)).Elem()
}

func (o SpringbootappsPropertiesResponseApplicationConfigurationsOutput) ToSpringbootappsPropertiesResponseApplicationConfigurationsOutput() SpringbootappsPropertiesResponseApplicationConfigurationsOutput {
	return o
}

func (o SpringbootappsPropertiesResponseApplicationConfigurationsOutput) ToSpringbootappsPropertiesResponseApplicationConfigurationsOutputWithContext(ctx context.Context) SpringbootappsPropertiesResponseApplicationConfigurationsOutput {
	return o
}

// The application config file name.
func (o SpringbootappsPropertiesResponseApplicationConfigurationsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponseApplicationConfigurations) string { return v.Key }).(pulumi.StringOutput)
}

// The application config file content, only contains config keys.
func (o SpringbootappsPropertiesResponseApplicationConfigurationsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponseApplicationConfigurations) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SpringbootappsPropertiesResponseApplicationConfigurationsArrayOutput struct{ *pulumi.OutputState }

func (SpringbootappsPropertiesResponseApplicationConfigurationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpringbootappsPropertiesResponseApplicationConfigurations)(nil)).Elem()
}

func (o SpringbootappsPropertiesResponseApplicationConfigurationsArrayOutput) ToSpringbootappsPropertiesResponseApplicationConfigurationsArrayOutput() SpringbootappsPropertiesResponseApplicationConfigurationsArrayOutput {
	return o
}

func (o SpringbootappsPropertiesResponseApplicationConfigurationsArrayOutput) ToSpringbootappsPropertiesResponseApplicationConfigurationsArrayOutputWithContext(ctx context.Context) SpringbootappsPropertiesResponseApplicationConfigurationsArrayOutput {
	return o
}

func (o SpringbootappsPropertiesResponseApplicationConfigurationsArrayOutput) Index(i pulumi.IntInput) SpringbootappsPropertiesResponseApplicationConfigurationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpringbootappsPropertiesResponseApplicationConfigurations {
		return vs[0].([]SpringbootappsPropertiesResponseApplicationConfigurations)[vs[1].(int)]
	}).(SpringbootappsPropertiesResponseApplicationConfigurationsOutput)
}

type SpringbootappsPropertiesResponseInstances struct {
	// The instance count of this app instance
	InstanceCount *int `pulumi:"instanceCount"`
	// The jvm heap memory allocated of this app instance
	JvmMemoryInMB *int `pulumi:"jvmMemoryInMB"`
	// The machine ARM resource Id of this app instance
	MachineArmId string `pulumi:"machineArmId"`
}

type SpringbootappsPropertiesResponseInstancesOutput struct{ *pulumi.OutputState }

func (SpringbootappsPropertiesResponseInstancesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootappsPropertiesResponseInstances)(nil)).Elem()
}

func (o SpringbootappsPropertiesResponseInstancesOutput) ToSpringbootappsPropertiesResponseInstancesOutput() SpringbootappsPropertiesResponseInstancesOutput {
	return o
}

func (o SpringbootappsPropertiesResponseInstancesOutput) ToSpringbootappsPropertiesResponseInstancesOutputWithContext(ctx context.Context) SpringbootappsPropertiesResponseInstancesOutput {
	return o
}

// The instance count of this app instance
func (o SpringbootappsPropertiesResponseInstancesOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponseInstances) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The jvm heap memory allocated of this app instance
func (o SpringbootappsPropertiesResponseInstancesOutput) JvmMemoryInMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponseInstances) *int { return v.JvmMemoryInMB }).(pulumi.IntPtrOutput)
}

// The machine ARM resource Id of this app instance
func (o SpringbootappsPropertiesResponseInstancesOutput) MachineArmId() pulumi.StringOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponseInstances) string { return v.MachineArmId }).(pulumi.StringOutput)
}

type SpringbootappsPropertiesResponseInstancesArrayOutput struct{ *pulumi.OutputState }

func (SpringbootappsPropertiesResponseInstancesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpringbootappsPropertiesResponseInstances)(nil)).Elem()
}

func (o SpringbootappsPropertiesResponseInstancesArrayOutput) ToSpringbootappsPropertiesResponseInstancesArrayOutput() SpringbootappsPropertiesResponseInstancesArrayOutput {
	return o
}

func (o SpringbootappsPropertiesResponseInstancesArrayOutput) ToSpringbootappsPropertiesResponseInstancesArrayOutputWithContext(ctx context.Context) SpringbootappsPropertiesResponseInstancesArrayOutput {
	return o
}

func (o SpringbootappsPropertiesResponseInstancesArrayOutput) Index(i pulumi.IntInput) SpringbootappsPropertiesResponseInstancesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpringbootappsPropertiesResponseInstances {
		return vs[0].([]SpringbootappsPropertiesResponseInstances)[vs[1].(int)]
	}).(SpringbootappsPropertiesResponseInstancesOutput)
}

type SpringbootappsPropertiesResponseMiscs struct {
	// The miscs. key.
	Key string `pulumi:"key"`
	// The miscs. value.
	Value *string `pulumi:"value"`
}

type SpringbootappsPropertiesResponseMiscsOutput struct{ *pulumi.OutputState }

func (SpringbootappsPropertiesResponseMiscsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootappsPropertiesResponseMiscs)(nil)).Elem()
}

func (o SpringbootappsPropertiesResponseMiscsOutput) ToSpringbootappsPropertiesResponseMiscsOutput() SpringbootappsPropertiesResponseMiscsOutput {
	return o
}

func (o SpringbootappsPropertiesResponseMiscsOutput) ToSpringbootappsPropertiesResponseMiscsOutputWithContext(ctx context.Context) SpringbootappsPropertiesResponseMiscsOutput {
	return o
}

// The miscs. key.
func (o SpringbootappsPropertiesResponseMiscsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponseMiscs) string { return v.Key }).(pulumi.StringOutput)
}

// The miscs. value.
func (o SpringbootappsPropertiesResponseMiscsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootappsPropertiesResponseMiscs) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SpringbootappsPropertiesResponseMiscsArrayOutput struct{ *pulumi.OutputState }

func (SpringbootappsPropertiesResponseMiscsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpringbootappsPropertiesResponseMiscs)(nil)).Elem()
}

func (o SpringbootappsPropertiesResponseMiscsArrayOutput) ToSpringbootappsPropertiesResponseMiscsArrayOutput() SpringbootappsPropertiesResponseMiscsArrayOutput {
	return o
}

func (o SpringbootappsPropertiesResponseMiscsArrayOutput) ToSpringbootappsPropertiesResponseMiscsArrayOutputWithContext(ctx context.Context) SpringbootappsPropertiesResponseMiscsArrayOutput {
	return o
}

func (o SpringbootappsPropertiesResponseMiscsArrayOutput) Index(i pulumi.IntInput) SpringbootappsPropertiesResponseMiscsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpringbootappsPropertiesResponseMiscs {
		return vs[0].([]SpringbootappsPropertiesResponseMiscs)[vs[1].(int)]
	}).(SpringbootappsPropertiesResponseMiscsOutput)
}

// The springbootservers resource definition.
type SpringbootserversProperties struct {
	// The list of errors.
	Errors []Error `pulumi:"errors"`
	// The alternative FQDN or IP addresses to discover for this server
	FqdnAndIpAddressList []string `pulumi:"fqdnAndIpAddressList"`
	// The machine Id from ARM
	MachineArmId *string `pulumi:"machineArmId"`
	// Target server port for remote login
	Port *int `pulumi:"port"`
	// The resource provisioning state.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Server is the target server name or ip address to discover of SpringBootServer.
	Server string `pulumi:"server"`
	// The total number of spring boot apps been discovered
	SpringBootApps *int `pulumi:"springBootApps"`
	// The total number of apps been discovered
	TotalApps *int `pulumi:"totalApps"`
}

// SpringbootserversPropertiesInput is an input type that accepts SpringbootserversPropertiesArgs and SpringbootserversPropertiesOutput values.
// You can construct a concrete instance of `SpringbootserversPropertiesInput` via:
//
//	SpringbootserversPropertiesArgs{...}
type SpringbootserversPropertiesInput interface {
	pulumi.Input

	ToSpringbootserversPropertiesOutput() SpringbootserversPropertiesOutput
	ToSpringbootserversPropertiesOutputWithContext(context.Context) SpringbootserversPropertiesOutput
}

// The springbootservers resource definition.
type SpringbootserversPropertiesArgs struct {
	// The list of errors.
	Errors ErrorArrayInput `pulumi:"errors"`
	// The alternative FQDN or IP addresses to discover for this server
	FqdnAndIpAddressList pulumi.StringArrayInput `pulumi:"fqdnAndIpAddressList"`
	// The machine Id from ARM
	MachineArmId pulumi.StringPtrInput `pulumi:"machineArmId"`
	// Target server port for remote login
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The resource provisioning state.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Server is the target server name or ip address to discover of SpringBootServer.
	Server pulumi.StringInput `pulumi:"server"`
	// The total number of spring boot apps been discovered
	SpringBootApps pulumi.IntPtrInput `pulumi:"springBootApps"`
	// The total number of apps been discovered
	TotalApps pulumi.IntPtrInput `pulumi:"totalApps"`
}

func (SpringbootserversPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootserversProperties)(nil)).Elem()
}

func (i SpringbootserversPropertiesArgs) ToSpringbootserversPropertiesOutput() SpringbootserversPropertiesOutput {
	return i.ToSpringbootserversPropertiesOutputWithContext(context.Background())
}

func (i SpringbootserversPropertiesArgs) ToSpringbootserversPropertiesOutputWithContext(ctx context.Context) SpringbootserversPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootserversPropertiesOutput)
}

func (i SpringbootserversPropertiesArgs) ToSpringbootserversPropertiesPtrOutput() SpringbootserversPropertiesPtrOutput {
	return i.ToSpringbootserversPropertiesPtrOutputWithContext(context.Background())
}

func (i SpringbootserversPropertiesArgs) ToSpringbootserversPropertiesPtrOutputWithContext(ctx context.Context) SpringbootserversPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootserversPropertiesOutput).ToSpringbootserversPropertiesPtrOutputWithContext(ctx)
}

// SpringbootserversPropertiesPtrInput is an input type that accepts SpringbootserversPropertiesArgs, SpringbootserversPropertiesPtr and SpringbootserversPropertiesPtrOutput values.
// You can construct a concrete instance of `SpringbootserversPropertiesPtrInput` via:
//
//	        SpringbootserversPropertiesArgs{...}
//
//	or:
//
//	        nil
type SpringbootserversPropertiesPtrInput interface {
	pulumi.Input

	ToSpringbootserversPropertiesPtrOutput() SpringbootserversPropertiesPtrOutput
	ToSpringbootserversPropertiesPtrOutputWithContext(context.Context) SpringbootserversPropertiesPtrOutput
}

type springbootserversPropertiesPtrType SpringbootserversPropertiesArgs

func SpringbootserversPropertiesPtr(v *SpringbootserversPropertiesArgs) SpringbootserversPropertiesPtrInput {
	return (*springbootserversPropertiesPtrType)(v)
}

func (*springbootserversPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringbootserversProperties)(nil)).Elem()
}

func (i *springbootserversPropertiesPtrType) ToSpringbootserversPropertiesPtrOutput() SpringbootserversPropertiesPtrOutput {
	return i.ToSpringbootserversPropertiesPtrOutputWithContext(context.Background())
}

func (i *springbootserversPropertiesPtrType) ToSpringbootserversPropertiesPtrOutputWithContext(ctx context.Context) SpringbootserversPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootserversPropertiesPtrOutput)
}

// The springbootservers resource definition.
type SpringbootserversPropertiesOutput struct{ *pulumi.OutputState }

func (SpringbootserversPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootserversProperties)(nil)).Elem()
}

func (o SpringbootserversPropertiesOutput) ToSpringbootserversPropertiesOutput() SpringbootserversPropertiesOutput {
	return o
}

func (o SpringbootserversPropertiesOutput) ToSpringbootserversPropertiesOutputWithContext(ctx context.Context) SpringbootserversPropertiesOutput {
	return o
}

func (o SpringbootserversPropertiesOutput) ToSpringbootserversPropertiesPtrOutput() SpringbootserversPropertiesPtrOutput {
	return o.ToSpringbootserversPropertiesPtrOutputWithContext(context.Background())
}

func (o SpringbootserversPropertiesOutput) ToSpringbootserversPropertiesPtrOutputWithContext(ctx context.Context) SpringbootserversPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpringbootserversProperties) *SpringbootserversProperties {
		return &v
	}).(SpringbootserversPropertiesPtrOutput)
}

// The list of errors.
func (o SpringbootserversPropertiesOutput) Errors() ErrorArrayOutput {
	return o.ApplyT(func(v SpringbootserversProperties) []Error { return v.Errors }).(ErrorArrayOutput)
}

// The alternative FQDN or IP addresses to discover for this server
func (o SpringbootserversPropertiesOutput) FqdnAndIpAddressList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootserversProperties) []string { return v.FqdnAndIpAddressList }).(pulumi.StringArrayOutput)
}

// The machine Id from ARM
func (o SpringbootserversPropertiesOutput) MachineArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootserversProperties) *string { return v.MachineArmId }).(pulumi.StringPtrOutput)
}

// Target server port for remote login
func (o SpringbootserversPropertiesOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpringbootserversProperties) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The resource provisioning state.
func (o SpringbootserversPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootserversProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Server is the target server name or ip address to discover of SpringBootServer.
func (o SpringbootserversPropertiesOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v SpringbootserversProperties) string { return v.Server }).(pulumi.StringOutput)
}

// The total number of spring boot apps been discovered
func (o SpringbootserversPropertiesOutput) SpringBootApps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpringbootserversProperties) *int { return v.SpringBootApps }).(pulumi.IntPtrOutput)
}

// The total number of apps been discovered
func (o SpringbootserversPropertiesOutput) TotalApps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpringbootserversProperties) *int { return v.TotalApps }).(pulumi.IntPtrOutput)
}

type SpringbootserversPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SpringbootserversPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringbootserversProperties)(nil)).Elem()
}

func (o SpringbootserversPropertiesPtrOutput) ToSpringbootserversPropertiesPtrOutput() SpringbootserversPropertiesPtrOutput {
	return o
}

func (o SpringbootserversPropertiesPtrOutput) ToSpringbootserversPropertiesPtrOutputWithContext(ctx context.Context) SpringbootserversPropertiesPtrOutput {
	return o
}

func (o SpringbootserversPropertiesPtrOutput) Elem() SpringbootserversPropertiesOutput {
	return o.ApplyT(func(v *SpringbootserversProperties) SpringbootserversProperties {
		if v != nil {
			return *v
		}
		var ret SpringbootserversProperties
		return ret
	}).(SpringbootserversPropertiesOutput)
}

// The list of errors.
func (o SpringbootserversPropertiesPtrOutput) Errors() ErrorArrayOutput {
	return o.ApplyT(func(v *SpringbootserversProperties) []Error {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(ErrorArrayOutput)
}

// The alternative FQDN or IP addresses to discover for this server
func (o SpringbootserversPropertiesPtrOutput) FqdnAndIpAddressList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpringbootserversProperties) []string {
		if v == nil {
			return nil
		}
		return v.FqdnAndIpAddressList
	}).(pulumi.StringArrayOutput)
}

// The machine Id from ARM
func (o SpringbootserversPropertiesPtrOutput) MachineArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootserversProperties) *string {
		if v == nil {
			return nil
		}
		return v.MachineArmId
	}).(pulumi.StringPtrOutput)
}

// Target server port for remote login
func (o SpringbootserversPropertiesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpringbootserversProperties) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The resource provisioning state.
func (o SpringbootserversPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootserversProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Server is the target server name or ip address to discover of SpringBootServer.
func (o SpringbootserversPropertiesPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootserversProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// The total number of spring boot apps been discovered
func (o SpringbootserversPropertiesPtrOutput) SpringBootApps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpringbootserversProperties) *int {
		if v == nil {
			return nil
		}
		return v.SpringBootApps
	}).(pulumi.IntPtrOutput)
}

// The total number of apps been discovered
func (o SpringbootserversPropertiesPtrOutput) TotalApps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpringbootserversProperties) *int {
		if v == nil {
			return nil
		}
		return v.TotalApps
	}).(pulumi.IntPtrOutput)
}

// The springbootservers resource definition.
type SpringbootserversPropertiesResponse struct {
	// The list of errors.
	Errors []ErrorResponse `pulumi:"errors"`
	// The alternative FQDN or IP addresses to discover for this server
	FqdnAndIpAddressList []string `pulumi:"fqdnAndIpAddressList"`
	// The machine Id from ARM
	MachineArmId *string `pulumi:"machineArmId"`
	// Target server port for remote login
	Port *int `pulumi:"port"`
	// The resource provisioning state.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Server is the target server name or ip address to discover of SpringBootServer.
	Server string `pulumi:"server"`
	// The total number of spring boot apps been discovered
	SpringBootApps *int `pulumi:"springBootApps"`
	// The total number of apps been discovered
	TotalApps *int `pulumi:"totalApps"`
}

// The springbootservers resource definition.
type SpringbootserversPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SpringbootserversPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootserversPropertiesResponse)(nil)).Elem()
}

func (o SpringbootserversPropertiesResponseOutput) ToSpringbootserversPropertiesResponseOutput() SpringbootserversPropertiesResponseOutput {
	return o
}

func (o SpringbootserversPropertiesResponseOutput) ToSpringbootserversPropertiesResponseOutputWithContext(ctx context.Context) SpringbootserversPropertiesResponseOutput {
	return o
}

// The list of errors.
func (o SpringbootserversPropertiesResponseOutput) Errors() ErrorResponseArrayOutput {
	return o.ApplyT(func(v SpringbootserversPropertiesResponse) []ErrorResponse { return v.Errors }).(ErrorResponseArrayOutput)
}

// The alternative FQDN or IP addresses to discover for this server
func (o SpringbootserversPropertiesResponseOutput) FqdnAndIpAddressList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpringbootserversPropertiesResponse) []string { return v.FqdnAndIpAddressList }).(pulumi.StringArrayOutput)
}

// The machine Id from ARM
func (o SpringbootserversPropertiesResponseOutput) MachineArmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootserversPropertiesResponse) *string { return v.MachineArmId }).(pulumi.StringPtrOutput)
}

// Target server port for remote login
func (o SpringbootserversPropertiesResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpringbootserversPropertiesResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The resource provisioning state.
func (o SpringbootserversPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootserversPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Server is the target server name or ip address to discover of SpringBootServer.
func (o SpringbootserversPropertiesResponseOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v SpringbootserversPropertiesResponse) string { return v.Server }).(pulumi.StringOutput)
}

// The total number of spring boot apps been discovered
func (o SpringbootserversPropertiesResponseOutput) SpringBootApps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpringbootserversPropertiesResponse) *int { return v.SpringBootApps }).(pulumi.IntPtrOutput)
}

// The total number of apps been discovered
func (o SpringbootserversPropertiesResponseOutput) TotalApps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpringbootserversPropertiesResponse) *int { return v.TotalApps }).(pulumi.IntPtrOutput)
}

// The extended location definition.
type SpringbootsitesModelExtendedLocation struct {
	// The extended location name.
	Name *string `pulumi:"name"`
	// The extended location type.
	Type *string `pulumi:"type"`
}

// SpringbootsitesModelExtendedLocationInput is an input type that accepts SpringbootsitesModelExtendedLocationArgs and SpringbootsitesModelExtendedLocationOutput values.
// You can construct a concrete instance of `SpringbootsitesModelExtendedLocationInput` via:
//
//	SpringbootsitesModelExtendedLocationArgs{...}
type SpringbootsitesModelExtendedLocationInput interface {
	pulumi.Input

	ToSpringbootsitesModelExtendedLocationOutput() SpringbootsitesModelExtendedLocationOutput
	ToSpringbootsitesModelExtendedLocationOutputWithContext(context.Context) SpringbootsitesModelExtendedLocationOutput
}

// The extended location definition.
type SpringbootsitesModelExtendedLocationArgs struct {
	// The extended location name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The extended location type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SpringbootsitesModelExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootsitesModelExtendedLocation)(nil)).Elem()
}

func (i SpringbootsitesModelExtendedLocationArgs) ToSpringbootsitesModelExtendedLocationOutput() SpringbootsitesModelExtendedLocationOutput {
	return i.ToSpringbootsitesModelExtendedLocationOutputWithContext(context.Background())
}

func (i SpringbootsitesModelExtendedLocationArgs) ToSpringbootsitesModelExtendedLocationOutputWithContext(ctx context.Context) SpringbootsitesModelExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootsitesModelExtendedLocationOutput)
}

func (i SpringbootsitesModelExtendedLocationArgs) ToSpringbootsitesModelExtendedLocationPtrOutput() SpringbootsitesModelExtendedLocationPtrOutput {
	return i.ToSpringbootsitesModelExtendedLocationPtrOutputWithContext(context.Background())
}

func (i SpringbootsitesModelExtendedLocationArgs) ToSpringbootsitesModelExtendedLocationPtrOutputWithContext(ctx context.Context) SpringbootsitesModelExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootsitesModelExtendedLocationOutput).ToSpringbootsitesModelExtendedLocationPtrOutputWithContext(ctx)
}

// SpringbootsitesModelExtendedLocationPtrInput is an input type that accepts SpringbootsitesModelExtendedLocationArgs, SpringbootsitesModelExtendedLocationPtr and SpringbootsitesModelExtendedLocationPtrOutput values.
// You can construct a concrete instance of `SpringbootsitesModelExtendedLocationPtrInput` via:
//
//	        SpringbootsitesModelExtendedLocationArgs{...}
//
//	or:
//
//	        nil
type SpringbootsitesModelExtendedLocationPtrInput interface {
	pulumi.Input

	ToSpringbootsitesModelExtendedLocationPtrOutput() SpringbootsitesModelExtendedLocationPtrOutput
	ToSpringbootsitesModelExtendedLocationPtrOutputWithContext(context.Context) SpringbootsitesModelExtendedLocationPtrOutput
}

type springbootsitesModelExtendedLocationPtrType SpringbootsitesModelExtendedLocationArgs

func SpringbootsitesModelExtendedLocationPtr(v *SpringbootsitesModelExtendedLocationArgs) SpringbootsitesModelExtendedLocationPtrInput {
	return (*springbootsitesModelExtendedLocationPtrType)(v)
}

func (*springbootsitesModelExtendedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringbootsitesModelExtendedLocation)(nil)).Elem()
}

func (i *springbootsitesModelExtendedLocationPtrType) ToSpringbootsitesModelExtendedLocationPtrOutput() SpringbootsitesModelExtendedLocationPtrOutput {
	return i.ToSpringbootsitesModelExtendedLocationPtrOutputWithContext(context.Background())
}

func (i *springbootsitesModelExtendedLocationPtrType) ToSpringbootsitesModelExtendedLocationPtrOutputWithContext(ctx context.Context) SpringbootsitesModelExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootsitesModelExtendedLocationPtrOutput)
}

// The extended location definition.
type SpringbootsitesModelExtendedLocationOutput struct{ *pulumi.OutputState }

func (SpringbootsitesModelExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootsitesModelExtendedLocation)(nil)).Elem()
}

func (o SpringbootsitesModelExtendedLocationOutput) ToSpringbootsitesModelExtendedLocationOutput() SpringbootsitesModelExtendedLocationOutput {
	return o
}

func (o SpringbootsitesModelExtendedLocationOutput) ToSpringbootsitesModelExtendedLocationOutputWithContext(ctx context.Context) SpringbootsitesModelExtendedLocationOutput {
	return o
}

func (o SpringbootsitesModelExtendedLocationOutput) ToSpringbootsitesModelExtendedLocationPtrOutput() SpringbootsitesModelExtendedLocationPtrOutput {
	return o.ToSpringbootsitesModelExtendedLocationPtrOutputWithContext(context.Background())
}

func (o SpringbootsitesModelExtendedLocationOutput) ToSpringbootsitesModelExtendedLocationPtrOutputWithContext(ctx context.Context) SpringbootsitesModelExtendedLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpringbootsitesModelExtendedLocation) *SpringbootsitesModelExtendedLocation {
		return &v
	}).(SpringbootsitesModelExtendedLocationPtrOutput)
}

// The extended location name.
func (o SpringbootsitesModelExtendedLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootsitesModelExtendedLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o SpringbootsitesModelExtendedLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootsitesModelExtendedLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SpringbootsitesModelExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (SpringbootsitesModelExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringbootsitesModelExtendedLocation)(nil)).Elem()
}

func (o SpringbootsitesModelExtendedLocationPtrOutput) ToSpringbootsitesModelExtendedLocationPtrOutput() SpringbootsitesModelExtendedLocationPtrOutput {
	return o
}

func (o SpringbootsitesModelExtendedLocationPtrOutput) ToSpringbootsitesModelExtendedLocationPtrOutputWithContext(ctx context.Context) SpringbootsitesModelExtendedLocationPtrOutput {
	return o
}

func (o SpringbootsitesModelExtendedLocationPtrOutput) Elem() SpringbootsitesModelExtendedLocationOutput {
	return o.ApplyT(func(v *SpringbootsitesModelExtendedLocation) SpringbootsitesModelExtendedLocation {
		if v != nil {
			return *v
		}
		var ret SpringbootsitesModelExtendedLocation
		return ret
	}).(SpringbootsitesModelExtendedLocationOutput)
}

// The extended location name.
func (o SpringbootsitesModelExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootsitesModelExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o SpringbootsitesModelExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootsitesModelExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The extended location definition.
type SpringbootsitesModelResponseExtendedLocation struct {
	// The extended location name.
	Name *string `pulumi:"name"`
	// The extended location type.
	Type *string `pulumi:"type"`
}

// The extended location definition.
type SpringbootsitesModelResponseExtendedLocationOutput struct{ *pulumi.OutputState }

func (SpringbootsitesModelResponseExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootsitesModelResponseExtendedLocation)(nil)).Elem()
}

func (o SpringbootsitesModelResponseExtendedLocationOutput) ToSpringbootsitesModelResponseExtendedLocationOutput() SpringbootsitesModelResponseExtendedLocationOutput {
	return o
}

func (o SpringbootsitesModelResponseExtendedLocationOutput) ToSpringbootsitesModelResponseExtendedLocationOutputWithContext(ctx context.Context) SpringbootsitesModelResponseExtendedLocationOutput {
	return o
}

// The extended location name.
func (o SpringbootsitesModelResponseExtendedLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootsitesModelResponseExtendedLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o SpringbootsitesModelResponseExtendedLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootsitesModelResponseExtendedLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SpringbootsitesModelResponseExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (SpringbootsitesModelResponseExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringbootsitesModelResponseExtendedLocation)(nil)).Elem()
}

func (o SpringbootsitesModelResponseExtendedLocationPtrOutput) ToSpringbootsitesModelResponseExtendedLocationPtrOutput() SpringbootsitesModelResponseExtendedLocationPtrOutput {
	return o
}

func (o SpringbootsitesModelResponseExtendedLocationPtrOutput) ToSpringbootsitesModelResponseExtendedLocationPtrOutputWithContext(ctx context.Context) SpringbootsitesModelResponseExtendedLocationPtrOutput {
	return o
}

func (o SpringbootsitesModelResponseExtendedLocationPtrOutput) Elem() SpringbootsitesModelResponseExtendedLocationOutput {
	return o.ApplyT(func(v *SpringbootsitesModelResponseExtendedLocation) SpringbootsitesModelResponseExtendedLocation {
		if v != nil {
			return *v
		}
		var ret SpringbootsitesModelResponseExtendedLocation
		return ret
	}).(SpringbootsitesModelResponseExtendedLocationOutput)
}

// The extended location name.
func (o SpringbootsitesModelResponseExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootsitesModelResponseExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The extended location type.
func (o SpringbootsitesModelResponseExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootsitesModelResponseExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The springbootsites resource definition.
type SpringbootsitesProperties struct {
	// The master site ID from Azure Migrate.
	MasterSiteId *string `pulumi:"masterSiteId"`
	// The migrate project ID from Azure Migrate.
	MigrateProjectId *string `pulumi:"migrateProjectId"`
	// The resource provisioning state.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// SpringbootsitesPropertiesInput is an input type that accepts SpringbootsitesPropertiesArgs and SpringbootsitesPropertiesOutput values.
// You can construct a concrete instance of `SpringbootsitesPropertiesInput` via:
//
//	SpringbootsitesPropertiesArgs{...}
type SpringbootsitesPropertiesInput interface {
	pulumi.Input

	ToSpringbootsitesPropertiesOutput() SpringbootsitesPropertiesOutput
	ToSpringbootsitesPropertiesOutputWithContext(context.Context) SpringbootsitesPropertiesOutput
}

// The springbootsites resource definition.
type SpringbootsitesPropertiesArgs struct {
	// The master site ID from Azure Migrate.
	MasterSiteId pulumi.StringPtrInput `pulumi:"masterSiteId"`
	// The migrate project ID from Azure Migrate.
	MigrateProjectId pulumi.StringPtrInput `pulumi:"migrateProjectId"`
	// The resource provisioning state.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (SpringbootsitesPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootsitesProperties)(nil)).Elem()
}

func (i SpringbootsitesPropertiesArgs) ToSpringbootsitesPropertiesOutput() SpringbootsitesPropertiesOutput {
	return i.ToSpringbootsitesPropertiesOutputWithContext(context.Background())
}

func (i SpringbootsitesPropertiesArgs) ToSpringbootsitesPropertiesOutputWithContext(ctx context.Context) SpringbootsitesPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootsitesPropertiesOutput)
}

func (i SpringbootsitesPropertiesArgs) ToSpringbootsitesPropertiesPtrOutput() SpringbootsitesPropertiesPtrOutput {
	return i.ToSpringbootsitesPropertiesPtrOutputWithContext(context.Background())
}

func (i SpringbootsitesPropertiesArgs) ToSpringbootsitesPropertiesPtrOutputWithContext(ctx context.Context) SpringbootsitesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootsitesPropertiesOutput).ToSpringbootsitesPropertiesPtrOutputWithContext(ctx)
}

// SpringbootsitesPropertiesPtrInput is an input type that accepts SpringbootsitesPropertiesArgs, SpringbootsitesPropertiesPtr and SpringbootsitesPropertiesPtrOutput values.
// You can construct a concrete instance of `SpringbootsitesPropertiesPtrInput` via:
//
//	        SpringbootsitesPropertiesArgs{...}
//
//	or:
//
//	        nil
type SpringbootsitesPropertiesPtrInput interface {
	pulumi.Input

	ToSpringbootsitesPropertiesPtrOutput() SpringbootsitesPropertiesPtrOutput
	ToSpringbootsitesPropertiesPtrOutputWithContext(context.Context) SpringbootsitesPropertiesPtrOutput
}

type springbootsitesPropertiesPtrType SpringbootsitesPropertiesArgs

func SpringbootsitesPropertiesPtr(v *SpringbootsitesPropertiesArgs) SpringbootsitesPropertiesPtrInput {
	return (*springbootsitesPropertiesPtrType)(v)
}

func (*springbootsitesPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringbootsitesProperties)(nil)).Elem()
}

func (i *springbootsitesPropertiesPtrType) ToSpringbootsitesPropertiesPtrOutput() SpringbootsitesPropertiesPtrOutput {
	return i.ToSpringbootsitesPropertiesPtrOutputWithContext(context.Background())
}

func (i *springbootsitesPropertiesPtrType) ToSpringbootsitesPropertiesPtrOutputWithContext(ctx context.Context) SpringbootsitesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootsitesPropertiesPtrOutput)
}

// The springbootsites resource definition.
type SpringbootsitesPropertiesOutput struct{ *pulumi.OutputState }

func (SpringbootsitesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootsitesProperties)(nil)).Elem()
}

func (o SpringbootsitesPropertiesOutput) ToSpringbootsitesPropertiesOutput() SpringbootsitesPropertiesOutput {
	return o
}

func (o SpringbootsitesPropertiesOutput) ToSpringbootsitesPropertiesOutputWithContext(ctx context.Context) SpringbootsitesPropertiesOutput {
	return o
}

func (o SpringbootsitesPropertiesOutput) ToSpringbootsitesPropertiesPtrOutput() SpringbootsitesPropertiesPtrOutput {
	return o.ToSpringbootsitesPropertiesPtrOutputWithContext(context.Background())
}

func (o SpringbootsitesPropertiesOutput) ToSpringbootsitesPropertiesPtrOutputWithContext(ctx context.Context) SpringbootsitesPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpringbootsitesProperties) *SpringbootsitesProperties {
		return &v
	}).(SpringbootsitesPropertiesPtrOutput)
}

// The master site ID from Azure Migrate.
func (o SpringbootsitesPropertiesOutput) MasterSiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootsitesProperties) *string { return v.MasterSiteId }).(pulumi.StringPtrOutput)
}

// The migrate project ID from Azure Migrate.
func (o SpringbootsitesPropertiesOutput) MigrateProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootsitesProperties) *string { return v.MigrateProjectId }).(pulumi.StringPtrOutput)
}

// The resource provisioning state.
func (o SpringbootsitesPropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootsitesProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type SpringbootsitesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SpringbootsitesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringbootsitesProperties)(nil)).Elem()
}

func (o SpringbootsitesPropertiesPtrOutput) ToSpringbootsitesPropertiesPtrOutput() SpringbootsitesPropertiesPtrOutput {
	return o
}

func (o SpringbootsitesPropertiesPtrOutput) ToSpringbootsitesPropertiesPtrOutputWithContext(ctx context.Context) SpringbootsitesPropertiesPtrOutput {
	return o
}

func (o SpringbootsitesPropertiesPtrOutput) Elem() SpringbootsitesPropertiesOutput {
	return o.ApplyT(func(v *SpringbootsitesProperties) SpringbootsitesProperties {
		if v != nil {
			return *v
		}
		var ret SpringbootsitesProperties
		return ret
	}).(SpringbootsitesPropertiesOutput)
}

// The master site ID from Azure Migrate.
func (o SpringbootsitesPropertiesPtrOutput) MasterSiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootsitesProperties) *string {
		if v == nil {
			return nil
		}
		return v.MasterSiteId
	}).(pulumi.StringPtrOutput)
}

// The migrate project ID from Azure Migrate.
func (o SpringbootsitesPropertiesPtrOutput) MigrateProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootsitesProperties) *string {
		if v == nil {
			return nil
		}
		return v.MigrateProjectId
	}).(pulumi.StringPtrOutput)
}

// The resource provisioning state.
func (o SpringbootsitesPropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringbootsitesProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The springbootsites resource definition.
type SpringbootsitesPropertiesResponse struct {
	// The master site ID from Azure Migrate.
	MasterSiteId *string `pulumi:"masterSiteId"`
	// The migrate project ID from Azure Migrate.
	MigrateProjectId *string `pulumi:"migrateProjectId"`
	// The resource provisioning state.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// The springbootsites resource definition.
type SpringbootsitesPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SpringbootsitesPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpringbootsitesPropertiesResponse)(nil)).Elem()
}

func (o SpringbootsitesPropertiesResponseOutput) ToSpringbootsitesPropertiesResponseOutput() SpringbootsitesPropertiesResponseOutput {
	return o
}

func (o SpringbootsitesPropertiesResponseOutput) ToSpringbootsitesPropertiesResponseOutputWithContext(ctx context.Context) SpringbootsitesPropertiesResponseOutput {
	return o
}

// The master site ID from Azure Migrate.
func (o SpringbootsitesPropertiesResponseOutput) MasterSiteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootsitesPropertiesResponse) *string { return v.MasterSiteId }).(pulumi.StringPtrOutput)
}

// The migrate project ID from Azure Migrate.
func (o SpringbootsitesPropertiesResponseOutput) MigrateProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootsitesPropertiesResponse) *string { return v.MigrateProjectId }).(pulumi.StringPtrOutput)
}

// The resource provisioning state.
func (o SpringbootsitesPropertiesResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpringbootsitesPropertiesResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ErrorOutput{})
	pulumi.RegisterOutputType(ErrorArrayOutput{})
	pulumi.RegisterOutputType(ErrorResponseOutput{})
	pulumi.RegisterOutputType(ErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(SpringbootappsPropertiesOutput{})
	pulumi.RegisterOutputType(SpringbootappsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SpringbootappsPropertiesApplicationConfigurationsOutput{})
	pulumi.RegisterOutputType(SpringbootappsPropertiesApplicationConfigurationsArrayOutput{})
	pulumi.RegisterOutputType(SpringbootappsPropertiesInstancesOutput{})
	pulumi.RegisterOutputType(SpringbootappsPropertiesInstancesArrayOutput{})
	pulumi.RegisterOutputType(SpringbootappsPropertiesMiscsOutput{})
	pulumi.RegisterOutputType(SpringbootappsPropertiesMiscsArrayOutput{})
	pulumi.RegisterOutputType(SpringbootappsPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SpringbootappsPropertiesResponseApplicationConfigurationsOutput{})
	pulumi.RegisterOutputType(SpringbootappsPropertiesResponseApplicationConfigurationsArrayOutput{})
	pulumi.RegisterOutputType(SpringbootappsPropertiesResponseInstancesOutput{})
	pulumi.RegisterOutputType(SpringbootappsPropertiesResponseInstancesArrayOutput{})
	pulumi.RegisterOutputType(SpringbootappsPropertiesResponseMiscsOutput{})
	pulumi.RegisterOutputType(SpringbootappsPropertiesResponseMiscsArrayOutput{})
	pulumi.RegisterOutputType(SpringbootserversPropertiesOutput{})
	pulumi.RegisterOutputType(SpringbootserversPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SpringbootserversPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SpringbootsitesModelExtendedLocationOutput{})
	pulumi.RegisterOutputType(SpringbootsitesModelExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(SpringbootsitesModelResponseExtendedLocationOutput{})
	pulumi.RegisterOutputType(SpringbootsitesModelResponseExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(SpringbootsitesPropertiesOutput{})
	pulumi.RegisterOutputType(SpringbootsitesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SpringbootsitesPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
}
