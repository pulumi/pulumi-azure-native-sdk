// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package offazurespringboot

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The springbootservers envelope resource definition.
// Azure REST API version: 2023-01-01-preview.
type Springbootserver struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The springbootservers resource definition.
	Properties SpringbootserversPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSpringbootserver registers a new resource with the given unique name, arguments, and options.
func NewSpringbootserver(ctx *pulumi.Context,
	name string, args *SpringbootserverArgs, opts ...pulumi.ResourceOption) (*Springbootserver, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SiteName == nil {
		return nil, errors.New("invalid value for required argument 'SiteName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:offazurespringboot:springbootserver"),
		},
		{
			Type: pulumi.String("azure-native:offazurespringboot/v20230101preview:Springbootserver"),
		},
		{
			Type: pulumi.String("azure-native:offazurespringboot/v20230101preview:springbootserver"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Springbootserver
	err := ctx.RegisterResource("azure-native:offazurespringboot:Springbootserver", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpringbootserver gets an existing Springbootserver resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpringbootserver(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpringbootserverState, opts ...pulumi.ResourceOption) (*Springbootserver, error) {
	var resource Springbootserver
	err := ctx.ReadResource("azure-native:offazurespringboot:Springbootserver", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Springbootserver resources.
type springbootserverState struct {
}

type SpringbootserverState struct {
}

func (SpringbootserverState) ElementType() reflect.Type {
	return reflect.TypeOf((*springbootserverState)(nil)).Elem()
}

type springbootserverArgs struct {
	// The springbootservers resource definition.
	Properties *SpringbootserversProperties `pulumi:"properties"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The springbootsites name.
	SiteName string `pulumi:"siteName"`
	// The springbootservers name.
	SpringbootserversName *string `pulumi:"springbootserversName"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Springbootserver resource.
type SpringbootserverArgs struct {
	// The springbootservers resource definition.
	Properties SpringbootserversPropertiesPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The springbootsites name.
	SiteName pulumi.StringInput
	// The springbootservers name.
	SpringbootserversName pulumi.StringPtrInput
	// Resource tags
	Tags pulumi.StringMapInput
}

func (SpringbootserverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*springbootserverArgs)(nil)).Elem()
}

type SpringbootserverInput interface {
	pulumi.Input

	ToSpringbootserverOutput() SpringbootserverOutput
	ToSpringbootserverOutputWithContext(ctx context.Context) SpringbootserverOutput
}

func (*Springbootserver) ElementType() reflect.Type {
	return reflect.TypeOf((**Springbootserver)(nil)).Elem()
}

func (i *Springbootserver) ToSpringbootserverOutput() SpringbootserverOutput {
	return i.ToSpringbootserverOutputWithContext(context.Background())
}

func (i *Springbootserver) ToSpringbootserverOutputWithContext(ctx context.Context) SpringbootserverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringbootserverOutput)
}

type SpringbootserverOutput struct{ *pulumi.OutputState }

func (SpringbootserverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Springbootserver)(nil)).Elem()
}

func (o SpringbootserverOutput) ToSpringbootserverOutput() SpringbootserverOutput {
	return o
}

func (o SpringbootserverOutput) ToSpringbootserverOutputWithContext(ctx context.Context) SpringbootserverOutput {
	return o
}

// The name of the resource
func (o SpringbootserverOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Springbootserver) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The springbootservers resource definition.
func (o SpringbootserverOutput) Properties() SpringbootserversPropertiesResponseOutput {
	return o.ApplyT(func(v *Springbootserver) SpringbootserversPropertiesResponseOutput { return v.Properties }).(SpringbootserversPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o SpringbootserverOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Springbootserver) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags
func (o SpringbootserverOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Springbootserver) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o SpringbootserverOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Springbootserver) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SpringbootserverOutput{})
}
