// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a springbootsites resource.
func LookupSpringbootsite(ctx *pulumi.Context, args *LookupSpringbootsiteArgs, opts ...pulumi.InvokeOption) (*LookupSpringbootsiteResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSpringbootsiteResult
	err := ctx.Invoke("azure-native:offazurespringboot/v20230101preview:getSpringbootsite", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSpringbootsiteArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The springbootsites name.
	SpringbootsitesName string `pulumi:"springbootsitesName"`
}

// The springbootsites envelope resource definition.
type LookupSpringbootsiteResult struct {
	// The extended location definition.
	ExtendedLocation *SpringbootsitesModelResponseExtendedLocation `pulumi:"extendedLocation"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The springbootsites resource definition.
	Properties SpringbootsitesPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupSpringbootsiteOutput(ctx *pulumi.Context, args LookupSpringbootsiteOutputArgs, opts ...pulumi.InvokeOption) LookupSpringbootsiteResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSpringbootsiteResult, error) {
			args := v.(LookupSpringbootsiteArgs)
			r, err := LookupSpringbootsite(ctx, &args, opts...)
			var s LookupSpringbootsiteResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSpringbootsiteResultOutput)
}

type LookupSpringbootsiteOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The springbootsites name.
	SpringbootsitesName pulumi.StringInput `pulumi:"springbootsitesName"`
}

func (LookupSpringbootsiteOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpringbootsiteArgs)(nil)).Elem()
}

// The springbootsites envelope resource definition.
type LookupSpringbootsiteResultOutput struct{ *pulumi.OutputState }

func (LookupSpringbootsiteResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpringbootsiteResult)(nil)).Elem()
}

func (o LookupSpringbootsiteResultOutput) ToLookupSpringbootsiteResultOutput() LookupSpringbootsiteResultOutput {
	return o
}

func (o LookupSpringbootsiteResultOutput) ToLookupSpringbootsiteResultOutputWithContext(ctx context.Context) LookupSpringbootsiteResultOutput {
	return o
}

// The extended location definition.
func (o LookupSpringbootsiteResultOutput) ExtendedLocation() SpringbootsitesModelResponseExtendedLocationPtrOutput {
	return o.ApplyT(func(v LookupSpringbootsiteResult) *SpringbootsitesModelResponseExtendedLocation {
		return v.ExtendedLocation
	}).(SpringbootsitesModelResponseExtendedLocationPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupSpringbootsiteResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpringbootsiteResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupSpringbootsiteResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpringbootsiteResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupSpringbootsiteResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpringbootsiteResult) string { return v.Name }).(pulumi.StringOutput)
}

// The springbootsites resource definition.
func (o LookupSpringbootsiteResultOutput) Properties() SpringbootsitesPropertiesResponseOutput {
	return o.ApplyT(func(v LookupSpringbootsiteResult) SpringbootsitesPropertiesResponse { return v.Properties }).(SpringbootsitesPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupSpringbootsiteResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSpringbootsiteResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupSpringbootsiteResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSpringbootsiteResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSpringbootsiteResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpringbootsiteResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSpringbootsiteResultOutput{})
}
