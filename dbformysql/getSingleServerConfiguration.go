// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbformysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about a configuration of server.
//
// Uses Azure REST API version 2017-12-01.
func LookupSingleServerConfiguration(ctx *pulumi.Context, args *LookupSingleServerConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupSingleServerConfigurationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupSingleServerConfigurationResult
	err := ctx.Invoke("azure-native:dbformysql:getSingleServerConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSingleServerConfigurationArgs struct {
	// The name of the server configuration.
	ConfigurationName string `pulumi:"configurationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName string `pulumi:"serverName"`
}

// Represents a Configuration.
type LookupSingleServerConfigurationResult struct {
	// Allowed values of the configuration.
	AllowedValues string `pulumi:"allowedValues"`
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Data type of the configuration.
	DataType string `pulumi:"dataType"`
	// Default value of the configuration.
	DefaultValue string `pulumi:"defaultValue"`
	// Description of the configuration.
	Description string `pulumi:"description"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Source of the configuration.
	Source *string `pulumi:"source"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Value of the configuration.
	Value *string `pulumi:"value"`
}

func LookupSingleServerConfigurationOutput(ctx *pulumi.Context, args LookupSingleServerConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupSingleServerConfigurationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSingleServerConfigurationResultOutput, error) {
			args := v.(LookupSingleServerConfigurationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:dbformysql:getSingleServerConfiguration", args, LookupSingleServerConfigurationResultOutput{}, options).(LookupSingleServerConfigurationResultOutput), nil
		}).(LookupSingleServerConfigurationResultOutput)
}

type LookupSingleServerConfigurationOutputArgs struct {
	// The name of the server configuration.
	ConfigurationName pulumi.StringInput `pulumi:"configurationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName pulumi.StringInput `pulumi:"serverName"`
}

func (LookupSingleServerConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSingleServerConfigurationArgs)(nil)).Elem()
}

// Represents a Configuration.
type LookupSingleServerConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupSingleServerConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSingleServerConfigurationResult)(nil)).Elem()
}

func (o LookupSingleServerConfigurationResultOutput) ToLookupSingleServerConfigurationResultOutput() LookupSingleServerConfigurationResultOutput {
	return o
}

func (o LookupSingleServerConfigurationResultOutput) ToLookupSingleServerConfigurationResultOutputWithContext(ctx context.Context) LookupSingleServerConfigurationResultOutput {
	return o
}

// Allowed values of the configuration.
func (o LookupSingleServerConfigurationResultOutput) AllowedValues() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSingleServerConfigurationResult) string { return v.AllowedValues }).(pulumi.StringOutput)
}

// The Azure API version of the resource.
func (o LookupSingleServerConfigurationResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSingleServerConfigurationResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Data type of the configuration.
func (o LookupSingleServerConfigurationResultOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSingleServerConfigurationResult) string { return v.DataType }).(pulumi.StringOutput)
}

// Default value of the configuration.
func (o LookupSingleServerConfigurationResultOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSingleServerConfigurationResult) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// Description of the configuration.
func (o LookupSingleServerConfigurationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSingleServerConfigurationResult) string { return v.Description }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupSingleServerConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSingleServerConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupSingleServerConfigurationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSingleServerConfigurationResult) string { return v.Name }).(pulumi.StringOutput)
}

// Source of the configuration.
func (o LookupSingleServerConfigurationResultOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSingleServerConfigurationResult) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSingleServerConfigurationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSingleServerConfigurationResult) string { return v.Type }).(pulumi.StringOutput)
}

// Value of the configuration.
func (o LookupSingleServerConfigurationResultOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSingleServerConfigurationResult) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSingleServerConfigurationResultOutput{})
}
