// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbformysql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a server firewall rule.
//
// Uses Azure REST API version 2017-12-01.
type SingleServerFirewallRule struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The end IP address of the server firewall rule. Must be IPv4 format.
	EndIpAddress pulumi.StringOutput `pulumi:"endIpAddress"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The start IP address of the server firewall rule. Must be IPv4 format.
	StartIpAddress pulumi.StringOutput `pulumi:"startIpAddress"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSingleServerFirewallRule registers a new resource with the given unique name, arguments, and options.
func NewSingleServerFirewallRule(ctx *pulumi.Context,
	name string, args *SingleServerFirewallRuleArgs, opts ...pulumi.ResourceOption) (*SingleServerFirewallRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EndIpAddress == nil {
		return nil, errors.New("invalid value for required argument 'EndIpAddress'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServerName == nil {
		return nil, errors.New("invalid value for required argument 'ServerName'")
	}
	if args.StartIpAddress == nil {
		return nil, errors.New("invalid value for required argument 'StartIpAddress'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:dbformysql/v20171201:FirewallRule"),
		},
		{
			Type: pulumi.String("azure-native:dbformysql/v20171201:SingleServerFirewallRule"),
		},
		{
			Type: pulumi.String("azure-native:dbformysql/v20171201preview:SingleServerFirewallRule"),
		},
		{
			Type: pulumi.String("azure-native:dbformysql/v20180601privatepreview:SingleServerFirewallRule"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource SingleServerFirewallRule
	err := ctx.RegisterResource("azure-native:dbformysql:SingleServerFirewallRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSingleServerFirewallRule gets an existing SingleServerFirewallRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSingleServerFirewallRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SingleServerFirewallRuleState, opts ...pulumi.ResourceOption) (*SingleServerFirewallRule, error) {
	var resource SingleServerFirewallRule
	err := ctx.ReadResource("azure-native:dbformysql:SingleServerFirewallRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SingleServerFirewallRule resources.
type singleServerFirewallRuleState struct {
}

type SingleServerFirewallRuleState struct {
}

func (SingleServerFirewallRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*singleServerFirewallRuleState)(nil)).Elem()
}

type singleServerFirewallRuleArgs struct {
	// The end IP address of the server firewall rule. Must be IPv4 format.
	EndIpAddress string `pulumi:"endIpAddress"`
	// The name of the server firewall rule.
	FirewallRuleName *string `pulumi:"firewallRuleName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName string `pulumi:"serverName"`
	// The start IP address of the server firewall rule. Must be IPv4 format.
	StartIpAddress string `pulumi:"startIpAddress"`
}

// The set of arguments for constructing a SingleServerFirewallRule resource.
type SingleServerFirewallRuleArgs struct {
	// The end IP address of the server firewall rule. Must be IPv4 format.
	EndIpAddress pulumi.StringInput
	// The name of the server firewall rule.
	FirewallRuleName pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the server.
	ServerName pulumi.StringInput
	// The start IP address of the server firewall rule. Must be IPv4 format.
	StartIpAddress pulumi.StringInput
}

func (SingleServerFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*singleServerFirewallRuleArgs)(nil)).Elem()
}

type SingleServerFirewallRuleInput interface {
	pulumi.Input

	ToSingleServerFirewallRuleOutput() SingleServerFirewallRuleOutput
	ToSingleServerFirewallRuleOutputWithContext(ctx context.Context) SingleServerFirewallRuleOutput
}

func (*SingleServerFirewallRule) ElementType() reflect.Type {
	return reflect.TypeOf((**SingleServerFirewallRule)(nil)).Elem()
}

func (i *SingleServerFirewallRule) ToSingleServerFirewallRuleOutput() SingleServerFirewallRuleOutput {
	return i.ToSingleServerFirewallRuleOutputWithContext(context.Background())
}

func (i *SingleServerFirewallRule) ToSingleServerFirewallRuleOutputWithContext(ctx context.Context) SingleServerFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SingleServerFirewallRuleOutput)
}

type SingleServerFirewallRuleOutput struct{ *pulumi.OutputState }

func (SingleServerFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SingleServerFirewallRule)(nil)).Elem()
}

func (o SingleServerFirewallRuleOutput) ToSingleServerFirewallRuleOutput() SingleServerFirewallRuleOutput {
	return o
}

func (o SingleServerFirewallRuleOutput) ToSingleServerFirewallRuleOutputWithContext(ctx context.Context) SingleServerFirewallRuleOutput {
	return o
}

// The Azure API version of the resource.
func (o SingleServerFirewallRuleOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *SingleServerFirewallRule) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The end IP address of the server firewall rule. Must be IPv4 format.
func (o SingleServerFirewallRuleOutput) EndIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *SingleServerFirewallRule) pulumi.StringOutput { return v.EndIpAddress }).(pulumi.StringOutput)
}

// The name of the resource
func (o SingleServerFirewallRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SingleServerFirewallRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The start IP address of the server firewall rule. Must be IPv4 format.
func (o SingleServerFirewallRuleOutput) StartIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *SingleServerFirewallRule) pulumi.StringOutput { return v.StartIpAddress }).(pulumi.StringOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o SingleServerFirewallRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SingleServerFirewallRule) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SingleServerFirewallRuleOutput{})
}
