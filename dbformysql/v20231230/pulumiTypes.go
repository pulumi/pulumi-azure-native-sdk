// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231230

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Storage Profile properties of a server
type Backup struct {
	// Backup interval hours for the server.
	BackupIntervalHours *int `pulumi:"backupIntervalHours"`
	// Backup retention days for the server.
	BackupRetentionDays *int `pulumi:"backupRetentionDays"`
	// Whether or not geo redundant backup is enabled.
	GeoRedundantBackup *string `pulumi:"geoRedundantBackup"`
}

// Defaults sets the appropriate defaults for Backup
func (val *Backup) Defaults() *Backup {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.GeoRedundantBackup == nil {
		geoRedundantBackup_ := "Disabled"
		tmp.GeoRedundantBackup = &geoRedundantBackup_
	}
	return &tmp
}

// BackupInput is an input type that accepts BackupArgs and BackupOutput values.
// You can construct a concrete instance of `BackupInput` via:
//
//	BackupArgs{...}
type BackupInput interface {
	pulumi.Input

	ToBackupOutput() BackupOutput
	ToBackupOutputWithContext(context.Context) BackupOutput
}

// Storage Profile properties of a server
type BackupArgs struct {
	// Backup interval hours for the server.
	BackupIntervalHours pulumi.IntPtrInput `pulumi:"backupIntervalHours"`
	// Backup retention days for the server.
	BackupRetentionDays pulumi.IntPtrInput `pulumi:"backupRetentionDays"`
	// Whether or not geo redundant backup is enabled.
	GeoRedundantBackup pulumi.StringPtrInput `pulumi:"geoRedundantBackup"`
}

// Defaults sets the appropriate defaults for BackupArgs
func (val *BackupArgs) Defaults() *BackupArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.GeoRedundantBackup == nil {
		tmp.GeoRedundantBackup = pulumi.StringPtr("Disabled")
	}
	return &tmp
}
func (BackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Backup)(nil)).Elem()
}

func (i BackupArgs) ToBackupOutput() BackupOutput {
	return i.ToBackupOutputWithContext(context.Background())
}

func (i BackupArgs) ToBackupOutputWithContext(ctx context.Context) BackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupOutput)
}

func (i BackupArgs) ToBackupPtrOutput() BackupPtrOutput {
	return i.ToBackupPtrOutputWithContext(context.Background())
}

func (i BackupArgs) ToBackupPtrOutputWithContext(ctx context.Context) BackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupOutput).ToBackupPtrOutputWithContext(ctx)
}

// BackupPtrInput is an input type that accepts BackupArgs, BackupPtr and BackupPtrOutput values.
// You can construct a concrete instance of `BackupPtrInput` via:
//
//	        BackupArgs{...}
//
//	or:
//
//	        nil
type BackupPtrInput interface {
	pulumi.Input

	ToBackupPtrOutput() BackupPtrOutput
	ToBackupPtrOutputWithContext(context.Context) BackupPtrOutput
}

type backupPtrType BackupArgs

func BackupPtr(v *BackupArgs) BackupPtrInput {
	return (*backupPtrType)(v)
}

func (*backupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Backup)(nil)).Elem()
}

func (i *backupPtrType) ToBackupPtrOutput() BackupPtrOutput {
	return i.ToBackupPtrOutputWithContext(context.Background())
}

func (i *backupPtrType) ToBackupPtrOutputWithContext(ctx context.Context) BackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPtrOutput)
}

// Storage Profile properties of a server
type BackupOutput struct{ *pulumi.OutputState }

func (BackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Backup)(nil)).Elem()
}

func (o BackupOutput) ToBackupOutput() BackupOutput {
	return o
}

func (o BackupOutput) ToBackupOutputWithContext(ctx context.Context) BackupOutput {
	return o
}

func (o BackupOutput) ToBackupPtrOutput() BackupPtrOutput {
	return o.ToBackupPtrOutputWithContext(context.Background())
}

func (o BackupOutput) ToBackupPtrOutputWithContext(ctx context.Context) BackupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Backup) *Backup {
		return &v
	}).(BackupPtrOutput)
}

// Backup interval hours for the server.
func (o BackupOutput) BackupIntervalHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Backup) *int { return v.BackupIntervalHours }).(pulumi.IntPtrOutput)
}

// Backup retention days for the server.
func (o BackupOutput) BackupRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Backup) *int { return v.BackupRetentionDays }).(pulumi.IntPtrOutput)
}

// Whether or not geo redundant backup is enabled.
func (o BackupOutput) GeoRedundantBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Backup) *string { return v.GeoRedundantBackup }).(pulumi.StringPtrOutput)
}

type BackupPtrOutput struct{ *pulumi.OutputState }

func (BackupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Backup)(nil)).Elem()
}

func (o BackupPtrOutput) ToBackupPtrOutput() BackupPtrOutput {
	return o
}

func (o BackupPtrOutput) ToBackupPtrOutputWithContext(ctx context.Context) BackupPtrOutput {
	return o
}

func (o BackupPtrOutput) Elem() BackupOutput {
	return o.ApplyT(func(v *Backup) Backup {
		if v != nil {
			return *v
		}
		var ret Backup
		return ret
	}).(BackupOutput)
}

// Backup interval hours for the server.
func (o BackupPtrOutput) BackupIntervalHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Backup) *int {
		if v == nil {
			return nil
		}
		return v.BackupIntervalHours
	}).(pulumi.IntPtrOutput)
}

// Backup retention days for the server.
func (o BackupPtrOutput) BackupRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Backup) *int {
		if v == nil {
			return nil
		}
		return v.BackupRetentionDays
	}).(pulumi.IntPtrOutput)
}

// Whether or not geo redundant backup is enabled.
func (o BackupPtrOutput) GeoRedundantBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Backup) *string {
		if v == nil {
			return nil
		}
		return v.GeoRedundantBackup
	}).(pulumi.StringPtrOutput)
}

// Storage Profile properties of a server
type BackupResponse struct {
	// Backup interval hours for the server.
	BackupIntervalHours *int `pulumi:"backupIntervalHours"`
	// Backup retention days for the server.
	BackupRetentionDays *int `pulumi:"backupRetentionDays"`
	// Earliest restore point creation time (ISO8601 format)
	EarliestRestoreDate string `pulumi:"earliestRestoreDate"`
	// Whether or not geo redundant backup is enabled.
	GeoRedundantBackup *string `pulumi:"geoRedundantBackup"`
}

// Defaults sets the appropriate defaults for BackupResponse
func (val *BackupResponse) Defaults() *BackupResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.GeoRedundantBackup == nil {
		geoRedundantBackup_ := "Disabled"
		tmp.GeoRedundantBackup = &geoRedundantBackup_
	}
	return &tmp
}

// Storage Profile properties of a server
type BackupResponseOutput struct{ *pulumi.OutputState }

func (BackupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupResponse)(nil)).Elem()
}

func (o BackupResponseOutput) ToBackupResponseOutput() BackupResponseOutput {
	return o
}

func (o BackupResponseOutput) ToBackupResponseOutputWithContext(ctx context.Context) BackupResponseOutput {
	return o
}

// Backup interval hours for the server.
func (o BackupResponseOutput) BackupIntervalHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupResponse) *int { return v.BackupIntervalHours }).(pulumi.IntPtrOutput)
}

// Backup retention days for the server.
func (o BackupResponseOutput) BackupRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupResponse) *int { return v.BackupRetentionDays }).(pulumi.IntPtrOutput)
}

// Earliest restore point creation time (ISO8601 format)
func (o BackupResponseOutput) EarliestRestoreDate() pulumi.StringOutput {
	return o.ApplyT(func(v BackupResponse) string { return v.EarliestRestoreDate }).(pulumi.StringOutput)
}

// Whether or not geo redundant backup is enabled.
func (o BackupResponseOutput) GeoRedundantBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupResponse) *string { return v.GeoRedundantBackup }).(pulumi.StringPtrOutput)
}

type BackupResponsePtrOutput struct{ *pulumi.OutputState }

func (BackupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupResponse)(nil)).Elem()
}

func (o BackupResponsePtrOutput) ToBackupResponsePtrOutput() BackupResponsePtrOutput {
	return o
}

func (o BackupResponsePtrOutput) ToBackupResponsePtrOutputWithContext(ctx context.Context) BackupResponsePtrOutput {
	return o
}

func (o BackupResponsePtrOutput) Elem() BackupResponseOutput {
	return o.ApplyT(func(v *BackupResponse) BackupResponse {
		if v != nil {
			return *v
		}
		var ret BackupResponse
		return ret
	}).(BackupResponseOutput)
}

// Backup interval hours for the server.
func (o BackupResponsePtrOutput) BackupIntervalHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupResponse) *int {
		if v == nil {
			return nil
		}
		return v.BackupIntervalHours
	}).(pulumi.IntPtrOutput)
}

// Backup retention days for the server.
func (o BackupResponsePtrOutput) BackupRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupResponse) *int {
		if v == nil {
			return nil
		}
		return v.BackupRetentionDays
	}).(pulumi.IntPtrOutput)
}

// Earliest restore point creation time (ISO8601 format)
func (o BackupResponsePtrOutput) EarliestRestoreDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EarliestRestoreDate
	}).(pulumi.StringPtrOutput)
}

// Whether or not geo redundant backup is enabled.
func (o BackupResponsePtrOutput) GeoRedundantBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupResponse) *string {
		if v == nil {
			return nil
		}
		return v.GeoRedundantBackup
	}).(pulumi.StringPtrOutput)
}

// The date encryption for cmk.
type DataEncryption struct {
	// Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup
	GeoBackupKeyURI *string `pulumi:"geoBackupKeyURI"`
	// Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup
	GeoBackupUserAssignedIdentityId *string `pulumi:"geoBackupUserAssignedIdentityId"`
	// Primary key uri
	PrimaryKeyURI *string `pulumi:"primaryKeyURI"`
	// Primary user identity resource id
	PrimaryUserAssignedIdentityId *string `pulumi:"primaryUserAssignedIdentityId"`
	// The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.
	Type *DataEncryptionType `pulumi:"type"`
}

// DataEncryptionInput is an input type that accepts DataEncryptionArgs and DataEncryptionOutput values.
// You can construct a concrete instance of `DataEncryptionInput` via:
//
//	DataEncryptionArgs{...}
type DataEncryptionInput interface {
	pulumi.Input

	ToDataEncryptionOutput() DataEncryptionOutput
	ToDataEncryptionOutputWithContext(context.Context) DataEncryptionOutput
}

// The date encryption for cmk.
type DataEncryptionArgs struct {
	// Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup
	GeoBackupKeyURI pulumi.StringPtrInput `pulumi:"geoBackupKeyURI"`
	// Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup
	GeoBackupUserAssignedIdentityId pulumi.StringPtrInput `pulumi:"geoBackupUserAssignedIdentityId"`
	// Primary key uri
	PrimaryKeyURI pulumi.StringPtrInput `pulumi:"primaryKeyURI"`
	// Primary user identity resource id
	PrimaryUserAssignedIdentityId pulumi.StringPtrInput `pulumi:"primaryUserAssignedIdentityId"`
	// The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.
	Type DataEncryptionTypePtrInput `pulumi:"type"`
}

func (DataEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataEncryption)(nil)).Elem()
}

func (i DataEncryptionArgs) ToDataEncryptionOutput() DataEncryptionOutput {
	return i.ToDataEncryptionOutputWithContext(context.Background())
}

func (i DataEncryptionArgs) ToDataEncryptionOutputWithContext(ctx context.Context) DataEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataEncryptionOutput)
}

func (i DataEncryptionArgs) ToDataEncryptionPtrOutput() DataEncryptionPtrOutput {
	return i.ToDataEncryptionPtrOutputWithContext(context.Background())
}

func (i DataEncryptionArgs) ToDataEncryptionPtrOutputWithContext(ctx context.Context) DataEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataEncryptionOutput).ToDataEncryptionPtrOutputWithContext(ctx)
}

// DataEncryptionPtrInput is an input type that accepts DataEncryptionArgs, DataEncryptionPtr and DataEncryptionPtrOutput values.
// You can construct a concrete instance of `DataEncryptionPtrInput` via:
//
//	        DataEncryptionArgs{...}
//
//	or:
//
//	        nil
type DataEncryptionPtrInput interface {
	pulumi.Input

	ToDataEncryptionPtrOutput() DataEncryptionPtrOutput
	ToDataEncryptionPtrOutputWithContext(context.Context) DataEncryptionPtrOutput
}

type dataEncryptionPtrType DataEncryptionArgs

func DataEncryptionPtr(v *DataEncryptionArgs) DataEncryptionPtrInput {
	return (*dataEncryptionPtrType)(v)
}

func (*dataEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataEncryption)(nil)).Elem()
}

func (i *dataEncryptionPtrType) ToDataEncryptionPtrOutput() DataEncryptionPtrOutput {
	return i.ToDataEncryptionPtrOutputWithContext(context.Background())
}

func (i *dataEncryptionPtrType) ToDataEncryptionPtrOutputWithContext(ctx context.Context) DataEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataEncryptionPtrOutput)
}

// The date encryption for cmk.
type DataEncryptionOutput struct{ *pulumi.OutputState }

func (DataEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataEncryption)(nil)).Elem()
}

func (o DataEncryptionOutput) ToDataEncryptionOutput() DataEncryptionOutput {
	return o
}

func (o DataEncryptionOutput) ToDataEncryptionOutputWithContext(ctx context.Context) DataEncryptionOutput {
	return o
}

func (o DataEncryptionOutput) ToDataEncryptionPtrOutput() DataEncryptionPtrOutput {
	return o.ToDataEncryptionPtrOutputWithContext(context.Background())
}

func (o DataEncryptionOutput) ToDataEncryptionPtrOutputWithContext(ctx context.Context) DataEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataEncryption) *DataEncryption {
		return &v
	}).(DataEncryptionPtrOutput)
}

// Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup
func (o DataEncryptionOutput) GeoBackupKeyURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryption) *string { return v.GeoBackupKeyURI }).(pulumi.StringPtrOutput)
}

// Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup
func (o DataEncryptionOutput) GeoBackupUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryption) *string { return v.GeoBackupUserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

// Primary key uri
func (o DataEncryptionOutput) PrimaryKeyURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryption) *string { return v.PrimaryKeyURI }).(pulumi.StringPtrOutput)
}

// Primary user identity resource id
func (o DataEncryptionOutput) PrimaryUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryption) *string { return v.PrimaryUserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

// The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.
func (o DataEncryptionOutput) Type() DataEncryptionTypePtrOutput {
	return o.ApplyT(func(v DataEncryption) *DataEncryptionType { return v.Type }).(DataEncryptionTypePtrOutput)
}

type DataEncryptionPtrOutput struct{ *pulumi.OutputState }

func (DataEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataEncryption)(nil)).Elem()
}

func (o DataEncryptionPtrOutput) ToDataEncryptionPtrOutput() DataEncryptionPtrOutput {
	return o
}

func (o DataEncryptionPtrOutput) ToDataEncryptionPtrOutputWithContext(ctx context.Context) DataEncryptionPtrOutput {
	return o
}

func (o DataEncryptionPtrOutput) Elem() DataEncryptionOutput {
	return o.ApplyT(func(v *DataEncryption) DataEncryption {
		if v != nil {
			return *v
		}
		var ret DataEncryption
		return ret
	}).(DataEncryptionOutput)
}

// Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup
func (o DataEncryptionPtrOutput) GeoBackupKeyURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.GeoBackupKeyURI
	}).(pulumi.StringPtrOutput)
}

// Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup
func (o DataEncryptionPtrOutput) GeoBackupUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.GeoBackupUserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

// Primary key uri
func (o DataEncryptionPtrOutput) PrimaryKeyURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryKeyURI
	}).(pulumi.StringPtrOutput)
}

// Primary user identity resource id
func (o DataEncryptionPtrOutput) PrimaryUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryUserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

// The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.
func (o DataEncryptionPtrOutput) Type() DataEncryptionTypePtrOutput {
	return o.ApplyT(func(v *DataEncryption) *DataEncryptionType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(DataEncryptionTypePtrOutput)
}

// The date encryption for cmk.
type DataEncryptionResponse struct {
	// Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup
	GeoBackupKeyURI *string `pulumi:"geoBackupKeyURI"`
	// Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup
	GeoBackupUserAssignedIdentityId *string `pulumi:"geoBackupUserAssignedIdentityId"`
	// Primary key uri
	PrimaryKeyURI *string `pulumi:"primaryKeyURI"`
	// Primary user identity resource id
	PrimaryUserAssignedIdentityId *string `pulumi:"primaryUserAssignedIdentityId"`
	// The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.
	Type *string `pulumi:"type"`
}

// The date encryption for cmk.
type DataEncryptionResponseOutput struct{ *pulumi.OutputState }

func (DataEncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataEncryptionResponse)(nil)).Elem()
}

func (o DataEncryptionResponseOutput) ToDataEncryptionResponseOutput() DataEncryptionResponseOutput {
	return o
}

func (o DataEncryptionResponseOutput) ToDataEncryptionResponseOutputWithContext(ctx context.Context) DataEncryptionResponseOutput {
	return o
}

// Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup
func (o DataEncryptionResponseOutput) GeoBackupKeyURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryptionResponse) *string { return v.GeoBackupKeyURI }).(pulumi.StringPtrOutput)
}

// Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup
func (o DataEncryptionResponseOutput) GeoBackupUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryptionResponse) *string { return v.GeoBackupUserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

// Primary key uri
func (o DataEncryptionResponseOutput) PrimaryKeyURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryptionResponse) *string { return v.PrimaryKeyURI }).(pulumi.StringPtrOutput)
}

// Primary user identity resource id
func (o DataEncryptionResponseOutput) PrimaryUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryptionResponse) *string { return v.PrimaryUserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

// The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.
func (o DataEncryptionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryptionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DataEncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (DataEncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataEncryptionResponse)(nil)).Elem()
}

func (o DataEncryptionResponsePtrOutput) ToDataEncryptionResponsePtrOutput() DataEncryptionResponsePtrOutput {
	return o
}

func (o DataEncryptionResponsePtrOutput) ToDataEncryptionResponsePtrOutputWithContext(ctx context.Context) DataEncryptionResponsePtrOutput {
	return o
}

func (o DataEncryptionResponsePtrOutput) Elem() DataEncryptionResponseOutput {
	return o.ApplyT(func(v *DataEncryptionResponse) DataEncryptionResponse {
		if v != nil {
			return *v
		}
		var ret DataEncryptionResponse
		return ret
	}).(DataEncryptionResponseOutput)
}

// Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup
func (o DataEncryptionResponsePtrOutput) GeoBackupKeyURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.GeoBackupKeyURI
	}).(pulumi.StringPtrOutput)
}

// Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup
func (o DataEncryptionResponsePtrOutput) GeoBackupUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.GeoBackupUserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

// Primary key uri
func (o DataEncryptionResponsePtrOutput) PrimaryKeyURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryKeyURI
	}).(pulumi.StringPtrOutput)
}

// Primary user identity resource id
func (o DataEncryptionResponsePtrOutput) PrimaryUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryUserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

// The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.
func (o DataEncryptionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// High availability properties of a server
type HighAvailability struct {
	// High availability mode for a server.
	Mode *string `pulumi:"mode"`
	// Availability zone of the standby server.
	StandbyAvailabilityZone *string `pulumi:"standbyAvailabilityZone"`
}

// HighAvailabilityInput is an input type that accepts HighAvailabilityArgs and HighAvailabilityOutput values.
// You can construct a concrete instance of `HighAvailabilityInput` via:
//
//	HighAvailabilityArgs{...}
type HighAvailabilityInput interface {
	pulumi.Input

	ToHighAvailabilityOutput() HighAvailabilityOutput
	ToHighAvailabilityOutputWithContext(context.Context) HighAvailabilityOutput
}

// High availability properties of a server
type HighAvailabilityArgs struct {
	// High availability mode for a server.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Availability zone of the standby server.
	StandbyAvailabilityZone pulumi.StringPtrInput `pulumi:"standbyAvailabilityZone"`
}

func (HighAvailabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HighAvailability)(nil)).Elem()
}

func (i HighAvailabilityArgs) ToHighAvailabilityOutput() HighAvailabilityOutput {
	return i.ToHighAvailabilityOutputWithContext(context.Background())
}

func (i HighAvailabilityArgs) ToHighAvailabilityOutputWithContext(ctx context.Context) HighAvailabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HighAvailabilityOutput)
}

func (i HighAvailabilityArgs) ToHighAvailabilityPtrOutput() HighAvailabilityPtrOutput {
	return i.ToHighAvailabilityPtrOutputWithContext(context.Background())
}

func (i HighAvailabilityArgs) ToHighAvailabilityPtrOutputWithContext(ctx context.Context) HighAvailabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HighAvailabilityOutput).ToHighAvailabilityPtrOutputWithContext(ctx)
}

// HighAvailabilityPtrInput is an input type that accepts HighAvailabilityArgs, HighAvailabilityPtr and HighAvailabilityPtrOutput values.
// You can construct a concrete instance of `HighAvailabilityPtrInput` via:
//
//	        HighAvailabilityArgs{...}
//
//	or:
//
//	        nil
type HighAvailabilityPtrInput interface {
	pulumi.Input

	ToHighAvailabilityPtrOutput() HighAvailabilityPtrOutput
	ToHighAvailabilityPtrOutputWithContext(context.Context) HighAvailabilityPtrOutput
}

type highAvailabilityPtrType HighAvailabilityArgs

func HighAvailabilityPtr(v *HighAvailabilityArgs) HighAvailabilityPtrInput {
	return (*highAvailabilityPtrType)(v)
}

func (*highAvailabilityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HighAvailability)(nil)).Elem()
}

func (i *highAvailabilityPtrType) ToHighAvailabilityPtrOutput() HighAvailabilityPtrOutput {
	return i.ToHighAvailabilityPtrOutputWithContext(context.Background())
}

func (i *highAvailabilityPtrType) ToHighAvailabilityPtrOutputWithContext(ctx context.Context) HighAvailabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HighAvailabilityPtrOutput)
}

// High availability properties of a server
type HighAvailabilityOutput struct{ *pulumi.OutputState }

func (HighAvailabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HighAvailability)(nil)).Elem()
}

func (o HighAvailabilityOutput) ToHighAvailabilityOutput() HighAvailabilityOutput {
	return o
}

func (o HighAvailabilityOutput) ToHighAvailabilityOutputWithContext(ctx context.Context) HighAvailabilityOutput {
	return o
}

func (o HighAvailabilityOutput) ToHighAvailabilityPtrOutput() HighAvailabilityPtrOutput {
	return o.ToHighAvailabilityPtrOutputWithContext(context.Background())
}

func (o HighAvailabilityOutput) ToHighAvailabilityPtrOutputWithContext(ctx context.Context) HighAvailabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HighAvailability) *HighAvailability {
		return &v
	}).(HighAvailabilityPtrOutput)
}

// High availability mode for a server.
func (o HighAvailabilityOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HighAvailability) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Availability zone of the standby server.
func (o HighAvailabilityOutput) StandbyAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HighAvailability) *string { return v.StandbyAvailabilityZone }).(pulumi.StringPtrOutput)
}

type HighAvailabilityPtrOutput struct{ *pulumi.OutputState }

func (HighAvailabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HighAvailability)(nil)).Elem()
}

func (o HighAvailabilityPtrOutput) ToHighAvailabilityPtrOutput() HighAvailabilityPtrOutput {
	return o
}

func (o HighAvailabilityPtrOutput) ToHighAvailabilityPtrOutputWithContext(ctx context.Context) HighAvailabilityPtrOutput {
	return o
}

func (o HighAvailabilityPtrOutput) Elem() HighAvailabilityOutput {
	return o.ApplyT(func(v *HighAvailability) HighAvailability {
		if v != nil {
			return *v
		}
		var ret HighAvailability
		return ret
	}).(HighAvailabilityOutput)
}

// High availability mode for a server.
func (o HighAvailabilityPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HighAvailability) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Availability zone of the standby server.
func (o HighAvailabilityPtrOutput) StandbyAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HighAvailability) *string {
		if v == nil {
			return nil
		}
		return v.StandbyAvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// High availability properties of a server
type HighAvailabilityResponse struct {
	// High availability mode for a server.
	Mode *string `pulumi:"mode"`
	// Availability zone of the standby server.
	StandbyAvailabilityZone *string `pulumi:"standbyAvailabilityZone"`
	// The state of server high availability.
	State string `pulumi:"state"`
}

// High availability properties of a server
type HighAvailabilityResponseOutput struct{ *pulumi.OutputState }

func (HighAvailabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HighAvailabilityResponse)(nil)).Elem()
}

func (o HighAvailabilityResponseOutput) ToHighAvailabilityResponseOutput() HighAvailabilityResponseOutput {
	return o
}

func (o HighAvailabilityResponseOutput) ToHighAvailabilityResponseOutputWithContext(ctx context.Context) HighAvailabilityResponseOutput {
	return o
}

// High availability mode for a server.
func (o HighAvailabilityResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HighAvailabilityResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Availability zone of the standby server.
func (o HighAvailabilityResponseOutput) StandbyAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HighAvailabilityResponse) *string { return v.StandbyAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The state of server high availability.
func (o HighAvailabilityResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v HighAvailabilityResponse) string { return v.State }).(pulumi.StringOutput)
}

type HighAvailabilityResponsePtrOutput struct{ *pulumi.OutputState }

func (HighAvailabilityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HighAvailabilityResponse)(nil)).Elem()
}

func (o HighAvailabilityResponsePtrOutput) ToHighAvailabilityResponsePtrOutput() HighAvailabilityResponsePtrOutput {
	return o
}

func (o HighAvailabilityResponsePtrOutput) ToHighAvailabilityResponsePtrOutputWithContext(ctx context.Context) HighAvailabilityResponsePtrOutput {
	return o
}

func (o HighAvailabilityResponsePtrOutput) Elem() HighAvailabilityResponseOutput {
	return o.ApplyT(func(v *HighAvailabilityResponse) HighAvailabilityResponse {
		if v != nil {
			return *v
		}
		var ret HighAvailabilityResponse
		return ret
	}).(HighAvailabilityResponseOutput)
}

// High availability mode for a server.
func (o HighAvailabilityResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HighAvailabilityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Availability zone of the standby server.
func (o HighAvailabilityResponsePtrOutput) StandbyAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HighAvailabilityResponse) *string {
		if v == nil {
			return nil
		}
		return v.StandbyAvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// The state of server high availability.
func (o HighAvailabilityResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HighAvailabilityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// Import source related properties.
type ImportSourceProperties struct {
	// Relative path of data directory in storage.
	DataDirPath *string `pulumi:"dataDirPath"`
	// Sas token for accessing source storage. Read and list permissions are required for sas token.
	SasToken *string `pulumi:"sasToken"`
	// Storage type of import source.
	StorageType *string `pulumi:"storageType"`
	// Uri of the import source storage.
	StorageUrl *string `pulumi:"storageUrl"`
}

// ImportSourcePropertiesInput is an input type that accepts ImportSourcePropertiesArgs and ImportSourcePropertiesOutput values.
// You can construct a concrete instance of `ImportSourcePropertiesInput` via:
//
//	ImportSourcePropertiesArgs{...}
type ImportSourcePropertiesInput interface {
	pulumi.Input

	ToImportSourcePropertiesOutput() ImportSourcePropertiesOutput
	ToImportSourcePropertiesOutputWithContext(context.Context) ImportSourcePropertiesOutput
}

// Import source related properties.
type ImportSourcePropertiesArgs struct {
	// Relative path of data directory in storage.
	DataDirPath pulumi.StringPtrInput `pulumi:"dataDirPath"`
	// Sas token for accessing source storage. Read and list permissions are required for sas token.
	SasToken pulumi.StringPtrInput `pulumi:"sasToken"`
	// Storage type of import source.
	StorageType pulumi.StringPtrInput `pulumi:"storageType"`
	// Uri of the import source storage.
	StorageUrl pulumi.StringPtrInput `pulumi:"storageUrl"`
}

func (ImportSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImportSourceProperties)(nil)).Elem()
}

func (i ImportSourcePropertiesArgs) ToImportSourcePropertiesOutput() ImportSourcePropertiesOutput {
	return i.ToImportSourcePropertiesOutputWithContext(context.Background())
}

func (i ImportSourcePropertiesArgs) ToImportSourcePropertiesOutputWithContext(ctx context.Context) ImportSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImportSourcePropertiesOutput)
}

func (i ImportSourcePropertiesArgs) ToImportSourcePropertiesPtrOutput() ImportSourcePropertiesPtrOutput {
	return i.ToImportSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i ImportSourcePropertiesArgs) ToImportSourcePropertiesPtrOutputWithContext(ctx context.Context) ImportSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImportSourcePropertiesOutput).ToImportSourcePropertiesPtrOutputWithContext(ctx)
}

// ImportSourcePropertiesPtrInput is an input type that accepts ImportSourcePropertiesArgs, ImportSourcePropertiesPtr and ImportSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `ImportSourcePropertiesPtrInput` via:
//
//	        ImportSourcePropertiesArgs{...}
//
//	or:
//
//	        nil
type ImportSourcePropertiesPtrInput interface {
	pulumi.Input

	ToImportSourcePropertiesPtrOutput() ImportSourcePropertiesPtrOutput
	ToImportSourcePropertiesPtrOutputWithContext(context.Context) ImportSourcePropertiesPtrOutput
}

type importSourcePropertiesPtrType ImportSourcePropertiesArgs

func ImportSourcePropertiesPtr(v *ImportSourcePropertiesArgs) ImportSourcePropertiesPtrInput {
	return (*importSourcePropertiesPtrType)(v)
}

func (*importSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImportSourceProperties)(nil)).Elem()
}

func (i *importSourcePropertiesPtrType) ToImportSourcePropertiesPtrOutput() ImportSourcePropertiesPtrOutput {
	return i.ToImportSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *importSourcePropertiesPtrType) ToImportSourcePropertiesPtrOutputWithContext(ctx context.Context) ImportSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImportSourcePropertiesPtrOutput)
}

// Import source related properties.
type ImportSourcePropertiesOutput struct{ *pulumi.OutputState }

func (ImportSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImportSourceProperties)(nil)).Elem()
}

func (o ImportSourcePropertiesOutput) ToImportSourcePropertiesOutput() ImportSourcePropertiesOutput {
	return o
}

func (o ImportSourcePropertiesOutput) ToImportSourcePropertiesOutputWithContext(ctx context.Context) ImportSourcePropertiesOutput {
	return o
}

func (o ImportSourcePropertiesOutput) ToImportSourcePropertiesPtrOutput() ImportSourcePropertiesPtrOutput {
	return o.ToImportSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o ImportSourcePropertiesOutput) ToImportSourcePropertiesPtrOutputWithContext(ctx context.Context) ImportSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImportSourceProperties) *ImportSourceProperties {
		return &v
	}).(ImportSourcePropertiesPtrOutput)
}

// Relative path of data directory in storage.
func (o ImportSourcePropertiesOutput) DataDirPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImportSourceProperties) *string { return v.DataDirPath }).(pulumi.StringPtrOutput)
}

// Sas token for accessing source storage. Read and list permissions are required for sas token.
func (o ImportSourcePropertiesOutput) SasToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImportSourceProperties) *string { return v.SasToken }).(pulumi.StringPtrOutput)
}

// Storage type of import source.
func (o ImportSourcePropertiesOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImportSourceProperties) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

// Uri of the import source storage.
func (o ImportSourcePropertiesOutput) StorageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImportSourceProperties) *string { return v.StorageUrl }).(pulumi.StringPtrOutput)
}

type ImportSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ImportSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImportSourceProperties)(nil)).Elem()
}

func (o ImportSourcePropertiesPtrOutput) ToImportSourcePropertiesPtrOutput() ImportSourcePropertiesPtrOutput {
	return o
}

func (o ImportSourcePropertiesPtrOutput) ToImportSourcePropertiesPtrOutputWithContext(ctx context.Context) ImportSourcePropertiesPtrOutput {
	return o
}

func (o ImportSourcePropertiesPtrOutput) Elem() ImportSourcePropertiesOutput {
	return o.ApplyT(func(v *ImportSourceProperties) ImportSourceProperties {
		if v != nil {
			return *v
		}
		var ret ImportSourceProperties
		return ret
	}).(ImportSourcePropertiesOutput)
}

// Relative path of data directory in storage.
func (o ImportSourcePropertiesPtrOutput) DataDirPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImportSourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataDirPath
	}).(pulumi.StringPtrOutput)
}

// Sas token for accessing source storage. Read and list permissions are required for sas token.
func (o ImportSourcePropertiesPtrOutput) SasToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImportSourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.SasToken
	}).(pulumi.StringPtrOutput)
}

// Storage type of import source.
func (o ImportSourcePropertiesPtrOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImportSourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.StorageType
	}).(pulumi.StringPtrOutput)
}

// Uri of the import source storage.
func (o ImportSourcePropertiesPtrOutput) StorageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImportSourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.StorageUrl
	}).(pulumi.StringPtrOutput)
}

// Import source related properties.
type ImportSourcePropertiesResponse struct {
	// Relative path of data directory in storage.
	DataDirPath *string `pulumi:"dataDirPath"`
	// Storage type of import source.
	StorageType *string `pulumi:"storageType"`
	// Uri of the import source storage.
	StorageUrl *string `pulumi:"storageUrl"`
}

// Import source related properties.
type ImportSourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (ImportSourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImportSourcePropertiesResponse)(nil)).Elem()
}

func (o ImportSourcePropertiesResponseOutput) ToImportSourcePropertiesResponseOutput() ImportSourcePropertiesResponseOutput {
	return o
}

func (o ImportSourcePropertiesResponseOutput) ToImportSourcePropertiesResponseOutputWithContext(ctx context.Context) ImportSourcePropertiesResponseOutput {
	return o
}

// Relative path of data directory in storage.
func (o ImportSourcePropertiesResponseOutput) DataDirPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImportSourcePropertiesResponse) *string { return v.DataDirPath }).(pulumi.StringPtrOutput)
}

// Storage type of import source.
func (o ImportSourcePropertiesResponseOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImportSourcePropertiesResponse) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

// Uri of the import source storage.
func (o ImportSourcePropertiesResponseOutput) StorageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImportSourcePropertiesResponse) *string { return v.StorageUrl }).(pulumi.StringPtrOutput)
}

type ImportSourcePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ImportSourcePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImportSourcePropertiesResponse)(nil)).Elem()
}

func (o ImportSourcePropertiesResponsePtrOutput) ToImportSourcePropertiesResponsePtrOutput() ImportSourcePropertiesResponsePtrOutput {
	return o
}

func (o ImportSourcePropertiesResponsePtrOutput) ToImportSourcePropertiesResponsePtrOutputWithContext(ctx context.Context) ImportSourcePropertiesResponsePtrOutput {
	return o
}

func (o ImportSourcePropertiesResponsePtrOutput) Elem() ImportSourcePropertiesResponseOutput {
	return o.ApplyT(func(v *ImportSourcePropertiesResponse) ImportSourcePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ImportSourcePropertiesResponse
		return ret
	}).(ImportSourcePropertiesResponseOutput)
}

// Relative path of data directory in storage.
func (o ImportSourcePropertiesResponsePtrOutput) DataDirPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImportSourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DataDirPath
	}).(pulumi.StringPtrOutput)
}

// Storage type of import source.
func (o ImportSourcePropertiesResponsePtrOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImportSourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageType
	}).(pulumi.StringPtrOutput)
}

// Uri of the import source storage.
func (o ImportSourcePropertiesResponsePtrOutput) StorageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImportSourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageUrl
	}).(pulumi.StringPtrOutput)
}

// Maintenance window of a server.
type MaintenanceWindow struct {
	// indicates whether custom window is enabled or disabled
	CustomWindow *string `pulumi:"customWindow"`
	// day of week for maintenance window
	DayOfWeek *int `pulumi:"dayOfWeek"`
	// start hour for maintenance window
	StartHour *int `pulumi:"startHour"`
	// start minute for maintenance window
	StartMinute *int `pulumi:"startMinute"`
}

// MaintenanceWindowInput is an input type that accepts MaintenanceWindowArgs and MaintenanceWindowOutput values.
// You can construct a concrete instance of `MaintenanceWindowInput` via:
//
//	MaintenanceWindowArgs{...}
type MaintenanceWindowInput interface {
	pulumi.Input

	ToMaintenanceWindowOutput() MaintenanceWindowOutput
	ToMaintenanceWindowOutputWithContext(context.Context) MaintenanceWindowOutput
}

// Maintenance window of a server.
type MaintenanceWindowArgs struct {
	// indicates whether custom window is enabled or disabled
	CustomWindow pulumi.StringPtrInput `pulumi:"customWindow"`
	// day of week for maintenance window
	DayOfWeek pulumi.IntPtrInput `pulumi:"dayOfWeek"`
	// start hour for maintenance window
	StartHour pulumi.IntPtrInput `pulumi:"startHour"`
	// start minute for maintenance window
	StartMinute pulumi.IntPtrInput `pulumi:"startMinute"`
}

func (MaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindow)(nil)).Elem()
}

func (i MaintenanceWindowArgs) ToMaintenanceWindowOutput() MaintenanceWindowOutput {
	return i.ToMaintenanceWindowOutputWithContext(context.Background())
}

func (i MaintenanceWindowArgs) ToMaintenanceWindowOutputWithContext(ctx context.Context) MaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowOutput)
}

func (i MaintenanceWindowArgs) ToMaintenanceWindowPtrOutput() MaintenanceWindowPtrOutput {
	return i.ToMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i MaintenanceWindowArgs) ToMaintenanceWindowPtrOutputWithContext(ctx context.Context) MaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowOutput).ToMaintenanceWindowPtrOutputWithContext(ctx)
}

// MaintenanceWindowPtrInput is an input type that accepts MaintenanceWindowArgs, MaintenanceWindowPtr and MaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `MaintenanceWindowPtrInput` via:
//
//	        MaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type MaintenanceWindowPtrInput interface {
	pulumi.Input

	ToMaintenanceWindowPtrOutput() MaintenanceWindowPtrOutput
	ToMaintenanceWindowPtrOutputWithContext(context.Context) MaintenanceWindowPtrOutput
}

type maintenanceWindowPtrType MaintenanceWindowArgs

func MaintenanceWindowPtr(v *MaintenanceWindowArgs) MaintenanceWindowPtrInput {
	return (*maintenanceWindowPtrType)(v)
}

func (*maintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindow)(nil)).Elem()
}

func (i *maintenanceWindowPtrType) ToMaintenanceWindowPtrOutput() MaintenanceWindowPtrOutput {
	return i.ToMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *maintenanceWindowPtrType) ToMaintenanceWindowPtrOutputWithContext(ctx context.Context) MaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowPtrOutput)
}

// Maintenance window of a server.
type MaintenanceWindowOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindow)(nil)).Elem()
}

func (o MaintenanceWindowOutput) ToMaintenanceWindowOutput() MaintenanceWindowOutput {
	return o
}

func (o MaintenanceWindowOutput) ToMaintenanceWindowOutputWithContext(ctx context.Context) MaintenanceWindowOutput {
	return o
}

func (o MaintenanceWindowOutput) ToMaintenanceWindowPtrOutput() MaintenanceWindowPtrOutput {
	return o.ToMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowOutput) ToMaintenanceWindowPtrOutputWithContext(ctx context.Context) MaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenanceWindow) *MaintenanceWindow {
		return &v
	}).(MaintenanceWindowPtrOutput)
}

// indicates whether custom window is enabled or disabled
func (o MaintenanceWindowOutput) CustomWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindow) *string { return v.CustomWindow }).(pulumi.StringPtrOutput)
}

// day of week for maintenance window
func (o MaintenanceWindowOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaintenanceWindow) *int { return v.DayOfWeek }).(pulumi.IntPtrOutput)
}

// start hour for maintenance window
func (o MaintenanceWindowOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaintenanceWindow) *int { return v.StartHour }).(pulumi.IntPtrOutput)
}

// start minute for maintenance window
func (o MaintenanceWindowOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaintenanceWindow) *int { return v.StartMinute }).(pulumi.IntPtrOutput)
}

type MaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindow)(nil)).Elem()
}

func (o MaintenanceWindowPtrOutput) ToMaintenanceWindowPtrOutput() MaintenanceWindowPtrOutput {
	return o
}

func (o MaintenanceWindowPtrOutput) ToMaintenanceWindowPtrOutputWithContext(ctx context.Context) MaintenanceWindowPtrOutput {
	return o
}

func (o MaintenanceWindowPtrOutput) Elem() MaintenanceWindowOutput {
	return o.ApplyT(func(v *MaintenanceWindow) MaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret MaintenanceWindow
		return ret
	}).(MaintenanceWindowOutput)
}

// indicates whether custom window is enabled or disabled
func (o MaintenanceWindowPtrOutput) CustomWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return v.CustomWindow
	}).(pulumi.StringPtrOutput)
}

// day of week for maintenance window
func (o MaintenanceWindowPtrOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.DayOfWeek
	}).(pulumi.IntPtrOutput)
}

// start hour for maintenance window
func (o MaintenanceWindowPtrOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.StartHour
	}).(pulumi.IntPtrOutput)
}

// start minute for maintenance window
func (o MaintenanceWindowPtrOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.StartMinute
	}).(pulumi.IntPtrOutput)
}

// Maintenance window of a server.
type MaintenanceWindowResponse struct {
	// indicates whether custom window is enabled or disabled
	CustomWindow *string `pulumi:"customWindow"`
	// day of week for maintenance window
	DayOfWeek *int `pulumi:"dayOfWeek"`
	// start hour for maintenance window
	StartHour *int `pulumi:"startHour"`
	// start minute for maintenance window
	StartMinute *int `pulumi:"startMinute"`
}

// Maintenance window of a server.
type MaintenanceWindowResponseOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowResponse)(nil)).Elem()
}

func (o MaintenanceWindowResponseOutput) ToMaintenanceWindowResponseOutput() MaintenanceWindowResponseOutput {
	return o
}

func (o MaintenanceWindowResponseOutput) ToMaintenanceWindowResponseOutputWithContext(ctx context.Context) MaintenanceWindowResponseOutput {
	return o
}

// indicates whether custom window is enabled or disabled
func (o MaintenanceWindowResponseOutput) CustomWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowResponse) *string { return v.CustomWindow }).(pulumi.StringPtrOutput)
}

// day of week for maintenance window
func (o MaintenanceWindowResponseOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowResponse) *int { return v.DayOfWeek }).(pulumi.IntPtrOutput)
}

// start hour for maintenance window
func (o MaintenanceWindowResponseOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowResponse) *int { return v.StartHour }).(pulumi.IntPtrOutput)
}

// start minute for maintenance window
func (o MaintenanceWindowResponseOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowResponse) *int { return v.StartMinute }).(pulumi.IntPtrOutput)
}

type MaintenanceWindowResponsePtrOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowResponse)(nil)).Elem()
}

func (o MaintenanceWindowResponsePtrOutput) ToMaintenanceWindowResponsePtrOutput() MaintenanceWindowResponsePtrOutput {
	return o
}

func (o MaintenanceWindowResponsePtrOutput) ToMaintenanceWindowResponsePtrOutputWithContext(ctx context.Context) MaintenanceWindowResponsePtrOutput {
	return o
}

func (o MaintenanceWindowResponsePtrOutput) Elem() MaintenanceWindowResponseOutput {
	return o.ApplyT(func(v *MaintenanceWindowResponse) MaintenanceWindowResponse {
		if v != nil {
			return *v
		}
		var ret MaintenanceWindowResponse
		return ret
	}).(MaintenanceWindowResponseOutput)
}

// indicates whether custom window is enabled or disabled
func (o MaintenanceWindowResponsePtrOutput) CustomWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomWindow
	}).(pulumi.StringPtrOutput)
}

// day of week for maintenance window
func (o MaintenanceWindowResponsePtrOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowResponse) *int {
		if v == nil {
			return nil
		}
		return v.DayOfWeek
	}).(pulumi.IntPtrOutput)
}

// start hour for maintenance window
func (o MaintenanceWindowResponsePtrOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowResponse) *int {
		if v == nil {
			return nil
		}
		return v.StartHour
	}).(pulumi.IntPtrOutput)
}

// start minute for maintenance window
func (o MaintenanceWindowResponsePtrOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowResponse) *int {
		if v == nil {
			return nil
		}
		return v.StartMinute
	}).(pulumi.IntPtrOutput)
}

// Properties to configure Identity for Bring your Own Keys
type MySQLServerIdentity struct {
	// Type of managed service identity.
	Type *string `pulumi:"type"`
	// Metadata of user assigned identity.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// MySQLServerIdentityInput is an input type that accepts MySQLServerIdentityArgs and MySQLServerIdentityOutput values.
// You can construct a concrete instance of `MySQLServerIdentityInput` via:
//
//	MySQLServerIdentityArgs{...}
type MySQLServerIdentityInput interface {
	pulumi.Input

	ToMySQLServerIdentityOutput() MySQLServerIdentityOutput
	ToMySQLServerIdentityOutputWithContext(context.Context) MySQLServerIdentityOutput
}

// Properties to configure Identity for Bring your Own Keys
type MySQLServerIdentityArgs struct {
	// Type of managed service identity.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Metadata of user assigned identity.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (MySQLServerIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySQLServerIdentity)(nil)).Elem()
}

func (i MySQLServerIdentityArgs) ToMySQLServerIdentityOutput() MySQLServerIdentityOutput {
	return i.ToMySQLServerIdentityOutputWithContext(context.Background())
}

func (i MySQLServerIdentityArgs) ToMySQLServerIdentityOutputWithContext(ctx context.Context) MySQLServerIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySQLServerIdentityOutput)
}

func (i MySQLServerIdentityArgs) ToMySQLServerIdentityPtrOutput() MySQLServerIdentityPtrOutput {
	return i.ToMySQLServerIdentityPtrOutputWithContext(context.Background())
}

func (i MySQLServerIdentityArgs) ToMySQLServerIdentityPtrOutputWithContext(ctx context.Context) MySQLServerIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySQLServerIdentityOutput).ToMySQLServerIdentityPtrOutputWithContext(ctx)
}

// MySQLServerIdentityPtrInput is an input type that accepts MySQLServerIdentityArgs, MySQLServerIdentityPtr and MySQLServerIdentityPtrOutput values.
// You can construct a concrete instance of `MySQLServerIdentityPtrInput` via:
//
//	        MySQLServerIdentityArgs{...}
//
//	or:
//
//	        nil
type MySQLServerIdentityPtrInput interface {
	pulumi.Input

	ToMySQLServerIdentityPtrOutput() MySQLServerIdentityPtrOutput
	ToMySQLServerIdentityPtrOutputWithContext(context.Context) MySQLServerIdentityPtrOutput
}

type mySQLServerIdentityPtrType MySQLServerIdentityArgs

func MySQLServerIdentityPtr(v *MySQLServerIdentityArgs) MySQLServerIdentityPtrInput {
	return (*mySQLServerIdentityPtrType)(v)
}

func (*mySQLServerIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MySQLServerIdentity)(nil)).Elem()
}

func (i *mySQLServerIdentityPtrType) ToMySQLServerIdentityPtrOutput() MySQLServerIdentityPtrOutput {
	return i.ToMySQLServerIdentityPtrOutputWithContext(context.Background())
}

func (i *mySQLServerIdentityPtrType) ToMySQLServerIdentityPtrOutputWithContext(ctx context.Context) MySQLServerIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySQLServerIdentityPtrOutput)
}

// Properties to configure Identity for Bring your Own Keys
type MySQLServerIdentityOutput struct{ *pulumi.OutputState }

func (MySQLServerIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySQLServerIdentity)(nil)).Elem()
}

func (o MySQLServerIdentityOutput) ToMySQLServerIdentityOutput() MySQLServerIdentityOutput {
	return o
}

func (o MySQLServerIdentityOutput) ToMySQLServerIdentityOutputWithContext(ctx context.Context) MySQLServerIdentityOutput {
	return o
}

func (o MySQLServerIdentityOutput) ToMySQLServerIdentityPtrOutput() MySQLServerIdentityPtrOutput {
	return o.ToMySQLServerIdentityPtrOutputWithContext(context.Background())
}

func (o MySQLServerIdentityOutput) ToMySQLServerIdentityPtrOutputWithContext(ctx context.Context) MySQLServerIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MySQLServerIdentity) *MySQLServerIdentity {
		return &v
	}).(MySQLServerIdentityPtrOutput)
}

// Type of managed service identity.
func (o MySQLServerIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySQLServerIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Metadata of user assigned identity.
func (o MySQLServerIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MySQLServerIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type MySQLServerIdentityPtrOutput struct{ *pulumi.OutputState }

func (MySQLServerIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySQLServerIdentity)(nil)).Elem()
}

func (o MySQLServerIdentityPtrOutput) ToMySQLServerIdentityPtrOutput() MySQLServerIdentityPtrOutput {
	return o
}

func (o MySQLServerIdentityPtrOutput) ToMySQLServerIdentityPtrOutputWithContext(ctx context.Context) MySQLServerIdentityPtrOutput {
	return o
}

func (o MySQLServerIdentityPtrOutput) Elem() MySQLServerIdentityOutput {
	return o.ApplyT(func(v *MySQLServerIdentity) MySQLServerIdentity {
		if v != nil {
			return *v
		}
		var ret MySQLServerIdentity
		return ret
	}).(MySQLServerIdentityOutput)
}

// Type of managed service identity.
func (o MySQLServerIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySQLServerIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Metadata of user assigned identity.
func (o MySQLServerIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MySQLServerIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Properties to configure Identity for Bring your Own Keys
type MySQLServerIdentityResponse struct {
	// ObjectId from the KeyVault
	PrincipalId string `pulumi:"principalId"`
	// TenantId from the KeyVault
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity.
	Type *string `pulumi:"type"`
	// Metadata of user assigned identity.
	UserAssignedIdentities map[string][]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Properties to configure Identity for Bring your Own Keys
type MySQLServerIdentityResponseOutput struct{ *pulumi.OutputState }

func (MySQLServerIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySQLServerIdentityResponse)(nil)).Elem()
}

func (o MySQLServerIdentityResponseOutput) ToMySQLServerIdentityResponseOutput() MySQLServerIdentityResponseOutput {
	return o
}

func (o MySQLServerIdentityResponseOutput) ToMySQLServerIdentityResponseOutputWithContext(ctx context.Context) MySQLServerIdentityResponseOutput {
	return o
}

// ObjectId from the KeyVault
func (o MySQLServerIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v MySQLServerIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// TenantId from the KeyVault
func (o MySQLServerIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v MySQLServerIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity.
func (o MySQLServerIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySQLServerIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Metadata of user assigned identity.
func (o MySQLServerIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseArrayMapOutput {
	return o.ApplyT(func(v MySQLServerIdentityResponse) map[string][]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseArrayMapOutput)
}

type MySQLServerIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (MySQLServerIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySQLServerIdentityResponse)(nil)).Elem()
}

func (o MySQLServerIdentityResponsePtrOutput) ToMySQLServerIdentityResponsePtrOutput() MySQLServerIdentityResponsePtrOutput {
	return o
}

func (o MySQLServerIdentityResponsePtrOutput) ToMySQLServerIdentityResponsePtrOutputWithContext(ctx context.Context) MySQLServerIdentityResponsePtrOutput {
	return o
}

func (o MySQLServerIdentityResponsePtrOutput) Elem() MySQLServerIdentityResponseOutput {
	return o.ApplyT(func(v *MySQLServerIdentityResponse) MySQLServerIdentityResponse {
		if v != nil {
			return *v
		}
		var ret MySQLServerIdentityResponse
		return ret
	}).(MySQLServerIdentityResponseOutput)
}

// ObjectId from the KeyVault
func (o MySQLServerIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySQLServerIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// TenantId from the KeyVault
func (o MySQLServerIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySQLServerIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity.
func (o MySQLServerIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySQLServerIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Metadata of user assigned identity.
func (o MySQLServerIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseArrayMapOutput {
	return o.ApplyT(func(v *MySQLServerIdentityResponse) map[string][]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseArrayMapOutput)
}

// Billing information related properties of a server.
type MySQLServerSku struct {
	// The name of the sku, e.g. Standard_D32s_v3.
	Name string `pulumi:"name"`
	// The tier of the particular SKU, e.g. GeneralPurpose.
	Tier string `pulumi:"tier"`
}

// MySQLServerSkuInput is an input type that accepts MySQLServerSkuArgs and MySQLServerSkuOutput values.
// You can construct a concrete instance of `MySQLServerSkuInput` via:
//
//	MySQLServerSkuArgs{...}
type MySQLServerSkuInput interface {
	pulumi.Input

	ToMySQLServerSkuOutput() MySQLServerSkuOutput
	ToMySQLServerSkuOutputWithContext(context.Context) MySQLServerSkuOutput
}

// Billing information related properties of a server.
type MySQLServerSkuArgs struct {
	// The name of the sku, e.g. Standard_D32s_v3.
	Name pulumi.StringInput `pulumi:"name"`
	// The tier of the particular SKU, e.g. GeneralPurpose.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (MySQLServerSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySQLServerSku)(nil)).Elem()
}

func (i MySQLServerSkuArgs) ToMySQLServerSkuOutput() MySQLServerSkuOutput {
	return i.ToMySQLServerSkuOutputWithContext(context.Background())
}

func (i MySQLServerSkuArgs) ToMySQLServerSkuOutputWithContext(ctx context.Context) MySQLServerSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySQLServerSkuOutput)
}

func (i MySQLServerSkuArgs) ToMySQLServerSkuPtrOutput() MySQLServerSkuPtrOutput {
	return i.ToMySQLServerSkuPtrOutputWithContext(context.Background())
}

func (i MySQLServerSkuArgs) ToMySQLServerSkuPtrOutputWithContext(ctx context.Context) MySQLServerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySQLServerSkuOutput).ToMySQLServerSkuPtrOutputWithContext(ctx)
}

// MySQLServerSkuPtrInput is an input type that accepts MySQLServerSkuArgs, MySQLServerSkuPtr and MySQLServerSkuPtrOutput values.
// You can construct a concrete instance of `MySQLServerSkuPtrInput` via:
//
//	        MySQLServerSkuArgs{...}
//
//	or:
//
//	        nil
type MySQLServerSkuPtrInput interface {
	pulumi.Input

	ToMySQLServerSkuPtrOutput() MySQLServerSkuPtrOutput
	ToMySQLServerSkuPtrOutputWithContext(context.Context) MySQLServerSkuPtrOutput
}

type mySQLServerSkuPtrType MySQLServerSkuArgs

func MySQLServerSkuPtr(v *MySQLServerSkuArgs) MySQLServerSkuPtrInput {
	return (*mySQLServerSkuPtrType)(v)
}

func (*mySQLServerSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MySQLServerSku)(nil)).Elem()
}

func (i *mySQLServerSkuPtrType) ToMySQLServerSkuPtrOutput() MySQLServerSkuPtrOutput {
	return i.ToMySQLServerSkuPtrOutputWithContext(context.Background())
}

func (i *mySQLServerSkuPtrType) ToMySQLServerSkuPtrOutputWithContext(ctx context.Context) MySQLServerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySQLServerSkuPtrOutput)
}

// Billing information related properties of a server.
type MySQLServerSkuOutput struct{ *pulumi.OutputState }

func (MySQLServerSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySQLServerSku)(nil)).Elem()
}

func (o MySQLServerSkuOutput) ToMySQLServerSkuOutput() MySQLServerSkuOutput {
	return o
}

func (o MySQLServerSkuOutput) ToMySQLServerSkuOutputWithContext(ctx context.Context) MySQLServerSkuOutput {
	return o
}

func (o MySQLServerSkuOutput) ToMySQLServerSkuPtrOutput() MySQLServerSkuPtrOutput {
	return o.ToMySQLServerSkuPtrOutputWithContext(context.Background())
}

func (o MySQLServerSkuOutput) ToMySQLServerSkuPtrOutputWithContext(ctx context.Context) MySQLServerSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MySQLServerSku) *MySQLServerSku {
		return &v
	}).(MySQLServerSkuPtrOutput)
}

// The name of the sku, e.g. Standard_D32s_v3.
func (o MySQLServerSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MySQLServerSku) string { return v.Name }).(pulumi.StringOutput)
}

// The tier of the particular SKU, e.g. GeneralPurpose.
func (o MySQLServerSkuOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v MySQLServerSku) string { return v.Tier }).(pulumi.StringOutput)
}

type MySQLServerSkuPtrOutput struct{ *pulumi.OutputState }

func (MySQLServerSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySQLServerSku)(nil)).Elem()
}

func (o MySQLServerSkuPtrOutput) ToMySQLServerSkuPtrOutput() MySQLServerSkuPtrOutput {
	return o
}

func (o MySQLServerSkuPtrOutput) ToMySQLServerSkuPtrOutputWithContext(ctx context.Context) MySQLServerSkuPtrOutput {
	return o
}

func (o MySQLServerSkuPtrOutput) Elem() MySQLServerSkuOutput {
	return o.ApplyT(func(v *MySQLServerSku) MySQLServerSku {
		if v != nil {
			return *v
		}
		var ret MySQLServerSku
		return ret
	}).(MySQLServerSkuOutput)
}

// The name of the sku, e.g. Standard_D32s_v3.
func (o MySQLServerSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySQLServerSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the particular SKU, e.g. GeneralPurpose.
func (o MySQLServerSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySQLServerSku) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// Billing information related properties of a server.
type MySQLServerSkuResponse struct {
	// The name of the sku, e.g. Standard_D32s_v3.
	Name string `pulumi:"name"`
	// The tier of the particular SKU, e.g. GeneralPurpose.
	Tier string `pulumi:"tier"`
}

// Billing information related properties of a server.
type MySQLServerSkuResponseOutput struct{ *pulumi.OutputState }

func (MySQLServerSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySQLServerSkuResponse)(nil)).Elem()
}

func (o MySQLServerSkuResponseOutput) ToMySQLServerSkuResponseOutput() MySQLServerSkuResponseOutput {
	return o
}

func (o MySQLServerSkuResponseOutput) ToMySQLServerSkuResponseOutputWithContext(ctx context.Context) MySQLServerSkuResponseOutput {
	return o
}

// The name of the sku, e.g. Standard_D32s_v3.
func (o MySQLServerSkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MySQLServerSkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The tier of the particular SKU, e.g. GeneralPurpose.
func (o MySQLServerSkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v MySQLServerSkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type MySQLServerSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (MySQLServerSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySQLServerSkuResponse)(nil)).Elem()
}

func (o MySQLServerSkuResponsePtrOutput) ToMySQLServerSkuResponsePtrOutput() MySQLServerSkuResponsePtrOutput {
	return o
}

func (o MySQLServerSkuResponsePtrOutput) ToMySQLServerSkuResponsePtrOutputWithContext(ctx context.Context) MySQLServerSkuResponsePtrOutput {
	return o
}

func (o MySQLServerSkuResponsePtrOutput) Elem() MySQLServerSkuResponseOutput {
	return o.ApplyT(func(v *MySQLServerSkuResponse) MySQLServerSkuResponse {
		if v != nil {
			return *v
		}
		var ret MySQLServerSkuResponse
		return ret
	}).(MySQLServerSkuResponseOutput)
}

// The name of the sku, e.g. Standard_D32s_v3.
func (o MySQLServerSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySQLServerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the particular SKU, e.g. GeneralPurpose.
func (o MySQLServerSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySQLServerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// Network related properties of a server
type Network struct {
	// Delegated subnet resource id used to setup vnet for a server.
	DelegatedSubnetResourceId *string `pulumi:"delegatedSubnetResourceId"`
	// Private DNS zone resource id.
	PrivateDnsZoneResourceId *string `pulumi:"privateDnsZoneResourceId"`
	// Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
}

// NetworkInput is an input type that accepts NetworkArgs and NetworkOutput values.
// You can construct a concrete instance of `NetworkInput` via:
//
//	NetworkArgs{...}
type NetworkInput interface {
	pulumi.Input

	ToNetworkOutput() NetworkOutput
	ToNetworkOutputWithContext(context.Context) NetworkOutput
}

// Network related properties of a server
type NetworkArgs struct {
	// Delegated subnet resource id used to setup vnet for a server.
	DelegatedSubnetResourceId pulumi.StringPtrInput `pulumi:"delegatedSubnetResourceId"`
	// Private DNS zone resource id.
	PrivateDnsZoneResourceId pulumi.StringPtrInput `pulumi:"privateDnsZoneResourceId"`
	// Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
}

func (NetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Network)(nil)).Elem()
}

func (i NetworkArgs) ToNetworkOutput() NetworkOutput {
	return i.ToNetworkOutputWithContext(context.Background())
}

func (i NetworkArgs) ToNetworkOutputWithContext(ctx context.Context) NetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkOutput)
}

func (i NetworkArgs) ToNetworkPtrOutput() NetworkPtrOutput {
	return i.ToNetworkPtrOutputWithContext(context.Background())
}

func (i NetworkArgs) ToNetworkPtrOutputWithContext(ctx context.Context) NetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkOutput).ToNetworkPtrOutputWithContext(ctx)
}

// NetworkPtrInput is an input type that accepts NetworkArgs, NetworkPtr and NetworkPtrOutput values.
// You can construct a concrete instance of `NetworkPtrInput` via:
//
//	        NetworkArgs{...}
//
//	or:
//
//	        nil
type NetworkPtrInput interface {
	pulumi.Input

	ToNetworkPtrOutput() NetworkPtrOutput
	ToNetworkPtrOutputWithContext(context.Context) NetworkPtrOutput
}

type networkPtrType NetworkArgs

func NetworkPtr(v *NetworkArgs) NetworkPtrInput {
	return (*networkPtrType)(v)
}

func (*networkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Network)(nil)).Elem()
}

func (i *networkPtrType) ToNetworkPtrOutput() NetworkPtrOutput {
	return i.ToNetworkPtrOutputWithContext(context.Background())
}

func (i *networkPtrType) ToNetworkPtrOutputWithContext(ctx context.Context) NetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPtrOutput)
}

// Network related properties of a server
type NetworkOutput struct{ *pulumi.OutputState }

func (NetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Network)(nil)).Elem()
}

func (o NetworkOutput) ToNetworkOutput() NetworkOutput {
	return o
}

func (o NetworkOutput) ToNetworkOutputWithContext(ctx context.Context) NetworkOutput {
	return o
}

func (o NetworkOutput) ToNetworkPtrOutput() NetworkPtrOutput {
	return o.ToNetworkPtrOutputWithContext(context.Background())
}

func (o NetworkOutput) ToNetworkPtrOutputWithContext(ctx context.Context) NetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Network) *Network {
		return &v
	}).(NetworkPtrOutput)
}

// Delegated subnet resource id used to setup vnet for a server.
func (o NetworkOutput) DelegatedSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Network) *string { return v.DelegatedSubnetResourceId }).(pulumi.StringPtrOutput)
}

// Private DNS zone resource id.
func (o NetworkOutput) PrivateDnsZoneResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Network) *string { return v.PrivateDnsZoneResourceId }).(pulumi.StringPtrOutput)
}

// Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.
func (o NetworkOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Network) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

type NetworkPtrOutput struct{ *pulumi.OutputState }

func (NetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Network)(nil)).Elem()
}

func (o NetworkPtrOutput) ToNetworkPtrOutput() NetworkPtrOutput {
	return o
}

func (o NetworkPtrOutput) ToNetworkPtrOutputWithContext(ctx context.Context) NetworkPtrOutput {
	return o
}

func (o NetworkPtrOutput) Elem() NetworkOutput {
	return o.ApplyT(func(v *Network) Network {
		if v != nil {
			return *v
		}
		var ret Network
		return ret
	}).(NetworkOutput)
}

// Delegated subnet resource id used to setup vnet for a server.
func (o NetworkPtrOutput) DelegatedSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Network) *string {
		if v == nil {
			return nil
		}
		return v.DelegatedSubnetResourceId
	}).(pulumi.StringPtrOutput)
}

// Private DNS zone resource id.
func (o NetworkPtrOutput) PrivateDnsZoneResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Network) *string {
		if v == nil {
			return nil
		}
		return v.PrivateDnsZoneResourceId
	}).(pulumi.StringPtrOutput)
}

// Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.
func (o NetworkPtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Network) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

// Network related properties of a server
type NetworkResponse struct {
	// Delegated subnet resource id used to setup vnet for a server.
	DelegatedSubnetResourceId *string `pulumi:"delegatedSubnetResourceId"`
	// Private DNS zone resource id.
	PrivateDnsZoneResourceId *string `pulumi:"privateDnsZoneResourceId"`
	// Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
}

// Network related properties of a server
type NetworkResponseOutput struct{ *pulumi.OutputState }

func (NetworkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkResponse)(nil)).Elem()
}

func (o NetworkResponseOutput) ToNetworkResponseOutput() NetworkResponseOutput {
	return o
}

func (o NetworkResponseOutput) ToNetworkResponseOutputWithContext(ctx context.Context) NetworkResponseOutput {
	return o
}

// Delegated subnet resource id used to setup vnet for a server.
func (o NetworkResponseOutput) DelegatedSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkResponse) *string { return v.DelegatedSubnetResourceId }).(pulumi.StringPtrOutput)
}

// Private DNS zone resource id.
func (o NetworkResponseOutput) PrivateDnsZoneResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkResponse) *string { return v.PrivateDnsZoneResourceId }).(pulumi.StringPtrOutput)
}

// Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.
func (o NetworkResponseOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkResponse) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

type NetworkResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkResponse)(nil)).Elem()
}

func (o NetworkResponsePtrOutput) ToNetworkResponsePtrOutput() NetworkResponsePtrOutput {
	return o
}

func (o NetworkResponsePtrOutput) ToNetworkResponsePtrOutputWithContext(ctx context.Context) NetworkResponsePtrOutput {
	return o
}

func (o NetworkResponsePtrOutput) Elem() NetworkResponseOutput {
	return o.ApplyT(func(v *NetworkResponse) NetworkResponse {
		if v != nil {
			return *v
		}
		var ret NetworkResponse
		return ret
	}).(NetworkResponseOutput)
}

// Delegated subnet resource id used to setup vnet for a server.
func (o NetworkResponsePtrOutput) DelegatedSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkResponse) *string {
		if v == nil {
			return nil
		}
		return v.DelegatedSubnetResourceId
	}).(pulumi.StringPtrOutput)
}

// Private DNS zone resource id.
func (o NetworkResponsePtrOutput) PrivateDnsZoneResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateDnsZoneResourceId
	}).(pulumi.StringPtrOutput)
}

// Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration.
func (o NetworkResponsePtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

// The private endpoint connection resource.
type PrivateEndpointConnectionResponse struct {
	// The group ids for the private endpoint resource.
	GroupIds []string `pulumi:"groupIds"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The private endpoint resource.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// The private endpoint connection resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// The group ids for the private endpoint resource.
func (o PrivateEndpointConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The private endpoint resource.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o PrivateEndpointConnectionResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// The private endpoint resource.
type PrivateEndpointResponse struct {
	// The ARM identifier for private endpoint.
	Id string `pulumi:"id"`
}

// The private endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// The ARM identifier for private endpoint.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// The ARM identifier for private endpoint.
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Storage Profile properties of a server
type Storage struct {
	// Enable Storage Auto Grow or not.
	AutoGrow *string `pulumi:"autoGrow"`
	// Enable IO Auto Scaling or not.
	AutoIoScaling *string `pulumi:"autoIoScaling"`
	// Storage IOPS for a server.
	Iops *int `pulumi:"iops"`
	// Enable Log On Disk or not.
	LogOnDisk *string `pulumi:"logOnDisk"`
	// Max storage size allowed for a server.
	StorageSizeGB *int `pulumi:"storageSizeGB"`
}

// Defaults sets the appropriate defaults for Storage
func (val *Storage) Defaults() *Storage {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoGrow == nil {
		autoGrow_ := "Disabled"
		tmp.AutoGrow = &autoGrow_
	}
	if tmp.AutoIoScaling == nil {
		autoIoScaling_ := "Enabled"
		tmp.AutoIoScaling = &autoIoScaling_
	}
	if tmp.LogOnDisk == nil {
		logOnDisk_ := "Disabled"
		tmp.LogOnDisk = &logOnDisk_
	}
	return &tmp
}

// StorageInput is an input type that accepts StorageArgs and StorageOutput values.
// You can construct a concrete instance of `StorageInput` via:
//
//	StorageArgs{...}
type StorageInput interface {
	pulumi.Input

	ToStorageOutput() StorageOutput
	ToStorageOutputWithContext(context.Context) StorageOutput
}

// Storage Profile properties of a server
type StorageArgs struct {
	// Enable Storage Auto Grow or not.
	AutoGrow pulumi.StringPtrInput `pulumi:"autoGrow"`
	// Enable IO Auto Scaling or not.
	AutoIoScaling pulumi.StringPtrInput `pulumi:"autoIoScaling"`
	// Storage IOPS for a server.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Enable Log On Disk or not.
	LogOnDisk pulumi.StringPtrInput `pulumi:"logOnDisk"`
	// Max storage size allowed for a server.
	StorageSizeGB pulumi.IntPtrInput `pulumi:"storageSizeGB"`
}

// Defaults sets the appropriate defaults for StorageArgs
func (val *StorageArgs) Defaults() *StorageArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoGrow == nil {
		tmp.AutoGrow = pulumi.StringPtr("Disabled")
	}
	if tmp.AutoIoScaling == nil {
		tmp.AutoIoScaling = pulumi.StringPtr("Enabled")
	}
	if tmp.LogOnDisk == nil {
		tmp.LogOnDisk = pulumi.StringPtr("Disabled")
	}
	return &tmp
}
func (StorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Storage)(nil)).Elem()
}

func (i StorageArgs) ToStorageOutput() StorageOutput {
	return i.ToStorageOutputWithContext(context.Background())
}

func (i StorageArgs) ToStorageOutputWithContext(ctx context.Context) StorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageOutput)
}

func (i StorageArgs) ToStoragePtrOutput() StoragePtrOutput {
	return i.ToStoragePtrOutputWithContext(context.Background())
}

func (i StorageArgs) ToStoragePtrOutputWithContext(ctx context.Context) StoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageOutput).ToStoragePtrOutputWithContext(ctx)
}

// StoragePtrInput is an input type that accepts StorageArgs, StoragePtr and StoragePtrOutput values.
// You can construct a concrete instance of `StoragePtrInput` via:
//
//	        StorageArgs{...}
//
//	or:
//
//	        nil
type StoragePtrInput interface {
	pulumi.Input

	ToStoragePtrOutput() StoragePtrOutput
	ToStoragePtrOutputWithContext(context.Context) StoragePtrOutput
}

type storagePtrType StorageArgs

func StoragePtr(v *StorageArgs) StoragePtrInput {
	return (*storagePtrType)(v)
}

func (*storagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Storage)(nil)).Elem()
}

func (i *storagePtrType) ToStoragePtrOutput() StoragePtrOutput {
	return i.ToStoragePtrOutputWithContext(context.Background())
}

func (i *storagePtrType) ToStoragePtrOutputWithContext(ctx context.Context) StoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoragePtrOutput)
}

// Storage Profile properties of a server
type StorageOutput struct{ *pulumi.OutputState }

func (StorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Storage)(nil)).Elem()
}

func (o StorageOutput) ToStorageOutput() StorageOutput {
	return o
}

func (o StorageOutput) ToStorageOutputWithContext(ctx context.Context) StorageOutput {
	return o
}

func (o StorageOutput) ToStoragePtrOutput() StoragePtrOutput {
	return o.ToStoragePtrOutputWithContext(context.Background())
}

func (o StorageOutput) ToStoragePtrOutputWithContext(ctx context.Context) StoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Storage) *Storage {
		return &v
	}).(StoragePtrOutput)
}

// Enable Storage Auto Grow or not.
func (o StorageOutput) AutoGrow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Storage) *string { return v.AutoGrow }).(pulumi.StringPtrOutput)
}

// Enable IO Auto Scaling or not.
func (o StorageOutput) AutoIoScaling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Storage) *string { return v.AutoIoScaling }).(pulumi.StringPtrOutput)
}

// Storage IOPS for a server.
func (o StorageOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Storage) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Enable Log On Disk or not.
func (o StorageOutput) LogOnDisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Storage) *string { return v.LogOnDisk }).(pulumi.StringPtrOutput)
}

// Max storage size allowed for a server.
func (o StorageOutput) StorageSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Storage) *int { return v.StorageSizeGB }).(pulumi.IntPtrOutput)
}

type StoragePtrOutput struct{ *pulumi.OutputState }

func (StoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Storage)(nil)).Elem()
}

func (o StoragePtrOutput) ToStoragePtrOutput() StoragePtrOutput {
	return o
}

func (o StoragePtrOutput) ToStoragePtrOutputWithContext(ctx context.Context) StoragePtrOutput {
	return o
}

func (o StoragePtrOutput) Elem() StorageOutput {
	return o.ApplyT(func(v *Storage) Storage {
		if v != nil {
			return *v
		}
		var ret Storage
		return ret
	}).(StorageOutput)
}

// Enable Storage Auto Grow or not.
func (o StoragePtrOutput) AutoGrow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Storage) *string {
		if v == nil {
			return nil
		}
		return v.AutoGrow
	}).(pulumi.StringPtrOutput)
}

// Enable IO Auto Scaling or not.
func (o StoragePtrOutput) AutoIoScaling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Storage) *string {
		if v == nil {
			return nil
		}
		return v.AutoIoScaling
	}).(pulumi.StringPtrOutput)
}

// Storage IOPS for a server.
func (o StoragePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Storage) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// Enable Log On Disk or not.
func (o StoragePtrOutput) LogOnDisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Storage) *string {
		if v == nil {
			return nil
		}
		return v.LogOnDisk
	}).(pulumi.StringPtrOutput)
}

// Max storage size allowed for a server.
func (o StoragePtrOutput) StorageSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Storage) *int {
		if v == nil {
			return nil
		}
		return v.StorageSizeGB
	}).(pulumi.IntPtrOutput)
}

// Storage Profile properties of a server
type StorageResponse struct {
	// Enable Storage Auto Grow or not.
	AutoGrow *string `pulumi:"autoGrow"`
	// Enable IO Auto Scaling or not.
	AutoIoScaling *string `pulumi:"autoIoScaling"`
	// Storage IOPS for a server.
	Iops *int `pulumi:"iops"`
	// Enable Log On Disk or not.
	LogOnDisk *string `pulumi:"logOnDisk"`
	// Max storage size allowed for a server.
	StorageSizeGB *int `pulumi:"storageSizeGB"`
	// The sku name of the server storage.
	StorageSku string `pulumi:"storageSku"`
}

// Defaults sets the appropriate defaults for StorageResponse
func (val *StorageResponse) Defaults() *StorageResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoGrow == nil {
		autoGrow_ := "Disabled"
		tmp.AutoGrow = &autoGrow_
	}
	if tmp.AutoIoScaling == nil {
		autoIoScaling_ := "Enabled"
		tmp.AutoIoScaling = &autoIoScaling_
	}
	if tmp.LogOnDisk == nil {
		logOnDisk_ := "Disabled"
		tmp.LogOnDisk = &logOnDisk_
	}
	return &tmp
}

// Storage Profile properties of a server
type StorageResponseOutput struct{ *pulumi.OutputState }

func (StorageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageResponse)(nil)).Elem()
}

func (o StorageResponseOutput) ToStorageResponseOutput() StorageResponseOutput {
	return o
}

func (o StorageResponseOutput) ToStorageResponseOutputWithContext(ctx context.Context) StorageResponseOutput {
	return o
}

// Enable Storage Auto Grow or not.
func (o StorageResponseOutput) AutoGrow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageResponse) *string { return v.AutoGrow }).(pulumi.StringPtrOutput)
}

// Enable IO Auto Scaling or not.
func (o StorageResponseOutput) AutoIoScaling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageResponse) *string { return v.AutoIoScaling }).(pulumi.StringPtrOutput)
}

// Storage IOPS for a server.
func (o StorageResponseOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageResponse) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Enable Log On Disk or not.
func (o StorageResponseOutput) LogOnDisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageResponse) *string { return v.LogOnDisk }).(pulumi.StringPtrOutput)
}

// Max storage size allowed for a server.
func (o StorageResponseOutput) StorageSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageResponse) *int { return v.StorageSizeGB }).(pulumi.IntPtrOutput)
}

// The sku name of the server storage.
func (o StorageResponseOutput) StorageSku() pulumi.StringOutput {
	return o.ApplyT(func(v StorageResponse) string { return v.StorageSku }).(pulumi.StringOutput)
}

type StorageResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageResponse)(nil)).Elem()
}

func (o StorageResponsePtrOutput) ToStorageResponsePtrOutput() StorageResponsePtrOutput {
	return o
}

func (o StorageResponsePtrOutput) ToStorageResponsePtrOutputWithContext(ctx context.Context) StorageResponsePtrOutput {
	return o
}

func (o StorageResponsePtrOutput) Elem() StorageResponseOutput {
	return o.ApplyT(func(v *StorageResponse) StorageResponse {
		if v != nil {
			return *v
		}
		var ret StorageResponse
		return ret
	}).(StorageResponseOutput)
}

// Enable Storage Auto Grow or not.
func (o StorageResponsePtrOutput) AutoGrow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageResponse) *string {
		if v == nil {
			return nil
		}
		return v.AutoGrow
	}).(pulumi.StringPtrOutput)
}

// Enable IO Auto Scaling or not.
func (o StorageResponsePtrOutput) AutoIoScaling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageResponse) *string {
		if v == nil {
			return nil
		}
		return v.AutoIoScaling
	}).(pulumi.StringPtrOutput)
}

// Storage IOPS for a server.
func (o StorageResponsePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageResponse) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// Enable Log On Disk or not.
func (o StorageResponsePtrOutput) LogOnDisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageResponse) *string {
		if v == nil {
			return nil
		}
		return v.LogOnDisk
	}).(pulumi.StringPtrOutput)
}

// Max storage size allowed for a server.
func (o StorageResponsePtrOutput) StorageSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageResponse) *int {
		if v == nil {
			return nil
		}
		return v.StorageSizeGB
	}).(pulumi.IntPtrOutput)
}

// The sku name of the server storage.
func (o StorageResponsePtrOutput) StorageSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageSku
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Metadata of user assigned identity.
type UserAssignedIdentityResponse struct {
	// Client Id of user assigned identity
	ClientId string `pulumi:"clientId"`
	// Principal Id of user assigned identity
	PrincipalId string `pulumi:"principalId"`
}

// Metadata of user assigned identity.
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// Client Id of user assigned identity
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// Principal Id of user assigned identity
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseArrayOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseArrayOutput) ToUserAssignedIdentityResponseArrayOutput() UserAssignedIdentityResponseArrayOutput {
	return o
}

func (o UserAssignedIdentityResponseArrayOutput) ToUserAssignedIdentityResponseArrayOutputWithContext(ctx context.Context) UserAssignedIdentityResponseArrayOutput {
	return o
}

func (o UserAssignedIdentityResponseArrayOutput) Index(i pulumi.IntInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].([]UserAssignedIdentityResponse)[vs[1].(int)]
	}).(UserAssignedIdentityResponseOutput)
}

type UserAssignedIdentityResponseArrayMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseArrayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string][]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseArrayMapOutput) ToUserAssignedIdentityResponseArrayMapOutput() UserAssignedIdentityResponseArrayMapOutput {
	return o
}

func (o UserAssignedIdentityResponseArrayMapOutput) ToUserAssignedIdentityResponseArrayMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseArrayMapOutput {
	return o
}

func (o UserAssignedIdentityResponseArrayMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseArrayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) []UserAssignedIdentityResponse {
		return vs[0].(map[string][]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(BackupOutput{})
	pulumi.RegisterOutputType(BackupPtrOutput{})
	pulumi.RegisterOutputType(BackupResponseOutput{})
	pulumi.RegisterOutputType(BackupResponsePtrOutput{})
	pulumi.RegisterOutputType(DataEncryptionOutput{})
	pulumi.RegisterOutputType(DataEncryptionPtrOutput{})
	pulumi.RegisterOutputType(DataEncryptionResponseOutput{})
	pulumi.RegisterOutputType(DataEncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(HighAvailabilityOutput{})
	pulumi.RegisterOutputType(HighAvailabilityPtrOutput{})
	pulumi.RegisterOutputType(HighAvailabilityResponseOutput{})
	pulumi.RegisterOutputType(HighAvailabilityResponsePtrOutput{})
	pulumi.RegisterOutputType(ImportSourcePropertiesOutput{})
	pulumi.RegisterOutputType(ImportSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ImportSourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(ImportSourcePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowResponseOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowResponsePtrOutput{})
	pulumi.RegisterOutputType(MySQLServerIdentityOutput{})
	pulumi.RegisterOutputType(MySQLServerIdentityPtrOutput{})
	pulumi.RegisterOutputType(MySQLServerIdentityResponseOutput{})
	pulumi.RegisterOutputType(MySQLServerIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(MySQLServerSkuOutput{})
	pulumi.RegisterOutputType(MySQLServerSkuPtrOutput{})
	pulumi.RegisterOutputType(MySQLServerSkuResponseOutput{})
	pulumi.RegisterOutputType(MySQLServerSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkOutput{})
	pulumi.RegisterOutputType(NetworkPtrOutput{})
	pulumi.RegisterOutputType(NetworkResponseOutput{})
	pulumi.RegisterOutputType(NetworkResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(StorageOutput{})
	pulumi.RegisterOutputType(StoragePtrOutput{})
	pulumi.RegisterOutputType(StorageResponseOutput{})
	pulumi.RegisterOutputType(StorageResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseArrayOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseArrayMapOutput{})
}
