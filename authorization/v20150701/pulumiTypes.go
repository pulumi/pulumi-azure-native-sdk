// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20150701

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Role assignment properties.
type RoleAssignmentProperties struct {
	// The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can point to a user, service principal, or security group.
	PrincipalId string `pulumi:"principalId"`
	// The role definition ID used in the role assignment.
	RoleDefinitionId string `pulumi:"roleDefinitionId"`
}

// RoleAssignmentPropertiesInput is an input type that accepts RoleAssignmentPropertiesArgs and RoleAssignmentPropertiesOutput values.
// You can construct a concrete instance of `RoleAssignmentPropertiesInput` via:
//
//	RoleAssignmentPropertiesArgs{...}
type RoleAssignmentPropertiesInput interface {
	pulumi.Input

	ToRoleAssignmentPropertiesOutput() RoleAssignmentPropertiesOutput
	ToRoleAssignmentPropertiesOutputWithContext(context.Context) RoleAssignmentPropertiesOutput
}

// Role assignment properties.
type RoleAssignmentPropertiesArgs struct {
	// The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can point to a user, service principal, or security group.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The role definition ID used in the role assignment.
	RoleDefinitionId pulumi.StringInput `pulumi:"roleDefinitionId"`
}

func (RoleAssignmentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleAssignmentProperties)(nil)).Elem()
}

func (i RoleAssignmentPropertiesArgs) ToRoleAssignmentPropertiesOutput() RoleAssignmentPropertiesOutput {
	return i.ToRoleAssignmentPropertiesOutputWithContext(context.Background())
}

func (i RoleAssignmentPropertiesArgs) ToRoleAssignmentPropertiesOutputWithContext(ctx context.Context) RoleAssignmentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleAssignmentPropertiesOutput)
}

// Role assignment properties.
type RoleAssignmentPropertiesOutput struct{ *pulumi.OutputState }

func (RoleAssignmentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleAssignmentProperties)(nil)).Elem()
}

func (o RoleAssignmentPropertiesOutput) ToRoleAssignmentPropertiesOutput() RoleAssignmentPropertiesOutput {
	return o
}

func (o RoleAssignmentPropertiesOutput) ToRoleAssignmentPropertiesOutputWithContext(ctx context.Context) RoleAssignmentPropertiesOutput {
	return o
}

// The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can point to a user, service principal, or security group.
func (o RoleAssignmentPropertiesOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v RoleAssignmentProperties) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The role definition ID used in the role assignment.
func (o RoleAssignmentPropertiesOutput) RoleDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v RoleAssignmentProperties) string { return v.RoleDefinitionId }).(pulumi.StringOutput)
}

// Role assignment properties with scope.
type RoleAssignmentPropertiesWithScopeResponse struct {
	// The principal ID.
	PrincipalId *string `pulumi:"principalId"`
	// The role definition ID.
	RoleDefinitionId *string `pulumi:"roleDefinitionId"`
	// The role assignment scope.
	Scope *string `pulumi:"scope"`
}

// Role assignment properties with scope.
type RoleAssignmentPropertiesWithScopeResponseOutput struct{ *pulumi.OutputState }

func (RoleAssignmentPropertiesWithScopeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleAssignmentPropertiesWithScopeResponse)(nil)).Elem()
}

func (o RoleAssignmentPropertiesWithScopeResponseOutput) ToRoleAssignmentPropertiesWithScopeResponseOutput() RoleAssignmentPropertiesWithScopeResponseOutput {
	return o
}

func (o RoleAssignmentPropertiesWithScopeResponseOutput) ToRoleAssignmentPropertiesWithScopeResponseOutputWithContext(ctx context.Context) RoleAssignmentPropertiesWithScopeResponseOutput {
	return o
}

// The principal ID.
func (o RoleAssignmentPropertiesWithScopeResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleAssignmentPropertiesWithScopeResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The role definition ID.
func (o RoleAssignmentPropertiesWithScopeResponseOutput) RoleDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleAssignmentPropertiesWithScopeResponse) *string { return v.RoleDefinitionId }).(pulumi.StringPtrOutput)
}

// The role assignment scope.
func (o RoleAssignmentPropertiesWithScopeResponseOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleAssignmentPropertiesWithScopeResponse) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(RoleAssignmentPropertiesOutput{})
	pulumi.RegisterOutputType(RoleAssignmentPropertiesWithScopeResponseOutput{})
}
