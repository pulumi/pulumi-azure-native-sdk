// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20201001

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// The approval settings.
type ApprovalSettingsResponse struct {
	// The type of rule
	ApprovalMode *string `pulumi:"approvalMode"`
	// The approval stages of the request.
	ApprovalStages []ApprovalStageResponse `pulumi:"approvalStages"`
	// Determines whether approval is required or not.
	IsApprovalRequired *bool `pulumi:"isApprovalRequired"`
	// Determines whether approval is required for assignment extension.
	IsApprovalRequiredForExtension *bool `pulumi:"isApprovalRequiredForExtension"`
	// Determine whether requestor justification is required.
	IsRequestorJustificationRequired *bool `pulumi:"isRequestorJustificationRequired"`
}

// The approval settings.
type ApprovalSettingsResponseOutput struct{ *pulumi.OutputState }

func (ApprovalSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApprovalSettingsResponse)(nil)).Elem()
}

func (o ApprovalSettingsResponseOutput) ToApprovalSettingsResponseOutput() ApprovalSettingsResponseOutput {
	return o
}

func (o ApprovalSettingsResponseOutput) ToApprovalSettingsResponseOutputWithContext(ctx context.Context) ApprovalSettingsResponseOutput {
	return o
}

// The type of rule
func (o ApprovalSettingsResponseOutput) ApprovalMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *string { return v.ApprovalMode }).(pulumi.StringPtrOutput)
}

// The approval stages of the request.
func (o ApprovalSettingsResponseOutput) ApprovalStages() ApprovalStageResponseArrayOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) []ApprovalStageResponse { return v.ApprovalStages }).(ApprovalStageResponseArrayOutput)
}

// Determines whether approval is required or not.
func (o ApprovalSettingsResponseOutput) IsApprovalRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *bool { return v.IsApprovalRequired }).(pulumi.BoolPtrOutput)
}

// Determines whether approval is required for assignment extension.
func (o ApprovalSettingsResponseOutput) IsApprovalRequiredForExtension() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *bool { return v.IsApprovalRequiredForExtension }).(pulumi.BoolPtrOutput)
}

// Determine whether requestor justification is required.
func (o ApprovalSettingsResponseOutput) IsRequestorJustificationRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApprovalSettingsResponse) *bool { return v.IsRequestorJustificationRequired }).(pulumi.BoolPtrOutput)
}

type ApprovalSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApprovalSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApprovalSettingsResponse)(nil)).Elem()
}

func (o ApprovalSettingsResponsePtrOutput) ToApprovalSettingsResponsePtrOutput() ApprovalSettingsResponsePtrOutput {
	return o
}

func (o ApprovalSettingsResponsePtrOutput) ToApprovalSettingsResponsePtrOutputWithContext(ctx context.Context) ApprovalSettingsResponsePtrOutput {
	return o
}

func (o ApprovalSettingsResponsePtrOutput) Elem() ApprovalSettingsResponseOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) ApprovalSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ApprovalSettingsResponse
		return ret
	}).(ApprovalSettingsResponseOutput)
}

// The type of rule
func (o ApprovalSettingsResponsePtrOutput) ApprovalMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApprovalMode
	}).(pulumi.StringPtrOutput)
}

// The approval stages of the request.
func (o ApprovalSettingsResponsePtrOutput) ApprovalStages() ApprovalStageResponseArrayOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) []ApprovalStageResponse {
		if v == nil {
			return nil
		}
		return v.ApprovalStages
	}).(ApprovalStageResponseArrayOutput)
}

// Determines whether approval is required or not.
func (o ApprovalSettingsResponsePtrOutput) IsApprovalRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsApprovalRequired
	}).(pulumi.BoolPtrOutput)
}

// Determines whether approval is required for assignment extension.
func (o ApprovalSettingsResponsePtrOutput) IsApprovalRequiredForExtension() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsApprovalRequiredForExtension
	}).(pulumi.BoolPtrOutput)
}

// Determine whether requestor justification is required.
func (o ApprovalSettingsResponsePtrOutput) IsRequestorJustificationRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApprovalSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsRequestorJustificationRequired
	}).(pulumi.BoolPtrOutput)
}

// The approval stage.
type ApprovalStageResponse struct {
	// The time in days when approval request would be timed out
	ApprovalStageTimeOutInDays *int `pulumi:"approvalStageTimeOutInDays"`
	// The escalation approver of the request.
	EscalationApprovers []UserSetResponse `pulumi:"escalationApprovers"`
	// The time in minutes when the approval request would be escalated if the primary approver does not approve
	EscalationTimeInMinutes *int `pulumi:"escalationTimeInMinutes"`
	// Determines whether approver need to provide justification for his decision.
	IsApproverJustificationRequired *bool `pulumi:"isApproverJustificationRequired"`
	// The value determine whether escalation feature is enabled.
	IsEscalationEnabled *bool `pulumi:"isEscalationEnabled"`
	// The primary approver of the request.
	PrimaryApprovers []UserSetResponse `pulumi:"primaryApprovers"`
}

// The approval stage.
type ApprovalStageResponseOutput struct{ *pulumi.OutputState }

func (ApprovalStageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApprovalStageResponse)(nil)).Elem()
}

func (o ApprovalStageResponseOutput) ToApprovalStageResponseOutput() ApprovalStageResponseOutput {
	return o
}

func (o ApprovalStageResponseOutput) ToApprovalStageResponseOutputWithContext(ctx context.Context) ApprovalStageResponseOutput {
	return o
}

// The time in days when approval request would be timed out
func (o ApprovalStageResponseOutput) ApprovalStageTimeOutInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApprovalStageResponse) *int { return v.ApprovalStageTimeOutInDays }).(pulumi.IntPtrOutput)
}

// The escalation approver of the request.
func (o ApprovalStageResponseOutput) EscalationApprovers() UserSetResponseArrayOutput {
	return o.ApplyT(func(v ApprovalStageResponse) []UserSetResponse { return v.EscalationApprovers }).(UserSetResponseArrayOutput)
}

// The time in minutes when the approval request would be escalated if the primary approver does not approve
func (o ApprovalStageResponseOutput) EscalationTimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApprovalStageResponse) *int { return v.EscalationTimeInMinutes }).(pulumi.IntPtrOutput)
}

// Determines whether approver need to provide justification for his decision.
func (o ApprovalStageResponseOutput) IsApproverJustificationRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApprovalStageResponse) *bool { return v.IsApproverJustificationRequired }).(pulumi.BoolPtrOutput)
}

// The value determine whether escalation feature is enabled.
func (o ApprovalStageResponseOutput) IsEscalationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApprovalStageResponse) *bool { return v.IsEscalationEnabled }).(pulumi.BoolPtrOutput)
}

// The primary approver of the request.
func (o ApprovalStageResponseOutput) PrimaryApprovers() UserSetResponseArrayOutput {
	return o.ApplyT(func(v ApprovalStageResponse) []UserSetResponse { return v.PrimaryApprovers }).(UserSetResponseArrayOutput)
}

type ApprovalStageResponseArrayOutput struct{ *pulumi.OutputState }

func (ApprovalStageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApprovalStageResponse)(nil)).Elem()
}

func (o ApprovalStageResponseArrayOutput) ToApprovalStageResponseArrayOutput() ApprovalStageResponseArrayOutput {
	return o
}

func (o ApprovalStageResponseArrayOutput) ToApprovalStageResponseArrayOutputWithContext(ctx context.Context) ApprovalStageResponseArrayOutput {
	return o
}

func (o ApprovalStageResponseArrayOutput) Index(i pulumi.IntInput) ApprovalStageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApprovalStageResponse {
		return vs[0].([]ApprovalStageResponse)[vs[1].(int)]
	}).(ApprovalStageResponseOutput)
}

// Expanded info of resource scope, role definition and policy
type PolicyAssignmentPropertiesResponse struct {
	// Details of the policy
	Policy *PolicyAssignmentPropertiesResponsePolicy `pulumi:"policy"`
	// Details of role definition
	RoleDefinition *PolicyAssignmentPropertiesResponseRoleDefinition `pulumi:"roleDefinition"`
	// Details of the resource scope
	Scope *PolicyAssignmentPropertiesResponseScope `pulumi:"scope"`
}

// Expanded info of resource scope, role definition and policy
type PolicyAssignmentPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentPropertiesResponse)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponseOutput) ToPolicyAssignmentPropertiesResponseOutput() PolicyAssignmentPropertiesResponseOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseOutput) ToPolicyAssignmentPropertiesResponseOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseOutput {
	return o
}

// Details of the policy
func (o PolicyAssignmentPropertiesResponseOutput) Policy() PolicyAssignmentPropertiesResponsePolicyPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponse) *PolicyAssignmentPropertiesResponsePolicy { return v.Policy }).(PolicyAssignmentPropertiesResponsePolicyPtrOutput)
}

// Details of role definition
func (o PolicyAssignmentPropertiesResponseOutput) RoleDefinition() PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponse) *PolicyAssignmentPropertiesResponseRoleDefinition {
		return v.RoleDefinition
	}).(PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput)
}

// Details of the resource scope
func (o PolicyAssignmentPropertiesResponseOutput) Scope() PolicyAssignmentPropertiesResponseScopePtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponse) *PolicyAssignmentPropertiesResponseScope { return v.Scope }).(PolicyAssignmentPropertiesResponseScopePtrOutput)
}

// Details of the policy
type PolicyAssignmentPropertiesResponsePolicy struct {
	// Id of the policy
	Id *string `pulumi:"id"`
	// The name of the entity last modified it
	LastModifiedBy PrincipalResponse `pulumi:"lastModifiedBy"`
	// The last modified date time.
	LastModifiedDateTime *string `pulumi:"lastModifiedDateTime"`
}

// Details of the policy
type PolicyAssignmentPropertiesResponsePolicyOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponsePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentPropertiesResponsePolicy)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponsePolicyOutput) ToPolicyAssignmentPropertiesResponsePolicyOutput() PolicyAssignmentPropertiesResponsePolicyOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponsePolicyOutput) ToPolicyAssignmentPropertiesResponsePolicyOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponsePolicyOutput {
	return o
}

// Id of the policy
func (o PolicyAssignmentPropertiesResponsePolicyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponsePolicy) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the entity last modified it
func (o PolicyAssignmentPropertiesResponsePolicyOutput) LastModifiedBy() PrincipalResponseOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponsePolicy) PrincipalResponse { return v.LastModifiedBy }).(PrincipalResponseOutput)
}

// The last modified date time.
func (o PolicyAssignmentPropertiesResponsePolicyOutput) LastModifiedDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponsePolicy) *string { return v.LastModifiedDateTime }).(pulumi.StringPtrOutput)
}

type PolicyAssignmentPropertiesResponsePolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponsePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssignmentPropertiesResponsePolicy)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponsePolicyPtrOutput) ToPolicyAssignmentPropertiesResponsePolicyPtrOutput() PolicyAssignmentPropertiesResponsePolicyPtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponsePolicyPtrOutput) ToPolicyAssignmentPropertiesResponsePolicyPtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponsePolicyPtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponsePolicyPtrOutput) Elem() PolicyAssignmentPropertiesResponsePolicyOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponsePolicy) PolicyAssignmentPropertiesResponsePolicy {
		if v != nil {
			return *v
		}
		var ret PolicyAssignmentPropertiesResponsePolicy
		return ret
	}).(PolicyAssignmentPropertiesResponsePolicyOutput)
}

// Id of the policy
func (o PolicyAssignmentPropertiesResponsePolicyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponsePolicy) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the entity last modified it
func (o PolicyAssignmentPropertiesResponsePolicyPtrOutput) LastModifiedBy() PrincipalResponsePtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponsePolicy) *PrincipalResponse {
		if v == nil {
			return nil
		}
		return &v.LastModifiedBy
	}).(PrincipalResponsePtrOutput)
}

// The last modified date time.
func (o PolicyAssignmentPropertiesResponsePolicyPtrOutput) LastModifiedDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponsePolicy) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedDateTime
	}).(pulumi.StringPtrOutput)
}

// Details of role definition
type PolicyAssignmentPropertiesResponseRoleDefinition struct {
	// Display name of the role definition
	DisplayName *string `pulumi:"displayName"`
	// Id of the role definition
	Id *string `pulumi:"id"`
	// Type of the role definition
	Type *string `pulumi:"type"`
}

// Details of role definition
type PolicyAssignmentPropertiesResponseRoleDefinitionOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponseRoleDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentPropertiesResponseRoleDefinition)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionOutput) ToPolicyAssignmentPropertiesResponseRoleDefinitionOutput() PolicyAssignmentPropertiesResponseRoleDefinitionOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionOutput) ToPolicyAssignmentPropertiesResponseRoleDefinitionOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseRoleDefinitionOutput {
	return o
}

// Display name of the role definition
func (o PolicyAssignmentPropertiesResponseRoleDefinitionOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponseRoleDefinition) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Id of the role definition
func (o PolicyAssignmentPropertiesResponseRoleDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponseRoleDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Type of the role definition
func (o PolicyAssignmentPropertiesResponseRoleDefinitionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponseRoleDefinition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssignmentPropertiesResponseRoleDefinition)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput) ToPolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput() PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput) ToPolicyAssignmentPropertiesResponseRoleDefinitionPtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput) Elem() PolicyAssignmentPropertiesResponseRoleDefinitionOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponseRoleDefinition) PolicyAssignmentPropertiesResponseRoleDefinition {
		if v != nil {
			return *v
		}
		var ret PolicyAssignmentPropertiesResponseRoleDefinition
		return ret
	}).(PolicyAssignmentPropertiesResponseRoleDefinitionOutput)
}

// Display name of the role definition
func (o PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponseRoleDefinition) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Id of the role definition
func (o PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponseRoleDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Type of the role definition
func (o PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponseRoleDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Details of the resource scope
type PolicyAssignmentPropertiesResponseScope struct {
	// Display name of the resource
	DisplayName *string `pulumi:"displayName"`
	// Scope id of the resource
	Id *string `pulumi:"id"`
	// Type of the resource
	Type *string `pulumi:"type"`
}

// Details of the resource scope
type PolicyAssignmentPropertiesResponseScopeOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponseScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAssignmentPropertiesResponseScope)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponseScopeOutput) ToPolicyAssignmentPropertiesResponseScopeOutput() PolicyAssignmentPropertiesResponseScopeOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseScopeOutput) ToPolicyAssignmentPropertiesResponseScopeOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseScopeOutput {
	return o
}

// Display name of the resource
func (o PolicyAssignmentPropertiesResponseScopeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponseScope) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Scope id of the resource
func (o PolicyAssignmentPropertiesResponseScopeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponseScope) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Type of the resource
func (o PolicyAssignmentPropertiesResponseScopeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyAssignmentPropertiesResponseScope) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PolicyAssignmentPropertiesResponseScopePtrOutput struct{ *pulumi.OutputState }

func (PolicyAssignmentPropertiesResponseScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAssignmentPropertiesResponseScope)(nil)).Elem()
}

func (o PolicyAssignmentPropertiesResponseScopePtrOutput) ToPolicyAssignmentPropertiesResponseScopePtrOutput() PolicyAssignmentPropertiesResponseScopePtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseScopePtrOutput) ToPolicyAssignmentPropertiesResponseScopePtrOutputWithContext(ctx context.Context) PolicyAssignmentPropertiesResponseScopePtrOutput {
	return o
}

func (o PolicyAssignmentPropertiesResponseScopePtrOutput) Elem() PolicyAssignmentPropertiesResponseScopeOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponseScope) PolicyAssignmentPropertiesResponseScope {
		if v != nil {
			return *v
		}
		var ret PolicyAssignmentPropertiesResponseScope
		return ret
	}).(PolicyAssignmentPropertiesResponseScopeOutput)
}

// Display name of the resource
func (o PolicyAssignmentPropertiesResponseScopePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponseScope) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Scope id of the resource
func (o PolicyAssignmentPropertiesResponseScopePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponseScope) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Type of the resource
func (o PolicyAssignmentPropertiesResponseScopePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyAssignmentPropertiesResponseScope) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The name of the entity last modified it
type PrincipalResponse struct {
	// The name of the principal made changes
	DisplayName *string `pulumi:"displayName"`
	// Email of principal
	Email *string `pulumi:"email"`
	// The id of the principal made changes
	Id *string `pulumi:"id"`
	// Type of principal such as user , group etc
	Type *string `pulumi:"type"`
}

// The name of the entity last modified it
type PrincipalResponseOutput struct{ *pulumi.OutputState }

func (PrincipalResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalResponse)(nil)).Elem()
}

func (o PrincipalResponseOutput) ToPrincipalResponseOutput() PrincipalResponseOutput {
	return o
}

func (o PrincipalResponseOutput) ToPrincipalResponseOutputWithContext(ctx context.Context) PrincipalResponseOutput {
	return o
}

// The name of the principal made changes
func (o PrincipalResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrincipalResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Email of principal
func (o PrincipalResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrincipalResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The id of the principal made changes
func (o PrincipalResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrincipalResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Type of principal such as user , group etc
func (o PrincipalResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrincipalResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PrincipalResponsePtrOutput struct{ *pulumi.OutputState }

func (PrincipalResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrincipalResponse)(nil)).Elem()
}

func (o PrincipalResponsePtrOutput) ToPrincipalResponsePtrOutput() PrincipalResponsePtrOutput {
	return o
}

func (o PrincipalResponsePtrOutput) ToPrincipalResponsePtrOutputWithContext(ctx context.Context) PrincipalResponsePtrOutput {
	return o
}

func (o PrincipalResponsePtrOutput) Elem() PrincipalResponseOutput {
	return o.ApplyT(func(v *PrincipalResponse) PrincipalResponse {
		if v != nil {
			return *v
		}
		var ret PrincipalResponse
		return ret
	}).(PrincipalResponseOutput)
}

// The name of the principal made changes
func (o PrincipalResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Email of principal
func (o PrincipalResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The id of the principal made changes
func (o PrincipalResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Type of principal such as user , group etc
func (o PrincipalResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrincipalResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The role management policy approval rule.
type RoleManagementPolicyApprovalRuleResponse struct {
	// The id of the rule.
	Id *string `pulumi:"id"`
	// The type of rule
	// Expected value is 'RoleManagementPolicyApprovalRule'.
	RuleType string `pulumi:"ruleType"`
	// The approval setting
	Setting *ApprovalSettingsResponse `pulumi:"setting"`
	// The target of the current rule.
	Target *RoleManagementPolicyRuleTargetResponse `pulumi:"target"`
}

// The role management policy approval rule.
type RoleManagementPolicyApprovalRuleResponseOutput struct{ *pulumi.OutputState }

func (RoleManagementPolicyApprovalRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleManagementPolicyApprovalRuleResponse)(nil)).Elem()
}

func (o RoleManagementPolicyApprovalRuleResponseOutput) ToRoleManagementPolicyApprovalRuleResponseOutput() RoleManagementPolicyApprovalRuleResponseOutput {
	return o
}

func (o RoleManagementPolicyApprovalRuleResponseOutput) ToRoleManagementPolicyApprovalRuleResponseOutputWithContext(ctx context.Context) RoleManagementPolicyApprovalRuleResponseOutput {
	return o
}

// The id of the rule.
func (o RoleManagementPolicyApprovalRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyApprovalRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The type of rule
// Expected value is 'RoleManagementPolicyApprovalRule'.
func (o RoleManagementPolicyApprovalRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v RoleManagementPolicyApprovalRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// The approval setting
func (o RoleManagementPolicyApprovalRuleResponseOutput) Setting() ApprovalSettingsResponsePtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyApprovalRuleResponse) *ApprovalSettingsResponse { return v.Setting }).(ApprovalSettingsResponsePtrOutput)
}

// The target of the current rule.
func (o RoleManagementPolicyApprovalRuleResponseOutput) Target() RoleManagementPolicyRuleTargetResponsePtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyApprovalRuleResponse) *RoleManagementPolicyRuleTargetResponse {
		return v.Target
	}).(RoleManagementPolicyRuleTargetResponsePtrOutput)
}

// The role management policy authentication context rule.
type RoleManagementPolicyAuthenticationContextRuleResponse struct {
	// The claim value.
	ClaimValue *string `pulumi:"claimValue"`
	// The id of the rule.
	Id *string `pulumi:"id"`
	// The value indicating if rule is enabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// The type of rule
	// Expected value is 'RoleManagementPolicyAuthenticationContextRule'.
	RuleType string `pulumi:"ruleType"`
	// The target of the current rule.
	Target *RoleManagementPolicyRuleTargetResponse `pulumi:"target"`
}

// The role management policy authentication context rule.
type RoleManagementPolicyAuthenticationContextRuleResponseOutput struct{ *pulumi.OutputState }

func (RoleManagementPolicyAuthenticationContextRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleManagementPolicyAuthenticationContextRuleResponse)(nil)).Elem()
}

func (o RoleManagementPolicyAuthenticationContextRuleResponseOutput) ToRoleManagementPolicyAuthenticationContextRuleResponseOutput() RoleManagementPolicyAuthenticationContextRuleResponseOutput {
	return o
}

func (o RoleManagementPolicyAuthenticationContextRuleResponseOutput) ToRoleManagementPolicyAuthenticationContextRuleResponseOutputWithContext(ctx context.Context) RoleManagementPolicyAuthenticationContextRuleResponseOutput {
	return o
}

// The claim value.
func (o RoleManagementPolicyAuthenticationContextRuleResponseOutput) ClaimValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyAuthenticationContextRuleResponse) *string { return v.ClaimValue }).(pulumi.StringPtrOutput)
}

// The id of the rule.
func (o RoleManagementPolicyAuthenticationContextRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyAuthenticationContextRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The value indicating if rule is enabled.
func (o RoleManagementPolicyAuthenticationContextRuleResponseOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyAuthenticationContextRuleResponse) *bool { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// The type of rule
// Expected value is 'RoleManagementPolicyAuthenticationContextRule'.
func (o RoleManagementPolicyAuthenticationContextRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v RoleManagementPolicyAuthenticationContextRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// The target of the current rule.
func (o RoleManagementPolicyAuthenticationContextRuleResponseOutput) Target() RoleManagementPolicyRuleTargetResponsePtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyAuthenticationContextRuleResponse) *RoleManagementPolicyRuleTargetResponse {
		return v.Target
	}).(RoleManagementPolicyRuleTargetResponsePtrOutput)
}

// The role management policy enablement rule.
type RoleManagementPolicyEnablementRuleResponse struct {
	// The list of enabled rules.
	EnabledRules []string `pulumi:"enabledRules"`
	// The id of the rule.
	Id *string `pulumi:"id"`
	// The type of rule
	// Expected value is 'RoleManagementPolicyEnablementRule'.
	RuleType string `pulumi:"ruleType"`
	// The target of the current rule.
	Target *RoleManagementPolicyRuleTargetResponse `pulumi:"target"`
}

// The role management policy enablement rule.
type RoleManagementPolicyEnablementRuleResponseOutput struct{ *pulumi.OutputState }

func (RoleManagementPolicyEnablementRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleManagementPolicyEnablementRuleResponse)(nil)).Elem()
}

func (o RoleManagementPolicyEnablementRuleResponseOutput) ToRoleManagementPolicyEnablementRuleResponseOutput() RoleManagementPolicyEnablementRuleResponseOutput {
	return o
}

func (o RoleManagementPolicyEnablementRuleResponseOutput) ToRoleManagementPolicyEnablementRuleResponseOutputWithContext(ctx context.Context) RoleManagementPolicyEnablementRuleResponseOutput {
	return o
}

// The list of enabled rules.
func (o RoleManagementPolicyEnablementRuleResponseOutput) EnabledRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoleManagementPolicyEnablementRuleResponse) []string { return v.EnabledRules }).(pulumi.StringArrayOutput)
}

// The id of the rule.
func (o RoleManagementPolicyEnablementRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyEnablementRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The type of rule
// Expected value is 'RoleManagementPolicyEnablementRule'.
func (o RoleManagementPolicyEnablementRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v RoleManagementPolicyEnablementRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// The target of the current rule.
func (o RoleManagementPolicyEnablementRuleResponseOutput) Target() RoleManagementPolicyRuleTargetResponsePtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyEnablementRuleResponse) *RoleManagementPolicyRuleTargetResponse {
		return v.Target
	}).(RoleManagementPolicyRuleTargetResponsePtrOutput)
}

// The role management policy expiration rule.
type RoleManagementPolicyExpirationRuleResponse struct {
	// The id of the rule.
	Id *string `pulumi:"id"`
	// The value indicating whether expiration is required.
	IsExpirationRequired *bool `pulumi:"isExpirationRequired"`
	// The maximum duration of expiration in timespan.
	MaximumDuration *string `pulumi:"maximumDuration"`
	// The type of rule
	// Expected value is 'RoleManagementPolicyExpirationRule'.
	RuleType string `pulumi:"ruleType"`
	// The target of the current rule.
	Target *RoleManagementPolicyRuleTargetResponse `pulumi:"target"`
}

// The role management policy expiration rule.
type RoleManagementPolicyExpirationRuleResponseOutput struct{ *pulumi.OutputState }

func (RoleManagementPolicyExpirationRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleManagementPolicyExpirationRuleResponse)(nil)).Elem()
}

func (o RoleManagementPolicyExpirationRuleResponseOutput) ToRoleManagementPolicyExpirationRuleResponseOutput() RoleManagementPolicyExpirationRuleResponseOutput {
	return o
}

func (o RoleManagementPolicyExpirationRuleResponseOutput) ToRoleManagementPolicyExpirationRuleResponseOutputWithContext(ctx context.Context) RoleManagementPolicyExpirationRuleResponseOutput {
	return o
}

// The id of the rule.
func (o RoleManagementPolicyExpirationRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyExpirationRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The value indicating whether expiration is required.
func (o RoleManagementPolicyExpirationRuleResponseOutput) IsExpirationRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyExpirationRuleResponse) *bool { return v.IsExpirationRequired }).(pulumi.BoolPtrOutput)
}

// The maximum duration of expiration in timespan.
func (o RoleManagementPolicyExpirationRuleResponseOutput) MaximumDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyExpirationRuleResponse) *string { return v.MaximumDuration }).(pulumi.StringPtrOutput)
}

// The type of rule
// Expected value is 'RoleManagementPolicyExpirationRule'.
func (o RoleManagementPolicyExpirationRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v RoleManagementPolicyExpirationRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// The target of the current rule.
func (o RoleManagementPolicyExpirationRuleResponseOutput) Target() RoleManagementPolicyRuleTargetResponsePtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyExpirationRuleResponse) *RoleManagementPolicyRuleTargetResponse {
		return v.Target
	}).(RoleManagementPolicyRuleTargetResponsePtrOutput)
}

// The role management policy notification rule.
type RoleManagementPolicyNotificationRuleResponse struct {
	// The id of the rule.
	Id *string `pulumi:"id"`
	// Determines if the notification will be sent to the recipient type specified in the policy rule.
	IsDefaultRecipientsEnabled *bool `pulumi:"isDefaultRecipientsEnabled"`
	// The notification level.
	NotificationLevel *string `pulumi:"notificationLevel"`
	// The list of notification recipients.
	NotificationRecipients []string `pulumi:"notificationRecipients"`
	// The type of notification.
	NotificationType *string `pulumi:"notificationType"`
	// The recipient type.
	RecipientType *string `pulumi:"recipientType"`
	// The type of rule
	// Expected value is 'RoleManagementPolicyNotificationRule'.
	RuleType string `pulumi:"ruleType"`
	// The target of the current rule.
	Target *RoleManagementPolicyRuleTargetResponse `pulumi:"target"`
}

// The role management policy notification rule.
type RoleManagementPolicyNotificationRuleResponseOutput struct{ *pulumi.OutputState }

func (RoleManagementPolicyNotificationRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleManagementPolicyNotificationRuleResponse)(nil)).Elem()
}

func (o RoleManagementPolicyNotificationRuleResponseOutput) ToRoleManagementPolicyNotificationRuleResponseOutput() RoleManagementPolicyNotificationRuleResponseOutput {
	return o
}

func (o RoleManagementPolicyNotificationRuleResponseOutput) ToRoleManagementPolicyNotificationRuleResponseOutputWithContext(ctx context.Context) RoleManagementPolicyNotificationRuleResponseOutput {
	return o
}

// The id of the rule.
func (o RoleManagementPolicyNotificationRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyNotificationRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Determines if the notification will be sent to the recipient type specified in the policy rule.
func (o RoleManagementPolicyNotificationRuleResponseOutput) IsDefaultRecipientsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyNotificationRuleResponse) *bool { return v.IsDefaultRecipientsEnabled }).(pulumi.BoolPtrOutput)
}

// The notification level.
func (o RoleManagementPolicyNotificationRuleResponseOutput) NotificationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyNotificationRuleResponse) *string { return v.NotificationLevel }).(pulumi.StringPtrOutput)
}

// The list of notification recipients.
func (o RoleManagementPolicyNotificationRuleResponseOutput) NotificationRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoleManagementPolicyNotificationRuleResponse) []string { return v.NotificationRecipients }).(pulumi.StringArrayOutput)
}

// The type of notification.
func (o RoleManagementPolicyNotificationRuleResponseOutput) NotificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyNotificationRuleResponse) *string { return v.NotificationType }).(pulumi.StringPtrOutput)
}

// The recipient type.
func (o RoleManagementPolicyNotificationRuleResponseOutput) RecipientType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyNotificationRuleResponse) *string { return v.RecipientType }).(pulumi.StringPtrOutput)
}

// The type of rule
// Expected value is 'RoleManagementPolicyNotificationRule'.
func (o RoleManagementPolicyNotificationRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v RoleManagementPolicyNotificationRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// The target of the current rule.
func (o RoleManagementPolicyNotificationRuleResponseOutput) Target() RoleManagementPolicyRuleTargetResponsePtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyNotificationRuleResponse) *RoleManagementPolicyRuleTargetResponse {
		return v.Target
	}).(RoleManagementPolicyRuleTargetResponsePtrOutput)
}

// The role management policy rule target.
type RoleManagementPolicyRuleTargetResponse struct {
	// The caller of the setting.
	Caller *string `pulumi:"caller"`
	// The list of enforced settings.
	EnforcedSettings []string `pulumi:"enforcedSettings"`
	// The list of inheritable settings.
	InheritableSettings []string `pulumi:"inheritableSettings"`
	// The assignment level to which rule is applied.
	Level *string `pulumi:"level"`
	// The type of operation.
	Operations []string `pulumi:"operations"`
	// The list of target objects.
	TargetObjects []string `pulumi:"targetObjects"`
}

// The role management policy rule target.
type RoleManagementPolicyRuleTargetResponseOutput struct{ *pulumi.OutputState }

func (RoleManagementPolicyRuleTargetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleManagementPolicyRuleTargetResponse)(nil)).Elem()
}

func (o RoleManagementPolicyRuleTargetResponseOutput) ToRoleManagementPolicyRuleTargetResponseOutput() RoleManagementPolicyRuleTargetResponseOutput {
	return o
}

func (o RoleManagementPolicyRuleTargetResponseOutput) ToRoleManagementPolicyRuleTargetResponseOutputWithContext(ctx context.Context) RoleManagementPolicyRuleTargetResponseOutput {
	return o
}

// The caller of the setting.
func (o RoleManagementPolicyRuleTargetResponseOutput) Caller() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyRuleTargetResponse) *string { return v.Caller }).(pulumi.StringPtrOutput)
}

// The list of enforced settings.
func (o RoleManagementPolicyRuleTargetResponseOutput) EnforcedSettings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoleManagementPolicyRuleTargetResponse) []string { return v.EnforcedSettings }).(pulumi.StringArrayOutput)
}

// The list of inheritable settings.
func (o RoleManagementPolicyRuleTargetResponseOutput) InheritableSettings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoleManagementPolicyRuleTargetResponse) []string { return v.InheritableSettings }).(pulumi.StringArrayOutput)
}

// The assignment level to which rule is applied.
func (o RoleManagementPolicyRuleTargetResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleManagementPolicyRuleTargetResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// The type of operation.
func (o RoleManagementPolicyRuleTargetResponseOutput) Operations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoleManagementPolicyRuleTargetResponse) []string { return v.Operations }).(pulumi.StringArrayOutput)
}

// The list of target objects.
func (o RoleManagementPolicyRuleTargetResponseOutput) TargetObjects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoleManagementPolicyRuleTargetResponse) []string { return v.TargetObjects }).(pulumi.StringArrayOutput)
}

type RoleManagementPolicyRuleTargetResponsePtrOutput struct{ *pulumi.OutputState }

func (RoleManagementPolicyRuleTargetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoleManagementPolicyRuleTargetResponse)(nil)).Elem()
}

func (o RoleManagementPolicyRuleTargetResponsePtrOutput) ToRoleManagementPolicyRuleTargetResponsePtrOutput() RoleManagementPolicyRuleTargetResponsePtrOutput {
	return o
}

func (o RoleManagementPolicyRuleTargetResponsePtrOutput) ToRoleManagementPolicyRuleTargetResponsePtrOutputWithContext(ctx context.Context) RoleManagementPolicyRuleTargetResponsePtrOutput {
	return o
}

func (o RoleManagementPolicyRuleTargetResponsePtrOutput) Elem() RoleManagementPolicyRuleTargetResponseOutput {
	return o.ApplyT(func(v *RoleManagementPolicyRuleTargetResponse) RoleManagementPolicyRuleTargetResponse {
		if v != nil {
			return *v
		}
		var ret RoleManagementPolicyRuleTargetResponse
		return ret
	}).(RoleManagementPolicyRuleTargetResponseOutput)
}

// The caller of the setting.
func (o RoleManagementPolicyRuleTargetResponsePtrOutput) Caller() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoleManagementPolicyRuleTargetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Caller
	}).(pulumi.StringPtrOutput)
}

// The list of enforced settings.
func (o RoleManagementPolicyRuleTargetResponsePtrOutput) EnforcedSettings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RoleManagementPolicyRuleTargetResponse) []string {
		if v == nil {
			return nil
		}
		return v.EnforcedSettings
	}).(pulumi.StringArrayOutput)
}

// The list of inheritable settings.
func (o RoleManagementPolicyRuleTargetResponsePtrOutput) InheritableSettings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RoleManagementPolicyRuleTargetResponse) []string {
		if v == nil {
			return nil
		}
		return v.InheritableSettings
	}).(pulumi.StringArrayOutput)
}

// The assignment level to which rule is applied.
func (o RoleManagementPolicyRuleTargetResponsePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoleManagementPolicyRuleTargetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// The type of operation.
func (o RoleManagementPolicyRuleTargetResponsePtrOutput) Operations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RoleManagementPolicyRuleTargetResponse) []string {
		if v == nil {
			return nil
		}
		return v.Operations
	}).(pulumi.StringArrayOutput)
}

// The list of target objects.
func (o RoleManagementPolicyRuleTargetResponsePtrOutput) TargetObjects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RoleManagementPolicyRuleTargetResponse) []string {
		if v == nil {
			return nil
		}
		return v.TargetObjects
	}).(pulumi.StringArrayOutput)
}

// The detail of a user.
type UserSetResponse struct {
	// The description of the user.
	Description *string `pulumi:"description"`
	// The object id of the user.
	Id *string `pulumi:"id"`
	// The value indicating whether the user is a backup fallback approver
	IsBackup *bool `pulumi:"isBackup"`
	// The type of user.
	UserType *string `pulumi:"userType"`
}

// The detail of a user.
type UserSetResponseOutput struct{ *pulumi.OutputState }

func (UserSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSetResponse)(nil)).Elem()
}

func (o UserSetResponseOutput) ToUserSetResponseOutput() UserSetResponseOutput {
	return o
}

func (o UserSetResponseOutput) ToUserSetResponseOutputWithContext(ctx context.Context) UserSetResponseOutput {
	return o
}

// The description of the user.
func (o UserSetResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSetResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The object id of the user.
func (o UserSetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The value indicating whether the user is a backup fallback approver
func (o UserSetResponseOutput) IsBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserSetResponse) *bool { return v.IsBackup }).(pulumi.BoolPtrOutput)
}

// The type of user.
func (o UserSetResponseOutput) UserType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSetResponse) *string { return v.UserType }).(pulumi.StringPtrOutput)
}

type UserSetResponseArrayOutput struct{ *pulumi.OutputState }

func (UserSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSetResponse)(nil)).Elem()
}

func (o UserSetResponseArrayOutput) ToUserSetResponseArrayOutput() UserSetResponseArrayOutput {
	return o
}

func (o UserSetResponseArrayOutput) ToUserSetResponseArrayOutputWithContext(ctx context.Context) UserSetResponseArrayOutput {
	return o
}

func (o UserSetResponseArrayOutput) Index(i pulumi.IntInput) UserSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserSetResponse {
		return vs[0].([]UserSetResponse)[vs[1].(int)]
	}).(UserSetResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ApprovalSettingsResponseOutput{})
	pulumi.RegisterOutputType(ApprovalSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ApprovalStageResponseOutput{})
	pulumi.RegisterOutputType(ApprovalStageResponseArrayOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponsePolicyOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponsePolicyPtrOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponseRoleDefinitionOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponseRoleDefinitionPtrOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponseScopeOutput{})
	pulumi.RegisterOutputType(PolicyAssignmentPropertiesResponseScopePtrOutput{})
	pulumi.RegisterOutputType(PrincipalResponseOutput{})
	pulumi.RegisterOutputType(PrincipalResponsePtrOutput{})
	pulumi.RegisterOutputType(RoleManagementPolicyApprovalRuleResponseOutput{})
	pulumi.RegisterOutputType(RoleManagementPolicyAuthenticationContextRuleResponseOutput{})
	pulumi.RegisterOutputType(RoleManagementPolicyEnablementRuleResponseOutput{})
	pulumi.RegisterOutputType(RoleManagementPolicyExpirationRuleResponseOutput{})
	pulumi.RegisterOutputType(RoleManagementPolicyNotificationRuleResponseOutput{})
	pulumi.RegisterOutputType(RoleManagementPolicyRuleTargetResponseOutput{})
	pulumi.RegisterOutputType(RoleManagementPolicyRuleTargetResponsePtrOutput{})
	pulumi.RegisterOutputType(UserSetResponseOutput{})
	pulumi.RegisterOutputType(UserSetResponseArrayOutput{})
}
