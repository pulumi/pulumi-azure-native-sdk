// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbforpostgresql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about an existing flexible server.
//
// Uses Azure REST API version 2024-08-01.
//
// Other available API versions: 2022-12-01, 2023-03-01-preview, 2023-06-01-preview, 2023-12-01-preview, 2024-03-01-preview, 2024-11-01-preview, 2025-01-01-preview, 2025-06-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native dbforpostgresql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupServer(ctx *pulumi.Context, args *LookupServerArgs, opts ...pulumi.InvokeOption) (*LookupServerResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupServerResult
	err := ctx.Invoke("azure-native:dbforpostgresql:getServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupServerArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName string `pulumi:"serverName"`
}

// Flexible server.
type LookupServerResult struct {
	// Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.
	AdministratorLogin *string `pulumi:"administratorLogin"`
	// Authentication configuration properties of a flexible server.
	AuthConfig *AuthConfigResponse `pulumi:"authConfig"`
	// Availability zone of a flexible server.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Backup properties of a flexible server.
	Backup *BackupResponse `pulumi:"backup"`
	// Data encryption properties of a flexible server.
	DataEncryption *DataEncryptionResponse `pulumi:"dataEncryption"`
	// Fully qualified domain name of a flexible server.
	FullyQualifiedDomainName string `pulumi:"fullyQualifiedDomainName"`
	// High availability properties of a flexible server.
	HighAvailability *HighAvailabilityResponse `pulumi:"highAvailability"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// User assigned managed identities assigned to the flexible server.
	Identity *UserAssignedIdentityResponse `pulumi:"identity"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// Maintenance window properties of a flexible server.
	MaintenanceWindow *MaintenanceWindowResponse `pulumi:"maintenanceWindow"`
	// Minor version of PostgreSQL database engine.
	MinorVersion string `pulumi:"minorVersion"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Network properties of a flexible server. Only required if you want your server to be integrated into a virtual network provided by customer.
	Network *NetworkResponse `pulumi:"network"`
	// List of private endpoint connections associated with the specified flexible server.
	PrivateEndpointConnections []PrivateEndpointConnectionResponse `pulumi:"privateEndpointConnections"`
	// Read replica properties of a flexible server. Required only in case that you want to promote a server.
	Replica *ReplicaResponse `pulumi:"replica"`
	// Maximum number of read replicas allowed for a flexible server.
	ReplicaCapacity int `pulumi:"replicaCapacity"`
	// Role of the server in a replication set.
	ReplicationRole *string `pulumi:"replicationRole"`
	// Compute tier and size of a flexible server.
	Sku *SkuResponse `pulumi:"sku"`
	// Identifier of the flexible server to be used as the source of the new flexible server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target flexible server is a read replica.
	SourceServerResourceId *string `pulumi:"sourceServerResourceId"`
	// Possible states of a flexible server.
	State string `pulumi:"state"`
	// Storage properties of a flexible server.
	Storage *StorageResponse `pulumi:"storage"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Major version of PostgreSQL database engine.
	Version *string `pulumi:"version"`
}

// Defaults sets the appropriate defaults for LookupServerResult
func (val *LookupServerResult) Defaults() *LookupServerResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AuthConfig = tmp.AuthConfig.Defaults()

	if tmp.AvailabilityZone == nil {
		availabilityZone_ := ""
		tmp.AvailabilityZone = &availabilityZone_
	}
	tmp.Backup = tmp.Backup.Defaults()

	tmp.HighAvailability = tmp.HighAvailability.Defaults()

	tmp.MaintenanceWindow = tmp.MaintenanceWindow.Defaults()

	return &tmp
}
func LookupServerOutput(ctx *pulumi.Context, args LookupServerOutputArgs, opts ...pulumi.InvokeOption) LookupServerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupServerResultOutput, error) {
			args := v.(LookupServerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:dbforpostgresql:getServer", args, LookupServerResultOutput{}, options).(LookupServerResultOutput), nil
		}).(LookupServerResultOutput)
}

type LookupServerOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName pulumi.StringInput `pulumi:"serverName"`
}

func (LookupServerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerArgs)(nil)).Elem()
}

// Flexible server.
type LookupServerResultOutput struct{ *pulumi.OutputState }

func (LookupServerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerResult)(nil)).Elem()
}

func (o LookupServerResultOutput) ToLookupServerResultOutput() LookupServerResultOutput {
	return o
}

func (o LookupServerResultOutput) ToLookupServerResultOutputWithContext(ctx context.Context) LookupServerResultOutput {
	return o
}

// Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.
func (o LookupServerResultOutput) AdministratorLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.AdministratorLogin }).(pulumi.StringPtrOutput)
}

// Authentication configuration properties of a flexible server.
func (o LookupServerResultOutput) AuthConfig() AuthConfigResponsePtrOutput {
	return o.ApplyT(func(v LookupServerResult) *AuthConfigResponse { return v.AuthConfig }).(AuthConfigResponsePtrOutput)
}

// Availability zone of a flexible server.
func (o LookupServerResultOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The Azure API version of the resource.
func (o LookupServerResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Backup properties of a flexible server.
func (o LookupServerResultOutput) Backup() BackupResponsePtrOutput {
	return o.ApplyT(func(v LookupServerResult) *BackupResponse { return v.Backup }).(BackupResponsePtrOutput)
}

// Data encryption properties of a flexible server.
func (o LookupServerResultOutput) DataEncryption() DataEncryptionResponsePtrOutput {
	return o.ApplyT(func(v LookupServerResult) *DataEncryptionResponse { return v.DataEncryption }).(DataEncryptionResponsePtrOutput)
}

// Fully qualified domain name of a flexible server.
func (o LookupServerResultOutput) FullyQualifiedDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.FullyQualifiedDomainName }).(pulumi.StringOutput)
}

// High availability properties of a flexible server.
func (o LookupServerResultOutput) HighAvailability() HighAvailabilityResponsePtrOutput {
	return o.ApplyT(func(v LookupServerResult) *HighAvailabilityResponse { return v.HighAvailability }).(HighAvailabilityResponsePtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupServerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Id }).(pulumi.StringOutput)
}

// User assigned managed identities assigned to the flexible server.
func (o LookupServerResultOutput) Identity() UserAssignedIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupServerResult) *UserAssignedIdentityResponse { return v.Identity }).(UserAssignedIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o LookupServerResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Location }).(pulumi.StringOutput)
}

// Maintenance window properties of a flexible server.
func (o LookupServerResultOutput) MaintenanceWindow() MaintenanceWindowResponsePtrOutput {
	return o.ApplyT(func(v LookupServerResult) *MaintenanceWindowResponse { return v.MaintenanceWindow }).(MaintenanceWindowResponsePtrOutput)
}

// Minor version of PostgreSQL database engine.
func (o LookupServerResultOutput) MinorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.MinorVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupServerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Name }).(pulumi.StringOutput)
}

// Network properties of a flexible server. Only required if you want your server to be integrated into a virtual network provided by customer.
func (o LookupServerResultOutput) Network() NetworkResponsePtrOutput {
	return o.ApplyT(func(v LookupServerResult) *NetworkResponse { return v.Network }).(NetworkResponsePtrOutput)
}

// List of private endpoint connections associated with the specified flexible server.
func (o LookupServerResultOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []PrivateEndpointConnectionResponse { return v.PrivateEndpointConnections }).(PrivateEndpointConnectionResponseArrayOutput)
}

// Read replica properties of a flexible server. Required only in case that you want to promote a server.
func (o LookupServerResultOutput) Replica() ReplicaResponsePtrOutput {
	return o.ApplyT(func(v LookupServerResult) *ReplicaResponse { return v.Replica }).(ReplicaResponsePtrOutput)
}

// Maximum number of read replicas allowed for a flexible server.
func (o LookupServerResultOutput) ReplicaCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServerResult) int { return v.ReplicaCapacity }).(pulumi.IntOutput)
}

// Role of the server in a replication set.
func (o LookupServerResultOutput) ReplicationRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.ReplicationRole }).(pulumi.StringPtrOutput)
}

// Compute tier and size of a flexible server.
func (o LookupServerResultOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v LookupServerResult) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// Identifier of the flexible server to be used as the source of the new flexible server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target flexible server is a read replica.
func (o LookupServerResultOutput) SourceServerResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.SourceServerResourceId }).(pulumi.StringPtrOutput)
}

// Possible states of a flexible server.
func (o LookupServerResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.State }).(pulumi.StringOutput)
}

// Storage properties of a flexible server.
func (o LookupServerResultOutput) Storage() StorageResponsePtrOutput {
	return o.ApplyT(func(v LookupServerResult) *StorageResponse { return v.Storage }).(StorageResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupServerResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupServerResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupServerResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupServerResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupServerResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Type }).(pulumi.StringOutput)
}

// Major version of PostgreSQL database engine.
func (o LookupServerResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerResultOutput{})
}
