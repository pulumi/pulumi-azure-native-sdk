// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230601preview

// If Enabled, Azure Active Directory authentication is enabled.
type ActiveDirectoryAuthEnum string

const (
	ActiveDirectoryAuthEnumEnabled  = ActiveDirectoryAuthEnum("Enabled")
	ActiveDirectoryAuthEnumDisabled = ActiveDirectoryAuthEnum("Disabled")
)

// Data encryption type to depict if it is System Managed vs Azure Key vault.
type ArmServerKeyType string

const (
	ArmServerKeyTypeSystemManaged = ArmServerKeyType("SystemManaged")
	ArmServerKeyTypeAzureKeyVault = ArmServerKeyType("AzureKeyVault")
)

// Name of storage tier for IOPS.
type AzureManagedDiskPerformanceTiers string

const (
	AzureManagedDiskPerformanceTiersP1  = AzureManagedDiskPerformanceTiers("P1")
	AzureManagedDiskPerformanceTiersP2  = AzureManagedDiskPerformanceTiers("P2")
	AzureManagedDiskPerformanceTiersP3  = AzureManagedDiskPerformanceTiers("P3")
	AzureManagedDiskPerformanceTiersP4  = AzureManagedDiskPerformanceTiers("P4")
	AzureManagedDiskPerformanceTiersP6  = AzureManagedDiskPerformanceTiers("P6")
	AzureManagedDiskPerformanceTiersP10 = AzureManagedDiskPerformanceTiers("P10")
	AzureManagedDiskPerformanceTiersP15 = AzureManagedDiskPerformanceTiers("P15")
	AzureManagedDiskPerformanceTiersP20 = AzureManagedDiskPerformanceTiers("P20")
	AzureManagedDiskPerformanceTiersP30 = AzureManagedDiskPerformanceTiers("P30")
	AzureManagedDiskPerformanceTiersP40 = AzureManagedDiskPerformanceTiers("P40")
	AzureManagedDiskPerformanceTiersP50 = AzureManagedDiskPerformanceTiers("P50")
	AzureManagedDiskPerformanceTiersP60 = AzureManagedDiskPerformanceTiers("P60")
	AzureManagedDiskPerformanceTiersP70 = AzureManagedDiskPerformanceTiers("P70")
	AzureManagedDiskPerformanceTiersP80 = AzureManagedDiskPerformanceTiers("P80")
)

// To trigger cancel for entire migration we need to send this flag as True
type CancelEnum string

const (
	CancelEnumTrue  = CancelEnum("True")
	CancelEnumFalse = CancelEnum("False")
)

// The mode to create a new PostgreSQL server.
type CreateMode string

const (
	CreateModeDefault            = CreateMode("Default")
	CreateModeCreate             = CreateMode("Create")
	CreateModeUpdate             = CreateMode("Update")
	CreateModePointInTimeRestore = CreateMode("PointInTimeRestore")
	CreateModeGeoRestore         = CreateMode("GeoRestore")
	CreateModeReplica            = CreateMode("Replica")
	CreateModeReviveDropped      = CreateMode("ReviveDropped")
)

// A value indicating whether Geo-Redundant backup is enabled on the server.
type GeoRedundantBackupEnum string

const (
	GeoRedundantBackupEnumEnabled  = GeoRedundantBackupEnum("Enabled")
	GeoRedundantBackupEnumDisabled = GeoRedundantBackupEnum("Disabled")
)

// The HA mode for the server.
type HighAvailabilityMode string

const (
	HighAvailabilityModeDisabled      = HighAvailabilityMode("Disabled")
	HighAvailabilityModeZoneRedundant = HighAvailabilityMode("ZoneRedundant")
	HighAvailabilityModeSameZone      = HighAvailabilityMode("SameZone")
)

// the types of identities associated with this resource; currently restricted to 'None and UserAssigned'
type IdentityType string

const (
	IdentityTypeNone         = IdentityType("None")
	IdentityTypeUserAssigned = IdentityType("UserAssigned")
)

// Primary encryption key status for Data encryption enabled server.
type KeyStatusEnum string

const (
	KeyStatusEnumValid   = KeyStatusEnum("Valid")
	KeyStatusEnumInvalid = KeyStatusEnum("Invalid")
)

// Indicates whether to setup LogicalReplicationOnSourceDb, if needed
type LogicalReplicationOnSourceDbEnum string

const (
	LogicalReplicationOnSourceDbEnumTrue  = LogicalReplicationOnSourceDbEnum("True")
	LogicalReplicationOnSourceDbEnumFalse = LogicalReplicationOnSourceDbEnum("False")
)

// There are two types of migration modes Online and Offline
type MigrationMode string

const (
	MigrationModeOffline = MigrationMode("Offline")
	MigrationModeOnline  = MigrationMode("Online")
)

// This indicates the supported Migration option for the migration
type MigrationOption string

const (
	MigrationOptionValidate           = MigrationOption("Validate")
	MigrationOptionMigrate            = MigrationOption("Migrate")
	MigrationOptionValidateAndMigrate = MigrationOption("ValidateAndMigrate")
)

// Indicates whether the databases on the target server can be overwritten, if already present. If set to False, the migration workflow will wait for a confirmation, if it detects that the database already exists.
type OverwriteDbsInTargetEnum string

const (
	OverwriteDbsInTargetEnumTrue  = OverwriteDbsInTargetEnum("True")
	OverwriteDbsInTargetEnumFalse = OverwriteDbsInTargetEnum("False")
)

// If Enabled, Password authentication is enabled.
type PasswordAuthEnum string

const (
	PasswordAuthEnumEnabled  = PasswordAuthEnum("Enabled")
	PasswordAuthEnumDisabled = PasswordAuthEnum("Disabled")
)

// The principal type used to represent the type of Active Directory Administrator.
type PrincipalType string

const (
	PrincipalTypeUnknown          = PrincipalType("Unknown")
	PrincipalTypeUser             = PrincipalType("User")
	PrincipalTypeGroup            = PrincipalType("Group")
	PrincipalTypeServicePrincipal = PrincipalType("ServicePrincipal")
)

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
type PrivateEndpointServiceConnectionStatus string

const (
	PrivateEndpointServiceConnectionStatusPending  = PrivateEndpointServiceConnectionStatus("Pending")
	PrivateEndpointServiceConnectionStatusApproved = PrivateEndpointServiceConnectionStatus("Approved")
	PrivateEndpointServiceConnectionStatusRejected = PrivateEndpointServiceConnectionStatus("Rejected")
)

// Sets the promote mode for a replica server. This is a write only property.
type ReadReplicaPromoteMode string

const (
	ReadReplicaPromoteModeStandalone = ReadReplicaPromoteMode("standalone")
	ReadReplicaPromoteModeSwitchover = ReadReplicaPromoteMode("switchover")
)

// Sets the promote options for a replica server. This is a write only property.
type ReplicationPromoteOption string

const (
	ReplicationPromoteOptionPlanned = ReplicationPromoteOption("planned")
	ReplicationPromoteOptionForced  = ReplicationPromoteOption("forced")
)

// Replication role of the server
type ReplicationRole string

const (
	ReplicationRoleNone            = ReplicationRole("None")
	ReplicationRolePrimary         = ReplicationRole("Primary")
	ReplicationRoleAsyncReplica    = ReplicationRole("AsyncReplica")
	ReplicationRoleGeoAsyncReplica = ReplicationRole("GeoAsyncReplica")
)

// public network access is enabled or not
type ServerPublicNetworkAccessState string

const (
	ServerPublicNetworkAccessStateEnabled  = ServerPublicNetworkAccessState("Enabled")
	ServerPublicNetworkAccessStateDisabled = ServerPublicNetworkAccessState("Disabled")
)

// PostgreSQL Server version.
type ServerVersion string

const (
	ServerVersion_16 = ServerVersion("16")
	ServerVersion_15 = ServerVersion("15")
	ServerVersion_14 = ServerVersion("14")
	ServerVersion_13 = ServerVersion("13")
	ServerVersion_12 = ServerVersion("12")
	ServerVersion_11 = ServerVersion("11")
)

// The tier of the particular SKU, e.g. Burstable.
type SkuTier string

const (
	SkuTierBurstable       = SkuTier("Burstable")
	SkuTierGeneralPurpose  = SkuTier("GeneralPurpose")
	SkuTierMemoryOptimized = SkuTier("MemoryOptimized")
)

// migration source server type : OnPremises, AWS, GCP, AzureVM or PostgreSQLSingleServer
type SourceType string

const (
	SourceTypeOnPremises             = SourceType("OnPremises")
	SourceTypeAWS                    = SourceType("AWS")
	SourceTypeGCP                    = SourceType("GCP")
	SourceTypeAzureVM                = SourceType("AzureVM")
	SourceTypePostgreSQLSingleServer = SourceType("PostgreSQLSingleServer")
)

// SSL modes for migration. Default SSL mode for PostgreSQLSingleServer is VerifyFull and Prefer for other source types
type SslMode string

const (
	SslModePrefer     = SslMode("Prefer")
	SslModeRequire    = SslMode("Require")
	SslModeVerifyCA   = SslMode("VerifyCA")
	SslModeVerifyFull = SslMode("VerifyFull")
)

// Indicates whether the data migration should start right away
type StartDataMigrationEnum string

const (
	StartDataMigrationEnumTrue  = StartDataMigrationEnum("True")
	StartDataMigrationEnumFalse = StartDataMigrationEnum("False")
)

// Flag to enable / disable Storage Auto grow for flexible server.
type StorageAutoGrow string

const (
	StorageAutoGrowEnabled  = StorageAutoGrow("Enabled")
	StorageAutoGrowDisabled = StorageAutoGrow("Disabled")
)

// Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified
type StorageType string

const (
	StorageType_Premium_LRS   = StorageType("Premium_LRS")
	StorageType_PremiumV2_LRS = StorageType("PremiumV2_LRS")
)

// To trigger cutover for entire migration we need to send this flag as True
type TriggerCutoverEnum string

const (
	TriggerCutoverEnumTrue  = TriggerCutoverEnum("True")
	TriggerCutoverEnumFalse = TriggerCutoverEnum("False")
)

// The endpoint type for the virtual endpoint.
type VirtualEndpointType string

const (
	VirtualEndpointTypeReadWrite = VirtualEndpointType("ReadWrite")
)

func init() {
}
