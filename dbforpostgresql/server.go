// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbforpostgresql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Flexible server.
//
// Uses Azure REST API version 2024-08-01. In version 2.x of the Azure Native provider, it used API version 2022-12-01.
//
// Other available API versions: 2022-12-01, 2023-03-01-preview, 2023-06-01-preview, 2023-12-01-preview, 2024-03-01-preview, 2024-11-01-preview, 2025-01-01-preview, 2025-06-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native dbforpostgresql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type Server struct {
	pulumi.CustomResourceState

	// Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.
	AdministratorLogin pulumi.StringPtrOutput `pulumi:"administratorLogin"`
	// Authentication configuration properties of a flexible server.
	AuthConfig AuthConfigResponsePtrOutput `pulumi:"authConfig"`
	// Availability zone of a flexible server.
	AvailabilityZone pulumi.StringPtrOutput `pulumi:"availabilityZone"`
	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// Backup properties of a flexible server.
	Backup BackupResponsePtrOutput `pulumi:"backup"`
	// Data encryption properties of a flexible server.
	DataEncryption DataEncryptionResponsePtrOutput `pulumi:"dataEncryption"`
	// Fully qualified domain name of a flexible server.
	FullyQualifiedDomainName pulumi.StringOutput `pulumi:"fullyQualifiedDomainName"`
	// High availability properties of a flexible server.
	HighAvailability HighAvailabilityResponsePtrOutput `pulumi:"highAvailability"`
	// User assigned managed identities assigned to the flexible server.
	Identity UserAssignedIdentityResponsePtrOutput `pulumi:"identity"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// Maintenance window properties of a flexible server.
	MaintenanceWindow MaintenanceWindowResponsePtrOutput `pulumi:"maintenanceWindow"`
	// Minor version of PostgreSQL database engine.
	MinorVersion pulumi.StringOutput `pulumi:"minorVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Network properties of a flexible server. Only required if you want your server to be integrated into a virtual network provided by customer.
	Network NetworkResponsePtrOutput `pulumi:"network"`
	// List of private endpoint connections associated with the specified flexible server.
	PrivateEndpointConnections PrivateEndpointConnectionResponseArrayOutput `pulumi:"privateEndpointConnections"`
	// Read replica properties of a flexible server. Required only in case that you want to promote a server.
	Replica ReplicaResponsePtrOutput `pulumi:"replica"`
	// Maximum number of read replicas allowed for a flexible server.
	ReplicaCapacity pulumi.IntOutput `pulumi:"replicaCapacity"`
	// Role of the server in a replication set.
	ReplicationRole pulumi.StringPtrOutput `pulumi:"replicationRole"`
	// Compute tier and size of a flexible server.
	Sku SkuResponsePtrOutput `pulumi:"sku"`
	// Identifier of the flexible server to be used as the source of the new flexible server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target flexible server is a read replica.
	SourceServerResourceId pulumi.StringPtrOutput `pulumi:"sourceServerResourceId"`
	// Possible states of a flexible server.
	State pulumi.StringOutput `pulumi:"state"`
	// Storage properties of a flexible server.
	Storage StorageResponsePtrOutput `pulumi:"storage"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Major version of PostgreSQL database engine.
	Version pulumi.StringPtrOutput `pulumi:"version"`
}

// NewServer registers a new resource with the given unique name, arguments, and options.
func NewServer(ctx *pulumi.Context,
	name string, args *ServerArgs, opts ...pulumi.ResourceOption) (*Server, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.AuthConfig != nil {
		args.AuthConfig = args.AuthConfig.ToAuthConfigPtrOutput().ApplyT(func(v *AuthConfig) *AuthConfig { return v.Defaults() }).(AuthConfigPtrOutput)
	}
	if args.AvailabilityZone == nil {
		args.AvailabilityZone = pulumi.StringPtr("")
	}
	if args.Backup != nil {
		args.Backup = args.Backup.ToBackupTypePtrOutput().ApplyT(func(v *BackupType) *BackupType { return v.Defaults() }).(BackupTypePtrOutput)
	}
	if args.HighAvailability != nil {
		args.HighAvailability = args.HighAvailability.ToHighAvailabilityPtrOutput().ApplyT(func(v *HighAvailability) *HighAvailability { return v.Defaults() }).(HighAvailabilityPtrOutput)
	}
	if args.MaintenanceWindow != nil {
		args.MaintenanceWindow = args.MaintenanceWindow.ToMaintenanceWindowPtrOutput().ApplyT(func(v *MaintenanceWindow) *MaintenanceWindow { return v.Defaults() }).(MaintenanceWindowPtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20171201:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20171201preview:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20200214preview:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20200214privatepreview:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20210410privatepreview:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20210601:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20210601preview:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20210615privatepreview:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20220120preview:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20220308preview:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20221201:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20230301preview:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20230601preview:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20231201preview:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20240301preview:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20240801:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20241101preview:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20250101preview:Server"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20250601preview:Server"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Server
	err := ctx.RegisterResource("azure-native:dbforpostgresql:Server", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServer gets an existing Server resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerState, opts ...pulumi.ResourceOption) (*Server, error) {
	var resource Server
	err := ctx.ReadResource("azure-native:dbforpostgresql:Server", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Server resources.
type serverState struct {
}

type ServerState struct {
}

func (ServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverState)(nil)).Elem()
}

type serverArgs struct {
	// Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.
	AdministratorLogin *string `pulumi:"administratorLogin"`
	// Password assigned to the administrator login. As long as password authentication is enabled, this password can be changed at any time.
	AdministratorLoginPassword *string `pulumi:"administratorLoginPassword"`
	// Authentication configuration properties of a flexible server.
	AuthConfig *AuthConfig `pulumi:"authConfig"`
	// Availability zone of a flexible server.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Backup properties of a flexible server.
	Backup *BackupType `pulumi:"backup"`
	// Creation mode of a new flexible server.
	CreateMode *string `pulumi:"createMode"`
	// Data encryption properties of a flexible server.
	DataEncryption *DataEncryption `pulumi:"dataEncryption"`
	// High availability properties of a flexible server.
	HighAvailability *HighAvailability `pulumi:"highAvailability"`
	// User assigned managed identities assigned to the flexible server.
	Identity *UserAssignedIdentity `pulumi:"identity"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Maintenance window properties of a flexible server.
	MaintenanceWindow *MaintenanceWindow `pulumi:"maintenanceWindow"`
	// Network properties of a flexible server. Only required if you want your server to be integrated into a virtual network provided by customer.
	Network *Network `pulumi:"network"`
	// Creation time (in ISO8601 format) of the backup which you want to restore in the new flexible server. It's required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', or 'ReviveDropped'.
	PointInTimeUTC *string `pulumi:"pointInTimeUTC"`
	// Read replica properties of a flexible server. Required only in case that you want to promote a server.
	Replica *Replica `pulumi:"replica"`
	// Role of the server in a replication set.
	ReplicationRole *string `pulumi:"replicationRole"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName *string `pulumi:"serverName"`
	// Compute tier and size of a flexible server.
	Sku *Sku `pulumi:"sku"`
	// Identifier of the flexible server to be used as the source of the new flexible server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target flexible server is a read replica.
	SourceServerResourceId *string `pulumi:"sourceServerResourceId"`
	// Storage properties of a flexible server.
	Storage *Storage `pulumi:"storage"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Major version of PostgreSQL database engine.
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a Server resource.
type ServerArgs struct {
	// Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.
	AdministratorLogin pulumi.StringPtrInput
	// Password assigned to the administrator login. As long as password authentication is enabled, this password can be changed at any time.
	AdministratorLoginPassword pulumi.StringPtrInput
	// Authentication configuration properties of a flexible server.
	AuthConfig AuthConfigPtrInput
	// Availability zone of a flexible server.
	AvailabilityZone pulumi.StringPtrInput
	// Backup properties of a flexible server.
	Backup BackupTypePtrInput
	// Creation mode of a new flexible server.
	CreateMode pulumi.StringPtrInput
	// Data encryption properties of a flexible server.
	DataEncryption DataEncryptionPtrInput
	// High availability properties of a flexible server.
	HighAvailability HighAvailabilityPtrInput
	// User assigned managed identities assigned to the flexible server.
	Identity UserAssignedIdentityPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Maintenance window properties of a flexible server.
	MaintenanceWindow MaintenanceWindowPtrInput
	// Network properties of a flexible server. Only required if you want your server to be integrated into a virtual network provided by customer.
	Network NetworkPtrInput
	// Creation time (in ISO8601 format) of the backup which you want to restore in the new flexible server. It's required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', or 'ReviveDropped'.
	PointInTimeUTC pulumi.StringPtrInput
	// Read replica properties of a flexible server. Required only in case that you want to promote a server.
	Replica ReplicaPtrInput
	// Role of the server in a replication set.
	ReplicationRole pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the server.
	ServerName pulumi.StringPtrInput
	// Compute tier and size of a flexible server.
	Sku SkuPtrInput
	// Identifier of the flexible server to be used as the source of the new flexible server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target flexible server is a read replica.
	SourceServerResourceId pulumi.StringPtrInput
	// Storage properties of a flexible server.
	Storage StoragePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Major version of PostgreSQL database engine.
	Version pulumi.StringPtrInput
}

func (ServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverArgs)(nil)).Elem()
}

type ServerInput interface {
	pulumi.Input

	ToServerOutput() ServerOutput
	ToServerOutputWithContext(ctx context.Context) ServerOutput
}

func (*Server) ElementType() reflect.Type {
	return reflect.TypeOf((**Server)(nil)).Elem()
}

func (i *Server) ToServerOutput() ServerOutput {
	return i.ToServerOutputWithContext(context.Background())
}

func (i *Server) ToServerOutputWithContext(ctx context.Context) ServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerOutput)
}

type ServerOutput struct{ *pulumi.OutputState }

func (ServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Server)(nil)).Elem()
}

func (o ServerOutput) ToServerOutput() ServerOutput {
	return o
}

func (o ServerOutput) ToServerOutputWithContext(ctx context.Context) ServerOutput {
	return o
}

// Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.
func (o ServerOutput) AdministratorLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.AdministratorLogin }).(pulumi.StringPtrOutput)
}

// Authentication configuration properties of a flexible server.
func (o ServerOutput) AuthConfig() AuthConfigResponsePtrOutput {
	return o.ApplyT(func(v *Server) AuthConfigResponsePtrOutput { return v.AuthConfig }).(AuthConfigResponsePtrOutput)
}

// Availability zone of a flexible server.
func (o ServerOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The Azure API version of the resource.
func (o ServerOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Server) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Backup properties of a flexible server.
func (o ServerOutput) Backup() BackupResponsePtrOutput {
	return o.ApplyT(func(v *Server) BackupResponsePtrOutput { return v.Backup }).(BackupResponsePtrOutput)
}

// Data encryption properties of a flexible server.
func (o ServerOutput) DataEncryption() DataEncryptionResponsePtrOutput {
	return o.ApplyT(func(v *Server) DataEncryptionResponsePtrOutput { return v.DataEncryption }).(DataEncryptionResponsePtrOutput)
}

// Fully qualified domain name of a flexible server.
func (o ServerOutput) FullyQualifiedDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *Server) pulumi.StringOutput { return v.FullyQualifiedDomainName }).(pulumi.StringOutput)
}

// High availability properties of a flexible server.
func (o ServerOutput) HighAvailability() HighAvailabilityResponsePtrOutput {
	return o.ApplyT(func(v *Server) HighAvailabilityResponsePtrOutput { return v.HighAvailability }).(HighAvailabilityResponsePtrOutput)
}

// User assigned managed identities assigned to the flexible server.
func (o ServerOutput) Identity() UserAssignedIdentityResponsePtrOutput {
	return o.ApplyT(func(v *Server) UserAssignedIdentityResponsePtrOutput { return v.Identity }).(UserAssignedIdentityResponsePtrOutput)
}

// The geo-location where the resource lives
func (o ServerOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Server) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Maintenance window properties of a flexible server.
func (o ServerOutput) MaintenanceWindow() MaintenanceWindowResponsePtrOutput {
	return o.ApplyT(func(v *Server) MaintenanceWindowResponsePtrOutput { return v.MaintenanceWindow }).(MaintenanceWindowResponsePtrOutput)
}

// Minor version of PostgreSQL database engine.
func (o ServerOutput) MinorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Server) pulumi.StringOutput { return v.MinorVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o ServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Server) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Network properties of a flexible server. Only required if you want your server to be integrated into a virtual network provided by customer.
func (o ServerOutput) Network() NetworkResponsePtrOutput {
	return o.ApplyT(func(v *Server) NetworkResponsePtrOutput { return v.Network }).(NetworkResponsePtrOutput)
}

// List of private endpoint connections associated with the specified flexible server.
func (o ServerOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v *Server) PrivateEndpointConnectionResponseArrayOutput { return v.PrivateEndpointConnections }).(PrivateEndpointConnectionResponseArrayOutput)
}

// Read replica properties of a flexible server. Required only in case that you want to promote a server.
func (o ServerOutput) Replica() ReplicaResponsePtrOutput {
	return o.ApplyT(func(v *Server) ReplicaResponsePtrOutput { return v.Replica }).(ReplicaResponsePtrOutput)
}

// Maximum number of read replicas allowed for a flexible server.
func (o ServerOutput) ReplicaCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *Server) pulumi.IntOutput { return v.ReplicaCapacity }).(pulumi.IntOutput)
}

// Role of the server in a replication set.
func (o ServerOutput) ReplicationRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.ReplicationRole }).(pulumi.StringPtrOutput)
}

// Compute tier and size of a flexible server.
func (o ServerOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v *Server) SkuResponsePtrOutput { return v.Sku }).(SkuResponsePtrOutput)
}

// Identifier of the flexible server to be used as the source of the new flexible server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target flexible server is a read replica.
func (o ServerOutput) SourceServerResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.SourceServerResourceId }).(pulumi.StringPtrOutput)
}

// Possible states of a flexible server.
func (o ServerOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Server) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Storage properties of a flexible server.
func (o ServerOutput) Storage() StorageResponsePtrOutput {
	return o.ApplyT(func(v *Server) StorageResponsePtrOutput { return v.Storage }).(StorageResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ServerOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Server) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o ServerOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Server) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ServerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Server) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Major version of PostgreSQL database engine.
func (o ServerOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ServerOutput{})
}
