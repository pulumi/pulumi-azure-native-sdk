// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbforpostgresql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Server admin credentials.
type AdminCredentials struct {
	// Password for source server.
	SourceServerPassword string `pulumi:"sourceServerPassword"`
	// Password for target server.
	TargetServerPassword string `pulumi:"targetServerPassword"`
}

// AdminCredentialsInput is an input type that accepts AdminCredentialsArgs and AdminCredentialsOutput values.
// You can construct a concrete instance of `AdminCredentialsInput` via:
//
//	AdminCredentialsArgs{...}
type AdminCredentialsInput interface {
	pulumi.Input

	ToAdminCredentialsOutput() AdminCredentialsOutput
	ToAdminCredentialsOutputWithContext(context.Context) AdminCredentialsOutput
}

// Server admin credentials.
type AdminCredentialsArgs struct {
	// Password for source server.
	SourceServerPassword pulumi.StringInput `pulumi:"sourceServerPassword"`
	// Password for target server.
	TargetServerPassword pulumi.StringInput `pulumi:"targetServerPassword"`
}

func (AdminCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminCredentials)(nil)).Elem()
}

func (i AdminCredentialsArgs) ToAdminCredentialsOutput() AdminCredentialsOutput {
	return i.ToAdminCredentialsOutputWithContext(context.Background())
}

func (i AdminCredentialsArgs) ToAdminCredentialsOutputWithContext(ctx context.Context) AdminCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminCredentialsOutput)
}

func (i AdminCredentialsArgs) ToAdminCredentialsPtrOutput() AdminCredentialsPtrOutput {
	return i.ToAdminCredentialsPtrOutputWithContext(context.Background())
}

func (i AdminCredentialsArgs) ToAdminCredentialsPtrOutputWithContext(ctx context.Context) AdminCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminCredentialsOutput).ToAdminCredentialsPtrOutputWithContext(ctx)
}

// AdminCredentialsPtrInput is an input type that accepts AdminCredentialsArgs, AdminCredentialsPtr and AdminCredentialsPtrOutput values.
// You can construct a concrete instance of `AdminCredentialsPtrInput` via:
//
//	        AdminCredentialsArgs{...}
//
//	or:
//
//	        nil
type AdminCredentialsPtrInput interface {
	pulumi.Input

	ToAdminCredentialsPtrOutput() AdminCredentialsPtrOutput
	ToAdminCredentialsPtrOutputWithContext(context.Context) AdminCredentialsPtrOutput
}

type adminCredentialsPtrType AdminCredentialsArgs

func AdminCredentialsPtr(v *AdminCredentialsArgs) AdminCredentialsPtrInput {
	return (*adminCredentialsPtrType)(v)
}

func (*adminCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdminCredentials)(nil)).Elem()
}

func (i *adminCredentialsPtrType) ToAdminCredentialsPtrOutput() AdminCredentialsPtrOutput {
	return i.ToAdminCredentialsPtrOutputWithContext(context.Background())
}

func (i *adminCredentialsPtrType) ToAdminCredentialsPtrOutputWithContext(ctx context.Context) AdminCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminCredentialsPtrOutput)
}

// Server admin credentials.
type AdminCredentialsOutput struct{ *pulumi.OutputState }

func (AdminCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminCredentials)(nil)).Elem()
}

func (o AdminCredentialsOutput) ToAdminCredentialsOutput() AdminCredentialsOutput {
	return o
}

func (o AdminCredentialsOutput) ToAdminCredentialsOutputWithContext(ctx context.Context) AdminCredentialsOutput {
	return o
}

func (o AdminCredentialsOutput) ToAdminCredentialsPtrOutput() AdminCredentialsPtrOutput {
	return o.ToAdminCredentialsPtrOutputWithContext(context.Background())
}

func (o AdminCredentialsOutput) ToAdminCredentialsPtrOutputWithContext(ctx context.Context) AdminCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdminCredentials) *AdminCredentials {
		return &v
	}).(AdminCredentialsPtrOutput)
}

// Password for source server.
func (o AdminCredentialsOutput) SourceServerPassword() pulumi.StringOutput {
	return o.ApplyT(func(v AdminCredentials) string { return v.SourceServerPassword }).(pulumi.StringOutput)
}

// Password for target server.
func (o AdminCredentialsOutput) TargetServerPassword() pulumi.StringOutput {
	return o.ApplyT(func(v AdminCredentials) string { return v.TargetServerPassword }).(pulumi.StringOutput)
}

type AdminCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AdminCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdminCredentials)(nil)).Elem()
}

func (o AdminCredentialsPtrOutput) ToAdminCredentialsPtrOutput() AdminCredentialsPtrOutput {
	return o
}

func (o AdminCredentialsPtrOutput) ToAdminCredentialsPtrOutputWithContext(ctx context.Context) AdminCredentialsPtrOutput {
	return o
}

func (o AdminCredentialsPtrOutput) Elem() AdminCredentialsOutput {
	return o.ApplyT(func(v *AdminCredentials) AdminCredentials {
		if v != nil {
			return *v
		}
		var ret AdminCredentials
		return ret
	}).(AdminCredentialsOutput)
}

// Password for source server.
func (o AdminCredentialsPtrOutput) SourceServerPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdminCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.SourceServerPassword
	}).(pulumi.StringPtrOutput)
}

// Password for target server.
func (o AdminCredentialsPtrOutput) TargetServerPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdminCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.TargetServerPassword
	}).(pulumi.StringPtrOutput)
}

// Authentication configuration properties of a server
type AuthConfig struct {
	// If Enabled, Azure Active Directory authentication is enabled.
	ActiveDirectoryAuth *string `pulumi:"activeDirectoryAuth"`
	// If Enabled, Password authentication is enabled.
	PasswordAuth *string `pulumi:"passwordAuth"`
	// Tenant id of the server.
	TenantId *string `pulumi:"tenantId"`
}

// Defaults sets the appropriate defaults for AuthConfig
func (val *AuthConfig) Defaults() *AuthConfig {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PasswordAuth == nil {
		passwordAuth_ := "Enabled"
		tmp.PasswordAuth = &passwordAuth_
	}
	if tmp.TenantId == nil {
		tenantId_ := ""
		tmp.TenantId = &tenantId_
	}
	return &tmp
}

// AuthConfigInput is an input type that accepts AuthConfigArgs and AuthConfigOutput values.
// You can construct a concrete instance of `AuthConfigInput` via:
//
//	AuthConfigArgs{...}
type AuthConfigInput interface {
	pulumi.Input

	ToAuthConfigOutput() AuthConfigOutput
	ToAuthConfigOutputWithContext(context.Context) AuthConfigOutput
}

// Authentication configuration properties of a server
type AuthConfigArgs struct {
	// If Enabled, Azure Active Directory authentication is enabled.
	ActiveDirectoryAuth pulumi.StringPtrInput `pulumi:"activeDirectoryAuth"`
	// If Enabled, Password authentication is enabled.
	PasswordAuth pulumi.StringPtrInput `pulumi:"passwordAuth"`
	// Tenant id of the server.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

// Defaults sets the appropriate defaults for AuthConfigArgs
func (val *AuthConfigArgs) Defaults() *AuthConfigArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PasswordAuth == nil {
		tmp.PasswordAuth = pulumi.StringPtr("Enabled")
	}
	if tmp.TenantId == nil {
		tmp.TenantId = pulumi.StringPtr("")
	}
	return &tmp
}
func (AuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthConfig)(nil)).Elem()
}

func (i AuthConfigArgs) ToAuthConfigOutput() AuthConfigOutput {
	return i.ToAuthConfigOutputWithContext(context.Background())
}

func (i AuthConfigArgs) ToAuthConfigOutputWithContext(ctx context.Context) AuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthConfigOutput)
}

func (i AuthConfigArgs) ToAuthConfigPtrOutput() AuthConfigPtrOutput {
	return i.ToAuthConfigPtrOutputWithContext(context.Background())
}

func (i AuthConfigArgs) ToAuthConfigPtrOutputWithContext(ctx context.Context) AuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthConfigOutput).ToAuthConfigPtrOutputWithContext(ctx)
}

// AuthConfigPtrInput is an input type that accepts AuthConfigArgs, AuthConfigPtr and AuthConfigPtrOutput values.
// You can construct a concrete instance of `AuthConfigPtrInput` via:
//
//	        AuthConfigArgs{...}
//
//	or:
//
//	        nil
type AuthConfigPtrInput interface {
	pulumi.Input

	ToAuthConfigPtrOutput() AuthConfigPtrOutput
	ToAuthConfigPtrOutputWithContext(context.Context) AuthConfigPtrOutput
}

type authConfigPtrType AuthConfigArgs

func AuthConfigPtr(v *AuthConfigArgs) AuthConfigPtrInput {
	return (*authConfigPtrType)(v)
}

func (*authConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthConfig)(nil)).Elem()
}

func (i *authConfigPtrType) ToAuthConfigPtrOutput() AuthConfigPtrOutput {
	return i.ToAuthConfigPtrOutputWithContext(context.Background())
}

func (i *authConfigPtrType) ToAuthConfigPtrOutputWithContext(ctx context.Context) AuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthConfigPtrOutput)
}

// Authentication configuration properties of a server
type AuthConfigOutput struct{ *pulumi.OutputState }

func (AuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthConfig)(nil)).Elem()
}

func (o AuthConfigOutput) ToAuthConfigOutput() AuthConfigOutput {
	return o
}

func (o AuthConfigOutput) ToAuthConfigOutputWithContext(ctx context.Context) AuthConfigOutput {
	return o
}

func (o AuthConfigOutput) ToAuthConfigPtrOutput() AuthConfigPtrOutput {
	return o.ToAuthConfigPtrOutputWithContext(context.Background())
}

func (o AuthConfigOutput) ToAuthConfigPtrOutputWithContext(ctx context.Context) AuthConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthConfig) *AuthConfig {
		return &v
	}).(AuthConfigPtrOutput)
}

// If Enabled, Azure Active Directory authentication is enabled.
func (o AuthConfigOutput) ActiveDirectoryAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthConfig) *string { return v.ActiveDirectoryAuth }).(pulumi.StringPtrOutput)
}

// If Enabled, Password authentication is enabled.
func (o AuthConfigOutput) PasswordAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthConfig) *string { return v.PasswordAuth }).(pulumi.StringPtrOutput)
}

// Tenant id of the server.
func (o AuthConfigOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthConfig) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type AuthConfigPtrOutput struct{ *pulumi.OutputState }

func (AuthConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthConfig)(nil)).Elem()
}

func (o AuthConfigPtrOutput) ToAuthConfigPtrOutput() AuthConfigPtrOutput {
	return o
}

func (o AuthConfigPtrOutput) ToAuthConfigPtrOutputWithContext(ctx context.Context) AuthConfigPtrOutput {
	return o
}

func (o AuthConfigPtrOutput) Elem() AuthConfigOutput {
	return o.ApplyT(func(v *AuthConfig) AuthConfig {
		if v != nil {
			return *v
		}
		var ret AuthConfig
		return ret
	}).(AuthConfigOutput)
}

// If Enabled, Azure Active Directory authentication is enabled.
func (o AuthConfigPtrOutput) ActiveDirectoryAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthConfig) *string {
		if v == nil {
			return nil
		}
		return v.ActiveDirectoryAuth
	}).(pulumi.StringPtrOutput)
}

// If Enabled, Password authentication is enabled.
func (o AuthConfigPtrOutput) PasswordAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthConfig) *string {
		if v == nil {
			return nil
		}
		return v.PasswordAuth
	}).(pulumi.StringPtrOutput)
}

// Tenant id of the server.
func (o AuthConfigPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthConfig) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Authentication configuration properties of a server
type AuthConfigResponse struct {
	// If Enabled, Azure Active Directory authentication is enabled.
	ActiveDirectoryAuth *string `pulumi:"activeDirectoryAuth"`
	// If Enabled, Password authentication is enabled.
	PasswordAuth *string `pulumi:"passwordAuth"`
	// Tenant id of the server.
	TenantId *string `pulumi:"tenantId"`
}

// Defaults sets the appropriate defaults for AuthConfigResponse
func (val *AuthConfigResponse) Defaults() *AuthConfigResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PasswordAuth == nil {
		passwordAuth_ := "Enabled"
		tmp.PasswordAuth = &passwordAuth_
	}
	if tmp.TenantId == nil {
		tenantId_ := ""
		tmp.TenantId = &tenantId_
	}
	return &tmp
}

// Authentication configuration properties of a server
type AuthConfigResponseOutput struct{ *pulumi.OutputState }

func (AuthConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthConfigResponse)(nil)).Elem()
}

func (o AuthConfigResponseOutput) ToAuthConfigResponseOutput() AuthConfigResponseOutput {
	return o
}

func (o AuthConfigResponseOutput) ToAuthConfigResponseOutputWithContext(ctx context.Context) AuthConfigResponseOutput {
	return o
}

// If Enabled, Azure Active Directory authentication is enabled.
func (o AuthConfigResponseOutput) ActiveDirectoryAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthConfigResponse) *string { return v.ActiveDirectoryAuth }).(pulumi.StringPtrOutput)
}

// If Enabled, Password authentication is enabled.
func (o AuthConfigResponseOutput) PasswordAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthConfigResponse) *string { return v.PasswordAuth }).(pulumi.StringPtrOutput)
}

// Tenant id of the server.
func (o AuthConfigResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthConfigResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type AuthConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthConfigResponse)(nil)).Elem()
}

func (o AuthConfigResponsePtrOutput) ToAuthConfigResponsePtrOutput() AuthConfigResponsePtrOutput {
	return o
}

func (o AuthConfigResponsePtrOutput) ToAuthConfigResponsePtrOutputWithContext(ctx context.Context) AuthConfigResponsePtrOutput {
	return o
}

func (o AuthConfigResponsePtrOutput) Elem() AuthConfigResponseOutput {
	return o.ApplyT(func(v *AuthConfigResponse) AuthConfigResponse {
		if v != nil {
			return *v
		}
		var ret AuthConfigResponse
		return ret
	}).(AuthConfigResponseOutput)
}

// If Enabled, Azure Active Directory authentication is enabled.
func (o AuthConfigResponsePtrOutput) ActiveDirectoryAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActiveDirectoryAuth
	}).(pulumi.StringPtrOutput)
}

// If Enabled, Password authentication is enabled.
func (o AuthConfigResponsePtrOutput) PasswordAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PasswordAuth
	}).(pulumi.StringPtrOutput)
}

// Tenant id of the server.
func (o AuthConfigResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Backup properties of a server
type BackupType struct {
	// Backup retention days for the server.
	BackupRetentionDays *int `pulumi:"backupRetentionDays"`
	// A value indicating whether Geo-Redundant backup is enabled on the server.
	GeoRedundantBackup *string `pulumi:"geoRedundantBackup"`
}

// Defaults sets the appropriate defaults for BackupType
func (val *BackupType) Defaults() *BackupType {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.BackupRetentionDays == nil {
		backupRetentionDays_ := 7
		tmp.BackupRetentionDays = &backupRetentionDays_
	}
	if tmp.GeoRedundantBackup == nil {
		geoRedundantBackup_ := "Disabled"
		tmp.GeoRedundantBackup = &geoRedundantBackup_
	}
	return &tmp
}

// BackupTypeInput is an input type that accepts BackupTypeArgs and BackupTypeOutput values.
// You can construct a concrete instance of `BackupTypeInput` via:
//
//	BackupTypeArgs{...}
type BackupTypeInput interface {
	pulumi.Input

	ToBackupTypeOutput() BackupTypeOutput
	ToBackupTypeOutputWithContext(context.Context) BackupTypeOutput
}

// Backup properties of a server
type BackupTypeArgs struct {
	// Backup retention days for the server.
	BackupRetentionDays pulumi.IntPtrInput `pulumi:"backupRetentionDays"`
	// A value indicating whether Geo-Redundant backup is enabled on the server.
	GeoRedundantBackup pulumi.StringPtrInput `pulumi:"geoRedundantBackup"`
}

// Defaults sets the appropriate defaults for BackupTypeArgs
func (val *BackupTypeArgs) Defaults() *BackupTypeArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.BackupRetentionDays == nil {
		tmp.BackupRetentionDays = pulumi.IntPtr(7)
	}
	if tmp.GeoRedundantBackup == nil {
		tmp.GeoRedundantBackup = pulumi.StringPtr("Disabled")
	}
	return &tmp
}
func (BackupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupType)(nil)).Elem()
}

func (i BackupTypeArgs) ToBackupTypeOutput() BackupTypeOutput {
	return i.ToBackupTypeOutputWithContext(context.Background())
}

func (i BackupTypeArgs) ToBackupTypeOutputWithContext(ctx context.Context) BackupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupTypeOutput)
}

func (i BackupTypeArgs) ToBackupTypePtrOutput() BackupTypePtrOutput {
	return i.ToBackupTypePtrOutputWithContext(context.Background())
}

func (i BackupTypeArgs) ToBackupTypePtrOutputWithContext(ctx context.Context) BackupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupTypeOutput).ToBackupTypePtrOutputWithContext(ctx)
}

// BackupTypePtrInput is an input type that accepts BackupTypeArgs, BackupTypePtr and BackupTypePtrOutput values.
// You can construct a concrete instance of `BackupTypePtrInput` via:
//
//	        BackupTypeArgs{...}
//
//	or:
//
//	        nil
type BackupTypePtrInput interface {
	pulumi.Input

	ToBackupTypePtrOutput() BackupTypePtrOutput
	ToBackupTypePtrOutputWithContext(context.Context) BackupTypePtrOutput
}

type backupTypePtrType BackupTypeArgs

func BackupTypePtr(v *BackupTypeArgs) BackupTypePtrInput {
	return (*backupTypePtrType)(v)
}

func (*backupTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupType)(nil)).Elem()
}

func (i *backupTypePtrType) ToBackupTypePtrOutput() BackupTypePtrOutput {
	return i.ToBackupTypePtrOutputWithContext(context.Background())
}

func (i *backupTypePtrType) ToBackupTypePtrOutputWithContext(ctx context.Context) BackupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupTypePtrOutput)
}

// Backup properties of a server
type BackupTypeOutput struct{ *pulumi.OutputState }

func (BackupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupType)(nil)).Elem()
}

func (o BackupTypeOutput) ToBackupTypeOutput() BackupTypeOutput {
	return o
}

func (o BackupTypeOutput) ToBackupTypeOutputWithContext(ctx context.Context) BackupTypeOutput {
	return o
}

func (o BackupTypeOutput) ToBackupTypePtrOutput() BackupTypePtrOutput {
	return o.ToBackupTypePtrOutputWithContext(context.Background())
}

func (o BackupTypeOutput) ToBackupTypePtrOutputWithContext(ctx context.Context) BackupTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupType) *BackupType {
		return &v
	}).(BackupTypePtrOutput)
}

// Backup retention days for the server.
func (o BackupTypeOutput) BackupRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupType) *int { return v.BackupRetentionDays }).(pulumi.IntPtrOutput)
}

// A value indicating whether Geo-Redundant backup is enabled on the server.
func (o BackupTypeOutput) GeoRedundantBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupType) *string { return v.GeoRedundantBackup }).(pulumi.StringPtrOutput)
}

type BackupTypePtrOutput struct{ *pulumi.OutputState }

func (BackupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupType)(nil)).Elem()
}

func (o BackupTypePtrOutput) ToBackupTypePtrOutput() BackupTypePtrOutput {
	return o
}

func (o BackupTypePtrOutput) ToBackupTypePtrOutputWithContext(ctx context.Context) BackupTypePtrOutput {
	return o
}

func (o BackupTypePtrOutput) Elem() BackupTypeOutput {
	return o.ApplyT(func(v *BackupType) BackupType {
		if v != nil {
			return *v
		}
		var ret BackupType
		return ret
	}).(BackupTypeOutput)
}

// Backup retention days for the server.
func (o BackupTypePtrOutput) BackupRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupType) *int {
		if v == nil {
			return nil
		}
		return v.BackupRetentionDays
	}).(pulumi.IntPtrOutput)
}

// A value indicating whether Geo-Redundant backup is enabled on the server.
func (o BackupTypePtrOutput) GeoRedundantBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupType) *string {
		if v == nil {
			return nil
		}
		return v.GeoRedundantBackup
	}).(pulumi.StringPtrOutput)
}

// Backup properties of a server
type BackupResponse struct {
	// Backup retention days for the server.
	BackupRetentionDays *int `pulumi:"backupRetentionDays"`
	// The earliest restore point time (ISO8601 format) for server.
	EarliestRestoreDate string `pulumi:"earliestRestoreDate"`
	// A value indicating whether Geo-Redundant backup is enabled on the server.
	GeoRedundantBackup *string `pulumi:"geoRedundantBackup"`
}

// Defaults sets the appropriate defaults for BackupResponse
func (val *BackupResponse) Defaults() *BackupResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.BackupRetentionDays == nil {
		backupRetentionDays_ := 7
		tmp.BackupRetentionDays = &backupRetentionDays_
	}
	if tmp.GeoRedundantBackup == nil {
		geoRedundantBackup_ := "Disabled"
		tmp.GeoRedundantBackup = &geoRedundantBackup_
	}
	return &tmp
}

// Backup properties of a server
type BackupResponseOutput struct{ *pulumi.OutputState }

func (BackupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupResponse)(nil)).Elem()
}

func (o BackupResponseOutput) ToBackupResponseOutput() BackupResponseOutput {
	return o
}

func (o BackupResponseOutput) ToBackupResponseOutputWithContext(ctx context.Context) BackupResponseOutput {
	return o
}

// Backup retention days for the server.
func (o BackupResponseOutput) BackupRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupResponse) *int { return v.BackupRetentionDays }).(pulumi.IntPtrOutput)
}

// The earliest restore point time (ISO8601 format) for server.
func (o BackupResponseOutput) EarliestRestoreDate() pulumi.StringOutput {
	return o.ApplyT(func(v BackupResponse) string { return v.EarliestRestoreDate }).(pulumi.StringOutput)
}

// A value indicating whether Geo-Redundant backup is enabled on the server.
func (o BackupResponseOutput) GeoRedundantBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupResponse) *string { return v.GeoRedundantBackup }).(pulumi.StringPtrOutput)
}

type BackupResponsePtrOutput struct{ *pulumi.OutputState }

func (BackupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupResponse)(nil)).Elem()
}

func (o BackupResponsePtrOutput) ToBackupResponsePtrOutput() BackupResponsePtrOutput {
	return o
}

func (o BackupResponsePtrOutput) ToBackupResponsePtrOutputWithContext(ctx context.Context) BackupResponsePtrOutput {
	return o
}

func (o BackupResponsePtrOutput) Elem() BackupResponseOutput {
	return o.ApplyT(func(v *BackupResponse) BackupResponse {
		if v != nil {
			return *v
		}
		var ret BackupResponse
		return ret
	}).(BackupResponseOutput)
}

// Backup retention days for the server.
func (o BackupResponsePtrOutput) BackupRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupResponse) *int {
		if v == nil {
			return nil
		}
		return v.BackupRetentionDays
	}).(pulumi.IntPtrOutput)
}

// The earliest restore point time (ISO8601 format) for server.
func (o BackupResponsePtrOutput) EarliestRestoreDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EarliestRestoreDate
	}).(pulumi.StringPtrOutput)
}

// A value indicating whether Geo-Redundant backup is enabled on the server.
func (o BackupResponsePtrOutput) GeoRedundantBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupResponse) *string {
		if v == nil {
			return nil
		}
		return v.GeoRedundantBackup
	}).(pulumi.StringPtrOutput)
}

// Data encryption properties of a server
type DataEncryption struct {
	// Geo-backup encryption key status for Data encryption enabled server.
	GeoBackupEncryptionKeyStatus *string `pulumi:"geoBackupEncryptionKeyStatus"`
	// URI for the key in keyvault for data encryption for geo-backup of server.
	GeoBackupKeyURI *string `pulumi:"geoBackupKeyURI"`
	// Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
	GeoBackupUserAssignedIdentityId *string `pulumi:"geoBackupUserAssignedIdentityId"`
	// Primary encryption key status for Data encryption enabled server.
	PrimaryEncryptionKeyStatus *string `pulumi:"primaryEncryptionKeyStatus"`
	// URI for the key in keyvault for data encryption of the primary server.
	PrimaryKeyURI *string `pulumi:"primaryKeyURI"`
	// Resource Id for the User assigned identity to be used for data encryption of the primary server.
	PrimaryUserAssignedIdentityId *string `pulumi:"primaryUserAssignedIdentityId"`
	// Data encryption type to depict if it is System Managed vs Azure Key vault.
	Type *string `pulumi:"type"`
}

// DataEncryptionInput is an input type that accepts DataEncryptionArgs and DataEncryptionOutput values.
// You can construct a concrete instance of `DataEncryptionInput` via:
//
//	DataEncryptionArgs{...}
type DataEncryptionInput interface {
	pulumi.Input

	ToDataEncryptionOutput() DataEncryptionOutput
	ToDataEncryptionOutputWithContext(context.Context) DataEncryptionOutput
}

// Data encryption properties of a server
type DataEncryptionArgs struct {
	// Geo-backup encryption key status for Data encryption enabled server.
	GeoBackupEncryptionKeyStatus pulumi.StringPtrInput `pulumi:"geoBackupEncryptionKeyStatus"`
	// URI for the key in keyvault for data encryption for geo-backup of server.
	GeoBackupKeyURI pulumi.StringPtrInput `pulumi:"geoBackupKeyURI"`
	// Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
	GeoBackupUserAssignedIdentityId pulumi.StringPtrInput `pulumi:"geoBackupUserAssignedIdentityId"`
	// Primary encryption key status for Data encryption enabled server.
	PrimaryEncryptionKeyStatus pulumi.StringPtrInput `pulumi:"primaryEncryptionKeyStatus"`
	// URI for the key in keyvault for data encryption of the primary server.
	PrimaryKeyURI pulumi.StringPtrInput `pulumi:"primaryKeyURI"`
	// Resource Id for the User assigned identity to be used for data encryption of the primary server.
	PrimaryUserAssignedIdentityId pulumi.StringPtrInput `pulumi:"primaryUserAssignedIdentityId"`
	// Data encryption type to depict if it is System Managed vs Azure Key vault.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DataEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataEncryption)(nil)).Elem()
}

func (i DataEncryptionArgs) ToDataEncryptionOutput() DataEncryptionOutput {
	return i.ToDataEncryptionOutputWithContext(context.Background())
}

func (i DataEncryptionArgs) ToDataEncryptionOutputWithContext(ctx context.Context) DataEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataEncryptionOutput)
}

func (i DataEncryptionArgs) ToDataEncryptionPtrOutput() DataEncryptionPtrOutput {
	return i.ToDataEncryptionPtrOutputWithContext(context.Background())
}

func (i DataEncryptionArgs) ToDataEncryptionPtrOutputWithContext(ctx context.Context) DataEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataEncryptionOutput).ToDataEncryptionPtrOutputWithContext(ctx)
}

// DataEncryptionPtrInput is an input type that accepts DataEncryptionArgs, DataEncryptionPtr and DataEncryptionPtrOutput values.
// You can construct a concrete instance of `DataEncryptionPtrInput` via:
//
//	        DataEncryptionArgs{...}
//
//	or:
//
//	        nil
type DataEncryptionPtrInput interface {
	pulumi.Input

	ToDataEncryptionPtrOutput() DataEncryptionPtrOutput
	ToDataEncryptionPtrOutputWithContext(context.Context) DataEncryptionPtrOutput
}

type dataEncryptionPtrType DataEncryptionArgs

func DataEncryptionPtr(v *DataEncryptionArgs) DataEncryptionPtrInput {
	return (*dataEncryptionPtrType)(v)
}

func (*dataEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataEncryption)(nil)).Elem()
}

func (i *dataEncryptionPtrType) ToDataEncryptionPtrOutput() DataEncryptionPtrOutput {
	return i.ToDataEncryptionPtrOutputWithContext(context.Background())
}

func (i *dataEncryptionPtrType) ToDataEncryptionPtrOutputWithContext(ctx context.Context) DataEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataEncryptionPtrOutput)
}

// Data encryption properties of a server
type DataEncryptionOutput struct{ *pulumi.OutputState }

func (DataEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataEncryption)(nil)).Elem()
}

func (o DataEncryptionOutput) ToDataEncryptionOutput() DataEncryptionOutput {
	return o
}

func (o DataEncryptionOutput) ToDataEncryptionOutputWithContext(ctx context.Context) DataEncryptionOutput {
	return o
}

func (o DataEncryptionOutput) ToDataEncryptionPtrOutput() DataEncryptionPtrOutput {
	return o.ToDataEncryptionPtrOutputWithContext(context.Background())
}

func (o DataEncryptionOutput) ToDataEncryptionPtrOutputWithContext(ctx context.Context) DataEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataEncryption) *DataEncryption {
		return &v
	}).(DataEncryptionPtrOutput)
}

// Geo-backup encryption key status for Data encryption enabled server.
func (o DataEncryptionOutput) GeoBackupEncryptionKeyStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryption) *string { return v.GeoBackupEncryptionKeyStatus }).(pulumi.StringPtrOutput)
}

// URI for the key in keyvault for data encryption for geo-backup of server.
func (o DataEncryptionOutput) GeoBackupKeyURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryption) *string { return v.GeoBackupKeyURI }).(pulumi.StringPtrOutput)
}

// Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
func (o DataEncryptionOutput) GeoBackupUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryption) *string { return v.GeoBackupUserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

// Primary encryption key status for Data encryption enabled server.
func (o DataEncryptionOutput) PrimaryEncryptionKeyStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryption) *string { return v.PrimaryEncryptionKeyStatus }).(pulumi.StringPtrOutput)
}

// URI for the key in keyvault for data encryption of the primary server.
func (o DataEncryptionOutput) PrimaryKeyURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryption) *string { return v.PrimaryKeyURI }).(pulumi.StringPtrOutput)
}

// Resource Id for the User assigned identity to be used for data encryption of the primary server.
func (o DataEncryptionOutput) PrimaryUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryption) *string { return v.PrimaryUserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

// Data encryption type to depict if it is System Managed vs Azure Key vault.
func (o DataEncryptionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryption) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DataEncryptionPtrOutput struct{ *pulumi.OutputState }

func (DataEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataEncryption)(nil)).Elem()
}

func (o DataEncryptionPtrOutput) ToDataEncryptionPtrOutput() DataEncryptionPtrOutput {
	return o
}

func (o DataEncryptionPtrOutput) ToDataEncryptionPtrOutputWithContext(ctx context.Context) DataEncryptionPtrOutput {
	return o
}

func (o DataEncryptionPtrOutput) Elem() DataEncryptionOutput {
	return o.ApplyT(func(v *DataEncryption) DataEncryption {
		if v != nil {
			return *v
		}
		var ret DataEncryption
		return ret
	}).(DataEncryptionOutput)
}

// Geo-backup encryption key status for Data encryption enabled server.
func (o DataEncryptionPtrOutput) GeoBackupEncryptionKeyStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.GeoBackupEncryptionKeyStatus
	}).(pulumi.StringPtrOutput)
}

// URI for the key in keyvault for data encryption for geo-backup of server.
func (o DataEncryptionPtrOutput) GeoBackupKeyURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.GeoBackupKeyURI
	}).(pulumi.StringPtrOutput)
}

// Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
func (o DataEncryptionPtrOutput) GeoBackupUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.GeoBackupUserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

// Primary encryption key status for Data encryption enabled server.
func (o DataEncryptionPtrOutput) PrimaryEncryptionKeyStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryEncryptionKeyStatus
	}).(pulumi.StringPtrOutput)
}

// URI for the key in keyvault for data encryption of the primary server.
func (o DataEncryptionPtrOutput) PrimaryKeyURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryKeyURI
	}).(pulumi.StringPtrOutput)
}

// Resource Id for the User assigned identity to be used for data encryption of the primary server.
func (o DataEncryptionPtrOutput) PrimaryUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryUserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

// Data encryption type to depict if it is System Managed vs Azure Key vault.
func (o DataEncryptionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Data encryption properties of a server
type DataEncryptionResponse struct {
	// Geo-backup encryption key status for Data encryption enabled server.
	GeoBackupEncryptionKeyStatus *string `pulumi:"geoBackupEncryptionKeyStatus"`
	// URI for the key in keyvault for data encryption for geo-backup of server.
	GeoBackupKeyURI *string `pulumi:"geoBackupKeyURI"`
	// Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
	GeoBackupUserAssignedIdentityId *string `pulumi:"geoBackupUserAssignedIdentityId"`
	// Primary encryption key status for Data encryption enabled server.
	PrimaryEncryptionKeyStatus *string `pulumi:"primaryEncryptionKeyStatus"`
	// URI for the key in keyvault for data encryption of the primary server.
	PrimaryKeyURI *string `pulumi:"primaryKeyURI"`
	// Resource Id for the User assigned identity to be used for data encryption of the primary server.
	PrimaryUserAssignedIdentityId *string `pulumi:"primaryUserAssignedIdentityId"`
	// Data encryption type to depict if it is System Managed vs Azure Key vault.
	Type *string `pulumi:"type"`
}

// Data encryption properties of a server
type DataEncryptionResponseOutput struct{ *pulumi.OutputState }

func (DataEncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataEncryptionResponse)(nil)).Elem()
}

func (o DataEncryptionResponseOutput) ToDataEncryptionResponseOutput() DataEncryptionResponseOutput {
	return o
}

func (o DataEncryptionResponseOutput) ToDataEncryptionResponseOutputWithContext(ctx context.Context) DataEncryptionResponseOutput {
	return o
}

// Geo-backup encryption key status for Data encryption enabled server.
func (o DataEncryptionResponseOutput) GeoBackupEncryptionKeyStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryptionResponse) *string { return v.GeoBackupEncryptionKeyStatus }).(pulumi.StringPtrOutput)
}

// URI for the key in keyvault for data encryption for geo-backup of server.
func (o DataEncryptionResponseOutput) GeoBackupKeyURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryptionResponse) *string { return v.GeoBackupKeyURI }).(pulumi.StringPtrOutput)
}

// Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
func (o DataEncryptionResponseOutput) GeoBackupUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryptionResponse) *string { return v.GeoBackupUserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

// Primary encryption key status for Data encryption enabled server.
func (o DataEncryptionResponseOutput) PrimaryEncryptionKeyStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryptionResponse) *string { return v.PrimaryEncryptionKeyStatus }).(pulumi.StringPtrOutput)
}

// URI for the key in keyvault for data encryption of the primary server.
func (o DataEncryptionResponseOutput) PrimaryKeyURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryptionResponse) *string { return v.PrimaryKeyURI }).(pulumi.StringPtrOutput)
}

// Resource Id for the User assigned identity to be used for data encryption of the primary server.
func (o DataEncryptionResponseOutput) PrimaryUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryptionResponse) *string { return v.PrimaryUserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

// Data encryption type to depict if it is System Managed vs Azure Key vault.
func (o DataEncryptionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEncryptionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DataEncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (DataEncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataEncryptionResponse)(nil)).Elem()
}

func (o DataEncryptionResponsePtrOutput) ToDataEncryptionResponsePtrOutput() DataEncryptionResponsePtrOutput {
	return o
}

func (o DataEncryptionResponsePtrOutput) ToDataEncryptionResponsePtrOutputWithContext(ctx context.Context) DataEncryptionResponsePtrOutput {
	return o
}

func (o DataEncryptionResponsePtrOutput) Elem() DataEncryptionResponseOutput {
	return o.ApplyT(func(v *DataEncryptionResponse) DataEncryptionResponse {
		if v != nil {
			return *v
		}
		var ret DataEncryptionResponse
		return ret
	}).(DataEncryptionResponseOutput)
}

// Geo-backup encryption key status for Data encryption enabled server.
func (o DataEncryptionResponsePtrOutput) GeoBackupEncryptionKeyStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.GeoBackupEncryptionKeyStatus
	}).(pulumi.StringPtrOutput)
}

// URI for the key in keyvault for data encryption for geo-backup of server.
func (o DataEncryptionResponsePtrOutput) GeoBackupKeyURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.GeoBackupKeyURI
	}).(pulumi.StringPtrOutput)
}

// Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
func (o DataEncryptionResponsePtrOutput) GeoBackupUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.GeoBackupUserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

// Primary encryption key status for Data encryption enabled server.
func (o DataEncryptionResponsePtrOutput) PrimaryEncryptionKeyStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryEncryptionKeyStatus
	}).(pulumi.StringPtrOutput)
}

// URI for the key in keyvault for data encryption of the primary server.
func (o DataEncryptionResponsePtrOutput) PrimaryKeyURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryKeyURI
	}).(pulumi.StringPtrOutput)
}

// Resource Id for the User assigned identity to be used for data encryption of the primary server.
func (o DataEncryptionResponsePtrOutput) PrimaryUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryUserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

// Data encryption type to depict if it is System Managed vs Azure Key vault.
func (o DataEncryptionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Validation status summary for an individual database
type DbLevelValidationStatusResponse struct {
	// Name of the database
	DatabaseName *string `pulumi:"databaseName"`
	// End date-time of a database level validation
	EndedOn *string `pulumi:"endedOn"`
	// Start date-time of a database level validation
	StartedOn *string `pulumi:"startedOn"`
	// Summary of database level validations
	Summary []ValidationSummaryItemResponse `pulumi:"summary"`
}

// Validation status summary for an individual database
type DbLevelValidationStatusResponseOutput struct{ *pulumi.OutputState }

func (DbLevelValidationStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbLevelValidationStatusResponse)(nil)).Elem()
}

func (o DbLevelValidationStatusResponseOutput) ToDbLevelValidationStatusResponseOutput() DbLevelValidationStatusResponseOutput {
	return o
}

func (o DbLevelValidationStatusResponseOutput) ToDbLevelValidationStatusResponseOutputWithContext(ctx context.Context) DbLevelValidationStatusResponseOutput {
	return o
}

// Name of the database
func (o DbLevelValidationStatusResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbLevelValidationStatusResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// End date-time of a database level validation
func (o DbLevelValidationStatusResponseOutput) EndedOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbLevelValidationStatusResponse) *string { return v.EndedOn }).(pulumi.StringPtrOutput)
}

// Start date-time of a database level validation
func (o DbLevelValidationStatusResponseOutput) StartedOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbLevelValidationStatusResponse) *string { return v.StartedOn }).(pulumi.StringPtrOutput)
}

// Summary of database level validations
func (o DbLevelValidationStatusResponseOutput) Summary() ValidationSummaryItemResponseArrayOutput {
	return o.ApplyT(func(v DbLevelValidationStatusResponse) []ValidationSummaryItemResponse { return v.Summary }).(ValidationSummaryItemResponseArrayOutput)
}

type DbLevelValidationStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (DbLevelValidationStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DbLevelValidationStatusResponse)(nil)).Elem()
}

func (o DbLevelValidationStatusResponseArrayOutput) ToDbLevelValidationStatusResponseArrayOutput() DbLevelValidationStatusResponseArrayOutput {
	return o
}

func (o DbLevelValidationStatusResponseArrayOutput) ToDbLevelValidationStatusResponseArrayOutputWithContext(ctx context.Context) DbLevelValidationStatusResponseArrayOutput {
	return o
}

func (o DbLevelValidationStatusResponseArrayOutput) Index(i pulumi.IntInput) DbLevelValidationStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DbLevelValidationStatusResponse {
		return vs[0].([]DbLevelValidationStatusResponse)[vs[1].(int)]
	}).(DbLevelValidationStatusResponseOutput)
}

// Migration status of an individual database
type DbMigrationStatusResponse struct {
	// CDC applied changes counter
	AppliedChanges *int `pulumi:"appliedChanges"`
	// CDC delete counter
	CdcDeleteCounter *int `pulumi:"cdcDeleteCounter"`
	// CDC insert counter
	CdcInsertCounter *int `pulumi:"cdcInsertCounter"`
	// CDC update counter
	CdcUpdateCounter *int `pulumi:"cdcUpdateCounter"`
	// Name of the database
	DatabaseName *string `pulumi:"databaseName"`
	// End date-time of a migration state
	EndedOn *string `pulumi:"endedOn"`
	// Number of tables loaded during the migration of a DB
	FullLoadCompletedTables *int `pulumi:"fullLoadCompletedTables"`
	// Number of tables errored out during the migration of a DB
	FullLoadErroredTables *int `pulumi:"fullLoadErroredTables"`
	// Number of tables loading during the migration of a DB
	FullLoadLoadingTables *int `pulumi:"fullLoadLoadingTables"`
	// Number of tables queued for the migration of a DB
	FullLoadQueuedTables *int `pulumi:"fullLoadQueuedTables"`
	// CDC incoming changes counter
	IncomingChanges *int `pulumi:"incomingChanges"`
	// Lag in seconds between source and target during online phase
	Latency *int `pulumi:"latency"`
	// Error message, if any, for the migration state
	Message *string `pulumi:"message"`
	// Migration operation of an individual database
	MigrationOperation *string `pulumi:"migrationOperation"`
	// Migration db state of an individual database
	MigrationState *string `pulumi:"migrationState"`
	// Start date-time of a migration state
	StartedOn *string `pulumi:"startedOn"`
}

// Migration status of an individual database
type DbMigrationStatusResponseOutput struct{ *pulumi.OutputState }

func (DbMigrationStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbMigrationStatusResponse)(nil)).Elem()
}

func (o DbMigrationStatusResponseOutput) ToDbMigrationStatusResponseOutput() DbMigrationStatusResponseOutput {
	return o
}

func (o DbMigrationStatusResponseOutput) ToDbMigrationStatusResponseOutputWithContext(ctx context.Context) DbMigrationStatusResponseOutput {
	return o
}

// CDC applied changes counter
func (o DbMigrationStatusResponseOutput) AppliedChanges() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbMigrationStatusResponse) *int { return v.AppliedChanges }).(pulumi.IntPtrOutput)
}

// CDC delete counter
func (o DbMigrationStatusResponseOutput) CdcDeleteCounter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbMigrationStatusResponse) *int { return v.CdcDeleteCounter }).(pulumi.IntPtrOutput)
}

// CDC insert counter
func (o DbMigrationStatusResponseOutput) CdcInsertCounter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbMigrationStatusResponse) *int { return v.CdcInsertCounter }).(pulumi.IntPtrOutput)
}

// CDC update counter
func (o DbMigrationStatusResponseOutput) CdcUpdateCounter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbMigrationStatusResponse) *int { return v.CdcUpdateCounter }).(pulumi.IntPtrOutput)
}

// Name of the database
func (o DbMigrationStatusResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbMigrationStatusResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// End date-time of a migration state
func (o DbMigrationStatusResponseOutput) EndedOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbMigrationStatusResponse) *string { return v.EndedOn }).(pulumi.StringPtrOutput)
}

// Number of tables loaded during the migration of a DB
func (o DbMigrationStatusResponseOutput) FullLoadCompletedTables() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbMigrationStatusResponse) *int { return v.FullLoadCompletedTables }).(pulumi.IntPtrOutput)
}

// Number of tables errored out during the migration of a DB
func (o DbMigrationStatusResponseOutput) FullLoadErroredTables() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbMigrationStatusResponse) *int { return v.FullLoadErroredTables }).(pulumi.IntPtrOutput)
}

// Number of tables loading during the migration of a DB
func (o DbMigrationStatusResponseOutput) FullLoadLoadingTables() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbMigrationStatusResponse) *int { return v.FullLoadLoadingTables }).(pulumi.IntPtrOutput)
}

// Number of tables queued for the migration of a DB
func (o DbMigrationStatusResponseOutput) FullLoadQueuedTables() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbMigrationStatusResponse) *int { return v.FullLoadQueuedTables }).(pulumi.IntPtrOutput)
}

// CDC incoming changes counter
func (o DbMigrationStatusResponseOutput) IncomingChanges() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbMigrationStatusResponse) *int { return v.IncomingChanges }).(pulumi.IntPtrOutput)
}

// Lag in seconds between source and target during online phase
func (o DbMigrationStatusResponseOutput) Latency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbMigrationStatusResponse) *int { return v.Latency }).(pulumi.IntPtrOutput)
}

// Error message, if any, for the migration state
func (o DbMigrationStatusResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbMigrationStatusResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Migration operation of an individual database
func (o DbMigrationStatusResponseOutput) MigrationOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbMigrationStatusResponse) *string { return v.MigrationOperation }).(pulumi.StringPtrOutput)
}

// Migration db state of an individual database
func (o DbMigrationStatusResponseOutput) MigrationState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbMigrationStatusResponse) *string { return v.MigrationState }).(pulumi.StringPtrOutput)
}

// Start date-time of a migration state
func (o DbMigrationStatusResponseOutput) StartedOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbMigrationStatusResponse) *string { return v.StartedOn }).(pulumi.StringPtrOutput)
}

type DbMigrationStatusResponseMapOutput struct{ *pulumi.OutputState }

func (DbMigrationStatusResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DbMigrationStatusResponse)(nil)).Elem()
}

func (o DbMigrationStatusResponseMapOutput) ToDbMigrationStatusResponseMapOutput() DbMigrationStatusResponseMapOutput {
	return o
}

func (o DbMigrationStatusResponseMapOutput) ToDbMigrationStatusResponseMapOutputWithContext(ctx context.Context) DbMigrationStatusResponseMapOutput {
	return o
}

func (o DbMigrationStatusResponseMapOutput) MapIndex(k pulumi.StringInput) DbMigrationStatusResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DbMigrationStatusResponse {
		return vs[0].(map[string]DbMigrationStatusResponse)[vs[1].(string)]
	}).(DbMigrationStatusResponseOutput)
}

// Database server metadata.
type DbServerMetadataResponse struct {
	// Location of database server
	Location string `pulumi:"location"`
	// SKU for the database server. This object is empty for PG single server
	Sku *ServerSkuResponse `pulumi:"sku"`
	// Storage size in MB for database server
	StorageMb *int `pulumi:"storageMb"`
	// Version for database engine
	Version *string `pulumi:"version"`
}

// Database server metadata.
type DbServerMetadataResponseOutput struct{ *pulumi.OutputState }

func (DbServerMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DbServerMetadataResponse)(nil)).Elem()
}

func (o DbServerMetadataResponseOutput) ToDbServerMetadataResponseOutput() DbServerMetadataResponseOutput {
	return o
}

func (o DbServerMetadataResponseOutput) ToDbServerMetadataResponseOutputWithContext(ctx context.Context) DbServerMetadataResponseOutput {
	return o
}

// Location of database server
func (o DbServerMetadataResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v DbServerMetadataResponse) string { return v.Location }).(pulumi.StringOutput)
}

// SKU for the database server. This object is empty for PG single server
func (o DbServerMetadataResponseOutput) Sku() ServerSkuResponsePtrOutput {
	return o.ApplyT(func(v DbServerMetadataResponse) *ServerSkuResponse { return v.Sku }).(ServerSkuResponsePtrOutput)
}

// Storage size in MB for database server
func (o DbServerMetadataResponseOutput) StorageMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DbServerMetadataResponse) *int { return v.StorageMb }).(pulumi.IntPtrOutput)
}

// Version for database engine
func (o DbServerMetadataResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DbServerMetadataResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// High availability properties of a server
type HighAvailability struct {
	// The HA mode for the server.
	Mode *string `pulumi:"mode"`
	// availability zone information of the standby.
	StandbyAvailabilityZone *string `pulumi:"standbyAvailabilityZone"`
}

// Defaults sets the appropriate defaults for HighAvailability
func (val *HighAvailability) Defaults() *HighAvailability {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "Disabled"
		tmp.Mode = &mode_
	}
	if tmp.StandbyAvailabilityZone == nil {
		standbyAvailabilityZone_ := ""
		tmp.StandbyAvailabilityZone = &standbyAvailabilityZone_
	}
	return &tmp
}

// HighAvailabilityInput is an input type that accepts HighAvailabilityArgs and HighAvailabilityOutput values.
// You can construct a concrete instance of `HighAvailabilityInput` via:
//
//	HighAvailabilityArgs{...}
type HighAvailabilityInput interface {
	pulumi.Input

	ToHighAvailabilityOutput() HighAvailabilityOutput
	ToHighAvailabilityOutputWithContext(context.Context) HighAvailabilityOutput
}

// High availability properties of a server
type HighAvailabilityArgs struct {
	// The HA mode for the server.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// availability zone information of the standby.
	StandbyAvailabilityZone pulumi.StringPtrInput `pulumi:"standbyAvailabilityZone"`
}

// Defaults sets the appropriate defaults for HighAvailabilityArgs
func (val *HighAvailabilityArgs) Defaults() *HighAvailabilityArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		tmp.Mode = pulumi.StringPtr("Disabled")
	}
	if tmp.StandbyAvailabilityZone == nil {
		tmp.StandbyAvailabilityZone = pulumi.StringPtr("")
	}
	return &tmp
}
func (HighAvailabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HighAvailability)(nil)).Elem()
}

func (i HighAvailabilityArgs) ToHighAvailabilityOutput() HighAvailabilityOutput {
	return i.ToHighAvailabilityOutputWithContext(context.Background())
}

func (i HighAvailabilityArgs) ToHighAvailabilityOutputWithContext(ctx context.Context) HighAvailabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HighAvailabilityOutput)
}

func (i HighAvailabilityArgs) ToHighAvailabilityPtrOutput() HighAvailabilityPtrOutput {
	return i.ToHighAvailabilityPtrOutputWithContext(context.Background())
}

func (i HighAvailabilityArgs) ToHighAvailabilityPtrOutputWithContext(ctx context.Context) HighAvailabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HighAvailabilityOutput).ToHighAvailabilityPtrOutputWithContext(ctx)
}

// HighAvailabilityPtrInput is an input type that accepts HighAvailabilityArgs, HighAvailabilityPtr and HighAvailabilityPtrOutput values.
// You can construct a concrete instance of `HighAvailabilityPtrInput` via:
//
//	        HighAvailabilityArgs{...}
//
//	or:
//
//	        nil
type HighAvailabilityPtrInput interface {
	pulumi.Input

	ToHighAvailabilityPtrOutput() HighAvailabilityPtrOutput
	ToHighAvailabilityPtrOutputWithContext(context.Context) HighAvailabilityPtrOutput
}

type highAvailabilityPtrType HighAvailabilityArgs

func HighAvailabilityPtr(v *HighAvailabilityArgs) HighAvailabilityPtrInput {
	return (*highAvailabilityPtrType)(v)
}

func (*highAvailabilityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HighAvailability)(nil)).Elem()
}

func (i *highAvailabilityPtrType) ToHighAvailabilityPtrOutput() HighAvailabilityPtrOutput {
	return i.ToHighAvailabilityPtrOutputWithContext(context.Background())
}

func (i *highAvailabilityPtrType) ToHighAvailabilityPtrOutputWithContext(ctx context.Context) HighAvailabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HighAvailabilityPtrOutput)
}

// High availability properties of a server
type HighAvailabilityOutput struct{ *pulumi.OutputState }

func (HighAvailabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HighAvailability)(nil)).Elem()
}

func (o HighAvailabilityOutput) ToHighAvailabilityOutput() HighAvailabilityOutput {
	return o
}

func (o HighAvailabilityOutput) ToHighAvailabilityOutputWithContext(ctx context.Context) HighAvailabilityOutput {
	return o
}

func (o HighAvailabilityOutput) ToHighAvailabilityPtrOutput() HighAvailabilityPtrOutput {
	return o.ToHighAvailabilityPtrOutputWithContext(context.Background())
}

func (o HighAvailabilityOutput) ToHighAvailabilityPtrOutputWithContext(ctx context.Context) HighAvailabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HighAvailability) *HighAvailability {
		return &v
	}).(HighAvailabilityPtrOutput)
}

// The HA mode for the server.
func (o HighAvailabilityOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HighAvailability) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// availability zone information of the standby.
func (o HighAvailabilityOutput) StandbyAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HighAvailability) *string { return v.StandbyAvailabilityZone }).(pulumi.StringPtrOutput)
}

type HighAvailabilityPtrOutput struct{ *pulumi.OutputState }

func (HighAvailabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HighAvailability)(nil)).Elem()
}

func (o HighAvailabilityPtrOutput) ToHighAvailabilityPtrOutput() HighAvailabilityPtrOutput {
	return o
}

func (o HighAvailabilityPtrOutput) ToHighAvailabilityPtrOutputWithContext(ctx context.Context) HighAvailabilityPtrOutput {
	return o
}

func (o HighAvailabilityPtrOutput) Elem() HighAvailabilityOutput {
	return o.ApplyT(func(v *HighAvailability) HighAvailability {
		if v != nil {
			return *v
		}
		var ret HighAvailability
		return ret
	}).(HighAvailabilityOutput)
}

// The HA mode for the server.
func (o HighAvailabilityPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HighAvailability) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// availability zone information of the standby.
func (o HighAvailabilityPtrOutput) StandbyAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HighAvailability) *string {
		if v == nil {
			return nil
		}
		return v.StandbyAvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// High availability properties of a server
type HighAvailabilityResponse struct {
	// The HA mode for the server.
	Mode *string `pulumi:"mode"`
	// availability zone information of the standby.
	StandbyAvailabilityZone *string `pulumi:"standbyAvailabilityZone"`
	// A state of a HA server that is visible to user.
	State string `pulumi:"state"`
}

// Defaults sets the appropriate defaults for HighAvailabilityResponse
func (val *HighAvailabilityResponse) Defaults() *HighAvailabilityResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Mode == nil {
		mode_ := "Disabled"
		tmp.Mode = &mode_
	}
	if tmp.StandbyAvailabilityZone == nil {
		standbyAvailabilityZone_ := ""
		tmp.StandbyAvailabilityZone = &standbyAvailabilityZone_
	}
	return &tmp
}

// High availability properties of a server
type HighAvailabilityResponseOutput struct{ *pulumi.OutputState }

func (HighAvailabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HighAvailabilityResponse)(nil)).Elem()
}

func (o HighAvailabilityResponseOutput) ToHighAvailabilityResponseOutput() HighAvailabilityResponseOutput {
	return o
}

func (o HighAvailabilityResponseOutput) ToHighAvailabilityResponseOutputWithContext(ctx context.Context) HighAvailabilityResponseOutput {
	return o
}

// The HA mode for the server.
func (o HighAvailabilityResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HighAvailabilityResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// availability zone information of the standby.
func (o HighAvailabilityResponseOutput) StandbyAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HighAvailabilityResponse) *string { return v.StandbyAvailabilityZone }).(pulumi.StringPtrOutput)
}

// A state of a HA server that is visible to user.
func (o HighAvailabilityResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v HighAvailabilityResponse) string { return v.State }).(pulumi.StringOutput)
}

type HighAvailabilityResponsePtrOutput struct{ *pulumi.OutputState }

func (HighAvailabilityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HighAvailabilityResponse)(nil)).Elem()
}

func (o HighAvailabilityResponsePtrOutput) ToHighAvailabilityResponsePtrOutput() HighAvailabilityResponsePtrOutput {
	return o
}

func (o HighAvailabilityResponsePtrOutput) ToHighAvailabilityResponsePtrOutputWithContext(ctx context.Context) HighAvailabilityResponsePtrOutput {
	return o
}

func (o HighAvailabilityResponsePtrOutput) Elem() HighAvailabilityResponseOutput {
	return o.ApplyT(func(v *HighAvailabilityResponse) HighAvailabilityResponse {
		if v != nil {
			return *v
		}
		var ret HighAvailabilityResponse
		return ret
	}).(HighAvailabilityResponseOutput)
}

// The HA mode for the server.
func (o HighAvailabilityResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HighAvailabilityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// availability zone information of the standby.
func (o HighAvailabilityResponsePtrOutput) StandbyAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HighAvailabilityResponse) *string {
		if v == nil {
			return nil
		}
		return v.StandbyAvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// A state of a HA server that is visible to user.
func (o HighAvailabilityResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HighAvailabilityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// Describes the identity of the cluster.
type IdentityProperties struct {
	Type *string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// IdentityPropertiesInput is an input type that accepts IdentityPropertiesArgs and IdentityPropertiesOutput values.
// You can construct a concrete instance of `IdentityPropertiesInput` via:
//
//	IdentityPropertiesArgs{...}
type IdentityPropertiesInput interface {
	pulumi.Input

	ToIdentityPropertiesOutput() IdentityPropertiesOutput
	ToIdentityPropertiesOutputWithContext(context.Context) IdentityPropertiesOutput
}

// Describes the identity of the cluster.
type IdentityPropertiesArgs struct {
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (IdentityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProperties)(nil)).Elem()
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesOutput() IdentityPropertiesOutput {
	return i.ToIdentityPropertiesOutputWithContext(context.Background())
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesOutputWithContext(ctx context.Context) IdentityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesOutput)
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return i.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i IdentityPropertiesArgs) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesOutput).ToIdentityPropertiesPtrOutputWithContext(ctx)
}

// IdentityPropertiesPtrInput is an input type that accepts IdentityPropertiesArgs, IdentityPropertiesPtr and IdentityPropertiesPtrOutput values.
// You can construct a concrete instance of `IdentityPropertiesPtrInput` via:
//
//	        IdentityPropertiesArgs{...}
//
//	or:
//
//	        nil
type IdentityPropertiesPtrInput interface {
	pulumi.Input

	ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput
	ToIdentityPropertiesPtrOutputWithContext(context.Context) IdentityPropertiesPtrOutput
}

type identityPropertiesPtrType IdentityPropertiesArgs

func IdentityPropertiesPtr(v *IdentityPropertiesArgs) IdentityPropertiesPtrInput {
	return (*identityPropertiesPtrType)(v)
}

func (*identityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProperties)(nil)).Elem()
}

func (i *identityPropertiesPtrType) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return i.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (i *identityPropertiesPtrType) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPropertiesPtrOutput)
}

// Describes the identity of the cluster.
type IdentityPropertiesOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProperties)(nil)).Elem()
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesOutput() IdentityPropertiesOutput {
	return o
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesOutputWithContext(ctx context.Context) IdentityPropertiesOutput {
	return o
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return o.ToIdentityPropertiesPtrOutputWithContext(context.Background())
}

func (o IdentityPropertiesOutput) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityProperties) *IdentityProperties {
		return &v
	}).(IdentityPropertiesPtrOutput)
}

func (o IdentityPropertiesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProperties) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o IdentityPropertiesOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityProperties) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type IdentityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProperties)(nil)).Elem()
}

func (o IdentityPropertiesPtrOutput) ToIdentityPropertiesPtrOutput() IdentityPropertiesPtrOutput {
	return o
}

func (o IdentityPropertiesPtrOutput) ToIdentityPropertiesPtrOutputWithContext(ctx context.Context) IdentityPropertiesPtrOutput {
	return o
}

func (o IdentityPropertiesPtrOutput) Elem() IdentityPropertiesOutput {
	return o.ApplyT(func(v *IdentityProperties) IdentityProperties {
		if v != nil {
			return *v
		}
		var ret IdentityProperties
		return ret
	}).(IdentityPropertiesOutput)
}

func (o IdentityPropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProperties) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o IdentityPropertiesPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityProperties) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Describes the identity of the cluster.
type IdentityPropertiesResponse struct {
	Type *string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Describes the identity of the cluster.
type IdentityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPropertiesResponse)(nil)).Elem()
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponseOutput() IdentityPropertiesResponseOutput {
	return o
}

func (o IdentityPropertiesResponseOutput) ToIdentityPropertiesResponseOutputWithContext(ctx context.Context) IdentityPropertiesResponseOutput {
	return o
}

func (o IdentityPropertiesResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o IdentityPropertiesResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v IdentityPropertiesResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type IdentityPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPropertiesResponse)(nil)).Elem()
}

func (o IdentityPropertiesResponsePtrOutput) ToIdentityPropertiesResponsePtrOutput() IdentityPropertiesResponsePtrOutput {
	return o
}

func (o IdentityPropertiesResponsePtrOutput) ToIdentityPropertiesResponsePtrOutputWithContext(ctx context.Context) IdentityPropertiesResponsePtrOutput {
	return o
}

func (o IdentityPropertiesResponsePtrOutput) Elem() IdentityPropertiesResponseOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) IdentityPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret IdentityPropertiesResponse
		return ret
	}).(IdentityPropertiesResponseOutput)
}

func (o IdentityPropertiesResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o IdentityPropertiesResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *IdentityPropertiesResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Maintenance window properties of a server.
type MaintenanceWindow struct {
	// indicates whether custom window is enabled or disabled
	CustomWindow *string `pulumi:"customWindow"`
	// day of week for maintenance window
	DayOfWeek *int `pulumi:"dayOfWeek"`
	// start hour for maintenance window
	StartHour *int `pulumi:"startHour"`
	// start minute for maintenance window
	StartMinute *int `pulumi:"startMinute"`
}

// Defaults sets the appropriate defaults for MaintenanceWindow
func (val *MaintenanceWindow) Defaults() *MaintenanceWindow {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CustomWindow == nil {
		customWindow_ := "Disabled"
		tmp.CustomWindow = &customWindow_
	}
	if tmp.DayOfWeek == nil {
		dayOfWeek_ := 0
		tmp.DayOfWeek = &dayOfWeek_
	}
	if tmp.StartHour == nil {
		startHour_ := 0
		tmp.StartHour = &startHour_
	}
	if tmp.StartMinute == nil {
		startMinute_ := 0
		tmp.StartMinute = &startMinute_
	}
	return &tmp
}

// MaintenanceWindowInput is an input type that accepts MaintenanceWindowArgs and MaintenanceWindowOutput values.
// You can construct a concrete instance of `MaintenanceWindowInput` via:
//
//	MaintenanceWindowArgs{...}
type MaintenanceWindowInput interface {
	pulumi.Input

	ToMaintenanceWindowOutput() MaintenanceWindowOutput
	ToMaintenanceWindowOutputWithContext(context.Context) MaintenanceWindowOutput
}

// Maintenance window properties of a server.
type MaintenanceWindowArgs struct {
	// indicates whether custom window is enabled or disabled
	CustomWindow pulumi.StringPtrInput `pulumi:"customWindow"`
	// day of week for maintenance window
	DayOfWeek pulumi.IntPtrInput `pulumi:"dayOfWeek"`
	// start hour for maintenance window
	StartHour pulumi.IntPtrInput `pulumi:"startHour"`
	// start minute for maintenance window
	StartMinute pulumi.IntPtrInput `pulumi:"startMinute"`
}

// Defaults sets the appropriate defaults for MaintenanceWindowArgs
func (val *MaintenanceWindowArgs) Defaults() *MaintenanceWindowArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CustomWindow == nil {
		tmp.CustomWindow = pulumi.StringPtr("Disabled")
	}
	if tmp.DayOfWeek == nil {
		tmp.DayOfWeek = pulumi.IntPtr(0)
	}
	if tmp.StartHour == nil {
		tmp.StartHour = pulumi.IntPtr(0)
	}
	if tmp.StartMinute == nil {
		tmp.StartMinute = pulumi.IntPtr(0)
	}
	return &tmp
}
func (MaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindow)(nil)).Elem()
}

func (i MaintenanceWindowArgs) ToMaintenanceWindowOutput() MaintenanceWindowOutput {
	return i.ToMaintenanceWindowOutputWithContext(context.Background())
}

func (i MaintenanceWindowArgs) ToMaintenanceWindowOutputWithContext(ctx context.Context) MaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowOutput)
}

func (i MaintenanceWindowArgs) ToMaintenanceWindowPtrOutput() MaintenanceWindowPtrOutput {
	return i.ToMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i MaintenanceWindowArgs) ToMaintenanceWindowPtrOutputWithContext(ctx context.Context) MaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowOutput).ToMaintenanceWindowPtrOutputWithContext(ctx)
}

// MaintenanceWindowPtrInput is an input type that accepts MaintenanceWindowArgs, MaintenanceWindowPtr and MaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `MaintenanceWindowPtrInput` via:
//
//	        MaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type MaintenanceWindowPtrInput interface {
	pulumi.Input

	ToMaintenanceWindowPtrOutput() MaintenanceWindowPtrOutput
	ToMaintenanceWindowPtrOutputWithContext(context.Context) MaintenanceWindowPtrOutput
}

type maintenanceWindowPtrType MaintenanceWindowArgs

func MaintenanceWindowPtr(v *MaintenanceWindowArgs) MaintenanceWindowPtrInput {
	return (*maintenanceWindowPtrType)(v)
}

func (*maintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindow)(nil)).Elem()
}

func (i *maintenanceWindowPtrType) ToMaintenanceWindowPtrOutput() MaintenanceWindowPtrOutput {
	return i.ToMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *maintenanceWindowPtrType) ToMaintenanceWindowPtrOutputWithContext(ctx context.Context) MaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowPtrOutput)
}

// Maintenance window properties of a server.
type MaintenanceWindowOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindow)(nil)).Elem()
}

func (o MaintenanceWindowOutput) ToMaintenanceWindowOutput() MaintenanceWindowOutput {
	return o
}

func (o MaintenanceWindowOutput) ToMaintenanceWindowOutputWithContext(ctx context.Context) MaintenanceWindowOutput {
	return o
}

func (o MaintenanceWindowOutput) ToMaintenanceWindowPtrOutput() MaintenanceWindowPtrOutput {
	return o.ToMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowOutput) ToMaintenanceWindowPtrOutputWithContext(ctx context.Context) MaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenanceWindow) *MaintenanceWindow {
		return &v
	}).(MaintenanceWindowPtrOutput)
}

// indicates whether custom window is enabled or disabled
func (o MaintenanceWindowOutput) CustomWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindow) *string { return v.CustomWindow }).(pulumi.StringPtrOutput)
}

// day of week for maintenance window
func (o MaintenanceWindowOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaintenanceWindow) *int { return v.DayOfWeek }).(pulumi.IntPtrOutput)
}

// start hour for maintenance window
func (o MaintenanceWindowOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaintenanceWindow) *int { return v.StartHour }).(pulumi.IntPtrOutput)
}

// start minute for maintenance window
func (o MaintenanceWindowOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaintenanceWindow) *int { return v.StartMinute }).(pulumi.IntPtrOutput)
}

type MaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindow)(nil)).Elem()
}

func (o MaintenanceWindowPtrOutput) ToMaintenanceWindowPtrOutput() MaintenanceWindowPtrOutput {
	return o
}

func (o MaintenanceWindowPtrOutput) ToMaintenanceWindowPtrOutputWithContext(ctx context.Context) MaintenanceWindowPtrOutput {
	return o
}

func (o MaintenanceWindowPtrOutput) Elem() MaintenanceWindowOutput {
	return o.ApplyT(func(v *MaintenanceWindow) MaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret MaintenanceWindow
		return ret
	}).(MaintenanceWindowOutput)
}

// indicates whether custom window is enabled or disabled
func (o MaintenanceWindowPtrOutput) CustomWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return v.CustomWindow
	}).(pulumi.StringPtrOutput)
}

// day of week for maintenance window
func (o MaintenanceWindowPtrOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.DayOfWeek
	}).(pulumi.IntPtrOutput)
}

// start hour for maintenance window
func (o MaintenanceWindowPtrOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.StartHour
	}).(pulumi.IntPtrOutput)
}

// start minute for maintenance window
func (o MaintenanceWindowPtrOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.StartMinute
	}).(pulumi.IntPtrOutput)
}

// Maintenance window properties of a server.
type MaintenanceWindowResponse struct {
	// indicates whether custom window is enabled or disabled
	CustomWindow *string `pulumi:"customWindow"`
	// day of week for maintenance window
	DayOfWeek *int `pulumi:"dayOfWeek"`
	// start hour for maintenance window
	StartHour *int `pulumi:"startHour"`
	// start minute for maintenance window
	StartMinute *int `pulumi:"startMinute"`
}

// Defaults sets the appropriate defaults for MaintenanceWindowResponse
func (val *MaintenanceWindowResponse) Defaults() *MaintenanceWindowResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CustomWindow == nil {
		customWindow_ := "Disabled"
		tmp.CustomWindow = &customWindow_
	}
	if tmp.DayOfWeek == nil {
		dayOfWeek_ := 0
		tmp.DayOfWeek = &dayOfWeek_
	}
	if tmp.StartHour == nil {
		startHour_ := 0
		tmp.StartHour = &startHour_
	}
	if tmp.StartMinute == nil {
		startMinute_ := 0
		tmp.StartMinute = &startMinute_
	}
	return &tmp
}

// Maintenance window properties of a server.
type MaintenanceWindowResponseOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowResponse)(nil)).Elem()
}

func (o MaintenanceWindowResponseOutput) ToMaintenanceWindowResponseOutput() MaintenanceWindowResponseOutput {
	return o
}

func (o MaintenanceWindowResponseOutput) ToMaintenanceWindowResponseOutputWithContext(ctx context.Context) MaintenanceWindowResponseOutput {
	return o
}

// indicates whether custom window is enabled or disabled
func (o MaintenanceWindowResponseOutput) CustomWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowResponse) *string { return v.CustomWindow }).(pulumi.StringPtrOutput)
}

// day of week for maintenance window
func (o MaintenanceWindowResponseOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowResponse) *int { return v.DayOfWeek }).(pulumi.IntPtrOutput)
}

// start hour for maintenance window
func (o MaintenanceWindowResponseOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowResponse) *int { return v.StartHour }).(pulumi.IntPtrOutput)
}

// start minute for maintenance window
func (o MaintenanceWindowResponseOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowResponse) *int { return v.StartMinute }).(pulumi.IntPtrOutput)
}

type MaintenanceWindowResponsePtrOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowResponse)(nil)).Elem()
}

func (o MaintenanceWindowResponsePtrOutput) ToMaintenanceWindowResponsePtrOutput() MaintenanceWindowResponsePtrOutput {
	return o
}

func (o MaintenanceWindowResponsePtrOutput) ToMaintenanceWindowResponsePtrOutputWithContext(ctx context.Context) MaintenanceWindowResponsePtrOutput {
	return o
}

func (o MaintenanceWindowResponsePtrOutput) Elem() MaintenanceWindowResponseOutput {
	return o.ApplyT(func(v *MaintenanceWindowResponse) MaintenanceWindowResponse {
		if v != nil {
			return *v
		}
		var ret MaintenanceWindowResponse
		return ret
	}).(MaintenanceWindowResponseOutput)
}

// indicates whether custom window is enabled or disabled
func (o MaintenanceWindowResponsePtrOutput) CustomWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomWindow
	}).(pulumi.StringPtrOutput)
}

// day of week for maintenance window
func (o MaintenanceWindowResponsePtrOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowResponse) *int {
		if v == nil {
			return nil
		}
		return v.DayOfWeek
	}).(pulumi.IntPtrOutput)
}

// start hour for maintenance window
func (o MaintenanceWindowResponsePtrOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowResponse) *int {
		if v == nil {
			return nil
		}
		return v.StartHour
	}).(pulumi.IntPtrOutput)
}

// start minute for maintenance window
func (o MaintenanceWindowResponsePtrOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowResponse) *int {
		if v == nil {
			return nil
		}
		return v.StartMinute
	}).(pulumi.IntPtrOutput)
}

// Migration secret parameters.
type MigrationSecretParameters struct {
	// Admin credentials for source and target servers
	AdminCredentials AdminCredentials `pulumi:"adminCredentials"`
	// Gets or sets the username for the source server. This user need not be an admin.
	SourceServerUsername *string `pulumi:"sourceServerUsername"`
	// Gets or sets the username for the target server. This user need not be an admin.
	TargetServerUsername *string `pulumi:"targetServerUsername"`
}

// MigrationSecretParametersInput is an input type that accepts MigrationSecretParametersArgs and MigrationSecretParametersOutput values.
// You can construct a concrete instance of `MigrationSecretParametersInput` via:
//
//	MigrationSecretParametersArgs{...}
type MigrationSecretParametersInput interface {
	pulumi.Input

	ToMigrationSecretParametersOutput() MigrationSecretParametersOutput
	ToMigrationSecretParametersOutputWithContext(context.Context) MigrationSecretParametersOutput
}

// Migration secret parameters.
type MigrationSecretParametersArgs struct {
	// Admin credentials for source and target servers
	AdminCredentials AdminCredentialsInput `pulumi:"adminCredentials"`
	// Gets or sets the username for the source server. This user need not be an admin.
	SourceServerUsername pulumi.StringPtrInput `pulumi:"sourceServerUsername"`
	// Gets or sets the username for the target server. This user need not be an admin.
	TargetServerUsername pulumi.StringPtrInput `pulumi:"targetServerUsername"`
}

func (MigrationSecretParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationSecretParameters)(nil)).Elem()
}

func (i MigrationSecretParametersArgs) ToMigrationSecretParametersOutput() MigrationSecretParametersOutput {
	return i.ToMigrationSecretParametersOutputWithContext(context.Background())
}

func (i MigrationSecretParametersArgs) ToMigrationSecretParametersOutputWithContext(ctx context.Context) MigrationSecretParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationSecretParametersOutput)
}

func (i MigrationSecretParametersArgs) ToMigrationSecretParametersPtrOutput() MigrationSecretParametersPtrOutput {
	return i.ToMigrationSecretParametersPtrOutputWithContext(context.Background())
}

func (i MigrationSecretParametersArgs) ToMigrationSecretParametersPtrOutputWithContext(ctx context.Context) MigrationSecretParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationSecretParametersOutput).ToMigrationSecretParametersPtrOutputWithContext(ctx)
}

// MigrationSecretParametersPtrInput is an input type that accepts MigrationSecretParametersArgs, MigrationSecretParametersPtr and MigrationSecretParametersPtrOutput values.
// You can construct a concrete instance of `MigrationSecretParametersPtrInput` via:
//
//	        MigrationSecretParametersArgs{...}
//
//	or:
//
//	        nil
type MigrationSecretParametersPtrInput interface {
	pulumi.Input

	ToMigrationSecretParametersPtrOutput() MigrationSecretParametersPtrOutput
	ToMigrationSecretParametersPtrOutputWithContext(context.Context) MigrationSecretParametersPtrOutput
}

type migrationSecretParametersPtrType MigrationSecretParametersArgs

func MigrationSecretParametersPtr(v *MigrationSecretParametersArgs) MigrationSecretParametersPtrInput {
	return (*migrationSecretParametersPtrType)(v)
}

func (*migrationSecretParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationSecretParameters)(nil)).Elem()
}

func (i *migrationSecretParametersPtrType) ToMigrationSecretParametersPtrOutput() MigrationSecretParametersPtrOutput {
	return i.ToMigrationSecretParametersPtrOutputWithContext(context.Background())
}

func (i *migrationSecretParametersPtrType) ToMigrationSecretParametersPtrOutputWithContext(ctx context.Context) MigrationSecretParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationSecretParametersPtrOutput)
}

// Migration secret parameters.
type MigrationSecretParametersOutput struct{ *pulumi.OutputState }

func (MigrationSecretParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationSecretParameters)(nil)).Elem()
}

func (o MigrationSecretParametersOutput) ToMigrationSecretParametersOutput() MigrationSecretParametersOutput {
	return o
}

func (o MigrationSecretParametersOutput) ToMigrationSecretParametersOutputWithContext(ctx context.Context) MigrationSecretParametersOutput {
	return o
}

func (o MigrationSecretParametersOutput) ToMigrationSecretParametersPtrOutput() MigrationSecretParametersPtrOutput {
	return o.ToMigrationSecretParametersPtrOutputWithContext(context.Background())
}

func (o MigrationSecretParametersOutput) ToMigrationSecretParametersPtrOutputWithContext(ctx context.Context) MigrationSecretParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MigrationSecretParameters) *MigrationSecretParameters {
		return &v
	}).(MigrationSecretParametersPtrOutput)
}

// Admin credentials for source and target servers
func (o MigrationSecretParametersOutput) AdminCredentials() AdminCredentialsOutput {
	return o.ApplyT(func(v MigrationSecretParameters) AdminCredentials { return v.AdminCredentials }).(AdminCredentialsOutput)
}

// Gets or sets the username for the source server. This user need not be an admin.
func (o MigrationSecretParametersOutput) SourceServerUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationSecretParameters) *string { return v.SourceServerUsername }).(pulumi.StringPtrOutput)
}

// Gets or sets the username for the target server. This user need not be an admin.
func (o MigrationSecretParametersOutput) TargetServerUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrationSecretParameters) *string { return v.TargetServerUsername }).(pulumi.StringPtrOutput)
}

type MigrationSecretParametersPtrOutput struct{ *pulumi.OutputState }

func (MigrationSecretParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationSecretParameters)(nil)).Elem()
}

func (o MigrationSecretParametersPtrOutput) ToMigrationSecretParametersPtrOutput() MigrationSecretParametersPtrOutput {
	return o
}

func (o MigrationSecretParametersPtrOutput) ToMigrationSecretParametersPtrOutputWithContext(ctx context.Context) MigrationSecretParametersPtrOutput {
	return o
}

func (o MigrationSecretParametersPtrOutput) Elem() MigrationSecretParametersOutput {
	return o.ApplyT(func(v *MigrationSecretParameters) MigrationSecretParameters {
		if v != nil {
			return *v
		}
		var ret MigrationSecretParameters
		return ret
	}).(MigrationSecretParametersOutput)
}

// Admin credentials for source and target servers
func (o MigrationSecretParametersPtrOutput) AdminCredentials() AdminCredentialsPtrOutput {
	return o.ApplyT(func(v *MigrationSecretParameters) *AdminCredentials {
		if v == nil {
			return nil
		}
		return &v.AdminCredentials
	}).(AdminCredentialsPtrOutput)
}

// Gets or sets the username for the source server. This user need not be an admin.
func (o MigrationSecretParametersPtrOutput) SourceServerUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationSecretParameters) *string {
		if v == nil {
			return nil
		}
		return v.SourceServerUsername
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the username for the target server. This user need not be an admin.
func (o MigrationSecretParametersPtrOutput) TargetServerUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationSecretParameters) *string {
		if v == nil {
			return nil
		}
		return v.TargetServerUsername
	}).(pulumi.StringPtrOutput)
}

// Migration status.
type MigrationStatusResponse struct {
	// Current Migration sub state details.
	CurrentSubStateDetails MigrationSubStateDetailsResponse `pulumi:"currentSubStateDetails"`
	// Error message, if any, for the migration state
	Error string `pulumi:"error"`
	// State of migration
	State string `pulumi:"state"`
}

// Migration status.
type MigrationStatusResponseOutput struct{ *pulumi.OutputState }

func (MigrationStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationStatusResponse)(nil)).Elem()
}

func (o MigrationStatusResponseOutput) ToMigrationStatusResponseOutput() MigrationStatusResponseOutput {
	return o
}

func (o MigrationStatusResponseOutput) ToMigrationStatusResponseOutputWithContext(ctx context.Context) MigrationStatusResponseOutput {
	return o
}

// Current Migration sub state details.
func (o MigrationStatusResponseOutput) CurrentSubStateDetails() MigrationSubStateDetailsResponseOutput {
	return o.ApplyT(func(v MigrationStatusResponse) MigrationSubStateDetailsResponse { return v.CurrentSubStateDetails }).(MigrationSubStateDetailsResponseOutput)
}

// Error message, if any, for the migration state
func (o MigrationStatusResponseOutput) Error() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationStatusResponse) string { return v.Error }).(pulumi.StringOutput)
}

// State of migration
func (o MigrationStatusResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationStatusResponse) string { return v.State }).(pulumi.StringOutput)
}

// Migration sub state details.
type MigrationSubStateDetailsResponse struct {
	// Migration sub state.
	CurrentSubState string                               `pulumi:"currentSubState"`
	DbDetails       map[string]DbMigrationStatusResponse `pulumi:"dbDetails"`
	// Details for the validation for migration
	ValidationDetails *ValidationDetailsResponse `pulumi:"validationDetails"`
}

// Migration sub state details.
type MigrationSubStateDetailsResponseOutput struct{ *pulumi.OutputState }

func (MigrationSubStateDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationSubStateDetailsResponse)(nil)).Elem()
}

func (o MigrationSubStateDetailsResponseOutput) ToMigrationSubStateDetailsResponseOutput() MigrationSubStateDetailsResponseOutput {
	return o
}

func (o MigrationSubStateDetailsResponseOutput) ToMigrationSubStateDetailsResponseOutputWithContext(ctx context.Context) MigrationSubStateDetailsResponseOutput {
	return o
}

// Migration sub state.
func (o MigrationSubStateDetailsResponseOutput) CurrentSubState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationSubStateDetailsResponse) string { return v.CurrentSubState }).(pulumi.StringOutput)
}

func (o MigrationSubStateDetailsResponseOutput) DbDetails() DbMigrationStatusResponseMapOutput {
	return o.ApplyT(func(v MigrationSubStateDetailsResponse) map[string]DbMigrationStatusResponse { return v.DbDetails }).(DbMigrationStatusResponseMapOutput)
}

// Details for the validation for migration
func (o MigrationSubStateDetailsResponseOutput) ValidationDetails() ValidationDetailsResponsePtrOutput {
	return o.ApplyT(func(v MigrationSubStateDetailsResponse) *ValidationDetailsResponse { return v.ValidationDetails }).(ValidationDetailsResponsePtrOutput)
}

// Network properties of a server.
type Network struct {
	// Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
	DelegatedSubnetResourceId *string `pulumi:"delegatedSubnetResourceId"`
	// Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
	PrivateDnsZoneArmResourceId *string `pulumi:"privateDnsZoneArmResourceId"`
	// public network access is enabled or not
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
}

// NetworkInput is an input type that accepts NetworkArgs and NetworkOutput values.
// You can construct a concrete instance of `NetworkInput` via:
//
//	NetworkArgs{...}
type NetworkInput interface {
	pulumi.Input

	ToNetworkOutput() NetworkOutput
	ToNetworkOutputWithContext(context.Context) NetworkOutput
}

// Network properties of a server.
type NetworkArgs struct {
	// Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
	DelegatedSubnetResourceId pulumi.StringPtrInput `pulumi:"delegatedSubnetResourceId"`
	// Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
	PrivateDnsZoneArmResourceId pulumi.StringPtrInput `pulumi:"privateDnsZoneArmResourceId"`
	// public network access is enabled or not
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
}

func (NetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Network)(nil)).Elem()
}

func (i NetworkArgs) ToNetworkOutput() NetworkOutput {
	return i.ToNetworkOutputWithContext(context.Background())
}

func (i NetworkArgs) ToNetworkOutputWithContext(ctx context.Context) NetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkOutput)
}

func (i NetworkArgs) ToNetworkPtrOutput() NetworkPtrOutput {
	return i.ToNetworkPtrOutputWithContext(context.Background())
}

func (i NetworkArgs) ToNetworkPtrOutputWithContext(ctx context.Context) NetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkOutput).ToNetworkPtrOutputWithContext(ctx)
}

// NetworkPtrInput is an input type that accepts NetworkArgs, NetworkPtr and NetworkPtrOutput values.
// You can construct a concrete instance of `NetworkPtrInput` via:
//
//	        NetworkArgs{...}
//
//	or:
//
//	        nil
type NetworkPtrInput interface {
	pulumi.Input

	ToNetworkPtrOutput() NetworkPtrOutput
	ToNetworkPtrOutputWithContext(context.Context) NetworkPtrOutput
}

type networkPtrType NetworkArgs

func NetworkPtr(v *NetworkArgs) NetworkPtrInput {
	return (*networkPtrType)(v)
}

func (*networkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Network)(nil)).Elem()
}

func (i *networkPtrType) ToNetworkPtrOutput() NetworkPtrOutput {
	return i.ToNetworkPtrOutputWithContext(context.Background())
}

func (i *networkPtrType) ToNetworkPtrOutputWithContext(ctx context.Context) NetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPtrOutput)
}

// Network properties of a server.
type NetworkOutput struct{ *pulumi.OutputState }

func (NetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Network)(nil)).Elem()
}

func (o NetworkOutput) ToNetworkOutput() NetworkOutput {
	return o
}

func (o NetworkOutput) ToNetworkOutputWithContext(ctx context.Context) NetworkOutput {
	return o
}

func (o NetworkOutput) ToNetworkPtrOutput() NetworkPtrOutput {
	return o.ToNetworkPtrOutputWithContext(context.Background())
}

func (o NetworkOutput) ToNetworkPtrOutputWithContext(ctx context.Context) NetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Network) *Network {
		return &v
	}).(NetworkPtrOutput)
}

// Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
func (o NetworkOutput) DelegatedSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Network) *string { return v.DelegatedSubnetResourceId }).(pulumi.StringPtrOutput)
}

// Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
func (o NetworkOutput) PrivateDnsZoneArmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Network) *string { return v.PrivateDnsZoneArmResourceId }).(pulumi.StringPtrOutput)
}

// public network access is enabled or not
func (o NetworkOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Network) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

type NetworkPtrOutput struct{ *pulumi.OutputState }

func (NetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Network)(nil)).Elem()
}

func (o NetworkPtrOutput) ToNetworkPtrOutput() NetworkPtrOutput {
	return o
}

func (o NetworkPtrOutput) ToNetworkPtrOutputWithContext(ctx context.Context) NetworkPtrOutput {
	return o
}

func (o NetworkPtrOutput) Elem() NetworkOutput {
	return o.ApplyT(func(v *Network) Network {
		if v != nil {
			return *v
		}
		var ret Network
		return ret
	}).(NetworkOutput)
}

// Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
func (o NetworkPtrOutput) DelegatedSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Network) *string {
		if v == nil {
			return nil
		}
		return v.DelegatedSubnetResourceId
	}).(pulumi.StringPtrOutput)
}

// Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
func (o NetworkPtrOutput) PrivateDnsZoneArmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Network) *string {
		if v == nil {
			return nil
		}
		return v.PrivateDnsZoneArmResourceId
	}).(pulumi.StringPtrOutput)
}

// public network access is enabled or not
func (o NetworkPtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Network) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

// Network properties of a server.
type NetworkResponse struct {
	// Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
	DelegatedSubnetResourceId *string `pulumi:"delegatedSubnetResourceId"`
	// Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
	PrivateDnsZoneArmResourceId *string `pulumi:"privateDnsZoneArmResourceId"`
	// public network access is enabled or not
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
}

// Network properties of a server.
type NetworkResponseOutput struct{ *pulumi.OutputState }

func (NetworkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkResponse)(nil)).Elem()
}

func (o NetworkResponseOutput) ToNetworkResponseOutput() NetworkResponseOutput {
	return o
}

func (o NetworkResponseOutput) ToNetworkResponseOutputWithContext(ctx context.Context) NetworkResponseOutput {
	return o
}

// Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
func (o NetworkResponseOutput) DelegatedSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkResponse) *string { return v.DelegatedSubnetResourceId }).(pulumi.StringPtrOutput)
}

// Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
func (o NetworkResponseOutput) PrivateDnsZoneArmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkResponse) *string { return v.PrivateDnsZoneArmResourceId }).(pulumi.StringPtrOutput)
}

// public network access is enabled or not
func (o NetworkResponseOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkResponse) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

type NetworkResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkResponse)(nil)).Elem()
}

func (o NetworkResponsePtrOutput) ToNetworkResponsePtrOutput() NetworkResponsePtrOutput {
	return o
}

func (o NetworkResponsePtrOutput) ToNetworkResponsePtrOutputWithContext(ctx context.Context) NetworkResponsePtrOutput {
	return o
}

func (o NetworkResponsePtrOutput) Elem() NetworkResponseOutput {
	return o.ApplyT(func(v *NetworkResponse) NetworkResponse {
		if v != nil {
			return *v
		}
		var ret NetworkResponse
		return ret
	}).(NetworkResponseOutput)
}

// Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
func (o NetworkResponsePtrOutput) DelegatedSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkResponse) *string {
		if v == nil {
			return nil
		}
		return v.DelegatedSubnetResourceId
	}).(pulumi.StringPtrOutput)
}

// Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
func (o NetworkResponsePtrOutput) PrivateDnsZoneArmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateDnsZoneArmResourceId
	}).(pulumi.StringPtrOutput)
}

// public network access is enabled or not
func (o NetworkResponsePtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

// The private endpoint connection resource.
type PrivateEndpointConnectionResponse struct {
	// The group ids for the private endpoint resource.
	GroupIds []string `pulumi:"groupIds"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The private endpoint resource.
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// The private endpoint connection resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// The group ids for the private endpoint resource.
func (o PrivateEndpointConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The private endpoint resource.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o PrivateEndpointConnectionResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

type PrivateEndpointPropertyResponse struct {
	// Resource id of the private endpoint.
	Id *string `pulumi:"id"`
}

type PrivateEndpointPropertyResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointPropertyResponse)(nil)).Elem()
}

func (o PrivateEndpointPropertyResponseOutput) ToPrivateEndpointPropertyResponseOutput() PrivateEndpointPropertyResponseOutput {
	return o
}

func (o PrivateEndpointPropertyResponseOutput) ToPrivateEndpointPropertyResponseOutputWithContext(ctx context.Context) PrivateEndpointPropertyResponseOutput {
	return o
}

// Resource id of the private endpoint.
func (o PrivateEndpointPropertyResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointPropertyResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointPropertyResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPropertyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointPropertyResponse)(nil)).Elem()
}

func (o PrivateEndpointPropertyResponsePtrOutput) ToPrivateEndpointPropertyResponsePtrOutput() PrivateEndpointPropertyResponsePtrOutput {
	return o
}

func (o PrivateEndpointPropertyResponsePtrOutput) ToPrivateEndpointPropertyResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointPropertyResponsePtrOutput {
	return o
}

func (o PrivateEndpointPropertyResponsePtrOutput) Elem() PrivateEndpointPropertyResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointPropertyResponse) PrivateEndpointPropertyResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointPropertyResponse
		return ret
	}).(PrivateEndpointPropertyResponseOutput)
}

// Resource id of the private endpoint.
func (o PrivateEndpointPropertyResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointPropertyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The private endpoint resource.
type PrivateEndpointResponse struct {
	// The ARM identifier for private endpoint.
	Id string `pulumi:"id"`
}

// The private endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// The ARM identifier for private endpoint.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// The ARM identifier for private endpoint.
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionStateResponse
		return ret
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Replica properties of a server
type Replica struct {
	// Sets the promote mode for a replica server. This is a write only property.
	PromoteMode *string `pulumi:"promoteMode"`
	// Sets the promote options for a replica server. This is a write only property.
	PromoteOption *string `pulumi:"promoteOption"`
	// Used to indicate role of the server in replication set.
	Role *string `pulumi:"role"`
}

// ReplicaInput is an input type that accepts ReplicaArgs and ReplicaOutput values.
// You can construct a concrete instance of `ReplicaInput` via:
//
//	ReplicaArgs{...}
type ReplicaInput interface {
	pulumi.Input

	ToReplicaOutput() ReplicaOutput
	ToReplicaOutputWithContext(context.Context) ReplicaOutput
}

// Replica properties of a server
type ReplicaArgs struct {
	// Sets the promote mode for a replica server. This is a write only property.
	PromoteMode pulumi.StringPtrInput `pulumi:"promoteMode"`
	// Sets the promote options for a replica server. This is a write only property.
	PromoteOption pulumi.StringPtrInput `pulumi:"promoteOption"`
	// Used to indicate role of the server in replication set.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (ReplicaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Replica)(nil)).Elem()
}

func (i ReplicaArgs) ToReplicaOutput() ReplicaOutput {
	return i.ToReplicaOutputWithContext(context.Background())
}

func (i ReplicaArgs) ToReplicaOutputWithContext(ctx context.Context) ReplicaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaOutput)
}

func (i ReplicaArgs) ToReplicaPtrOutput() ReplicaPtrOutput {
	return i.ToReplicaPtrOutputWithContext(context.Background())
}

func (i ReplicaArgs) ToReplicaPtrOutputWithContext(ctx context.Context) ReplicaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaOutput).ToReplicaPtrOutputWithContext(ctx)
}

// ReplicaPtrInput is an input type that accepts ReplicaArgs, ReplicaPtr and ReplicaPtrOutput values.
// You can construct a concrete instance of `ReplicaPtrInput` via:
//
//	        ReplicaArgs{...}
//
//	or:
//
//	        nil
type ReplicaPtrInput interface {
	pulumi.Input

	ToReplicaPtrOutput() ReplicaPtrOutput
	ToReplicaPtrOutputWithContext(context.Context) ReplicaPtrOutput
}

type replicaPtrType ReplicaArgs

func ReplicaPtr(v *ReplicaArgs) ReplicaPtrInput {
	return (*replicaPtrType)(v)
}

func (*replicaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Replica)(nil)).Elem()
}

func (i *replicaPtrType) ToReplicaPtrOutput() ReplicaPtrOutput {
	return i.ToReplicaPtrOutputWithContext(context.Background())
}

func (i *replicaPtrType) ToReplicaPtrOutputWithContext(ctx context.Context) ReplicaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaPtrOutput)
}

// Replica properties of a server
type ReplicaOutput struct{ *pulumi.OutputState }

func (ReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Replica)(nil)).Elem()
}

func (o ReplicaOutput) ToReplicaOutput() ReplicaOutput {
	return o
}

func (o ReplicaOutput) ToReplicaOutputWithContext(ctx context.Context) ReplicaOutput {
	return o
}

func (o ReplicaOutput) ToReplicaPtrOutput() ReplicaPtrOutput {
	return o.ToReplicaPtrOutputWithContext(context.Background())
}

func (o ReplicaOutput) ToReplicaPtrOutputWithContext(ctx context.Context) ReplicaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Replica) *Replica {
		return &v
	}).(ReplicaPtrOutput)
}

// Sets the promote mode for a replica server. This is a write only property.
func (o ReplicaOutput) PromoteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Replica) *string { return v.PromoteMode }).(pulumi.StringPtrOutput)
}

// Sets the promote options for a replica server. This is a write only property.
func (o ReplicaOutput) PromoteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Replica) *string { return v.PromoteOption }).(pulumi.StringPtrOutput)
}

// Used to indicate role of the server in replication set.
func (o ReplicaOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Replica) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type ReplicaPtrOutput struct{ *pulumi.OutputState }

func (ReplicaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Replica)(nil)).Elem()
}

func (o ReplicaPtrOutput) ToReplicaPtrOutput() ReplicaPtrOutput {
	return o
}

func (o ReplicaPtrOutput) ToReplicaPtrOutputWithContext(ctx context.Context) ReplicaPtrOutput {
	return o
}

func (o ReplicaPtrOutput) Elem() ReplicaOutput {
	return o.ApplyT(func(v *Replica) Replica {
		if v != nil {
			return *v
		}
		var ret Replica
		return ret
	}).(ReplicaOutput)
}

// Sets the promote mode for a replica server. This is a write only property.
func (o ReplicaPtrOutput) PromoteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Replica) *string {
		if v == nil {
			return nil
		}
		return v.PromoteMode
	}).(pulumi.StringPtrOutput)
}

// Sets the promote options for a replica server. This is a write only property.
func (o ReplicaPtrOutput) PromoteOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Replica) *string {
		if v == nil {
			return nil
		}
		return v.PromoteOption
	}).(pulumi.StringPtrOutput)
}

// Used to indicate role of the server in replication set.
func (o ReplicaPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Replica) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// Replica properties of a server
type ReplicaResponse struct {
	// Replicas allowed for a server.
	Capacity int `pulumi:"capacity"`
	// Gets the replication state of a replica server. This property is returned only for replicas api call. Supported values are Active, Catchup, Provisioning, Updating, Broken, Reconfiguring
	ReplicationState string `pulumi:"replicationState"`
	// Used to indicate role of the server in replication set.
	Role *string `pulumi:"role"`
}

// Replica properties of a server
type ReplicaResponseOutput struct{ *pulumi.OutputState }

func (ReplicaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaResponse)(nil)).Elem()
}

func (o ReplicaResponseOutput) ToReplicaResponseOutput() ReplicaResponseOutput {
	return o
}

func (o ReplicaResponseOutput) ToReplicaResponseOutputWithContext(ctx context.Context) ReplicaResponseOutput {
	return o
}

// Replicas allowed for a server.
func (o ReplicaResponseOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v ReplicaResponse) int { return v.Capacity }).(pulumi.IntOutput)
}

// Gets the replication state of a replica server. This property is returned only for replicas api call. Supported values are Active, Catchup, Provisioning, Updating, Broken, Reconfiguring
func (o ReplicaResponseOutput) ReplicationState() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicaResponse) string { return v.ReplicationState }).(pulumi.StringOutput)
}

// Used to indicate role of the server in replication set.
func (o ReplicaResponseOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaResponse) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type ReplicaResponsePtrOutput struct{ *pulumi.OutputState }

func (ReplicaResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicaResponse)(nil)).Elem()
}

func (o ReplicaResponsePtrOutput) ToReplicaResponsePtrOutput() ReplicaResponsePtrOutput {
	return o
}

func (o ReplicaResponsePtrOutput) ToReplicaResponsePtrOutputWithContext(ctx context.Context) ReplicaResponsePtrOutput {
	return o
}

func (o ReplicaResponsePtrOutput) Elem() ReplicaResponseOutput {
	return o.ApplyT(func(v *ReplicaResponse) ReplicaResponse {
		if v != nil {
			return *v
		}
		var ret ReplicaResponse
		return ret
	}).(ReplicaResponseOutput)
}

// Replicas allowed for a server.
func (o ReplicaResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReplicaResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Gets the replication state of a replica server. This property is returned only for replicas api call. Supported values are Active, Catchup, Provisioning, Updating, Broken, Reconfiguring
func (o ReplicaResponsePtrOutput) ReplicationState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicaResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReplicationState
	}).(pulumi.StringPtrOutput)
}

// Used to indicate role of the server in replication set.
func (o ReplicaResponsePtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicaResponse) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentity struct {
	// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
	Type *string `pulumi:"type"`
}

// ResourceIdentityInput is an input type that accepts ResourceIdentityArgs and ResourceIdentityOutput values.
// You can construct a concrete instance of `ResourceIdentityInput` via:
//
//	ResourceIdentityArgs{...}
type ResourceIdentityInput interface {
	pulumi.Input

	ToResourceIdentityOutput() ResourceIdentityOutput
	ToResourceIdentityOutputWithContext(context.Context) ResourceIdentityOutput
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentityArgs struct {
	// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ResourceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (i ResourceIdentityArgs) ToResourceIdentityOutput() ResourceIdentityOutput {
	return i.ToResourceIdentityOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput)
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput).ToResourceIdentityPtrOutputWithContext(ctx)
}

// ResourceIdentityPtrInput is an input type that accepts ResourceIdentityArgs, ResourceIdentityPtr and ResourceIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceIdentityPtrInput` via:
//
//	        ResourceIdentityArgs{...}
//
//	or:
//
//	        nil
type ResourceIdentityPtrInput interface {
	pulumi.Input

	ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput
	ToResourceIdentityPtrOutputWithContext(context.Context) ResourceIdentityPtrOutput
}

type resourceIdentityPtrType ResourceIdentityArgs

func ResourceIdentityPtr(v *ResourceIdentityArgs) ResourceIdentityPtrInput {
	return (*resourceIdentityPtrType)(v)
}

func (*resourceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityPtrOutput)
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentityOutput struct{ *pulumi.OutputState }

func (ResourceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityOutput) ToResourceIdentityOutput() ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentity) *ResourceIdentity {
		return &v
	}).(ResourceIdentityPtrOutput)
}

// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
func (o ResourceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ResourceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) Elem() ResourceIdentityOutput {
	return o.ApplyT(func(v *ResourceIdentity) ResourceIdentity {
		if v != nil {
			return *v
		}
		var ret ResourceIdentity
		return ret
	}).(ResourceIdentityOutput)
}

// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
func (o ResourceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentityResponse struct {
	// The Azure Active Directory principal id.
	PrincipalId string `pulumi:"principalId"`
	// The Azure Active Directory tenant id.
	TenantId string `pulumi:"tenantId"`
	// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
	Type *string `pulumi:"type"`
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return o
}

// The Azure Active Directory principal id.
func (o ResourceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The Azure Active Directory tenant id.
func (o ResourceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
func (o ResourceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ResourceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) Elem() ResourceIdentityResponseOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) ResourceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityResponse
		return ret
	}).(ResourceIdentityResponseOutput)
}

// The Azure Active Directory principal id.
func (o ResourceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Azure Active Directory tenant id.
func (o ResourceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
func (o ResourceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Authentication configuration of a cluster.
type ServerGroupClusterAuthConfig struct {
	ActiveDirectoryAuth *string `pulumi:"activeDirectoryAuth"`
	PasswordAuth        *string `pulumi:"passwordAuth"`
}

// ServerGroupClusterAuthConfigInput is an input type that accepts ServerGroupClusterAuthConfigArgs and ServerGroupClusterAuthConfigOutput values.
// You can construct a concrete instance of `ServerGroupClusterAuthConfigInput` via:
//
//	ServerGroupClusterAuthConfigArgs{...}
type ServerGroupClusterAuthConfigInput interface {
	pulumi.Input

	ToServerGroupClusterAuthConfigOutput() ServerGroupClusterAuthConfigOutput
	ToServerGroupClusterAuthConfigOutputWithContext(context.Context) ServerGroupClusterAuthConfigOutput
}

// Authentication configuration of a cluster.
type ServerGroupClusterAuthConfigArgs struct {
	ActiveDirectoryAuth pulumi.StringPtrInput `pulumi:"activeDirectoryAuth"`
	PasswordAuth        pulumi.StringPtrInput `pulumi:"passwordAuth"`
}

func (ServerGroupClusterAuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupClusterAuthConfig)(nil)).Elem()
}

func (i ServerGroupClusterAuthConfigArgs) ToServerGroupClusterAuthConfigOutput() ServerGroupClusterAuthConfigOutput {
	return i.ToServerGroupClusterAuthConfigOutputWithContext(context.Background())
}

func (i ServerGroupClusterAuthConfigArgs) ToServerGroupClusterAuthConfigOutputWithContext(ctx context.Context) ServerGroupClusterAuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupClusterAuthConfigOutput)
}

func (i ServerGroupClusterAuthConfigArgs) ToServerGroupClusterAuthConfigPtrOutput() ServerGroupClusterAuthConfigPtrOutput {
	return i.ToServerGroupClusterAuthConfigPtrOutputWithContext(context.Background())
}

func (i ServerGroupClusterAuthConfigArgs) ToServerGroupClusterAuthConfigPtrOutputWithContext(ctx context.Context) ServerGroupClusterAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupClusterAuthConfigOutput).ToServerGroupClusterAuthConfigPtrOutputWithContext(ctx)
}

// ServerGroupClusterAuthConfigPtrInput is an input type that accepts ServerGroupClusterAuthConfigArgs, ServerGroupClusterAuthConfigPtr and ServerGroupClusterAuthConfigPtrOutput values.
// You can construct a concrete instance of `ServerGroupClusterAuthConfigPtrInput` via:
//
//	        ServerGroupClusterAuthConfigArgs{...}
//
//	or:
//
//	        nil
type ServerGroupClusterAuthConfigPtrInput interface {
	pulumi.Input

	ToServerGroupClusterAuthConfigPtrOutput() ServerGroupClusterAuthConfigPtrOutput
	ToServerGroupClusterAuthConfigPtrOutputWithContext(context.Context) ServerGroupClusterAuthConfigPtrOutput
}

type serverGroupClusterAuthConfigPtrType ServerGroupClusterAuthConfigArgs

func ServerGroupClusterAuthConfigPtr(v *ServerGroupClusterAuthConfigArgs) ServerGroupClusterAuthConfigPtrInput {
	return (*serverGroupClusterAuthConfigPtrType)(v)
}

func (*serverGroupClusterAuthConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupClusterAuthConfig)(nil)).Elem()
}

func (i *serverGroupClusterAuthConfigPtrType) ToServerGroupClusterAuthConfigPtrOutput() ServerGroupClusterAuthConfigPtrOutput {
	return i.ToServerGroupClusterAuthConfigPtrOutputWithContext(context.Background())
}

func (i *serverGroupClusterAuthConfigPtrType) ToServerGroupClusterAuthConfigPtrOutputWithContext(ctx context.Context) ServerGroupClusterAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupClusterAuthConfigPtrOutput)
}

// Authentication configuration of a cluster.
type ServerGroupClusterAuthConfigOutput struct{ *pulumi.OutputState }

func (ServerGroupClusterAuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupClusterAuthConfig)(nil)).Elem()
}

func (o ServerGroupClusterAuthConfigOutput) ToServerGroupClusterAuthConfigOutput() ServerGroupClusterAuthConfigOutput {
	return o
}

func (o ServerGroupClusterAuthConfigOutput) ToServerGroupClusterAuthConfigOutputWithContext(ctx context.Context) ServerGroupClusterAuthConfigOutput {
	return o
}

func (o ServerGroupClusterAuthConfigOutput) ToServerGroupClusterAuthConfigPtrOutput() ServerGroupClusterAuthConfigPtrOutput {
	return o.ToServerGroupClusterAuthConfigPtrOutputWithContext(context.Background())
}

func (o ServerGroupClusterAuthConfigOutput) ToServerGroupClusterAuthConfigPtrOutputWithContext(ctx context.Context) ServerGroupClusterAuthConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerGroupClusterAuthConfig) *ServerGroupClusterAuthConfig {
		return &v
	}).(ServerGroupClusterAuthConfigPtrOutput)
}

func (o ServerGroupClusterAuthConfigOutput) ActiveDirectoryAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterAuthConfig) *string { return v.ActiveDirectoryAuth }).(pulumi.StringPtrOutput)
}

func (o ServerGroupClusterAuthConfigOutput) PasswordAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterAuthConfig) *string { return v.PasswordAuth }).(pulumi.StringPtrOutput)
}

type ServerGroupClusterAuthConfigPtrOutput struct{ *pulumi.OutputState }

func (ServerGroupClusterAuthConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupClusterAuthConfig)(nil)).Elem()
}

func (o ServerGroupClusterAuthConfigPtrOutput) ToServerGroupClusterAuthConfigPtrOutput() ServerGroupClusterAuthConfigPtrOutput {
	return o
}

func (o ServerGroupClusterAuthConfigPtrOutput) ToServerGroupClusterAuthConfigPtrOutputWithContext(ctx context.Context) ServerGroupClusterAuthConfigPtrOutput {
	return o
}

func (o ServerGroupClusterAuthConfigPtrOutput) Elem() ServerGroupClusterAuthConfigOutput {
	return o.ApplyT(func(v *ServerGroupClusterAuthConfig) ServerGroupClusterAuthConfig {
		if v != nil {
			return *v
		}
		var ret ServerGroupClusterAuthConfig
		return ret
	}).(ServerGroupClusterAuthConfigOutput)
}

func (o ServerGroupClusterAuthConfigPtrOutput) ActiveDirectoryAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterAuthConfig) *string {
		if v == nil {
			return nil
		}
		return v.ActiveDirectoryAuth
	}).(pulumi.StringPtrOutput)
}

func (o ServerGroupClusterAuthConfigPtrOutput) PasswordAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterAuthConfig) *string {
		if v == nil {
			return nil
		}
		return v.PasswordAuth
	}).(pulumi.StringPtrOutput)
}

// Authentication configuration of a cluster.
type ServerGroupClusterAuthConfigResponse struct {
	ActiveDirectoryAuth *string `pulumi:"activeDirectoryAuth"`
	PasswordAuth        *string `pulumi:"passwordAuth"`
}

// Authentication configuration of a cluster.
type ServerGroupClusterAuthConfigResponseOutput struct{ *pulumi.OutputState }

func (ServerGroupClusterAuthConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupClusterAuthConfigResponse)(nil)).Elem()
}

func (o ServerGroupClusterAuthConfigResponseOutput) ToServerGroupClusterAuthConfigResponseOutput() ServerGroupClusterAuthConfigResponseOutput {
	return o
}

func (o ServerGroupClusterAuthConfigResponseOutput) ToServerGroupClusterAuthConfigResponseOutputWithContext(ctx context.Context) ServerGroupClusterAuthConfigResponseOutput {
	return o
}

func (o ServerGroupClusterAuthConfigResponseOutput) ActiveDirectoryAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterAuthConfigResponse) *string { return v.ActiveDirectoryAuth }).(pulumi.StringPtrOutput)
}

func (o ServerGroupClusterAuthConfigResponseOutput) PasswordAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterAuthConfigResponse) *string { return v.PasswordAuth }).(pulumi.StringPtrOutput)
}

type ServerGroupClusterAuthConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerGroupClusterAuthConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupClusterAuthConfigResponse)(nil)).Elem()
}

func (o ServerGroupClusterAuthConfigResponsePtrOutput) ToServerGroupClusterAuthConfigResponsePtrOutput() ServerGroupClusterAuthConfigResponsePtrOutput {
	return o
}

func (o ServerGroupClusterAuthConfigResponsePtrOutput) ToServerGroupClusterAuthConfigResponsePtrOutputWithContext(ctx context.Context) ServerGroupClusterAuthConfigResponsePtrOutput {
	return o
}

func (o ServerGroupClusterAuthConfigResponsePtrOutput) Elem() ServerGroupClusterAuthConfigResponseOutput {
	return o.ApplyT(func(v *ServerGroupClusterAuthConfigResponse) ServerGroupClusterAuthConfigResponse {
		if v != nil {
			return *v
		}
		var ret ServerGroupClusterAuthConfigResponse
		return ret
	}).(ServerGroupClusterAuthConfigResponseOutput)
}

func (o ServerGroupClusterAuthConfigResponsePtrOutput) ActiveDirectoryAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterAuthConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActiveDirectoryAuth
	}).(pulumi.StringPtrOutput)
}

func (o ServerGroupClusterAuthConfigResponsePtrOutput) PasswordAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterAuthConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PasswordAuth
	}).(pulumi.StringPtrOutput)
}

// The data encryption properties of a cluster.
type ServerGroupClusterDataEncryption struct {
	// URI for the key in keyvault for data encryption of the primary server.
	PrimaryKeyUri *string `pulumi:"primaryKeyUri"`
	// Resource Id for the User assigned identity to be used for data encryption of the primary server.
	PrimaryUserAssignedIdentityId *string `pulumi:"primaryUserAssignedIdentityId"`
	Type                          *string `pulumi:"type"`
}

// ServerGroupClusterDataEncryptionInput is an input type that accepts ServerGroupClusterDataEncryptionArgs and ServerGroupClusterDataEncryptionOutput values.
// You can construct a concrete instance of `ServerGroupClusterDataEncryptionInput` via:
//
//	ServerGroupClusterDataEncryptionArgs{...}
type ServerGroupClusterDataEncryptionInput interface {
	pulumi.Input

	ToServerGroupClusterDataEncryptionOutput() ServerGroupClusterDataEncryptionOutput
	ToServerGroupClusterDataEncryptionOutputWithContext(context.Context) ServerGroupClusterDataEncryptionOutput
}

// The data encryption properties of a cluster.
type ServerGroupClusterDataEncryptionArgs struct {
	// URI for the key in keyvault for data encryption of the primary server.
	PrimaryKeyUri pulumi.StringPtrInput `pulumi:"primaryKeyUri"`
	// Resource Id for the User assigned identity to be used for data encryption of the primary server.
	PrimaryUserAssignedIdentityId pulumi.StringPtrInput `pulumi:"primaryUserAssignedIdentityId"`
	Type                          pulumi.StringPtrInput `pulumi:"type"`
}

func (ServerGroupClusterDataEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupClusterDataEncryption)(nil)).Elem()
}

func (i ServerGroupClusterDataEncryptionArgs) ToServerGroupClusterDataEncryptionOutput() ServerGroupClusterDataEncryptionOutput {
	return i.ToServerGroupClusterDataEncryptionOutputWithContext(context.Background())
}

func (i ServerGroupClusterDataEncryptionArgs) ToServerGroupClusterDataEncryptionOutputWithContext(ctx context.Context) ServerGroupClusterDataEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupClusterDataEncryptionOutput)
}

func (i ServerGroupClusterDataEncryptionArgs) ToServerGroupClusterDataEncryptionPtrOutput() ServerGroupClusterDataEncryptionPtrOutput {
	return i.ToServerGroupClusterDataEncryptionPtrOutputWithContext(context.Background())
}

func (i ServerGroupClusterDataEncryptionArgs) ToServerGroupClusterDataEncryptionPtrOutputWithContext(ctx context.Context) ServerGroupClusterDataEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupClusterDataEncryptionOutput).ToServerGroupClusterDataEncryptionPtrOutputWithContext(ctx)
}

// ServerGroupClusterDataEncryptionPtrInput is an input type that accepts ServerGroupClusterDataEncryptionArgs, ServerGroupClusterDataEncryptionPtr and ServerGroupClusterDataEncryptionPtrOutput values.
// You can construct a concrete instance of `ServerGroupClusterDataEncryptionPtrInput` via:
//
//	        ServerGroupClusterDataEncryptionArgs{...}
//
//	or:
//
//	        nil
type ServerGroupClusterDataEncryptionPtrInput interface {
	pulumi.Input

	ToServerGroupClusterDataEncryptionPtrOutput() ServerGroupClusterDataEncryptionPtrOutput
	ToServerGroupClusterDataEncryptionPtrOutputWithContext(context.Context) ServerGroupClusterDataEncryptionPtrOutput
}

type serverGroupClusterDataEncryptionPtrType ServerGroupClusterDataEncryptionArgs

func ServerGroupClusterDataEncryptionPtr(v *ServerGroupClusterDataEncryptionArgs) ServerGroupClusterDataEncryptionPtrInput {
	return (*serverGroupClusterDataEncryptionPtrType)(v)
}

func (*serverGroupClusterDataEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupClusterDataEncryption)(nil)).Elem()
}

func (i *serverGroupClusterDataEncryptionPtrType) ToServerGroupClusterDataEncryptionPtrOutput() ServerGroupClusterDataEncryptionPtrOutput {
	return i.ToServerGroupClusterDataEncryptionPtrOutputWithContext(context.Background())
}

func (i *serverGroupClusterDataEncryptionPtrType) ToServerGroupClusterDataEncryptionPtrOutputWithContext(ctx context.Context) ServerGroupClusterDataEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupClusterDataEncryptionPtrOutput)
}

// The data encryption properties of a cluster.
type ServerGroupClusterDataEncryptionOutput struct{ *pulumi.OutputState }

func (ServerGroupClusterDataEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupClusterDataEncryption)(nil)).Elem()
}

func (o ServerGroupClusterDataEncryptionOutput) ToServerGroupClusterDataEncryptionOutput() ServerGroupClusterDataEncryptionOutput {
	return o
}

func (o ServerGroupClusterDataEncryptionOutput) ToServerGroupClusterDataEncryptionOutputWithContext(ctx context.Context) ServerGroupClusterDataEncryptionOutput {
	return o
}

func (o ServerGroupClusterDataEncryptionOutput) ToServerGroupClusterDataEncryptionPtrOutput() ServerGroupClusterDataEncryptionPtrOutput {
	return o.ToServerGroupClusterDataEncryptionPtrOutputWithContext(context.Background())
}

func (o ServerGroupClusterDataEncryptionOutput) ToServerGroupClusterDataEncryptionPtrOutputWithContext(ctx context.Context) ServerGroupClusterDataEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerGroupClusterDataEncryption) *ServerGroupClusterDataEncryption {
		return &v
	}).(ServerGroupClusterDataEncryptionPtrOutput)
}

// URI for the key in keyvault for data encryption of the primary server.
func (o ServerGroupClusterDataEncryptionOutput) PrimaryKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterDataEncryption) *string { return v.PrimaryKeyUri }).(pulumi.StringPtrOutput)
}

// Resource Id for the User assigned identity to be used for data encryption of the primary server.
func (o ServerGroupClusterDataEncryptionOutput) PrimaryUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterDataEncryption) *string { return v.PrimaryUserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

func (o ServerGroupClusterDataEncryptionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterDataEncryption) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ServerGroupClusterDataEncryptionPtrOutput struct{ *pulumi.OutputState }

func (ServerGroupClusterDataEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupClusterDataEncryption)(nil)).Elem()
}

func (o ServerGroupClusterDataEncryptionPtrOutput) ToServerGroupClusterDataEncryptionPtrOutput() ServerGroupClusterDataEncryptionPtrOutput {
	return o
}

func (o ServerGroupClusterDataEncryptionPtrOutput) ToServerGroupClusterDataEncryptionPtrOutputWithContext(ctx context.Context) ServerGroupClusterDataEncryptionPtrOutput {
	return o
}

func (o ServerGroupClusterDataEncryptionPtrOutput) Elem() ServerGroupClusterDataEncryptionOutput {
	return o.ApplyT(func(v *ServerGroupClusterDataEncryption) ServerGroupClusterDataEncryption {
		if v != nil {
			return *v
		}
		var ret ServerGroupClusterDataEncryption
		return ret
	}).(ServerGroupClusterDataEncryptionOutput)
}

// URI for the key in keyvault for data encryption of the primary server.
func (o ServerGroupClusterDataEncryptionPtrOutput) PrimaryKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterDataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryKeyUri
	}).(pulumi.StringPtrOutput)
}

// Resource Id for the User assigned identity to be used for data encryption of the primary server.
func (o ServerGroupClusterDataEncryptionPtrOutput) PrimaryUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterDataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryUserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

func (o ServerGroupClusterDataEncryptionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterDataEncryption) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The data encryption properties of a cluster.
type ServerGroupClusterDataEncryptionResponse struct {
	// URI for the key in keyvault for data encryption of the primary server.
	PrimaryKeyUri *string `pulumi:"primaryKeyUri"`
	// Resource Id for the User assigned identity to be used for data encryption of the primary server.
	PrimaryUserAssignedIdentityId *string `pulumi:"primaryUserAssignedIdentityId"`
	Type                          *string `pulumi:"type"`
}

// The data encryption properties of a cluster.
type ServerGroupClusterDataEncryptionResponseOutput struct{ *pulumi.OutputState }

func (ServerGroupClusterDataEncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupClusterDataEncryptionResponse)(nil)).Elem()
}

func (o ServerGroupClusterDataEncryptionResponseOutput) ToServerGroupClusterDataEncryptionResponseOutput() ServerGroupClusterDataEncryptionResponseOutput {
	return o
}

func (o ServerGroupClusterDataEncryptionResponseOutput) ToServerGroupClusterDataEncryptionResponseOutputWithContext(ctx context.Context) ServerGroupClusterDataEncryptionResponseOutput {
	return o
}

// URI for the key in keyvault for data encryption of the primary server.
func (o ServerGroupClusterDataEncryptionResponseOutput) PrimaryKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterDataEncryptionResponse) *string { return v.PrimaryKeyUri }).(pulumi.StringPtrOutput)
}

// Resource Id for the User assigned identity to be used for data encryption of the primary server.
func (o ServerGroupClusterDataEncryptionResponseOutput) PrimaryUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterDataEncryptionResponse) *string { return v.PrimaryUserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

func (o ServerGroupClusterDataEncryptionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterDataEncryptionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ServerGroupClusterDataEncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerGroupClusterDataEncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupClusterDataEncryptionResponse)(nil)).Elem()
}

func (o ServerGroupClusterDataEncryptionResponsePtrOutput) ToServerGroupClusterDataEncryptionResponsePtrOutput() ServerGroupClusterDataEncryptionResponsePtrOutput {
	return o
}

func (o ServerGroupClusterDataEncryptionResponsePtrOutput) ToServerGroupClusterDataEncryptionResponsePtrOutputWithContext(ctx context.Context) ServerGroupClusterDataEncryptionResponsePtrOutput {
	return o
}

func (o ServerGroupClusterDataEncryptionResponsePtrOutput) Elem() ServerGroupClusterDataEncryptionResponseOutput {
	return o.ApplyT(func(v *ServerGroupClusterDataEncryptionResponse) ServerGroupClusterDataEncryptionResponse {
		if v != nil {
			return *v
		}
		var ret ServerGroupClusterDataEncryptionResponse
		return ret
	}).(ServerGroupClusterDataEncryptionResponseOutput)
}

// URI for the key in keyvault for data encryption of the primary server.
func (o ServerGroupClusterDataEncryptionResponsePtrOutput) PrimaryKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterDataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryKeyUri
	}).(pulumi.StringPtrOutput)
}

// Resource Id for the User assigned identity to be used for data encryption of the primary server.
func (o ServerGroupClusterDataEncryptionResponsePtrOutput) PrimaryUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterDataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryUserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

func (o ServerGroupClusterDataEncryptionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterDataEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Schedule settings for regular cluster updates.
type ServerGroupClusterMaintenanceWindow struct {
	// Indicates whether custom maintenance window is enabled or not.
	CustomWindow *string `pulumi:"customWindow"`
	// Preferred day of the week for maintenance window.
	DayOfWeek *int `pulumi:"dayOfWeek"`
	// Start hour within preferred day of the week for maintenance window.
	StartHour *int `pulumi:"startHour"`
	// Start minute within the start hour for maintenance window.
	StartMinute *int `pulumi:"startMinute"`
}

// ServerGroupClusterMaintenanceWindowInput is an input type that accepts ServerGroupClusterMaintenanceWindowArgs and ServerGroupClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `ServerGroupClusterMaintenanceWindowInput` via:
//
//	ServerGroupClusterMaintenanceWindowArgs{...}
type ServerGroupClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToServerGroupClusterMaintenanceWindowOutput() ServerGroupClusterMaintenanceWindowOutput
	ToServerGroupClusterMaintenanceWindowOutputWithContext(context.Context) ServerGroupClusterMaintenanceWindowOutput
}

// Schedule settings for regular cluster updates.
type ServerGroupClusterMaintenanceWindowArgs struct {
	// Indicates whether custom maintenance window is enabled or not.
	CustomWindow pulumi.StringPtrInput `pulumi:"customWindow"`
	// Preferred day of the week for maintenance window.
	DayOfWeek pulumi.IntPtrInput `pulumi:"dayOfWeek"`
	// Start hour within preferred day of the week for maintenance window.
	StartHour pulumi.IntPtrInput `pulumi:"startHour"`
	// Start minute within the start hour for maintenance window.
	StartMinute pulumi.IntPtrInput `pulumi:"startMinute"`
}

func (ServerGroupClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupClusterMaintenanceWindow)(nil)).Elem()
}

func (i ServerGroupClusterMaintenanceWindowArgs) ToServerGroupClusterMaintenanceWindowOutput() ServerGroupClusterMaintenanceWindowOutput {
	return i.ToServerGroupClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i ServerGroupClusterMaintenanceWindowArgs) ToServerGroupClusterMaintenanceWindowOutputWithContext(ctx context.Context) ServerGroupClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupClusterMaintenanceWindowOutput)
}

func (i ServerGroupClusterMaintenanceWindowArgs) ToServerGroupClusterMaintenanceWindowPtrOutput() ServerGroupClusterMaintenanceWindowPtrOutput {
	return i.ToServerGroupClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i ServerGroupClusterMaintenanceWindowArgs) ToServerGroupClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) ServerGroupClusterMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupClusterMaintenanceWindowOutput).ToServerGroupClusterMaintenanceWindowPtrOutputWithContext(ctx)
}

// ServerGroupClusterMaintenanceWindowPtrInput is an input type that accepts ServerGroupClusterMaintenanceWindowArgs, ServerGroupClusterMaintenanceWindowPtr and ServerGroupClusterMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `ServerGroupClusterMaintenanceWindowPtrInput` via:
//
//	        ServerGroupClusterMaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type ServerGroupClusterMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToServerGroupClusterMaintenanceWindowPtrOutput() ServerGroupClusterMaintenanceWindowPtrOutput
	ToServerGroupClusterMaintenanceWindowPtrOutputWithContext(context.Context) ServerGroupClusterMaintenanceWindowPtrOutput
}

type serverGroupClusterMaintenanceWindowPtrType ServerGroupClusterMaintenanceWindowArgs

func ServerGroupClusterMaintenanceWindowPtr(v *ServerGroupClusterMaintenanceWindowArgs) ServerGroupClusterMaintenanceWindowPtrInput {
	return (*serverGroupClusterMaintenanceWindowPtrType)(v)
}

func (*serverGroupClusterMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupClusterMaintenanceWindow)(nil)).Elem()
}

func (i *serverGroupClusterMaintenanceWindowPtrType) ToServerGroupClusterMaintenanceWindowPtrOutput() ServerGroupClusterMaintenanceWindowPtrOutput {
	return i.ToServerGroupClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *serverGroupClusterMaintenanceWindowPtrType) ToServerGroupClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) ServerGroupClusterMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupClusterMaintenanceWindowPtrOutput)
}

// Schedule settings for regular cluster updates.
type ServerGroupClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (ServerGroupClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupClusterMaintenanceWindow)(nil)).Elem()
}

func (o ServerGroupClusterMaintenanceWindowOutput) ToServerGroupClusterMaintenanceWindowOutput() ServerGroupClusterMaintenanceWindowOutput {
	return o
}

func (o ServerGroupClusterMaintenanceWindowOutput) ToServerGroupClusterMaintenanceWindowOutputWithContext(ctx context.Context) ServerGroupClusterMaintenanceWindowOutput {
	return o
}

func (o ServerGroupClusterMaintenanceWindowOutput) ToServerGroupClusterMaintenanceWindowPtrOutput() ServerGroupClusterMaintenanceWindowPtrOutput {
	return o.ToServerGroupClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o ServerGroupClusterMaintenanceWindowOutput) ToServerGroupClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) ServerGroupClusterMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerGroupClusterMaintenanceWindow) *ServerGroupClusterMaintenanceWindow {
		return &v
	}).(ServerGroupClusterMaintenanceWindowPtrOutput)
}

// Indicates whether custom maintenance window is enabled or not.
func (o ServerGroupClusterMaintenanceWindowOutput) CustomWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterMaintenanceWindow) *string { return v.CustomWindow }).(pulumi.StringPtrOutput)
}

// Preferred day of the week for maintenance window.
func (o ServerGroupClusterMaintenanceWindowOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterMaintenanceWindow) *int { return v.DayOfWeek }).(pulumi.IntPtrOutput)
}

// Start hour within preferred day of the week for maintenance window.
func (o ServerGroupClusterMaintenanceWindowOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterMaintenanceWindow) *int { return v.StartHour }).(pulumi.IntPtrOutput)
}

// Start minute within the start hour for maintenance window.
func (o ServerGroupClusterMaintenanceWindowOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterMaintenanceWindow) *int { return v.StartMinute }).(pulumi.IntPtrOutput)
}

type ServerGroupClusterMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (ServerGroupClusterMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupClusterMaintenanceWindow)(nil)).Elem()
}

func (o ServerGroupClusterMaintenanceWindowPtrOutput) ToServerGroupClusterMaintenanceWindowPtrOutput() ServerGroupClusterMaintenanceWindowPtrOutput {
	return o
}

func (o ServerGroupClusterMaintenanceWindowPtrOutput) ToServerGroupClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) ServerGroupClusterMaintenanceWindowPtrOutput {
	return o
}

func (o ServerGroupClusterMaintenanceWindowPtrOutput) Elem() ServerGroupClusterMaintenanceWindowOutput {
	return o.ApplyT(func(v *ServerGroupClusterMaintenanceWindow) ServerGroupClusterMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret ServerGroupClusterMaintenanceWindow
		return ret
	}).(ServerGroupClusterMaintenanceWindowOutput)
}

// Indicates whether custom maintenance window is enabled or not.
func (o ServerGroupClusterMaintenanceWindowPtrOutput) CustomWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return v.CustomWindow
	}).(pulumi.StringPtrOutput)
}

// Preferred day of the week for maintenance window.
func (o ServerGroupClusterMaintenanceWindowPtrOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterMaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.DayOfWeek
	}).(pulumi.IntPtrOutput)
}

// Start hour within preferred day of the week for maintenance window.
func (o ServerGroupClusterMaintenanceWindowPtrOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterMaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.StartHour
	}).(pulumi.IntPtrOutput)
}

// Start minute within the start hour for maintenance window.
func (o ServerGroupClusterMaintenanceWindowPtrOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterMaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.StartMinute
	}).(pulumi.IntPtrOutput)
}

// Schedule settings for regular cluster updates.
type ServerGroupClusterMaintenanceWindowResponse struct {
	// Indicates whether custom maintenance window is enabled or not.
	CustomWindow *string `pulumi:"customWindow"`
	// Preferred day of the week for maintenance window.
	DayOfWeek *int `pulumi:"dayOfWeek"`
	// Start hour within preferred day of the week for maintenance window.
	StartHour *int `pulumi:"startHour"`
	// Start minute within the start hour for maintenance window.
	StartMinute *int `pulumi:"startMinute"`
}

// Schedule settings for regular cluster updates.
type ServerGroupClusterMaintenanceWindowResponseOutput struct{ *pulumi.OutputState }

func (ServerGroupClusterMaintenanceWindowResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupClusterMaintenanceWindowResponse)(nil)).Elem()
}

func (o ServerGroupClusterMaintenanceWindowResponseOutput) ToServerGroupClusterMaintenanceWindowResponseOutput() ServerGroupClusterMaintenanceWindowResponseOutput {
	return o
}

func (o ServerGroupClusterMaintenanceWindowResponseOutput) ToServerGroupClusterMaintenanceWindowResponseOutputWithContext(ctx context.Context) ServerGroupClusterMaintenanceWindowResponseOutput {
	return o
}

// Indicates whether custom maintenance window is enabled or not.
func (o ServerGroupClusterMaintenanceWindowResponseOutput) CustomWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterMaintenanceWindowResponse) *string { return v.CustomWindow }).(pulumi.StringPtrOutput)
}

// Preferred day of the week for maintenance window.
func (o ServerGroupClusterMaintenanceWindowResponseOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterMaintenanceWindowResponse) *int { return v.DayOfWeek }).(pulumi.IntPtrOutput)
}

// Start hour within preferred day of the week for maintenance window.
func (o ServerGroupClusterMaintenanceWindowResponseOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterMaintenanceWindowResponse) *int { return v.StartHour }).(pulumi.IntPtrOutput)
}

// Start minute within the start hour for maintenance window.
func (o ServerGroupClusterMaintenanceWindowResponseOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupClusterMaintenanceWindowResponse) *int { return v.StartMinute }).(pulumi.IntPtrOutput)
}

type ServerGroupClusterMaintenanceWindowResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerGroupClusterMaintenanceWindowResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupClusterMaintenanceWindowResponse)(nil)).Elem()
}

func (o ServerGroupClusterMaintenanceWindowResponsePtrOutput) ToServerGroupClusterMaintenanceWindowResponsePtrOutput() ServerGroupClusterMaintenanceWindowResponsePtrOutput {
	return o
}

func (o ServerGroupClusterMaintenanceWindowResponsePtrOutput) ToServerGroupClusterMaintenanceWindowResponsePtrOutputWithContext(ctx context.Context) ServerGroupClusterMaintenanceWindowResponsePtrOutput {
	return o
}

func (o ServerGroupClusterMaintenanceWindowResponsePtrOutput) Elem() ServerGroupClusterMaintenanceWindowResponseOutput {
	return o.ApplyT(func(v *ServerGroupClusterMaintenanceWindowResponse) ServerGroupClusterMaintenanceWindowResponse {
		if v != nil {
			return *v
		}
		var ret ServerGroupClusterMaintenanceWindowResponse
		return ret
	}).(ServerGroupClusterMaintenanceWindowResponseOutput)
}

// Indicates whether custom maintenance window is enabled or not.
func (o ServerGroupClusterMaintenanceWindowResponsePtrOutput) CustomWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterMaintenanceWindowResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomWindow
	}).(pulumi.StringPtrOutput)
}

// Preferred day of the week for maintenance window.
func (o ServerGroupClusterMaintenanceWindowResponsePtrOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterMaintenanceWindowResponse) *int {
		if v == nil {
			return nil
		}
		return v.DayOfWeek
	}).(pulumi.IntPtrOutput)
}

// Start hour within preferred day of the week for maintenance window.
func (o ServerGroupClusterMaintenanceWindowResponsePtrOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterMaintenanceWindowResponse) *int {
		if v == nil {
			return nil
		}
		return v.StartHour
	}).(pulumi.IntPtrOutput)
}

// Start minute within the start hour for maintenance window.
func (o ServerGroupClusterMaintenanceWindowResponsePtrOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupClusterMaintenanceWindowResponse) *int {
		if v == nil {
			return nil
		}
		return v.StartMinute
	}).(pulumi.IntPtrOutput)
}

// The name object for a server.
type ServerNameItemResponse struct {
	// The fully qualified domain name of a server.
	FullyQualifiedDomainName string `pulumi:"fullyQualifiedDomainName"`
	// The name of a server.
	Name *string `pulumi:"name"`
}

// The name object for a server.
type ServerNameItemResponseOutput struct{ *pulumi.OutputState }

func (ServerNameItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNameItemResponse)(nil)).Elem()
}

func (o ServerNameItemResponseOutput) ToServerNameItemResponseOutput() ServerNameItemResponseOutput {
	return o
}

func (o ServerNameItemResponseOutput) ToServerNameItemResponseOutputWithContext(ctx context.Context) ServerNameItemResponseOutput {
	return o
}

// The fully qualified domain name of a server.
func (o ServerNameItemResponseOutput) FullyQualifiedDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v ServerNameItemResponse) string { return v.FullyQualifiedDomainName }).(pulumi.StringOutput)
}

// The name of a server.
func (o ServerNameItemResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNameItemResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ServerNameItemResponseArrayOutput struct{ *pulumi.OutputState }

func (ServerNameItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNameItemResponse)(nil)).Elem()
}

func (o ServerNameItemResponseArrayOutput) ToServerNameItemResponseArrayOutput() ServerNameItemResponseArrayOutput {
	return o
}

func (o ServerNameItemResponseArrayOutput) ToServerNameItemResponseArrayOutputWithContext(ctx context.Context) ServerNameItemResponseArrayOutput {
	return o
}

func (o ServerNameItemResponseArrayOutput) Index(i pulumi.IntInput) ServerNameItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerNameItemResponse {
		return vs[0].([]ServerNameItemResponse)[vs[1].(int)]
	}).(ServerNameItemResponseOutput)
}

// Properties of a private endpoint connection.
type ServerPrivateEndpointConnectionPropertiesResponse struct {
	// Private endpoint which the connection belongs to.
	PrivateEndpoint *PrivateEndpointPropertyResponse `pulumi:"privateEndpoint"`
	// Connection state of the private endpoint connection.
	PrivateLinkServiceConnectionState *ServerPrivateLinkServiceConnectionStatePropertyResponse `pulumi:"privateLinkServiceConnectionState"`
	// State of the private endpoint connection.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Properties of a private endpoint connection.
type ServerPrivateEndpointConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ServerPrivateEndpointConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (o ServerPrivateEndpointConnectionPropertiesResponseOutput) ToServerPrivateEndpointConnectionPropertiesResponseOutput() ServerPrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

func (o ServerPrivateEndpointConnectionPropertiesResponseOutput) ToServerPrivateEndpointConnectionPropertiesResponseOutputWithContext(ctx context.Context) ServerPrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

// Private endpoint which the connection belongs to.
func (o ServerPrivateEndpointConnectionPropertiesResponseOutput) PrivateEndpoint() PrivateEndpointPropertyResponsePtrOutput {
	return o.ApplyT(func(v ServerPrivateEndpointConnectionPropertiesResponse) *PrivateEndpointPropertyResponse {
		return v.PrivateEndpoint
	}).(PrivateEndpointPropertyResponsePtrOutput)
}

// Connection state of the private endpoint connection.
func (o ServerPrivateEndpointConnectionPropertiesResponseOutput) PrivateLinkServiceConnectionState() ServerPrivateLinkServiceConnectionStatePropertyResponsePtrOutput {
	return o.ApplyT(func(v ServerPrivateEndpointConnectionPropertiesResponse) *ServerPrivateLinkServiceConnectionStatePropertyResponse {
		return v.PrivateLinkServiceConnectionState
	}).(ServerPrivateLinkServiceConnectionStatePropertyResponsePtrOutput)
}

// State of the private endpoint connection.
func (o ServerPrivateEndpointConnectionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPrivateEndpointConnectionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// A private endpoint connection under a server
type ServerPrivateEndpointConnectionResponse struct {
	// Resource ID of the Private Endpoint Connection.
	Id string `pulumi:"id"`
	// Private endpoint connection properties
	Properties ServerPrivateEndpointConnectionPropertiesResponse `pulumi:"properties"`
}

// A private endpoint connection under a server
type ServerPrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (ServerPrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o ServerPrivateEndpointConnectionResponseOutput) ToServerPrivateEndpointConnectionResponseOutput() ServerPrivateEndpointConnectionResponseOutput {
	return o
}

func (o ServerPrivateEndpointConnectionResponseOutput) ToServerPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) ServerPrivateEndpointConnectionResponseOutput {
	return o
}

// Resource ID of the Private Endpoint Connection.
func (o ServerPrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Private endpoint connection properties
func (o ServerPrivateEndpointConnectionResponseOutput) Properties() ServerPrivateEndpointConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v ServerPrivateEndpointConnectionResponse) ServerPrivateEndpointConnectionPropertiesResponse {
		return v.Properties
	}).(ServerPrivateEndpointConnectionPropertiesResponseOutput)
}

type ServerPrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (ServerPrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerPrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o ServerPrivateEndpointConnectionResponseArrayOutput) ToServerPrivateEndpointConnectionResponseArrayOutput() ServerPrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o ServerPrivateEndpointConnectionResponseArrayOutput) ToServerPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) ServerPrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o ServerPrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) ServerPrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerPrivateEndpointConnectionResponse {
		return vs[0].([]ServerPrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(ServerPrivateEndpointConnectionResponseOutput)
}

type ServerPrivateLinkServiceConnectionStatePropertyResponse struct {
	// The actions required for private link service connection.
	ActionsRequired string `pulumi:"actionsRequired"`
	// The private link service connection description.
	Description string `pulumi:"description"`
	// The private link service connection status.
	Status string `pulumi:"status"`
}

type ServerPrivateLinkServiceConnectionStatePropertyResponseOutput struct{ *pulumi.OutputState }

func (ServerPrivateLinkServiceConnectionStatePropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPrivateLinkServiceConnectionStatePropertyResponse)(nil)).Elem()
}

func (o ServerPrivateLinkServiceConnectionStatePropertyResponseOutput) ToServerPrivateLinkServiceConnectionStatePropertyResponseOutput() ServerPrivateLinkServiceConnectionStatePropertyResponseOutput {
	return o
}

func (o ServerPrivateLinkServiceConnectionStatePropertyResponseOutput) ToServerPrivateLinkServiceConnectionStatePropertyResponseOutputWithContext(ctx context.Context) ServerPrivateLinkServiceConnectionStatePropertyResponseOutput {
	return o
}

// The actions required for private link service connection.
func (o ServerPrivateLinkServiceConnectionStatePropertyResponseOutput) ActionsRequired() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPrivateLinkServiceConnectionStatePropertyResponse) string { return v.ActionsRequired }).(pulumi.StringOutput)
}

// The private link service connection description.
func (o ServerPrivateLinkServiceConnectionStatePropertyResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPrivateLinkServiceConnectionStatePropertyResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The private link service connection status.
func (o ServerPrivateLinkServiceConnectionStatePropertyResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPrivateLinkServiceConnectionStatePropertyResponse) string { return v.Status }).(pulumi.StringOutput)
}

type ServerPrivateLinkServiceConnectionStatePropertyResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerPrivateLinkServiceConnectionStatePropertyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerPrivateLinkServiceConnectionStatePropertyResponse)(nil)).Elem()
}

func (o ServerPrivateLinkServiceConnectionStatePropertyResponsePtrOutput) ToServerPrivateLinkServiceConnectionStatePropertyResponsePtrOutput() ServerPrivateLinkServiceConnectionStatePropertyResponsePtrOutput {
	return o
}

func (o ServerPrivateLinkServiceConnectionStatePropertyResponsePtrOutput) ToServerPrivateLinkServiceConnectionStatePropertyResponsePtrOutputWithContext(ctx context.Context) ServerPrivateLinkServiceConnectionStatePropertyResponsePtrOutput {
	return o
}

func (o ServerPrivateLinkServiceConnectionStatePropertyResponsePtrOutput) Elem() ServerPrivateLinkServiceConnectionStatePropertyResponseOutput {
	return o.ApplyT(func(v *ServerPrivateLinkServiceConnectionStatePropertyResponse) ServerPrivateLinkServiceConnectionStatePropertyResponse {
		if v != nil {
			return *v
		}
		var ret ServerPrivateLinkServiceConnectionStatePropertyResponse
		return ret
	}).(ServerPrivateLinkServiceConnectionStatePropertyResponseOutput)
}

// The actions required for private link service connection.
func (o ServerPrivateLinkServiceConnectionStatePropertyResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerPrivateLinkServiceConnectionStatePropertyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The private link service connection description.
func (o ServerPrivateLinkServiceConnectionStatePropertyResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerPrivateLinkServiceConnectionStatePropertyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o ServerPrivateLinkServiceConnectionStatePropertyResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerPrivateLinkServiceConnectionStatePropertyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The properties used to create a new server.
type ServerPropertiesForDefaultCreate struct {
	// The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
	AdministratorLogin string `pulumi:"administratorLogin"`
	// The password of the administrator login.
	AdministratorLoginPassword string `pulumi:"administratorLoginPassword"`
	// The mode to create a new server.
	// Expected value is 'Default'.
	CreateMode string `pulumi:"createMode"`
	// Status showing whether the server enabled infrastructure encryption.
	InfrastructureEncryption *string `pulumi:"infrastructureEncryption"`
	// Enforce a minimal Tls version for the server.
	MinimalTlsVersion *string `pulumi:"minimalTlsVersion"`
	// Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// Enable ssl enforcement or not when connect to server.
	SslEnforcement *SslEnforcementEnum `pulumi:"sslEnforcement"`
	// Storage profile of a server.
	StorageProfile *StorageProfile `pulumi:"storageProfile"`
	// Server version.
	Version *string `pulumi:"version"`
}

// ServerPropertiesForDefaultCreateInput is an input type that accepts ServerPropertiesForDefaultCreateArgs and ServerPropertiesForDefaultCreateOutput values.
// You can construct a concrete instance of `ServerPropertiesForDefaultCreateInput` via:
//
//	ServerPropertiesForDefaultCreateArgs{...}
type ServerPropertiesForDefaultCreateInput interface {
	pulumi.Input

	ToServerPropertiesForDefaultCreateOutput() ServerPropertiesForDefaultCreateOutput
	ToServerPropertiesForDefaultCreateOutputWithContext(context.Context) ServerPropertiesForDefaultCreateOutput
}

// The properties used to create a new server.
type ServerPropertiesForDefaultCreateArgs struct {
	// The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
	AdministratorLogin pulumi.StringInput `pulumi:"administratorLogin"`
	// The password of the administrator login.
	AdministratorLoginPassword pulumi.StringInput `pulumi:"administratorLoginPassword"`
	// The mode to create a new server.
	// Expected value is 'Default'.
	CreateMode pulumi.StringInput `pulumi:"createMode"`
	// Status showing whether the server enabled infrastructure encryption.
	InfrastructureEncryption pulumi.StringPtrInput `pulumi:"infrastructureEncryption"`
	// Enforce a minimal Tls version for the server.
	MinimalTlsVersion pulumi.StringPtrInput `pulumi:"minimalTlsVersion"`
	// Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
	// Enable ssl enforcement or not when connect to server.
	SslEnforcement SslEnforcementEnumPtrInput `pulumi:"sslEnforcement"`
	// Storage profile of a server.
	StorageProfile StorageProfilePtrInput `pulumi:"storageProfile"`
	// Server version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ServerPropertiesForDefaultCreateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPropertiesForDefaultCreate)(nil)).Elem()
}

func (i ServerPropertiesForDefaultCreateArgs) ToServerPropertiesForDefaultCreateOutput() ServerPropertiesForDefaultCreateOutput {
	return i.ToServerPropertiesForDefaultCreateOutputWithContext(context.Background())
}

func (i ServerPropertiesForDefaultCreateArgs) ToServerPropertiesForDefaultCreateOutputWithContext(ctx context.Context) ServerPropertiesForDefaultCreateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerPropertiesForDefaultCreateOutput)
}

// The properties used to create a new server.
type ServerPropertiesForDefaultCreateOutput struct{ *pulumi.OutputState }

func (ServerPropertiesForDefaultCreateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPropertiesForDefaultCreate)(nil)).Elem()
}

func (o ServerPropertiesForDefaultCreateOutput) ToServerPropertiesForDefaultCreateOutput() ServerPropertiesForDefaultCreateOutput {
	return o
}

func (o ServerPropertiesForDefaultCreateOutput) ToServerPropertiesForDefaultCreateOutputWithContext(ctx context.Context) ServerPropertiesForDefaultCreateOutput {
	return o
}

// The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
func (o ServerPropertiesForDefaultCreateOutput) AdministratorLogin() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPropertiesForDefaultCreate) string { return v.AdministratorLogin }).(pulumi.StringOutput)
}

// The password of the administrator login.
func (o ServerPropertiesForDefaultCreateOutput) AdministratorLoginPassword() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPropertiesForDefaultCreate) string { return v.AdministratorLoginPassword }).(pulumi.StringOutput)
}

// The mode to create a new server.
// Expected value is 'Default'.
func (o ServerPropertiesForDefaultCreateOutput) CreateMode() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPropertiesForDefaultCreate) string { return v.CreateMode }).(pulumi.StringOutput)
}

// Status showing whether the server enabled infrastructure encryption.
func (o ServerPropertiesForDefaultCreateOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForDefaultCreate) *string { return v.InfrastructureEncryption }).(pulumi.StringPtrOutput)
}

// Enforce a minimal Tls version for the server.
func (o ServerPropertiesForDefaultCreateOutput) MinimalTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForDefaultCreate) *string { return v.MinimalTlsVersion }).(pulumi.StringPtrOutput)
}

// Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
func (o ServerPropertiesForDefaultCreateOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForDefaultCreate) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// Enable ssl enforcement or not when connect to server.
func (o ServerPropertiesForDefaultCreateOutput) SslEnforcement() SslEnforcementEnumPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForDefaultCreate) *SslEnforcementEnum { return v.SslEnforcement }).(SslEnforcementEnumPtrOutput)
}

// Storage profile of a server.
func (o ServerPropertiesForDefaultCreateOutput) StorageProfile() StorageProfilePtrOutput {
	return o.ApplyT(func(v ServerPropertiesForDefaultCreate) *StorageProfile { return v.StorageProfile }).(StorageProfilePtrOutput)
}

// Server version.
func (o ServerPropertiesForDefaultCreateOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForDefaultCreate) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// The properties used to create a new server by restoring to a different region from a geo replicated backup.
type ServerPropertiesForGeoRestore struct {
	// The mode to create a new server.
	// Expected value is 'GeoRestore'.
	CreateMode string `pulumi:"createMode"`
	// Status showing whether the server enabled infrastructure encryption.
	InfrastructureEncryption *string `pulumi:"infrastructureEncryption"`
	// Enforce a minimal Tls version for the server.
	MinimalTlsVersion *string `pulumi:"minimalTlsVersion"`
	// Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The source server id to restore from.
	SourceServerId string `pulumi:"sourceServerId"`
	// Enable ssl enforcement or not when connect to server.
	SslEnforcement *SslEnforcementEnum `pulumi:"sslEnforcement"`
	// Storage profile of a server.
	StorageProfile *StorageProfile `pulumi:"storageProfile"`
	// Server version.
	Version *string `pulumi:"version"`
}

// ServerPropertiesForGeoRestoreInput is an input type that accepts ServerPropertiesForGeoRestoreArgs and ServerPropertiesForGeoRestoreOutput values.
// You can construct a concrete instance of `ServerPropertiesForGeoRestoreInput` via:
//
//	ServerPropertiesForGeoRestoreArgs{...}
type ServerPropertiesForGeoRestoreInput interface {
	pulumi.Input

	ToServerPropertiesForGeoRestoreOutput() ServerPropertiesForGeoRestoreOutput
	ToServerPropertiesForGeoRestoreOutputWithContext(context.Context) ServerPropertiesForGeoRestoreOutput
}

// The properties used to create a new server by restoring to a different region from a geo replicated backup.
type ServerPropertiesForGeoRestoreArgs struct {
	// The mode to create a new server.
	// Expected value is 'GeoRestore'.
	CreateMode pulumi.StringInput `pulumi:"createMode"`
	// Status showing whether the server enabled infrastructure encryption.
	InfrastructureEncryption pulumi.StringPtrInput `pulumi:"infrastructureEncryption"`
	// Enforce a minimal Tls version for the server.
	MinimalTlsVersion pulumi.StringPtrInput `pulumi:"minimalTlsVersion"`
	// Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
	// The source server id to restore from.
	SourceServerId pulumi.StringInput `pulumi:"sourceServerId"`
	// Enable ssl enforcement or not when connect to server.
	SslEnforcement SslEnforcementEnumPtrInput `pulumi:"sslEnforcement"`
	// Storage profile of a server.
	StorageProfile StorageProfilePtrInput `pulumi:"storageProfile"`
	// Server version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ServerPropertiesForGeoRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPropertiesForGeoRestore)(nil)).Elem()
}

func (i ServerPropertiesForGeoRestoreArgs) ToServerPropertiesForGeoRestoreOutput() ServerPropertiesForGeoRestoreOutput {
	return i.ToServerPropertiesForGeoRestoreOutputWithContext(context.Background())
}

func (i ServerPropertiesForGeoRestoreArgs) ToServerPropertiesForGeoRestoreOutputWithContext(ctx context.Context) ServerPropertiesForGeoRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerPropertiesForGeoRestoreOutput)
}

// The properties used to create a new server by restoring to a different region from a geo replicated backup.
type ServerPropertiesForGeoRestoreOutput struct{ *pulumi.OutputState }

func (ServerPropertiesForGeoRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPropertiesForGeoRestore)(nil)).Elem()
}

func (o ServerPropertiesForGeoRestoreOutput) ToServerPropertiesForGeoRestoreOutput() ServerPropertiesForGeoRestoreOutput {
	return o
}

func (o ServerPropertiesForGeoRestoreOutput) ToServerPropertiesForGeoRestoreOutputWithContext(ctx context.Context) ServerPropertiesForGeoRestoreOutput {
	return o
}

// The mode to create a new server.
// Expected value is 'GeoRestore'.
func (o ServerPropertiesForGeoRestoreOutput) CreateMode() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPropertiesForGeoRestore) string { return v.CreateMode }).(pulumi.StringOutput)
}

// Status showing whether the server enabled infrastructure encryption.
func (o ServerPropertiesForGeoRestoreOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForGeoRestore) *string { return v.InfrastructureEncryption }).(pulumi.StringPtrOutput)
}

// Enforce a minimal Tls version for the server.
func (o ServerPropertiesForGeoRestoreOutput) MinimalTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForGeoRestore) *string { return v.MinimalTlsVersion }).(pulumi.StringPtrOutput)
}

// Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
func (o ServerPropertiesForGeoRestoreOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForGeoRestore) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// The source server id to restore from.
func (o ServerPropertiesForGeoRestoreOutput) SourceServerId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPropertiesForGeoRestore) string { return v.SourceServerId }).(pulumi.StringOutput)
}

// Enable ssl enforcement or not when connect to server.
func (o ServerPropertiesForGeoRestoreOutput) SslEnforcement() SslEnforcementEnumPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForGeoRestore) *SslEnforcementEnum { return v.SslEnforcement }).(SslEnforcementEnumPtrOutput)
}

// Storage profile of a server.
func (o ServerPropertiesForGeoRestoreOutput) StorageProfile() StorageProfilePtrOutput {
	return o.ApplyT(func(v ServerPropertiesForGeoRestore) *StorageProfile { return v.StorageProfile }).(StorageProfilePtrOutput)
}

// Server version.
func (o ServerPropertiesForGeoRestoreOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForGeoRestore) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// The properties to create a new replica.
type ServerPropertiesForReplica struct {
	// The mode to create a new server.
	// Expected value is 'Replica'.
	CreateMode string `pulumi:"createMode"`
	// Status showing whether the server enabled infrastructure encryption.
	InfrastructureEncryption *string `pulumi:"infrastructureEncryption"`
	// Enforce a minimal Tls version for the server.
	MinimalTlsVersion *string `pulumi:"minimalTlsVersion"`
	// Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The master server id to create replica from.
	SourceServerId string `pulumi:"sourceServerId"`
	// Enable ssl enforcement or not when connect to server.
	SslEnforcement *SslEnforcementEnum `pulumi:"sslEnforcement"`
	// Storage profile of a server.
	StorageProfile *StorageProfile `pulumi:"storageProfile"`
	// Server version.
	Version *string `pulumi:"version"`
}

// ServerPropertiesForReplicaInput is an input type that accepts ServerPropertiesForReplicaArgs and ServerPropertiesForReplicaOutput values.
// You can construct a concrete instance of `ServerPropertiesForReplicaInput` via:
//
//	ServerPropertiesForReplicaArgs{...}
type ServerPropertiesForReplicaInput interface {
	pulumi.Input

	ToServerPropertiesForReplicaOutput() ServerPropertiesForReplicaOutput
	ToServerPropertiesForReplicaOutputWithContext(context.Context) ServerPropertiesForReplicaOutput
}

// The properties to create a new replica.
type ServerPropertiesForReplicaArgs struct {
	// The mode to create a new server.
	// Expected value is 'Replica'.
	CreateMode pulumi.StringInput `pulumi:"createMode"`
	// Status showing whether the server enabled infrastructure encryption.
	InfrastructureEncryption pulumi.StringPtrInput `pulumi:"infrastructureEncryption"`
	// Enforce a minimal Tls version for the server.
	MinimalTlsVersion pulumi.StringPtrInput `pulumi:"minimalTlsVersion"`
	// Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
	// The master server id to create replica from.
	SourceServerId pulumi.StringInput `pulumi:"sourceServerId"`
	// Enable ssl enforcement or not when connect to server.
	SslEnforcement SslEnforcementEnumPtrInput `pulumi:"sslEnforcement"`
	// Storage profile of a server.
	StorageProfile StorageProfilePtrInput `pulumi:"storageProfile"`
	// Server version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ServerPropertiesForReplicaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPropertiesForReplica)(nil)).Elem()
}

func (i ServerPropertiesForReplicaArgs) ToServerPropertiesForReplicaOutput() ServerPropertiesForReplicaOutput {
	return i.ToServerPropertiesForReplicaOutputWithContext(context.Background())
}

func (i ServerPropertiesForReplicaArgs) ToServerPropertiesForReplicaOutputWithContext(ctx context.Context) ServerPropertiesForReplicaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerPropertiesForReplicaOutput)
}

// The properties to create a new replica.
type ServerPropertiesForReplicaOutput struct{ *pulumi.OutputState }

func (ServerPropertiesForReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPropertiesForReplica)(nil)).Elem()
}

func (o ServerPropertiesForReplicaOutput) ToServerPropertiesForReplicaOutput() ServerPropertiesForReplicaOutput {
	return o
}

func (o ServerPropertiesForReplicaOutput) ToServerPropertiesForReplicaOutputWithContext(ctx context.Context) ServerPropertiesForReplicaOutput {
	return o
}

// The mode to create a new server.
// Expected value is 'Replica'.
func (o ServerPropertiesForReplicaOutput) CreateMode() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPropertiesForReplica) string { return v.CreateMode }).(pulumi.StringOutput)
}

// Status showing whether the server enabled infrastructure encryption.
func (o ServerPropertiesForReplicaOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForReplica) *string { return v.InfrastructureEncryption }).(pulumi.StringPtrOutput)
}

// Enforce a minimal Tls version for the server.
func (o ServerPropertiesForReplicaOutput) MinimalTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForReplica) *string { return v.MinimalTlsVersion }).(pulumi.StringPtrOutput)
}

// Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
func (o ServerPropertiesForReplicaOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForReplica) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// The master server id to create replica from.
func (o ServerPropertiesForReplicaOutput) SourceServerId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPropertiesForReplica) string { return v.SourceServerId }).(pulumi.StringOutput)
}

// Enable ssl enforcement or not when connect to server.
func (o ServerPropertiesForReplicaOutput) SslEnforcement() SslEnforcementEnumPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForReplica) *SslEnforcementEnum { return v.SslEnforcement }).(SslEnforcementEnumPtrOutput)
}

// Storage profile of a server.
func (o ServerPropertiesForReplicaOutput) StorageProfile() StorageProfilePtrOutput {
	return o.ApplyT(func(v ServerPropertiesForReplica) *StorageProfile { return v.StorageProfile }).(StorageProfilePtrOutput)
}

// Server version.
func (o ServerPropertiesForReplicaOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForReplica) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// The properties used to create a new server by restoring from a backup.
type ServerPropertiesForRestore struct {
	// The mode to create a new server.
	// Expected value is 'PointInTimeRestore'.
	CreateMode string `pulumi:"createMode"`
	// Status showing whether the server enabled infrastructure encryption.
	InfrastructureEncryption *string `pulumi:"infrastructureEncryption"`
	// Enforce a minimal Tls version for the server.
	MinimalTlsVersion *string `pulumi:"minimalTlsVersion"`
	// Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// Restore point creation time (ISO8601 format), specifying the time to restore from.
	RestorePointInTime string `pulumi:"restorePointInTime"`
	// The source server id to restore from.
	SourceServerId string `pulumi:"sourceServerId"`
	// Enable ssl enforcement or not when connect to server.
	SslEnforcement *SslEnforcementEnum `pulumi:"sslEnforcement"`
	// Storage profile of a server.
	StorageProfile *StorageProfile `pulumi:"storageProfile"`
	// Server version.
	Version *string `pulumi:"version"`
}

// ServerPropertiesForRestoreInput is an input type that accepts ServerPropertiesForRestoreArgs and ServerPropertiesForRestoreOutput values.
// You can construct a concrete instance of `ServerPropertiesForRestoreInput` via:
//
//	ServerPropertiesForRestoreArgs{...}
type ServerPropertiesForRestoreInput interface {
	pulumi.Input

	ToServerPropertiesForRestoreOutput() ServerPropertiesForRestoreOutput
	ToServerPropertiesForRestoreOutputWithContext(context.Context) ServerPropertiesForRestoreOutput
}

// The properties used to create a new server by restoring from a backup.
type ServerPropertiesForRestoreArgs struct {
	// The mode to create a new server.
	// Expected value is 'PointInTimeRestore'.
	CreateMode pulumi.StringInput `pulumi:"createMode"`
	// Status showing whether the server enabled infrastructure encryption.
	InfrastructureEncryption pulumi.StringPtrInput `pulumi:"infrastructureEncryption"`
	// Enforce a minimal Tls version for the server.
	MinimalTlsVersion pulumi.StringPtrInput `pulumi:"minimalTlsVersion"`
	// Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
	// Restore point creation time (ISO8601 format), specifying the time to restore from.
	RestorePointInTime pulumi.StringInput `pulumi:"restorePointInTime"`
	// The source server id to restore from.
	SourceServerId pulumi.StringInput `pulumi:"sourceServerId"`
	// Enable ssl enforcement or not when connect to server.
	SslEnforcement SslEnforcementEnumPtrInput `pulumi:"sslEnforcement"`
	// Storage profile of a server.
	StorageProfile StorageProfilePtrInput `pulumi:"storageProfile"`
	// Server version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ServerPropertiesForRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPropertiesForRestore)(nil)).Elem()
}

func (i ServerPropertiesForRestoreArgs) ToServerPropertiesForRestoreOutput() ServerPropertiesForRestoreOutput {
	return i.ToServerPropertiesForRestoreOutputWithContext(context.Background())
}

func (i ServerPropertiesForRestoreArgs) ToServerPropertiesForRestoreOutputWithContext(ctx context.Context) ServerPropertiesForRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerPropertiesForRestoreOutput)
}

// The properties used to create a new server by restoring from a backup.
type ServerPropertiesForRestoreOutput struct{ *pulumi.OutputState }

func (ServerPropertiesForRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPropertiesForRestore)(nil)).Elem()
}

func (o ServerPropertiesForRestoreOutput) ToServerPropertiesForRestoreOutput() ServerPropertiesForRestoreOutput {
	return o
}

func (o ServerPropertiesForRestoreOutput) ToServerPropertiesForRestoreOutputWithContext(ctx context.Context) ServerPropertiesForRestoreOutput {
	return o
}

// The mode to create a new server.
// Expected value is 'PointInTimeRestore'.
func (o ServerPropertiesForRestoreOutput) CreateMode() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPropertiesForRestore) string { return v.CreateMode }).(pulumi.StringOutput)
}

// Status showing whether the server enabled infrastructure encryption.
func (o ServerPropertiesForRestoreOutput) InfrastructureEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForRestore) *string { return v.InfrastructureEncryption }).(pulumi.StringPtrOutput)
}

// Enforce a minimal Tls version for the server.
func (o ServerPropertiesForRestoreOutput) MinimalTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForRestore) *string { return v.MinimalTlsVersion }).(pulumi.StringPtrOutput)
}

// Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
func (o ServerPropertiesForRestoreOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForRestore) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// Restore point creation time (ISO8601 format), specifying the time to restore from.
func (o ServerPropertiesForRestoreOutput) RestorePointInTime() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPropertiesForRestore) string { return v.RestorePointInTime }).(pulumi.StringOutput)
}

// The source server id to restore from.
func (o ServerPropertiesForRestoreOutput) SourceServerId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPropertiesForRestore) string { return v.SourceServerId }).(pulumi.StringOutput)
}

// Enable ssl enforcement or not when connect to server.
func (o ServerPropertiesForRestoreOutput) SslEnforcement() SslEnforcementEnumPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForRestore) *SslEnforcementEnum { return v.SslEnforcement }).(SslEnforcementEnumPtrOutput)
}

// Storage profile of a server.
func (o ServerPropertiesForRestoreOutput) StorageProfile() StorageProfilePtrOutput {
	return o.ApplyT(func(v ServerPropertiesForRestore) *StorageProfile { return v.StorageProfile }).(StorageProfilePtrOutput)
}

// Server version.
func (o ServerPropertiesForRestoreOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerPropertiesForRestore) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// Sku information related properties of a server.
type ServerSkuResponse struct {
	// The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.
	Name *string `pulumi:"name"`
	// The tier of the particular SKU, e.g. Burstable.
	Tier *string `pulumi:"tier"`
}

// Sku information related properties of a server.
type ServerSkuResponseOutput struct{ *pulumi.OutputState }

func (ServerSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerSkuResponse)(nil)).Elem()
}

func (o ServerSkuResponseOutput) ToServerSkuResponseOutput() ServerSkuResponseOutput {
	return o
}

func (o ServerSkuResponseOutput) ToServerSkuResponseOutputWithContext(ctx context.Context) ServerSkuResponseOutput {
	return o
}

// The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.
func (o ServerSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The tier of the particular SKU, e.g. Burstable.
func (o ServerSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ServerSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerSkuResponse)(nil)).Elem()
}

func (o ServerSkuResponsePtrOutput) ToServerSkuResponsePtrOutput() ServerSkuResponsePtrOutput {
	return o
}

func (o ServerSkuResponsePtrOutput) ToServerSkuResponsePtrOutputWithContext(ctx context.Context) ServerSkuResponsePtrOutput {
	return o
}

func (o ServerSkuResponsePtrOutput) Elem() ServerSkuResponseOutput {
	return o.ApplyT(func(v *ServerSkuResponse) ServerSkuResponse {
		if v != nil {
			return *v
		}
		var ret ServerSkuResponse
		return ret
	}).(ServerSkuResponseOutput)
}

// The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.
func (o ServerSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the particular SKU, e.g. Burstable.
func (o ServerSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// A private endpoint connection.
type SimplePrivateEndpointConnectionResponse struct {
	// Group ids of the private endpoint connection.
	GroupIds []string `pulumi:"groupIds"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Private endpoint which the connection belongs to.
	PrivateEndpoint *PrivateEndpointPropertyResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// A private endpoint connection.
type SimplePrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (SimplePrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimplePrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o SimplePrivateEndpointConnectionResponseOutput) ToSimplePrivateEndpointConnectionResponseOutput() SimplePrivateEndpointConnectionResponseOutput {
	return o
}

func (o SimplePrivateEndpointConnectionResponseOutput) ToSimplePrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) SimplePrivateEndpointConnectionResponseOutput {
	return o
}

// Group ids of the private endpoint connection.
func (o SimplePrivateEndpointConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SimplePrivateEndpointConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o SimplePrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SimplePrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o SimplePrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SimplePrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Private endpoint which the connection belongs to.
func (o SimplePrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointPropertyResponsePtrOutput {
	return o.ApplyT(func(v SimplePrivateEndpointConnectionResponse) *PrivateEndpointPropertyResponse {
		return v.PrivateEndpoint
	}).(PrivateEndpointPropertyResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o SimplePrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v SimplePrivateEndpointConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o SimplePrivateEndpointConnectionResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v SimplePrivateEndpointConnectionResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o SimplePrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SimplePrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type SimplePrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (SimplePrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SimplePrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o SimplePrivateEndpointConnectionResponseArrayOutput) ToSimplePrivateEndpointConnectionResponseArrayOutput() SimplePrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o SimplePrivateEndpointConnectionResponseArrayOutput) ToSimplePrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) SimplePrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o SimplePrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) SimplePrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SimplePrivateEndpointConnectionResponse {
		return vs[0].([]SimplePrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(SimplePrivateEndpointConnectionResponseOutput)
}

// Billing information related properties of a server.
type SingleServerSku struct {
	// The scale up/out capacity, representing server's compute units.
	Capacity *int `pulumi:"capacity"`
	// The family of hardware.
	Family *string `pulumi:"family"`
	// The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
	Name string `pulumi:"name"`
	// The size code, to be interpreted by resource as appropriate.
	Size *string `pulumi:"size"`
	// The tier of the particular SKU, e.g. Basic.
	Tier *string `pulumi:"tier"`
}

// SingleServerSkuInput is an input type that accepts SingleServerSkuArgs and SingleServerSkuOutput values.
// You can construct a concrete instance of `SingleServerSkuInput` via:
//
//	SingleServerSkuArgs{...}
type SingleServerSkuInput interface {
	pulumi.Input

	ToSingleServerSkuOutput() SingleServerSkuOutput
	ToSingleServerSkuOutputWithContext(context.Context) SingleServerSkuOutput
}

// Billing information related properties of a server.
type SingleServerSkuArgs struct {
	// The scale up/out capacity, representing server's compute units.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// The family of hardware.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
	Name pulumi.StringInput `pulumi:"name"`
	// The size code, to be interpreted by resource as appropriate.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The tier of the particular SKU, e.g. Basic.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SingleServerSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SingleServerSku)(nil)).Elem()
}

func (i SingleServerSkuArgs) ToSingleServerSkuOutput() SingleServerSkuOutput {
	return i.ToSingleServerSkuOutputWithContext(context.Background())
}

func (i SingleServerSkuArgs) ToSingleServerSkuOutputWithContext(ctx context.Context) SingleServerSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SingleServerSkuOutput)
}

func (i SingleServerSkuArgs) ToSingleServerSkuPtrOutput() SingleServerSkuPtrOutput {
	return i.ToSingleServerSkuPtrOutputWithContext(context.Background())
}

func (i SingleServerSkuArgs) ToSingleServerSkuPtrOutputWithContext(ctx context.Context) SingleServerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SingleServerSkuOutput).ToSingleServerSkuPtrOutputWithContext(ctx)
}

// SingleServerSkuPtrInput is an input type that accepts SingleServerSkuArgs, SingleServerSkuPtr and SingleServerSkuPtrOutput values.
// You can construct a concrete instance of `SingleServerSkuPtrInput` via:
//
//	        SingleServerSkuArgs{...}
//
//	or:
//
//	        nil
type SingleServerSkuPtrInput interface {
	pulumi.Input

	ToSingleServerSkuPtrOutput() SingleServerSkuPtrOutput
	ToSingleServerSkuPtrOutputWithContext(context.Context) SingleServerSkuPtrOutput
}

type singleServerSkuPtrType SingleServerSkuArgs

func SingleServerSkuPtr(v *SingleServerSkuArgs) SingleServerSkuPtrInput {
	return (*singleServerSkuPtrType)(v)
}

func (*singleServerSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SingleServerSku)(nil)).Elem()
}

func (i *singleServerSkuPtrType) ToSingleServerSkuPtrOutput() SingleServerSkuPtrOutput {
	return i.ToSingleServerSkuPtrOutputWithContext(context.Background())
}

func (i *singleServerSkuPtrType) ToSingleServerSkuPtrOutputWithContext(ctx context.Context) SingleServerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SingleServerSkuPtrOutput)
}

// Billing information related properties of a server.
type SingleServerSkuOutput struct{ *pulumi.OutputState }

func (SingleServerSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SingleServerSku)(nil)).Elem()
}

func (o SingleServerSkuOutput) ToSingleServerSkuOutput() SingleServerSkuOutput {
	return o
}

func (o SingleServerSkuOutput) ToSingleServerSkuOutputWithContext(ctx context.Context) SingleServerSkuOutput {
	return o
}

func (o SingleServerSkuOutput) ToSingleServerSkuPtrOutput() SingleServerSkuPtrOutput {
	return o.ToSingleServerSkuPtrOutputWithContext(context.Background())
}

func (o SingleServerSkuOutput) ToSingleServerSkuPtrOutputWithContext(ctx context.Context) SingleServerSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SingleServerSku) *SingleServerSku {
		return &v
	}).(SingleServerSkuPtrOutput)
}

// The scale up/out capacity, representing server's compute units.
func (o SingleServerSkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SingleServerSku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The family of hardware.
func (o SingleServerSkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SingleServerSku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
func (o SingleServerSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SingleServerSku) string { return v.Name }).(pulumi.StringOutput)
}

// The size code, to be interpreted by resource as appropriate.
func (o SingleServerSkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SingleServerSku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The tier of the particular SKU, e.g. Basic.
func (o SingleServerSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SingleServerSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SingleServerSkuPtrOutput struct{ *pulumi.OutputState }

func (SingleServerSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SingleServerSku)(nil)).Elem()
}

func (o SingleServerSkuPtrOutput) ToSingleServerSkuPtrOutput() SingleServerSkuPtrOutput {
	return o
}

func (o SingleServerSkuPtrOutput) ToSingleServerSkuPtrOutputWithContext(ctx context.Context) SingleServerSkuPtrOutput {
	return o
}

func (o SingleServerSkuPtrOutput) Elem() SingleServerSkuOutput {
	return o.ApplyT(func(v *SingleServerSku) SingleServerSku {
		if v != nil {
			return *v
		}
		var ret SingleServerSku
		return ret
	}).(SingleServerSkuOutput)
}

// The scale up/out capacity, representing server's compute units.
func (o SingleServerSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SingleServerSku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The family of hardware.
func (o SingleServerSkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SingleServerSku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
func (o SingleServerSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SingleServerSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The size code, to be interpreted by resource as appropriate.
func (o SingleServerSkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SingleServerSku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The tier of the particular SKU, e.g. Basic.
func (o SingleServerSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SingleServerSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Billing information related properties of a server.
type SingleServerSkuResponse struct {
	// The scale up/out capacity, representing server's compute units.
	Capacity *int `pulumi:"capacity"`
	// The family of hardware.
	Family *string `pulumi:"family"`
	// The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
	Name string `pulumi:"name"`
	// The size code, to be interpreted by resource as appropriate.
	Size *string `pulumi:"size"`
	// The tier of the particular SKU, e.g. Basic.
	Tier *string `pulumi:"tier"`
}

// Billing information related properties of a server.
type SingleServerSkuResponseOutput struct{ *pulumi.OutputState }

func (SingleServerSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SingleServerSkuResponse)(nil)).Elem()
}

func (o SingleServerSkuResponseOutput) ToSingleServerSkuResponseOutput() SingleServerSkuResponseOutput {
	return o
}

func (o SingleServerSkuResponseOutput) ToSingleServerSkuResponseOutputWithContext(ctx context.Context) SingleServerSkuResponseOutput {
	return o
}

// The scale up/out capacity, representing server's compute units.
func (o SingleServerSkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SingleServerSkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The family of hardware.
func (o SingleServerSkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SingleServerSkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
func (o SingleServerSkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SingleServerSkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The size code, to be interpreted by resource as appropriate.
func (o SingleServerSkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SingleServerSkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The tier of the particular SKU, e.g. Basic.
func (o SingleServerSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SingleServerSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SingleServerSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SingleServerSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SingleServerSkuResponse)(nil)).Elem()
}

func (o SingleServerSkuResponsePtrOutput) ToSingleServerSkuResponsePtrOutput() SingleServerSkuResponsePtrOutput {
	return o
}

func (o SingleServerSkuResponsePtrOutput) ToSingleServerSkuResponsePtrOutputWithContext(ctx context.Context) SingleServerSkuResponsePtrOutput {
	return o
}

func (o SingleServerSkuResponsePtrOutput) Elem() SingleServerSkuResponseOutput {
	return o.ApplyT(func(v *SingleServerSkuResponse) SingleServerSkuResponse {
		if v != nil {
			return *v
		}
		var ret SingleServerSkuResponse
		return ret
	}).(SingleServerSkuResponseOutput)
}

// The scale up/out capacity, representing server's compute units.
func (o SingleServerSkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SingleServerSkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The family of hardware.
func (o SingleServerSkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SingleServerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
func (o SingleServerSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SingleServerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The size code, to be interpreted by resource as appropriate.
func (o SingleServerSkuResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SingleServerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The tier of the particular SKU, e.g. Basic.
func (o SingleServerSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SingleServerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Sku information related properties of a server.
type Sku struct {
	// The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.
	Name string `pulumi:"name"`
	// The tier of the particular SKU, e.g. Burstable.
	Tier string `pulumi:"tier"`
}

// SkuInput is an input type that accepts SkuArgs and SkuOutput values.
// You can construct a concrete instance of `SkuInput` via:
//
//	SkuArgs{...}
type SkuInput interface {
	pulumi.Input

	ToSkuOutput() SkuOutput
	ToSkuOutputWithContext(context.Context) SkuOutput
}

// Sku information related properties of a server.
type SkuArgs struct {
	// The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.
	Name pulumi.StringInput `pulumi:"name"`
	// The tier of the particular SKU, e.g. Burstable.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (SkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (i SkuArgs) ToSkuOutput() SkuOutput {
	return i.ToSkuOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput)
}

func (i SkuArgs) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i SkuArgs) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuOutput).ToSkuPtrOutputWithContext(ctx)
}

// SkuPtrInput is an input type that accepts SkuArgs, SkuPtr and SkuPtrOutput values.
// You can construct a concrete instance of `SkuPtrInput` via:
//
//	        SkuArgs{...}
//
//	or:
//
//	        nil
type SkuPtrInput interface {
	pulumi.Input

	ToSkuPtrOutput() SkuPtrOutput
	ToSkuPtrOutputWithContext(context.Context) SkuPtrOutput
}

type skuPtrType SkuArgs

func SkuPtr(v *SkuArgs) SkuPtrInput {
	return (*skuPtrType)(v)
}

func (*skuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (i *skuPtrType) ToSkuPtrOutput() SkuPtrOutput {
	return i.ToSkuPtrOutputWithContext(context.Background())
}

func (i *skuPtrType) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuPtrOutput)
}

// Sku information related properties of a server.
type SkuOutput struct{ *pulumi.OutputState }

func (SkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Sku)(nil)).Elem()
}

func (o SkuOutput) ToSkuOutput() SkuOutput {
	return o
}

func (o SkuOutput) ToSkuOutputWithContext(ctx context.Context) SkuOutput {
	return o
}

func (o SkuOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o.ToSkuPtrOutputWithContext(context.Background())
}

func (o SkuOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Sku) *Sku {
		return &v
	}).(SkuPtrOutput)
}

// The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.
func (o SkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Name }).(pulumi.StringOutput)
}

// The tier of the particular SKU, e.g. Burstable.
func (o SkuOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v Sku) string { return v.Tier }).(pulumi.StringOutput)
}

type SkuPtrOutput struct{ *pulumi.OutputState }

func (SkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Sku)(nil)).Elem()
}

func (o SkuPtrOutput) ToSkuPtrOutput() SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) ToSkuPtrOutputWithContext(ctx context.Context) SkuPtrOutput {
	return o
}

func (o SkuPtrOutput) Elem() SkuOutput {
	return o.ApplyT(func(v *Sku) Sku {
		if v != nil {
			return *v
		}
		var ret Sku
		return ret
	}).(SkuOutput)
}

// The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.
func (o SkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the particular SKU, e.g. Burstable.
func (o SkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Sku) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// Sku information related properties of a server.
type SkuResponse struct {
	// The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.
	Name string `pulumi:"name"`
	// The tier of the particular SKU, e.g. Burstable.
	Tier string `pulumi:"tier"`
}

// Sku information related properties of a server.
type SkuResponseOutput struct{ *pulumi.OutputState }

func (SkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuResponse)(nil)).Elem()
}

func (o SkuResponseOutput) ToSkuResponseOutput() SkuResponseOutput {
	return o
}

func (o SkuResponseOutput) ToSkuResponseOutputWithContext(ctx context.Context) SkuResponseOutput {
	return o
}

// The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.
func (o SkuResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The tier of the particular SKU, e.g. Burstable.
func (o SkuResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v SkuResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type SkuResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuResponse)(nil)).Elem()
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutput() SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) ToSkuResponsePtrOutputWithContext(ctx context.Context) SkuResponsePtrOutput {
	return o
}

func (o SkuResponsePtrOutput) Elem() SkuResponseOutput {
	return o.ApplyT(func(v *SkuResponse) SkuResponse {
		if v != nil {
			return *v
		}
		var ret SkuResponse
		return ret
	}).(SkuResponseOutput)
}

// The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.
func (o SkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the particular SKU, e.g. Burstable.
func (o SkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// Storage properties of a server
type Storage struct {
	// Flag to enable / disable Storage Auto grow for flexible server.
	AutoGrow *string `pulumi:"autoGrow"`
	// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS
	Iops *int `pulumi:"iops"`
	// Max storage allowed for a server.
	StorageSizeGB *int `pulumi:"storageSizeGB"`
	// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS
	Throughput *int `pulumi:"throughput"`
	// Name of storage tier for IOPS.
	Tier *string `pulumi:"tier"`
	// Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified
	Type *string `pulumi:"type"`
}

// StorageInput is an input type that accepts StorageArgs and StorageOutput values.
// You can construct a concrete instance of `StorageInput` via:
//
//	StorageArgs{...}
type StorageInput interface {
	pulumi.Input

	ToStorageOutput() StorageOutput
	ToStorageOutputWithContext(context.Context) StorageOutput
}

// Storage properties of a server
type StorageArgs struct {
	// Flag to enable / disable Storage Auto grow for flexible server.
	AutoGrow pulumi.StringPtrInput `pulumi:"autoGrow"`
	// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Max storage allowed for a server.
	StorageSizeGB pulumi.IntPtrInput `pulumi:"storageSizeGB"`
	// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS
	Throughput pulumi.IntPtrInput `pulumi:"throughput"`
	// Name of storage tier for IOPS.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
	// Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (StorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Storage)(nil)).Elem()
}

func (i StorageArgs) ToStorageOutput() StorageOutput {
	return i.ToStorageOutputWithContext(context.Background())
}

func (i StorageArgs) ToStorageOutputWithContext(ctx context.Context) StorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageOutput)
}

func (i StorageArgs) ToStoragePtrOutput() StoragePtrOutput {
	return i.ToStoragePtrOutputWithContext(context.Background())
}

func (i StorageArgs) ToStoragePtrOutputWithContext(ctx context.Context) StoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageOutput).ToStoragePtrOutputWithContext(ctx)
}

// StoragePtrInput is an input type that accepts StorageArgs, StoragePtr and StoragePtrOutput values.
// You can construct a concrete instance of `StoragePtrInput` via:
//
//	        StorageArgs{...}
//
//	or:
//
//	        nil
type StoragePtrInput interface {
	pulumi.Input

	ToStoragePtrOutput() StoragePtrOutput
	ToStoragePtrOutputWithContext(context.Context) StoragePtrOutput
}

type storagePtrType StorageArgs

func StoragePtr(v *StorageArgs) StoragePtrInput {
	return (*storagePtrType)(v)
}

func (*storagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Storage)(nil)).Elem()
}

func (i *storagePtrType) ToStoragePtrOutput() StoragePtrOutput {
	return i.ToStoragePtrOutputWithContext(context.Background())
}

func (i *storagePtrType) ToStoragePtrOutputWithContext(ctx context.Context) StoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoragePtrOutput)
}

// Storage properties of a server
type StorageOutput struct{ *pulumi.OutputState }

func (StorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Storage)(nil)).Elem()
}

func (o StorageOutput) ToStorageOutput() StorageOutput {
	return o
}

func (o StorageOutput) ToStorageOutputWithContext(ctx context.Context) StorageOutput {
	return o
}

func (o StorageOutput) ToStoragePtrOutput() StoragePtrOutput {
	return o.ToStoragePtrOutputWithContext(context.Background())
}

func (o StorageOutput) ToStoragePtrOutputWithContext(ctx context.Context) StoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Storage) *Storage {
		return &v
	}).(StoragePtrOutput)
}

// Flag to enable / disable Storage Auto grow for flexible server.
func (o StorageOutput) AutoGrow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Storage) *string { return v.AutoGrow }).(pulumi.StringPtrOutput)
}

// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS
func (o StorageOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Storage) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Max storage allowed for a server.
func (o StorageOutput) StorageSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Storage) *int { return v.StorageSizeGB }).(pulumi.IntPtrOutput)
}

// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS
func (o StorageOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Storage) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

// Name of storage tier for IOPS.
func (o StorageOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Storage) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

// Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified
func (o StorageOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Storage) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StoragePtrOutput struct{ *pulumi.OutputState }

func (StoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Storage)(nil)).Elem()
}

func (o StoragePtrOutput) ToStoragePtrOutput() StoragePtrOutput {
	return o
}

func (o StoragePtrOutput) ToStoragePtrOutputWithContext(ctx context.Context) StoragePtrOutput {
	return o
}

func (o StoragePtrOutput) Elem() StorageOutput {
	return o.ApplyT(func(v *Storage) Storage {
		if v != nil {
			return *v
		}
		var ret Storage
		return ret
	}).(StorageOutput)
}

// Flag to enable / disable Storage Auto grow for flexible server.
func (o StoragePtrOutput) AutoGrow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Storage) *string {
		if v == nil {
			return nil
		}
		return v.AutoGrow
	}).(pulumi.StringPtrOutput)
}

// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS
func (o StoragePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Storage) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// Max storage allowed for a server.
func (o StoragePtrOutput) StorageSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Storage) *int {
		if v == nil {
			return nil
		}
		return v.StorageSizeGB
	}).(pulumi.IntPtrOutput)
}

// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS
func (o StoragePtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Storage) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

// Name of storage tier for IOPS.
func (o StoragePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Storage) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified
func (o StoragePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Storage) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Storage Profile properties of a server
type StorageProfile struct {
	// Backup retention days for the server.
	BackupRetentionDays *int `pulumi:"backupRetentionDays"`
	// Enable Geo-redundant or not for server backup.
	GeoRedundantBackup *string `pulumi:"geoRedundantBackup"`
	// Enable Storage Auto Grow.
	StorageAutogrow *string `pulumi:"storageAutogrow"`
	// Max storage allowed for a server.
	StorageMB *int `pulumi:"storageMB"`
}

// StorageProfileInput is an input type that accepts StorageProfileArgs and StorageProfileOutput values.
// You can construct a concrete instance of `StorageProfileInput` via:
//
//	StorageProfileArgs{...}
type StorageProfileInput interface {
	pulumi.Input

	ToStorageProfileOutput() StorageProfileOutput
	ToStorageProfileOutputWithContext(context.Context) StorageProfileOutput
}

// Storage Profile properties of a server
type StorageProfileArgs struct {
	// Backup retention days for the server.
	BackupRetentionDays pulumi.IntPtrInput `pulumi:"backupRetentionDays"`
	// Enable Geo-redundant or not for server backup.
	GeoRedundantBackup pulumi.StringPtrInput `pulumi:"geoRedundantBackup"`
	// Enable Storage Auto Grow.
	StorageAutogrow pulumi.StringPtrInput `pulumi:"storageAutogrow"`
	// Max storage allowed for a server.
	StorageMB pulumi.IntPtrInput `pulumi:"storageMB"`
}

func (StorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfile)(nil)).Elem()
}

func (i StorageProfileArgs) ToStorageProfileOutput() StorageProfileOutput {
	return i.ToStorageProfileOutputWithContext(context.Background())
}

func (i StorageProfileArgs) ToStorageProfileOutputWithContext(ctx context.Context) StorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileOutput)
}

func (i StorageProfileArgs) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return i.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (i StorageProfileArgs) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileOutput).ToStorageProfilePtrOutputWithContext(ctx)
}

// StorageProfilePtrInput is an input type that accepts StorageProfileArgs, StorageProfilePtr and StorageProfilePtrOutput values.
// You can construct a concrete instance of `StorageProfilePtrInput` via:
//
//	        StorageProfileArgs{...}
//
//	or:
//
//	        nil
type StorageProfilePtrInput interface {
	pulumi.Input

	ToStorageProfilePtrOutput() StorageProfilePtrOutput
	ToStorageProfilePtrOutputWithContext(context.Context) StorageProfilePtrOutput
}

type storageProfilePtrType StorageProfileArgs

func StorageProfilePtr(v *StorageProfileArgs) StorageProfilePtrInput {
	return (*storageProfilePtrType)(v)
}

func (*storageProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfile)(nil)).Elem()
}

func (i *storageProfilePtrType) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return i.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (i *storageProfilePtrType) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfilePtrOutput)
}

// Storage Profile properties of a server
type StorageProfileOutput struct{ *pulumi.OutputState }

func (StorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfile)(nil)).Elem()
}

func (o StorageProfileOutput) ToStorageProfileOutput() StorageProfileOutput {
	return o
}

func (o StorageProfileOutput) ToStorageProfileOutputWithContext(ctx context.Context) StorageProfileOutput {
	return o
}

func (o StorageProfileOutput) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return o.ToStorageProfilePtrOutputWithContext(context.Background())
}

func (o StorageProfileOutput) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageProfile) *StorageProfile {
		return &v
	}).(StorageProfilePtrOutput)
}

// Backup retention days for the server.
func (o StorageProfileOutput) BackupRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageProfile) *int { return v.BackupRetentionDays }).(pulumi.IntPtrOutput)
}

// Enable Geo-redundant or not for server backup.
func (o StorageProfileOutput) GeoRedundantBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProfile) *string { return v.GeoRedundantBackup }).(pulumi.StringPtrOutput)
}

// Enable Storage Auto Grow.
func (o StorageProfileOutput) StorageAutogrow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProfile) *string { return v.StorageAutogrow }).(pulumi.StringPtrOutput)
}

// Max storage allowed for a server.
func (o StorageProfileOutput) StorageMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageProfile) *int { return v.StorageMB }).(pulumi.IntPtrOutput)
}

type StorageProfilePtrOutput struct{ *pulumi.OutputState }

func (StorageProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfile)(nil)).Elem()
}

func (o StorageProfilePtrOutput) ToStorageProfilePtrOutput() StorageProfilePtrOutput {
	return o
}

func (o StorageProfilePtrOutput) ToStorageProfilePtrOutputWithContext(ctx context.Context) StorageProfilePtrOutput {
	return o
}

func (o StorageProfilePtrOutput) Elem() StorageProfileOutput {
	return o.ApplyT(func(v *StorageProfile) StorageProfile {
		if v != nil {
			return *v
		}
		var ret StorageProfile
		return ret
	}).(StorageProfileOutput)
}

// Backup retention days for the server.
func (o StorageProfilePtrOutput) BackupRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageProfile) *int {
		if v == nil {
			return nil
		}
		return v.BackupRetentionDays
	}).(pulumi.IntPtrOutput)
}

// Enable Geo-redundant or not for server backup.
func (o StorageProfilePtrOutput) GeoRedundantBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProfile) *string {
		if v == nil {
			return nil
		}
		return v.GeoRedundantBackup
	}).(pulumi.StringPtrOutput)
}

// Enable Storage Auto Grow.
func (o StorageProfilePtrOutput) StorageAutogrow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProfile) *string {
		if v == nil {
			return nil
		}
		return v.StorageAutogrow
	}).(pulumi.StringPtrOutput)
}

// Max storage allowed for a server.
func (o StorageProfilePtrOutput) StorageMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageProfile) *int {
		if v == nil {
			return nil
		}
		return v.StorageMB
	}).(pulumi.IntPtrOutput)
}

// Storage Profile properties of a server
type StorageProfileResponse struct {
	// Backup retention days for the server.
	BackupRetentionDays *int `pulumi:"backupRetentionDays"`
	// Enable Geo-redundant or not for server backup.
	GeoRedundantBackup *string `pulumi:"geoRedundantBackup"`
	// Enable Storage Auto Grow.
	StorageAutogrow *string `pulumi:"storageAutogrow"`
	// Max storage allowed for a server.
	StorageMB *int `pulumi:"storageMB"`
}

// Storage Profile properties of a server
type StorageProfileResponseOutput struct{ *pulumi.OutputState }

func (StorageProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfileResponse)(nil)).Elem()
}

func (o StorageProfileResponseOutput) ToStorageProfileResponseOutput() StorageProfileResponseOutput {
	return o
}

func (o StorageProfileResponseOutput) ToStorageProfileResponseOutputWithContext(ctx context.Context) StorageProfileResponseOutput {
	return o
}

// Backup retention days for the server.
func (o StorageProfileResponseOutput) BackupRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageProfileResponse) *int { return v.BackupRetentionDays }).(pulumi.IntPtrOutput)
}

// Enable Geo-redundant or not for server backup.
func (o StorageProfileResponseOutput) GeoRedundantBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProfileResponse) *string { return v.GeoRedundantBackup }).(pulumi.StringPtrOutput)
}

// Enable Storage Auto Grow.
func (o StorageProfileResponseOutput) StorageAutogrow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageProfileResponse) *string { return v.StorageAutogrow }).(pulumi.StringPtrOutput)
}

// Max storage allowed for a server.
func (o StorageProfileResponseOutput) StorageMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageProfileResponse) *int { return v.StorageMB }).(pulumi.IntPtrOutput)
}

type StorageProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfileResponse)(nil)).Elem()
}

func (o StorageProfileResponsePtrOutput) ToStorageProfileResponsePtrOutput() StorageProfileResponsePtrOutput {
	return o
}

func (o StorageProfileResponsePtrOutput) ToStorageProfileResponsePtrOutputWithContext(ctx context.Context) StorageProfileResponsePtrOutput {
	return o
}

func (o StorageProfileResponsePtrOutput) Elem() StorageProfileResponseOutput {
	return o.ApplyT(func(v *StorageProfileResponse) StorageProfileResponse {
		if v != nil {
			return *v
		}
		var ret StorageProfileResponse
		return ret
	}).(StorageProfileResponseOutput)
}

// Backup retention days for the server.
func (o StorageProfileResponsePtrOutput) BackupRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.BackupRetentionDays
	}).(pulumi.IntPtrOutput)
}

// Enable Geo-redundant or not for server backup.
func (o StorageProfileResponsePtrOutput) GeoRedundantBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.GeoRedundantBackup
	}).(pulumi.StringPtrOutput)
}

// Enable Storage Auto Grow.
func (o StorageProfileResponsePtrOutput) StorageAutogrow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAutogrow
	}).(pulumi.StringPtrOutput)
}

// Max storage allowed for a server.
func (o StorageProfileResponsePtrOutput) StorageMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.StorageMB
	}).(pulumi.IntPtrOutput)
}

// Storage properties of a server
type StorageResponse struct {
	// Flag to enable / disable Storage Auto grow for flexible server.
	AutoGrow *string `pulumi:"autoGrow"`
	// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS
	Iops *int `pulumi:"iops"`
	// Max storage allowed for a server.
	StorageSizeGB *int `pulumi:"storageSizeGB"`
	// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS
	Throughput *int `pulumi:"throughput"`
	// Name of storage tier for IOPS.
	Tier *string `pulumi:"tier"`
	// Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified
	Type *string `pulumi:"type"`
}

// Storage properties of a server
type StorageResponseOutput struct{ *pulumi.OutputState }

func (StorageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageResponse)(nil)).Elem()
}

func (o StorageResponseOutput) ToStorageResponseOutput() StorageResponseOutput {
	return o
}

func (o StorageResponseOutput) ToStorageResponseOutputWithContext(ctx context.Context) StorageResponseOutput {
	return o
}

// Flag to enable / disable Storage Auto grow for flexible server.
func (o StorageResponseOutput) AutoGrow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageResponse) *string { return v.AutoGrow }).(pulumi.StringPtrOutput)
}

// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS
func (o StorageResponseOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageResponse) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Max storage allowed for a server.
func (o StorageResponseOutput) StorageSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageResponse) *int { return v.StorageSizeGB }).(pulumi.IntPtrOutput)
}

// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS
func (o StorageResponseOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageResponse) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

// Name of storage tier for IOPS.
func (o StorageResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

// Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified
func (o StorageResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StorageResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageResponse)(nil)).Elem()
}

func (o StorageResponsePtrOutput) ToStorageResponsePtrOutput() StorageResponsePtrOutput {
	return o
}

func (o StorageResponsePtrOutput) ToStorageResponsePtrOutputWithContext(ctx context.Context) StorageResponsePtrOutput {
	return o
}

func (o StorageResponsePtrOutput) Elem() StorageResponseOutput {
	return o.ApplyT(func(v *StorageResponse) StorageResponse {
		if v != nil {
			return *v
		}
		var ret StorageResponse
		return ret
	}).(StorageResponseOutput)
}

// Flag to enable / disable Storage Auto grow for flexible server.
func (o StorageResponsePtrOutput) AutoGrow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageResponse) *string {
		if v == nil {
			return nil
		}
		return v.AutoGrow
	}).(pulumi.StringPtrOutput)
}

// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS
func (o StorageResponsePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageResponse) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// Max storage allowed for a server.
func (o StorageResponsePtrOutput) StorageSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageResponse) *int {
		if v == nil {
			return nil
		}
		return v.StorageSizeGB
	}).(pulumi.IntPtrOutput)
}

// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS
func (o StorageResponsePtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageResponse) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

// Name of storage tier for IOPS.
func (o StorageResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified
func (o StorageResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Information describing the identities associated with this application.
type UserAssignedIdentity struct {
	// the identity principal Id of the server.
	PrincipalId *string `pulumi:"principalId"`
	// the types of identities associated with this resource
	Type string `pulumi:"type"`
	// represents user assigned identities map.
	UserAssignedIdentities map[string]UserIdentity `pulumi:"userAssignedIdentities"`
}

// UserAssignedIdentityInput is an input type that accepts UserAssignedIdentityArgs and UserAssignedIdentityOutput values.
// You can construct a concrete instance of `UserAssignedIdentityInput` via:
//
//	UserAssignedIdentityArgs{...}
type UserAssignedIdentityInput interface {
	pulumi.Input

	ToUserAssignedIdentityOutput() UserAssignedIdentityOutput
	ToUserAssignedIdentityOutputWithContext(context.Context) UserAssignedIdentityOutput
}

// Information describing the identities associated with this application.
type UserAssignedIdentityArgs struct {
	// the identity principal Id of the server.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// the types of identities associated with this resource
	Type pulumi.StringInput `pulumi:"type"`
	// represents user assigned identities map.
	UserAssignedIdentities UserIdentityMapInput `pulumi:"userAssignedIdentities"`
}

func (UserAssignedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentity)(nil)).Elem()
}

func (i UserAssignedIdentityArgs) ToUserAssignedIdentityOutput() UserAssignedIdentityOutput {
	return i.ToUserAssignedIdentityOutputWithContext(context.Background())
}

func (i UserAssignedIdentityArgs) ToUserAssignedIdentityOutputWithContext(ctx context.Context) UserAssignedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityOutput)
}

func (i UserAssignedIdentityArgs) ToUserAssignedIdentityPtrOutput() UserAssignedIdentityPtrOutput {
	return i.ToUserAssignedIdentityPtrOutputWithContext(context.Background())
}

func (i UserAssignedIdentityArgs) ToUserAssignedIdentityPtrOutputWithContext(ctx context.Context) UserAssignedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityOutput).ToUserAssignedIdentityPtrOutputWithContext(ctx)
}

// UserAssignedIdentityPtrInput is an input type that accepts UserAssignedIdentityArgs, UserAssignedIdentityPtr and UserAssignedIdentityPtrOutput values.
// You can construct a concrete instance of `UserAssignedIdentityPtrInput` via:
//
//	        UserAssignedIdentityArgs{...}
//
//	or:
//
//	        nil
type UserAssignedIdentityPtrInput interface {
	pulumi.Input

	ToUserAssignedIdentityPtrOutput() UserAssignedIdentityPtrOutput
	ToUserAssignedIdentityPtrOutputWithContext(context.Context) UserAssignedIdentityPtrOutput
}

type userAssignedIdentityPtrType UserAssignedIdentityArgs

func UserAssignedIdentityPtr(v *UserAssignedIdentityArgs) UserAssignedIdentityPtrInput {
	return (*userAssignedIdentityPtrType)(v)
}

func (*userAssignedIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedIdentity)(nil)).Elem()
}

func (i *userAssignedIdentityPtrType) ToUserAssignedIdentityPtrOutput() UserAssignedIdentityPtrOutput {
	return i.ToUserAssignedIdentityPtrOutputWithContext(context.Background())
}

func (i *userAssignedIdentityPtrType) ToUserAssignedIdentityPtrOutputWithContext(ctx context.Context) UserAssignedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityPtrOutput)
}

// Information describing the identities associated with this application.
type UserAssignedIdentityOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentity)(nil)).Elem()
}

func (o UserAssignedIdentityOutput) ToUserAssignedIdentityOutput() UserAssignedIdentityOutput {
	return o
}

func (o UserAssignedIdentityOutput) ToUserAssignedIdentityOutputWithContext(ctx context.Context) UserAssignedIdentityOutput {
	return o
}

func (o UserAssignedIdentityOutput) ToUserAssignedIdentityPtrOutput() UserAssignedIdentityPtrOutput {
	return o.ToUserAssignedIdentityPtrOutputWithContext(context.Background())
}

func (o UserAssignedIdentityOutput) ToUserAssignedIdentityPtrOutputWithContext(ctx context.Context) UserAssignedIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserAssignedIdentity) *UserAssignedIdentity {
		return &v
	}).(UserAssignedIdentityPtrOutput)
}

// the identity principal Id of the server.
func (o UserAssignedIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// the types of identities associated with this resource
func (o UserAssignedIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// represents user assigned identities map.
func (o UserAssignedIdentityOutput) UserAssignedIdentities() UserIdentityMapOutput {
	return o.ApplyT(func(v UserAssignedIdentity) map[string]UserIdentity { return v.UserAssignedIdentities }).(UserIdentityMapOutput)
}

type UserAssignedIdentityPtrOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedIdentity)(nil)).Elem()
}

func (o UserAssignedIdentityPtrOutput) ToUserAssignedIdentityPtrOutput() UserAssignedIdentityPtrOutput {
	return o
}

func (o UserAssignedIdentityPtrOutput) ToUserAssignedIdentityPtrOutputWithContext(ctx context.Context) UserAssignedIdentityPtrOutput {
	return o
}

func (o UserAssignedIdentityPtrOutput) Elem() UserAssignedIdentityOutput {
	return o.ApplyT(func(v *UserAssignedIdentity) UserAssignedIdentity {
		if v != nil {
			return *v
		}
		var ret UserAssignedIdentity
		return ret
	}).(UserAssignedIdentityOutput)
}

// the identity principal Id of the server.
func (o UserAssignedIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// the types of identities associated with this resource
func (o UserAssignedIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// represents user assigned identities map.
func (o UserAssignedIdentityPtrOutput) UserAssignedIdentities() UserIdentityMapOutput {
	return o.ApplyT(func(v *UserAssignedIdentity) map[string]UserIdentity {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserIdentityMapOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// Tenant id of the server.
	TenantId *string `pulumi:"tenantId"`
	// the types of identities associated with this resource
	Type *string `pulumi:"type"`
	// represents user assigned identities map.
	UserAssignedIdentities map[string]UserIdentityResponse `pulumi:"userAssignedIdentities"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Tenant id of the server.
func (o UserAssignedIdentityResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// the types of identities associated with this resource
func (o UserAssignedIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// represents user assigned identities map.
func (o UserAssignedIdentityResponseOutput) UserAssignedIdentities() UserIdentityResponseMapOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) map[string]UserIdentityResponse { return v.UserAssignedIdentities }).(UserIdentityResponseMapOutput)
}

type UserAssignedIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponsePtrOutput) ToUserAssignedIdentityResponsePtrOutput() UserAssignedIdentityResponsePtrOutput {
	return o
}

func (o UserAssignedIdentityResponsePtrOutput) ToUserAssignedIdentityResponsePtrOutputWithContext(ctx context.Context) UserAssignedIdentityResponsePtrOutput {
	return o
}

func (o UserAssignedIdentityResponsePtrOutput) Elem() UserAssignedIdentityResponseOutput {
	return o.ApplyT(func(v *UserAssignedIdentityResponse) UserAssignedIdentityResponse {
		if v != nil {
			return *v
		}
		var ret UserAssignedIdentityResponse
		return ret
	}).(UserAssignedIdentityResponseOutput)
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Tenant id of the server.
func (o UserAssignedIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// the types of identities associated with this resource
func (o UserAssignedIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAssignedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// represents user assigned identities map.
func (o UserAssignedIdentityResponsePtrOutput) UserAssignedIdentities() UserIdentityResponseMapOutput {
	return o.ApplyT(func(v *UserAssignedIdentityResponse) map[string]UserIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserIdentityResponseMapOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// Describes a single user-assigned identity associated with the application.
type UserIdentity struct {
	// the client identifier of the Service Principal which this identity represents.
	ClientId *string `pulumi:"clientId"`
	// the object identifier of the Service Principal which this identity represents.
	PrincipalId *string `pulumi:"principalId"`
}

// UserIdentityInput is an input type that accepts UserIdentityArgs and UserIdentityOutput values.
// You can construct a concrete instance of `UserIdentityInput` via:
//
//	UserIdentityArgs{...}
type UserIdentityInput interface {
	pulumi.Input

	ToUserIdentityOutput() UserIdentityOutput
	ToUserIdentityOutputWithContext(context.Context) UserIdentityOutput
}

// Describes a single user-assigned identity associated with the application.
type UserIdentityArgs struct {
	// the client identifier of the Service Principal which this identity represents.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// the object identifier of the Service Principal which this identity represents.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
}

func (UserIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentity)(nil)).Elem()
}

func (i UserIdentityArgs) ToUserIdentityOutput() UserIdentityOutput {
	return i.ToUserIdentityOutputWithContext(context.Background())
}

func (i UserIdentityArgs) ToUserIdentityOutputWithContext(ctx context.Context) UserIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityOutput)
}

// UserIdentityMapInput is an input type that accepts UserIdentityMap and UserIdentityMapOutput values.
// You can construct a concrete instance of `UserIdentityMapInput` via:
//
//	UserIdentityMap{ "key": UserIdentityArgs{...} }
type UserIdentityMapInput interface {
	pulumi.Input

	ToUserIdentityMapOutput() UserIdentityMapOutput
	ToUserIdentityMapOutputWithContext(context.Context) UserIdentityMapOutput
}

type UserIdentityMap map[string]UserIdentityInput

func (UserIdentityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentity)(nil)).Elem()
}

func (i UserIdentityMap) ToUserIdentityMapOutput() UserIdentityMapOutput {
	return i.ToUserIdentityMapOutputWithContext(context.Background())
}

func (i UserIdentityMap) ToUserIdentityMapOutputWithContext(ctx context.Context) UserIdentityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityMapOutput)
}

// Describes a single user-assigned identity associated with the application.
type UserIdentityOutput struct{ *pulumi.OutputState }

func (UserIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentity)(nil)).Elem()
}

func (o UserIdentityOutput) ToUserIdentityOutput() UserIdentityOutput {
	return o
}

func (o UserIdentityOutput) ToUserIdentityOutputWithContext(ctx context.Context) UserIdentityOutput {
	return o
}

// the client identifier of the Service Principal which this identity represents.
func (o UserIdentityOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentity) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// the object identifier of the Service Principal which this identity represents.
func (o UserIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserIdentityMapOutput struct{ *pulumi.OutputState }

func (UserIdentityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentity)(nil)).Elem()
}

func (o UserIdentityMapOutput) ToUserIdentityMapOutput() UserIdentityMapOutput {
	return o
}

func (o UserIdentityMapOutput) ToUserIdentityMapOutputWithContext(ctx context.Context) UserIdentityMapOutput {
	return o
}

func (o UserIdentityMapOutput) MapIndex(k pulumi.StringInput) UserIdentityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserIdentity {
		return vs[0].(map[string]UserIdentity)[vs[1].(string)]
	}).(UserIdentityOutput)
}

// Describes a single user-assigned identity associated with the application.
type UserIdentityResponse struct {
	// the client identifier of the Service Principal which this identity represents.
	ClientId *string `pulumi:"clientId"`
	// the object identifier of the Service Principal which this identity represents.
	PrincipalId *string `pulumi:"principalId"`
}

// Describes a single user-assigned identity associated with the application.
type UserIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityResponse)(nil)).Elem()
}

func (o UserIdentityResponseOutput) ToUserIdentityResponseOutput() UserIdentityResponseOutput {
	return o
}

func (o UserIdentityResponseOutput) ToUserIdentityResponseOutputWithContext(ctx context.Context) UserIdentityResponseOutput {
	return o
}

// the client identifier of the Service Principal which this identity represents.
func (o UserIdentityResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// the object identifier of the Service Principal which this identity represents.
func (o UserIdentityResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

type UserIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserIdentityResponse)(nil)).Elem()
}

func (o UserIdentityResponseMapOutput) ToUserIdentityResponseMapOutput() UserIdentityResponseMapOutput {
	return o
}

func (o UserIdentityResponseMapOutput) ToUserIdentityResponseMapOutputWithContext(ctx context.Context) UserIdentityResponseMapOutput {
	return o
}

func (o UserIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserIdentityResponse {
		return vs[0].(map[string]UserIdentityResponse)[vs[1].(string)]
	}).(UserIdentityResponseOutput)
}

// Details for the validation for migration
type ValidationDetailsResponse struct {
	// Details of server level validations
	DbLevelValidationDetails []DbLevelValidationStatusResponse `pulumi:"dbLevelValidationDetails"`
	// Details of server level validations
	ServerLevelValidationDetails []ValidationSummaryItemResponse `pulumi:"serverLevelValidationDetails"`
	// Validation status for migration
	Status *string `pulumi:"status"`
	// Validation End date-time in UTC
	ValidationEndTimeInUtc *string `pulumi:"validationEndTimeInUtc"`
	// Validation Start date-time in UTC
	ValidationStartTimeInUtc *string `pulumi:"validationStartTimeInUtc"`
}

// Details for the validation for migration
type ValidationDetailsResponseOutput struct{ *pulumi.OutputState }

func (ValidationDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationDetailsResponse)(nil)).Elem()
}

func (o ValidationDetailsResponseOutput) ToValidationDetailsResponseOutput() ValidationDetailsResponseOutput {
	return o
}

func (o ValidationDetailsResponseOutput) ToValidationDetailsResponseOutputWithContext(ctx context.Context) ValidationDetailsResponseOutput {
	return o
}

// Details of server level validations
func (o ValidationDetailsResponseOutput) DbLevelValidationDetails() DbLevelValidationStatusResponseArrayOutput {
	return o.ApplyT(func(v ValidationDetailsResponse) []DbLevelValidationStatusResponse { return v.DbLevelValidationDetails }).(DbLevelValidationStatusResponseArrayOutput)
}

// Details of server level validations
func (o ValidationDetailsResponseOutput) ServerLevelValidationDetails() ValidationSummaryItemResponseArrayOutput {
	return o.ApplyT(func(v ValidationDetailsResponse) []ValidationSummaryItemResponse {
		return v.ServerLevelValidationDetails
	}).(ValidationSummaryItemResponseArrayOutput)
}

// Validation status for migration
func (o ValidationDetailsResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ValidationDetailsResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Validation End date-time in UTC
func (o ValidationDetailsResponseOutput) ValidationEndTimeInUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ValidationDetailsResponse) *string { return v.ValidationEndTimeInUtc }).(pulumi.StringPtrOutput)
}

// Validation Start date-time in UTC
func (o ValidationDetailsResponseOutput) ValidationStartTimeInUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ValidationDetailsResponse) *string { return v.ValidationStartTimeInUtc }).(pulumi.StringPtrOutput)
}

type ValidationDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ValidationDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidationDetailsResponse)(nil)).Elem()
}

func (o ValidationDetailsResponsePtrOutput) ToValidationDetailsResponsePtrOutput() ValidationDetailsResponsePtrOutput {
	return o
}

func (o ValidationDetailsResponsePtrOutput) ToValidationDetailsResponsePtrOutputWithContext(ctx context.Context) ValidationDetailsResponsePtrOutput {
	return o
}

func (o ValidationDetailsResponsePtrOutput) Elem() ValidationDetailsResponseOutput {
	return o.ApplyT(func(v *ValidationDetailsResponse) ValidationDetailsResponse {
		if v != nil {
			return *v
		}
		var ret ValidationDetailsResponse
		return ret
	}).(ValidationDetailsResponseOutput)
}

// Details of server level validations
func (o ValidationDetailsResponsePtrOutput) DbLevelValidationDetails() DbLevelValidationStatusResponseArrayOutput {
	return o.ApplyT(func(v *ValidationDetailsResponse) []DbLevelValidationStatusResponse {
		if v == nil {
			return nil
		}
		return v.DbLevelValidationDetails
	}).(DbLevelValidationStatusResponseArrayOutput)
}

// Details of server level validations
func (o ValidationDetailsResponsePtrOutput) ServerLevelValidationDetails() ValidationSummaryItemResponseArrayOutput {
	return o.ApplyT(func(v *ValidationDetailsResponse) []ValidationSummaryItemResponse {
		if v == nil {
			return nil
		}
		return v.ServerLevelValidationDetails
	}).(ValidationSummaryItemResponseArrayOutput)
}

// Validation status for migration
func (o ValidationDetailsResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Validation End date-time in UTC
func (o ValidationDetailsResponsePtrOutput) ValidationEndTimeInUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ValidationEndTimeInUtc
	}).(pulumi.StringPtrOutput)
}

// Validation Start date-time in UTC
func (o ValidationDetailsResponsePtrOutput) ValidationStartTimeInUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidationDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ValidationStartTimeInUtc
	}).(pulumi.StringPtrOutput)
}

// Validation message object
type ValidationMessageResponse struct {
	// Validation message string
	Message *string `pulumi:"message"`
	// Severity of validation message
	State *string `pulumi:"state"`
}

// Validation message object
type ValidationMessageResponseOutput struct{ *pulumi.OutputState }

func (ValidationMessageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationMessageResponse)(nil)).Elem()
}

func (o ValidationMessageResponseOutput) ToValidationMessageResponseOutput() ValidationMessageResponseOutput {
	return o
}

func (o ValidationMessageResponseOutput) ToValidationMessageResponseOutputWithContext(ctx context.Context) ValidationMessageResponseOutput {
	return o
}

// Validation message string
func (o ValidationMessageResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ValidationMessageResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Severity of validation message
func (o ValidationMessageResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ValidationMessageResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ValidationMessageResponseArrayOutput struct{ *pulumi.OutputState }

func (ValidationMessageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidationMessageResponse)(nil)).Elem()
}

func (o ValidationMessageResponseArrayOutput) ToValidationMessageResponseArrayOutput() ValidationMessageResponseArrayOutput {
	return o
}

func (o ValidationMessageResponseArrayOutput) ToValidationMessageResponseArrayOutputWithContext(ctx context.Context) ValidationMessageResponseArrayOutput {
	return o
}

func (o ValidationMessageResponseArrayOutput) Index(i pulumi.IntInput) ValidationMessageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ValidationMessageResponse {
		return vs[0].([]ValidationMessageResponse)[vs[1].(int)]
	}).(ValidationMessageResponseOutput)
}

// Validation summary object
type ValidationSummaryItemResponse struct {
	// Validation messages
	Messages []ValidationMessageResponse `pulumi:"messages"`
	// Validation status for migration
	State *string `pulumi:"state"`
	// Validation type
	Type *string `pulumi:"type"`
}

// Validation summary object
type ValidationSummaryItemResponseOutput struct{ *pulumi.OutputState }

func (ValidationSummaryItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationSummaryItemResponse)(nil)).Elem()
}

func (o ValidationSummaryItemResponseOutput) ToValidationSummaryItemResponseOutput() ValidationSummaryItemResponseOutput {
	return o
}

func (o ValidationSummaryItemResponseOutput) ToValidationSummaryItemResponseOutputWithContext(ctx context.Context) ValidationSummaryItemResponseOutput {
	return o
}

// Validation messages
func (o ValidationSummaryItemResponseOutput) Messages() ValidationMessageResponseArrayOutput {
	return o.ApplyT(func(v ValidationSummaryItemResponse) []ValidationMessageResponse { return v.Messages }).(ValidationMessageResponseArrayOutput)
}

// Validation status for migration
func (o ValidationSummaryItemResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ValidationSummaryItemResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Validation type
func (o ValidationSummaryItemResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ValidationSummaryItemResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ValidationSummaryItemResponseArrayOutput struct{ *pulumi.OutputState }

func (ValidationSummaryItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidationSummaryItemResponse)(nil)).Elem()
}

func (o ValidationSummaryItemResponseArrayOutput) ToValidationSummaryItemResponseArrayOutput() ValidationSummaryItemResponseArrayOutput {
	return o
}

func (o ValidationSummaryItemResponseArrayOutput) ToValidationSummaryItemResponseArrayOutputWithContext(ctx context.Context) ValidationSummaryItemResponseArrayOutput {
	return o
}

func (o ValidationSummaryItemResponseArrayOutput) Index(i pulumi.IntInput) ValidationSummaryItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ValidationSummaryItemResponse {
		return vs[0].([]ValidationSummaryItemResponse)[vs[1].(int)]
	}).(ValidationSummaryItemResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AdminCredentialsOutput{})
	pulumi.RegisterOutputType(AdminCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AuthConfigOutput{})
	pulumi.RegisterOutputType(AuthConfigPtrOutput{})
	pulumi.RegisterOutputType(AuthConfigResponseOutput{})
	pulumi.RegisterOutputType(AuthConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(BackupTypeOutput{})
	pulumi.RegisterOutputType(BackupTypePtrOutput{})
	pulumi.RegisterOutputType(BackupResponseOutput{})
	pulumi.RegisterOutputType(BackupResponsePtrOutput{})
	pulumi.RegisterOutputType(DataEncryptionOutput{})
	pulumi.RegisterOutputType(DataEncryptionPtrOutput{})
	pulumi.RegisterOutputType(DataEncryptionResponseOutput{})
	pulumi.RegisterOutputType(DataEncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(DbLevelValidationStatusResponseOutput{})
	pulumi.RegisterOutputType(DbLevelValidationStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(DbMigrationStatusResponseOutput{})
	pulumi.RegisterOutputType(DbMigrationStatusResponseMapOutput{})
	pulumi.RegisterOutputType(DbServerMetadataResponseOutput{})
	pulumi.RegisterOutputType(HighAvailabilityOutput{})
	pulumi.RegisterOutputType(HighAvailabilityPtrOutput{})
	pulumi.RegisterOutputType(HighAvailabilityResponseOutput{})
	pulumi.RegisterOutputType(HighAvailabilityResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IdentityPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowResponseOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrationSecretParametersOutput{})
	pulumi.RegisterOutputType(MigrationSecretParametersPtrOutput{})
	pulumi.RegisterOutputType(MigrationStatusResponseOutput{})
	pulumi.RegisterOutputType(MigrationSubStateDetailsResponseOutput{})
	pulumi.RegisterOutputType(NetworkOutput{})
	pulumi.RegisterOutputType(NetworkPtrOutput{})
	pulumi.RegisterOutputType(NetworkResponseOutput{})
	pulumi.RegisterOutputType(NetworkResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPropertyResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPropertyResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(ReplicaOutput{})
	pulumi.RegisterOutputType(ReplicaPtrOutput{})
	pulumi.RegisterOutputType(ReplicaResponseOutput{})
	pulumi.RegisterOutputType(ReplicaResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityOutput{})
	pulumi.RegisterOutputType(ResourceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerGroupClusterAuthConfigOutput{})
	pulumi.RegisterOutputType(ServerGroupClusterAuthConfigPtrOutput{})
	pulumi.RegisterOutputType(ServerGroupClusterAuthConfigResponseOutput{})
	pulumi.RegisterOutputType(ServerGroupClusterAuthConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerGroupClusterDataEncryptionOutput{})
	pulumi.RegisterOutputType(ServerGroupClusterDataEncryptionPtrOutput{})
	pulumi.RegisterOutputType(ServerGroupClusterDataEncryptionResponseOutput{})
	pulumi.RegisterOutputType(ServerGroupClusterDataEncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerGroupClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(ServerGroupClusterMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(ServerGroupClusterMaintenanceWindowResponseOutput{})
	pulumi.RegisterOutputType(ServerGroupClusterMaintenanceWindowResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerNameItemResponseOutput{})
	pulumi.RegisterOutputType(ServerNameItemResponseArrayOutput{})
	pulumi.RegisterOutputType(ServerPrivateEndpointConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ServerPrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(ServerPrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(ServerPrivateLinkServiceConnectionStatePropertyResponseOutput{})
	pulumi.RegisterOutputType(ServerPrivateLinkServiceConnectionStatePropertyResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerPropertiesForDefaultCreateOutput{})
	pulumi.RegisterOutputType(ServerPropertiesForGeoRestoreOutput{})
	pulumi.RegisterOutputType(ServerPropertiesForReplicaOutput{})
	pulumi.RegisterOutputType(ServerPropertiesForRestoreOutput{})
	pulumi.RegisterOutputType(ServerSkuResponseOutput{})
	pulumi.RegisterOutputType(ServerSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SimplePrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(SimplePrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(SingleServerSkuOutput{})
	pulumi.RegisterOutputType(SingleServerSkuPtrOutput{})
	pulumi.RegisterOutputType(SingleServerSkuResponseOutput{})
	pulumi.RegisterOutputType(SingleServerSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuOutput{})
	pulumi.RegisterOutputType(SkuPtrOutput{})
	pulumi.RegisterOutputType(SkuResponseOutput{})
	pulumi.RegisterOutputType(SkuResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageOutput{})
	pulumi.RegisterOutputType(StoragePtrOutput{})
	pulumi.RegisterOutputType(StorageProfileOutput{})
	pulumi.RegisterOutputType(StorageProfilePtrOutput{})
	pulumi.RegisterOutputType(StorageProfileResponseOutput{})
	pulumi.RegisterOutputType(StorageProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageResponseOutput{})
	pulumi.RegisterOutputType(StorageResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityPtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(UserIdentityOutput{})
	pulumi.RegisterOutputType(UserIdentityMapOutput{})
	pulumi.RegisterOutputType(UserIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(ValidationDetailsResponseOutput{})
	pulumi.RegisterOutputType(ValidationDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ValidationMessageResponseOutput{})
	pulumi.RegisterOutputType(ValidationMessageResponseArrayOutput{})
	pulumi.RegisterOutputType(ValidationSummaryItemResponseOutput{})
	pulumi.RegisterOutputType(ValidationSummaryItemResponseArrayOutput{})
}
