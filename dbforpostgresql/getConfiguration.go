// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbforpostgresql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about a specific server parameter of a flexible server.
//
// Uses Azure REST API version 2024-08-01.
//
// Other available API versions: 2022-12-01, 2023-03-01-preview, 2023-06-01-preview, 2023-12-01-preview, 2024-03-01-preview, 2024-11-01-preview, 2025-01-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native dbforpostgresql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupConfiguration(ctx *pulumi.Context, args *LookupConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupConfigurationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupConfigurationResult
	err := ctx.Invoke("azure-native:dbforpostgresql:getConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConfigurationArgs struct {
	// Name of the server parameter.
	ConfigurationName string `pulumi:"configurationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName string `pulumi:"serverName"`
}

// Server parameter.
type LookupConfigurationResult struct {
	// Allowed values of the server parameter.
	AllowedValues string `pulumi:"allowedValues"`
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Data type of the server parameter.
	DataType string `pulumi:"dataType"`
	// Value assigned by default to the server parameter.
	DefaultValue string `pulumi:"defaultValue"`
	// Description of the server parameter.
	Description string `pulumi:"description"`
	// Link pointing to the documentation of the server parameter.
	DocumentationLink string `pulumi:"documentationLink"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// Indicates if the value assigned to the server parameter is pending a server restart for the value to take effect.
	IsConfigPendingRestart bool `pulumi:"isConfigPendingRestart"`
	// Indicates if it's a dynamic (true) or static (false) server parameter. Static server parameters require a server restart after changing the value assigned to it, for the change to take effect. Dynamic server parameters do not require a server restart after changing the value assigned to it, for the change to take effect.
	IsDynamicConfig bool `pulumi:"isDynamicConfig"`
	// Indicates if it's a read-only (true) or modifiable (false) server parameter.
	IsReadOnly bool `pulumi:"isReadOnly"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Source of the value assigned to the server parameter. Required to update the value assigned to a specific modifiable server parameter.
	Source *string `pulumi:"source"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Units in which the server parameter value is expressed.
	Unit string `pulumi:"unit"`
	// Value of the server parameter (also known as configuration). Required to update the value assigned to a specific modifiable server parameter.
	Value *string `pulumi:"value"`
}

func LookupConfigurationOutput(ctx *pulumi.Context, args LookupConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupConfigurationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupConfigurationResultOutput, error) {
			args := v.(LookupConfigurationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:dbforpostgresql:getConfiguration", args, LookupConfigurationResultOutput{}, options).(LookupConfigurationResultOutput), nil
		}).(LookupConfigurationResultOutput)
}

type LookupConfigurationOutputArgs struct {
	// Name of the server parameter.
	ConfigurationName pulumi.StringInput `pulumi:"configurationName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName pulumi.StringInput `pulumi:"serverName"`
}

func (LookupConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationArgs)(nil)).Elem()
}

// Server parameter.
type LookupConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationResult)(nil)).Elem()
}

func (o LookupConfigurationResultOutput) ToLookupConfigurationResultOutput() LookupConfigurationResultOutput {
	return o
}

func (o LookupConfigurationResultOutput) ToLookupConfigurationResultOutputWithContext(ctx context.Context) LookupConfigurationResultOutput {
	return o
}

// Allowed values of the server parameter.
func (o LookupConfigurationResultOutput) AllowedValues() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.AllowedValues }).(pulumi.StringOutput)
}

// The Azure API version of the resource.
func (o LookupConfigurationResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Data type of the server parameter.
func (o LookupConfigurationResultOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.DataType }).(pulumi.StringOutput)
}

// Value assigned by default to the server parameter.
func (o LookupConfigurationResultOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// Description of the server parameter.
func (o LookupConfigurationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.Description }).(pulumi.StringOutput)
}

// Link pointing to the documentation of the server parameter.
func (o LookupConfigurationResultOutput) DocumentationLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.DocumentationLink }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates if the value assigned to the server parameter is pending a server restart for the value to take effect.
func (o LookupConfigurationResultOutput) IsConfigPendingRestart() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupConfigurationResult) bool { return v.IsConfigPendingRestart }).(pulumi.BoolOutput)
}

// Indicates if it's a dynamic (true) or static (false) server parameter. Static server parameters require a server restart after changing the value assigned to it, for the change to take effect. Dynamic server parameters do not require a server restart after changing the value assigned to it, for the change to take effect.
func (o LookupConfigurationResultOutput) IsDynamicConfig() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupConfigurationResult) bool { return v.IsDynamicConfig }).(pulumi.BoolOutput)
}

// Indicates if it's a read-only (true) or modifiable (false) server parameter.
func (o LookupConfigurationResultOutput) IsReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupConfigurationResult) bool { return v.IsReadOnly }).(pulumi.BoolOutput)
}

// The name of the resource
func (o LookupConfigurationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.Name }).(pulumi.StringOutput)
}

// Source of the value assigned to the server parameter. Required to update the value assigned to a specific modifiable server parameter.
func (o LookupConfigurationResultOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigurationResult) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupConfigurationResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupConfigurationResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupConfigurationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.Type }).(pulumi.StringOutput)
}

// Units in which the server parameter value is expressed.
func (o LookupConfigurationResultOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.Unit }).(pulumi.StringOutput)
}

// Value of the server parameter (also known as configuration). Required to update the value assigned to a specific modifiable server parameter.
func (o LookupConfigurationResultOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigurationResult) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigurationResultOutput{})
}
