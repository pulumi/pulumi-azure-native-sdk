// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbforpostgresql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Server administrator associated to a Microsoft Entra principal.
//
// Uses Azure REST API version 2024-08-01. In version 2.x of the Azure Native provider, it used API version 2022-12-01.
//
// Other available API versions: 2022-12-01, 2023-03-01-preview, 2023-06-01-preview, 2023-12-01-preview, 2024-03-01-preview, 2024-11-01-preview, 2025-01-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native dbforpostgresql [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type Administrator struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Object identifier of the Microsoft Entra principal.
	ObjectId pulumi.StringPtrOutput `pulumi:"objectId"`
	// Name of the Microsoft Entra principal.
	PrincipalName pulumi.StringPtrOutput `pulumi:"principalName"`
	// Type of Microsoft Entra principal to which the server administrator is associated.
	PrincipalType pulumi.StringPtrOutput `pulumi:"principalType"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Identifier of the tenant in which the Microsoft Entra principal exists.
	TenantId pulumi.StringPtrOutput `pulumi:"tenantId"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAdministrator registers a new resource with the given unique name, arguments, and options.
func NewAdministrator(ctx *pulumi.Context,
	name string, args *AdministratorArgs, opts ...pulumi.ResourceOption) (*Administrator, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ServerName == nil {
		return nil, errors.New("invalid value for required argument 'ServerName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20220308preview:Administrator"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20221201:Administrator"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20230301preview:Administrator"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20230601preview:Administrator"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20231201preview:Administrator"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20240301preview:Administrator"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20240801:Administrator"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20241101preview:Administrator"),
		},
		{
			Type: pulumi.String("azure-native:dbforpostgresql/v20250101preview:Administrator"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Administrator
	err := ctx.RegisterResource("azure-native:dbforpostgresql:Administrator", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAdministrator gets an existing Administrator resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAdministrator(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AdministratorState, opts ...pulumi.ResourceOption) (*Administrator, error) {
	var resource Administrator
	err := ctx.ReadResource("azure-native:dbforpostgresql:Administrator", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Administrator resources.
type administratorState struct {
}

type AdministratorState struct {
}

func (AdministratorState) ElementType() reflect.Type {
	return reflect.TypeOf((*administratorState)(nil)).Elem()
}

type administratorArgs struct {
	// Object identifier of the Microsoft Entra principal.
	ObjectId *string `pulumi:"objectId"`
	// Name of the Microsoft Entra principal.
	PrincipalName *string `pulumi:"principalName"`
	// The type of Microsoft Entra principal to which the server administrator is associated.
	PrincipalType *string `pulumi:"principalType"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName string `pulumi:"serverName"`
	// Identifier of the tenant in which the Microsoft Entra principal exists.
	TenantId *string `pulumi:"tenantId"`
}

// The set of arguments for constructing a Administrator resource.
type AdministratorArgs struct {
	// Object identifier of the Microsoft Entra principal.
	ObjectId pulumi.StringPtrInput
	// Name of the Microsoft Entra principal.
	PrincipalName pulumi.StringPtrInput
	// The type of Microsoft Entra principal to which the server administrator is associated.
	PrincipalType pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The name of the server.
	ServerName pulumi.StringInput
	// Identifier of the tenant in which the Microsoft Entra principal exists.
	TenantId pulumi.StringPtrInput
}

func (AdministratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*administratorArgs)(nil)).Elem()
}

type AdministratorInput interface {
	pulumi.Input

	ToAdministratorOutput() AdministratorOutput
	ToAdministratorOutputWithContext(ctx context.Context) AdministratorOutput
}

func (*Administrator) ElementType() reflect.Type {
	return reflect.TypeOf((**Administrator)(nil)).Elem()
}

func (i *Administrator) ToAdministratorOutput() AdministratorOutput {
	return i.ToAdministratorOutputWithContext(context.Background())
}

func (i *Administrator) ToAdministratorOutputWithContext(ctx context.Context) AdministratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdministratorOutput)
}

type AdministratorOutput struct{ *pulumi.OutputState }

func (AdministratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Administrator)(nil)).Elem()
}

func (o AdministratorOutput) ToAdministratorOutput() AdministratorOutput {
	return o
}

func (o AdministratorOutput) ToAdministratorOutputWithContext(ctx context.Context) AdministratorOutput {
	return o
}

// The Azure API version of the resource.
func (o AdministratorOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Administrator) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o AdministratorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Administrator) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Object identifier of the Microsoft Entra principal.
func (o AdministratorOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Administrator) pulumi.StringPtrOutput { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// Name of the Microsoft Entra principal.
func (o AdministratorOutput) PrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Administrator) pulumi.StringPtrOutput { return v.PrincipalName }).(pulumi.StringPtrOutput)
}

// Type of Microsoft Entra principal to which the server administrator is associated.
func (o AdministratorOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Administrator) pulumi.StringPtrOutput { return v.PrincipalType }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o AdministratorOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *Administrator) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Identifier of the tenant in which the Microsoft Entra principal exists.
func (o AdministratorOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Administrator) pulumi.StringPtrOutput { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o AdministratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Administrator) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AdministratorOutput{})
}
