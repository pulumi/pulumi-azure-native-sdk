// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbforpostgresql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about a cluster role.
// Azure REST API version: 2023-03-02-preview.
func LookupServerGroupRole(ctx *pulumi.Context, args *LookupServerGroupRoleArgs, opts ...pulumi.InvokeOption) (*LookupServerGroupRoleResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupServerGroupRoleResult
	err := ctx.Invoke("azure-native:dbforpostgresql:getServerGroupRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupServerGroupRoleArgs struct {
	// The name of the cluster.
	ClusterName string `pulumi:"clusterName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the cluster role.
	RoleName string `pulumi:"roleName"`
}

// Represents a cluster role.
type LookupServerGroupRoleResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name          string `pulumi:"name"`
	ObjectId      string `pulumi:"objectId"`
	PrincipalType string `pulumi:"principalType"`
	// Provisioning state of the role
	ProvisioningState string  `pulumi:"provisioningState"`
	RoleType          *string `pulumi:"roleType"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	TenantId   *string            `pulumi:"tenantId"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupServerGroupRoleResult
func (val *LookupServerGroupRoleResult) Defaults() *LookupServerGroupRoleResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RoleType == nil {
		roleType_ := "user"
		tmp.RoleType = &roleType_
	}
	return &tmp
}
func LookupServerGroupRoleOutput(ctx *pulumi.Context, args LookupServerGroupRoleOutputArgs, opts ...pulumi.InvokeOption) LookupServerGroupRoleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupServerGroupRoleResultOutput, error) {
			args := v.(LookupServerGroupRoleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:dbforpostgresql:getServerGroupRole", args, LookupServerGroupRoleResultOutput{}, options).(LookupServerGroupRoleResultOutput), nil
		}).(LookupServerGroupRoleResultOutput)
}

type LookupServerGroupRoleOutputArgs struct {
	// The name of the cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the cluster role.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (LookupServerGroupRoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerGroupRoleArgs)(nil)).Elem()
}

// Represents a cluster role.
type LookupServerGroupRoleResultOutput struct{ *pulumi.OutputState }

func (LookupServerGroupRoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerGroupRoleResult)(nil)).Elem()
}

func (o LookupServerGroupRoleResultOutput) ToLookupServerGroupRoleResultOutput() LookupServerGroupRoleResultOutput {
	return o
}

func (o LookupServerGroupRoleResultOutput) ToLookupServerGroupRoleResultOutputWithContext(ctx context.Context) LookupServerGroupRoleResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupServerGroupRoleResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerGroupRoleResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupServerGroupRoleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerGroupRoleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupServerGroupRoleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerGroupRoleResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupServerGroupRoleResultOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerGroupRoleResult) string { return v.ObjectId }).(pulumi.StringOutput)
}

func (o LookupServerGroupRoleResultOutput) PrincipalType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerGroupRoleResult) string { return v.PrincipalType }).(pulumi.StringOutput)
}

// Provisioning state of the role
func (o LookupServerGroupRoleResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerGroupRoleResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

func (o LookupServerGroupRoleResultOutput) RoleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerGroupRoleResult) *string { return v.RoleType }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupServerGroupRoleResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupServerGroupRoleResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

func (o LookupServerGroupRoleResultOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerGroupRoleResult) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupServerGroupRoleResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerGroupRoleResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerGroupRoleResultOutput{})
}
