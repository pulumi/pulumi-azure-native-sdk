// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20221001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Lists impacted resources in the subscription by an event (Security Advisory).
func ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventId(ctx *pulumi.Context, args *ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdArgs, opts ...pulumi.InvokeOption) (*ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResult
	err := ctx.Invoke("azure-native:resourcehealth/v20221001preview:listSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventId", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdArgs struct {
	// Event Id which uniquely identifies ServiceHealth event.
	EventTrackingId string `pulumi:"eventTrackingId"`
	// The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN
	Filter *string `pulumi:"filter"`
}

// The List of eventImpactedResources operation response.
type ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResult struct {
	// The URI to fetch the next page of events. Call ListNext() with this URI to fetch the next page of impacted resource.
	NextLink *string `pulumi:"nextLink"`
	// The list of eventImpactedResources.
	Value []EventImpactedResourceResponse `pulumi:"value"`
}

func ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdOutput(ctx *pulumi.Context, args ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdOutputArgs, opts ...pulumi.InvokeOption) ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResult, error) {
			args := v.(ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdArgs)
			r, err := ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventId(ctx, &args, opts...)
			var s ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResultOutput)
}

type ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdOutputArgs struct {
	// Event Id which uniquely identifies ServiceHealth event.
	EventTrackingId pulumi.StringInput `pulumi:"eventTrackingId"`
	// The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN
	Filter pulumi.StringPtrInput `pulumi:"filter"`
}

func (ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdArgs)(nil)).Elem()
}

// The List of eventImpactedResources operation response.
type ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResultOutput struct{ *pulumi.OutputState }

func (ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResult)(nil)).Elem()
}

func (o ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResultOutput) ToListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResultOutput() ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResultOutput {
	return o
}

func (o ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResultOutput) ToListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResultOutputWithContext(ctx context.Context) ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResultOutput {
	return o
}

// The URI to fetch the next page of events. Call ListNext() with this URI to fetch the next page of impacted resource.
func (o ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResultOutput) NextLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResult) *string {
		return v.NextLink
	}).(pulumi.StringPtrOutput)
}

// The list of eventImpactedResources.
func (o ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResultOutput) Value() EventImpactedResourceResponseArrayOutput {
	return o.ApplyT(func(v ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResult) []EventImpactedResourceResponse {
		return v.Value
	}).(EventImpactedResourceResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListSecurityAdvisoryImpactedResourceBySubscriptionIdAndEventIdResultOutput{})
}
