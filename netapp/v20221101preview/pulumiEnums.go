// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20221101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Application Type
type ApplicationType string

const (
	ApplicationType_SAP_HANA = ApplicationType("SAP-HANA")
)

func (ApplicationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationType)(nil)).Elem()
}

func (e ApplicationType) ToApplicationTypeOutput() ApplicationTypeOutput {
	return pulumi.ToOutput(e).(ApplicationTypeOutput)
}

func (e ApplicationType) ToApplicationTypeOutputWithContext(ctx context.Context) ApplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApplicationTypeOutput)
}

func (e ApplicationType) ToApplicationTypePtrOutput() ApplicationTypePtrOutput {
	return e.ToApplicationTypePtrOutputWithContext(context.Background())
}

func (e ApplicationType) ToApplicationTypePtrOutputWithContext(ctx context.Context) ApplicationTypePtrOutput {
	return ApplicationType(e).ToApplicationTypeOutputWithContext(ctx).ToApplicationTypePtrOutputWithContext(ctx)
}

func (e ApplicationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApplicationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApplicationTypeOutput struct{ *pulumi.OutputState }

func (ApplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationType)(nil)).Elem()
}

func (o ApplicationTypeOutput) ToApplicationTypeOutput() ApplicationTypeOutput {
	return o
}

func (o ApplicationTypeOutput) ToApplicationTypeOutputWithContext(ctx context.Context) ApplicationTypeOutput {
	return o
}

func (o ApplicationTypeOutput) ToApplicationTypePtrOutput() ApplicationTypePtrOutput {
	return o.ToApplicationTypePtrOutputWithContext(context.Background())
}

func (o ApplicationTypeOutput) ToApplicationTypePtrOutputWithContext(ctx context.Context) ApplicationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationType) *ApplicationType {
		return &v
	}).(ApplicationTypePtrOutput)
}

func (o ApplicationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApplicationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApplicationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplicationTypePtrOutput struct{ *pulumi.OutputState }

func (ApplicationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationType)(nil)).Elem()
}

func (o ApplicationTypePtrOutput) ToApplicationTypePtrOutput() ApplicationTypePtrOutput {
	return o
}

func (o ApplicationTypePtrOutput) ToApplicationTypePtrOutputWithContext(ctx context.Context) ApplicationTypePtrOutput {
	return o
}

func (o ApplicationTypePtrOutput) Elem() ApplicationTypeOutput {
	return o.ApplyT(func(v *ApplicationType) ApplicationType {
		if v != nil {
			return *v
		}
		var ret ApplicationType
		return ret
	}).(ApplicationTypeOutput)
}

func (o ApplicationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApplicationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ApplicationTypeInput is an input type that accepts values of the ApplicationType enum
// A concrete instance of `ApplicationTypeInput` can be one of the following:
//
//	ApplicationType_SAP_HANA
type ApplicationTypeInput interface {
	pulumi.Input

	ToApplicationTypeOutput() ApplicationTypeOutput
	ToApplicationTypeOutputWithContext(context.Context) ApplicationTypeOutput
}

var applicationTypePtrType = reflect.TypeOf((**ApplicationType)(nil)).Elem()

type ApplicationTypePtrInput interface {
	pulumi.Input

	ToApplicationTypePtrOutput() ApplicationTypePtrOutput
	ToApplicationTypePtrOutputWithContext(context.Context) ApplicationTypePtrOutput
}

type applicationTypePtr string

func ApplicationTypePtr(v string) ApplicationTypePtrInput {
	return (*applicationTypePtr)(&v)
}

func (*applicationTypePtr) ElementType() reflect.Type {
	return applicationTypePtrType
}

func (in *applicationTypePtr) ToApplicationTypePtrOutput() ApplicationTypePtrOutput {
	return pulumi.ToOutput(in).(ApplicationTypePtrOutput)
}

func (in *applicationTypePtr) ToApplicationTypePtrOutputWithContext(ctx context.Context) ApplicationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApplicationTypePtrOutput)
}

// Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose
type AvsDataStore string

const (
	// avsDataStore is enabled
	AvsDataStoreEnabled = AvsDataStore("Enabled")
	// avsDataStore is disabled
	AvsDataStoreDisabled = AvsDataStore("Disabled")
)

func (AvsDataStore) ElementType() reflect.Type {
	return reflect.TypeOf((*AvsDataStore)(nil)).Elem()
}

func (e AvsDataStore) ToAvsDataStoreOutput() AvsDataStoreOutput {
	return pulumi.ToOutput(e).(AvsDataStoreOutput)
}

func (e AvsDataStore) ToAvsDataStoreOutputWithContext(ctx context.Context) AvsDataStoreOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AvsDataStoreOutput)
}

func (e AvsDataStore) ToAvsDataStorePtrOutput() AvsDataStorePtrOutput {
	return e.ToAvsDataStorePtrOutputWithContext(context.Background())
}

func (e AvsDataStore) ToAvsDataStorePtrOutputWithContext(ctx context.Context) AvsDataStorePtrOutput {
	return AvsDataStore(e).ToAvsDataStoreOutputWithContext(ctx).ToAvsDataStorePtrOutputWithContext(ctx)
}

func (e AvsDataStore) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AvsDataStore) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AvsDataStore) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AvsDataStore) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AvsDataStoreOutput struct{ *pulumi.OutputState }

func (AvsDataStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvsDataStore)(nil)).Elem()
}

func (o AvsDataStoreOutput) ToAvsDataStoreOutput() AvsDataStoreOutput {
	return o
}

func (o AvsDataStoreOutput) ToAvsDataStoreOutputWithContext(ctx context.Context) AvsDataStoreOutput {
	return o
}

func (o AvsDataStoreOutput) ToAvsDataStorePtrOutput() AvsDataStorePtrOutput {
	return o.ToAvsDataStorePtrOutputWithContext(context.Background())
}

func (o AvsDataStoreOutput) ToAvsDataStorePtrOutputWithContext(ctx context.Context) AvsDataStorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AvsDataStore) *AvsDataStore {
		return &v
	}).(AvsDataStorePtrOutput)
}

func (o AvsDataStoreOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AvsDataStoreOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AvsDataStore) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AvsDataStoreOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AvsDataStoreOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AvsDataStore) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AvsDataStorePtrOutput struct{ *pulumi.OutputState }

func (AvsDataStorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvsDataStore)(nil)).Elem()
}

func (o AvsDataStorePtrOutput) ToAvsDataStorePtrOutput() AvsDataStorePtrOutput {
	return o
}

func (o AvsDataStorePtrOutput) ToAvsDataStorePtrOutputWithContext(ctx context.Context) AvsDataStorePtrOutput {
	return o
}

func (o AvsDataStorePtrOutput) Elem() AvsDataStoreOutput {
	return o.ApplyT(func(v *AvsDataStore) AvsDataStore {
		if v != nil {
			return *v
		}
		var ret AvsDataStore
		return ret
	}).(AvsDataStoreOutput)
}

func (o AvsDataStorePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AvsDataStorePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AvsDataStore) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AvsDataStoreInput is an input type that accepts values of the AvsDataStore enum
// A concrete instance of `AvsDataStoreInput` can be one of the following:
//
//	AvsDataStoreEnabled
//	AvsDataStoreDisabled
type AvsDataStoreInput interface {
	pulumi.Input

	ToAvsDataStoreOutput() AvsDataStoreOutput
	ToAvsDataStoreOutputWithContext(context.Context) AvsDataStoreOutput
}

var avsDataStorePtrType = reflect.TypeOf((**AvsDataStore)(nil)).Elem()

type AvsDataStorePtrInput interface {
	pulumi.Input

	ToAvsDataStorePtrOutput() AvsDataStorePtrOutput
	ToAvsDataStorePtrOutputWithContext(context.Context) AvsDataStorePtrOutput
}

type avsDataStorePtr string

func AvsDataStorePtr(v string) AvsDataStorePtrInput {
	return (*avsDataStorePtr)(&v)
}

func (*avsDataStorePtr) ElementType() reflect.Type {
	return avsDataStorePtrType
}

func (in *avsDataStorePtr) ToAvsDataStorePtrOutput() AvsDataStorePtrOutput {
	return pulumi.ToOutput(in).(AvsDataStorePtrOutput)
}

func (in *avsDataStorePtr) ToAvsDataStorePtrOutputWithContext(ctx context.Context) AvsDataStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AvsDataStorePtrOutput)
}

// This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.
type ChownMode string

const (
	ChownModeRestricted   = ChownMode("Restricted")
	ChownModeUnrestricted = ChownMode("Unrestricted")
)

func (ChownMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ChownMode)(nil)).Elem()
}

func (e ChownMode) ToChownModeOutput() ChownModeOutput {
	return pulumi.ToOutput(e).(ChownModeOutput)
}

func (e ChownMode) ToChownModeOutputWithContext(ctx context.Context) ChownModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ChownModeOutput)
}

func (e ChownMode) ToChownModePtrOutput() ChownModePtrOutput {
	return e.ToChownModePtrOutputWithContext(context.Background())
}

func (e ChownMode) ToChownModePtrOutputWithContext(ctx context.Context) ChownModePtrOutput {
	return ChownMode(e).ToChownModeOutputWithContext(ctx).ToChownModePtrOutputWithContext(ctx)
}

func (e ChownMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChownMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChownMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ChownMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ChownModeOutput struct{ *pulumi.OutputState }

func (ChownModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChownMode)(nil)).Elem()
}

func (o ChownModeOutput) ToChownModeOutput() ChownModeOutput {
	return o
}

func (o ChownModeOutput) ToChownModeOutputWithContext(ctx context.Context) ChownModeOutput {
	return o
}

func (o ChownModeOutput) ToChownModePtrOutput() ChownModePtrOutput {
	return o.ToChownModePtrOutputWithContext(context.Background())
}

func (o ChownModeOutput) ToChownModePtrOutputWithContext(ctx context.Context) ChownModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChownMode) *ChownMode {
		return &v
	}).(ChownModePtrOutput)
}

func (o ChownModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ChownModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChownMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ChownModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChownModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChownMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ChownModePtrOutput struct{ *pulumi.OutputState }

func (ChownModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChownMode)(nil)).Elem()
}

func (o ChownModePtrOutput) ToChownModePtrOutput() ChownModePtrOutput {
	return o
}

func (o ChownModePtrOutput) ToChownModePtrOutputWithContext(ctx context.Context) ChownModePtrOutput {
	return o
}

func (o ChownModePtrOutput) Elem() ChownModeOutput {
	return o.ApplyT(func(v *ChownMode) ChownMode {
		if v != nil {
			return *v
		}
		var ret ChownMode
		return ret
	}).(ChownModeOutput)
}

func (o ChownModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChownModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ChownMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ChownModeInput is an input type that accepts values of the ChownMode enum
// A concrete instance of `ChownModeInput` can be one of the following:
//
//	ChownModeRestricted
//	ChownModeUnrestricted
type ChownModeInput interface {
	pulumi.Input

	ToChownModeOutput() ChownModeOutput
	ToChownModeOutputWithContext(context.Context) ChownModeOutput
}

var chownModePtrType = reflect.TypeOf((**ChownMode)(nil)).Elem()

type ChownModePtrInput interface {
	pulumi.Input

	ToChownModePtrOutput() ChownModePtrOutput
	ToChownModePtrOutputWithContext(context.Context) ChownModePtrOutput
}

type chownModePtr string

func ChownModePtr(v string) ChownModePtrInput {
	return (*chownModePtr)(&v)
}

func (*chownModePtr) ElementType() reflect.Type {
	return chownModePtrType
}

func (in *chownModePtr) ToChownModePtrOutput() ChownModePtrOutput {
	return pulumi.ToOutput(in).(ChownModePtrOutput)
}

func (in *chownModePtr) ToChownModePtrOutputWithContext(ctx context.Context) ChownModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ChownModePtrOutput)
}

// Flag indicating whether subvolume operations are enabled on the volume
type EnableSubvolumes string

const (
	// subvolumes are enabled
	EnableSubvolumesEnabled = EnableSubvolumes("Enabled")
	// subvolumes are not enabled
	EnableSubvolumesDisabled = EnableSubvolumes("Disabled")
)

func (EnableSubvolumes) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableSubvolumes)(nil)).Elem()
}

func (e EnableSubvolumes) ToEnableSubvolumesOutput() EnableSubvolumesOutput {
	return pulumi.ToOutput(e).(EnableSubvolumesOutput)
}

func (e EnableSubvolumes) ToEnableSubvolumesOutputWithContext(ctx context.Context) EnableSubvolumesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnableSubvolumesOutput)
}

func (e EnableSubvolumes) ToEnableSubvolumesPtrOutput() EnableSubvolumesPtrOutput {
	return e.ToEnableSubvolumesPtrOutputWithContext(context.Background())
}

func (e EnableSubvolumes) ToEnableSubvolumesPtrOutputWithContext(ctx context.Context) EnableSubvolumesPtrOutput {
	return EnableSubvolumes(e).ToEnableSubvolumesOutputWithContext(ctx).ToEnableSubvolumesPtrOutputWithContext(ctx)
}

func (e EnableSubvolumes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnableSubvolumes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnableSubvolumes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnableSubvolumes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnableSubvolumesOutput struct{ *pulumi.OutputState }

func (EnableSubvolumesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableSubvolumes)(nil)).Elem()
}

func (o EnableSubvolumesOutput) ToEnableSubvolumesOutput() EnableSubvolumesOutput {
	return o
}

func (o EnableSubvolumesOutput) ToEnableSubvolumesOutputWithContext(ctx context.Context) EnableSubvolumesOutput {
	return o
}

func (o EnableSubvolumesOutput) ToEnableSubvolumesPtrOutput() EnableSubvolumesPtrOutput {
	return o.ToEnableSubvolumesPtrOutputWithContext(context.Background())
}

func (o EnableSubvolumesOutput) ToEnableSubvolumesPtrOutputWithContext(ctx context.Context) EnableSubvolumesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnableSubvolumes) *EnableSubvolumes {
		return &v
	}).(EnableSubvolumesPtrOutput)
}

func (o EnableSubvolumesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnableSubvolumesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnableSubvolumes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnableSubvolumesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnableSubvolumesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnableSubvolumes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnableSubvolumesPtrOutput struct{ *pulumi.OutputState }

func (EnableSubvolumesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnableSubvolumes)(nil)).Elem()
}

func (o EnableSubvolumesPtrOutput) ToEnableSubvolumesPtrOutput() EnableSubvolumesPtrOutput {
	return o
}

func (o EnableSubvolumesPtrOutput) ToEnableSubvolumesPtrOutputWithContext(ctx context.Context) EnableSubvolumesPtrOutput {
	return o
}

func (o EnableSubvolumesPtrOutput) Elem() EnableSubvolumesOutput {
	return o.ApplyT(func(v *EnableSubvolumes) EnableSubvolumes {
		if v != nil {
			return *v
		}
		var ret EnableSubvolumes
		return ret
	}).(EnableSubvolumesOutput)
}

func (o EnableSubvolumesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnableSubvolumesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnableSubvolumes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnableSubvolumesInput is an input type that accepts values of the EnableSubvolumes enum
// A concrete instance of `EnableSubvolumesInput` can be one of the following:
//
//	EnableSubvolumesEnabled
//	EnableSubvolumesDisabled
type EnableSubvolumesInput interface {
	pulumi.Input

	ToEnableSubvolumesOutput() EnableSubvolumesOutput
	ToEnableSubvolumesOutputWithContext(context.Context) EnableSubvolumesOutput
}

var enableSubvolumesPtrType = reflect.TypeOf((**EnableSubvolumes)(nil)).Elem()

type EnableSubvolumesPtrInput interface {
	pulumi.Input

	ToEnableSubvolumesPtrOutput() EnableSubvolumesPtrOutput
	ToEnableSubvolumesPtrOutputWithContext(context.Context) EnableSubvolumesPtrOutput
}

type enableSubvolumesPtr string

func EnableSubvolumesPtr(v string) EnableSubvolumesPtrInput {
	return (*enableSubvolumesPtr)(&v)
}

func (*enableSubvolumesPtr) ElementType() reflect.Type {
	return enableSubvolumesPtrType
}

func (in *enableSubvolumesPtr) ToEnableSubvolumesPtrOutput() EnableSubvolumesPtrOutput {
	return pulumi.ToOutput(in).(EnableSubvolumesPtrOutput)
}

func (in *enableSubvolumesPtr) ToEnableSubvolumesPtrOutputWithContext(ctx context.Context) EnableSubvolumesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnableSubvolumesPtrOutput)
}

// Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'
type EncryptionKeySource string

const (
	// Microsoft-managed key encryption
	EncryptionKeySource_Microsoft_NetApp = EncryptionKeySource("Microsoft.NetApp")
	// Customer-managed key encryption
	EncryptionKeySource_Microsoft_KeyVault = EncryptionKeySource("Microsoft.KeyVault")
)

func (EncryptionKeySource) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeySource)(nil)).Elem()
}

func (e EncryptionKeySource) ToEncryptionKeySourceOutput() EncryptionKeySourceOutput {
	return pulumi.ToOutput(e).(EncryptionKeySourceOutput)
}

func (e EncryptionKeySource) ToEncryptionKeySourceOutputWithContext(ctx context.Context) EncryptionKeySourceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionKeySourceOutput)
}

func (e EncryptionKeySource) ToEncryptionKeySourcePtrOutput() EncryptionKeySourcePtrOutput {
	return e.ToEncryptionKeySourcePtrOutputWithContext(context.Background())
}

func (e EncryptionKeySource) ToEncryptionKeySourcePtrOutputWithContext(ctx context.Context) EncryptionKeySourcePtrOutput {
	return EncryptionKeySource(e).ToEncryptionKeySourceOutputWithContext(ctx).ToEncryptionKeySourcePtrOutputWithContext(ctx)
}

func (e EncryptionKeySource) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionKeySource) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionKeySource) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionKeySource) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionKeySourceOutput struct{ *pulumi.OutputState }

func (EncryptionKeySourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeySource)(nil)).Elem()
}

func (o EncryptionKeySourceOutput) ToEncryptionKeySourceOutput() EncryptionKeySourceOutput {
	return o
}

func (o EncryptionKeySourceOutput) ToEncryptionKeySourceOutputWithContext(ctx context.Context) EncryptionKeySourceOutput {
	return o
}

func (o EncryptionKeySourceOutput) ToEncryptionKeySourcePtrOutput() EncryptionKeySourcePtrOutput {
	return o.ToEncryptionKeySourcePtrOutputWithContext(context.Background())
}

func (o EncryptionKeySourceOutput) ToEncryptionKeySourcePtrOutputWithContext(ctx context.Context) EncryptionKeySourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionKeySource) *EncryptionKeySource {
		return &v
	}).(EncryptionKeySourcePtrOutput)
}

func (o EncryptionKeySourceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionKeySourceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionKeySource) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionKeySourceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionKeySourceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionKeySource) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionKeySourcePtrOutput struct{ *pulumi.OutputState }

func (EncryptionKeySourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeySource)(nil)).Elem()
}

func (o EncryptionKeySourcePtrOutput) ToEncryptionKeySourcePtrOutput() EncryptionKeySourcePtrOutput {
	return o
}

func (o EncryptionKeySourcePtrOutput) ToEncryptionKeySourcePtrOutputWithContext(ctx context.Context) EncryptionKeySourcePtrOutput {
	return o
}

func (o EncryptionKeySourcePtrOutput) Elem() EncryptionKeySourceOutput {
	return o.ApplyT(func(v *EncryptionKeySource) EncryptionKeySource {
		if v != nil {
			return *v
		}
		var ret EncryptionKeySource
		return ret
	}).(EncryptionKeySourceOutput)
}

func (o EncryptionKeySourcePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionKeySourcePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionKeySource) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionKeySourceInput is an input type that accepts values of the EncryptionKeySource enum
// A concrete instance of `EncryptionKeySourceInput` can be one of the following:
//
//	EncryptionKeySource_Microsoft_NetApp
//	EncryptionKeySource_Microsoft_KeyVault
type EncryptionKeySourceInput interface {
	pulumi.Input

	ToEncryptionKeySourceOutput() EncryptionKeySourceOutput
	ToEncryptionKeySourceOutputWithContext(context.Context) EncryptionKeySourceOutput
}

var encryptionKeySourcePtrType = reflect.TypeOf((**EncryptionKeySource)(nil)).Elem()

type EncryptionKeySourcePtrInput interface {
	pulumi.Input

	ToEncryptionKeySourcePtrOutput() EncryptionKeySourcePtrOutput
	ToEncryptionKeySourcePtrOutputWithContext(context.Context) EncryptionKeySourcePtrOutput
}

type encryptionKeySourcePtr string

func EncryptionKeySourcePtr(v string) EncryptionKeySourcePtrInput {
	return (*encryptionKeySourcePtr)(&v)
}

func (*encryptionKeySourcePtr) ElementType() reflect.Type {
	return encryptionKeySourcePtrType
}

func (in *encryptionKeySourcePtr) ToEncryptionKeySourcePtrOutput() EncryptionKeySourcePtrOutput {
	return pulumi.ToOutput(in).(EncryptionKeySourcePtrOutput)
}

func (in *encryptionKeySourcePtr) ToEncryptionKeySourcePtrOutputWithContext(ctx context.Context) EncryptionKeySourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionKeySourcePtrOutput)
}

// Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.
type EncryptionType string

const (
	// EncryptionType Single, volumes will use single encryption at rest
	EncryptionTypeSingle = EncryptionType("Single")
	// EncryptionType Double, volumes will use double encryption at rest
	EncryptionTypeDouble = EncryptionType("Double")
)

func (EncryptionType) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionType)(nil)).Elem()
}

func (e EncryptionType) ToEncryptionTypeOutput() EncryptionTypeOutput {
	return pulumi.ToOutput(e).(EncryptionTypeOutput)
}

func (e EncryptionType) ToEncryptionTypeOutputWithContext(ctx context.Context) EncryptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionTypeOutput)
}

func (e EncryptionType) ToEncryptionTypePtrOutput() EncryptionTypePtrOutput {
	return e.ToEncryptionTypePtrOutputWithContext(context.Background())
}

func (e EncryptionType) ToEncryptionTypePtrOutputWithContext(ctx context.Context) EncryptionTypePtrOutput {
	return EncryptionType(e).ToEncryptionTypeOutputWithContext(ctx).ToEncryptionTypePtrOutputWithContext(ctx)
}

func (e EncryptionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionTypeOutput struct{ *pulumi.OutputState }

func (EncryptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionType)(nil)).Elem()
}

func (o EncryptionTypeOutput) ToEncryptionTypeOutput() EncryptionTypeOutput {
	return o
}

func (o EncryptionTypeOutput) ToEncryptionTypeOutputWithContext(ctx context.Context) EncryptionTypeOutput {
	return o
}

func (o EncryptionTypeOutput) ToEncryptionTypePtrOutput() EncryptionTypePtrOutput {
	return o.ToEncryptionTypePtrOutputWithContext(context.Background())
}

func (o EncryptionTypeOutput) ToEncryptionTypePtrOutputWithContext(ctx context.Context) EncryptionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionType) *EncryptionType {
		return &v
	}).(EncryptionTypePtrOutput)
}

func (o EncryptionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionTypePtrOutput struct{ *pulumi.OutputState }

func (EncryptionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionType)(nil)).Elem()
}

func (o EncryptionTypePtrOutput) ToEncryptionTypePtrOutput() EncryptionTypePtrOutput {
	return o
}

func (o EncryptionTypePtrOutput) ToEncryptionTypePtrOutputWithContext(ctx context.Context) EncryptionTypePtrOutput {
	return o
}

func (o EncryptionTypePtrOutput) Elem() EncryptionTypeOutput {
	return o.ApplyT(func(v *EncryptionType) EncryptionType {
		if v != nil {
			return *v
		}
		var ret EncryptionType
		return ret
	}).(EncryptionTypeOutput)
}

func (o EncryptionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionTypeInput is an input type that accepts values of the EncryptionType enum
// A concrete instance of `EncryptionTypeInput` can be one of the following:
//
//	EncryptionTypeSingle
//	EncryptionTypeDouble
type EncryptionTypeInput interface {
	pulumi.Input

	ToEncryptionTypeOutput() EncryptionTypeOutput
	ToEncryptionTypeOutputWithContext(context.Context) EncryptionTypeOutput
}

var encryptionTypePtrType = reflect.TypeOf((**EncryptionType)(nil)).Elem()

type EncryptionTypePtrInput interface {
	pulumi.Input

	ToEncryptionTypePtrOutput() EncryptionTypePtrOutput
	ToEncryptionTypePtrOutputWithContext(context.Context) EncryptionTypePtrOutput
}

type encryptionTypePtr string

func EncryptionTypePtr(v string) EncryptionTypePtrInput {
	return (*encryptionTypePtr)(&v)
}

func (*encryptionTypePtr) ElementType() reflect.Type {
	return encryptionTypePtrType
}

func (in *encryptionTypePtr) ToEncryptionTypePtrOutput() EncryptionTypePtrOutput {
	return pulumi.ToOutput(in).(EncryptionTypePtrOutput)
}

func (in *encryptionTypePtr) ToEncryptionTypePtrOutputWithContext(ctx context.Context) EncryptionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionTypePtrOutput)
}

// Indicates whether the local volume is the source or destination for the Volume Replication
type EndpointType string

const (
	EndpointTypeSrc = EndpointType("src")
	EndpointTypeDst = EndpointType("dst")
)

func (EndpointType) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointType)(nil)).Elem()
}

func (e EndpointType) ToEndpointTypeOutput() EndpointTypeOutput {
	return pulumi.ToOutput(e).(EndpointTypeOutput)
}

func (e EndpointType) ToEndpointTypeOutputWithContext(ctx context.Context) EndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EndpointTypeOutput)
}

func (e EndpointType) ToEndpointTypePtrOutput() EndpointTypePtrOutput {
	return e.ToEndpointTypePtrOutputWithContext(context.Background())
}

func (e EndpointType) ToEndpointTypePtrOutputWithContext(ctx context.Context) EndpointTypePtrOutput {
	return EndpointType(e).ToEndpointTypeOutputWithContext(ctx).ToEndpointTypePtrOutputWithContext(ctx)
}

func (e EndpointType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EndpointType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EndpointTypeOutput struct{ *pulumi.OutputState }

func (EndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointType)(nil)).Elem()
}

func (o EndpointTypeOutput) ToEndpointTypeOutput() EndpointTypeOutput {
	return o
}

func (o EndpointTypeOutput) ToEndpointTypeOutputWithContext(ctx context.Context) EndpointTypeOutput {
	return o
}

func (o EndpointTypeOutput) ToEndpointTypePtrOutput() EndpointTypePtrOutput {
	return o.ToEndpointTypePtrOutputWithContext(context.Background())
}

func (o EndpointTypeOutput) ToEndpointTypePtrOutputWithContext(ctx context.Context) EndpointTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointType) *EndpointType {
		return &v
	}).(EndpointTypePtrOutput)
}

func (o EndpointTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EndpointTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EndpointTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EndpointTypePtrOutput struct{ *pulumi.OutputState }

func (EndpointTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointType)(nil)).Elem()
}

func (o EndpointTypePtrOutput) ToEndpointTypePtrOutput() EndpointTypePtrOutput {
	return o
}

func (o EndpointTypePtrOutput) ToEndpointTypePtrOutputWithContext(ctx context.Context) EndpointTypePtrOutput {
	return o
}

func (o EndpointTypePtrOutput) Elem() EndpointTypeOutput {
	return o.ApplyT(func(v *EndpointType) EndpointType {
		if v != nil {
			return *v
		}
		var ret EndpointType
		return ret
	}).(EndpointTypeOutput)
}

func (o EndpointTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EndpointType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EndpointTypeInput is an input type that accepts values of the EndpointType enum
// A concrete instance of `EndpointTypeInput` can be one of the following:
//
//	EndpointTypeSrc
//	EndpointTypeDst
type EndpointTypeInput interface {
	pulumi.Input

	ToEndpointTypeOutput() EndpointTypeOutput
	ToEndpointTypeOutputWithContext(context.Context) EndpointTypeOutput
}

var endpointTypePtrType = reflect.TypeOf((**EndpointType)(nil)).Elem()

type EndpointTypePtrInput interface {
	pulumi.Input

	ToEndpointTypePtrOutput() EndpointTypePtrOutput
	ToEndpointTypePtrOutputWithContext(context.Context) EndpointTypePtrOutput
}

type endpointTypePtr string

func EndpointTypePtr(v string) EndpointTypePtrInput {
	return (*endpointTypePtr)(&v)
}

func (*endpointTypePtr) ElementType() reflect.Type {
	return endpointTypePtrType
}

func (in *endpointTypePtr) ToEndpointTypePtrOutput() EndpointTypePtrOutput {
	return pulumi.ToOutput(in).(EndpointTypePtrOutput)
}

func (in *endpointTypePtr) ToEndpointTypePtrOutputWithContext(ctx context.Context) EndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EndpointTypePtrOutput)
}

// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault
type KeySource string

const (
	// Microsoft-managed key encryption
	KeySource_Microsoft_NetApp = KeySource("Microsoft.NetApp")
	// Customer-managed key encryption
	KeySource_Microsoft_KeyVault = KeySource("Microsoft.KeyVault")
)

func (KeySource) ElementType() reflect.Type {
	return reflect.TypeOf((*KeySource)(nil)).Elem()
}

func (e KeySource) ToKeySourceOutput() KeySourceOutput {
	return pulumi.ToOutput(e).(KeySourceOutput)
}

func (e KeySource) ToKeySourceOutputWithContext(ctx context.Context) KeySourceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(KeySourceOutput)
}

func (e KeySource) ToKeySourcePtrOutput() KeySourcePtrOutput {
	return e.ToKeySourcePtrOutputWithContext(context.Background())
}

func (e KeySource) ToKeySourcePtrOutputWithContext(ctx context.Context) KeySourcePtrOutput {
	return KeySource(e).ToKeySourceOutputWithContext(ctx).ToKeySourcePtrOutputWithContext(ctx)
}

func (e KeySource) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeySource) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeySource) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e KeySource) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type KeySourceOutput struct{ *pulumi.OutputState }

func (KeySourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeySource)(nil)).Elem()
}

func (o KeySourceOutput) ToKeySourceOutput() KeySourceOutput {
	return o
}

func (o KeySourceOutput) ToKeySourceOutputWithContext(ctx context.Context) KeySourceOutput {
	return o
}

func (o KeySourceOutput) ToKeySourcePtrOutput() KeySourcePtrOutput {
	return o.ToKeySourcePtrOutputWithContext(context.Background())
}

func (o KeySourceOutput) ToKeySourcePtrOutputWithContext(ctx context.Context) KeySourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeySource) *KeySource {
		return &v
	}).(KeySourcePtrOutput)
}

func (o KeySourceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o KeySourceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeySource) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o KeySourceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeySourceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e KeySource) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type KeySourcePtrOutput struct{ *pulumi.OutputState }

func (KeySourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeySource)(nil)).Elem()
}

func (o KeySourcePtrOutput) ToKeySourcePtrOutput() KeySourcePtrOutput {
	return o
}

func (o KeySourcePtrOutput) ToKeySourcePtrOutputWithContext(ctx context.Context) KeySourcePtrOutput {
	return o
}

func (o KeySourcePtrOutput) Elem() KeySourceOutput {
	return o.ApplyT(func(v *KeySource) KeySource {
		if v != nil {
			return *v
		}
		var ret KeySource
		return ret
	}).(KeySourceOutput)
}

func (o KeySourcePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o KeySourcePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *KeySource) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// KeySourceInput is an input type that accepts values of the KeySource enum
// A concrete instance of `KeySourceInput` can be one of the following:
//
//	KeySource_Microsoft_NetApp
//	KeySource_Microsoft_KeyVault
type KeySourceInput interface {
	pulumi.Input

	ToKeySourceOutput() KeySourceOutput
	ToKeySourceOutputWithContext(context.Context) KeySourceOutput
}

var keySourcePtrType = reflect.TypeOf((**KeySource)(nil)).Elem()

type KeySourcePtrInput interface {
	pulumi.Input

	ToKeySourcePtrOutput() KeySourcePtrOutput
	ToKeySourcePtrOutputWithContext(context.Context) KeySourcePtrOutput
}

type keySourcePtr string

func KeySourcePtr(v string) KeySourcePtrInput {
	return (*keySourcePtr)(&v)
}

func (*keySourcePtr) ElementType() reflect.Type {
	return keySourcePtrType
}

func (in *keySourcePtr) ToKeySourcePtrOutput() KeySourcePtrOutput {
	return pulumi.ToOutput(in).(KeySourcePtrOutput)
}

func (in *keySourcePtr) ToKeySourcePtrOutputWithContext(ctx context.Context) KeySourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(KeySourcePtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned,UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// Basic network, or Standard features available to the volume.
type NetworkFeatures string

const (
	// Basic network feature.
	NetworkFeaturesBasic = NetworkFeatures("Basic")
	// Standard network feature.
	NetworkFeaturesStandard = NetworkFeatures("Standard")
)

func (NetworkFeatures) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkFeatures)(nil)).Elem()
}

func (e NetworkFeatures) ToNetworkFeaturesOutput() NetworkFeaturesOutput {
	return pulumi.ToOutput(e).(NetworkFeaturesOutput)
}

func (e NetworkFeatures) ToNetworkFeaturesOutputWithContext(ctx context.Context) NetworkFeaturesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkFeaturesOutput)
}

func (e NetworkFeatures) ToNetworkFeaturesPtrOutput() NetworkFeaturesPtrOutput {
	return e.ToNetworkFeaturesPtrOutputWithContext(context.Background())
}

func (e NetworkFeatures) ToNetworkFeaturesPtrOutputWithContext(ctx context.Context) NetworkFeaturesPtrOutput {
	return NetworkFeatures(e).ToNetworkFeaturesOutputWithContext(ctx).ToNetworkFeaturesPtrOutputWithContext(ctx)
}

func (e NetworkFeatures) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkFeatures) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkFeatures) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkFeatures) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkFeaturesOutput struct{ *pulumi.OutputState }

func (NetworkFeaturesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkFeatures)(nil)).Elem()
}

func (o NetworkFeaturesOutput) ToNetworkFeaturesOutput() NetworkFeaturesOutput {
	return o
}

func (o NetworkFeaturesOutput) ToNetworkFeaturesOutputWithContext(ctx context.Context) NetworkFeaturesOutput {
	return o
}

func (o NetworkFeaturesOutput) ToNetworkFeaturesPtrOutput() NetworkFeaturesPtrOutput {
	return o.ToNetworkFeaturesPtrOutputWithContext(context.Background())
}

func (o NetworkFeaturesOutput) ToNetworkFeaturesPtrOutputWithContext(ctx context.Context) NetworkFeaturesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkFeatures) *NetworkFeatures {
		return &v
	}).(NetworkFeaturesPtrOutput)
}

func (o NetworkFeaturesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkFeaturesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkFeatures) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkFeaturesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkFeaturesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkFeatures) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkFeaturesPtrOutput struct{ *pulumi.OutputState }

func (NetworkFeaturesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFeatures)(nil)).Elem()
}

func (o NetworkFeaturesPtrOutput) ToNetworkFeaturesPtrOutput() NetworkFeaturesPtrOutput {
	return o
}

func (o NetworkFeaturesPtrOutput) ToNetworkFeaturesPtrOutputWithContext(ctx context.Context) NetworkFeaturesPtrOutput {
	return o
}

func (o NetworkFeaturesPtrOutput) Elem() NetworkFeaturesOutput {
	return o.ApplyT(func(v *NetworkFeatures) NetworkFeatures {
		if v != nil {
			return *v
		}
		var ret NetworkFeatures
		return ret
	}).(NetworkFeaturesOutput)
}

func (o NetworkFeaturesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkFeaturesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkFeatures) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkFeaturesInput is an input type that accepts values of the NetworkFeatures enum
// A concrete instance of `NetworkFeaturesInput` can be one of the following:
//
//	NetworkFeaturesBasic
//	NetworkFeaturesStandard
type NetworkFeaturesInput interface {
	pulumi.Input

	ToNetworkFeaturesOutput() NetworkFeaturesOutput
	ToNetworkFeaturesOutputWithContext(context.Context) NetworkFeaturesOutput
}

var networkFeaturesPtrType = reflect.TypeOf((**NetworkFeatures)(nil)).Elem()

type NetworkFeaturesPtrInput interface {
	pulumi.Input

	ToNetworkFeaturesPtrOutput() NetworkFeaturesPtrOutput
	ToNetworkFeaturesPtrOutputWithContext(context.Context) NetworkFeaturesPtrOutput
}

type networkFeaturesPtr string

func NetworkFeaturesPtr(v string) NetworkFeaturesPtrInput {
	return (*networkFeaturesPtr)(&v)
}

func (*networkFeaturesPtr) ElementType() reflect.Type {
	return networkFeaturesPtrType
}

func (in *networkFeaturesPtr) ToNetworkFeaturesPtrOutput() NetworkFeaturesPtrOutput {
	return pulumi.ToOutput(in).(NetworkFeaturesPtrOutput)
}

func (in *networkFeaturesPtr) ToNetworkFeaturesPtrOutputWithContext(ctx context.Context) NetworkFeaturesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkFeaturesPtrOutput)
}

// The qos type of the pool
type QosType string

const (
	// qos type Auto
	QosTypeAuto = QosType("Auto")
	// qos type Manual
	QosTypeManual = QosType("Manual")
)

func (QosType) ElementType() reflect.Type {
	return reflect.TypeOf((*QosType)(nil)).Elem()
}

func (e QosType) ToQosTypeOutput() QosTypeOutput {
	return pulumi.ToOutput(e).(QosTypeOutput)
}

func (e QosType) ToQosTypeOutputWithContext(ctx context.Context) QosTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(QosTypeOutput)
}

func (e QosType) ToQosTypePtrOutput() QosTypePtrOutput {
	return e.ToQosTypePtrOutputWithContext(context.Background())
}

func (e QosType) ToQosTypePtrOutputWithContext(ctx context.Context) QosTypePtrOutput {
	return QosType(e).ToQosTypeOutputWithContext(ctx).ToQosTypePtrOutputWithContext(ctx)
}

func (e QosType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e QosType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e QosType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e QosType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type QosTypeOutput struct{ *pulumi.OutputState }

func (QosTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QosType)(nil)).Elem()
}

func (o QosTypeOutput) ToQosTypeOutput() QosTypeOutput {
	return o
}

func (o QosTypeOutput) ToQosTypeOutputWithContext(ctx context.Context) QosTypeOutput {
	return o
}

func (o QosTypeOutput) ToQosTypePtrOutput() QosTypePtrOutput {
	return o.ToQosTypePtrOutputWithContext(context.Background())
}

func (o QosTypeOutput) ToQosTypePtrOutputWithContext(ctx context.Context) QosTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QosType) *QosType {
		return &v
	}).(QosTypePtrOutput)
}

func (o QosTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o QosTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QosType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o QosTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QosTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QosType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type QosTypePtrOutput struct{ *pulumi.OutputState }

func (QosTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QosType)(nil)).Elem()
}

func (o QosTypePtrOutput) ToQosTypePtrOutput() QosTypePtrOutput {
	return o
}

func (o QosTypePtrOutput) ToQosTypePtrOutputWithContext(ctx context.Context) QosTypePtrOutput {
	return o
}

func (o QosTypePtrOutput) Elem() QosTypeOutput {
	return o.ApplyT(func(v *QosType) QosType {
		if v != nil {
			return *v
		}
		var ret QosType
		return ret
	}).(QosTypeOutput)
}

func (o QosTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QosTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *QosType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// QosTypeInput is an input type that accepts values of the QosType enum
// A concrete instance of `QosTypeInput` can be one of the following:
//
//	QosTypeAuto
//	QosTypeManual
type QosTypeInput interface {
	pulumi.Input

	ToQosTypeOutput() QosTypeOutput
	ToQosTypeOutputWithContext(context.Context) QosTypeOutput
}

var qosTypePtrType = reflect.TypeOf((**QosType)(nil)).Elem()

type QosTypePtrInput interface {
	pulumi.Input

	ToQosTypePtrOutput() QosTypePtrOutput
	ToQosTypePtrOutputWithContext(context.Context) QosTypePtrOutput
}

type qosTypePtr string

func QosTypePtr(v string) QosTypePtrInput {
	return (*qosTypePtr)(&v)
}

func (*qosTypePtr) ElementType() reflect.Type {
	return qosTypePtrType
}

func (in *qosTypePtr) ToQosTypePtrOutput() QosTypePtrOutput {
	return pulumi.ToOutput(in).(QosTypePtrOutput)
}

func (in *qosTypePtr) ToQosTypePtrOutputWithContext(ctx context.Context) QosTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(QosTypePtrOutput)
}

// Schedule
type ReplicationSchedule string

const (
	ReplicationSchedule_10minutely = ReplicationSchedule("_10minutely")
	ReplicationScheduleHourly      = ReplicationSchedule("hourly")
	ReplicationScheduleDaily       = ReplicationSchedule("daily")
)

func (ReplicationSchedule) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationSchedule)(nil)).Elem()
}

func (e ReplicationSchedule) ToReplicationScheduleOutput() ReplicationScheduleOutput {
	return pulumi.ToOutput(e).(ReplicationScheduleOutput)
}

func (e ReplicationSchedule) ToReplicationScheduleOutputWithContext(ctx context.Context) ReplicationScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReplicationScheduleOutput)
}

func (e ReplicationSchedule) ToReplicationSchedulePtrOutput() ReplicationSchedulePtrOutput {
	return e.ToReplicationSchedulePtrOutputWithContext(context.Background())
}

func (e ReplicationSchedule) ToReplicationSchedulePtrOutputWithContext(ctx context.Context) ReplicationSchedulePtrOutput {
	return ReplicationSchedule(e).ToReplicationScheduleOutputWithContext(ctx).ToReplicationSchedulePtrOutputWithContext(ctx)
}

func (e ReplicationSchedule) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReplicationSchedule) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReplicationSchedule) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReplicationSchedule) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReplicationScheduleOutput struct{ *pulumi.OutputState }

func (ReplicationScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationSchedule)(nil)).Elem()
}

func (o ReplicationScheduleOutput) ToReplicationScheduleOutput() ReplicationScheduleOutput {
	return o
}

func (o ReplicationScheduleOutput) ToReplicationScheduleOutputWithContext(ctx context.Context) ReplicationScheduleOutput {
	return o
}

func (o ReplicationScheduleOutput) ToReplicationSchedulePtrOutput() ReplicationSchedulePtrOutput {
	return o.ToReplicationSchedulePtrOutputWithContext(context.Background())
}

func (o ReplicationScheduleOutput) ToReplicationSchedulePtrOutputWithContext(ctx context.Context) ReplicationSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationSchedule) *ReplicationSchedule {
		return &v
	}).(ReplicationSchedulePtrOutput)
}

func (o ReplicationScheduleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReplicationScheduleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReplicationSchedule) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReplicationScheduleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReplicationScheduleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReplicationSchedule) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReplicationSchedulePtrOutput struct{ *pulumi.OutputState }

func (ReplicationSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationSchedule)(nil)).Elem()
}

func (o ReplicationSchedulePtrOutput) ToReplicationSchedulePtrOutput() ReplicationSchedulePtrOutput {
	return o
}

func (o ReplicationSchedulePtrOutput) ToReplicationSchedulePtrOutputWithContext(ctx context.Context) ReplicationSchedulePtrOutput {
	return o
}

func (o ReplicationSchedulePtrOutput) Elem() ReplicationScheduleOutput {
	return o.ApplyT(func(v *ReplicationSchedule) ReplicationSchedule {
		if v != nil {
			return *v
		}
		var ret ReplicationSchedule
		return ret
	}).(ReplicationScheduleOutput)
}

func (o ReplicationSchedulePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReplicationSchedulePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReplicationSchedule) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReplicationScheduleInput is an input type that accepts values of the ReplicationSchedule enum
// A concrete instance of `ReplicationScheduleInput` can be one of the following:
//
//	ReplicationSchedule_10minutely
//	ReplicationScheduleHourly
//	ReplicationScheduleDaily
type ReplicationScheduleInput interface {
	pulumi.Input

	ToReplicationScheduleOutput() ReplicationScheduleOutput
	ToReplicationScheduleOutputWithContext(context.Context) ReplicationScheduleOutput
}

var replicationSchedulePtrType = reflect.TypeOf((**ReplicationSchedule)(nil)).Elem()

type ReplicationSchedulePtrInput interface {
	pulumi.Input

	ToReplicationSchedulePtrOutput() ReplicationSchedulePtrOutput
	ToReplicationSchedulePtrOutputWithContext(context.Context) ReplicationSchedulePtrOutput
}

type replicationSchedulePtr string

func ReplicationSchedulePtr(v string) ReplicationSchedulePtrInput {
	return (*replicationSchedulePtr)(&v)
}

func (*replicationSchedulePtr) ElementType() reflect.Type {
	return replicationSchedulePtrType
}

func (in *replicationSchedulePtr) ToReplicationSchedulePtrOutput() ReplicationSchedulePtrOutput {
	return pulumi.ToOutput(in).(ReplicationSchedulePtrOutput)
}

func (in *replicationSchedulePtr) ToReplicationSchedulePtrOutputWithContext(ctx context.Context) ReplicationSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReplicationSchedulePtrOutput)
}

// The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol
type SecurityStyle string

const (
	SecurityStyleNtfs = SecurityStyle("ntfs")
	SecurityStyleUnix = SecurityStyle("unix")
)

func (SecurityStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityStyle)(nil)).Elem()
}

func (e SecurityStyle) ToSecurityStyleOutput() SecurityStyleOutput {
	return pulumi.ToOutput(e).(SecurityStyleOutput)
}

func (e SecurityStyle) ToSecurityStyleOutputWithContext(ctx context.Context) SecurityStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityStyleOutput)
}

func (e SecurityStyle) ToSecurityStylePtrOutput() SecurityStylePtrOutput {
	return e.ToSecurityStylePtrOutputWithContext(context.Background())
}

func (e SecurityStyle) ToSecurityStylePtrOutputWithContext(ctx context.Context) SecurityStylePtrOutput {
	return SecurityStyle(e).ToSecurityStyleOutputWithContext(ctx).ToSecurityStylePtrOutputWithContext(ctx)
}

func (e SecurityStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityStyleOutput struct{ *pulumi.OutputState }

func (SecurityStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityStyle)(nil)).Elem()
}

func (o SecurityStyleOutput) ToSecurityStyleOutput() SecurityStyleOutput {
	return o
}

func (o SecurityStyleOutput) ToSecurityStyleOutputWithContext(ctx context.Context) SecurityStyleOutput {
	return o
}

func (o SecurityStyleOutput) ToSecurityStylePtrOutput() SecurityStylePtrOutput {
	return o.ToSecurityStylePtrOutputWithContext(context.Background())
}

func (o SecurityStyleOutput) ToSecurityStylePtrOutputWithContext(ctx context.Context) SecurityStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityStyle) *SecurityStyle {
		return &v
	}).(SecurityStylePtrOutput)
}

func (o SecurityStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityStylePtrOutput struct{ *pulumi.OutputState }

func (SecurityStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityStyle)(nil)).Elem()
}

func (o SecurityStylePtrOutput) ToSecurityStylePtrOutput() SecurityStylePtrOutput {
	return o
}

func (o SecurityStylePtrOutput) ToSecurityStylePtrOutputWithContext(ctx context.Context) SecurityStylePtrOutput {
	return o
}

func (o SecurityStylePtrOutput) Elem() SecurityStyleOutput {
	return o.ApplyT(func(v *SecurityStyle) SecurityStyle {
		if v != nil {
			return *v
		}
		var ret SecurityStyle
		return ret
	}).(SecurityStyleOutput)
}

func (o SecurityStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityStyleInput is an input type that accepts values of the SecurityStyle enum
// A concrete instance of `SecurityStyleInput` can be one of the following:
//
//	SecurityStyleNtfs
//	SecurityStyleUnix
type SecurityStyleInput interface {
	pulumi.Input

	ToSecurityStyleOutput() SecurityStyleOutput
	ToSecurityStyleOutputWithContext(context.Context) SecurityStyleOutput
}

var securityStylePtrType = reflect.TypeOf((**SecurityStyle)(nil)).Elem()

type SecurityStylePtrInput interface {
	pulumi.Input

	ToSecurityStylePtrOutput() SecurityStylePtrOutput
	ToSecurityStylePtrOutputWithContext(context.Context) SecurityStylePtrOutput
}

type securityStylePtr string

func SecurityStylePtr(v string) SecurityStylePtrInput {
	return (*securityStylePtr)(&v)
}

func (*securityStylePtr) ElementType() reflect.Type {
	return securityStylePtrType
}

func (in *securityStylePtr) ToSecurityStylePtrOutput() SecurityStylePtrOutput {
	return pulumi.ToOutput(in).(SecurityStylePtrOutput)
}

func (in *securityStylePtr) ToSecurityStylePtrOutputWithContext(ctx context.Context) SecurityStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityStylePtrOutput)
}

// The service level of the file system
type ServiceLevel string

const (
	// Standard service level
	ServiceLevelStandard = ServiceLevel("Standard")
	// Premium service level
	ServiceLevelPremium = ServiceLevel("Premium")
	// Ultra service level
	ServiceLevelUltra = ServiceLevel("Ultra")
	// Zone redundant storage service level
	ServiceLevelStandardZRS = ServiceLevel("StandardZRS")
)

func (ServiceLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevel)(nil)).Elem()
}

func (e ServiceLevel) ToServiceLevelOutput() ServiceLevelOutput {
	return pulumi.ToOutput(e).(ServiceLevelOutput)
}

func (e ServiceLevel) ToServiceLevelOutputWithContext(ctx context.Context) ServiceLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceLevelOutput)
}

func (e ServiceLevel) ToServiceLevelPtrOutput() ServiceLevelPtrOutput {
	return e.ToServiceLevelPtrOutputWithContext(context.Background())
}

func (e ServiceLevel) ToServiceLevelPtrOutputWithContext(ctx context.Context) ServiceLevelPtrOutput {
	return ServiceLevel(e).ToServiceLevelOutputWithContext(ctx).ToServiceLevelPtrOutputWithContext(ctx)
}

func (e ServiceLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceLevelOutput struct{ *pulumi.OutputState }

func (ServiceLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevel)(nil)).Elem()
}

func (o ServiceLevelOutput) ToServiceLevelOutput() ServiceLevelOutput {
	return o
}

func (o ServiceLevelOutput) ToServiceLevelOutputWithContext(ctx context.Context) ServiceLevelOutput {
	return o
}

func (o ServiceLevelOutput) ToServiceLevelPtrOutput() ServiceLevelPtrOutput {
	return o.ToServiceLevelPtrOutputWithContext(context.Background())
}

func (o ServiceLevelOutput) ToServiceLevelPtrOutputWithContext(ctx context.Context) ServiceLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevel) *ServiceLevel {
		return &v
	}).(ServiceLevelPtrOutput)
}

func (o ServiceLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceLevelPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevel)(nil)).Elem()
}

func (o ServiceLevelPtrOutput) ToServiceLevelPtrOutput() ServiceLevelPtrOutput {
	return o
}

func (o ServiceLevelPtrOutput) ToServiceLevelPtrOutputWithContext(ctx context.Context) ServiceLevelPtrOutput {
	return o
}

func (o ServiceLevelPtrOutput) Elem() ServiceLevelOutput {
	return o.ApplyT(func(v *ServiceLevel) ServiceLevel {
		if v != nil {
			return *v
		}
		var ret ServiceLevel
		return ret
	}).(ServiceLevelOutput)
}

func (o ServiceLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceLevelInput is an input type that accepts values of the ServiceLevel enum
// A concrete instance of `ServiceLevelInput` can be one of the following:
//
//	ServiceLevelStandard
//	ServiceLevelPremium
//	ServiceLevelUltra
//	ServiceLevelStandardZRS
type ServiceLevelInput interface {
	pulumi.Input

	ToServiceLevelOutput() ServiceLevelOutput
	ToServiceLevelOutputWithContext(context.Context) ServiceLevelOutput
}

var serviceLevelPtrType = reflect.TypeOf((**ServiceLevel)(nil)).Elem()

type ServiceLevelPtrInput interface {
	pulumi.Input

	ToServiceLevelPtrOutput() ServiceLevelPtrOutput
	ToServiceLevelPtrOutputWithContext(context.Context) ServiceLevelPtrOutput
}

type serviceLevelPtr string

func ServiceLevelPtr(v string) ServiceLevelPtrInput {
	return (*serviceLevelPtr)(&v)
}

func (*serviceLevelPtr) ElementType() reflect.Type {
	return serviceLevelPtrType
}

func (in *serviceLevelPtr) ToServiceLevelPtrOutput() ServiceLevelPtrOutput {
	return pulumi.ToOutput(in).(ServiceLevelPtrOutput)
}

func (in *serviceLevelPtr) ToServiceLevelPtrOutputWithContext(ctx context.Context) ServiceLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceLevelPtrOutput)
}

// Enables access based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume
type SmbAccessBasedEnumeration string

const (
	// smbAccessBasedEnumeration share setting is disabled
	SmbAccessBasedEnumerationDisabled = SmbAccessBasedEnumeration("Disabled")
	// smbAccessBasedEnumeration share setting is enabled
	SmbAccessBasedEnumerationEnabled = SmbAccessBasedEnumeration("Enabled")
)

func (SmbAccessBasedEnumeration) ElementType() reflect.Type {
	return reflect.TypeOf((*SmbAccessBasedEnumeration)(nil)).Elem()
}

func (e SmbAccessBasedEnumeration) ToSmbAccessBasedEnumerationOutput() SmbAccessBasedEnumerationOutput {
	return pulumi.ToOutput(e).(SmbAccessBasedEnumerationOutput)
}

func (e SmbAccessBasedEnumeration) ToSmbAccessBasedEnumerationOutputWithContext(ctx context.Context) SmbAccessBasedEnumerationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SmbAccessBasedEnumerationOutput)
}

func (e SmbAccessBasedEnumeration) ToSmbAccessBasedEnumerationPtrOutput() SmbAccessBasedEnumerationPtrOutput {
	return e.ToSmbAccessBasedEnumerationPtrOutputWithContext(context.Background())
}

func (e SmbAccessBasedEnumeration) ToSmbAccessBasedEnumerationPtrOutputWithContext(ctx context.Context) SmbAccessBasedEnumerationPtrOutput {
	return SmbAccessBasedEnumeration(e).ToSmbAccessBasedEnumerationOutputWithContext(ctx).ToSmbAccessBasedEnumerationPtrOutputWithContext(ctx)
}

func (e SmbAccessBasedEnumeration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SmbAccessBasedEnumeration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SmbAccessBasedEnumeration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SmbAccessBasedEnumeration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SmbAccessBasedEnumerationOutput struct{ *pulumi.OutputState }

func (SmbAccessBasedEnumerationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmbAccessBasedEnumeration)(nil)).Elem()
}

func (o SmbAccessBasedEnumerationOutput) ToSmbAccessBasedEnumerationOutput() SmbAccessBasedEnumerationOutput {
	return o
}

func (o SmbAccessBasedEnumerationOutput) ToSmbAccessBasedEnumerationOutputWithContext(ctx context.Context) SmbAccessBasedEnumerationOutput {
	return o
}

func (o SmbAccessBasedEnumerationOutput) ToSmbAccessBasedEnumerationPtrOutput() SmbAccessBasedEnumerationPtrOutput {
	return o.ToSmbAccessBasedEnumerationPtrOutputWithContext(context.Background())
}

func (o SmbAccessBasedEnumerationOutput) ToSmbAccessBasedEnumerationPtrOutputWithContext(ctx context.Context) SmbAccessBasedEnumerationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SmbAccessBasedEnumeration) *SmbAccessBasedEnumeration {
		return &v
	}).(SmbAccessBasedEnumerationPtrOutput)
}

func (o SmbAccessBasedEnumerationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SmbAccessBasedEnumerationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SmbAccessBasedEnumeration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SmbAccessBasedEnumerationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SmbAccessBasedEnumerationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SmbAccessBasedEnumeration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SmbAccessBasedEnumerationPtrOutput struct{ *pulumi.OutputState }

func (SmbAccessBasedEnumerationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmbAccessBasedEnumeration)(nil)).Elem()
}

func (o SmbAccessBasedEnumerationPtrOutput) ToSmbAccessBasedEnumerationPtrOutput() SmbAccessBasedEnumerationPtrOutput {
	return o
}

func (o SmbAccessBasedEnumerationPtrOutput) ToSmbAccessBasedEnumerationPtrOutputWithContext(ctx context.Context) SmbAccessBasedEnumerationPtrOutput {
	return o
}

func (o SmbAccessBasedEnumerationPtrOutput) Elem() SmbAccessBasedEnumerationOutput {
	return o.ApplyT(func(v *SmbAccessBasedEnumeration) SmbAccessBasedEnumeration {
		if v != nil {
			return *v
		}
		var ret SmbAccessBasedEnumeration
		return ret
	}).(SmbAccessBasedEnumerationOutput)
}

func (o SmbAccessBasedEnumerationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SmbAccessBasedEnumerationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SmbAccessBasedEnumeration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SmbAccessBasedEnumerationInput is an input type that accepts values of the SmbAccessBasedEnumeration enum
// A concrete instance of `SmbAccessBasedEnumerationInput` can be one of the following:
//
//	SmbAccessBasedEnumerationDisabled
//	SmbAccessBasedEnumerationEnabled
type SmbAccessBasedEnumerationInput interface {
	pulumi.Input

	ToSmbAccessBasedEnumerationOutput() SmbAccessBasedEnumerationOutput
	ToSmbAccessBasedEnumerationOutputWithContext(context.Context) SmbAccessBasedEnumerationOutput
}

var smbAccessBasedEnumerationPtrType = reflect.TypeOf((**SmbAccessBasedEnumeration)(nil)).Elem()

type SmbAccessBasedEnumerationPtrInput interface {
	pulumi.Input

	ToSmbAccessBasedEnumerationPtrOutput() SmbAccessBasedEnumerationPtrOutput
	ToSmbAccessBasedEnumerationPtrOutputWithContext(context.Context) SmbAccessBasedEnumerationPtrOutput
}

type smbAccessBasedEnumerationPtr string

func SmbAccessBasedEnumerationPtr(v string) SmbAccessBasedEnumerationPtrInput {
	return (*smbAccessBasedEnumerationPtr)(&v)
}

func (*smbAccessBasedEnumerationPtr) ElementType() reflect.Type {
	return smbAccessBasedEnumerationPtrType
}

func (in *smbAccessBasedEnumerationPtr) ToSmbAccessBasedEnumerationPtrOutput() SmbAccessBasedEnumerationPtrOutput {
	return pulumi.ToOutput(in).(SmbAccessBasedEnumerationPtrOutput)
}

func (in *smbAccessBasedEnumerationPtr) ToSmbAccessBasedEnumerationPtrOutputWithContext(ctx context.Context) SmbAccessBasedEnumerationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SmbAccessBasedEnumerationPtrOutput)
}

// Enables non browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume
type SmbNonBrowsable string

const (
	// smbNonBrowsable share setting is disabled
	SmbNonBrowsableDisabled = SmbNonBrowsable("Disabled")
	// smbNonBrowsable share setting is enabled
	SmbNonBrowsableEnabled = SmbNonBrowsable("Enabled")
)

func (SmbNonBrowsable) ElementType() reflect.Type {
	return reflect.TypeOf((*SmbNonBrowsable)(nil)).Elem()
}

func (e SmbNonBrowsable) ToSmbNonBrowsableOutput() SmbNonBrowsableOutput {
	return pulumi.ToOutput(e).(SmbNonBrowsableOutput)
}

func (e SmbNonBrowsable) ToSmbNonBrowsableOutputWithContext(ctx context.Context) SmbNonBrowsableOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SmbNonBrowsableOutput)
}

func (e SmbNonBrowsable) ToSmbNonBrowsablePtrOutput() SmbNonBrowsablePtrOutput {
	return e.ToSmbNonBrowsablePtrOutputWithContext(context.Background())
}

func (e SmbNonBrowsable) ToSmbNonBrowsablePtrOutputWithContext(ctx context.Context) SmbNonBrowsablePtrOutput {
	return SmbNonBrowsable(e).ToSmbNonBrowsableOutputWithContext(ctx).ToSmbNonBrowsablePtrOutputWithContext(ctx)
}

func (e SmbNonBrowsable) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SmbNonBrowsable) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SmbNonBrowsable) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SmbNonBrowsable) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SmbNonBrowsableOutput struct{ *pulumi.OutputState }

func (SmbNonBrowsableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmbNonBrowsable)(nil)).Elem()
}

func (o SmbNonBrowsableOutput) ToSmbNonBrowsableOutput() SmbNonBrowsableOutput {
	return o
}

func (o SmbNonBrowsableOutput) ToSmbNonBrowsableOutputWithContext(ctx context.Context) SmbNonBrowsableOutput {
	return o
}

func (o SmbNonBrowsableOutput) ToSmbNonBrowsablePtrOutput() SmbNonBrowsablePtrOutput {
	return o.ToSmbNonBrowsablePtrOutputWithContext(context.Background())
}

func (o SmbNonBrowsableOutput) ToSmbNonBrowsablePtrOutputWithContext(ctx context.Context) SmbNonBrowsablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SmbNonBrowsable) *SmbNonBrowsable {
		return &v
	}).(SmbNonBrowsablePtrOutput)
}

func (o SmbNonBrowsableOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SmbNonBrowsableOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SmbNonBrowsable) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SmbNonBrowsableOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SmbNonBrowsableOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SmbNonBrowsable) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SmbNonBrowsablePtrOutput struct{ *pulumi.OutputState }

func (SmbNonBrowsablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmbNonBrowsable)(nil)).Elem()
}

func (o SmbNonBrowsablePtrOutput) ToSmbNonBrowsablePtrOutput() SmbNonBrowsablePtrOutput {
	return o
}

func (o SmbNonBrowsablePtrOutput) ToSmbNonBrowsablePtrOutputWithContext(ctx context.Context) SmbNonBrowsablePtrOutput {
	return o
}

func (o SmbNonBrowsablePtrOutput) Elem() SmbNonBrowsableOutput {
	return o.ApplyT(func(v *SmbNonBrowsable) SmbNonBrowsable {
		if v != nil {
			return *v
		}
		var ret SmbNonBrowsable
		return ret
	}).(SmbNonBrowsableOutput)
}

func (o SmbNonBrowsablePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SmbNonBrowsablePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SmbNonBrowsable) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SmbNonBrowsableInput is an input type that accepts values of the SmbNonBrowsable enum
// A concrete instance of `SmbNonBrowsableInput` can be one of the following:
//
//	SmbNonBrowsableDisabled
//	SmbNonBrowsableEnabled
type SmbNonBrowsableInput interface {
	pulumi.Input

	ToSmbNonBrowsableOutput() SmbNonBrowsableOutput
	ToSmbNonBrowsableOutputWithContext(context.Context) SmbNonBrowsableOutput
}

var smbNonBrowsablePtrType = reflect.TypeOf((**SmbNonBrowsable)(nil)).Elem()

type SmbNonBrowsablePtrInput interface {
	pulumi.Input

	ToSmbNonBrowsablePtrOutput() SmbNonBrowsablePtrOutput
	ToSmbNonBrowsablePtrOutputWithContext(context.Context) SmbNonBrowsablePtrOutput
}

type smbNonBrowsablePtr string

func SmbNonBrowsablePtr(v string) SmbNonBrowsablePtrInput {
	return (*smbNonBrowsablePtr)(&v)
}

func (*smbNonBrowsablePtr) ElementType() reflect.Type {
	return smbNonBrowsablePtrType
}

func (in *smbNonBrowsablePtr) ToSmbNonBrowsablePtrOutput() SmbNonBrowsablePtrOutput {
	return pulumi.ToOutput(in).(SmbNonBrowsablePtrOutput)
}

func (in *smbNonBrowsablePtr) ToSmbNonBrowsablePtrOutputWithContext(ctx context.Context) SmbNonBrowsablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SmbNonBrowsablePtrOutput)
}

// Type of quota
type Type string

const (
	// Default user quota
	TypeDefaultUserQuota = Type("DefaultUserQuota")
	// Default group quota
	TypeDefaultGroupQuota = Type("DefaultGroupQuota")
	// Individual user quota
	TypeIndividualUserQuota = Type("IndividualUserQuota")
	// Individual group quota
	TypeIndividualGroupQuota = Type("IndividualGroupQuota")
)

func (Type) ElementType() reflect.Type {
	return reflect.TypeOf((*Type)(nil)).Elem()
}

func (e Type) ToTypeOutput() TypeOutput {
	return pulumi.ToOutput(e).(TypeOutput)
}

func (e Type) ToTypeOutputWithContext(ctx context.Context) TypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TypeOutput)
}

func (e Type) ToTypePtrOutput() TypePtrOutput {
	return e.ToTypePtrOutputWithContext(context.Background())
}

func (e Type) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return Type(e).ToTypeOutputWithContext(ctx).ToTypePtrOutputWithContext(ctx)
}

func (e Type) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Type) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Type) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Type) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TypeOutput struct{ *pulumi.OutputState }

func (TypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Type)(nil)).Elem()
}

func (o TypeOutput) ToTypeOutput() TypeOutput {
	return o
}

func (o TypeOutput) ToTypeOutputWithContext(ctx context.Context) TypeOutput {
	return o
}

func (o TypeOutput) ToTypePtrOutput() TypePtrOutput {
	return o.ToTypePtrOutputWithContext(context.Background())
}

func (o TypeOutput) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Type) *Type {
		return &v
	}).(TypePtrOutput)
}

func (o TypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Type) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Type) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TypePtrOutput struct{ *pulumi.OutputState }

func (TypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Type)(nil)).Elem()
}

func (o TypePtrOutput) ToTypePtrOutput() TypePtrOutput {
	return o
}

func (o TypePtrOutput) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return o
}

func (o TypePtrOutput) Elem() TypeOutput {
	return o.ApplyT(func(v *Type) Type {
		if v != nil {
			return *v
		}
		var ret Type
		return ret
	}).(TypeOutput)
}

func (o TypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Type) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TypeInput is an input type that accepts values of the Type enum
// A concrete instance of `TypeInput` can be one of the following:
//
//	TypeDefaultUserQuota
//	TypeDefaultGroupQuota
//	TypeIndividualUserQuota
//	TypeIndividualGroupQuota
type TypeInput interface {
	pulumi.Input

	ToTypeOutput() TypeOutput
	ToTypeOutputWithContext(context.Context) TypeOutput
}

var typePtrType = reflect.TypeOf((**Type)(nil)).Elem()

type TypePtrInput interface {
	pulumi.Input

	ToTypePtrOutput() TypePtrOutput
	ToTypePtrOutputWithContext(context.Context) TypePtrOutput
}

type typePtr string

func TypePtr(v string) TypePtrInput {
	return (*typePtr)(&v)
}

func (*typePtr) ElementType() reflect.Type {
	return typePtrType
}

func (in *typePtr) ToTypePtrOutput() TypePtrOutput {
	return pulumi.ToOutput(in).(TypePtrOutput)
}

func (in *typePtr) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationTypeOutput{})
	pulumi.RegisterOutputType(ApplicationTypePtrOutput{})
	pulumi.RegisterOutputType(AvsDataStoreOutput{})
	pulumi.RegisterOutputType(AvsDataStorePtrOutput{})
	pulumi.RegisterOutputType(ChownModeOutput{})
	pulumi.RegisterOutputType(ChownModePtrOutput{})
	pulumi.RegisterOutputType(EnableSubvolumesOutput{})
	pulumi.RegisterOutputType(EnableSubvolumesPtrOutput{})
	pulumi.RegisterOutputType(EncryptionKeySourceOutput{})
	pulumi.RegisterOutputType(EncryptionKeySourcePtrOutput{})
	pulumi.RegisterOutputType(EncryptionTypeOutput{})
	pulumi.RegisterOutputType(EncryptionTypePtrOutput{})
	pulumi.RegisterOutputType(EndpointTypeOutput{})
	pulumi.RegisterOutputType(EndpointTypePtrOutput{})
	pulumi.RegisterOutputType(KeySourceOutput{})
	pulumi.RegisterOutputType(KeySourcePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(NetworkFeaturesOutput{})
	pulumi.RegisterOutputType(NetworkFeaturesPtrOutput{})
	pulumi.RegisterOutputType(QosTypeOutput{})
	pulumi.RegisterOutputType(QosTypePtrOutput{})
	pulumi.RegisterOutputType(ReplicationScheduleOutput{})
	pulumi.RegisterOutputType(ReplicationSchedulePtrOutput{})
	pulumi.RegisterOutputType(SecurityStyleOutput{})
	pulumi.RegisterOutputType(SecurityStylePtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelOutput{})
	pulumi.RegisterOutputType(ServiceLevelPtrOutput{})
	pulumi.RegisterOutputType(SmbAccessBasedEnumerationOutput{})
	pulumi.RegisterOutputType(SmbAccessBasedEnumerationPtrOutput{})
	pulumi.RegisterOutputType(SmbNonBrowsableOutput{})
	pulumi.RegisterOutputType(SmbNonBrowsablePtrOutput{})
	pulumi.RegisterOutputType(TypeOutput{})
	pulumi.RegisterOutputType(TypePtrOutput{})
}
