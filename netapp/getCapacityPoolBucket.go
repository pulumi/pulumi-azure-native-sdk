// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package netapp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the details of the specified volume's bucket. A bucket allows additional services, such as AI services, connect to the volume data contained in those buckets.
//
// Uses Azure REST API version 2025-01-01-preview.
//
// Other available API versions: 2025-03-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native netapp [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupCapacityPoolBucket(ctx *pulumi.Context, args *LookupCapacityPoolBucketArgs, opts ...pulumi.InvokeOption) (*LookupCapacityPoolBucketResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupCapacityPoolBucketResult
	err := ctx.Invoke("azure-native:netapp:getCapacityPoolBucket", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupCapacityPoolBucketArgs struct {
	// The name of the NetApp account
	AccountName string `pulumi:"accountName"`
	// The name of the bucket
	BucketName string `pulumi:"bucketName"`
	// The name of the capacity pool
	PoolName string `pulumi:"poolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the volume
	VolumeName string `pulumi:"volumeName"`
}

// Bucket resource
type LookupCapacityPoolBucketResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// File System user having access to volume data. For Unix, this is the user's uid and gid. For Windows, this is the user's username. Note that the Unix and Windows user details are mutually exclusive, meaning one or other must be supplied, but not both.
	FileSystemUser *FileSystemUserResponse `pulumi:"fileSystemUser"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The volume path mounted inside the bucket. The default is the root path '/' if no value is provided when the bucket is created.
	Path *string `pulumi:"path"`
	// Provisioning state of the resource
	ProvisioningState string `pulumi:"provisioningState"`
	// Properties of the server managing the lifecycle of volume buckets
	Server *BucketServerPropertiesResponse `pulumi:"server"`
	// The bucket credentials status. There states:
	//
	// "NoCredentialsSet": Access and Secret key pair have not been generated.
	// "CredentialsExpired": Access and Secret key pair have expired.
	// "Active": The certificate has been installed and credentials are unexpired.
	Status string `pulumi:"status"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupCapacityPoolBucketResult
func (val *LookupCapacityPoolBucketResult) Defaults() *LookupCapacityPoolBucketResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Path == nil {
		path_ := "/"
		tmp.Path = &path_
	}
	return &tmp
}
func LookupCapacityPoolBucketOutput(ctx *pulumi.Context, args LookupCapacityPoolBucketOutputArgs, opts ...pulumi.InvokeOption) LookupCapacityPoolBucketResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCapacityPoolBucketResultOutput, error) {
			args := v.(LookupCapacityPoolBucketArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:netapp:getCapacityPoolBucket", args, LookupCapacityPoolBucketResultOutput{}, options).(LookupCapacityPoolBucketResultOutput), nil
		}).(LookupCapacityPoolBucketResultOutput)
}

type LookupCapacityPoolBucketOutputArgs struct {
	// The name of the NetApp account
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the bucket
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The name of the capacity pool
	PoolName pulumi.StringInput `pulumi:"poolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the volume
	VolumeName pulumi.StringInput `pulumi:"volumeName"`
}

func (LookupCapacityPoolBucketOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCapacityPoolBucketArgs)(nil)).Elem()
}

// Bucket resource
type LookupCapacityPoolBucketResultOutput struct{ *pulumi.OutputState }

func (LookupCapacityPoolBucketResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCapacityPoolBucketResult)(nil)).Elem()
}

func (o LookupCapacityPoolBucketResultOutput) ToLookupCapacityPoolBucketResultOutput() LookupCapacityPoolBucketResultOutput {
	return o
}

func (o LookupCapacityPoolBucketResultOutput) ToLookupCapacityPoolBucketResultOutputWithContext(ctx context.Context) LookupCapacityPoolBucketResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupCapacityPoolBucketResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCapacityPoolBucketResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// File System user having access to volume data. For Unix, this is the user's uid and gid. For Windows, this is the user's username. Note that the Unix and Windows user details are mutually exclusive, meaning one or other must be supplied, but not both.
func (o LookupCapacityPoolBucketResultOutput) FileSystemUser() FileSystemUserResponsePtrOutput {
	return o.ApplyT(func(v LookupCapacityPoolBucketResult) *FileSystemUserResponse { return v.FileSystemUser }).(FileSystemUserResponsePtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupCapacityPoolBucketResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCapacityPoolBucketResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupCapacityPoolBucketResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCapacityPoolBucketResult) string { return v.Name }).(pulumi.StringOutput)
}

// The volume path mounted inside the bucket. The default is the root path '/' if no value is provided when the bucket is created.
func (o LookupCapacityPoolBucketResultOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCapacityPoolBucketResult) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Provisioning state of the resource
func (o LookupCapacityPoolBucketResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCapacityPoolBucketResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Properties of the server managing the lifecycle of volume buckets
func (o LookupCapacityPoolBucketResultOutput) Server() BucketServerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupCapacityPoolBucketResult) *BucketServerPropertiesResponse { return v.Server }).(BucketServerPropertiesResponsePtrOutput)
}

// The bucket credentials status. There states:
//
// "NoCredentialsSet": Access and Secret key pair have not been generated.
// "CredentialsExpired": Access and Secret key pair have expired.
// "Active": The certificate has been installed and credentials are unexpired.
func (o LookupCapacityPoolBucketResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCapacityPoolBucketResult) string { return v.Status }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupCapacityPoolBucketResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupCapacityPoolBucketResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupCapacityPoolBucketResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCapacityPoolBucketResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCapacityPoolBucketResultOutput{})
}
