// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230501preview

// Application Type
type ApplicationType string

const (
	ApplicationType_SAP_HANA = ApplicationType("SAP-HANA")
	ApplicationTypeORACLE    = ApplicationType("ORACLE")
)

// Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose
type AvsDataStore string

const (
	// avsDataStore is enabled
	AvsDataStoreEnabled = AvsDataStore("Enabled")
	// avsDataStore is disabled
	AvsDataStoreDisabled = AvsDataStore("Disabled")
)

// This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.
type ChownMode string

const (
	ChownModeRestricted   = ChownMode("Restricted")
	ChownModeUnrestricted = ChownMode("Unrestricted")
)

// coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are:
//
//	Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.
//	OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.
//	Never - No client-driven data is pulled from cool tier to standard storage.
type CoolAccessRetrievalPolicy string

const (
	CoolAccessRetrievalPolicyDefault = CoolAccessRetrievalPolicy("Default")
	CoolAccessRetrievalPolicyOnRead  = CoolAccessRetrievalPolicy("OnRead")
	CoolAccessRetrievalPolicyNever   = CoolAccessRetrievalPolicy("Never")
)

// Flag indicating whether subvolume operations are enabled on the volume
type EnableSubvolumes string

const (
	// subvolumes are enabled
	EnableSubvolumesEnabled = EnableSubvolumes("Enabled")
	// subvolumes are not enabled
	EnableSubvolumesDisabled = EnableSubvolumes("Disabled")
)

// Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'
type EncryptionKeySource string

const (
	// Microsoft-managed key encryption
	EncryptionKeySource_Microsoft_NetApp = EncryptionKeySource("Microsoft.NetApp")
	// Customer-managed key encryption
	EncryptionKeySource_Microsoft_KeyVault = EncryptionKeySource("Microsoft.KeyVault")
)

// Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.
type EncryptionType string

const (
	// EncryptionType Single, volumes will use single encryption at rest
	EncryptionTypeSingle = EncryptionType("Single")
	// EncryptionType Double, volumes will use double encryption at rest
	EncryptionTypeDouble = EncryptionType("Double")
)

// Indicates whether the local volume is the source or destination for the Volume Replication
type EndpointType string

const (
	EndpointTypeSrc = EndpointType("src")
	EndpointTypeDst = EndpointType("dst")
)

// The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault
type KeySource string

const (
	// Microsoft-managed key encryption
	KeySource_Microsoft_NetApp = KeySource("Microsoft.NetApp")
	// Customer-managed key encryption
	KeySource_Microsoft_KeyVault = KeySource("Microsoft.KeyVault")
)

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned,UserAssigned")
)

// Network features available to the volume, or current state of update.
type NetworkFeatures string

const (
	// Basic network features.
	NetworkFeaturesBasic = NetworkFeatures("Basic")
	// Standard network features.
	NetworkFeaturesStandard = NetworkFeatures("Standard")
	// Updating from Basic to Standard network features.
	NetworkFeatures_Basic_Standard = NetworkFeatures("Basic_Standard")
	// Updating from Standard to Basic network features.
	NetworkFeatures_Standard_Basic = NetworkFeatures("Standard_Basic")
)

// The qos type of the pool
type QosType string

const (
	// qos type Auto
	QosTypeAuto = QosType("Auto")
	// qos type Manual
	QosTypeManual = QosType("Manual")
)

// Schedule
type ReplicationSchedule string

const (
	ReplicationSchedule_10minutely = ReplicationSchedule("_10minutely")
	ReplicationScheduleHourly      = ReplicationSchedule("hourly")
	ReplicationScheduleDaily       = ReplicationSchedule("daily")
)

// The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol
type SecurityStyle string

const (
	SecurityStyleNtfs = SecurityStyle("ntfs")
	SecurityStyleUnix = SecurityStyle("unix")
)

// The service level of the file system
type ServiceLevel string

const (
	// Standard service level
	ServiceLevelStandard = ServiceLevel("Standard")
	// Premium service level
	ServiceLevelPremium = ServiceLevel("Premium")
	// Ultra service level
	ServiceLevelUltra = ServiceLevel("Ultra")
	// Zone redundant storage service level
	ServiceLevelStandardZRS = ServiceLevel("StandardZRS")
)

// Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume
type SmbAccessBasedEnumeration string

const (
	// smbAccessBasedEnumeration share setting is disabled
	SmbAccessBasedEnumerationDisabled = SmbAccessBasedEnumeration("Disabled")
	// smbAccessBasedEnumeration share setting is enabled
	SmbAccessBasedEnumerationEnabled = SmbAccessBasedEnumeration("Enabled")
)

// Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume
type SmbNonBrowsable string

const (
	// smbNonBrowsable share setting is disabled
	SmbNonBrowsableDisabled = SmbNonBrowsable("Disabled")
	// smbNonBrowsable share setting is enabled
	SmbNonBrowsableEnabled = SmbNonBrowsable("Enabled")
)

// Type of quota
type Type string

const (
	// Default user quota
	TypeDefaultUserQuota = Type("DefaultUserQuota")
	// Default group quota
	TypeDefaultGroupQuota = Type("DefaultGroupQuota")
	// Individual user quota
	TypeIndividualUserQuota = Type("IndividualUserQuota")
	// Individual group quota
	TypeIndividualGroupQuota = Type("IndividualGroupQuota")
)

func init() {
}
