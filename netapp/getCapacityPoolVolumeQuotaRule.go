// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package netapp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get details of the specified quota rule
//
// Uses Azure REST API version 2024-09-01.
//
// Other available API versions: 2022-11-01, 2022-11-01-preview, 2023-05-01, 2023-05-01-preview, 2023-07-01, 2023-07-01-preview, 2023-11-01, 2023-11-01-preview, 2024-01-01, 2024-03-01, 2024-03-01-preview, 2024-05-01, 2024-05-01-preview, 2024-07-01, 2024-07-01-preview, 2024-09-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native netapp [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupCapacityPoolVolumeQuotaRule(ctx *pulumi.Context, args *LookupCapacityPoolVolumeQuotaRuleArgs, opts ...pulumi.InvokeOption) (*LookupCapacityPoolVolumeQuotaRuleResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupCapacityPoolVolumeQuotaRuleResult
	err := ctx.Invoke("azure-native:netapp:getCapacityPoolVolumeQuotaRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCapacityPoolVolumeQuotaRuleArgs struct {
	// The name of the NetApp account
	AccountName string `pulumi:"accountName"`
	// The name of the capacity pool
	PoolName string `pulumi:"poolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the volume
	VolumeName string `pulumi:"volumeName"`
	// The name of volume quota rule
	VolumeQuotaRuleName string `pulumi:"volumeQuotaRuleName"`
}

// Quota Rule of a Volume
type LookupCapacityPoolVolumeQuotaRuleResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Gets the status of the VolumeQuotaRule at the time the operation was called.
	ProvisioningState string `pulumi:"provisioningState"`
	// Size of quota
	QuotaSizeInKiBs *float64 `pulumi:"quotaSizeInKiBs"`
	// UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>
	QuotaTarget *string `pulumi:"quotaTarget"`
	// Type of quota
	QuotaType *string `pulumi:"quotaType"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupCapacityPoolVolumeQuotaRuleOutput(ctx *pulumi.Context, args LookupCapacityPoolVolumeQuotaRuleOutputArgs, opts ...pulumi.InvokeOption) LookupCapacityPoolVolumeQuotaRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCapacityPoolVolumeQuotaRuleResultOutput, error) {
			args := v.(LookupCapacityPoolVolumeQuotaRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:netapp:getCapacityPoolVolumeQuotaRule", args, LookupCapacityPoolVolumeQuotaRuleResultOutput{}, options).(LookupCapacityPoolVolumeQuotaRuleResultOutput), nil
		}).(LookupCapacityPoolVolumeQuotaRuleResultOutput)
}

type LookupCapacityPoolVolumeQuotaRuleOutputArgs struct {
	// The name of the NetApp account
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the capacity pool
	PoolName pulumi.StringInput `pulumi:"poolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the volume
	VolumeName pulumi.StringInput `pulumi:"volumeName"`
	// The name of volume quota rule
	VolumeQuotaRuleName pulumi.StringInput `pulumi:"volumeQuotaRuleName"`
}

func (LookupCapacityPoolVolumeQuotaRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCapacityPoolVolumeQuotaRuleArgs)(nil)).Elem()
}

// Quota Rule of a Volume
type LookupCapacityPoolVolumeQuotaRuleResultOutput struct{ *pulumi.OutputState }

func (LookupCapacityPoolVolumeQuotaRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCapacityPoolVolumeQuotaRuleResult)(nil)).Elem()
}

func (o LookupCapacityPoolVolumeQuotaRuleResultOutput) ToLookupCapacityPoolVolumeQuotaRuleResultOutput() LookupCapacityPoolVolumeQuotaRuleResultOutput {
	return o
}

func (o LookupCapacityPoolVolumeQuotaRuleResultOutput) ToLookupCapacityPoolVolumeQuotaRuleResultOutputWithContext(ctx context.Context) LookupCapacityPoolVolumeQuotaRuleResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupCapacityPoolVolumeQuotaRuleResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCapacityPoolVolumeQuotaRuleResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupCapacityPoolVolumeQuotaRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCapacityPoolVolumeQuotaRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupCapacityPoolVolumeQuotaRuleResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCapacityPoolVolumeQuotaRuleResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupCapacityPoolVolumeQuotaRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCapacityPoolVolumeQuotaRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

// Gets the status of the VolumeQuotaRule at the time the operation was called.
func (o LookupCapacityPoolVolumeQuotaRuleResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCapacityPoolVolumeQuotaRuleResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Size of quota
func (o LookupCapacityPoolVolumeQuotaRuleResultOutput) QuotaSizeInKiBs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupCapacityPoolVolumeQuotaRuleResult) *float64 { return v.QuotaSizeInKiBs }).(pulumi.Float64PtrOutput)
}

// UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>
func (o LookupCapacityPoolVolumeQuotaRuleResultOutput) QuotaTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCapacityPoolVolumeQuotaRuleResult) *string { return v.QuotaTarget }).(pulumi.StringPtrOutput)
}

// Type of quota
func (o LookupCapacityPoolVolumeQuotaRuleResultOutput) QuotaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCapacityPoolVolumeQuotaRuleResult) *string { return v.QuotaType }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupCapacityPoolVolumeQuotaRuleResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupCapacityPoolVolumeQuotaRuleResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupCapacityPoolVolumeQuotaRuleResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCapacityPoolVolumeQuotaRuleResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupCapacityPoolVolumeQuotaRuleResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCapacityPoolVolumeQuotaRuleResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCapacityPoolVolumeQuotaRuleResultOutput{})
}
