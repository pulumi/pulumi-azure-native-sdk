// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package netapp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// List all replications for a specified volume
// Azure REST API version: 2024-09-01.
func ListCapacityPoolVolumeReplications(ctx *pulumi.Context, args *ListCapacityPoolVolumeReplicationsArgs, opts ...pulumi.InvokeOption) (*ListCapacityPoolVolumeReplicationsResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListCapacityPoolVolumeReplicationsResult
	err := ctx.Invoke("azure-native:netapp:listCapacityPoolVolumeReplications", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListCapacityPoolVolumeReplicationsArgs struct {
	// The name of the NetApp account
	AccountName string `pulumi:"accountName"`
	// The name of the capacity pool
	PoolName string `pulumi:"poolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the volume
	VolumeName string `pulumi:"volumeName"`
}

// List Replications
type ListCapacityPoolVolumeReplicationsResult struct {
	// A list of replications
	Value []ReplicationResponse `pulumi:"value"`
}

func ListCapacityPoolVolumeReplicationsOutput(ctx *pulumi.Context, args ListCapacityPoolVolumeReplicationsOutputArgs, opts ...pulumi.InvokeOption) ListCapacityPoolVolumeReplicationsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListCapacityPoolVolumeReplicationsResultOutput, error) {
			args := v.(ListCapacityPoolVolumeReplicationsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:netapp:listCapacityPoolVolumeReplications", args, ListCapacityPoolVolumeReplicationsResultOutput{}, options).(ListCapacityPoolVolumeReplicationsResultOutput), nil
		}).(ListCapacityPoolVolumeReplicationsResultOutput)
}

type ListCapacityPoolVolumeReplicationsOutputArgs struct {
	// The name of the NetApp account
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the capacity pool
	PoolName pulumi.StringInput `pulumi:"poolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the volume
	VolumeName pulumi.StringInput `pulumi:"volumeName"`
}

func (ListCapacityPoolVolumeReplicationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListCapacityPoolVolumeReplicationsArgs)(nil)).Elem()
}

// List Replications
type ListCapacityPoolVolumeReplicationsResultOutput struct{ *pulumi.OutputState }

func (ListCapacityPoolVolumeReplicationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListCapacityPoolVolumeReplicationsResult)(nil)).Elem()
}

func (o ListCapacityPoolVolumeReplicationsResultOutput) ToListCapacityPoolVolumeReplicationsResultOutput() ListCapacityPoolVolumeReplicationsResultOutput {
	return o
}

func (o ListCapacityPoolVolumeReplicationsResultOutput) ToListCapacityPoolVolumeReplicationsResultOutputWithContext(ctx context.Context) ListCapacityPoolVolumeReplicationsResultOutput {
	return o
}

// A list of replications
func (o ListCapacityPoolVolumeReplicationsResultOutput) Value() ReplicationResponseArrayOutput {
	return o.ApplyT(func(v ListCapacityPoolVolumeReplicationsResult) []ReplicationResponse { return v.Value }).(ReplicationResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListCapacityPoolVolumeReplicationsResultOutput{})
}
