// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package netapp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns report of quotas for the volume
//
// Uses Azure REST API version 2024-03-01-preview.
//
// Other available API versions: 2024-05-01-preview, 2024-07-01-preview, 2024-09-01-preview.
func ListVolumeQuotaReport(ctx *pulumi.Context, args *ListVolumeQuotaReportArgs, opts ...pulumi.InvokeOption) (*ListVolumeQuotaReportResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv ListVolumeQuotaReportResult
	err := ctx.Invoke("azure-native:netapp:listVolumeQuotaReport", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListVolumeQuotaReportArgs struct {
	// The name of the NetApp account
	AccountName string `pulumi:"accountName"`
	// The name of the capacity pool
	PoolName string `pulumi:"poolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the volume
	VolumeName string `pulumi:"volumeName"`
}

// Quota Report for volume
type ListVolumeQuotaReportResult struct {
	// URL to get the next set of results.
	NextLink *string `pulumi:"nextLink"`
	// List of volume quota report records
	Value []QuotaReportResponse `pulumi:"value"`
}

func ListVolumeQuotaReportOutput(ctx *pulumi.Context, args ListVolumeQuotaReportOutputArgs, opts ...pulumi.InvokeOption) ListVolumeQuotaReportResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListVolumeQuotaReportResultOutput, error) {
			args := v.(ListVolumeQuotaReportArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:netapp:listVolumeQuotaReport", args, ListVolumeQuotaReportResultOutput{}, options).(ListVolumeQuotaReportResultOutput), nil
		}).(ListVolumeQuotaReportResultOutput)
}

type ListVolumeQuotaReportOutputArgs struct {
	// The name of the NetApp account
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the capacity pool
	PoolName pulumi.StringInput `pulumi:"poolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the volume
	VolumeName pulumi.StringInput `pulumi:"volumeName"`
}

func (ListVolumeQuotaReportOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListVolumeQuotaReportArgs)(nil)).Elem()
}

// Quota Report for volume
type ListVolumeQuotaReportResultOutput struct{ *pulumi.OutputState }

func (ListVolumeQuotaReportResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListVolumeQuotaReportResult)(nil)).Elem()
}

func (o ListVolumeQuotaReportResultOutput) ToListVolumeQuotaReportResultOutput() ListVolumeQuotaReportResultOutput {
	return o
}

func (o ListVolumeQuotaReportResultOutput) ToListVolumeQuotaReportResultOutputWithContext(ctx context.Context) ListVolumeQuotaReportResultOutput {
	return o
}

// URL to get the next set of results.
func (o ListVolumeQuotaReportResultOutput) NextLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListVolumeQuotaReportResult) *string { return v.NextLink }).(pulumi.StringPtrOutput)
}

// List of volume quota report records
func (o ListVolumeQuotaReportResultOutput) Value() QuotaReportResponseArrayOutput {
	return o.ApplyT(func(v ListVolumeQuotaReportResult) []QuotaReportResponse { return v.Value }).(QuotaReportResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListVolumeQuotaReportResultOutput{})
}
