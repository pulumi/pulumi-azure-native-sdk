// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package netapp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Returns the list of group Ids for a specific LDAP User
// Azure REST API version: 2022-11-01.
func GetVolumeGroupIdForLdapUser(ctx *pulumi.Context, args *GetVolumeGroupIdForLdapUserArgs, opts ...pulumi.InvokeOption) (*GetVolumeGroupIdForLdapUserResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv GetVolumeGroupIdForLdapUserResult
	err := ctx.Invoke("azure-native:netapp:getVolumeGroupIdForLdapUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetVolumeGroupIdForLdapUserArgs struct {
	// The name of the NetApp account
	AccountName string `pulumi:"accountName"`
	// The name of the capacity pool
	PoolName string `pulumi:"poolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// username is required to fetch the group to which user is part of
	Username string `pulumi:"username"`
	// The name of the volume
	VolumeName string `pulumi:"volumeName"`
}

// Group Id list for Ldap user
type GetVolumeGroupIdForLdapUserResult struct {
	// Group Id list
	GroupIdsForLdapUser []string `pulumi:"groupIdsForLdapUser"`
}

func GetVolumeGroupIdForLdapUserOutput(ctx *pulumi.Context, args GetVolumeGroupIdForLdapUserOutputArgs, opts ...pulumi.InvokeOption) GetVolumeGroupIdForLdapUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVolumeGroupIdForLdapUserResult, error) {
			args := v.(GetVolumeGroupIdForLdapUserArgs)
			r, err := GetVolumeGroupIdForLdapUser(ctx, &args, opts...)
			var s GetVolumeGroupIdForLdapUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVolumeGroupIdForLdapUserResultOutput)
}

type GetVolumeGroupIdForLdapUserOutputArgs struct {
	// The name of the NetApp account
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the capacity pool
	PoolName pulumi.StringInput `pulumi:"poolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// username is required to fetch the group to which user is part of
	Username pulumi.StringInput `pulumi:"username"`
	// The name of the volume
	VolumeName pulumi.StringInput `pulumi:"volumeName"`
}

func (GetVolumeGroupIdForLdapUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeGroupIdForLdapUserArgs)(nil)).Elem()
}

// Group Id list for Ldap user
type GetVolumeGroupIdForLdapUserResultOutput struct{ *pulumi.OutputState }

func (GetVolumeGroupIdForLdapUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeGroupIdForLdapUserResult)(nil)).Elem()
}

func (o GetVolumeGroupIdForLdapUserResultOutput) ToGetVolumeGroupIdForLdapUserResultOutput() GetVolumeGroupIdForLdapUserResultOutput {
	return o
}

func (o GetVolumeGroupIdForLdapUserResultOutput) ToGetVolumeGroupIdForLdapUserResultOutputWithContext(ctx context.Context) GetVolumeGroupIdForLdapUserResultOutput {
	return o
}

func (o GetVolumeGroupIdForLdapUserResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetVolumeGroupIdForLdapUserResult] {
	return pulumix.Output[GetVolumeGroupIdForLdapUserResult]{
		OutputState: o.OutputState,
	}
}

// Group Id list
func (o GetVolumeGroupIdForLdapUserResultOutput) GroupIdsForLdapUser() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVolumeGroupIdForLdapUserResult) []string { return v.GroupIdsForLdapUser }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVolumeGroupIdForLdapUserResultOutput{})
}
