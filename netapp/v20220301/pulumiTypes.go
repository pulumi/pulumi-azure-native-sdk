// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220301

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Replication properties
type ReplicationResponse struct {
	// Indicates whether the local volume is the source or destination for the Volume Replication
	EndpointType *string `pulumi:"endpointType"`
	// The remote region for the other end of the Volume Replication.
	RemoteVolumeRegion *string `pulumi:"remoteVolumeRegion"`
	// The resource ID of the remote volume.
	RemoteVolumeResourceId string `pulumi:"remoteVolumeResourceId"`
	// Schedule
	ReplicationSchedule *string `pulumi:"replicationSchedule"`
}

// Replication properties
type ReplicationResponseOutput struct{ *pulumi.OutputState }

func (ReplicationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationResponse)(nil)).Elem()
}

func (o ReplicationResponseOutput) ToReplicationResponseOutput() ReplicationResponseOutput {
	return o
}

func (o ReplicationResponseOutput) ToReplicationResponseOutputWithContext(ctx context.Context) ReplicationResponseOutput {
	return o
}

// Indicates whether the local volume is the source or destination for the Volume Replication
func (o ReplicationResponseOutput) EndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationResponse) *string { return v.EndpointType }).(pulumi.StringPtrOutput)
}

// The remote region for the other end of the Volume Replication.
func (o ReplicationResponseOutput) RemoteVolumeRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationResponse) *string { return v.RemoteVolumeRegion }).(pulumi.StringPtrOutput)
}

// The resource ID of the remote volume.
func (o ReplicationResponseOutput) RemoteVolumeResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationResponse) string { return v.RemoteVolumeResourceId }).(pulumi.StringOutput)
}

// Schedule
func (o ReplicationResponseOutput) ReplicationSchedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationResponse) *string { return v.ReplicationSchedule }).(pulumi.StringPtrOutput)
}

type ReplicationResponseArrayOutput struct{ *pulumi.OutputState }

func (ReplicationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationResponse)(nil)).Elem()
}

func (o ReplicationResponseArrayOutput) ToReplicationResponseArrayOutput() ReplicationResponseArrayOutput {
	return o
}

func (o ReplicationResponseArrayOutput) ToReplicationResponseArrayOutputWithContext(ctx context.Context) ReplicationResponseArrayOutput {
	return o
}

func (o ReplicationResponseArrayOutput) Index(i pulumi.IntInput) ReplicationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationResponse {
		return vs[0].([]ReplicationResponse)[vs[1].(int)]
	}).(ReplicationResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ReplicationResponseOutput{})
	pulumi.RegisterOutputType(ReplicationResponseArrayOutput{})
}
