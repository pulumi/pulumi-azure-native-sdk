// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211001

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Application Type
type ApplicationType string

const (
	ApplicationType_SAP_HANA = ApplicationType("SAP-HANA")
)

func (ApplicationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationType)(nil)).Elem()
}

func (e ApplicationType) ToApplicationTypeOutput() ApplicationTypeOutput {
	return pulumi.ToOutput(e).(ApplicationTypeOutput)
}

func (e ApplicationType) ToApplicationTypeOutputWithContext(ctx context.Context) ApplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApplicationTypeOutput)
}

func (e ApplicationType) ToApplicationTypePtrOutput() ApplicationTypePtrOutput {
	return e.ToApplicationTypePtrOutputWithContext(context.Background())
}

func (e ApplicationType) ToApplicationTypePtrOutputWithContext(ctx context.Context) ApplicationTypePtrOutput {
	return ApplicationType(e).ToApplicationTypeOutputWithContext(ctx).ToApplicationTypePtrOutputWithContext(ctx)
}

func (e ApplicationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApplicationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApplicationTypeOutput struct{ *pulumi.OutputState }

func (ApplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationType)(nil)).Elem()
}

func (o ApplicationTypeOutput) ToApplicationTypeOutput() ApplicationTypeOutput {
	return o
}

func (o ApplicationTypeOutput) ToApplicationTypeOutputWithContext(ctx context.Context) ApplicationTypeOutput {
	return o
}

func (o ApplicationTypeOutput) ToApplicationTypePtrOutput() ApplicationTypePtrOutput {
	return o.ToApplicationTypePtrOutputWithContext(context.Background())
}

func (o ApplicationTypeOutput) ToApplicationTypePtrOutputWithContext(ctx context.Context) ApplicationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationType) *ApplicationType {
		return &v
	}).(ApplicationTypePtrOutput)
}

func (o ApplicationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApplicationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApplicationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplicationTypePtrOutput struct{ *pulumi.OutputState }

func (ApplicationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationType)(nil)).Elem()
}

func (o ApplicationTypePtrOutput) ToApplicationTypePtrOutput() ApplicationTypePtrOutput {
	return o
}

func (o ApplicationTypePtrOutput) ToApplicationTypePtrOutputWithContext(ctx context.Context) ApplicationTypePtrOutput {
	return o
}

func (o ApplicationTypePtrOutput) Elem() ApplicationTypeOutput {
	return o.ApplyT(func(v *ApplicationType) ApplicationType {
		if v != nil {
			return *v
		}
		var ret ApplicationType
		return ret
	}).(ApplicationTypeOutput)
}

func (o ApplicationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApplicationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ApplicationTypeInput is an input type that accepts values of the ApplicationType enum
// A concrete instance of `ApplicationTypeInput` can be one of the following:
//
//	ApplicationType_SAP_HANA
type ApplicationTypeInput interface {
	pulumi.Input

	ToApplicationTypeOutput() ApplicationTypeOutput
	ToApplicationTypeOutputWithContext(context.Context) ApplicationTypeOutput
}

var applicationTypePtrType = reflect.TypeOf((**ApplicationType)(nil)).Elem()

type ApplicationTypePtrInput interface {
	pulumi.Input

	ToApplicationTypePtrOutput() ApplicationTypePtrOutput
	ToApplicationTypePtrOutputWithContext(context.Context) ApplicationTypePtrOutput
}

type applicationTypePtr string

func ApplicationTypePtr(v string) ApplicationTypePtrInput {
	return (*applicationTypePtr)(&v)
}

func (*applicationTypePtr) ElementType() reflect.Type {
	return applicationTypePtrType
}

func (in *applicationTypePtr) ToApplicationTypePtrOutput() ApplicationTypePtrOutput {
	return pulumi.ToOutput(in).(ApplicationTypePtrOutput)
}

func (in *applicationTypePtr) ToApplicationTypePtrOutputWithContext(ctx context.Context) ApplicationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApplicationTypePtrOutput)
}

func (in *applicationTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ApplicationType] {
	return pulumix.Output[*ApplicationType]{
		OutputState: in.ToApplicationTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose
type AvsDataStore string

const (
	// avsDataStore is enabled
	AvsDataStoreEnabled = AvsDataStore("Enabled")
	// avsDataStore is disabled
	AvsDataStoreDisabled = AvsDataStore("Disabled")
)

func (AvsDataStore) ElementType() reflect.Type {
	return reflect.TypeOf((*AvsDataStore)(nil)).Elem()
}

func (e AvsDataStore) ToAvsDataStoreOutput() AvsDataStoreOutput {
	return pulumi.ToOutput(e).(AvsDataStoreOutput)
}

func (e AvsDataStore) ToAvsDataStoreOutputWithContext(ctx context.Context) AvsDataStoreOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AvsDataStoreOutput)
}

func (e AvsDataStore) ToAvsDataStorePtrOutput() AvsDataStorePtrOutput {
	return e.ToAvsDataStorePtrOutputWithContext(context.Background())
}

func (e AvsDataStore) ToAvsDataStorePtrOutputWithContext(ctx context.Context) AvsDataStorePtrOutput {
	return AvsDataStore(e).ToAvsDataStoreOutputWithContext(ctx).ToAvsDataStorePtrOutputWithContext(ctx)
}

func (e AvsDataStore) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AvsDataStore) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AvsDataStore) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AvsDataStore) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AvsDataStoreOutput struct{ *pulumi.OutputState }

func (AvsDataStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvsDataStore)(nil)).Elem()
}

func (o AvsDataStoreOutput) ToAvsDataStoreOutput() AvsDataStoreOutput {
	return o
}

func (o AvsDataStoreOutput) ToAvsDataStoreOutputWithContext(ctx context.Context) AvsDataStoreOutput {
	return o
}

func (o AvsDataStoreOutput) ToAvsDataStorePtrOutput() AvsDataStorePtrOutput {
	return o.ToAvsDataStorePtrOutputWithContext(context.Background())
}

func (o AvsDataStoreOutput) ToAvsDataStorePtrOutputWithContext(ctx context.Context) AvsDataStorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AvsDataStore) *AvsDataStore {
		return &v
	}).(AvsDataStorePtrOutput)
}

func (o AvsDataStoreOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AvsDataStoreOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AvsDataStore) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AvsDataStoreOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AvsDataStoreOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AvsDataStore) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AvsDataStorePtrOutput struct{ *pulumi.OutputState }

func (AvsDataStorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvsDataStore)(nil)).Elem()
}

func (o AvsDataStorePtrOutput) ToAvsDataStorePtrOutput() AvsDataStorePtrOutput {
	return o
}

func (o AvsDataStorePtrOutput) ToAvsDataStorePtrOutputWithContext(ctx context.Context) AvsDataStorePtrOutput {
	return o
}

func (o AvsDataStorePtrOutput) Elem() AvsDataStoreOutput {
	return o.ApplyT(func(v *AvsDataStore) AvsDataStore {
		if v != nil {
			return *v
		}
		var ret AvsDataStore
		return ret
	}).(AvsDataStoreOutput)
}

func (o AvsDataStorePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AvsDataStorePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AvsDataStore) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AvsDataStoreInput is an input type that accepts values of the AvsDataStore enum
// A concrete instance of `AvsDataStoreInput` can be one of the following:
//
//	AvsDataStoreEnabled
//	AvsDataStoreDisabled
type AvsDataStoreInput interface {
	pulumi.Input

	ToAvsDataStoreOutput() AvsDataStoreOutput
	ToAvsDataStoreOutputWithContext(context.Context) AvsDataStoreOutput
}

var avsDataStorePtrType = reflect.TypeOf((**AvsDataStore)(nil)).Elem()

type AvsDataStorePtrInput interface {
	pulumi.Input

	ToAvsDataStorePtrOutput() AvsDataStorePtrOutput
	ToAvsDataStorePtrOutputWithContext(context.Context) AvsDataStorePtrOutput
}

type avsDataStorePtr string

func AvsDataStorePtr(v string) AvsDataStorePtrInput {
	return (*avsDataStorePtr)(&v)
}

func (*avsDataStorePtr) ElementType() reflect.Type {
	return avsDataStorePtrType
}

func (in *avsDataStorePtr) ToAvsDataStorePtrOutput() AvsDataStorePtrOutput {
	return pulumi.ToOutput(in).(AvsDataStorePtrOutput)
}

func (in *avsDataStorePtr) ToAvsDataStorePtrOutputWithContext(ctx context.Context) AvsDataStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AvsDataStorePtrOutput)
}

func (in *avsDataStorePtr) ToOutput(ctx context.Context) pulumix.Output[*AvsDataStore] {
	return pulumix.Output[*AvsDataStore]{
		OutputState: in.ToAvsDataStorePtrOutputWithContext(ctx).OutputState,
	}
}

// This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.
type ChownMode string

const (
	ChownModeRestricted   = ChownMode("Restricted")
	ChownModeUnrestricted = ChownMode("Unrestricted")
)

func (ChownMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ChownMode)(nil)).Elem()
}

func (e ChownMode) ToChownModeOutput() ChownModeOutput {
	return pulumi.ToOutput(e).(ChownModeOutput)
}

func (e ChownMode) ToChownModeOutputWithContext(ctx context.Context) ChownModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ChownModeOutput)
}

func (e ChownMode) ToChownModePtrOutput() ChownModePtrOutput {
	return e.ToChownModePtrOutputWithContext(context.Background())
}

func (e ChownMode) ToChownModePtrOutputWithContext(ctx context.Context) ChownModePtrOutput {
	return ChownMode(e).ToChownModeOutputWithContext(ctx).ToChownModePtrOutputWithContext(ctx)
}

func (e ChownMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChownMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChownMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ChownMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ChownModeOutput struct{ *pulumi.OutputState }

func (ChownModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChownMode)(nil)).Elem()
}

func (o ChownModeOutput) ToChownModeOutput() ChownModeOutput {
	return o
}

func (o ChownModeOutput) ToChownModeOutputWithContext(ctx context.Context) ChownModeOutput {
	return o
}

func (o ChownModeOutput) ToChownModePtrOutput() ChownModePtrOutput {
	return o.ToChownModePtrOutputWithContext(context.Background())
}

func (o ChownModeOutput) ToChownModePtrOutputWithContext(ctx context.Context) ChownModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChownMode) *ChownMode {
		return &v
	}).(ChownModePtrOutput)
}

func (o ChownModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ChownModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChownMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ChownModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChownModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChownMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ChownModePtrOutput struct{ *pulumi.OutputState }

func (ChownModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChownMode)(nil)).Elem()
}

func (o ChownModePtrOutput) ToChownModePtrOutput() ChownModePtrOutput {
	return o
}

func (o ChownModePtrOutput) ToChownModePtrOutputWithContext(ctx context.Context) ChownModePtrOutput {
	return o
}

func (o ChownModePtrOutput) Elem() ChownModeOutput {
	return o.ApplyT(func(v *ChownMode) ChownMode {
		if v != nil {
			return *v
		}
		var ret ChownMode
		return ret
	}).(ChownModeOutput)
}

func (o ChownModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChownModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ChownMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ChownModeInput is an input type that accepts values of the ChownMode enum
// A concrete instance of `ChownModeInput` can be one of the following:
//
//	ChownModeRestricted
//	ChownModeUnrestricted
type ChownModeInput interface {
	pulumi.Input

	ToChownModeOutput() ChownModeOutput
	ToChownModeOutputWithContext(context.Context) ChownModeOutput
}

var chownModePtrType = reflect.TypeOf((**ChownMode)(nil)).Elem()

type ChownModePtrInput interface {
	pulumi.Input

	ToChownModePtrOutput() ChownModePtrOutput
	ToChownModePtrOutputWithContext(context.Context) ChownModePtrOutput
}

type chownModePtr string

func ChownModePtr(v string) ChownModePtrInput {
	return (*chownModePtr)(&v)
}

func (*chownModePtr) ElementType() reflect.Type {
	return chownModePtrType
}

func (in *chownModePtr) ToChownModePtrOutput() ChownModePtrOutput {
	return pulumi.ToOutput(in).(ChownModePtrOutput)
}

func (in *chownModePtr) ToChownModePtrOutputWithContext(ctx context.Context) ChownModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ChownModePtrOutput)
}

func (in *chownModePtr) ToOutput(ctx context.Context) pulumix.Output[*ChownMode] {
	return pulumix.Output[*ChownMode]{
		OutputState: in.ToChownModePtrOutputWithContext(ctx).OutputState,
	}
}

// Flag indicating whether subvolume operations are enabled on the volume
type EnableSubvolumes string

const (
	// subvolumes are enabled
	EnableSubvolumesEnabled = EnableSubvolumes("Enabled")
	// subvolumes are not enabled
	EnableSubvolumesDisabled = EnableSubvolumes("Disabled")
)

func (EnableSubvolumes) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableSubvolumes)(nil)).Elem()
}

func (e EnableSubvolumes) ToEnableSubvolumesOutput() EnableSubvolumesOutput {
	return pulumi.ToOutput(e).(EnableSubvolumesOutput)
}

func (e EnableSubvolumes) ToEnableSubvolumesOutputWithContext(ctx context.Context) EnableSubvolumesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EnableSubvolumesOutput)
}

func (e EnableSubvolumes) ToEnableSubvolumesPtrOutput() EnableSubvolumesPtrOutput {
	return e.ToEnableSubvolumesPtrOutputWithContext(context.Background())
}

func (e EnableSubvolumes) ToEnableSubvolumesPtrOutputWithContext(ctx context.Context) EnableSubvolumesPtrOutput {
	return EnableSubvolumes(e).ToEnableSubvolumesOutputWithContext(ctx).ToEnableSubvolumesPtrOutputWithContext(ctx)
}

func (e EnableSubvolumes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnableSubvolumes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EnableSubvolumes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EnableSubvolumes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EnableSubvolumesOutput struct{ *pulumi.OutputState }

func (EnableSubvolumesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnableSubvolumes)(nil)).Elem()
}

func (o EnableSubvolumesOutput) ToEnableSubvolumesOutput() EnableSubvolumesOutput {
	return o
}

func (o EnableSubvolumesOutput) ToEnableSubvolumesOutputWithContext(ctx context.Context) EnableSubvolumesOutput {
	return o
}

func (o EnableSubvolumesOutput) ToEnableSubvolumesPtrOutput() EnableSubvolumesPtrOutput {
	return o.ToEnableSubvolumesPtrOutputWithContext(context.Background())
}

func (o EnableSubvolumesOutput) ToEnableSubvolumesPtrOutputWithContext(ctx context.Context) EnableSubvolumesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnableSubvolumes) *EnableSubvolumes {
		return &v
	}).(EnableSubvolumesPtrOutput)
}

func (o EnableSubvolumesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EnableSubvolumesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnableSubvolumes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EnableSubvolumesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnableSubvolumesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EnableSubvolumes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EnableSubvolumesPtrOutput struct{ *pulumi.OutputState }

func (EnableSubvolumesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnableSubvolumes)(nil)).Elem()
}

func (o EnableSubvolumesPtrOutput) ToEnableSubvolumesPtrOutput() EnableSubvolumesPtrOutput {
	return o
}

func (o EnableSubvolumesPtrOutput) ToEnableSubvolumesPtrOutputWithContext(ctx context.Context) EnableSubvolumesPtrOutput {
	return o
}

func (o EnableSubvolumesPtrOutput) Elem() EnableSubvolumesOutput {
	return o.ApplyT(func(v *EnableSubvolumes) EnableSubvolumes {
		if v != nil {
			return *v
		}
		var ret EnableSubvolumes
		return ret
	}).(EnableSubvolumesOutput)
}

func (o EnableSubvolumesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EnableSubvolumesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EnableSubvolumes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EnableSubvolumesInput is an input type that accepts values of the EnableSubvolumes enum
// A concrete instance of `EnableSubvolumesInput` can be one of the following:
//
//	EnableSubvolumesEnabled
//	EnableSubvolumesDisabled
type EnableSubvolumesInput interface {
	pulumi.Input

	ToEnableSubvolumesOutput() EnableSubvolumesOutput
	ToEnableSubvolumesOutputWithContext(context.Context) EnableSubvolumesOutput
}

var enableSubvolumesPtrType = reflect.TypeOf((**EnableSubvolumes)(nil)).Elem()

type EnableSubvolumesPtrInput interface {
	pulumi.Input

	ToEnableSubvolumesPtrOutput() EnableSubvolumesPtrOutput
	ToEnableSubvolumesPtrOutputWithContext(context.Context) EnableSubvolumesPtrOutput
}

type enableSubvolumesPtr string

func EnableSubvolumesPtr(v string) EnableSubvolumesPtrInput {
	return (*enableSubvolumesPtr)(&v)
}

func (*enableSubvolumesPtr) ElementType() reflect.Type {
	return enableSubvolumesPtrType
}

func (in *enableSubvolumesPtr) ToEnableSubvolumesPtrOutput() EnableSubvolumesPtrOutput {
	return pulumi.ToOutput(in).(EnableSubvolumesPtrOutput)
}

func (in *enableSubvolumesPtr) ToEnableSubvolumesPtrOutputWithContext(ctx context.Context) EnableSubvolumesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EnableSubvolumesPtrOutput)
}

func (in *enableSubvolumesPtr) ToOutput(ctx context.Context) pulumix.Output[*EnableSubvolumes] {
	return pulumix.Output[*EnableSubvolumes]{
		OutputState: in.ToEnableSubvolumesPtrOutputWithContext(ctx).OutputState,
	}
}

// Indicates whether the local volume is the source or destination for the Volume Replication
type EndpointType string

const (
	EndpointTypeSrc = EndpointType("src")
	EndpointTypeDst = EndpointType("dst")
)

func (EndpointType) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointType)(nil)).Elem()
}

func (e EndpointType) ToEndpointTypeOutput() EndpointTypeOutput {
	return pulumi.ToOutput(e).(EndpointTypeOutput)
}

func (e EndpointType) ToEndpointTypeOutputWithContext(ctx context.Context) EndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EndpointTypeOutput)
}

func (e EndpointType) ToEndpointTypePtrOutput() EndpointTypePtrOutput {
	return e.ToEndpointTypePtrOutputWithContext(context.Background())
}

func (e EndpointType) ToEndpointTypePtrOutputWithContext(ctx context.Context) EndpointTypePtrOutput {
	return EndpointType(e).ToEndpointTypeOutputWithContext(ctx).ToEndpointTypePtrOutputWithContext(ctx)
}

func (e EndpointType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EndpointType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EndpointTypeOutput struct{ *pulumi.OutputState }

func (EndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointType)(nil)).Elem()
}

func (o EndpointTypeOutput) ToEndpointTypeOutput() EndpointTypeOutput {
	return o
}

func (o EndpointTypeOutput) ToEndpointTypeOutputWithContext(ctx context.Context) EndpointTypeOutput {
	return o
}

func (o EndpointTypeOutput) ToEndpointTypePtrOutput() EndpointTypePtrOutput {
	return o.ToEndpointTypePtrOutputWithContext(context.Background())
}

func (o EndpointTypeOutput) ToEndpointTypePtrOutputWithContext(ctx context.Context) EndpointTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointType) *EndpointType {
		return &v
	}).(EndpointTypePtrOutput)
}

func (o EndpointTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EndpointTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EndpointTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EndpointTypePtrOutput struct{ *pulumi.OutputState }

func (EndpointTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointType)(nil)).Elem()
}

func (o EndpointTypePtrOutput) ToEndpointTypePtrOutput() EndpointTypePtrOutput {
	return o
}

func (o EndpointTypePtrOutput) ToEndpointTypePtrOutputWithContext(ctx context.Context) EndpointTypePtrOutput {
	return o
}

func (o EndpointTypePtrOutput) Elem() EndpointTypeOutput {
	return o.ApplyT(func(v *EndpointType) EndpointType {
		if v != nil {
			return *v
		}
		var ret EndpointType
		return ret
	}).(EndpointTypeOutput)
}

func (o EndpointTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EndpointType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EndpointTypeInput is an input type that accepts values of the EndpointType enum
// A concrete instance of `EndpointTypeInput` can be one of the following:
//
//	EndpointTypeSrc
//	EndpointTypeDst
type EndpointTypeInput interface {
	pulumi.Input

	ToEndpointTypeOutput() EndpointTypeOutput
	ToEndpointTypeOutputWithContext(context.Context) EndpointTypeOutput
}

var endpointTypePtrType = reflect.TypeOf((**EndpointType)(nil)).Elem()

type EndpointTypePtrInput interface {
	pulumi.Input

	ToEndpointTypePtrOutput() EndpointTypePtrOutput
	ToEndpointTypePtrOutputWithContext(context.Context) EndpointTypePtrOutput
}

type endpointTypePtr string

func EndpointTypePtr(v string) EndpointTypePtrInput {
	return (*endpointTypePtr)(&v)
}

func (*endpointTypePtr) ElementType() reflect.Type {
	return endpointTypePtrType
}

func (in *endpointTypePtr) ToEndpointTypePtrOutput() EndpointTypePtrOutput {
	return pulumi.ToOutput(in).(EndpointTypePtrOutput)
}

func (in *endpointTypePtr) ToEndpointTypePtrOutputWithContext(ctx context.Context) EndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EndpointTypePtrOutput)
}

func (in *endpointTypePtr) ToOutput(ctx context.Context) pulumix.Output[*EndpointType] {
	return pulumix.Output[*EndpointType]{
		OutputState: in.ToEndpointTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Basic network, or Standard features available to the volume.
type NetworkFeatures string

const (
	// Basic network feature.
	NetworkFeaturesBasic = NetworkFeatures("Basic")
	// Standard network feature.
	NetworkFeaturesStandard = NetworkFeatures("Standard")
)

func (NetworkFeatures) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkFeatures)(nil)).Elem()
}

func (e NetworkFeatures) ToNetworkFeaturesOutput() NetworkFeaturesOutput {
	return pulumi.ToOutput(e).(NetworkFeaturesOutput)
}

func (e NetworkFeatures) ToNetworkFeaturesOutputWithContext(ctx context.Context) NetworkFeaturesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkFeaturesOutput)
}

func (e NetworkFeatures) ToNetworkFeaturesPtrOutput() NetworkFeaturesPtrOutput {
	return e.ToNetworkFeaturesPtrOutputWithContext(context.Background())
}

func (e NetworkFeatures) ToNetworkFeaturesPtrOutputWithContext(ctx context.Context) NetworkFeaturesPtrOutput {
	return NetworkFeatures(e).ToNetworkFeaturesOutputWithContext(ctx).ToNetworkFeaturesPtrOutputWithContext(ctx)
}

func (e NetworkFeatures) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkFeatures) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkFeatures) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkFeatures) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkFeaturesOutput struct{ *pulumi.OutputState }

func (NetworkFeaturesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkFeatures)(nil)).Elem()
}

func (o NetworkFeaturesOutput) ToNetworkFeaturesOutput() NetworkFeaturesOutput {
	return o
}

func (o NetworkFeaturesOutput) ToNetworkFeaturesOutputWithContext(ctx context.Context) NetworkFeaturesOutput {
	return o
}

func (o NetworkFeaturesOutput) ToNetworkFeaturesPtrOutput() NetworkFeaturesPtrOutput {
	return o.ToNetworkFeaturesPtrOutputWithContext(context.Background())
}

func (o NetworkFeaturesOutput) ToNetworkFeaturesPtrOutputWithContext(ctx context.Context) NetworkFeaturesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkFeatures) *NetworkFeatures {
		return &v
	}).(NetworkFeaturesPtrOutput)
}

func (o NetworkFeaturesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkFeaturesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkFeatures) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkFeaturesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkFeaturesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkFeatures) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkFeaturesPtrOutput struct{ *pulumi.OutputState }

func (NetworkFeaturesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFeatures)(nil)).Elem()
}

func (o NetworkFeaturesPtrOutput) ToNetworkFeaturesPtrOutput() NetworkFeaturesPtrOutput {
	return o
}

func (o NetworkFeaturesPtrOutput) ToNetworkFeaturesPtrOutputWithContext(ctx context.Context) NetworkFeaturesPtrOutput {
	return o
}

func (o NetworkFeaturesPtrOutput) Elem() NetworkFeaturesOutput {
	return o.ApplyT(func(v *NetworkFeatures) NetworkFeatures {
		if v != nil {
			return *v
		}
		var ret NetworkFeatures
		return ret
	}).(NetworkFeaturesOutput)
}

func (o NetworkFeaturesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkFeaturesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkFeatures) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkFeaturesInput is an input type that accepts values of the NetworkFeatures enum
// A concrete instance of `NetworkFeaturesInput` can be one of the following:
//
//	NetworkFeaturesBasic
//	NetworkFeaturesStandard
type NetworkFeaturesInput interface {
	pulumi.Input

	ToNetworkFeaturesOutput() NetworkFeaturesOutput
	ToNetworkFeaturesOutputWithContext(context.Context) NetworkFeaturesOutput
}

var networkFeaturesPtrType = reflect.TypeOf((**NetworkFeatures)(nil)).Elem()

type NetworkFeaturesPtrInput interface {
	pulumi.Input

	ToNetworkFeaturesPtrOutput() NetworkFeaturesPtrOutput
	ToNetworkFeaturesPtrOutputWithContext(context.Context) NetworkFeaturesPtrOutput
}

type networkFeaturesPtr string

func NetworkFeaturesPtr(v string) NetworkFeaturesPtrInput {
	return (*networkFeaturesPtr)(&v)
}

func (*networkFeaturesPtr) ElementType() reflect.Type {
	return networkFeaturesPtrType
}

func (in *networkFeaturesPtr) ToNetworkFeaturesPtrOutput() NetworkFeaturesPtrOutput {
	return pulumi.ToOutput(in).(NetworkFeaturesPtrOutput)
}

func (in *networkFeaturesPtr) ToNetworkFeaturesPtrOutputWithContext(ctx context.Context) NetworkFeaturesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkFeaturesPtrOutput)
}

func (in *networkFeaturesPtr) ToOutput(ctx context.Context) pulumix.Output[*NetworkFeatures] {
	return pulumix.Output[*NetworkFeatures]{
		OutputState: in.ToNetworkFeaturesPtrOutputWithContext(ctx).OutputState,
	}
}

// Schedule
type ReplicationSchedule string

const (
	ReplicationSchedule_10minutely = ReplicationSchedule("_10minutely")
	ReplicationScheduleHourly      = ReplicationSchedule("hourly")
	ReplicationScheduleDaily       = ReplicationSchedule("daily")
)

func (ReplicationSchedule) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationSchedule)(nil)).Elem()
}

func (e ReplicationSchedule) ToReplicationScheduleOutput() ReplicationScheduleOutput {
	return pulumi.ToOutput(e).(ReplicationScheduleOutput)
}

func (e ReplicationSchedule) ToReplicationScheduleOutputWithContext(ctx context.Context) ReplicationScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReplicationScheduleOutput)
}

func (e ReplicationSchedule) ToReplicationSchedulePtrOutput() ReplicationSchedulePtrOutput {
	return e.ToReplicationSchedulePtrOutputWithContext(context.Background())
}

func (e ReplicationSchedule) ToReplicationSchedulePtrOutputWithContext(ctx context.Context) ReplicationSchedulePtrOutput {
	return ReplicationSchedule(e).ToReplicationScheduleOutputWithContext(ctx).ToReplicationSchedulePtrOutputWithContext(ctx)
}

func (e ReplicationSchedule) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReplicationSchedule) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReplicationSchedule) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReplicationSchedule) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReplicationScheduleOutput struct{ *pulumi.OutputState }

func (ReplicationScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationSchedule)(nil)).Elem()
}

func (o ReplicationScheduleOutput) ToReplicationScheduleOutput() ReplicationScheduleOutput {
	return o
}

func (o ReplicationScheduleOutput) ToReplicationScheduleOutputWithContext(ctx context.Context) ReplicationScheduleOutput {
	return o
}

func (o ReplicationScheduleOutput) ToReplicationSchedulePtrOutput() ReplicationSchedulePtrOutput {
	return o.ToReplicationSchedulePtrOutputWithContext(context.Background())
}

func (o ReplicationScheduleOutput) ToReplicationSchedulePtrOutputWithContext(ctx context.Context) ReplicationSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationSchedule) *ReplicationSchedule {
		return &v
	}).(ReplicationSchedulePtrOutput)
}

func (o ReplicationScheduleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReplicationScheduleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReplicationSchedule) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReplicationScheduleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReplicationScheduleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReplicationSchedule) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReplicationSchedulePtrOutput struct{ *pulumi.OutputState }

func (ReplicationSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationSchedule)(nil)).Elem()
}

func (o ReplicationSchedulePtrOutput) ToReplicationSchedulePtrOutput() ReplicationSchedulePtrOutput {
	return o
}

func (o ReplicationSchedulePtrOutput) ToReplicationSchedulePtrOutputWithContext(ctx context.Context) ReplicationSchedulePtrOutput {
	return o
}

func (o ReplicationSchedulePtrOutput) Elem() ReplicationScheduleOutput {
	return o.ApplyT(func(v *ReplicationSchedule) ReplicationSchedule {
		if v != nil {
			return *v
		}
		var ret ReplicationSchedule
		return ret
	}).(ReplicationScheduleOutput)
}

func (o ReplicationSchedulePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReplicationSchedulePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReplicationSchedule) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReplicationScheduleInput is an input type that accepts values of the ReplicationSchedule enum
// A concrete instance of `ReplicationScheduleInput` can be one of the following:
//
//	ReplicationSchedule_10minutely
//	ReplicationScheduleHourly
//	ReplicationScheduleDaily
type ReplicationScheduleInput interface {
	pulumi.Input

	ToReplicationScheduleOutput() ReplicationScheduleOutput
	ToReplicationScheduleOutputWithContext(context.Context) ReplicationScheduleOutput
}

var replicationSchedulePtrType = reflect.TypeOf((**ReplicationSchedule)(nil)).Elem()

type ReplicationSchedulePtrInput interface {
	pulumi.Input

	ToReplicationSchedulePtrOutput() ReplicationSchedulePtrOutput
	ToReplicationSchedulePtrOutputWithContext(context.Context) ReplicationSchedulePtrOutput
}

type replicationSchedulePtr string

func ReplicationSchedulePtr(v string) ReplicationSchedulePtrInput {
	return (*replicationSchedulePtr)(&v)
}

func (*replicationSchedulePtr) ElementType() reflect.Type {
	return replicationSchedulePtrType
}

func (in *replicationSchedulePtr) ToReplicationSchedulePtrOutput() ReplicationSchedulePtrOutput {
	return pulumi.ToOutput(in).(ReplicationSchedulePtrOutput)
}

func (in *replicationSchedulePtr) ToReplicationSchedulePtrOutputWithContext(ctx context.Context) ReplicationSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReplicationSchedulePtrOutput)
}

func (in *replicationSchedulePtr) ToOutput(ctx context.Context) pulumix.Output[*ReplicationSchedule] {
	return pulumix.Output[*ReplicationSchedule]{
		OutputState: in.ToReplicationSchedulePtrOutputWithContext(ctx).OutputState,
	}
}

// The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol
type SecurityStyle string

const (
	SecurityStyleNtfs = SecurityStyle("ntfs")
	SecurityStyleUnix = SecurityStyle("unix")
)

func (SecurityStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityStyle)(nil)).Elem()
}

func (e SecurityStyle) ToSecurityStyleOutput() SecurityStyleOutput {
	return pulumi.ToOutput(e).(SecurityStyleOutput)
}

func (e SecurityStyle) ToSecurityStyleOutputWithContext(ctx context.Context) SecurityStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityStyleOutput)
}

func (e SecurityStyle) ToSecurityStylePtrOutput() SecurityStylePtrOutput {
	return e.ToSecurityStylePtrOutputWithContext(context.Background())
}

func (e SecurityStyle) ToSecurityStylePtrOutputWithContext(ctx context.Context) SecurityStylePtrOutput {
	return SecurityStyle(e).ToSecurityStyleOutputWithContext(ctx).ToSecurityStylePtrOutputWithContext(ctx)
}

func (e SecurityStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityStyleOutput struct{ *pulumi.OutputState }

func (SecurityStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityStyle)(nil)).Elem()
}

func (o SecurityStyleOutput) ToSecurityStyleOutput() SecurityStyleOutput {
	return o
}

func (o SecurityStyleOutput) ToSecurityStyleOutputWithContext(ctx context.Context) SecurityStyleOutput {
	return o
}

func (o SecurityStyleOutput) ToSecurityStylePtrOutput() SecurityStylePtrOutput {
	return o.ToSecurityStylePtrOutputWithContext(context.Background())
}

func (o SecurityStyleOutput) ToSecurityStylePtrOutputWithContext(ctx context.Context) SecurityStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityStyle) *SecurityStyle {
		return &v
	}).(SecurityStylePtrOutput)
}

func (o SecurityStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityStylePtrOutput struct{ *pulumi.OutputState }

func (SecurityStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityStyle)(nil)).Elem()
}

func (o SecurityStylePtrOutput) ToSecurityStylePtrOutput() SecurityStylePtrOutput {
	return o
}

func (o SecurityStylePtrOutput) ToSecurityStylePtrOutputWithContext(ctx context.Context) SecurityStylePtrOutput {
	return o
}

func (o SecurityStylePtrOutput) Elem() SecurityStyleOutput {
	return o.ApplyT(func(v *SecurityStyle) SecurityStyle {
		if v != nil {
			return *v
		}
		var ret SecurityStyle
		return ret
	}).(SecurityStyleOutput)
}

func (o SecurityStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityStyleInput is an input type that accepts values of the SecurityStyle enum
// A concrete instance of `SecurityStyleInput` can be one of the following:
//
//	SecurityStyleNtfs
//	SecurityStyleUnix
type SecurityStyleInput interface {
	pulumi.Input

	ToSecurityStyleOutput() SecurityStyleOutput
	ToSecurityStyleOutputWithContext(context.Context) SecurityStyleOutput
}

var securityStylePtrType = reflect.TypeOf((**SecurityStyle)(nil)).Elem()

type SecurityStylePtrInput interface {
	pulumi.Input

	ToSecurityStylePtrOutput() SecurityStylePtrOutput
	ToSecurityStylePtrOutputWithContext(context.Context) SecurityStylePtrOutput
}

type securityStylePtr string

func SecurityStylePtr(v string) SecurityStylePtrInput {
	return (*securityStylePtr)(&v)
}

func (*securityStylePtr) ElementType() reflect.Type {
	return securityStylePtrType
}

func (in *securityStylePtr) ToSecurityStylePtrOutput() SecurityStylePtrOutput {
	return pulumi.ToOutput(in).(SecurityStylePtrOutput)
}

func (in *securityStylePtr) ToSecurityStylePtrOutputWithContext(ctx context.Context) SecurityStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityStylePtrOutput)
}

func (in *securityStylePtr) ToOutput(ctx context.Context) pulumix.Output[*SecurityStyle] {
	return pulumix.Output[*SecurityStyle]{
		OutputState: in.ToSecurityStylePtrOutputWithContext(ctx).OutputState,
	}
}

// The service level of the file system
type ServiceLevel string

const (
	// Standard service level
	ServiceLevelStandard = ServiceLevel("Standard")
	// Premium service level
	ServiceLevelPremium = ServiceLevel("Premium")
	// Ultra service level
	ServiceLevelUltra = ServiceLevel("Ultra")
	// Zone redundant storage service level
	ServiceLevelStandardZRS = ServiceLevel("StandardZRS")
)

func (ServiceLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevel)(nil)).Elem()
}

func (e ServiceLevel) ToServiceLevelOutput() ServiceLevelOutput {
	return pulumi.ToOutput(e).(ServiceLevelOutput)
}

func (e ServiceLevel) ToServiceLevelOutputWithContext(ctx context.Context) ServiceLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceLevelOutput)
}

func (e ServiceLevel) ToServiceLevelPtrOutput() ServiceLevelPtrOutput {
	return e.ToServiceLevelPtrOutputWithContext(context.Background())
}

func (e ServiceLevel) ToServiceLevelPtrOutputWithContext(ctx context.Context) ServiceLevelPtrOutput {
	return ServiceLevel(e).ToServiceLevelOutputWithContext(ctx).ToServiceLevelPtrOutputWithContext(ctx)
}

func (e ServiceLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceLevelOutput struct{ *pulumi.OutputState }

func (ServiceLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevel)(nil)).Elem()
}

func (o ServiceLevelOutput) ToServiceLevelOutput() ServiceLevelOutput {
	return o
}

func (o ServiceLevelOutput) ToServiceLevelOutputWithContext(ctx context.Context) ServiceLevelOutput {
	return o
}

func (o ServiceLevelOutput) ToServiceLevelPtrOutput() ServiceLevelPtrOutput {
	return o.ToServiceLevelPtrOutputWithContext(context.Background())
}

func (o ServiceLevelOutput) ToServiceLevelPtrOutputWithContext(ctx context.Context) ServiceLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevel) *ServiceLevel {
		return &v
	}).(ServiceLevelPtrOutput)
}

func (o ServiceLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceLevelPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevel)(nil)).Elem()
}

func (o ServiceLevelPtrOutput) ToServiceLevelPtrOutput() ServiceLevelPtrOutput {
	return o
}

func (o ServiceLevelPtrOutput) ToServiceLevelPtrOutputWithContext(ctx context.Context) ServiceLevelPtrOutput {
	return o
}

func (o ServiceLevelPtrOutput) Elem() ServiceLevelOutput {
	return o.ApplyT(func(v *ServiceLevel) ServiceLevel {
		if v != nil {
			return *v
		}
		var ret ServiceLevel
		return ret
	}).(ServiceLevelOutput)
}

func (o ServiceLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceLevelInput is an input type that accepts values of the ServiceLevel enum
// A concrete instance of `ServiceLevelInput` can be one of the following:
//
//	ServiceLevelStandard
//	ServiceLevelPremium
//	ServiceLevelUltra
//	ServiceLevelStandardZRS
type ServiceLevelInput interface {
	pulumi.Input

	ToServiceLevelOutput() ServiceLevelOutput
	ToServiceLevelOutputWithContext(context.Context) ServiceLevelOutput
}

var serviceLevelPtrType = reflect.TypeOf((**ServiceLevel)(nil)).Elem()

type ServiceLevelPtrInput interface {
	pulumi.Input

	ToServiceLevelPtrOutput() ServiceLevelPtrOutput
	ToServiceLevelPtrOutputWithContext(context.Context) ServiceLevelPtrOutput
}

type serviceLevelPtr string

func ServiceLevelPtr(v string) ServiceLevelPtrInput {
	return (*serviceLevelPtr)(&v)
}

func (*serviceLevelPtr) ElementType() reflect.Type {
	return serviceLevelPtrType
}

func (in *serviceLevelPtr) ToServiceLevelPtrOutput() ServiceLevelPtrOutput {
	return pulumi.ToOutput(in).(ServiceLevelPtrOutput)
}

func (in *serviceLevelPtr) ToServiceLevelPtrOutputWithContext(ctx context.Context) ServiceLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceLevelPtrOutput)
}

func (in *serviceLevelPtr) ToOutput(ctx context.Context) pulumix.Output[*ServiceLevel] {
	return pulumix.Output[*ServiceLevel]{
		OutputState: in.ToServiceLevelPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(ApplicationTypeOutput{})
	pulumi.RegisterOutputType(ApplicationTypePtrOutput{})
	pulumi.RegisterOutputType(AvsDataStoreOutput{})
	pulumi.RegisterOutputType(AvsDataStorePtrOutput{})
	pulumi.RegisterOutputType(ChownModeOutput{})
	pulumi.RegisterOutputType(ChownModePtrOutput{})
	pulumi.RegisterOutputType(EnableSubvolumesOutput{})
	pulumi.RegisterOutputType(EnableSubvolumesPtrOutput{})
	pulumi.RegisterOutputType(EndpointTypeOutput{})
	pulumi.RegisterOutputType(EndpointTypePtrOutput{})
	pulumi.RegisterOutputType(NetworkFeaturesOutput{})
	pulumi.RegisterOutputType(NetworkFeaturesPtrOutput{})
	pulumi.RegisterOutputType(ReplicationScheduleOutput{})
	pulumi.RegisterOutputType(ReplicationSchedulePtrOutput{})
	pulumi.RegisterOutputType(SecurityStyleOutput{})
	pulumi.RegisterOutputType(SecurityStylePtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelOutput{})
	pulumi.RegisterOutputType(ServiceLevelPtrOutput{})
}
