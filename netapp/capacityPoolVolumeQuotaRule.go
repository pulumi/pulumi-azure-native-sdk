// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package netapp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Quota Rule of a Volume
//
// Uses Azure REST API version 2024-09-01.
//
// Other available API versions: 2022-11-01, 2022-11-01-preview, 2023-05-01, 2023-05-01-preview, 2023-07-01, 2023-07-01-preview, 2023-11-01, 2023-11-01-preview, 2024-01-01, 2024-03-01, 2024-03-01-preview, 2024-05-01, 2024-05-01-preview, 2024-07-01, 2024-07-01-preview, 2024-09-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native netapp [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
type CapacityPoolVolumeQuotaRule struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Gets the status of the VolumeQuotaRule at the time the operation was called.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Size of quota
	QuotaSizeInKiBs pulumi.Float64PtrOutput `pulumi:"quotaSizeInKiBs"`
	// UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>
	QuotaTarget pulumi.StringPtrOutput `pulumi:"quotaTarget"`
	// Type of quota
	QuotaType pulumi.StringPtrOutput `pulumi:"quotaType"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCapacityPoolVolumeQuotaRule registers a new resource with the given unique name, arguments, and options.
func NewCapacityPoolVolumeQuotaRule(ctx *pulumi.Context,
	name string, args *CapacityPoolVolumeQuotaRuleArgs, opts ...pulumi.ResourceOption) (*CapacityPoolVolumeQuotaRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.PoolName == nil {
		return nil, errors.New("invalid value for required argument 'PoolName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.VolumeName == nil {
		return nil, errors.New("invalid value for required argument 'VolumeName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:netapp/v20220101:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20220301:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20220501:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20220901:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20221101:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20221101:VolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20221101preview:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20221101preview:VolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20230501:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20230501:VolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20230501preview:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20230501preview:VolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20230701:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20230701:VolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20230701preview:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20230701preview:VolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20231101:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20231101:VolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20231101preview:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20231101preview:VolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240101:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240101:VolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240301:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240301:VolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240301preview:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240301preview:VolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240501:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240501:VolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240501preview:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240501preview:VolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240701:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240701:VolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240701preview:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240701preview:VolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240901:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240901:VolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp/v20240901preview:CapacityPoolVolumeQuotaRule"),
		},
		{
			Type: pulumi.String("azure-native:netapp:VolumeQuotaRule"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource CapacityPoolVolumeQuotaRule
	err := ctx.RegisterResource("azure-native:netapp:CapacityPoolVolumeQuotaRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCapacityPoolVolumeQuotaRule gets an existing CapacityPoolVolumeQuotaRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCapacityPoolVolumeQuotaRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CapacityPoolVolumeQuotaRuleState, opts ...pulumi.ResourceOption) (*CapacityPoolVolumeQuotaRule, error) {
	var resource CapacityPoolVolumeQuotaRule
	err := ctx.ReadResource("azure-native:netapp:CapacityPoolVolumeQuotaRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CapacityPoolVolumeQuotaRule resources.
type capacityPoolVolumeQuotaRuleState struct {
}

type CapacityPoolVolumeQuotaRuleState struct {
}

func (CapacityPoolVolumeQuotaRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*capacityPoolVolumeQuotaRuleState)(nil)).Elem()
}

type capacityPoolVolumeQuotaRuleArgs struct {
	// The name of the NetApp account
	AccountName string `pulumi:"accountName"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the capacity pool
	PoolName string `pulumi:"poolName"`
	// Size of quota
	QuotaSizeInKiBs *float64 `pulumi:"quotaSizeInKiBs"`
	// UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>
	QuotaTarget *string `pulumi:"quotaTarget"`
	// Type of quota
	QuotaType *string `pulumi:"quotaType"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The name of the volume
	VolumeName string `pulumi:"volumeName"`
	// The name of volume quota rule
	VolumeQuotaRuleName *string `pulumi:"volumeQuotaRuleName"`
}

// The set of arguments for constructing a CapacityPoolVolumeQuotaRule resource.
type CapacityPoolVolumeQuotaRuleArgs struct {
	// The name of the NetApp account
	AccountName pulumi.StringInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the capacity pool
	PoolName pulumi.StringInput
	// Size of quota
	QuotaSizeInKiBs pulumi.Float64PtrInput
	// UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>
	QuotaTarget pulumi.StringPtrInput
	// Type of quota
	QuotaType pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The name of the volume
	VolumeName pulumi.StringInput
	// The name of volume quota rule
	VolumeQuotaRuleName pulumi.StringPtrInput
}

func (CapacityPoolVolumeQuotaRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*capacityPoolVolumeQuotaRuleArgs)(nil)).Elem()
}

type CapacityPoolVolumeQuotaRuleInput interface {
	pulumi.Input

	ToCapacityPoolVolumeQuotaRuleOutput() CapacityPoolVolumeQuotaRuleOutput
	ToCapacityPoolVolumeQuotaRuleOutputWithContext(ctx context.Context) CapacityPoolVolumeQuotaRuleOutput
}

func (*CapacityPoolVolumeQuotaRule) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityPoolVolumeQuotaRule)(nil)).Elem()
}

func (i *CapacityPoolVolumeQuotaRule) ToCapacityPoolVolumeQuotaRuleOutput() CapacityPoolVolumeQuotaRuleOutput {
	return i.ToCapacityPoolVolumeQuotaRuleOutputWithContext(context.Background())
}

func (i *CapacityPoolVolumeQuotaRule) ToCapacityPoolVolumeQuotaRuleOutputWithContext(ctx context.Context) CapacityPoolVolumeQuotaRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityPoolVolumeQuotaRuleOutput)
}

type CapacityPoolVolumeQuotaRuleOutput struct{ *pulumi.OutputState }

func (CapacityPoolVolumeQuotaRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityPoolVolumeQuotaRule)(nil)).Elem()
}

func (o CapacityPoolVolumeQuotaRuleOutput) ToCapacityPoolVolumeQuotaRuleOutput() CapacityPoolVolumeQuotaRuleOutput {
	return o
}

func (o CapacityPoolVolumeQuotaRuleOutput) ToCapacityPoolVolumeQuotaRuleOutputWithContext(ctx context.Context) CapacityPoolVolumeQuotaRuleOutput {
	return o
}

// The Azure API version of the resource.
func (o CapacityPoolVolumeQuotaRuleOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityPoolVolumeQuotaRule) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o CapacityPoolVolumeQuotaRuleOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityPoolVolumeQuotaRule) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o CapacityPoolVolumeQuotaRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityPoolVolumeQuotaRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Gets the status of the VolumeQuotaRule at the time the operation was called.
func (o CapacityPoolVolumeQuotaRuleOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityPoolVolumeQuotaRule) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Size of quota
func (o CapacityPoolVolumeQuotaRuleOutput) QuotaSizeInKiBs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CapacityPoolVolumeQuotaRule) pulumi.Float64PtrOutput { return v.QuotaSizeInKiBs }).(pulumi.Float64PtrOutput)
}

// UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>
func (o CapacityPoolVolumeQuotaRuleOutput) QuotaTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CapacityPoolVolumeQuotaRule) pulumi.StringPtrOutput { return v.QuotaTarget }).(pulumi.StringPtrOutput)
}

// Type of quota
func (o CapacityPoolVolumeQuotaRuleOutput) QuotaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CapacityPoolVolumeQuotaRule) pulumi.StringPtrOutput { return v.QuotaType }).(pulumi.StringPtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o CapacityPoolVolumeQuotaRuleOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *CapacityPoolVolumeQuotaRule) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o CapacityPoolVolumeQuotaRuleOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CapacityPoolVolumeQuotaRule) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o CapacityPoolVolumeQuotaRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityPoolVolumeQuotaRule) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(CapacityPoolVolumeQuotaRuleOutput{})
}
