// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package providerhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Uses Azure REST API version 2024-09-01.
type CustomRollout struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties of the rollout.
	Properties CustomRolloutPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCustomRollout registers a new resource with the given unique name, arguments, and options.
func NewCustomRollout(ctx *pulumi.Context,
	name string, args *CustomRolloutArgs, opts ...pulumi.ResourceOption) (*CustomRollout, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	if args.ProviderNamespace == nil {
		return nil, errors.New("invalid value for required argument 'ProviderNamespace'")
	}
	args.Properties = args.Properties.ToCustomRolloutPropertiesOutput().ApplyT(func(v CustomRolloutProperties) CustomRolloutProperties { return *v.Defaults() }).(CustomRolloutPropertiesOutput)
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:providerhub/v20240901:CustomRollout"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource CustomRollout
	err := ctx.RegisterResource("azure-native:providerhub:CustomRollout", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomRollout gets an existing CustomRollout resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomRollout(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomRolloutState, opts ...pulumi.ResourceOption) (*CustomRollout, error) {
	var resource CustomRollout
	err := ctx.ReadResource("azure-native:providerhub:CustomRollout", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomRollout resources.
type customRolloutState struct {
}

type CustomRolloutState struct {
}

func (CustomRolloutState) ElementType() reflect.Type {
	return reflect.TypeOf((*customRolloutState)(nil)).Elem()
}

type customRolloutArgs struct {
	// Properties of the rollout.
	Properties CustomRolloutProperties `pulumi:"properties"`
	// The name of the resource provider hosted within ProviderHub.
	ProviderNamespace string `pulumi:"providerNamespace"`
	// The rollout name.
	RolloutName *string `pulumi:"rolloutName"`
}

// The set of arguments for constructing a CustomRollout resource.
type CustomRolloutArgs struct {
	// Properties of the rollout.
	Properties CustomRolloutPropertiesInput
	// The name of the resource provider hosted within ProviderHub.
	ProviderNamespace pulumi.StringInput
	// The rollout name.
	RolloutName pulumi.StringPtrInput
}

func (CustomRolloutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customRolloutArgs)(nil)).Elem()
}

type CustomRolloutInput interface {
	pulumi.Input

	ToCustomRolloutOutput() CustomRolloutOutput
	ToCustomRolloutOutputWithContext(ctx context.Context) CustomRolloutOutput
}

func (*CustomRollout) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRollout)(nil)).Elem()
}

func (i *CustomRollout) ToCustomRolloutOutput() CustomRolloutOutput {
	return i.ToCustomRolloutOutputWithContext(context.Background())
}

func (i *CustomRollout) ToCustomRolloutOutputWithContext(ctx context.Context) CustomRolloutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRolloutOutput)
}

type CustomRolloutOutput struct{ *pulumi.OutputState }

func (CustomRolloutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRollout)(nil)).Elem()
}

func (o CustomRolloutOutput) ToCustomRolloutOutput() CustomRolloutOutput {
	return o
}

func (o CustomRolloutOutput) ToCustomRolloutOutputWithContext(ctx context.Context) CustomRolloutOutput {
	return o
}

// The Azure API version of the resource.
func (o CustomRolloutOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRollout) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The name of the resource
func (o CustomRolloutOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRollout) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Properties of the rollout.
func (o CustomRolloutOutput) Properties() CustomRolloutPropertiesResponseOutput {
	return o.ApplyT(func(v *CustomRollout) CustomRolloutPropertiesResponseOutput { return v.Properties }).(CustomRolloutPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o CustomRolloutOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *CustomRollout) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o CustomRolloutOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRollout) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(CustomRolloutOutput{})
}
