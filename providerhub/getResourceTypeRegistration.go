// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package providerhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a resource type details in the given subscription and provider.
//
// Uses Azure REST API version 2024-09-01.
//
// Other available API versions: 2021-09-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native providerhub [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupResourceTypeRegistration(ctx *pulumi.Context, args *LookupResourceTypeRegistrationArgs, opts ...pulumi.InvokeOption) (*LookupResourceTypeRegistrationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupResourceTypeRegistrationResult
	err := ctx.Invoke("azure-native:providerhub:getResourceTypeRegistration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupResourceTypeRegistrationArgs struct {
	// The name of the resource provider hosted within ProviderHub.
	ProviderNamespace string `pulumi:"providerNamespace"`
	// The resource type.
	ResourceType string `pulumi:"resourceType"`
}

type LookupResourceTypeRegistrationResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// Resource type registration kind. This Metadata is also used by portal/tooling/etc to render different UX experiences for resources of the same type.
	Kind *string `pulumi:"kind"`
	// The name of the resource
	Name       string                                     `pulumi:"name"`
	Properties ResourceTypeRegistrationPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupResourceTypeRegistrationResult
func (val *LookupResourceTypeRegistrationResult) Defaults() *LookupResourceTypeRegistrationResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Kind == nil {
		kind_ := "Managed"
		tmp.Kind = &kind_
	}
	return &tmp
}
func LookupResourceTypeRegistrationOutput(ctx *pulumi.Context, args LookupResourceTypeRegistrationOutputArgs, opts ...pulumi.InvokeOption) LookupResourceTypeRegistrationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupResourceTypeRegistrationResultOutput, error) {
			args := v.(LookupResourceTypeRegistrationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:providerhub:getResourceTypeRegistration", args, LookupResourceTypeRegistrationResultOutput{}, options).(LookupResourceTypeRegistrationResultOutput), nil
		}).(LookupResourceTypeRegistrationResultOutput)
}

type LookupResourceTypeRegistrationOutputArgs struct {
	// The name of the resource provider hosted within ProviderHub.
	ProviderNamespace pulumi.StringInput `pulumi:"providerNamespace"`
	// The resource type.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (LookupResourceTypeRegistrationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceTypeRegistrationArgs)(nil)).Elem()
}

type LookupResourceTypeRegistrationResultOutput struct{ *pulumi.OutputState }

func (LookupResourceTypeRegistrationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceTypeRegistrationResult)(nil)).Elem()
}

func (o LookupResourceTypeRegistrationResultOutput) ToLookupResourceTypeRegistrationResultOutput() LookupResourceTypeRegistrationResultOutput {
	return o
}

func (o LookupResourceTypeRegistrationResultOutput) ToLookupResourceTypeRegistrationResultOutputWithContext(ctx context.Context) LookupResourceTypeRegistrationResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupResourceTypeRegistrationResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceTypeRegistrationResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupResourceTypeRegistrationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceTypeRegistrationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource type registration kind. This Metadata is also used by portal/tooling/etc to render different UX experiences for resources of the same type.
func (o LookupResourceTypeRegistrationResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupResourceTypeRegistrationResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o LookupResourceTypeRegistrationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceTypeRegistrationResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupResourceTypeRegistrationResultOutput) Properties() ResourceTypeRegistrationPropertiesResponseOutput {
	return o.ApplyT(func(v LookupResourceTypeRegistrationResult) ResourceTypeRegistrationPropertiesResponse {
		return v.Properties
	}).(ResourceTypeRegistrationPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupResourceTypeRegistrationResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupResourceTypeRegistrationResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupResourceTypeRegistrationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceTypeRegistrationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResourceTypeRegistrationResultOutput{})
}
