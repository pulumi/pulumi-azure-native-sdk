// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package providerhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Uses Azure REST API version 2024-09-01.
type ProviderMonitorSetting struct {
	pulumi.CustomResourceState

	// The Azure API version of the resource.
	AzureApiVersion pulumi.StringOutput `pulumi:"azureApiVersion"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name       pulumi.StringOutput                            `pulumi:"name"`
	Properties ProviderMonitorSettingPropertiesResponseOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewProviderMonitorSetting registers a new resource with the given unique name, arguments, and options.
func NewProviderMonitorSetting(ctx *pulumi.Context,
	name string, args *ProviderMonitorSettingArgs, opts ...pulumi.ResourceOption) (*ProviderMonitorSetting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:providerhub/v20240901:ProviderMonitorSetting"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ProviderMonitorSetting
	err := ctx.RegisterResource("azure-native:providerhub:ProviderMonitorSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProviderMonitorSetting gets an existing ProviderMonitorSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProviderMonitorSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProviderMonitorSettingState, opts ...pulumi.ResourceOption) (*ProviderMonitorSetting, error) {
	var resource ProviderMonitorSetting
	err := ctx.ReadResource("azure-native:providerhub:ProviderMonitorSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProviderMonitorSetting resources.
type providerMonitorSettingState struct {
}

type ProviderMonitorSettingState struct {
}

func (ProviderMonitorSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*providerMonitorSettingState)(nil)).Elem()
}

type providerMonitorSettingArgs struct {
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the provider monitor setting.
	ProviderMonitorSettingName *string `pulumi:"providerMonitorSettingName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ProviderMonitorSetting resource.
type ProviderMonitorSettingArgs struct {
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the provider monitor setting.
	ProviderMonitorSettingName pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (ProviderMonitorSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerMonitorSettingArgs)(nil)).Elem()
}

type ProviderMonitorSettingInput interface {
	pulumi.Input

	ToProviderMonitorSettingOutput() ProviderMonitorSettingOutput
	ToProviderMonitorSettingOutputWithContext(ctx context.Context) ProviderMonitorSettingOutput
}

func (*ProviderMonitorSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderMonitorSetting)(nil)).Elem()
}

func (i *ProviderMonitorSetting) ToProviderMonitorSettingOutput() ProviderMonitorSettingOutput {
	return i.ToProviderMonitorSettingOutputWithContext(context.Background())
}

func (i *ProviderMonitorSetting) ToProviderMonitorSettingOutputWithContext(ctx context.Context) ProviderMonitorSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderMonitorSettingOutput)
}

type ProviderMonitorSettingOutput struct{ *pulumi.OutputState }

func (ProviderMonitorSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderMonitorSetting)(nil)).Elem()
}

func (o ProviderMonitorSettingOutput) ToProviderMonitorSettingOutput() ProviderMonitorSettingOutput {
	return o
}

func (o ProviderMonitorSettingOutput) ToProviderMonitorSettingOutputWithContext(ctx context.Context) ProviderMonitorSettingOutput {
	return o
}

// The Azure API version of the resource.
func (o ProviderMonitorSettingOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ProviderMonitorSetting) pulumi.StringOutput { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o ProviderMonitorSettingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ProviderMonitorSetting) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o ProviderMonitorSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProviderMonitorSetting) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ProviderMonitorSettingOutput) Properties() ProviderMonitorSettingPropertiesResponseOutput {
	return o.ApplyT(func(v *ProviderMonitorSetting) ProviderMonitorSettingPropertiesResponseOutput { return v.Properties }).(ProviderMonitorSettingPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o ProviderMonitorSettingOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ProviderMonitorSetting) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o ProviderMonitorSettingOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProviderMonitorSetting) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ProviderMonitorSettingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ProviderMonitorSetting) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ProviderMonitorSettingOutput{})
}
