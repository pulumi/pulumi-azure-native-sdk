// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package providerhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the notification registration details.
//
// Uses Azure REST API version 2024-09-01.
//
// Other available API versions: 2021-09-01-preview. These can be accessed by generating a local SDK package using the CLI command `pulumi package add azure-native providerhub [ApiVersion]`. See the [version guide](../../../version-guide/#accessing-any-api-version-via-local-packages) for details.
func LookupNotificationRegistration(ctx *pulumi.Context, args *LookupNotificationRegistrationArgs, opts ...pulumi.InvokeOption) (*LookupNotificationRegistrationResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupNotificationRegistrationResult
	err := ctx.Invoke("azure-native:providerhub:getNotificationRegistration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupNotificationRegistrationArgs struct {
	// The notification registration.
	NotificationRegistrationName string `pulumi:"notificationRegistrationName"`
	// The name of the resource provider hosted within ProviderHub.
	ProviderNamespace string `pulumi:"providerNamespace"`
}

type LookupNotificationRegistrationResult struct {
	// The Azure API version of the resource.
	AzureApiVersion string `pulumi:"azureApiVersion"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The name of the resource
	Name       string                                     `pulumi:"name"`
	Properties NotificationRegistrationPropertiesResponse `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupNotificationRegistrationOutput(ctx *pulumi.Context, args LookupNotificationRegistrationOutputArgs, opts ...pulumi.InvokeOption) LookupNotificationRegistrationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNotificationRegistrationResultOutput, error) {
			args := v.(LookupNotificationRegistrationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:providerhub:getNotificationRegistration", args, LookupNotificationRegistrationResultOutput{}, options).(LookupNotificationRegistrationResultOutput), nil
		}).(LookupNotificationRegistrationResultOutput)
}

type LookupNotificationRegistrationOutputArgs struct {
	// The notification registration.
	NotificationRegistrationName pulumi.StringInput `pulumi:"notificationRegistrationName"`
	// The name of the resource provider hosted within ProviderHub.
	ProviderNamespace pulumi.StringInput `pulumi:"providerNamespace"`
}

func (LookupNotificationRegistrationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNotificationRegistrationArgs)(nil)).Elem()
}

type LookupNotificationRegistrationResultOutput struct{ *pulumi.OutputState }

func (LookupNotificationRegistrationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNotificationRegistrationResult)(nil)).Elem()
}

func (o LookupNotificationRegistrationResultOutput) ToLookupNotificationRegistrationResultOutput() LookupNotificationRegistrationResultOutput {
	return o
}

func (o LookupNotificationRegistrationResultOutput) ToLookupNotificationRegistrationResultOutputWithContext(ctx context.Context) LookupNotificationRegistrationResultOutput {
	return o
}

// The Azure API version of the resource.
func (o LookupNotificationRegistrationResultOutput) AzureApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationRegistrationResult) string { return v.AzureApiVersion }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupNotificationRegistrationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationRegistrationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupNotificationRegistrationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationRegistrationResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNotificationRegistrationResultOutput) Properties() NotificationRegistrationPropertiesResponseOutput {
	return o.ApplyT(func(v LookupNotificationRegistrationResult) NotificationRegistrationPropertiesResponse {
		return v.Properties
	}).(NotificationRegistrationPropertiesResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupNotificationRegistrationResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupNotificationRegistrationResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupNotificationRegistrationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNotificationRegistrationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNotificationRegistrationResultOutput{})
}
