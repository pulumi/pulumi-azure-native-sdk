// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package providerhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Azure REST API version: 2021-09-01-preview. Prior API version in Azure Native 1.x: 2020-11-20.
type ProviderRegistration struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name       pulumi.StringOutput                          `pulumi:"name"`
	Properties ProviderRegistrationResponsePropertiesOutput `pulumi:"properties"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewProviderRegistration registers a new resource with the given unique name, arguments, and options.
func NewProviderRegistration(ctx *pulumi.Context,
	name string, args *ProviderRegistrationArgs, opts ...pulumi.ResourceOption) (*ProviderRegistration, error) {
	if args == nil {
		args = &ProviderRegistrationArgs{}
	}

	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:providerhub/v20201120:ProviderRegistration"),
		},
		{
			Type: pulumi.String("azure-native:providerhub/v20210501preview:ProviderRegistration"),
		},
		{
			Type: pulumi.String("azure-native:providerhub/v20210601preview:ProviderRegistration"),
		},
		{
			Type: pulumi.String("azure-native:providerhub/v20210901preview:ProviderRegistration"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ProviderRegistration
	err := ctx.RegisterResource("azure-native:providerhub:ProviderRegistration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProviderRegistration gets an existing ProviderRegistration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProviderRegistration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProviderRegistrationState, opts ...pulumi.ResourceOption) (*ProviderRegistration, error) {
	var resource ProviderRegistration
	err := ctx.ReadResource("azure-native:providerhub:ProviderRegistration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProviderRegistration resources.
type providerRegistrationState struct {
}

type ProviderRegistrationState struct {
}

func (ProviderRegistrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*providerRegistrationState)(nil)).Elem()
}

type providerRegistrationArgs struct {
	Properties *ProviderRegistrationProperties `pulumi:"properties"`
	// The name of the resource provider hosted within ProviderHub.
	ProviderNamespace *string `pulumi:"providerNamespace"`
}

// The set of arguments for constructing a ProviderRegistration resource.
type ProviderRegistrationArgs struct {
	Properties ProviderRegistrationPropertiesPtrInput
	// The name of the resource provider hosted within ProviderHub.
	ProviderNamespace pulumi.StringPtrInput
}

func (ProviderRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerRegistrationArgs)(nil)).Elem()
}

type ProviderRegistrationInput interface {
	pulumi.Input

	ToProviderRegistrationOutput() ProviderRegistrationOutput
	ToProviderRegistrationOutputWithContext(ctx context.Context) ProviderRegistrationOutput
}

func (*ProviderRegistration) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderRegistration)(nil)).Elem()
}

func (i *ProviderRegistration) ToProviderRegistrationOutput() ProviderRegistrationOutput {
	return i.ToProviderRegistrationOutputWithContext(context.Background())
}

func (i *ProviderRegistration) ToProviderRegistrationOutputWithContext(ctx context.Context) ProviderRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderRegistrationOutput)
}

func (i *ProviderRegistration) ToOutput(ctx context.Context) pulumix.Output[*ProviderRegistration] {
	return pulumix.Output[*ProviderRegistration]{
		OutputState: i.ToProviderRegistrationOutputWithContext(ctx).OutputState,
	}
}

type ProviderRegistrationOutput struct{ *pulumi.OutputState }

func (ProviderRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderRegistration)(nil)).Elem()
}

func (o ProviderRegistrationOutput) ToProviderRegistrationOutput() ProviderRegistrationOutput {
	return o
}

func (o ProviderRegistrationOutput) ToProviderRegistrationOutputWithContext(ctx context.Context) ProviderRegistrationOutput {
	return o
}

func (o ProviderRegistrationOutput) ToOutput(ctx context.Context) pulumix.Output[*ProviderRegistration] {
	return pulumix.Output[*ProviderRegistration]{
		OutputState: o.OutputState,
	}
}

// The name of the resource
func (o ProviderRegistrationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProviderRegistration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ProviderRegistrationOutput) Properties() ProviderRegistrationResponsePropertiesOutput {
	return o.ApplyT(func(v *ProviderRegistration) ProviderRegistrationResponsePropertiesOutput { return v.Properties }).(ProviderRegistrationResponsePropertiesOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o ProviderRegistrationOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *ProviderRegistration) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o ProviderRegistrationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ProviderRegistration) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ProviderRegistrationOutput{})
}
