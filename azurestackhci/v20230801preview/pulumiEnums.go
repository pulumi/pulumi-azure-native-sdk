// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230801preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Indicates the way the update content can be downloaded.
type AvailabilityType string

const (
	AvailabilityTypeLocal  = AvailabilityType("Local")
	AvailabilityTypeOnline = AvailabilityType("Online")
	AvailabilityTypeNotify = AvailabilityType("Notify")
)

func (AvailabilityType) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityType)(nil)).Elem()
}

func (e AvailabilityType) ToAvailabilityTypeOutput() AvailabilityTypeOutput {
	return pulumi.ToOutput(e).(AvailabilityTypeOutput)
}

func (e AvailabilityType) ToAvailabilityTypeOutputWithContext(ctx context.Context) AvailabilityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AvailabilityTypeOutput)
}

func (e AvailabilityType) ToAvailabilityTypePtrOutput() AvailabilityTypePtrOutput {
	return e.ToAvailabilityTypePtrOutputWithContext(context.Background())
}

func (e AvailabilityType) ToAvailabilityTypePtrOutputWithContext(ctx context.Context) AvailabilityTypePtrOutput {
	return AvailabilityType(e).ToAvailabilityTypeOutputWithContext(ctx).ToAvailabilityTypePtrOutputWithContext(ctx)
}

func (e AvailabilityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AvailabilityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AvailabilityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AvailabilityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AvailabilityTypeOutput struct{ *pulumi.OutputState }

func (AvailabilityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityType)(nil)).Elem()
}

func (o AvailabilityTypeOutput) ToAvailabilityTypeOutput() AvailabilityTypeOutput {
	return o
}

func (o AvailabilityTypeOutput) ToAvailabilityTypeOutputWithContext(ctx context.Context) AvailabilityTypeOutput {
	return o
}

func (o AvailabilityTypeOutput) ToAvailabilityTypePtrOutput() AvailabilityTypePtrOutput {
	return o.ToAvailabilityTypePtrOutputWithContext(context.Background())
}

func (o AvailabilityTypeOutput) ToAvailabilityTypePtrOutputWithContext(ctx context.Context) AvailabilityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AvailabilityType) *AvailabilityType {
		return &v
	}).(AvailabilityTypePtrOutput)
}

func (o AvailabilityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AvailabilityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AvailabilityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AvailabilityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AvailabilityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AvailabilityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AvailabilityTypePtrOutput struct{ *pulumi.OutputState }

func (AvailabilityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AvailabilityType)(nil)).Elem()
}

func (o AvailabilityTypePtrOutput) ToAvailabilityTypePtrOutput() AvailabilityTypePtrOutput {
	return o
}

func (o AvailabilityTypePtrOutput) ToAvailabilityTypePtrOutputWithContext(ctx context.Context) AvailabilityTypePtrOutput {
	return o
}

func (o AvailabilityTypePtrOutput) Elem() AvailabilityTypeOutput {
	return o.ApplyT(func(v *AvailabilityType) AvailabilityType {
		if v != nil {
			return *v
		}
		var ret AvailabilityType
		return ret
	}).(AvailabilityTypeOutput)
}

func (o AvailabilityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AvailabilityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AvailabilityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AvailabilityTypeInput is an input type that accepts values of the AvailabilityType enum
// A concrete instance of `AvailabilityTypeInput` can be one of the following:
//
//	AvailabilityTypeLocal
//	AvailabilityTypeOnline
//	AvailabilityTypeNotify
type AvailabilityTypeInput interface {
	pulumi.Input

	ToAvailabilityTypeOutput() AvailabilityTypeOutput
	ToAvailabilityTypeOutputWithContext(context.Context) AvailabilityTypeOutput
}

var availabilityTypePtrType = reflect.TypeOf((**AvailabilityType)(nil)).Elem()

type AvailabilityTypePtrInput interface {
	pulumi.Input

	ToAvailabilityTypePtrOutput() AvailabilityTypePtrOutput
	ToAvailabilityTypePtrOutputWithContext(context.Context) AvailabilityTypePtrOutput
}

type availabilityTypePtr string

func AvailabilityTypePtr(v string) AvailabilityTypePtrInput {
	return (*availabilityTypePtr)(&v)
}

func (*availabilityTypePtr) ElementType() reflect.Type {
	return availabilityTypePtrType
}

func (in *availabilityTypePtr) ToAvailabilityTypePtrOutput() AvailabilityTypePtrOutput {
	return pulumi.ToOutput(in).(AvailabilityTypePtrOutput)
}

func (in *availabilityTypePtr) ToAvailabilityTypePtrOutputWithContext(ctx context.Context) AvailabilityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AvailabilityTypePtrOutput)
}

// The deployment mode for cluster deployment.
type DeploymentMode string

const (
	// Validate deployment settings for cluster.
	DeploymentModeValidate = DeploymentMode("Validate")
	// Deploy cluster using deployment settings.
	DeploymentModeDeploy = DeploymentMode("Deploy")
)

func (DeploymentMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentMode)(nil)).Elem()
}

func (e DeploymentMode) ToDeploymentModeOutput() DeploymentModeOutput {
	return pulumi.ToOutput(e).(DeploymentModeOutput)
}

func (e DeploymentMode) ToDeploymentModeOutputWithContext(ctx context.Context) DeploymentModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DeploymentModeOutput)
}

func (e DeploymentMode) ToDeploymentModePtrOutput() DeploymentModePtrOutput {
	return e.ToDeploymentModePtrOutputWithContext(context.Background())
}

func (e DeploymentMode) ToDeploymentModePtrOutputWithContext(ctx context.Context) DeploymentModePtrOutput {
	return DeploymentMode(e).ToDeploymentModeOutputWithContext(ctx).ToDeploymentModePtrOutputWithContext(ctx)
}

func (e DeploymentMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeploymentMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeploymentMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DeploymentMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DeploymentModeOutput struct{ *pulumi.OutputState }

func (DeploymentModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentMode)(nil)).Elem()
}

func (o DeploymentModeOutput) ToDeploymentModeOutput() DeploymentModeOutput {
	return o
}

func (o DeploymentModeOutput) ToDeploymentModeOutputWithContext(ctx context.Context) DeploymentModeOutput {
	return o
}

func (o DeploymentModeOutput) ToDeploymentModePtrOutput() DeploymentModePtrOutput {
	return o.ToDeploymentModePtrOutputWithContext(context.Background())
}

func (o DeploymentModeOutput) ToDeploymentModePtrOutputWithContext(ctx context.Context) DeploymentModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentMode) *DeploymentMode {
		return &v
	}).(DeploymentModePtrOutput)
}

func (o DeploymentModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DeploymentModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DeploymentMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DeploymentModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DeploymentModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DeploymentMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DeploymentModePtrOutput struct{ *pulumi.OutputState }

func (DeploymentModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentMode)(nil)).Elem()
}

func (o DeploymentModePtrOutput) ToDeploymentModePtrOutput() DeploymentModePtrOutput {
	return o
}

func (o DeploymentModePtrOutput) ToDeploymentModePtrOutputWithContext(ctx context.Context) DeploymentModePtrOutput {
	return o
}

func (o DeploymentModePtrOutput) Elem() DeploymentModeOutput {
	return o.ApplyT(func(v *DeploymentMode) DeploymentMode {
		if v != nil {
			return *v
		}
		var ret DeploymentMode
		return ret
	}).(DeploymentModeOutput)
}

func (o DeploymentModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DeploymentModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DeploymentMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DeploymentModeInput is an input type that accepts values of the DeploymentMode enum
// A concrete instance of `DeploymentModeInput` can be one of the following:
//
//	DeploymentModeValidate
//	DeploymentModeDeploy
type DeploymentModeInput interface {
	pulumi.Input

	ToDeploymentModeOutput() DeploymentModeOutput
	ToDeploymentModeOutputWithContext(context.Context) DeploymentModeOutput
}

var deploymentModePtrType = reflect.TypeOf((**DeploymentMode)(nil)).Elem()

type DeploymentModePtrInput interface {
	pulumi.Input

	ToDeploymentModePtrOutput() DeploymentModePtrOutput
	ToDeploymentModePtrOutputWithContext(context.Context) DeploymentModePtrOutput
}

type deploymentModePtr string

func DeploymentModePtr(v string) DeploymentModePtrInput {
	return (*deploymentModePtr)(&v)
}

func (*deploymentModePtr) ElementType() reflect.Type {
	return deploymentModePtrType
}

func (in *deploymentModePtr) ToDeploymentModePtrOutput() DeploymentModePtrOutput {
	return pulumi.ToOutput(in).(DeploymentModePtrOutput)
}

func (in *deploymentModePtr) ToDeploymentModePtrOutputWithContext(ctx context.Context) DeploymentModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DeploymentModePtrOutput)
}

// Desired level of diagnostic data emitted by the cluster.
type DiagnosticLevel string

const (
	DiagnosticLevelOff      = DiagnosticLevel("Off")
	DiagnosticLevelBasic    = DiagnosticLevel("Basic")
	DiagnosticLevelEnhanced = DiagnosticLevel("Enhanced")
)

func (DiagnosticLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticLevel)(nil)).Elem()
}

func (e DiagnosticLevel) ToDiagnosticLevelOutput() DiagnosticLevelOutput {
	return pulumi.ToOutput(e).(DiagnosticLevelOutput)
}

func (e DiagnosticLevel) ToDiagnosticLevelOutputWithContext(ctx context.Context) DiagnosticLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiagnosticLevelOutput)
}

func (e DiagnosticLevel) ToDiagnosticLevelPtrOutput() DiagnosticLevelPtrOutput {
	return e.ToDiagnosticLevelPtrOutputWithContext(context.Background())
}

func (e DiagnosticLevel) ToDiagnosticLevelPtrOutputWithContext(ctx context.Context) DiagnosticLevelPtrOutput {
	return DiagnosticLevel(e).ToDiagnosticLevelOutputWithContext(ctx).ToDiagnosticLevelPtrOutputWithContext(ctx)
}

func (e DiagnosticLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiagnosticLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiagnosticLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiagnosticLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiagnosticLevelOutput struct{ *pulumi.OutputState }

func (DiagnosticLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticLevel)(nil)).Elem()
}

func (o DiagnosticLevelOutput) ToDiagnosticLevelOutput() DiagnosticLevelOutput {
	return o
}

func (o DiagnosticLevelOutput) ToDiagnosticLevelOutputWithContext(ctx context.Context) DiagnosticLevelOutput {
	return o
}

func (o DiagnosticLevelOutput) ToDiagnosticLevelPtrOutput() DiagnosticLevelPtrOutput {
	return o.ToDiagnosticLevelPtrOutputWithContext(context.Background())
}

func (o DiagnosticLevelOutput) ToDiagnosticLevelPtrOutputWithContext(ctx context.Context) DiagnosticLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiagnosticLevel) *DiagnosticLevel {
		return &v
	}).(DiagnosticLevelPtrOutput)
}

func (o DiagnosticLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiagnosticLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiagnosticLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiagnosticLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiagnosticLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiagnosticLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiagnosticLevelPtrOutput struct{ *pulumi.OutputState }

func (DiagnosticLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticLevel)(nil)).Elem()
}

func (o DiagnosticLevelPtrOutput) ToDiagnosticLevelPtrOutput() DiagnosticLevelPtrOutput {
	return o
}

func (o DiagnosticLevelPtrOutput) ToDiagnosticLevelPtrOutputWithContext(ctx context.Context) DiagnosticLevelPtrOutput {
	return o
}

func (o DiagnosticLevelPtrOutput) Elem() DiagnosticLevelOutput {
	return o.ApplyT(func(v *DiagnosticLevel) DiagnosticLevel {
		if v != nil {
			return *v
		}
		var ret DiagnosticLevel
		return ret
	}).(DiagnosticLevelOutput)
}

func (o DiagnosticLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiagnosticLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiagnosticLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiagnosticLevelInput is an input type that accepts values of the DiagnosticLevel enum
// A concrete instance of `DiagnosticLevelInput` can be one of the following:
//
//	DiagnosticLevelOff
//	DiagnosticLevelBasic
//	DiagnosticLevelEnhanced
type DiagnosticLevelInput interface {
	pulumi.Input

	ToDiagnosticLevelOutput() DiagnosticLevelOutput
	ToDiagnosticLevelOutputWithContext(context.Context) DiagnosticLevelOutput
}

var diagnosticLevelPtrType = reflect.TypeOf((**DiagnosticLevel)(nil)).Elem()

type DiagnosticLevelPtrInput interface {
	pulumi.Input

	ToDiagnosticLevelPtrOutput() DiagnosticLevelPtrOutput
	ToDiagnosticLevelPtrOutputWithContext(context.Context) DiagnosticLevelPtrOutput
}

type diagnosticLevelPtr string

func DiagnosticLevelPtr(v string) DiagnosticLevelPtrInput {
	return (*diagnosticLevelPtr)(&v)
}

func (*diagnosticLevelPtr) ElementType() reflect.Type {
	return diagnosticLevelPtrType
}

func (in *diagnosticLevelPtr) ToDiagnosticLevelPtrOutput() DiagnosticLevelPtrOutput {
	return pulumi.ToOutput(in).(DiagnosticLevelPtrOutput)
}

func (in *diagnosticLevelPtr) ToDiagnosticLevelPtrOutputWithContext(ctx context.Context) DiagnosticLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiagnosticLevelPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
type ManagedServiceIdentityType string

const (
	ManagedServiceIdentityTypeNone                         = ManagedServiceIdentityType("None")
	ManagedServiceIdentityTypeSystemAssigned               = ManagedServiceIdentityType("SystemAssigned")
	ManagedServiceIdentityTypeUserAssigned                 = ManagedServiceIdentityType("UserAssigned")
	ManagedServiceIdentityType_SystemAssigned_UserAssigned = ManagedServiceIdentityType("SystemAssigned, UserAssigned")
)

func (ManagedServiceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedServiceIdentityTypeOutput)
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return e.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return ManagedServiceIdentityType(e).ToManagedServiceIdentityTypeOutputWithContext(ctx).ToManagedServiceIdentityTypePtrOutputWithContext(ctx)
}

func (e ManagedServiceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedServiceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedServiceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedServiceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypeOutputWithContext(ctx context.Context) ManagedServiceIdentityTypeOutput {
	return o
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o.ToManagedServiceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentityType) *ManagedServiceIdentityType {
		return &v
	}).(ManagedServiceIdentityTypePtrOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedServiceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return o
}

func (o ManagedServiceIdentityTypePtrOutput) Elem() ManagedServiceIdentityTypeOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityType) ManagedServiceIdentityType {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityType
		return ret
	}).(ManagedServiceIdentityTypeOutput)
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedServiceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagedServiceIdentityTypeInput is an input type that accepts values of the ManagedServiceIdentityType enum
// A concrete instance of `ManagedServiceIdentityTypeInput` can be one of the following:
//
//	ManagedServiceIdentityTypeNone
//	ManagedServiceIdentityTypeSystemAssigned
//	ManagedServiceIdentityTypeUserAssigned
//	ManagedServiceIdentityType_SystemAssigned_UserAssigned
type ManagedServiceIdentityTypeInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypeOutput() ManagedServiceIdentityTypeOutput
	ToManagedServiceIdentityTypeOutputWithContext(context.Context) ManagedServiceIdentityTypeOutput
}

var managedServiceIdentityTypePtrType = reflect.TypeOf((**ManagedServiceIdentityType)(nil)).Elem()

type ManagedServiceIdentityTypePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput
	ToManagedServiceIdentityTypePtrOutputWithContext(context.Context) ManagedServiceIdentityTypePtrOutput
}

type managedServiceIdentityTypePtr string

func ManagedServiceIdentityTypePtr(v string) ManagedServiceIdentityTypePtrInput {
	return (*managedServiceIdentityTypePtr)(&v)
}

func (*managedServiceIdentityTypePtr) ElementType() reflect.Type {
	return managedServiceIdentityTypePtrType
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutput() ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ManagedServiceIdentityTypePtrOutput)
}

func (in *managedServiceIdentityTypePtr) ToManagedServiceIdentityTypePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedServiceIdentityTypePtrOutput)
}

// Name of the service.
type ServiceName string

const (
	ServiceNameWAC = ServiceName("WAC")
)

func (ServiceName) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceName)(nil)).Elem()
}

func (e ServiceName) ToServiceNameOutput() ServiceNameOutput {
	return pulumi.ToOutput(e).(ServiceNameOutput)
}

func (e ServiceName) ToServiceNameOutputWithContext(ctx context.Context) ServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceNameOutput)
}

func (e ServiceName) ToServiceNamePtrOutput() ServiceNamePtrOutput {
	return e.ToServiceNamePtrOutputWithContext(context.Background())
}

func (e ServiceName) ToServiceNamePtrOutputWithContext(ctx context.Context) ServiceNamePtrOutput {
	return ServiceName(e).ToServiceNameOutputWithContext(ctx).ToServiceNamePtrOutputWithContext(ctx)
}

func (e ServiceName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceNameOutput struct{ *pulumi.OutputState }

func (ServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceName)(nil)).Elem()
}

func (o ServiceNameOutput) ToServiceNameOutput() ServiceNameOutput {
	return o
}

func (o ServiceNameOutput) ToServiceNameOutputWithContext(ctx context.Context) ServiceNameOutput {
	return o
}

func (o ServiceNameOutput) ToServiceNamePtrOutput() ServiceNamePtrOutput {
	return o.ToServiceNamePtrOutputWithContext(context.Background())
}

func (o ServiceNameOutput) ToServiceNamePtrOutputWithContext(ctx context.Context) ServiceNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceName) *ServiceName {
		return &v
	}).(ServiceNamePtrOutput)
}

func (o ServiceNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceNamePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceName)(nil)).Elem()
}

func (o ServiceNamePtrOutput) ToServiceNamePtrOutput() ServiceNamePtrOutput {
	return o
}

func (o ServiceNamePtrOutput) ToServiceNamePtrOutputWithContext(ctx context.Context) ServiceNamePtrOutput {
	return o
}

func (o ServiceNamePtrOutput) Elem() ServiceNameOutput {
	return o.ApplyT(func(v *ServiceName) ServiceName {
		if v != nil {
			return *v
		}
		var ret ServiceName
		return ret
	}).(ServiceNameOutput)
}

func (o ServiceNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceNameInput is an input type that accepts values of the ServiceName enum
// A concrete instance of `ServiceNameInput` can be one of the following:
//
//	ServiceNameWAC
type ServiceNameInput interface {
	pulumi.Input

	ToServiceNameOutput() ServiceNameOutput
	ToServiceNameOutputWithContext(context.Context) ServiceNameOutput
}

var serviceNamePtrType = reflect.TypeOf((**ServiceName)(nil)).Elem()

type ServiceNamePtrInput interface {
	pulumi.Input

	ToServiceNamePtrOutput() ServiceNamePtrOutput
	ToServiceNamePtrOutputWithContext(context.Context) ServiceNamePtrOutput
}

type serviceNamePtr string

func ServiceNamePtr(v string) ServiceNamePtrInput {
	return (*serviceNamePtr)(&v)
}

func (*serviceNamePtr) ElementType() reflect.Type {
	return serviceNamePtrType
}

func (in *serviceNamePtr) ToServiceNamePtrOutput() ServiceNamePtrOutput {
	return pulumi.ToOutput(in).(ServiceNamePtrOutput)
}

func (in *serviceNamePtr) ToServiceNamePtrOutputWithContext(ctx context.Context) ServiceNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceNamePtrOutput)
}

// Customer Intent for Software Assurance Benefit.
type SoftwareAssuranceIntent string

const (
	SoftwareAssuranceIntentEnable  = SoftwareAssuranceIntent("Enable")
	SoftwareAssuranceIntentDisable = SoftwareAssuranceIntent("Disable")
)

func (SoftwareAssuranceIntent) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareAssuranceIntent)(nil)).Elem()
}

func (e SoftwareAssuranceIntent) ToSoftwareAssuranceIntentOutput() SoftwareAssuranceIntentOutput {
	return pulumi.ToOutput(e).(SoftwareAssuranceIntentOutput)
}

func (e SoftwareAssuranceIntent) ToSoftwareAssuranceIntentOutputWithContext(ctx context.Context) SoftwareAssuranceIntentOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SoftwareAssuranceIntentOutput)
}

func (e SoftwareAssuranceIntent) ToSoftwareAssuranceIntentPtrOutput() SoftwareAssuranceIntentPtrOutput {
	return e.ToSoftwareAssuranceIntentPtrOutputWithContext(context.Background())
}

func (e SoftwareAssuranceIntent) ToSoftwareAssuranceIntentPtrOutputWithContext(ctx context.Context) SoftwareAssuranceIntentPtrOutput {
	return SoftwareAssuranceIntent(e).ToSoftwareAssuranceIntentOutputWithContext(ctx).ToSoftwareAssuranceIntentPtrOutputWithContext(ctx)
}

func (e SoftwareAssuranceIntent) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SoftwareAssuranceIntent) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SoftwareAssuranceIntent) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SoftwareAssuranceIntent) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SoftwareAssuranceIntentOutput struct{ *pulumi.OutputState }

func (SoftwareAssuranceIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareAssuranceIntent)(nil)).Elem()
}

func (o SoftwareAssuranceIntentOutput) ToSoftwareAssuranceIntentOutput() SoftwareAssuranceIntentOutput {
	return o
}

func (o SoftwareAssuranceIntentOutput) ToSoftwareAssuranceIntentOutputWithContext(ctx context.Context) SoftwareAssuranceIntentOutput {
	return o
}

func (o SoftwareAssuranceIntentOutput) ToSoftwareAssuranceIntentPtrOutput() SoftwareAssuranceIntentPtrOutput {
	return o.ToSoftwareAssuranceIntentPtrOutputWithContext(context.Background())
}

func (o SoftwareAssuranceIntentOutput) ToSoftwareAssuranceIntentPtrOutputWithContext(ctx context.Context) SoftwareAssuranceIntentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SoftwareAssuranceIntent) *SoftwareAssuranceIntent {
		return &v
	}).(SoftwareAssuranceIntentPtrOutput)
}

func (o SoftwareAssuranceIntentOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SoftwareAssuranceIntentOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SoftwareAssuranceIntent) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SoftwareAssuranceIntentOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SoftwareAssuranceIntentOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SoftwareAssuranceIntent) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SoftwareAssuranceIntentPtrOutput struct{ *pulumi.OutputState }

func (SoftwareAssuranceIntentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareAssuranceIntent)(nil)).Elem()
}

func (o SoftwareAssuranceIntentPtrOutput) ToSoftwareAssuranceIntentPtrOutput() SoftwareAssuranceIntentPtrOutput {
	return o
}

func (o SoftwareAssuranceIntentPtrOutput) ToSoftwareAssuranceIntentPtrOutputWithContext(ctx context.Context) SoftwareAssuranceIntentPtrOutput {
	return o
}

func (o SoftwareAssuranceIntentPtrOutput) Elem() SoftwareAssuranceIntentOutput {
	return o.ApplyT(func(v *SoftwareAssuranceIntent) SoftwareAssuranceIntent {
		if v != nil {
			return *v
		}
		var ret SoftwareAssuranceIntent
		return ret
	}).(SoftwareAssuranceIntentOutput)
}

func (o SoftwareAssuranceIntentPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SoftwareAssuranceIntentPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SoftwareAssuranceIntent) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SoftwareAssuranceIntentInput is an input type that accepts values of the SoftwareAssuranceIntent enum
// A concrete instance of `SoftwareAssuranceIntentInput` can be one of the following:
//
//	SoftwareAssuranceIntentEnable
//	SoftwareAssuranceIntentDisable
type SoftwareAssuranceIntentInput interface {
	pulumi.Input

	ToSoftwareAssuranceIntentOutput() SoftwareAssuranceIntentOutput
	ToSoftwareAssuranceIntentOutputWithContext(context.Context) SoftwareAssuranceIntentOutput
}

var softwareAssuranceIntentPtrType = reflect.TypeOf((**SoftwareAssuranceIntent)(nil)).Elem()

type SoftwareAssuranceIntentPtrInput interface {
	pulumi.Input

	ToSoftwareAssuranceIntentPtrOutput() SoftwareAssuranceIntentPtrOutput
	ToSoftwareAssuranceIntentPtrOutputWithContext(context.Context) SoftwareAssuranceIntentPtrOutput
}

type softwareAssuranceIntentPtr string

func SoftwareAssuranceIntentPtr(v string) SoftwareAssuranceIntentPtrInput {
	return (*softwareAssuranceIntentPtr)(&v)
}

func (*softwareAssuranceIntentPtr) ElementType() reflect.Type {
	return softwareAssuranceIntentPtrType
}

func (in *softwareAssuranceIntentPtr) ToSoftwareAssuranceIntentPtrOutput() SoftwareAssuranceIntentPtrOutput {
	return pulumi.ToOutput(in).(SoftwareAssuranceIntentPtrOutput)
}

func (in *softwareAssuranceIntentPtr) ToSoftwareAssuranceIntentPtrOutputWithContext(ctx context.Context) SoftwareAssuranceIntentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SoftwareAssuranceIntentPtrOutput)
}

// State of the update as it relates to this stamp.
type State string

const (
	StateHasPrerequisite                               = State("HasPrerequisite")
	StateObsolete                                      = State("Obsolete")
	StateReady                                         = State("Ready")
	StateNotApplicableBecauseAnotherUpdateIsInProgress = State("NotApplicableBecauseAnotherUpdateIsInProgress")
	StatePreparing                                     = State("Preparing")
	StateInstalling                                    = State("Installing")
	StateInstalled                                     = State("Installed")
	StatePreparationFailed                             = State("PreparationFailed")
	StateInstallationFailed                            = State("InstallationFailed")
	StateInvalid                                       = State("Invalid")
	StateRecalled                                      = State("Recalled")
	StateDownloading                                   = State("Downloading")
	StateDownloadFailed                                = State("DownloadFailed")
	StateHealthChecking                                = State("HealthChecking")
	StateHealthCheckFailed                             = State("HealthCheckFailed")
	StateReadyToInstall                                = State("ReadyToInstall")
	StateScanInProgress                                = State("ScanInProgress")
	StateScanFailed                                    = State("ScanFailed")
)

func (State) ElementType() reflect.Type {
	return reflect.TypeOf((*State)(nil)).Elem()
}

func (e State) ToStateOutput() StateOutput {
	return pulumi.ToOutput(e).(StateOutput)
}

func (e State) ToStateOutputWithContext(ctx context.Context) StateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StateOutput)
}

func (e State) ToStatePtrOutput() StatePtrOutput {
	return e.ToStatePtrOutputWithContext(context.Background())
}

func (e State) ToStatePtrOutputWithContext(ctx context.Context) StatePtrOutput {
	return State(e).ToStateOutputWithContext(ctx).ToStatePtrOutputWithContext(ctx)
}

func (e State) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e State) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e State) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e State) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StateOutput struct{ *pulumi.OutputState }

func (StateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*State)(nil)).Elem()
}

func (o StateOutput) ToStateOutput() StateOutput {
	return o
}

func (o StateOutput) ToStateOutputWithContext(ctx context.Context) StateOutput {
	return o
}

func (o StateOutput) ToStatePtrOutput() StatePtrOutput {
	return o.ToStatePtrOutputWithContext(context.Background())
}

func (o StateOutput) ToStatePtrOutputWithContext(ctx context.Context) StatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v State) *State {
		return &v
	}).(StatePtrOutput)
}

func (o StateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e State) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e State) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StatePtrOutput struct{ *pulumi.OutputState }

func (StatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**State)(nil)).Elem()
}

func (o StatePtrOutput) ToStatePtrOutput() StatePtrOutput {
	return o
}

func (o StatePtrOutput) ToStatePtrOutputWithContext(ctx context.Context) StatePtrOutput {
	return o
}

func (o StatePtrOutput) Elem() StateOutput {
	return o.ApplyT(func(v *State) State {
		if v != nil {
			return *v
		}
		var ret State
		return ret
	}).(StateOutput)
}

func (o StatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *State) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StateInput is an input type that accepts values of the State enum
// A concrete instance of `StateInput` can be one of the following:
//
//	StateHasPrerequisite
//	StateObsolete
//	StateReady
//	StateNotApplicableBecauseAnotherUpdateIsInProgress
//	StatePreparing
//	StateInstalling
//	StateInstalled
//	StatePreparationFailed
//	StateInstallationFailed
//	StateInvalid
//	StateRecalled
//	StateDownloading
//	StateDownloadFailed
//	StateHealthChecking
//	StateHealthCheckFailed
//	StateReadyToInstall
//	StateScanInProgress
//	StateScanFailed
type StateInput interface {
	pulumi.Input

	ToStateOutput() StateOutput
	ToStateOutputWithContext(context.Context) StateOutput
}

var statePtrType = reflect.TypeOf((**State)(nil)).Elem()

type StatePtrInput interface {
	pulumi.Input

	ToStatePtrOutput() StatePtrOutput
	ToStatePtrOutputWithContext(context.Context) StatePtrOutput
}

type statePtr string

func StatePtr(v string) StatePtrInput {
	return (*statePtr)(&v)
}

func (*statePtr) ElementType() reflect.Type {
	return statePtrType
}

func (in *statePtr) ToStatePtrOutput() StatePtrOutput {
	return pulumi.ToOutput(in).(StatePtrOutput)
}

func (in *statePtr) ToStatePtrOutputWithContext(ctx context.Context) StatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StatePtrOutput)
}

// State of the update run.
type UpdateRunPropertiesState string

const (
	UpdateRunPropertiesStateUnknown    = UpdateRunPropertiesState("Unknown")
	UpdateRunPropertiesStateSucceeded  = UpdateRunPropertiesState("Succeeded")
	UpdateRunPropertiesStateInProgress = UpdateRunPropertiesState("InProgress")
	UpdateRunPropertiesStateFailed     = UpdateRunPropertiesState("Failed")
)

func (UpdateRunPropertiesState) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateRunPropertiesState)(nil)).Elem()
}

func (e UpdateRunPropertiesState) ToUpdateRunPropertiesStateOutput() UpdateRunPropertiesStateOutput {
	return pulumi.ToOutput(e).(UpdateRunPropertiesStateOutput)
}

func (e UpdateRunPropertiesState) ToUpdateRunPropertiesStateOutputWithContext(ctx context.Context) UpdateRunPropertiesStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UpdateRunPropertiesStateOutput)
}

func (e UpdateRunPropertiesState) ToUpdateRunPropertiesStatePtrOutput() UpdateRunPropertiesStatePtrOutput {
	return e.ToUpdateRunPropertiesStatePtrOutputWithContext(context.Background())
}

func (e UpdateRunPropertiesState) ToUpdateRunPropertiesStatePtrOutputWithContext(ctx context.Context) UpdateRunPropertiesStatePtrOutput {
	return UpdateRunPropertiesState(e).ToUpdateRunPropertiesStateOutputWithContext(ctx).ToUpdateRunPropertiesStatePtrOutputWithContext(ctx)
}

func (e UpdateRunPropertiesState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UpdateRunPropertiesState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UpdateRunPropertiesState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UpdateRunPropertiesState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UpdateRunPropertiesStateOutput struct{ *pulumi.OutputState }

func (UpdateRunPropertiesStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateRunPropertiesState)(nil)).Elem()
}

func (o UpdateRunPropertiesStateOutput) ToUpdateRunPropertiesStateOutput() UpdateRunPropertiesStateOutput {
	return o
}

func (o UpdateRunPropertiesStateOutput) ToUpdateRunPropertiesStateOutputWithContext(ctx context.Context) UpdateRunPropertiesStateOutput {
	return o
}

func (o UpdateRunPropertiesStateOutput) ToUpdateRunPropertiesStatePtrOutput() UpdateRunPropertiesStatePtrOutput {
	return o.ToUpdateRunPropertiesStatePtrOutputWithContext(context.Background())
}

func (o UpdateRunPropertiesStateOutput) ToUpdateRunPropertiesStatePtrOutputWithContext(ctx context.Context) UpdateRunPropertiesStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateRunPropertiesState) *UpdateRunPropertiesState {
		return &v
	}).(UpdateRunPropertiesStatePtrOutput)
}

func (o UpdateRunPropertiesStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UpdateRunPropertiesStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UpdateRunPropertiesState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UpdateRunPropertiesStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UpdateRunPropertiesStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UpdateRunPropertiesState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UpdateRunPropertiesStatePtrOutput struct{ *pulumi.OutputState }

func (UpdateRunPropertiesStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateRunPropertiesState)(nil)).Elem()
}

func (o UpdateRunPropertiesStatePtrOutput) ToUpdateRunPropertiesStatePtrOutput() UpdateRunPropertiesStatePtrOutput {
	return o
}

func (o UpdateRunPropertiesStatePtrOutput) ToUpdateRunPropertiesStatePtrOutputWithContext(ctx context.Context) UpdateRunPropertiesStatePtrOutput {
	return o
}

func (o UpdateRunPropertiesStatePtrOutput) Elem() UpdateRunPropertiesStateOutput {
	return o.ApplyT(func(v *UpdateRunPropertiesState) UpdateRunPropertiesState {
		if v != nil {
			return *v
		}
		var ret UpdateRunPropertiesState
		return ret
	}).(UpdateRunPropertiesStateOutput)
}

func (o UpdateRunPropertiesStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UpdateRunPropertiesStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UpdateRunPropertiesState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UpdateRunPropertiesStateInput is an input type that accepts values of the UpdateRunPropertiesState enum
// A concrete instance of `UpdateRunPropertiesStateInput` can be one of the following:
//
//	UpdateRunPropertiesStateUnknown
//	UpdateRunPropertiesStateSucceeded
//	UpdateRunPropertiesStateInProgress
//	UpdateRunPropertiesStateFailed
type UpdateRunPropertiesStateInput interface {
	pulumi.Input

	ToUpdateRunPropertiesStateOutput() UpdateRunPropertiesStateOutput
	ToUpdateRunPropertiesStateOutputWithContext(context.Context) UpdateRunPropertiesStateOutput
}

var updateRunPropertiesStatePtrType = reflect.TypeOf((**UpdateRunPropertiesState)(nil)).Elem()

type UpdateRunPropertiesStatePtrInput interface {
	pulumi.Input

	ToUpdateRunPropertiesStatePtrOutput() UpdateRunPropertiesStatePtrOutput
	ToUpdateRunPropertiesStatePtrOutputWithContext(context.Context) UpdateRunPropertiesStatePtrOutput
}

type updateRunPropertiesStatePtr string

func UpdateRunPropertiesStatePtr(v string) UpdateRunPropertiesStatePtrInput {
	return (*updateRunPropertiesStatePtr)(&v)
}

func (*updateRunPropertiesStatePtr) ElementType() reflect.Type {
	return updateRunPropertiesStatePtrType
}

func (in *updateRunPropertiesStatePtr) ToUpdateRunPropertiesStatePtrOutput() UpdateRunPropertiesStatePtrOutput {
	return pulumi.ToOutput(in).(UpdateRunPropertiesStatePtrOutput)
}

func (in *updateRunPropertiesStatePtr) ToUpdateRunPropertiesStatePtrOutputWithContext(ctx context.Context) UpdateRunPropertiesStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UpdateRunPropertiesStatePtrOutput)
}

// Overall update state of the stamp.
type UpdateSummariesPropertiesState string

const (
	UpdateSummariesPropertiesStateUnknown               = UpdateSummariesPropertiesState("Unknown")
	UpdateSummariesPropertiesStateAppliedSuccessfully   = UpdateSummariesPropertiesState("AppliedSuccessfully")
	UpdateSummariesPropertiesStateUpdateAvailable       = UpdateSummariesPropertiesState("UpdateAvailable")
	UpdateSummariesPropertiesStateUpdateInProgress      = UpdateSummariesPropertiesState("UpdateInProgress")
	UpdateSummariesPropertiesStateUpdateFailed          = UpdateSummariesPropertiesState("UpdateFailed")
	UpdateSummariesPropertiesStateNeedsAttention        = UpdateSummariesPropertiesState("NeedsAttention")
	UpdateSummariesPropertiesStatePreparationInProgress = UpdateSummariesPropertiesState("PreparationInProgress")
	UpdateSummariesPropertiesStatePreparationFailed     = UpdateSummariesPropertiesState("PreparationFailed")
)

func (UpdateSummariesPropertiesState) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateSummariesPropertiesState)(nil)).Elem()
}

func (e UpdateSummariesPropertiesState) ToUpdateSummariesPropertiesStateOutput() UpdateSummariesPropertiesStateOutput {
	return pulumi.ToOutput(e).(UpdateSummariesPropertiesStateOutput)
}

func (e UpdateSummariesPropertiesState) ToUpdateSummariesPropertiesStateOutputWithContext(ctx context.Context) UpdateSummariesPropertiesStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UpdateSummariesPropertiesStateOutput)
}

func (e UpdateSummariesPropertiesState) ToUpdateSummariesPropertiesStatePtrOutput() UpdateSummariesPropertiesStatePtrOutput {
	return e.ToUpdateSummariesPropertiesStatePtrOutputWithContext(context.Background())
}

func (e UpdateSummariesPropertiesState) ToUpdateSummariesPropertiesStatePtrOutputWithContext(ctx context.Context) UpdateSummariesPropertiesStatePtrOutput {
	return UpdateSummariesPropertiesState(e).ToUpdateSummariesPropertiesStateOutputWithContext(ctx).ToUpdateSummariesPropertiesStatePtrOutputWithContext(ctx)
}

func (e UpdateSummariesPropertiesState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UpdateSummariesPropertiesState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UpdateSummariesPropertiesState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UpdateSummariesPropertiesState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UpdateSummariesPropertiesStateOutput struct{ *pulumi.OutputState }

func (UpdateSummariesPropertiesStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateSummariesPropertiesState)(nil)).Elem()
}

func (o UpdateSummariesPropertiesStateOutput) ToUpdateSummariesPropertiesStateOutput() UpdateSummariesPropertiesStateOutput {
	return o
}

func (o UpdateSummariesPropertiesStateOutput) ToUpdateSummariesPropertiesStateOutputWithContext(ctx context.Context) UpdateSummariesPropertiesStateOutput {
	return o
}

func (o UpdateSummariesPropertiesStateOutput) ToUpdateSummariesPropertiesStatePtrOutput() UpdateSummariesPropertiesStatePtrOutput {
	return o.ToUpdateSummariesPropertiesStatePtrOutputWithContext(context.Background())
}

func (o UpdateSummariesPropertiesStateOutput) ToUpdateSummariesPropertiesStatePtrOutputWithContext(ctx context.Context) UpdateSummariesPropertiesStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateSummariesPropertiesState) *UpdateSummariesPropertiesState {
		return &v
	}).(UpdateSummariesPropertiesStatePtrOutput)
}

func (o UpdateSummariesPropertiesStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UpdateSummariesPropertiesStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UpdateSummariesPropertiesState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UpdateSummariesPropertiesStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UpdateSummariesPropertiesStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UpdateSummariesPropertiesState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UpdateSummariesPropertiesStatePtrOutput struct{ *pulumi.OutputState }

func (UpdateSummariesPropertiesStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateSummariesPropertiesState)(nil)).Elem()
}

func (o UpdateSummariesPropertiesStatePtrOutput) ToUpdateSummariesPropertiesStatePtrOutput() UpdateSummariesPropertiesStatePtrOutput {
	return o
}

func (o UpdateSummariesPropertiesStatePtrOutput) ToUpdateSummariesPropertiesStatePtrOutputWithContext(ctx context.Context) UpdateSummariesPropertiesStatePtrOutput {
	return o
}

func (o UpdateSummariesPropertiesStatePtrOutput) Elem() UpdateSummariesPropertiesStateOutput {
	return o.ApplyT(func(v *UpdateSummariesPropertiesState) UpdateSummariesPropertiesState {
		if v != nil {
			return *v
		}
		var ret UpdateSummariesPropertiesState
		return ret
	}).(UpdateSummariesPropertiesStateOutput)
}

func (o UpdateSummariesPropertiesStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UpdateSummariesPropertiesStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UpdateSummariesPropertiesState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UpdateSummariesPropertiesStateInput is an input type that accepts values of the UpdateSummariesPropertiesState enum
// A concrete instance of `UpdateSummariesPropertiesStateInput` can be one of the following:
//
//	UpdateSummariesPropertiesStateUnknown
//	UpdateSummariesPropertiesStateAppliedSuccessfully
//	UpdateSummariesPropertiesStateUpdateAvailable
//	UpdateSummariesPropertiesStateUpdateInProgress
//	UpdateSummariesPropertiesStateUpdateFailed
//	UpdateSummariesPropertiesStateNeedsAttention
//	UpdateSummariesPropertiesStatePreparationInProgress
//	UpdateSummariesPropertiesStatePreparationFailed
type UpdateSummariesPropertiesStateInput interface {
	pulumi.Input

	ToUpdateSummariesPropertiesStateOutput() UpdateSummariesPropertiesStateOutput
	ToUpdateSummariesPropertiesStateOutputWithContext(context.Context) UpdateSummariesPropertiesStateOutput
}

var updateSummariesPropertiesStatePtrType = reflect.TypeOf((**UpdateSummariesPropertiesState)(nil)).Elem()

type UpdateSummariesPropertiesStatePtrInput interface {
	pulumi.Input

	ToUpdateSummariesPropertiesStatePtrOutput() UpdateSummariesPropertiesStatePtrOutput
	ToUpdateSummariesPropertiesStatePtrOutputWithContext(context.Context) UpdateSummariesPropertiesStatePtrOutput
}

type updateSummariesPropertiesStatePtr string

func UpdateSummariesPropertiesStatePtr(v string) UpdateSummariesPropertiesStatePtrInput {
	return (*updateSummariesPropertiesStatePtr)(&v)
}

func (*updateSummariesPropertiesStatePtr) ElementType() reflect.Type {
	return updateSummariesPropertiesStatePtrType
}

func (in *updateSummariesPropertiesStatePtr) ToUpdateSummariesPropertiesStatePtrOutput() UpdateSummariesPropertiesStatePtrOutput {
	return pulumi.ToOutput(in).(UpdateSummariesPropertiesStatePtrOutput)
}

func (in *updateSummariesPropertiesStatePtr) ToUpdateSummariesPropertiesStatePtrOutputWithContext(ctx context.Context) UpdateSummariesPropertiesStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UpdateSummariesPropertiesStatePtrOutput)
}

// Desired state of Windows Server Subscription.
type WindowsServerSubscription string

const (
	WindowsServerSubscriptionDisabled = WindowsServerSubscription("Disabled")
	WindowsServerSubscriptionEnabled  = WindowsServerSubscription("Enabled")
)

func (WindowsServerSubscription) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsServerSubscription)(nil)).Elem()
}

func (e WindowsServerSubscription) ToWindowsServerSubscriptionOutput() WindowsServerSubscriptionOutput {
	return pulumi.ToOutput(e).(WindowsServerSubscriptionOutput)
}

func (e WindowsServerSubscription) ToWindowsServerSubscriptionOutputWithContext(ctx context.Context) WindowsServerSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WindowsServerSubscriptionOutput)
}

func (e WindowsServerSubscription) ToWindowsServerSubscriptionPtrOutput() WindowsServerSubscriptionPtrOutput {
	return e.ToWindowsServerSubscriptionPtrOutputWithContext(context.Background())
}

func (e WindowsServerSubscription) ToWindowsServerSubscriptionPtrOutputWithContext(ctx context.Context) WindowsServerSubscriptionPtrOutput {
	return WindowsServerSubscription(e).ToWindowsServerSubscriptionOutputWithContext(ctx).ToWindowsServerSubscriptionPtrOutputWithContext(ctx)
}

func (e WindowsServerSubscription) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WindowsServerSubscription) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WindowsServerSubscription) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WindowsServerSubscription) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WindowsServerSubscriptionOutput struct{ *pulumi.OutputState }

func (WindowsServerSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsServerSubscription)(nil)).Elem()
}

func (o WindowsServerSubscriptionOutput) ToWindowsServerSubscriptionOutput() WindowsServerSubscriptionOutput {
	return o
}

func (o WindowsServerSubscriptionOutput) ToWindowsServerSubscriptionOutputWithContext(ctx context.Context) WindowsServerSubscriptionOutput {
	return o
}

func (o WindowsServerSubscriptionOutput) ToWindowsServerSubscriptionPtrOutput() WindowsServerSubscriptionPtrOutput {
	return o.ToWindowsServerSubscriptionPtrOutputWithContext(context.Background())
}

func (o WindowsServerSubscriptionOutput) ToWindowsServerSubscriptionPtrOutputWithContext(ctx context.Context) WindowsServerSubscriptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WindowsServerSubscription) *WindowsServerSubscription {
		return &v
	}).(WindowsServerSubscriptionPtrOutput)
}

func (o WindowsServerSubscriptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WindowsServerSubscriptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WindowsServerSubscription) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WindowsServerSubscriptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WindowsServerSubscriptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WindowsServerSubscription) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WindowsServerSubscriptionPtrOutput struct{ *pulumi.OutputState }

func (WindowsServerSubscriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsServerSubscription)(nil)).Elem()
}

func (o WindowsServerSubscriptionPtrOutput) ToWindowsServerSubscriptionPtrOutput() WindowsServerSubscriptionPtrOutput {
	return o
}

func (o WindowsServerSubscriptionPtrOutput) ToWindowsServerSubscriptionPtrOutputWithContext(ctx context.Context) WindowsServerSubscriptionPtrOutput {
	return o
}

func (o WindowsServerSubscriptionPtrOutput) Elem() WindowsServerSubscriptionOutput {
	return o.ApplyT(func(v *WindowsServerSubscription) WindowsServerSubscription {
		if v != nil {
			return *v
		}
		var ret WindowsServerSubscription
		return ret
	}).(WindowsServerSubscriptionOutput)
}

func (o WindowsServerSubscriptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WindowsServerSubscriptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WindowsServerSubscription) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WindowsServerSubscriptionInput is an input type that accepts values of the WindowsServerSubscription enum
// A concrete instance of `WindowsServerSubscriptionInput` can be one of the following:
//
//	WindowsServerSubscriptionDisabled
//	WindowsServerSubscriptionEnabled
type WindowsServerSubscriptionInput interface {
	pulumi.Input

	ToWindowsServerSubscriptionOutput() WindowsServerSubscriptionOutput
	ToWindowsServerSubscriptionOutputWithContext(context.Context) WindowsServerSubscriptionOutput
}

var windowsServerSubscriptionPtrType = reflect.TypeOf((**WindowsServerSubscription)(nil)).Elem()

type WindowsServerSubscriptionPtrInput interface {
	pulumi.Input

	ToWindowsServerSubscriptionPtrOutput() WindowsServerSubscriptionPtrOutput
	ToWindowsServerSubscriptionPtrOutputWithContext(context.Context) WindowsServerSubscriptionPtrOutput
}

type windowsServerSubscriptionPtr string

func WindowsServerSubscriptionPtr(v string) WindowsServerSubscriptionPtrInput {
	return (*windowsServerSubscriptionPtr)(&v)
}

func (*windowsServerSubscriptionPtr) ElementType() reflect.Type {
	return windowsServerSubscriptionPtrType
}

func (in *windowsServerSubscriptionPtr) ToWindowsServerSubscriptionPtrOutput() WindowsServerSubscriptionPtrOutput {
	return pulumi.ToOutput(in).(WindowsServerSubscriptionPtrOutput)
}

func (in *windowsServerSubscriptionPtr) ToWindowsServerSubscriptionPtrOutputWithContext(ctx context.Context) WindowsServerSubscriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WindowsServerSubscriptionPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AvailabilityTypeOutput{})
	pulumi.RegisterOutputType(AvailabilityTypePtrOutput{})
	pulumi.RegisterOutputType(DeploymentModeOutput{})
	pulumi.RegisterOutputType(DeploymentModePtrOutput{})
	pulumi.RegisterOutputType(DiagnosticLevelOutput{})
	pulumi.RegisterOutputType(DiagnosticLevelPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(ServiceNameOutput{})
	pulumi.RegisterOutputType(ServiceNamePtrOutput{})
	pulumi.RegisterOutputType(SoftwareAssuranceIntentOutput{})
	pulumi.RegisterOutputType(SoftwareAssuranceIntentPtrOutput{})
	pulumi.RegisterOutputType(StateOutput{})
	pulumi.RegisterOutputType(StatePtrOutput{})
	pulumi.RegisterOutputType(UpdateRunPropertiesStateOutput{})
	pulumi.RegisterOutputType(UpdateRunPropertiesStatePtrOutput{})
	pulumi.RegisterOutputType(UpdateSummariesPropertiesStateOutput{})
	pulumi.RegisterOutputType(UpdateSummariesPropertiesStatePtrOutput{})
	pulumi.RegisterOutputType(WindowsServerSubscriptionOutput{})
	pulumi.RegisterOutputType(WindowsServerSubscriptionPtrOutput{})
}
