// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets a virtual machine instance
func LookupVirtualMachineInstance(ctx *pulumi.Context, args *LookupVirtualMachineInstanceArgs, opts ...pulumi.InvokeOption) (*LookupVirtualMachineInstanceResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupVirtualMachineInstanceResult
	err := ctx.Invoke("azure-native:azurestackhci/v20230901preview:getVirtualMachineInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupVirtualMachineInstanceArgs struct {
	// The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.
	ResourceUri string `pulumi:"resourceUri"`
}

// The virtual machine instance resource definition.
type LookupVirtualMachineInstanceResult struct {
	// The extendedLocation of the resource.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Guest agent install status.
	GuestAgentInstallStatus *GuestAgentInstallStatusResponse `pulumi:"guestAgentInstallStatus"`
	// HardwareProfile - Specifies the hardware settings for the virtual machine instance.
	HardwareProfile *VirtualMachineInstancePropertiesResponseHardwareProfile `pulumi:"hardwareProfile"`
	// HTTP Proxy configuration for the VM.
	HttpProxyConfig *HttpProxyConfigurationResponse `pulumi:"httpProxyConfig"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// Identity for the resource.
	Identity *IdentityResponse `pulumi:"identity"`
	// The virtual machine instance view.
	InstanceView VirtualMachineInstanceViewResponse `pulumi:"instanceView"`
	// The name of the resource
	Name string `pulumi:"name"`
	// NetworkProfile - describes the network configuration the virtual machine instance
	NetworkProfile *VirtualMachineInstancePropertiesResponseNetworkProfile `pulumi:"networkProfile"`
	// OsProfile - describes the configuration of the operating system and sets login data
	OsProfile *VirtualMachineInstancePropertiesResponseOsProfile `pulumi:"osProfile"`
	// Provisioning state of the virtual machine instance.
	ProvisioningState string `pulumi:"provisioningState"`
	// Unique identifier defined by ARC to identify the guest of the VM.
	ResourceUid *string `pulumi:"resourceUid"`
	// SecurityProfile - Specifies the security settings for the virtual machine instance.
	SecurityProfile *VirtualMachineInstancePropertiesResponseSecurityProfile `pulumi:"securityProfile"`
	// The observed state of virtual machine instances
	Status VirtualMachineInstanceStatusResponse `pulumi:"status"`
	// StorageProfile - contains information about the disks and storage information for the virtual machine instance
	StorageProfile *VirtualMachineInstancePropertiesResponseStorageProfile `pulumi:"storageProfile"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Unique identifier for the vm resource.
	VmId string `pulumi:"vmId"`
}

// Defaults sets the appropriate defaults for LookupVirtualMachineInstanceResult
func (val *LookupVirtualMachineInstanceResult) Defaults() *LookupVirtualMachineInstanceResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.HardwareProfile = tmp.HardwareProfile.Defaults()

	tmp.OsProfile = tmp.OsProfile.Defaults()

	tmp.SecurityProfile = tmp.SecurityProfile.Defaults()

	return &tmp
}

func LookupVirtualMachineInstanceOutput(ctx *pulumi.Context, args LookupVirtualMachineInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupVirtualMachineInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVirtualMachineInstanceResult, error) {
			args := v.(LookupVirtualMachineInstanceArgs)
			r, err := LookupVirtualMachineInstance(ctx, &args, opts...)
			var s LookupVirtualMachineInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVirtualMachineInstanceResultOutput)
}

type LookupVirtualMachineInstanceOutputArgs struct {
	// The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.
	ResourceUri pulumi.StringInput `pulumi:"resourceUri"`
}

func (LookupVirtualMachineInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualMachineInstanceArgs)(nil)).Elem()
}

// The virtual machine instance resource definition.
type LookupVirtualMachineInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupVirtualMachineInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualMachineInstanceResult)(nil)).Elem()
}

func (o LookupVirtualMachineInstanceResultOutput) ToLookupVirtualMachineInstanceResultOutput() LookupVirtualMachineInstanceResultOutput {
	return o
}

func (o LookupVirtualMachineInstanceResultOutput) ToLookupVirtualMachineInstanceResultOutputWithContext(ctx context.Context) LookupVirtualMachineInstanceResultOutput {
	return o
}

func (o LookupVirtualMachineInstanceResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupVirtualMachineInstanceResult] {
	return pulumix.Output[LookupVirtualMachineInstanceResult]{
		OutputState: o.OutputState,
	}
}

// The extendedLocation of the resource.
func (o LookupVirtualMachineInstanceResultOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// Guest agent install status.
func (o LookupVirtualMachineInstanceResultOutput) GuestAgentInstallStatus() GuestAgentInstallStatusResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) *GuestAgentInstallStatusResponse {
		return v.GuestAgentInstallStatus
	}).(GuestAgentInstallStatusResponsePtrOutput)
}

// HardwareProfile - Specifies the hardware settings for the virtual machine instance.
func (o LookupVirtualMachineInstanceResultOutput) HardwareProfile() VirtualMachineInstancePropertiesResponseHardwareProfilePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) *VirtualMachineInstancePropertiesResponseHardwareProfile {
		return v.HardwareProfile
	}).(VirtualMachineInstancePropertiesResponseHardwareProfilePtrOutput)
}

// HTTP Proxy configuration for the VM.
func (o LookupVirtualMachineInstanceResultOutput) HttpProxyConfig() HttpProxyConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) *HttpProxyConfigurationResponse { return v.HttpProxyConfig }).(HttpProxyConfigurationResponsePtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupVirtualMachineInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Identity for the resource.
func (o LookupVirtualMachineInstanceResultOutput) Identity() IdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) *IdentityResponse { return v.Identity }).(IdentityResponsePtrOutput)
}

// The virtual machine instance view.
func (o LookupVirtualMachineInstanceResultOutput) InstanceView() VirtualMachineInstanceViewResponseOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) VirtualMachineInstanceViewResponse { return v.InstanceView }).(VirtualMachineInstanceViewResponseOutput)
}

// The name of the resource
func (o LookupVirtualMachineInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

// NetworkProfile - describes the network configuration the virtual machine instance
func (o LookupVirtualMachineInstanceResultOutput) NetworkProfile() VirtualMachineInstancePropertiesResponseNetworkProfilePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) *VirtualMachineInstancePropertiesResponseNetworkProfile {
		return v.NetworkProfile
	}).(VirtualMachineInstancePropertiesResponseNetworkProfilePtrOutput)
}

// OsProfile - describes the configuration of the operating system and sets login data
func (o LookupVirtualMachineInstanceResultOutput) OsProfile() VirtualMachineInstancePropertiesResponseOsProfilePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) *VirtualMachineInstancePropertiesResponseOsProfile {
		return v.OsProfile
	}).(VirtualMachineInstancePropertiesResponseOsProfilePtrOutput)
}

// Provisioning state of the virtual machine instance.
func (o LookupVirtualMachineInstanceResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Unique identifier defined by ARC to identify the guest of the VM.
func (o LookupVirtualMachineInstanceResultOutput) ResourceUid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) *string { return v.ResourceUid }).(pulumi.StringPtrOutput)
}

// SecurityProfile - Specifies the security settings for the virtual machine instance.
func (o LookupVirtualMachineInstanceResultOutput) SecurityProfile() VirtualMachineInstancePropertiesResponseSecurityProfilePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) *VirtualMachineInstancePropertiesResponseSecurityProfile {
		return v.SecurityProfile
	}).(VirtualMachineInstancePropertiesResponseSecurityProfilePtrOutput)
}

// The observed state of virtual machine instances
func (o LookupVirtualMachineInstanceResultOutput) Status() VirtualMachineInstanceStatusResponseOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) VirtualMachineInstanceStatusResponse { return v.Status }).(VirtualMachineInstanceStatusResponseOutput)
}

// StorageProfile - contains information about the disks and storage information for the virtual machine instance
func (o LookupVirtualMachineInstanceResultOutput) StorageProfile() VirtualMachineInstancePropertiesResponseStorageProfilePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) *VirtualMachineInstancePropertiesResponseStorageProfile {
		return v.StorageProfile
	}).(VirtualMachineInstancePropertiesResponseStorageProfilePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupVirtualMachineInstanceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupVirtualMachineInstanceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) string { return v.Type }).(pulumi.StringOutput)
}

// Unique identifier for the vm resource.
func (o LookupVirtualMachineInstanceResultOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineInstanceResult) string { return v.VmId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVirtualMachineInstanceResultOutput{})
}
