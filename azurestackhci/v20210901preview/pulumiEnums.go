// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Datasource for the gallery image when provisioning with cloud-init [Azure, NoCloud]
type CloudInitDataSource string

const (
	CloudInitDataSourceNoCloud = CloudInitDataSource("NoCloud")
	CloudInitDataSourceAzure   = CloudInitDataSource("Azure")
)

func (CloudInitDataSource) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudInitDataSource)(nil)).Elem()
}

func (e CloudInitDataSource) ToCloudInitDataSourceOutput() CloudInitDataSourceOutput {
	return pulumi.ToOutput(e).(CloudInitDataSourceOutput)
}

func (e CloudInitDataSource) ToCloudInitDataSourceOutputWithContext(ctx context.Context) CloudInitDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CloudInitDataSourceOutput)
}

func (e CloudInitDataSource) ToCloudInitDataSourcePtrOutput() CloudInitDataSourcePtrOutput {
	return e.ToCloudInitDataSourcePtrOutputWithContext(context.Background())
}

func (e CloudInitDataSource) ToCloudInitDataSourcePtrOutputWithContext(ctx context.Context) CloudInitDataSourcePtrOutput {
	return CloudInitDataSource(e).ToCloudInitDataSourceOutputWithContext(ctx).ToCloudInitDataSourcePtrOutputWithContext(ctx)
}

func (e CloudInitDataSource) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudInitDataSource) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CloudInitDataSource) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CloudInitDataSource) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CloudInitDataSourceOutput struct{ *pulumi.OutputState }

func (CloudInitDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudInitDataSource)(nil)).Elem()
}

func (o CloudInitDataSourceOutput) ToCloudInitDataSourceOutput() CloudInitDataSourceOutput {
	return o
}

func (o CloudInitDataSourceOutput) ToCloudInitDataSourceOutputWithContext(ctx context.Context) CloudInitDataSourceOutput {
	return o
}

func (o CloudInitDataSourceOutput) ToCloudInitDataSourcePtrOutput() CloudInitDataSourcePtrOutput {
	return o.ToCloudInitDataSourcePtrOutputWithContext(context.Background())
}

func (o CloudInitDataSourceOutput) ToCloudInitDataSourcePtrOutputWithContext(ctx context.Context) CloudInitDataSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudInitDataSource) *CloudInitDataSource {
		return &v
	}).(CloudInitDataSourcePtrOutput)
}

func (o CloudInitDataSourceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CloudInitDataSourceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudInitDataSource) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CloudInitDataSourceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudInitDataSourceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CloudInitDataSource) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CloudInitDataSourcePtrOutput struct{ *pulumi.OutputState }

func (CloudInitDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudInitDataSource)(nil)).Elem()
}

func (o CloudInitDataSourcePtrOutput) ToCloudInitDataSourcePtrOutput() CloudInitDataSourcePtrOutput {
	return o
}

func (o CloudInitDataSourcePtrOutput) ToCloudInitDataSourcePtrOutputWithContext(ctx context.Context) CloudInitDataSourcePtrOutput {
	return o
}

func (o CloudInitDataSourcePtrOutput) Elem() CloudInitDataSourceOutput {
	return o.ApplyT(func(v *CloudInitDataSource) CloudInitDataSource {
		if v != nil {
			return *v
		}
		var ret CloudInitDataSource
		return ret
	}).(CloudInitDataSourceOutput)
}

func (o CloudInitDataSourcePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CloudInitDataSourcePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CloudInitDataSource) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CloudInitDataSourceInput is an input type that accepts values of the CloudInitDataSource enum
// A concrete instance of `CloudInitDataSourceInput` can be one of the following:
//
//	CloudInitDataSourceNoCloud
//	CloudInitDataSourceAzure
type CloudInitDataSourceInput interface {
	pulumi.Input

	ToCloudInitDataSourceOutput() CloudInitDataSourceOutput
	ToCloudInitDataSourceOutputWithContext(context.Context) CloudInitDataSourceOutput
}

var cloudInitDataSourcePtrType = reflect.TypeOf((**CloudInitDataSource)(nil)).Elem()

type CloudInitDataSourcePtrInput interface {
	pulumi.Input

	ToCloudInitDataSourcePtrOutput() CloudInitDataSourcePtrOutput
	ToCloudInitDataSourcePtrOutputWithContext(context.Context) CloudInitDataSourcePtrOutput
}

type cloudInitDataSourcePtr string

func CloudInitDataSourcePtr(v string) CloudInitDataSourcePtrInput {
	return (*cloudInitDataSourcePtr)(&v)
}

func (*cloudInitDataSourcePtr) ElementType() reflect.Type {
	return cloudInitDataSourcePtrType
}

func (in *cloudInitDataSourcePtr) ToCloudInitDataSourcePtrOutput() CloudInitDataSourcePtrOutput {
	return pulumi.ToOutput(in).(CloudInitDataSourcePtrOutput)
}

func (in *cloudInitDataSourcePtr) ToCloudInitDataSourcePtrOutputWithContext(ctx context.Context) CloudInitDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CloudInitDataSourcePtrOutput)
}

func (in *cloudInitDataSourcePtr) ToOutput(ctx context.Context) pulumix.Output[*CloudInitDataSource] {
	return pulumix.Output[*CloudInitDataSource]{
		OutputState: in.ToCloudInitDataSourcePtrOutputWithContext(ctx).OutputState,
	}
}

// The type of identity that last modified the resource.
type CreatedByType string

const (
	CreatedByTypeUser            = CreatedByType("User")
	CreatedByTypeApplication     = CreatedByType("Application")
	CreatedByTypeManagedIdentity = CreatedByType("ManagedIdentity")
	CreatedByTypeKey             = CreatedByType("Key")
)

func (CreatedByType) ElementType() reflect.Type {
	return reflect.TypeOf((*CreatedByType)(nil)).Elem()
}

func (e CreatedByType) ToCreatedByTypeOutput() CreatedByTypeOutput {
	return pulumi.ToOutput(e).(CreatedByTypeOutput)
}

func (e CreatedByType) ToCreatedByTypeOutputWithContext(ctx context.Context) CreatedByTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CreatedByTypeOutput)
}

func (e CreatedByType) ToCreatedByTypePtrOutput() CreatedByTypePtrOutput {
	return e.ToCreatedByTypePtrOutputWithContext(context.Background())
}

func (e CreatedByType) ToCreatedByTypePtrOutputWithContext(ctx context.Context) CreatedByTypePtrOutput {
	return CreatedByType(e).ToCreatedByTypeOutputWithContext(ctx).ToCreatedByTypePtrOutputWithContext(ctx)
}

func (e CreatedByType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CreatedByType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CreatedByType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CreatedByType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CreatedByTypeOutput struct{ *pulumi.OutputState }

func (CreatedByTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreatedByType)(nil)).Elem()
}

func (o CreatedByTypeOutput) ToCreatedByTypeOutput() CreatedByTypeOutput {
	return o
}

func (o CreatedByTypeOutput) ToCreatedByTypeOutputWithContext(ctx context.Context) CreatedByTypeOutput {
	return o
}

func (o CreatedByTypeOutput) ToCreatedByTypePtrOutput() CreatedByTypePtrOutput {
	return o.ToCreatedByTypePtrOutputWithContext(context.Background())
}

func (o CreatedByTypeOutput) ToCreatedByTypePtrOutputWithContext(ctx context.Context) CreatedByTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CreatedByType) *CreatedByType {
		return &v
	}).(CreatedByTypePtrOutput)
}

func (o CreatedByTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CreatedByTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CreatedByType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CreatedByTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CreatedByTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CreatedByType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CreatedByTypePtrOutput struct{ *pulumi.OutputState }

func (CreatedByTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreatedByType)(nil)).Elem()
}

func (o CreatedByTypePtrOutput) ToCreatedByTypePtrOutput() CreatedByTypePtrOutput {
	return o
}

func (o CreatedByTypePtrOutput) ToCreatedByTypePtrOutputWithContext(ctx context.Context) CreatedByTypePtrOutput {
	return o
}

func (o CreatedByTypePtrOutput) Elem() CreatedByTypeOutput {
	return o.ApplyT(func(v *CreatedByType) CreatedByType {
		if v != nil {
			return *v
		}
		var ret CreatedByType
		return ret
	}).(CreatedByTypeOutput)
}

func (o CreatedByTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CreatedByTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CreatedByType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CreatedByTypeInput is an input type that accepts values of the CreatedByType enum
// A concrete instance of `CreatedByTypeInput` can be one of the following:
//
//	CreatedByTypeUser
//	CreatedByTypeApplication
//	CreatedByTypeManagedIdentity
//	CreatedByTypeKey
type CreatedByTypeInput interface {
	pulumi.Input

	ToCreatedByTypeOutput() CreatedByTypeOutput
	ToCreatedByTypeOutputWithContext(context.Context) CreatedByTypeOutput
}

var createdByTypePtrType = reflect.TypeOf((**CreatedByType)(nil)).Elem()

type CreatedByTypePtrInput interface {
	pulumi.Input

	ToCreatedByTypePtrOutput() CreatedByTypePtrOutput
	ToCreatedByTypePtrOutputWithContext(context.Context) CreatedByTypePtrOutput
}

type createdByTypePtr string

func CreatedByTypePtr(v string) CreatedByTypePtrInput {
	return (*createdByTypePtr)(&v)
}

func (*createdByTypePtr) ElementType() reflect.Type {
	return createdByTypePtrType
}

func (in *createdByTypePtr) ToCreatedByTypePtrOutput() CreatedByTypePtrOutput {
	return pulumi.ToOutput(in).(CreatedByTypePtrOutput)
}

func (in *createdByTypePtr) ToCreatedByTypePtrOutputWithContext(ctx context.Context) CreatedByTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CreatedByTypePtrOutput)
}

func (in *createdByTypePtr) ToOutput(ctx context.Context) pulumix.Output[*CreatedByType] {
	return pulumix.Output[*CreatedByType]{
		OutputState: in.ToCreatedByTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The format of the actual VHD file [vhd, vhdx]
type DiskFileFormat string

const (
	DiskFileFormatVhdx = DiskFileFormat("vhdx")
	DiskFileFormatVhd  = DiskFileFormat("vhd")
)

func (DiskFileFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskFileFormat)(nil)).Elem()
}

func (e DiskFileFormat) ToDiskFileFormatOutput() DiskFileFormatOutput {
	return pulumi.ToOutput(e).(DiskFileFormatOutput)
}

func (e DiskFileFormat) ToDiskFileFormatOutputWithContext(ctx context.Context) DiskFileFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskFileFormatOutput)
}

func (e DiskFileFormat) ToDiskFileFormatPtrOutput() DiskFileFormatPtrOutput {
	return e.ToDiskFileFormatPtrOutputWithContext(context.Background())
}

func (e DiskFileFormat) ToDiskFileFormatPtrOutputWithContext(ctx context.Context) DiskFileFormatPtrOutput {
	return DiskFileFormat(e).ToDiskFileFormatOutputWithContext(ctx).ToDiskFileFormatPtrOutputWithContext(ctx)
}

func (e DiskFileFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskFileFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskFileFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskFileFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskFileFormatOutput struct{ *pulumi.OutputState }

func (DiskFileFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskFileFormat)(nil)).Elem()
}

func (o DiskFileFormatOutput) ToDiskFileFormatOutput() DiskFileFormatOutput {
	return o
}

func (o DiskFileFormatOutput) ToDiskFileFormatOutputWithContext(ctx context.Context) DiskFileFormatOutput {
	return o
}

func (o DiskFileFormatOutput) ToDiskFileFormatPtrOutput() DiskFileFormatPtrOutput {
	return o.ToDiskFileFormatPtrOutputWithContext(context.Background())
}

func (o DiskFileFormatOutput) ToDiskFileFormatPtrOutputWithContext(ctx context.Context) DiskFileFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskFileFormat) *DiskFileFormat {
		return &v
	}).(DiskFileFormatPtrOutput)
}

func (o DiskFileFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskFileFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskFileFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskFileFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskFileFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskFileFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskFileFormatPtrOutput struct{ *pulumi.OutputState }

func (DiskFileFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskFileFormat)(nil)).Elem()
}

func (o DiskFileFormatPtrOutput) ToDiskFileFormatPtrOutput() DiskFileFormatPtrOutput {
	return o
}

func (o DiskFileFormatPtrOutput) ToDiskFileFormatPtrOutputWithContext(ctx context.Context) DiskFileFormatPtrOutput {
	return o
}

func (o DiskFileFormatPtrOutput) Elem() DiskFileFormatOutput {
	return o.ApplyT(func(v *DiskFileFormat) DiskFileFormat {
		if v != nil {
			return *v
		}
		var ret DiskFileFormat
		return ret
	}).(DiskFileFormatOutput)
}

func (o DiskFileFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskFileFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskFileFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskFileFormatInput is an input type that accepts values of the DiskFileFormat enum
// A concrete instance of `DiskFileFormatInput` can be one of the following:
//
//	DiskFileFormatVhdx
//	DiskFileFormatVhd
type DiskFileFormatInput interface {
	pulumi.Input

	ToDiskFileFormatOutput() DiskFileFormatOutput
	ToDiskFileFormatOutputWithContext(context.Context) DiskFileFormatOutput
}

var diskFileFormatPtrType = reflect.TypeOf((**DiskFileFormat)(nil)).Elem()

type DiskFileFormatPtrInput interface {
	pulumi.Input

	ToDiskFileFormatPtrOutput() DiskFileFormatPtrOutput
	ToDiskFileFormatPtrOutputWithContext(context.Context) DiskFileFormatPtrOutput
}

type diskFileFormatPtr string

func DiskFileFormatPtr(v string) DiskFileFormatPtrInput {
	return (*diskFileFormatPtr)(&v)
}

func (*diskFileFormatPtr) ElementType() reflect.Type {
	return diskFileFormatPtrType
}

func (in *diskFileFormatPtr) ToDiskFileFormatPtrOutput() DiskFileFormatPtrOutput {
	return pulumi.ToOutput(in).(DiskFileFormatPtrOutput)
}

func (in *diskFileFormatPtr) ToDiskFileFormatPtrOutputWithContext(ctx context.Context) DiskFileFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskFileFormatPtrOutput)
}

func (in *diskFileFormatPtr) ToOutput(ctx context.Context) pulumix.Output[*DiskFileFormat] {
	return pulumix.Output[*DiskFileFormat]{
		OutputState: in.ToDiskFileFormatPtrOutputWithContext(ctx).OutputState,
	}
}

// The type of the extended location.
type ExtendedLocationTypes string

const (
	ExtendedLocationTypesCustomLocation = ExtendedLocationTypes("CustomLocation")
)

func (ExtendedLocationTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationTypes)(nil)).Elem()
}

func (e ExtendedLocationTypes) ToExtendedLocationTypesOutput() ExtendedLocationTypesOutput {
	return pulumi.ToOutput(e).(ExtendedLocationTypesOutput)
}

func (e ExtendedLocationTypes) ToExtendedLocationTypesOutputWithContext(ctx context.Context) ExtendedLocationTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExtendedLocationTypesOutput)
}

func (e ExtendedLocationTypes) ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput {
	return e.ToExtendedLocationTypesPtrOutputWithContext(context.Background())
}

func (e ExtendedLocationTypes) ToExtendedLocationTypesPtrOutputWithContext(ctx context.Context) ExtendedLocationTypesPtrOutput {
	return ExtendedLocationTypes(e).ToExtendedLocationTypesOutputWithContext(ctx).ToExtendedLocationTypesPtrOutputWithContext(ctx)
}

func (e ExtendedLocationTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtendedLocationTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtendedLocationTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExtendedLocationTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExtendedLocationTypesOutput struct{ *pulumi.OutputState }

func (ExtendedLocationTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationTypes)(nil)).Elem()
}

func (o ExtendedLocationTypesOutput) ToExtendedLocationTypesOutput() ExtendedLocationTypesOutput {
	return o
}

func (o ExtendedLocationTypesOutput) ToExtendedLocationTypesOutputWithContext(ctx context.Context) ExtendedLocationTypesOutput {
	return o
}

func (o ExtendedLocationTypesOutput) ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput {
	return o.ToExtendedLocationTypesPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypesOutput) ToExtendedLocationTypesPtrOutputWithContext(ctx context.Context) ExtendedLocationTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocationTypes) *ExtendedLocationTypes {
		return &v
	}).(ExtendedLocationTypesPtrOutput)
}

func (o ExtendedLocationTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExtendedLocationTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtendedLocationTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExtendedLocationTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtendedLocationTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExtendedLocationTypesPtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationTypes)(nil)).Elem()
}

func (o ExtendedLocationTypesPtrOutput) ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput {
	return o
}

func (o ExtendedLocationTypesPtrOutput) ToExtendedLocationTypesPtrOutputWithContext(ctx context.Context) ExtendedLocationTypesPtrOutput {
	return o
}

func (o ExtendedLocationTypesPtrOutput) Elem() ExtendedLocationTypesOutput {
	return o.ApplyT(func(v *ExtendedLocationTypes) ExtendedLocationTypes {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationTypes
		return ret
	}).(ExtendedLocationTypesOutput)
}

func (o ExtendedLocationTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExtendedLocationTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExtendedLocationTypesInput is an input type that accepts values of the ExtendedLocationTypes enum
// A concrete instance of `ExtendedLocationTypesInput` can be one of the following:
//
//	ExtendedLocationTypesCustomLocation
type ExtendedLocationTypesInput interface {
	pulumi.Input

	ToExtendedLocationTypesOutput() ExtendedLocationTypesOutput
	ToExtendedLocationTypesOutputWithContext(context.Context) ExtendedLocationTypesOutput
}

var extendedLocationTypesPtrType = reflect.TypeOf((**ExtendedLocationTypes)(nil)).Elem()

type ExtendedLocationTypesPtrInput interface {
	pulumi.Input

	ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput
	ToExtendedLocationTypesPtrOutputWithContext(context.Context) ExtendedLocationTypesPtrOutput
}

type extendedLocationTypesPtr string

func ExtendedLocationTypesPtr(v string) ExtendedLocationTypesPtrInput {
	return (*extendedLocationTypesPtr)(&v)
}

func (*extendedLocationTypesPtr) ElementType() reflect.Type {
	return extendedLocationTypesPtrType
}

func (in *extendedLocationTypesPtr) ToExtendedLocationTypesPtrOutput() ExtendedLocationTypesPtrOutput {
	return pulumi.ToOutput(in).(ExtendedLocationTypesPtrOutput)
}

func (in *extendedLocationTypesPtr) ToExtendedLocationTypesPtrOutputWithContext(ctx context.Context) ExtendedLocationTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExtendedLocationTypesPtrOutput)
}

func (in *extendedLocationTypesPtr) ToOutput(ctx context.Context) pulumix.Output[*ExtendedLocationTypes] {
	return pulumix.Output[*ExtendedLocationTypes]{
		OutputState: in.ToExtendedLocationTypesPtrOutputWithContext(ctx).OutputState,
	}
}

// The hypervisor generation of the Virtual Machine [V1, V2]
type HyperVGeneration string

const (
	HyperVGenerationV1 = HyperVGeneration("V1")
	HyperVGenerationV2 = HyperVGeneration("V2")
)

func (HyperVGeneration) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVGeneration)(nil)).Elem()
}

func (e HyperVGeneration) ToHyperVGenerationOutput() HyperVGenerationOutput {
	return pulumi.ToOutput(e).(HyperVGenerationOutput)
}

func (e HyperVGeneration) ToHyperVGenerationOutputWithContext(ctx context.Context) HyperVGenerationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HyperVGenerationOutput)
}

func (e HyperVGeneration) ToHyperVGenerationPtrOutput() HyperVGenerationPtrOutput {
	return e.ToHyperVGenerationPtrOutputWithContext(context.Background())
}

func (e HyperVGeneration) ToHyperVGenerationPtrOutputWithContext(ctx context.Context) HyperVGenerationPtrOutput {
	return HyperVGeneration(e).ToHyperVGenerationOutputWithContext(ctx).ToHyperVGenerationPtrOutputWithContext(ctx)
}

func (e HyperVGeneration) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HyperVGeneration) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HyperVGeneration) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HyperVGeneration) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HyperVGenerationOutput struct{ *pulumi.OutputState }

func (HyperVGenerationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HyperVGeneration)(nil)).Elem()
}

func (o HyperVGenerationOutput) ToHyperVGenerationOutput() HyperVGenerationOutput {
	return o
}

func (o HyperVGenerationOutput) ToHyperVGenerationOutputWithContext(ctx context.Context) HyperVGenerationOutput {
	return o
}

func (o HyperVGenerationOutput) ToHyperVGenerationPtrOutput() HyperVGenerationPtrOutput {
	return o.ToHyperVGenerationPtrOutputWithContext(context.Background())
}

func (o HyperVGenerationOutput) ToHyperVGenerationPtrOutputWithContext(ctx context.Context) HyperVGenerationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HyperVGeneration) *HyperVGeneration {
		return &v
	}).(HyperVGenerationPtrOutput)
}

func (o HyperVGenerationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HyperVGenerationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HyperVGeneration) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HyperVGenerationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HyperVGenerationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HyperVGeneration) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HyperVGenerationPtrOutput struct{ *pulumi.OutputState }

func (HyperVGenerationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HyperVGeneration)(nil)).Elem()
}

func (o HyperVGenerationPtrOutput) ToHyperVGenerationPtrOutput() HyperVGenerationPtrOutput {
	return o
}

func (o HyperVGenerationPtrOutput) ToHyperVGenerationPtrOutputWithContext(ctx context.Context) HyperVGenerationPtrOutput {
	return o
}

func (o HyperVGenerationPtrOutput) Elem() HyperVGenerationOutput {
	return o.ApplyT(func(v *HyperVGeneration) HyperVGeneration {
		if v != nil {
			return *v
		}
		var ret HyperVGeneration
		return ret
	}).(HyperVGenerationOutput)
}

func (o HyperVGenerationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HyperVGenerationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HyperVGeneration) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HyperVGenerationInput is an input type that accepts values of the HyperVGeneration enum
// A concrete instance of `HyperVGenerationInput` can be one of the following:
//
//	HyperVGenerationV1
//	HyperVGenerationV2
type HyperVGenerationInput interface {
	pulumi.Input

	ToHyperVGenerationOutput() HyperVGenerationOutput
	ToHyperVGenerationOutputWithContext(context.Context) HyperVGenerationOutput
}

var hyperVGenerationPtrType = reflect.TypeOf((**HyperVGeneration)(nil)).Elem()

type HyperVGenerationPtrInput interface {
	pulumi.Input

	ToHyperVGenerationPtrOutput() HyperVGenerationPtrOutput
	ToHyperVGenerationPtrOutputWithContext(context.Context) HyperVGenerationPtrOutput
}

type hyperVGenerationPtr string

func HyperVGenerationPtr(v string) HyperVGenerationPtrInput {
	return (*hyperVGenerationPtr)(&v)
}

func (*hyperVGenerationPtr) ElementType() reflect.Type {
	return hyperVGenerationPtrType
}

func (in *hyperVGenerationPtr) ToHyperVGenerationPtrOutput() HyperVGenerationPtrOutput {
	return pulumi.ToOutput(in).(HyperVGenerationPtrOutput)
}

func (in *hyperVGenerationPtr) ToHyperVGenerationPtrOutputWithContext(ctx context.Context) HyperVGenerationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HyperVGenerationPtrOutput)
}

func (in *hyperVGenerationPtr) ToOutput(ctx context.Context) pulumix.Output[*HyperVGeneration] {
	return pulumix.Output[*HyperVGeneration]{
		OutputState: in.ToHyperVGenerationPtrOutputWithContext(ctx).OutputState,
	}
}

// ip pool type
type IPPoolTypeEnum string

const (
	IPPoolTypeEnumVm      = IPPoolTypeEnum("vm")
	IPPoolTypeEnumVippool = IPPoolTypeEnum("vippool")
)

func (IPPoolTypeEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*IPPoolTypeEnum)(nil)).Elem()
}

func (e IPPoolTypeEnum) ToIPPoolTypeEnumOutput() IPPoolTypeEnumOutput {
	return pulumi.ToOutput(e).(IPPoolTypeEnumOutput)
}

func (e IPPoolTypeEnum) ToIPPoolTypeEnumOutputWithContext(ctx context.Context) IPPoolTypeEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IPPoolTypeEnumOutput)
}

func (e IPPoolTypeEnum) ToIPPoolTypeEnumPtrOutput() IPPoolTypeEnumPtrOutput {
	return e.ToIPPoolTypeEnumPtrOutputWithContext(context.Background())
}

func (e IPPoolTypeEnum) ToIPPoolTypeEnumPtrOutputWithContext(ctx context.Context) IPPoolTypeEnumPtrOutput {
	return IPPoolTypeEnum(e).ToIPPoolTypeEnumOutputWithContext(ctx).ToIPPoolTypeEnumPtrOutputWithContext(ctx)
}

func (e IPPoolTypeEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IPPoolTypeEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IPPoolTypeEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IPPoolTypeEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IPPoolTypeEnumOutput struct{ *pulumi.OutputState }

func (IPPoolTypeEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPPoolTypeEnum)(nil)).Elem()
}

func (o IPPoolTypeEnumOutput) ToIPPoolTypeEnumOutput() IPPoolTypeEnumOutput {
	return o
}

func (o IPPoolTypeEnumOutput) ToIPPoolTypeEnumOutputWithContext(ctx context.Context) IPPoolTypeEnumOutput {
	return o
}

func (o IPPoolTypeEnumOutput) ToIPPoolTypeEnumPtrOutput() IPPoolTypeEnumPtrOutput {
	return o.ToIPPoolTypeEnumPtrOutputWithContext(context.Background())
}

func (o IPPoolTypeEnumOutput) ToIPPoolTypeEnumPtrOutputWithContext(ctx context.Context) IPPoolTypeEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IPPoolTypeEnum) *IPPoolTypeEnum {
		return &v
	}).(IPPoolTypeEnumPtrOutput)
}

func (o IPPoolTypeEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IPPoolTypeEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IPPoolTypeEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IPPoolTypeEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IPPoolTypeEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IPPoolTypeEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IPPoolTypeEnumPtrOutput struct{ *pulumi.OutputState }

func (IPPoolTypeEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPPoolTypeEnum)(nil)).Elem()
}

func (o IPPoolTypeEnumPtrOutput) ToIPPoolTypeEnumPtrOutput() IPPoolTypeEnumPtrOutput {
	return o
}

func (o IPPoolTypeEnumPtrOutput) ToIPPoolTypeEnumPtrOutputWithContext(ctx context.Context) IPPoolTypeEnumPtrOutput {
	return o
}

func (o IPPoolTypeEnumPtrOutput) Elem() IPPoolTypeEnumOutput {
	return o.ApplyT(func(v *IPPoolTypeEnum) IPPoolTypeEnum {
		if v != nil {
			return *v
		}
		var ret IPPoolTypeEnum
		return ret
	}).(IPPoolTypeEnumOutput)
}

func (o IPPoolTypeEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IPPoolTypeEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IPPoolTypeEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IPPoolTypeEnumInput is an input type that accepts values of the IPPoolTypeEnum enum
// A concrete instance of `IPPoolTypeEnumInput` can be one of the following:
//
//	IPPoolTypeEnumVm
//	IPPoolTypeEnumVippool
type IPPoolTypeEnumInput interface {
	pulumi.Input

	ToIPPoolTypeEnumOutput() IPPoolTypeEnumOutput
	ToIPPoolTypeEnumOutputWithContext(context.Context) IPPoolTypeEnumOutput
}

var ippoolTypeEnumPtrType = reflect.TypeOf((**IPPoolTypeEnum)(nil)).Elem()

type IPPoolTypeEnumPtrInput interface {
	pulumi.Input

	ToIPPoolTypeEnumPtrOutput() IPPoolTypeEnumPtrOutput
	ToIPPoolTypeEnumPtrOutputWithContext(context.Context) IPPoolTypeEnumPtrOutput
}

type ippoolTypeEnumPtr string

func IPPoolTypeEnumPtr(v string) IPPoolTypeEnumPtrInput {
	return (*ippoolTypeEnumPtr)(&v)
}

func (*ippoolTypeEnumPtr) ElementType() reflect.Type {
	return ippoolTypeEnumPtrType
}

func (in *ippoolTypeEnumPtr) ToIPPoolTypeEnumPtrOutput() IPPoolTypeEnumPtrOutput {
	return pulumi.ToOutput(in).(IPPoolTypeEnumPtrOutput)
}

func (in *ippoolTypeEnumPtr) ToIPPoolTypeEnumPtrOutputWithContext(ctx context.Context) IPPoolTypeEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IPPoolTypeEnumPtrOutput)
}

func (in *ippoolTypeEnumPtr) ToOutput(ctx context.Context) pulumix.Output[*IPPoolTypeEnum] {
	return pulumix.Output[*IPPoolTypeEnum]{
		OutputState: in.ToIPPoolTypeEnumPtrOutputWithContext(ctx).OutputState,
	}
}

// IPAllocationMethod - The IP address allocation method. Possible values include: 'Static', 'Dynamic'
type IpAllocationMethodEnum string

const (
	IpAllocationMethodEnumDynamic = IpAllocationMethodEnum("Dynamic")
	IpAllocationMethodEnumStatic  = IpAllocationMethodEnum("Static")
)

func (IpAllocationMethodEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAllocationMethodEnum)(nil)).Elem()
}

func (e IpAllocationMethodEnum) ToIpAllocationMethodEnumOutput() IpAllocationMethodEnumOutput {
	return pulumi.ToOutput(e).(IpAllocationMethodEnumOutput)
}

func (e IpAllocationMethodEnum) ToIpAllocationMethodEnumOutputWithContext(ctx context.Context) IpAllocationMethodEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IpAllocationMethodEnumOutput)
}

func (e IpAllocationMethodEnum) ToIpAllocationMethodEnumPtrOutput() IpAllocationMethodEnumPtrOutput {
	return e.ToIpAllocationMethodEnumPtrOutputWithContext(context.Background())
}

func (e IpAllocationMethodEnum) ToIpAllocationMethodEnumPtrOutputWithContext(ctx context.Context) IpAllocationMethodEnumPtrOutput {
	return IpAllocationMethodEnum(e).ToIpAllocationMethodEnumOutputWithContext(ctx).ToIpAllocationMethodEnumPtrOutputWithContext(ctx)
}

func (e IpAllocationMethodEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IpAllocationMethodEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IpAllocationMethodEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IpAllocationMethodEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IpAllocationMethodEnumOutput struct{ *pulumi.OutputState }

func (IpAllocationMethodEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAllocationMethodEnum)(nil)).Elem()
}

func (o IpAllocationMethodEnumOutput) ToIpAllocationMethodEnumOutput() IpAllocationMethodEnumOutput {
	return o
}

func (o IpAllocationMethodEnumOutput) ToIpAllocationMethodEnumOutputWithContext(ctx context.Context) IpAllocationMethodEnumOutput {
	return o
}

func (o IpAllocationMethodEnumOutput) ToIpAllocationMethodEnumPtrOutput() IpAllocationMethodEnumPtrOutput {
	return o.ToIpAllocationMethodEnumPtrOutputWithContext(context.Background())
}

func (o IpAllocationMethodEnumOutput) ToIpAllocationMethodEnumPtrOutputWithContext(ctx context.Context) IpAllocationMethodEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IpAllocationMethodEnum) *IpAllocationMethodEnum {
		return &v
	}).(IpAllocationMethodEnumPtrOutput)
}

func (o IpAllocationMethodEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IpAllocationMethodEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IpAllocationMethodEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IpAllocationMethodEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IpAllocationMethodEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IpAllocationMethodEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IpAllocationMethodEnumPtrOutput struct{ *pulumi.OutputState }

func (IpAllocationMethodEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpAllocationMethodEnum)(nil)).Elem()
}

func (o IpAllocationMethodEnumPtrOutput) ToIpAllocationMethodEnumPtrOutput() IpAllocationMethodEnumPtrOutput {
	return o
}

func (o IpAllocationMethodEnumPtrOutput) ToIpAllocationMethodEnumPtrOutputWithContext(ctx context.Context) IpAllocationMethodEnumPtrOutput {
	return o
}

func (o IpAllocationMethodEnumPtrOutput) Elem() IpAllocationMethodEnumOutput {
	return o.ApplyT(func(v *IpAllocationMethodEnum) IpAllocationMethodEnum {
		if v != nil {
			return *v
		}
		var ret IpAllocationMethodEnum
		return ret
	}).(IpAllocationMethodEnumOutput)
}

func (o IpAllocationMethodEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IpAllocationMethodEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IpAllocationMethodEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IpAllocationMethodEnumInput is an input type that accepts values of the IpAllocationMethodEnum enum
// A concrete instance of `IpAllocationMethodEnumInput` can be one of the following:
//
//	IpAllocationMethodEnumDynamic
//	IpAllocationMethodEnumStatic
type IpAllocationMethodEnumInput interface {
	pulumi.Input

	ToIpAllocationMethodEnumOutput() IpAllocationMethodEnumOutput
	ToIpAllocationMethodEnumOutputWithContext(context.Context) IpAllocationMethodEnumOutput
}

var ipAllocationMethodEnumPtrType = reflect.TypeOf((**IpAllocationMethodEnum)(nil)).Elem()

type IpAllocationMethodEnumPtrInput interface {
	pulumi.Input

	ToIpAllocationMethodEnumPtrOutput() IpAllocationMethodEnumPtrOutput
	ToIpAllocationMethodEnumPtrOutputWithContext(context.Context) IpAllocationMethodEnumPtrOutput
}

type ipAllocationMethodEnumPtr string

func IpAllocationMethodEnumPtr(v string) IpAllocationMethodEnumPtrInput {
	return (*ipAllocationMethodEnumPtr)(&v)
}

func (*ipAllocationMethodEnumPtr) ElementType() reflect.Type {
	return ipAllocationMethodEnumPtrType
}

func (in *ipAllocationMethodEnumPtr) ToIpAllocationMethodEnumPtrOutput() IpAllocationMethodEnumPtrOutput {
	return pulumi.ToOutput(in).(IpAllocationMethodEnumPtrOutput)
}

func (in *ipAllocationMethodEnumPtr) ToIpAllocationMethodEnumPtrOutputWithContext(ctx context.Context) IpAllocationMethodEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IpAllocationMethodEnumPtrOutput)
}

func (in *ipAllocationMethodEnumPtr) ToOutput(ctx context.Context) pulumix.Output[*IpAllocationMethodEnum] {
	return pulumix.Output[*IpAllocationMethodEnum]{
		OutputState: in.ToIpAllocationMethodEnumPtrOutputWithContext(ctx).OutputState,
	}
}

// Type of the network
type NetworkTypeEnum string

const (
	NetworkTypeEnumNAT         = NetworkTypeEnum("NAT")
	NetworkTypeEnumTransparent = NetworkTypeEnum("Transparent")
	NetworkTypeEnumL2Bridge    = NetworkTypeEnum("L2Bridge")
	NetworkTypeEnumL2Tunnel    = NetworkTypeEnum("L2Tunnel")
	NetworkTypeEnumICS         = NetworkTypeEnum("ICS")
	NetworkTypeEnumPrivate     = NetworkTypeEnum("Private")
	NetworkTypeEnumOverlay     = NetworkTypeEnum("Overlay")
	NetworkTypeEnumInternal    = NetworkTypeEnum("Internal")
	NetworkTypeEnumMirrored    = NetworkTypeEnum("Mirrored")
)

func (NetworkTypeEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkTypeEnum)(nil)).Elem()
}

func (e NetworkTypeEnum) ToNetworkTypeEnumOutput() NetworkTypeEnumOutput {
	return pulumi.ToOutput(e).(NetworkTypeEnumOutput)
}

func (e NetworkTypeEnum) ToNetworkTypeEnumOutputWithContext(ctx context.Context) NetworkTypeEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkTypeEnumOutput)
}

func (e NetworkTypeEnum) ToNetworkTypeEnumPtrOutput() NetworkTypeEnumPtrOutput {
	return e.ToNetworkTypeEnumPtrOutputWithContext(context.Background())
}

func (e NetworkTypeEnum) ToNetworkTypeEnumPtrOutputWithContext(ctx context.Context) NetworkTypeEnumPtrOutput {
	return NetworkTypeEnum(e).ToNetworkTypeEnumOutputWithContext(ctx).ToNetworkTypeEnumPtrOutputWithContext(ctx)
}

func (e NetworkTypeEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkTypeEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkTypeEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkTypeEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkTypeEnumOutput struct{ *pulumi.OutputState }

func (NetworkTypeEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkTypeEnum)(nil)).Elem()
}

func (o NetworkTypeEnumOutput) ToNetworkTypeEnumOutput() NetworkTypeEnumOutput {
	return o
}

func (o NetworkTypeEnumOutput) ToNetworkTypeEnumOutputWithContext(ctx context.Context) NetworkTypeEnumOutput {
	return o
}

func (o NetworkTypeEnumOutput) ToNetworkTypeEnumPtrOutput() NetworkTypeEnumPtrOutput {
	return o.ToNetworkTypeEnumPtrOutputWithContext(context.Background())
}

func (o NetworkTypeEnumOutput) ToNetworkTypeEnumPtrOutputWithContext(ctx context.Context) NetworkTypeEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkTypeEnum) *NetworkTypeEnum {
		return &v
	}).(NetworkTypeEnumPtrOutput)
}

func (o NetworkTypeEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkTypeEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkTypeEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkTypeEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkTypeEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkTypeEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkTypeEnumPtrOutput struct{ *pulumi.OutputState }

func (NetworkTypeEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkTypeEnum)(nil)).Elem()
}

func (o NetworkTypeEnumPtrOutput) ToNetworkTypeEnumPtrOutput() NetworkTypeEnumPtrOutput {
	return o
}

func (o NetworkTypeEnumPtrOutput) ToNetworkTypeEnumPtrOutputWithContext(ctx context.Context) NetworkTypeEnumPtrOutput {
	return o
}

func (o NetworkTypeEnumPtrOutput) Elem() NetworkTypeEnumOutput {
	return o.ApplyT(func(v *NetworkTypeEnum) NetworkTypeEnum {
		if v != nil {
			return *v
		}
		var ret NetworkTypeEnum
		return ret
	}).(NetworkTypeEnumOutput)
}

func (o NetworkTypeEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkTypeEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkTypeEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkTypeEnumInput is an input type that accepts values of the NetworkTypeEnum enum
// A concrete instance of `NetworkTypeEnumInput` can be one of the following:
//
//	NetworkTypeEnumNAT
//	NetworkTypeEnumTransparent
//	NetworkTypeEnumL2Bridge
//	NetworkTypeEnumL2Tunnel
//	NetworkTypeEnumICS
//	NetworkTypeEnumPrivate
//	NetworkTypeEnumOverlay
//	NetworkTypeEnumInternal
//	NetworkTypeEnumMirrored
type NetworkTypeEnumInput interface {
	pulumi.Input

	ToNetworkTypeEnumOutput() NetworkTypeEnumOutput
	ToNetworkTypeEnumOutputWithContext(context.Context) NetworkTypeEnumOutput
}

var networkTypeEnumPtrType = reflect.TypeOf((**NetworkTypeEnum)(nil)).Elem()

type NetworkTypeEnumPtrInput interface {
	pulumi.Input

	ToNetworkTypeEnumPtrOutput() NetworkTypeEnumPtrOutput
	ToNetworkTypeEnumPtrOutputWithContext(context.Context) NetworkTypeEnumPtrOutput
}

type networkTypeEnumPtr string

func NetworkTypeEnumPtr(v string) NetworkTypeEnumPtrInput {
	return (*networkTypeEnumPtr)(&v)
}

func (*networkTypeEnumPtr) ElementType() reflect.Type {
	return networkTypeEnumPtrType
}

func (in *networkTypeEnumPtr) ToNetworkTypeEnumPtrOutput() NetworkTypeEnumPtrOutput {
	return pulumi.ToOutput(in).(NetworkTypeEnumPtrOutput)
}

func (in *networkTypeEnumPtr) ToNetworkTypeEnumPtrOutputWithContext(ctx context.Context) NetworkTypeEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkTypeEnumPtrOutput)
}

func (in *networkTypeEnumPtr) ToOutput(ctx context.Context) pulumix.Output[*NetworkTypeEnum] {
	return pulumix.Output[*NetworkTypeEnum]{
		OutputState: in.ToNetworkTypeEnumPtrOutputWithContext(ctx).OutputState,
	}
}

// operating system type that the gallery image uses. Expected to be linux or windows
type OperatingSystemTypes string

const (
	OperatingSystemTypesWindows = OperatingSystemTypes("Windows")
	OperatingSystemTypesLinux   = OperatingSystemTypes("Linux")
)

func (OperatingSystemTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*OperatingSystemTypes)(nil)).Elem()
}

func (e OperatingSystemTypes) ToOperatingSystemTypesOutput() OperatingSystemTypesOutput {
	return pulumi.ToOutput(e).(OperatingSystemTypesOutput)
}

func (e OperatingSystemTypes) ToOperatingSystemTypesOutputWithContext(ctx context.Context) OperatingSystemTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OperatingSystemTypesOutput)
}

func (e OperatingSystemTypes) ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput {
	return e.ToOperatingSystemTypesPtrOutputWithContext(context.Background())
}

func (e OperatingSystemTypes) ToOperatingSystemTypesPtrOutputWithContext(ctx context.Context) OperatingSystemTypesPtrOutput {
	return OperatingSystemTypes(e).ToOperatingSystemTypesOutputWithContext(ctx).ToOperatingSystemTypesPtrOutputWithContext(ctx)
}

func (e OperatingSystemTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OperatingSystemTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OperatingSystemTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OperatingSystemTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OperatingSystemTypesOutput struct{ *pulumi.OutputState }

func (OperatingSystemTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperatingSystemTypes)(nil)).Elem()
}

func (o OperatingSystemTypesOutput) ToOperatingSystemTypesOutput() OperatingSystemTypesOutput {
	return o
}

func (o OperatingSystemTypesOutput) ToOperatingSystemTypesOutputWithContext(ctx context.Context) OperatingSystemTypesOutput {
	return o
}

func (o OperatingSystemTypesOutput) ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput {
	return o.ToOperatingSystemTypesPtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypesOutput) ToOperatingSystemTypesPtrOutputWithContext(ctx context.Context) OperatingSystemTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OperatingSystemTypes) *OperatingSystemTypes {
		return &v
	}).(OperatingSystemTypesPtrOutput)
}

func (o OperatingSystemTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OperatingSystemTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OperatingSystemTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OperatingSystemTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OperatingSystemTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OperatingSystemTypesPtrOutput struct{ *pulumi.OutputState }

func (OperatingSystemTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperatingSystemTypes)(nil)).Elem()
}

func (o OperatingSystemTypesPtrOutput) ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput {
	return o
}

func (o OperatingSystemTypesPtrOutput) ToOperatingSystemTypesPtrOutputWithContext(ctx context.Context) OperatingSystemTypesPtrOutput {
	return o
}

func (o OperatingSystemTypesPtrOutput) Elem() OperatingSystemTypesOutput {
	return o.ApplyT(func(v *OperatingSystemTypes) OperatingSystemTypes {
		if v != nil {
			return *v
		}
		var ret OperatingSystemTypes
		return ret
	}).(OperatingSystemTypesOutput)
}

func (o OperatingSystemTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OperatingSystemTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OperatingSystemTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OperatingSystemTypesInput is an input type that accepts values of the OperatingSystemTypes enum
// A concrete instance of `OperatingSystemTypesInput` can be one of the following:
//
//	OperatingSystemTypesWindows
//	OperatingSystemTypesLinux
type OperatingSystemTypesInput interface {
	pulumi.Input

	ToOperatingSystemTypesOutput() OperatingSystemTypesOutput
	ToOperatingSystemTypesOutputWithContext(context.Context) OperatingSystemTypesOutput
}

var operatingSystemTypesPtrType = reflect.TypeOf((**OperatingSystemTypes)(nil)).Elem()

type OperatingSystemTypesPtrInput interface {
	pulumi.Input

	ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput
	ToOperatingSystemTypesPtrOutputWithContext(context.Context) OperatingSystemTypesPtrOutput
}

type operatingSystemTypesPtr string

func OperatingSystemTypesPtr(v string) OperatingSystemTypesPtrInput {
	return (*operatingSystemTypesPtr)(&v)
}

func (*operatingSystemTypesPtr) ElementType() reflect.Type {
	return operatingSystemTypesPtrType
}

func (in *operatingSystemTypesPtr) ToOperatingSystemTypesPtrOutput() OperatingSystemTypesPtrOutput {
	return pulumi.ToOutput(in).(OperatingSystemTypesPtrOutput)
}

func (in *operatingSystemTypesPtr) ToOperatingSystemTypesPtrOutputWithContext(ctx context.Context) OperatingSystemTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OperatingSystemTypesPtrOutput)
}

func (in *operatingSystemTypesPtr) ToOutput(ctx context.Context) pulumix.Output[*OperatingSystemTypes] {
	return pulumix.Output[*OperatingSystemTypes]{
		OutputState: in.ToOperatingSystemTypesPtrOutputWithContext(ctx).OutputState,
	}
}

// OsType - string specifying whether the OS is Linux or Windows
type OsTypeEnum string

const (
	OsTypeEnumLinux   = OsTypeEnum("Linux")
	OsTypeEnumWindows = OsTypeEnum("Windows")
)

func (OsTypeEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*OsTypeEnum)(nil)).Elem()
}

func (e OsTypeEnum) ToOsTypeEnumOutput() OsTypeEnumOutput {
	return pulumi.ToOutput(e).(OsTypeEnumOutput)
}

func (e OsTypeEnum) ToOsTypeEnumOutputWithContext(ctx context.Context) OsTypeEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OsTypeEnumOutput)
}

func (e OsTypeEnum) ToOsTypeEnumPtrOutput() OsTypeEnumPtrOutput {
	return e.ToOsTypeEnumPtrOutputWithContext(context.Background())
}

func (e OsTypeEnum) ToOsTypeEnumPtrOutputWithContext(ctx context.Context) OsTypeEnumPtrOutput {
	return OsTypeEnum(e).ToOsTypeEnumOutputWithContext(ctx).ToOsTypeEnumPtrOutputWithContext(ctx)
}

func (e OsTypeEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OsTypeEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OsTypeEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OsTypeEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OsTypeEnumOutput struct{ *pulumi.OutputState }

func (OsTypeEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OsTypeEnum)(nil)).Elem()
}

func (o OsTypeEnumOutput) ToOsTypeEnumOutput() OsTypeEnumOutput {
	return o
}

func (o OsTypeEnumOutput) ToOsTypeEnumOutputWithContext(ctx context.Context) OsTypeEnumOutput {
	return o
}

func (o OsTypeEnumOutput) ToOsTypeEnumPtrOutput() OsTypeEnumPtrOutput {
	return o.ToOsTypeEnumPtrOutputWithContext(context.Background())
}

func (o OsTypeEnumOutput) ToOsTypeEnumPtrOutputWithContext(ctx context.Context) OsTypeEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OsTypeEnum) *OsTypeEnum {
		return &v
	}).(OsTypeEnumPtrOutput)
}

func (o OsTypeEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OsTypeEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OsTypeEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OsTypeEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OsTypeEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OsTypeEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OsTypeEnumPtrOutput struct{ *pulumi.OutputState }

func (OsTypeEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsTypeEnum)(nil)).Elem()
}

func (o OsTypeEnumPtrOutput) ToOsTypeEnumPtrOutput() OsTypeEnumPtrOutput {
	return o
}

func (o OsTypeEnumPtrOutput) ToOsTypeEnumPtrOutputWithContext(ctx context.Context) OsTypeEnumPtrOutput {
	return o
}

func (o OsTypeEnumPtrOutput) Elem() OsTypeEnumOutput {
	return o.ApplyT(func(v *OsTypeEnum) OsTypeEnum {
		if v != nil {
			return *v
		}
		var ret OsTypeEnum
		return ret
	}).(OsTypeEnumOutput)
}

func (o OsTypeEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OsTypeEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OsTypeEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OsTypeEnumInput is an input type that accepts values of the OsTypeEnum enum
// A concrete instance of `OsTypeEnumInput` can be one of the following:
//
//	OsTypeEnumLinux
//	OsTypeEnumWindows
type OsTypeEnumInput interface {
	pulumi.Input

	ToOsTypeEnumOutput() OsTypeEnumOutput
	ToOsTypeEnumOutputWithContext(context.Context) OsTypeEnumOutput
}

var osTypeEnumPtrType = reflect.TypeOf((**OsTypeEnum)(nil)).Elem()

type OsTypeEnumPtrInput interface {
	pulumi.Input

	ToOsTypeEnumPtrOutput() OsTypeEnumPtrOutput
	ToOsTypeEnumPtrOutputWithContext(context.Context) OsTypeEnumPtrOutput
}

type osTypeEnumPtr string

func OsTypeEnumPtr(v string) OsTypeEnumPtrInput {
	return (*osTypeEnumPtr)(&v)
}

func (*osTypeEnumPtr) ElementType() reflect.Type {
	return osTypeEnumPtrType
}

func (in *osTypeEnumPtr) ToOsTypeEnumPtrOutput() OsTypeEnumPtrOutput {
	return pulumi.ToOutput(in).(OsTypeEnumPtrOutput)
}

func (in *osTypeEnumPtr) ToOsTypeEnumPtrOutputWithContext(ctx context.Context) OsTypeEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OsTypeEnumPtrOutput)
}

func (in *osTypeEnumPtr) ToOutput(ctx context.Context) pulumix.Output[*OsTypeEnum] {
	return pulumix.Output[*OsTypeEnum]{
		OutputState: in.ToOsTypeEnumPtrOutputWithContext(ctx).OutputState,
	}
}

// PrivateIPAllocationMethod - The private IP address allocation method. Possible values include: 'Static', 'Dynamic'
type PrivateIPAllocationMethodEnum string

const (
	PrivateIPAllocationMethodEnumDynamic = PrivateIPAllocationMethodEnum("Dynamic")
	PrivateIPAllocationMethodEnumStatic  = PrivateIPAllocationMethodEnum("Static")
)

func (PrivateIPAllocationMethodEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateIPAllocationMethodEnum)(nil)).Elem()
}

func (e PrivateIPAllocationMethodEnum) ToPrivateIPAllocationMethodEnumOutput() PrivateIPAllocationMethodEnumOutput {
	return pulumi.ToOutput(e).(PrivateIPAllocationMethodEnumOutput)
}

func (e PrivateIPAllocationMethodEnum) ToPrivateIPAllocationMethodEnumOutputWithContext(ctx context.Context) PrivateIPAllocationMethodEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PrivateIPAllocationMethodEnumOutput)
}

func (e PrivateIPAllocationMethodEnum) ToPrivateIPAllocationMethodEnumPtrOutput() PrivateIPAllocationMethodEnumPtrOutput {
	return e.ToPrivateIPAllocationMethodEnumPtrOutputWithContext(context.Background())
}

func (e PrivateIPAllocationMethodEnum) ToPrivateIPAllocationMethodEnumPtrOutputWithContext(ctx context.Context) PrivateIPAllocationMethodEnumPtrOutput {
	return PrivateIPAllocationMethodEnum(e).ToPrivateIPAllocationMethodEnumOutputWithContext(ctx).ToPrivateIPAllocationMethodEnumPtrOutputWithContext(ctx)
}

func (e PrivateIPAllocationMethodEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateIPAllocationMethodEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateIPAllocationMethodEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateIPAllocationMethodEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PrivateIPAllocationMethodEnumOutput struct{ *pulumi.OutputState }

func (PrivateIPAllocationMethodEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateIPAllocationMethodEnum)(nil)).Elem()
}

func (o PrivateIPAllocationMethodEnumOutput) ToPrivateIPAllocationMethodEnumOutput() PrivateIPAllocationMethodEnumOutput {
	return o
}

func (o PrivateIPAllocationMethodEnumOutput) ToPrivateIPAllocationMethodEnumOutputWithContext(ctx context.Context) PrivateIPAllocationMethodEnumOutput {
	return o
}

func (o PrivateIPAllocationMethodEnumOutput) ToPrivateIPAllocationMethodEnumPtrOutput() PrivateIPAllocationMethodEnumPtrOutput {
	return o.ToPrivateIPAllocationMethodEnumPtrOutputWithContext(context.Background())
}

func (o PrivateIPAllocationMethodEnumOutput) ToPrivateIPAllocationMethodEnumPtrOutputWithContext(ctx context.Context) PrivateIPAllocationMethodEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateIPAllocationMethodEnum) *PrivateIPAllocationMethodEnum {
		return &v
	}).(PrivateIPAllocationMethodEnumPtrOutput)
}

func (o PrivateIPAllocationMethodEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PrivateIPAllocationMethodEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateIPAllocationMethodEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PrivateIPAllocationMethodEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateIPAllocationMethodEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PrivateIPAllocationMethodEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PrivateIPAllocationMethodEnumPtrOutput struct{ *pulumi.OutputState }

func (PrivateIPAllocationMethodEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateIPAllocationMethodEnum)(nil)).Elem()
}

func (o PrivateIPAllocationMethodEnumPtrOutput) ToPrivateIPAllocationMethodEnumPtrOutput() PrivateIPAllocationMethodEnumPtrOutput {
	return o
}

func (o PrivateIPAllocationMethodEnumPtrOutput) ToPrivateIPAllocationMethodEnumPtrOutputWithContext(ctx context.Context) PrivateIPAllocationMethodEnumPtrOutput {
	return o
}

func (o PrivateIPAllocationMethodEnumPtrOutput) Elem() PrivateIPAllocationMethodEnumOutput {
	return o.ApplyT(func(v *PrivateIPAllocationMethodEnum) PrivateIPAllocationMethodEnum {
		if v != nil {
			return *v
		}
		var ret PrivateIPAllocationMethodEnum
		return ret
	}).(PrivateIPAllocationMethodEnumOutput)
}

func (o PrivateIPAllocationMethodEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PrivateIPAllocationMethodEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PrivateIPAllocationMethodEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PrivateIPAllocationMethodEnumInput is an input type that accepts values of the PrivateIPAllocationMethodEnum enum
// A concrete instance of `PrivateIPAllocationMethodEnumInput` can be one of the following:
//
//	PrivateIPAllocationMethodEnumDynamic
//	PrivateIPAllocationMethodEnumStatic
type PrivateIPAllocationMethodEnumInput interface {
	pulumi.Input

	ToPrivateIPAllocationMethodEnumOutput() PrivateIPAllocationMethodEnumOutput
	ToPrivateIPAllocationMethodEnumOutputWithContext(context.Context) PrivateIPAllocationMethodEnumOutput
}

var privateIPAllocationMethodEnumPtrType = reflect.TypeOf((**PrivateIPAllocationMethodEnum)(nil)).Elem()

type PrivateIPAllocationMethodEnumPtrInput interface {
	pulumi.Input

	ToPrivateIPAllocationMethodEnumPtrOutput() PrivateIPAllocationMethodEnumPtrOutput
	ToPrivateIPAllocationMethodEnumPtrOutputWithContext(context.Context) PrivateIPAllocationMethodEnumPtrOutput
}

type privateIPAllocationMethodEnumPtr string

func PrivateIPAllocationMethodEnumPtr(v string) PrivateIPAllocationMethodEnumPtrInput {
	return (*privateIPAllocationMethodEnumPtr)(&v)
}

func (*privateIPAllocationMethodEnumPtr) ElementType() reflect.Type {
	return privateIPAllocationMethodEnumPtrType
}

func (in *privateIPAllocationMethodEnumPtr) ToPrivateIPAllocationMethodEnumPtrOutput() PrivateIPAllocationMethodEnumPtrOutput {
	return pulumi.ToOutput(in).(PrivateIPAllocationMethodEnumPtrOutput)
}

func (in *privateIPAllocationMethodEnumPtr) ToPrivateIPAllocationMethodEnumPtrOutputWithContext(ctx context.Context) PrivateIPAllocationMethodEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PrivateIPAllocationMethodEnumPtrOutput)
}

func (in *privateIPAllocationMethodEnumPtr) ToOutput(ctx context.Context) pulumix.Output[*PrivateIPAllocationMethodEnum] {
	return pulumix.Output[*PrivateIPAllocationMethodEnum]{
		OutputState: in.ToPrivateIPAllocationMethodEnumPtrOutputWithContext(ctx).OutputState,
	}
}

// The identity type.
type ResourceIdentityType string

const (
	ResourceIdentityTypeSystemAssigned = ResourceIdentityType("SystemAssigned")
)

func (ResourceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return e.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return ResourceIdentityType(e).ToResourceIdentityTypeOutputWithContext(ctx).ToResourceIdentityTypePtrOutputWithContext(ctx)
}

func (e ResourceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentityType) *ResourceIdentityType {
		return &v
	}).(ResourceIdentityTypePtrOutput)
}

func (o ResourceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) Elem() ResourceIdentityTypeOutput {
	return o.ApplyT(func(v *ResourceIdentityType) ResourceIdentityType {
		if v != nil {
			return *v
		}
		var ret ResourceIdentityType
		return ret
	}).(ResourceIdentityTypeOutput)
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceIdentityTypeInput is an input type that accepts values of the ResourceIdentityType enum
// A concrete instance of `ResourceIdentityTypeInput` can be one of the following:
//
//	ResourceIdentityTypeSystemAssigned
type ResourceIdentityTypeInput interface {
	pulumi.Input

	ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput
	ToResourceIdentityTypeOutputWithContext(context.Context) ResourceIdentityTypeOutput
}

var resourceIdentityTypePtrType = reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()

type ResourceIdentityTypePtrInput interface {
	pulumi.Input

	ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput
	ToResourceIdentityTypePtrOutputWithContext(context.Context) ResourceIdentityTypePtrOutput
}

type resourceIdentityTypePtr string

func ResourceIdentityTypePtr(v string) ResourceIdentityTypePtrInput {
	return (*resourceIdentityTypePtr)(&v)
}

func (*resourceIdentityTypePtr) ElementType() reflect.Type {
	return resourceIdentityTypePtrType
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceIdentityTypePtrOutput)
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceIdentityTypePtrOutput)
}

func (in *resourceIdentityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ResourceIdentityType] {
	return pulumix.Output[*ResourceIdentityType]{
		OutputState: in.ToResourceIdentityTypePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterOutputType(CloudInitDataSourceOutput{})
	pulumi.RegisterOutputType(CloudInitDataSourcePtrOutput{})
	pulumi.RegisterOutputType(CreatedByTypeOutput{})
	pulumi.RegisterOutputType(CreatedByTypePtrOutput{})
	pulumi.RegisterOutputType(DiskFileFormatOutput{})
	pulumi.RegisterOutputType(DiskFileFormatPtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationTypesOutput{})
	pulumi.RegisterOutputType(ExtendedLocationTypesPtrOutput{})
	pulumi.RegisterOutputType(HyperVGenerationOutput{})
	pulumi.RegisterOutputType(HyperVGenerationPtrOutput{})
	pulumi.RegisterOutputType(IPPoolTypeEnumOutput{})
	pulumi.RegisterOutputType(IPPoolTypeEnumPtrOutput{})
	pulumi.RegisterOutputType(IpAllocationMethodEnumOutput{})
	pulumi.RegisterOutputType(IpAllocationMethodEnumPtrOutput{})
	pulumi.RegisterOutputType(NetworkTypeEnumOutput{})
	pulumi.RegisterOutputType(NetworkTypeEnumPtrOutput{})
	pulumi.RegisterOutputType(OperatingSystemTypesOutput{})
	pulumi.RegisterOutputType(OperatingSystemTypesPtrOutput{})
	pulumi.RegisterOutputType(OsTypeEnumOutput{})
	pulumi.RegisterOutputType(OsTypeEnumPtrOutput{})
	pulumi.RegisterOutputType(PrivateIPAllocationMethodEnumOutput{})
	pulumi.RegisterOutputType(PrivateIPAllocationMethodEnumPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypePtrOutput{})
}
