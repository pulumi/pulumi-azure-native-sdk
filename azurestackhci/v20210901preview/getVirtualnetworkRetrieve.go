// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The virtual network resource definition.
func LookupVirtualnetworkRetrieve(ctx *pulumi.Context, args *LookupVirtualnetworkRetrieveArgs, opts ...pulumi.InvokeOption) (*LookupVirtualnetworkRetrieveResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupVirtualnetworkRetrieveResult
	err := ctx.Invoke("azure-native:azurestackhci/v20210901preview:getVirtualnetworkRetrieve", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVirtualnetworkRetrieveArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName   string `pulumi:"resourceGroupName"`
	VirtualnetworksName string `pulumi:"virtualnetworksName"`
}

// The virtual network resource definition.
type LookupVirtualnetworkRetrieveResult struct {
	// The extendedLocation of the resource.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Type of the network
	NetworkType       *string `pulumi:"networkType"`
	ProvisioningState string  `pulumi:"provisioningState"`
	// name of the object to be used in moc
	ResourceName *string `pulumi:"resourceName"`
	// VirtualNetworkStatus defines the observed state of virtual networks
	Status VirtualNetworkStatusResponse `pulumi:"status"`
	// Subnet - list of subnets under the virtual network
	Subnets []VirtualnetworksPropertiesResponseSubnets `pulumi:"subnets"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupVirtualnetworkRetrieveOutput(ctx *pulumi.Context, args LookupVirtualnetworkRetrieveOutputArgs, opts ...pulumi.InvokeOption) LookupVirtualnetworkRetrieveResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVirtualnetworkRetrieveResult, error) {
			args := v.(LookupVirtualnetworkRetrieveArgs)
			r, err := LookupVirtualnetworkRetrieve(ctx, &args, opts...)
			var s LookupVirtualnetworkRetrieveResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVirtualnetworkRetrieveResultOutput)
}

type LookupVirtualnetworkRetrieveOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName   pulumi.StringInput `pulumi:"resourceGroupName"`
	VirtualnetworksName pulumi.StringInput `pulumi:"virtualnetworksName"`
}

func (LookupVirtualnetworkRetrieveOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualnetworkRetrieveArgs)(nil)).Elem()
}

// The virtual network resource definition.
type LookupVirtualnetworkRetrieveResultOutput struct{ *pulumi.OutputState }

func (LookupVirtualnetworkRetrieveResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualnetworkRetrieveResult)(nil)).Elem()
}

func (o LookupVirtualnetworkRetrieveResultOutput) ToLookupVirtualnetworkRetrieveResultOutput() LookupVirtualnetworkRetrieveResultOutput {
	return o
}

func (o LookupVirtualnetworkRetrieveResultOutput) ToLookupVirtualnetworkRetrieveResultOutputWithContext(ctx context.Context) LookupVirtualnetworkRetrieveResultOutput {
	return o
}

func (o LookupVirtualnetworkRetrieveResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupVirtualnetworkRetrieveResult] {
	return pulumix.Output[LookupVirtualnetworkRetrieveResult]{
		OutputState: o.OutputState,
	}
}

// The extendedLocation of the resource.
func (o LookupVirtualnetworkRetrieveResultOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualnetworkRetrieveResult) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupVirtualnetworkRetrieveResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualnetworkRetrieveResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupVirtualnetworkRetrieveResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualnetworkRetrieveResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupVirtualnetworkRetrieveResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualnetworkRetrieveResult) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the network
func (o LookupVirtualnetworkRetrieveResultOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualnetworkRetrieveResult) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

func (o LookupVirtualnetworkRetrieveResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualnetworkRetrieveResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// name of the object to be used in moc
func (o LookupVirtualnetworkRetrieveResultOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualnetworkRetrieveResult) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// VirtualNetworkStatus defines the observed state of virtual networks
func (o LookupVirtualnetworkRetrieveResultOutput) Status() VirtualNetworkStatusResponseOutput {
	return o.ApplyT(func(v LookupVirtualnetworkRetrieveResult) VirtualNetworkStatusResponse { return v.Status }).(VirtualNetworkStatusResponseOutput)
}

// Subnet - list of subnets under the virtual network
func (o LookupVirtualnetworkRetrieveResultOutput) Subnets() VirtualnetworksPropertiesResponseSubnetsArrayOutput {
	return o.ApplyT(func(v LookupVirtualnetworkRetrieveResult) []VirtualnetworksPropertiesResponseSubnets {
		return v.Subnets
	}).(VirtualnetworksPropertiesResponseSubnetsArrayOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o LookupVirtualnetworkRetrieveResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupVirtualnetworkRetrieveResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupVirtualnetworkRetrieveResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualnetworkRetrieveResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupVirtualnetworkRetrieveResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualnetworkRetrieveResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVirtualnetworkRetrieveResultOutput{})
}
