// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets marketplacegalleryimages by resource name
func Getmarketplacegalleryimage(ctx *pulumi.Context, args *GetmarketplacegalleryimageArgs, opts ...pulumi.InvokeOption) (*GetmarketplacegalleryimageResult, error) {
	var rv GetmarketplacegalleryimageResult
	err := ctx.Invoke("azure-native:azurestackhci/v20210901preview:getmarketplacegalleryimage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetmarketplacegalleryimageArgs struct {
	// Name of the marketplace gallery image
	MarketplacegalleryimagesName string `pulumi:"marketplacegalleryimagesName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The marketplace gallery image resource definition.
type GetmarketplacegalleryimageResult struct {
	// Datasource for the gallery image when provisioning with cloud-init [Azure, NoCloud]
	CloudInitDataSource *string `pulumi:"cloudInitDataSource"`
	// Container Name for storage container
	ContainerName *string `pulumi:"containerName"`
	// The extendedLocation of the resource.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// The hypervisor generation of the Virtual Machine [V1, V2]
	HyperVGeneration *string `pulumi:"hyperVGeneration"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// This is the gallery image definition identifier.
	Identifier *GalleryImageIdentifierResponse `pulumi:"identifier"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// operating system type that the gallery image uses. Expected to be linux or windows
	OsType *string `pulumi:"osType"`
	// Provisioning state of the gallery image.
	ProvisioningState string `pulumi:"provisioningState"`
	// name of the object to be used in moc
	ResourceName *string `pulumi:"resourceName"`
	// MarketplaceGalleryImageStatus defines the observed state of marketplacegalleryimages
	Status MarketplaceGalleryImageStatusResponse `pulumi:"status"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// Specifies information about the gallery image version that you want to create or update.
	Version *GalleryImageVersionResponse `pulumi:"version"`
}

func GetmarketplacegalleryimageOutput(ctx *pulumi.Context, args GetmarketplacegalleryimageOutputArgs, opts ...pulumi.InvokeOption) GetmarketplacegalleryimageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetmarketplacegalleryimageResult, error) {
			args := v.(GetmarketplacegalleryimageArgs)
			r, err := Getmarketplacegalleryimage(ctx, &args, opts...)
			var s GetmarketplacegalleryimageResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetmarketplacegalleryimageResultOutput)
}

type GetmarketplacegalleryimageOutputArgs struct {
	// Name of the marketplace gallery image
	MarketplacegalleryimagesName pulumi.StringInput `pulumi:"marketplacegalleryimagesName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetmarketplacegalleryimageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetmarketplacegalleryimageArgs)(nil)).Elem()
}

// The marketplace gallery image resource definition.
type GetmarketplacegalleryimageResultOutput struct{ *pulumi.OutputState }

func (GetmarketplacegalleryimageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetmarketplacegalleryimageResult)(nil)).Elem()
}

func (o GetmarketplacegalleryimageResultOutput) ToGetmarketplacegalleryimageResultOutput() GetmarketplacegalleryimageResultOutput {
	return o
}

func (o GetmarketplacegalleryimageResultOutput) ToGetmarketplacegalleryimageResultOutputWithContext(ctx context.Context) GetmarketplacegalleryimageResultOutput {
	return o
}

// Datasource for the gallery image when provisioning with cloud-init [Azure, NoCloud]
func (o GetmarketplacegalleryimageResultOutput) CloudInitDataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetmarketplacegalleryimageResult) *string { return v.CloudInitDataSource }).(pulumi.StringPtrOutput)
}

// Container Name for storage container
func (o GetmarketplacegalleryimageResultOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetmarketplacegalleryimageResult) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// The extendedLocation of the resource.
func (o GetmarketplacegalleryimageResultOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v GetmarketplacegalleryimageResult) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// The hypervisor generation of the Virtual Machine [V1, V2]
func (o GetmarketplacegalleryimageResultOutput) HyperVGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetmarketplacegalleryimageResult) *string { return v.HyperVGeneration }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o GetmarketplacegalleryimageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetmarketplacegalleryimageResult) string { return v.Id }).(pulumi.StringOutput)
}

// This is the gallery image definition identifier.
func (o GetmarketplacegalleryimageResultOutput) Identifier() GalleryImageIdentifierResponsePtrOutput {
	return o.ApplyT(func(v GetmarketplacegalleryimageResult) *GalleryImageIdentifierResponse { return v.Identifier }).(GalleryImageIdentifierResponsePtrOutput)
}

// The geo-location where the resource lives
func (o GetmarketplacegalleryimageResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetmarketplacegalleryimageResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o GetmarketplacegalleryimageResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetmarketplacegalleryimageResult) string { return v.Name }).(pulumi.StringOutput)
}

// operating system type that the gallery image uses. Expected to be linux or windows
func (o GetmarketplacegalleryimageResultOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetmarketplacegalleryimageResult) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Provisioning state of the gallery image.
func (o GetmarketplacegalleryimageResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v GetmarketplacegalleryimageResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// name of the object to be used in moc
func (o GetmarketplacegalleryimageResultOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetmarketplacegalleryimageResult) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// MarketplaceGalleryImageStatus defines the observed state of marketplacegalleryimages
func (o GetmarketplacegalleryimageResultOutput) Status() MarketplaceGalleryImageStatusResponseOutput {
	return o.ApplyT(func(v GetmarketplacegalleryimageResult) MarketplaceGalleryImageStatusResponse { return v.Status }).(MarketplaceGalleryImageStatusResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o GetmarketplacegalleryimageResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v GetmarketplacegalleryimageResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o GetmarketplacegalleryimageResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetmarketplacegalleryimageResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o GetmarketplacegalleryimageResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetmarketplacegalleryimageResult) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies information about the gallery image version that you want to create or update.
func (o GetmarketplacegalleryimageResultOutput) Version() GalleryImageVersionResponsePtrOutput {
	return o.ApplyT(func(v GetmarketplacegalleryimageResult) *GalleryImageVersionResponse { return v.Version }).(GalleryImageVersionResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetmarketplacegalleryimageResultOutput{})
}
