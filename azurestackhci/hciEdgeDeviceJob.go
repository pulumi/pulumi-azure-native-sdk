// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azurestackhci

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Edge device job for Azure Stack HCI solution.
// Azure REST API version: 2024-09-01-preview.
type HciEdgeDeviceJob struct {
	pulumi.CustomResourceState

	// Edge device kind.
	// Expected value is 'HCI'.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// HCI Edge device job properties
	Properties pulumi.AnyOutput `pulumi:"properties"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewHciEdgeDeviceJob registers a new resource with the given unique name, arguments, and options.
func NewHciEdgeDeviceJob(ctx *pulumi.Context,
	name string, args *HciEdgeDeviceJobArgs, opts ...pulumi.ResourceOption) (*HciEdgeDeviceJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EdgeDeviceName == nil {
		return nil, errors.New("invalid value for required argument 'EdgeDeviceName'")
	}
	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	if args.ResourceUri == nil {
		return nil, errors.New("invalid value for required argument 'ResourceUri'")
	}
	args.Kind = pulumi.String("HCI")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:azurestackhci/v20240901preview:HciEdgeDeviceJob"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource HciEdgeDeviceJob
	err := ctx.RegisterResource("azure-native:azurestackhci:HciEdgeDeviceJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHciEdgeDeviceJob gets an existing HciEdgeDeviceJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHciEdgeDeviceJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HciEdgeDeviceJobState, opts ...pulumi.ResourceOption) (*HciEdgeDeviceJob, error) {
	var resource HciEdgeDeviceJob
	err := ctx.ReadResource("azure-native:azurestackhci:HciEdgeDeviceJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HciEdgeDeviceJob resources.
type hciEdgeDeviceJobState struct {
}

type HciEdgeDeviceJobState struct {
}

func (HciEdgeDeviceJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*hciEdgeDeviceJobState)(nil)).Elem()
}

type hciEdgeDeviceJobArgs struct {
	// The name of the EdgeDevice
	EdgeDeviceName string `pulumi:"edgeDeviceName"`
	// Name of EdgeDevice Job
	JobsName *string `pulumi:"jobsName"`
	// Edge device kind.
	// Expected value is 'HCI'.
	Kind string `pulumi:"kind"`
	// HCI Edge device job properties
	Properties interface{} `pulumi:"properties"`
	// The fully qualified Azure Resource manager identifier of the resource.
	ResourceUri string `pulumi:"resourceUri"`
}

// The set of arguments for constructing a HciEdgeDeviceJob resource.
type HciEdgeDeviceJobArgs struct {
	// The name of the EdgeDevice
	EdgeDeviceName pulumi.StringInput
	// Name of EdgeDevice Job
	JobsName pulumi.StringPtrInput
	// Edge device kind.
	// Expected value is 'HCI'.
	Kind pulumi.StringInput
	// HCI Edge device job properties
	Properties pulumi.Input
	// The fully qualified Azure Resource manager identifier of the resource.
	ResourceUri pulumi.StringInput
}

func (HciEdgeDeviceJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hciEdgeDeviceJobArgs)(nil)).Elem()
}

type HciEdgeDeviceJobInput interface {
	pulumi.Input

	ToHciEdgeDeviceJobOutput() HciEdgeDeviceJobOutput
	ToHciEdgeDeviceJobOutputWithContext(ctx context.Context) HciEdgeDeviceJobOutput
}

func (*HciEdgeDeviceJob) ElementType() reflect.Type {
	return reflect.TypeOf((**HciEdgeDeviceJob)(nil)).Elem()
}

func (i *HciEdgeDeviceJob) ToHciEdgeDeviceJobOutput() HciEdgeDeviceJobOutput {
	return i.ToHciEdgeDeviceJobOutputWithContext(context.Background())
}

func (i *HciEdgeDeviceJob) ToHciEdgeDeviceJobOutputWithContext(ctx context.Context) HciEdgeDeviceJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HciEdgeDeviceJobOutput)
}

type HciEdgeDeviceJobOutput struct{ *pulumi.OutputState }

func (HciEdgeDeviceJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HciEdgeDeviceJob)(nil)).Elem()
}

func (o HciEdgeDeviceJobOutput) ToHciEdgeDeviceJobOutput() HciEdgeDeviceJobOutput {
	return o
}

func (o HciEdgeDeviceJobOutput) ToHciEdgeDeviceJobOutputWithContext(ctx context.Context) HciEdgeDeviceJobOutput {
	return o
}

// Edge device kind.
// Expected value is 'HCI'.
func (o HciEdgeDeviceJobOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *HciEdgeDeviceJob) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// The name of the resource
func (o HciEdgeDeviceJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *HciEdgeDeviceJob) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// HCI Edge device job properties
func (o HciEdgeDeviceJobOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v *HciEdgeDeviceJob) pulumi.AnyOutput { return v.Properties }).(pulumi.AnyOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o HciEdgeDeviceJobOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *HciEdgeDeviceJob) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o HciEdgeDeviceJobOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *HciEdgeDeviceJob) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(HciEdgeDeviceJobOutput{})
}
