// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210701preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The virtualnetworks resource definition.
//
// Deprecated: azure-native:azurestackhci/v20210701preview:virtualnetworkRetrieve is being removed in the next major version of this provider. Upgrade to at least azure-native:azurestackhci/v20210901preview:virtualnetworkRetrieve to guarantee forwards compatibility.
func GetvirtualnetworkRetrieve(ctx *pulumi.Context, args *GetvirtualnetworkRetrieveArgs, opts ...pulumi.InvokeOption) (*GetvirtualnetworkRetrieveResult, error) {
	var rv GetvirtualnetworkRetrieveResult
	err := ctx.Invoke("azure-native:azurestackhci/v20210701preview:getvirtualnetworkRetrieve", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetvirtualnetworkRetrieveArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName   string `pulumi:"resourceGroupName"`
	VirtualnetworksName string `pulumi:"virtualnetworksName"`
}

// The virtualnetworks resource definition.
type GetvirtualnetworkRetrieveResult struct {
	// The extendedLocation of the resource.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Type of the network
	NetworkType       *string `pulumi:"networkType"`
	ProvisioningState string  `pulumi:"provisioningState"`
	// name of the object to be used in moc
	ResourceName *string `pulumi:"resourceName"`
	// VirtualNetworkStatus defines the observed state of VirtualNetwork
	Status VirtualNetworkStatusResponse `pulumi:"status"`
	// Subnet - list of subnets under the virtual network
	Subnets []VirtualnetworksPropertiesResponseSubnets `pulumi:"subnets"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func GetvirtualnetworkRetrieveOutput(ctx *pulumi.Context, args GetvirtualnetworkRetrieveOutputArgs, opts ...pulumi.InvokeOption) GetvirtualnetworkRetrieveResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetvirtualnetworkRetrieveResult, error) {
			args := v.(GetvirtualnetworkRetrieveArgs)
			r, err := GetvirtualnetworkRetrieve(ctx, &args, opts...)
			var s GetvirtualnetworkRetrieveResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetvirtualnetworkRetrieveResultOutput)
}

type GetvirtualnetworkRetrieveOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName   pulumi.StringInput `pulumi:"resourceGroupName"`
	VirtualnetworksName pulumi.StringInput `pulumi:"virtualnetworksName"`
}

func (GetvirtualnetworkRetrieveOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetvirtualnetworkRetrieveArgs)(nil)).Elem()
}

// The virtualnetworks resource definition.
type GetvirtualnetworkRetrieveResultOutput struct{ *pulumi.OutputState }

func (GetvirtualnetworkRetrieveResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetvirtualnetworkRetrieveResult)(nil)).Elem()
}

func (o GetvirtualnetworkRetrieveResultOutput) ToGetvirtualnetworkRetrieveResultOutput() GetvirtualnetworkRetrieveResultOutput {
	return o
}

func (o GetvirtualnetworkRetrieveResultOutput) ToGetvirtualnetworkRetrieveResultOutputWithContext(ctx context.Context) GetvirtualnetworkRetrieveResultOutput {
	return o
}

// The extendedLocation of the resource.
func (o GetvirtualnetworkRetrieveResultOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v GetvirtualnetworkRetrieveResult) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o GetvirtualnetworkRetrieveResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetvirtualnetworkRetrieveResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o GetvirtualnetworkRetrieveResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetvirtualnetworkRetrieveResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o GetvirtualnetworkRetrieveResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetvirtualnetworkRetrieveResult) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the network
func (o GetvirtualnetworkRetrieveResultOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetvirtualnetworkRetrieveResult) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

func (o GetvirtualnetworkRetrieveResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v GetvirtualnetworkRetrieveResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// name of the object to be used in moc
func (o GetvirtualnetworkRetrieveResultOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetvirtualnetworkRetrieveResult) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// VirtualNetworkStatus defines the observed state of VirtualNetwork
func (o GetvirtualnetworkRetrieveResultOutput) Status() VirtualNetworkStatusResponseOutput {
	return o.ApplyT(func(v GetvirtualnetworkRetrieveResult) VirtualNetworkStatusResponse { return v.Status }).(VirtualNetworkStatusResponseOutput)
}

// Subnet - list of subnets under the virtual network
func (o GetvirtualnetworkRetrieveResultOutput) Subnets() VirtualnetworksPropertiesResponseSubnetsArrayOutput {
	return o.ApplyT(func(v GetvirtualnetworkRetrieveResult) []VirtualnetworksPropertiesResponseSubnets { return v.Subnets }).(VirtualnetworksPropertiesResponseSubnetsArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o GetvirtualnetworkRetrieveResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v GetvirtualnetworkRetrieveResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o GetvirtualnetworkRetrieveResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetvirtualnetworkRetrieveResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o GetvirtualnetworkRetrieveResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetvirtualnetworkRetrieveResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetvirtualnetworkRetrieveResultOutput{})
}
