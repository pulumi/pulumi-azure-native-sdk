// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210701preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The virtualmachines resource definition.
type VirtualmachineRetrieve struct {
	pulumi.CustomResourceState

	// The extendedLocation of the resource.
	ExtendedLocation ExtendedLocationResponsePtrOutput `pulumi:"extendedLocation"`
	// HardwareProfile - Specifies the hardware settings for the virtual machine.
	HardwareProfile VirtualmachinesPropertiesResponseHardwareProfilePtrOutput `pulumi:"hardwareProfile"`
	// The geo-location where the resource lives
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// NetworkProfile - describes the network configuration the virtual machine
	NetworkProfile VirtualmachinesPropertiesResponseNetworkProfilePtrOutput `pulumi:"networkProfile"`
	// OsProfile - describes the configuration of the operating system and sets login data
	OsProfile         VirtualmachinesPropertiesResponseOsProfilePtrOutput `pulumi:"osProfile"`
	ProvisioningState pulumi.StringOutput                                 `pulumi:"provisioningState"`
	// name of the object to be used in moc
	ResourceName pulumi.StringPtrOutput `pulumi:"resourceName"`
	// SecurityProfile - Specifies the security settings for the virtual machine.
	SecurityProfile VirtualmachinesPropertiesResponseSecurityProfilePtrOutput `pulumi:"securityProfile"`
	// VirtualMachineStatus defines the observed state of VirtualMachine
	Status VirtualMachineStatusResponseOutput `pulumi:"status"`
	// StorageProfile - contains information about the disks and storage information for the virtual machine
	StorageProfile VirtualmachinesPropertiesResponseStorageProfilePtrOutput `pulumi:"storageProfile"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewVirtualmachineRetrieve registers a new resource with the given unique name, arguments, and options.
func NewVirtualmachineRetrieve(ctx *pulumi.Context,
	name string, args *VirtualmachineRetrieveArgs, opts ...pulumi.ResourceOption) (*VirtualmachineRetrieve, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:azurestackhci/v20210901preview:virtualmachineRetrieve"),
		},
	})
	opts = append(opts, aliases)
	var resource VirtualmachineRetrieve
	err := ctx.RegisterResource("azure-native:azurestackhci/v20210701preview:virtualmachineRetrieve", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualmachineRetrieve gets an existing VirtualmachineRetrieve resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualmachineRetrieve(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualmachineRetrieveState, opts ...pulumi.ResourceOption) (*VirtualmachineRetrieve, error) {
	var resource VirtualmachineRetrieve
	err := ctx.ReadResource("azure-native:azurestackhci/v20210701preview:virtualmachineRetrieve", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualmachineRetrieve resources.
type virtualmachineRetrieveState struct {
}

type VirtualmachineRetrieveState struct {
}

func (VirtualmachineRetrieveState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualmachineRetrieveState)(nil)).Elem()
}

type virtualmachineRetrieveArgs struct {
	// The extendedLocation of the resource.
	ExtendedLocation *ExtendedLocation `pulumi:"extendedLocation"`
	// HardwareProfile - Specifies the hardware settings for the virtual machine.
	HardwareProfile *VirtualmachinesPropertiesHardwareProfile `pulumi:"hardwareProfile"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// NetworkProfile - describes the network configuration the virtual machine
	NetworkProfile *VirtualmachinesPropertiesNetworkProfile `pulumi:"networkProfile"`
	// OsProfile - describes the configuration of the operating system and sets login data
	OsProfile *VirtualmachinesPropertiesOsProfile `pulumi:"osProfile"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// name of the object to be used in moc
	ResourceName *string `pulumi:"resourceName"`
	// SecurityProfile - Specifies the security settings for the virtual machine.
	SecurityProfile *VirtualmachinesPropertiesSecurityProfile `pulumi:"securityProfile"`
	// StorageProfile - contains information about the disks and storage information for the virtual machine
	StorageProfile *VirtualmachinesPropertiesStorageProfile `pulumi:"storageProfile"`
	// Resource tags.
	Tags                map[string]string `pulumi:"tags"`
	VirtualmachinesName *string           `pulumi:"virtualmachinesName"`
}

// The set of arguments for constructing a VirtualmachineRetrieve resource.
type VirtualmachineRetrieveArgs struct {
	// The extendedLocation of the resource.
	ExtendedLocation ExtendedLocationPtrInput
	// HardwareProfile - Specifies the hardware settings for the virtual machine.
	HardwareProfile VirtualmachinesPropertiesHardwareProfilePtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// NetworkProfile - describes the network configuration the virtual machine
	NetworkProfile VirtualmachinesPropertiesNetworkProfilePtrInput
	// OsProfile - describes the configuration of the operating system and sets login data
	OsProfile VirtualmachinesPropertiesOsProfilePtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// name of the object to be used in moc
	ResourceName pulumi.StringPtrInput
	// SecurityProfile - Specifies the security settings for the virtual machine.
	SecurityProfile VirtualmachinesPropertiesSecurityProfilePtrInput
	// StorageProfile - contains information about the disks and storage information for the virtual machine
	StorageProfile VirtualmachinesPropertiesStorageProfilePtrInput
	// Resource tags.
	Tags                pulumi.StringMapInput
	VirtualmachinesName pulumi.StringPtrInput
}

func (VirtualmachineRetrieveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualmachineRetrieveArgs)(nil)).Elem()
}

type VirtualmachineRetrieveInput interface {
	pulumi.Input

	ToVirtualmachineRetrieveOutput() VirtualmachineRetrieveOutput
	ToVirtualmachineRetrieveOutputWithContext(ctx context.Context) VirtualmachineRetrieveOutput
}

func (*VirtualmachineRetrieve) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualmachineRetrieve)(nil)).Elem()
}

func (i *VirtualmachineRetrieve) ToVirtualmachineRetrieveOutput() VirtualmachineRetrieveOutput {
	return i.ToVirtualmachineRetrieveOutputWithContext(context.Background())
}

func (i *VirtualmachineRetrieve) ToVirtualmachineRetrieveOutputWithContext(ctx context.Context) VirtualmachineRetrieveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualmachineRetrieveOutput)
}

type VirtualmachineRetrieveOutput struct{ *pulumi.OutputState }

func (VirtualmachineRetrieveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualmachineRetrieve)(nil)).Elem()
}

func (o VirtualmachineRetrieveOutput) ToVirtualmachineRetrieveOutput() VirtualmachineRetrieveOutput {
	return o
}

func (o VirtualmachineRetrieveOutput) ToVirtualmachineRetrieveOutputWithContext(ctx context.Context) VirtualmachineRetrieveOutput {
	return o
}

// The extendedLocation of the resource.
func (o VirtualmachineRetrieveOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualmachineRetrieve) ExtendedLocationResponsePtrOutput { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// HardwareProfile - Specifies the hardware settings for the virtual machine.
func (o VirtualmachineRetrieveOutput) HardwareProfile() VirtualmachinesPropertiesResponseHardwareProfilePtrOutput {
	return o.ApplyT(func(v *VirtualmachineRetrieve) VirtualmachinesPropertiesResponseHardwareProfilePtrOutput {
		return v.HardwareProfile
	}).(VirtualmachinesPropertiesResponseHardwareProfilePtrOutput)
}

// The geo-location where the resource lives
func (o VirtualmachineRetrieveOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualmachineRetrieve) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o VirtualmachineRetrieveOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualmachineRetrieve) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// NetworkProfile - describes the network configuration the virtual machine
func (o VirtualmachineRetrieveOutput) NetworkProfile() VirtualmachinesPropertiesResponseNetworkProfilePtrOutput {
	return o.ApplyT(func(v *VirtualmachineRetrieve) VirtualmachinesPropertiesResponseNetworkProfilePtrOutput {
		return v.NetworkProfile
	}).(VirtualmachinesPropertiesResponseNetworkProfilePtrOutput)
}

// OsProfile - describes the configuration of the operating system and sets login data
func (o VirtualmachineRetrieveOutput) OsProfile() VirtualmachinesPropertiesResponseOsProfilePtrOutput {
	return o.ApplyT(func(v *VirtualmachineRetrieve) VirtualmachinesPropertiesResponseOsProfilePtrOutput {
		return v.OsProfile
	}).(VirtualmachinesPropertiesResponseOsProfilePtrOutput)
}

func (o VirtualmachineRetrieveOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualmachineRetrieve) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// name of the object to be used in moc
func (o VirtualmachineRetrieveOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualmachineRetrieve) pulumi.StringPtrOutput { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// SecurityProfile - Specifies the security settings for the virtual machine.
func (o VirtualmachineRetrieveOutput) SecurityProfile() VirtualmachinesPropertiesResponseSecurityProfilePtrOutput {
	return o.ApplyT(func(v *VirtualmachineRetrieve) VirtualmachinesPropertiesResponseSecurityProfilePtrOutput {
		return v.SecurityProfile
	}).(VirtualmachinesPropertiesResponseSecurityProfilePtrOutput)
}

// VirtualMachineStatus defines the observed state of VirtualMachine
func (o VirtualmachineRetrieveOutput) Status() VirtualMachineStatusResponseOutput {
	return o.ApplyT(func(v *VirtualmachineRetrieve) VirtualMachineStatusResponseOutput { return v.Status }).(VirtualMachineStatusResponseOutput)
}

// StorageProfile - contains information about the disks and storage information for the virtual machine
func (o VirtualmachineRetrieveOutput) StorageProfile() VirtualmachinesPropertiesResponseStorageProfilePtrOutput {
	return o.ApplyT(func(v *VirtualmachineRetrieve) VirtualmachinesPropertiesResponseStorageProfilePtrOutput {
		return v.StorageProfile
	}).(VirtualmachinesPropertiesResponseStorageProfilePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o VirtualmachineRetrieveOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *VirtualmachineRetrieve) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o VirtualmachineRetrieveOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualmachineRetrieve) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o VirtualmachineRetrieveOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualmachineRetrieve) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(VirtualmachineRetrieveOutput{})
}
