// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240215preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// The AdapterPropertyOverrides of a cluster.
type AdapterPropertyOverrides struct {
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	JumboPacket *string `pulumi:"jumboPacket"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	NetworkDirect *string `pulumi:"networkDirect"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'
	NetworkDirectTechnology *string `pulumi:"networkDirectTechnology"`
}

// AdapterPropertyOverridesInput is an input type that accepts AdapterPropertyOverridesArgs and AdapterPropertyOverridesOutput values.
// You can construct a concrete instance of `AdapterPropertyOverridesInput` via:
//
//	AdapterPropertyOverridesArgs{...}
type AdapterPropertyOverridesInput interface {
	pulumi.Input

	ToAdapterPropertyOverridesOutput() AdapterPropertyOverridesOutput
	ToAdapterPropertyOverridesOutputWithContext(context.Context) AdapterPropertyOverridesOutput
}

// The AdapterPropertyOverrides of a cluster.
type AdapterPropertyOverridesArgs struct {
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	JumboPacket pulumi.StringPtrInput `pulumi:"jumboPacket"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	NetworkDirect pulumi.StringPtrInput `pulumi:"networkDirect"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'
	NetworkDirectTechnology pulumi.StringPtrInput `pulumi:"networkDirectTechnology"`
}

func (AdapterPropertyOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdapterPropertyOverrides)(nil)).Elem()
}

func (i AdapterPropertyOverridesArgs) ToAdapterPropertyOverridesOutput() AdapterPropertyOverridesOutput {
	return i.ToAdapterPropertyOverridesOutputWithContext(context.Background())
}

func (i AdapterPropertyOverridesArgs) ToAdapterPropertyOverridesOutputWithContext(ctx context.Context) AdapterPropertyOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdapterPropertyOverridesOutput)
}

func (i AdapterPropertyOverridesArgs) ToAdapterPropertyOverridesPtrOutput() AdapterPropertyOverridesPtrOutput {
	return i.ToAdapterPropertyOverridesPtrOutputWithContext(context.Background())
}

func (i AdapterPropertyOverridesArgs) ToAdapterPropertyOverridesPtrOutputWithContext(ctx context.Context) AdapterPropertyOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdapterPropertyOverridesOutput).ToAdapterPropertyOverridesPtrOutputWithContext(ctx)
}

// AdapterPropertyOverridesPtrInput is an input type that accepts AdapterPropertyOverridesArgs, AdapterPropertyOverridesPtr and AdapterPropertyOverridesPtrOutput values.
// You can construct a concrete instance of `AdapterPropertyOverridesPtrInput` via:
//
//	        AdapterPropertyOverridesArgs{...}
//
//	or:
//
//	        nil
type AdapterPropertyOverridesPtrInput interface {
	pulumi.Input

	ToAdapterPropertyOverridesPtrOutput() AdapterPropertyOverridesPtrOutput
	ToAdapterPropertyOverridesPtrOutputWithContext(context.Context) AdapterPropertyOverridesPtrOutput
}

type adapterPropertyOverridesPtrType AdapterPropertyOverridesArgs

func AdapterPropertyOverridesPtr(v *AdapterPropertyOverridesArgs) AdapterPropertyOverridesPtrInput {
	return (*adapterPropertyOverridesPtrType)(v)
}

func (*adapterPropertyOverridesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdapterPropertyOverrides)(nil)).Elem()
}

func (i *adapterPropertyOverridesPtrType) ToAdapterPropertyOverridesPtrOutput() AdapterPropertyOverridesPtrOutput {
	return i.ToAdapterPropertyOverridesPtrOutputWithContext(context.Background())
}

func (i *adapterPropertyOverridesPtrType) ToAdapterPropertyOverridesPtrOutputWithContext(ctx context.Context) AdapterPropertyOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdapterPropertyOverridesPtrOutput)
}

// The AdapterPropertyOverrides of a cluster.
type AdapterPropertyOverridesOutput struct{ *pulumi.OutputState }

func (AdapterPropertyOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdapterPropertyOverrides)(nil)).Elem()
}

func (o AdapterPropertyOverridesOutput) ToAdapterPropertyOverridesOutput() AdapterPropertyOverridesOutput {
	return o
}

func (o AdapterPropertyOverridesOutput) ToAdapterPropertyOverridesOutputWithContext(ctx context.Context) AdapterPropertyOverridesOutput {
	return o
}

func (o AdapterPropertyOverridesOutput) ToAdapterPropertyOverridesPtrOutput() AdapterPropertyOverridesPtrOutput {
	return o.ToAdapterPropertyOverridesPtrOutputWithContext(context.Background())
}

func (o AdapterPropertyOverridesOutput) ToAdapterPropertyOverridesPtrOutputWithContext(ctx context.Context) AdapterPropertyOverridesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdapterPropertyOverrides) *AdapterPropertyOverrides {
		return &v
	}).(AdapterPropertyOverridesPtrOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o AdapterPropertyOverridesOutput) JumboPacket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdapterPropertyOverrides) *string { return v.JumboPacket }).(pulumi.StringPtrOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o AdapterPropertyOverridesOutput) NetworkDirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdapterPropertyOverrides) *string { return v.NetworkDirect }).(pulumi.StringPtrOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'
func (o AdapterPropertyOverridesOutput) NetworkDirectTechnology() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdapterPropertyOverrides) *string { return v.NetworkDirectTechnology }).(pulumi.StringPtrOutput)
}

type AdapterPropertyOverridesPtrOutput struct{ *pulumi.OutputState }

func (AdapterPropertyOverridesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdapterPropertyOverrides)(nil)).Elem()
}

func (o AdapterPropertyOverridesPtrOutput) ToAdapterPropertyOverridesPtrOutput() AdapterPropertyOverridesPtrOutput {
	return o
}

func (o AdapterPropertyOverridesPtrOutput) ToAdapterPropertyOverridesPtrOutputWithContext(ctx context.Context) AdapterPropertyOverridesPtrOutput {
	return o
}

func (o AdapterPropertyOverridesPtrOutput) Elem() AdapterPropertyOverridesOutput {
	return o.ApplyT(func(v *AdapterPropertyOverrides) AdapterPropertyOverrides {
		if v != nil {
			return *v
		}
		var ret AdapterPropertyOverrides
		return ret
	}).(AdapterPropertyOverridesOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o AdapterPropertyOverridesPtrOutput) JumboPacket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdapterPropertyOverrides) *string {
		if v == nil {
			return nil
		}
		return v.JumboPacket
	}).(pulumi.StringPtrOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o AdapterPropertyOverridesPtrOutput) NetworkDirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdapterPropertyOverrides) *string {
		if v == nil {
			return nil
		}
		return v.NetworkDirect
	}).(pulumi.StringPtrOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'
func (o AdapterPropertyOverridesPtrOutput) NetworkDirectTechnology() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdapterPropertyOverrides) *string {
		if v == nil {
			return nil
		}
		return v.NetworkDirectTechnology
	}).(pulumi.StringPtrOutput)
}

// The AdapterPropertyOverrides of a cluster.
type AdapterPropertyOverridesResponse struct {
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	JumboPacket string `pulumi:"jumboPacket"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	NetworkDirect string `pulumi:"networkDirect"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'
	NetworkDirectTechnology string `pulumi:"networkDirectTechnology"`
}

// The AdapterPropertyOverrides of a cluster.
type AdapterPropertyOverridesResponseOutput struct{ *pulumi.OutputState }

func (AdapterPropertyOverridesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdapterPropertyOverridesResponse)(nil)).Elem()
}

func (o AdapterPropertyOverridesResponseOutput) ToAdapterPropertyOverridesResponseOutput() AdapterPropertyOverridesResponseOutput {
	return o
}

func (o AdapterPropertyOverridesResponseOutput) ToAdapterPropertyOverridesResponseOutputWithContext(ctx context.Context) AdapterPropertyOverridesResponseOutput {
	return o
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o AdapterPropertyOverridesResponseOutput) JumboPacket() pulumi.StringOutput {
	return o.ApplyT(func(v AdapterPropertyOverridesResponse) string { return v.JumboPacket }).(pulumi.StringOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o AdapterPropertyOverridesResponseOutput) NetworkDirect() pulumi.StringOutput {
	return o.ApplyT(func(v AdapterPropertyOverridesResponse) string { return v.NetworkDirect }).(pulumi.StringOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'
func (o AdapterPropertyOverridesResponseOutput) NetworkDirectTechnology() pulumi.StringOutput {
	return o.ApplyT(func(v AdapterPropertyOverridesResponse) string { return v.NetworkDirectTechnology }).(pulumi.StringOutput)
}

// Connectivity related configuration required by arc server.
type ArcConnectivityProperties struct {
	// True indicates ARC connectivity is enabled
	Enabled *bool `pulumi:"enabled"`
	// Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.
	ServiceConfigurations []ServiceConfiguration `pulumi:"serviceConfigurations"`
}

// ArcConnectivityPropertiesInput is an input type that accepts ArcConnectivityPropertiesArgs and ArcConnectivityPropertiesOutput values.
// You can construct a concrete instance of `ArcConnectivityPropertiesInput` via:
//
//	ArcConnectivityPropertiesArgs{...}
type ArcConnectivityPropertiesInput interface {
	pulumi.Input

	ToArcConnectivityPropertiesOutput() ArcConnectivityPropertiesOutput
	ToArcConnectivityPropertiesOutputWithContext(context.Context) ArcConnectivityPropertiesOutput
}

// Connectivity related configuration required by arc server.
type ArcConnectivityPropertiesArgs struct {
	// True indicates ARC connectivity is enabled
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.
	ServiceConfigurations ServiceConfigurationArrayInput `pulumi:"serviceConfigurations"`
}

func (ArcConnectivityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArcConnectivityProperties)(nil)).Elem()
}

func (i ArcConnectivityPropertiesArgs) ToArcConnectivityPropertiesOutput() ArcConnectivityPropertiesOutput {
	return i.ToArcConnectivityPropertiesOutputWithContext(context.Background())
}

func (i ArcConnectivityPropertiesArgs) ToArcConnectivityPropertiesOutputWithContext(ctx context.Context) ArcConnectivityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArcConnectivityPropertiesOutput)
}

// ArcConnectivityPropertiesArrayInput is an input type that accepts ArcConnectivityPropertiesArray and ArcConnectivityPropertiesArrayOutput values.
// You can construct a concrete instance of `ArcConnectivityPropertiesArrayInput` via:
//
//	ArcConnectivityPropertiesArray{ ArcConnectivityPropertiesArgs{...} }
type ArcConnectivityPropertiesArrayInput interface {
	pulumi.Input

	ToArcConnectivityPropertiesArrayOutput() ArcConnectivityPropertiesArrayOutput
	ToArcConnectivityPropertiesArrayOutputWithContext(context.Context) ArcConnectivityPropertiesArrayOutput
}

type ArcConnectivityPropertiesArray []ArcConnectivityPropertiesInput

func (ArcConnectivityPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArcConnectivityProperties)(nil)).Elem()
}

func (i ArcConnectivityPropertiesArray) ToArcConnectivityPropertiesArrayOutput() ArcConnectivityPropertiesArrayOutput {
	return i.ToArcConnectivityPropertiesArrayOutputWithContext(context.Background())
}

func (i ArcConnectivityPropertiesArray) ToArcConnectivityPropertiesArrayOutputWithContext(ctx context.Context) ArcConnectivityPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArcConnectivityPropertiesArrayOutput)
}

// Connectivity related configuration required by arc server.
type ArcConnectivityPropertiesOutput struct{ *pulumi.OutputState }

func (ArcConnectivityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArcConnectivityProperties)(nil)).Elem()
}

func (o ArcConnectivityPropertiesOutput) ToArcConnectivityPropertiesOutput() ArcConnectivityPropertiesOutput {
	return o
}

func (o ArcConnectivityPropertiesOutput) ToArcConnectivityPropertiesOutputWithContext(ctx context.Context) ArcConnectivityPropertiesOutput {
	return o
}

// True indicates ARC connectivity is enabled
func (o ArcConnectivityPropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ArcConnectivityProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.
func (o ArcConnectivityPropertiesOutput) ServiceConfigurations() ServiceConfigurationArrayOutput {
	return o.ApplyT(func(v ArcConnectivityProperties) []ServiceConfiguration { return v.ServiceConfigurations }).(ServiceConfigurationArrayOutput)
}

type ArcConnectivityPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ArcConnectivityPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArcConnectivityProperties)(nil)).Elem()
}

func (o ArcConnectivityPropertiesArrayOutput) ToArcConnectivityPropertiesArrayOutput() ArcConnectivityPropertiesArrayOutput {
	return o
}

func (o ArcConnectivityPropertiesArrayOutput) ToArcConnectivityPropertiesArrayOutputWithContext(ctx context.Context) ArcConnectivityPropertiesArrayOutput {
	return o
}

func (o ArcConnectivityPropertiesArrayOutput) Index(i pulumi.IntInput) ArcConnectivityPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArcConnectivityProperties {
		return vs[0].([]ArcConnectivityProperties)[vs[1].(int)]
	}).(ArcConnectivityPropertiesOutput)
}

// Connectivity related configuration required by arc server.
type ArcConnectivityPropertiesResponse struct {
	// True indicates ARC connectivity is enabled
	Enabled *bool `pulumi:"enabled"`
	// Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.
	ServiceConfigurations []ServiceConfigurationResponse `pulumi:"serviceConfigurations"`
}

// Connectivity related configuration required by arc server.
type ArcConnectivityPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ArcConnectivityPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArcConnectivityPropertiesResponse)(nil)).Elem()
}

func (o ArcConnectivityPropertiesResponseOutput) ToArcConnectivityPropertiesResponseOutput() ArcConnectivityPropertiesResponseOutput {
	return o
}

func (o ArcConnectivityPropertiesResponseOutput) ToArcConnectivityPropertiesResponseOutputWithContext(ctx context.Context) ArcConnectivityPropertiesResponseOutput {
	return o
}

// True indicates ARC connectivity is enabled
func (o ArcConnectivityPropertiesResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ArcConnectivityPropertiesResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.
func (o ArcConnectivityPropertiesResponseOutput) ServiceConfigurations() ServiceConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ArcConnectivityPropertiesResponse) []ServiceConfigurationResponse {
		return v.ServiceConfigurations
	}).(ServiceConfigurationResponseArrayOutput)
}

type ArcConnectivityPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (ArcConnectivityPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ArcConnectivityPropertiesResponse)(nil)).Elem()
}

func (o ArcConnectivityPropertiesResponseArrayOutput) ToArcConnectivityPropertiesResponseArrayOutput() ArcConnectivityPropertiesResponseArrayOutput {
	return o
}

func (o ArcConnectivityPropertiesResponseArrayOutput) ToArcConnectivityPropertiesResponseArrayOutputWithContext(ctx context.Context) ArcConnectivityPropertiesResponseArrayOutput {
	return o
}

func (o ArcConnectivityPropertiesResponseArrayOutput) Index(i pulumi.IntInput) ArcConnectivityPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ArcConnectivityPropertiesResponse {
		return vs[0].([]ArcConnectivityPropertiesResponse)[vs[1].(int)]
	}).(ArcConnectivityPropertiesResponseOutput)
}

// Desired properties of the cluster.
type ClusterDesiredProperties struct {
	// Desired level of diagnostic data emitted by the cluster.
	DiagnosticLevel *string `pulumi:"diagnosticLevel"`
	// Desired state of Windows Server Subscription.
	WindowsServerSubscription *string `pulumi:"windowsServerSubscription"`
}

// ClusterDesiredPropertiesInput is an input type that accepts ClusterDesiredPropertiesArgs and ClusterDesiredPropertiesOutput values.
// You can construct a concrete instance of `ClusterDesiredPropertiesInput` via:
//
//	ClusterDesiredPropertiesArgs{...}
type ClusterDesiredPropertiesInput interface {
	pulumi.Input

	ToClusterDesiredPropertiesOutput() ClusterDesiredPropertiesOutput
	ToClusterDesiredPropertiesOutputWithContext(context.Context) ClusterDesiredPropertiesOutput
}

// Desired properties of the cluster.
type ClusterDesiredPropertiesArgs struct {
	// Desired level of diagnostic data emitted by the cluster.
	DiagnosticLevel pulumi.StringPtrInput `pulumi:"diagnosticLevel"`
	// Desired state of Windows Server Subscription.
	WindowsServerSubscription pulumi.StringPtrInput `pulumi:"windowsServerSubscription"`
}

func (ClusterDesiredPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDesiredProperties)(nil)).Elem()
}

func (i ClusterDesiredPropertiesArgs) ToClusterDesiredPropertiesOutput() ClusterDesiredPropertiesOutput {
	return i.ToClusterDesiredPropertiesOutputWithContext(context.Background())
}

func (i ClusterDesiredPropertiesArgs) ToClusterDesiredPropertiesOutputWithContext(ctx context.Context) ClusterDesiredPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDesiredPropertiesOutput)
}

func (i ClusterDesiredPropertiesArgs) ToClusterDesiredPropertiesPtrOutput() ClusterDesiredPropertiesPtrOutput {
	return i.ToClusterDesiredPropertiesPtrOutputWithContext(context.Background())
}

func (i ClusterDesiredPropertiesArgs) ToClusterDesiredPropertiesPtrOutputWithContext(ctx context.Context) ClusterDesiredPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDesiredPropertiesOutput).ToClusterDesiredPropertiesPtrOutputWithContext(ctx)
}

// ClusterDesiredPropertiesPtrInput is an input type that accepts ClusterDesiredPropertiesArgs, ClusterDesiredPropertiesPtr and ClusterDesiredPropertiesPtrOutput values.
// You can construct a concrete instance of `ClusterDesiredPropertiesPtrInput` via:
//
//	        ClusterDesiredPropertiesArgs{...}
//
//	or:
//
//	        nil
type ClusterDesiredPropertiesPtrInput interface {
	pulumi.Input

	ToClusterDesiredPropertiesPtrOutput() ClusterDesiredPropertiesPtrOutput
	ToClusterDesiredPropertiesPtrOutputWithContext(context.Context) ClusterDesiredPropertiesPtrOutput
}

type clusterDesiredPropertiesPtrType ClusterDesiredPropertiesArgs

func ClusterDesiredPropertiesPtr(v *ClusterDesiredPropertiesArgs) ClusterDesiredPropertiesPtrInput {
	return (*clusterDesiredPropertiesPtrType)(v)
}

func (*clusterDesiredPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDesiredProperties)(nil)).Elem()
}

func (i *clusterDesiredPropertiesPtrType) ToClusterDesiredPropertiesPtrOutput() ClusterDesiredPropertiesPtrOutput {
	return i.ToClusterDesiredPropertiesPtrOutputWithContext(context.Background())
}

func (i *clusterDesiredPropertiesPtrType) ToClusterDesiredPropertiesPtrOutputWithContext(ctx context.Context) ClusterDesiredPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDesiredPropertiesPtrOutput)
}

// Desired properties of the cluster.
type ClusterDesiredPropertiesOutput struct{ *pulumi.OutputState }

func (ClusterDesiredPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDesiredProperties)(nil)).Elem()
}

func (o ClusterDesiredPropertiesOutput) ToClusterDesiredPropertiesOutput() ClusterDesiredPropertiesOutput {
	return o
}

func (o ClusterDesiredPropertiesOutput) ToClusterDesiredPropertiesOutputWithContext(ctx context.Context) ClusterDesiredPropertiesOutput {
	return o
}

func (o ClusterDesiredPropertiesOutput) ToClusterDesiredPropertiesPtrOutput() ClusterDesiredPropertiesPtrOutput {
	return o.ToClusterDesiredPropertiesPtrOutputWithContext(context.Background())
}

func (o ClusterDesiredPropertiesOutput) ToClusterDesiredPropertiesPtrOutputWithContext(ctx context.Context) ClusterDesiredPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterDesiredProperties) *ClusterDesiredProperties {
		return &v
	}).(ClusterDesiredPropertiesPtrOutput)
}

// Desired level of diagnostic data emitted by the cluster.
func (o ClusterDesiredPropertiesOutput) DiagnosticLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDesiredProperties) *string { return v.DiagnosticLevel }).(pulumi.StringPtrOutput)
}

// Desired state of Windows Server Subscription.
func (o ClusterDesiredPropertiesOutput) WindowsServerSubscription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDesiredProperties) *string { return v.WindowsServerSubscription }).(pulumi.StringPtrOutput)
}

type ClusterDesiredPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ClusterDesiredPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDesiredProperties)(nil)).Elem()
}

func (o ClusterDesiredPropertiesPtrOutput) ToClusterDesiredPropertiesPtrOutput() ClusterDesiredPropertiesPtrOutput {
	return o
}

func (o ClusterDesiredPropertiesPtrOutput) ToClusterDesiredPropertiesPtrOutputWithContext(ctx context.Context) ClusterDesiredPropertiesPtrOutput {
	return o
}

func (o ClusterDesiredPropertiesPtrOutput) Elem() ClusterDesiredPropertiesOutput {
	return o.ApplyT(func(v *ClusterDesiredProperties) ClusterDesiredProperties {
		if v != nil {
			return *v
		}
		var ret ClusterDesiredProperties
		return ret
	}).(ClusterDesiredPropertiesOutput)
}

// Desired level of diagnostic data emitted by the cluster.
func (o ClusterDesiredPropertiesPtrOutput) DiagnosticLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDesiredProperties) *string {
		if v == nil {
			return nil
		}
		return v.DiagnosticLevel
	}).(pulumi.StringPtrOutput)
}

// Desired state of Windows Server Subscription.
func (o ClusterDesiredPropertiesPtrOutput) WindowsServerSubscription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDesiredProperties) *string {
		if v == nil {
			return nil
		}
		return v.WindowsServerSubscription
	}).(pulumi.StringPtrOutput)
}

// Desired properties of the cluster.
type ClusterDesiredPropertiesResponse struct {
	// Desired level of diagnostic data emitted by the cluster.
	DiagnosticLevel *string `pulumi:"diagnosticLevel"`
	// Desired state of Windows Server Subscription.
	WindowsServerSubscription *string `pulumi:"windowsServerSubscription"`
}

// Desired properties of the cluster.
type ClusterDesiredPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ClusterDesiredPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDesiredPropertiesResponse)(nil)).Elem()
}

func (o ClusterDesiredPropertiesResponseOutput) ToClusterDesiredPropertiesResponseOutput() ClusterDesiredPropertiesResponseOutput {
	return o
}

func (o ClusterDesiredPropertiesResponseOutput) ToClusterDesiredPropertiesResponseOutputWithContext(ctx context.Context) ClusterDesiredPropertiesResponseOutput {
	return o
}

// Desired level of diagnostic data emitted by the cluster.
func (o ClusterDesiredPropertiesResponseOutput) DiagnosticLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDesiredPropertiesResponse) *string { return v.DiagnosticLevel }).(pulumi.StringPtrOutput)
}

// Desired state of Windows Server Subscription.
func (o ClusterDesiredPropertiesResponseOutput) WindowsServerSubscription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDesiredPropertiesResponse) *string { return v.WindowsServerSubscription }).(pulumi.StringPtrOutput)
}

type ClusterDesiredPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ClusterDesiredPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDesiredPropertiesResponse)(nil)).Elem()
}

func (o ClusterDesiredPropertiesResponsePtrOutput) ToClusterDesiredPropertiesResponsePtrOutput() ClusterDesiredPropertiesResponsePtrOutput {
	return o
}

func (o ClusterDesiredPropertiesResponsePtrOutput) ToClusterDesiredPropertiesResponsePtrOutputWithContext(ctx context.Context) ClusterDesiredPropertiesResponsePtrOutput {
	return o
}

func (o ClusterDesiredPropertiesResponsePtrOutput) Elem() ClusterDesiredPropertiesResponseOutput {
	return o.ApplyT(func(v *ClusterDesiredPropertiesResponse) ClusterDesiredPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ClusterDesiredPropertiesResponse
		return ret
	}).(ClusterDesiredPropertiesResponseOutput)
}

// Desired level of diagnostic data emitted by the cluster.
func (o ClusterDesiredPropertiesResponsePtrOutput) DiagnosticLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDesiredPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiagnosticLevel
	}).(pulumi.StringPtrOutput)
}

// Desired state of Windows Server Subscription.
func (o ClusterDesiredPropertiesResponsePtrOutput) WindowsServerSubscription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDesiredPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WindowsServerSubscription
	}).(pulumi.StringPtrOutput)
}

// Cluster node details.
type ClusterNodeResponse struct {
	// Number of physical cores on the cluster node.
	CoreCount float64 `pulumi:"coreCount"`
	// Edge Hardware Center Resource Id
	EhcResourceId string `pulumi:"ehcResourceId"`
	// Id of the node in the cluster.
	Id float64 `pulumi:"id"`
	// Most recent licensing timestamp.
	LastLicensingTimestamp string `pulumi:"lastLicensingTimestamp"`
	// Manufacturer of the cluster node hardware.
	Manufacturer string `pulumi:"manufacturer"`
	// Total available memory on the cluster node (in GiB).
	MemoryInGiB float64 `pulumi:"memoryInGiB"`
	// Model name of the cluster node hardware.
	Model string `pulumi:"model"`
	// Name of the cluster node.
	Name string `pulumi:"name"`
	// Type of the cluster node hardware.
	NodeType string `pulumi:"nodeType"`
	// OEM activation status of the node.
	OemActivation string `pulumi:"oemActivation"`
	// Display version of the operating system running on the cluster node.
	OsDisplayVersion string `pulumi:"osDisplayVersion"`
	// Operating system running on the cluster node.
	OsName string `pulumi:"osName"`
	// Version of the operating system running on the cluster node.
	OsVersion string `pulumi:"osVersion"`
	// Immutable id of the cluster node.
	SerialNumber string `pulumi:"serialNumber"`
	// State of Windows Server Subscription.
	WindowsServerSubscription string `pulumi:"windowsServerSubscription"`
}

// Cluster node details.
type ClusterNodeResponseOutput struct{ *pulumi.OutputState }

func (ClusterNodeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeResponse)(nil)).Elem()
}

func (o ClusterNodeResponseOutput) ToClusterNodeResponseOutput() ClusterNodeResponseOutput {
	return o
}

func (o ClusterNodeResponseOutput) ToClusterNodeResponseOutputWithContext(ctx context.Context) ClusterNodeResponseOutput {
	return o
}

// Number of physical cores on the cluster node.
func (o ClusterNodeResponseOutput) CoreCount() pulumi.Float64Output {
	return o.ApplyT(func(v ClusterNodeResponse) float64 { return v.CoreCount }).(pulumi.Float64Output)
}

// Edge Hardware Center Resource Id
func (o ClusterNodeResponseOutput) EhcResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeResponse) string { return v.EhcResourceId }).(pulumi.StringOutput)
}

// Id of the node in the cluster.
func (o ClusterNodeResponseOutput) Id() pulumi.Float64Output {
	return o.ApplyT(func(v ClusterNodeResponse) float64 { return v.Id }).(pulumi.Float64Output)
}

// Most recent licensing timestamp.
func (o ClusterNodeResponseOutput) LastLicensingTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeResponse) string { return v.LastLicensingTimestamp }).(pulumi.StringOutput)
}

// Manufacturer of the cluster node hardware.
func (o ClusterNodeResponseOutput) Manufacturer() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeResponse) string { return v.Manufacturer }).(pulumi.StringOutput)
}

// Total available memory on the cluster node (in GiB).
func (o ClusterNodeResponseOutput) MemoryInGiB() pulumi.Float64Output {
	return o.ApplyT(func(v ClusterNodeResponse) float64 { return v.MemoryInGiB }).(pulumi.Float64Output)
}

// Model name of the cluster node hardware.
func (o ClusterNodeResponseOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeResponse) string { return v.Model }).(pulumi.StringOutput)
}

// Name of the cluster node.
func (o ClusterNodeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the cluster node hardware.
func (o ClusterNodeResponseOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeResponse) string { return v.NodeType }).(pulumi.StringOutput)
}

// OEM activation status of the node.
func (o ClusterNodeResponseOutput) OemActivation() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeResponse) string { return v.OemActivation }).(pulumi.StringOutput)
}

// Display version of the operating system running on the cluster node.
func (o ClusterNodeResponseOutput) OsDisplayVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeResponse) string { return v.OsDisplayVersion }).(pulumi.StringOutput)
}

// Operating system running on the cluster node.
func (o ClusterNodeResponseOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeResponse) string { return v.OsName }).(pulumi.StringOutput)
}

// Version of the operating system running on the cluster node.
func (o ClusterNodeResponseOutput) OsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeResponse) string { return v.OsVersion }).(pulumi.StringOutput)
}

// Immutable id of the cluster node.
func (o ClusterNodeResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// State of Windows Server Subscription.
func (o ClusterNodeResponseOutput) WindowsServerSubscription() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeResponse) string { return v.WindowsServerSubscription }).(pulumi.StringOutput)
}

type ClusterNodeResponseArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeResponse)(nil)).Elem()
}

func (o ClusterNodeResponseArrayOutput) ToClusterNodeResponseArrayOutput() ClusterNodeResponseArrayOutput {
	return o
}

func (o ClusterNodeResponseArrayOutput) ToClusterNodeResponseArrayOutputWithContext(ctx context.Context) ClusterNodeResponseArrayOutput {
	return o
}

func (o ClusterNodeResponseArrayOutput) Index(i pulumi.IntInput) ClusterNodeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeResponse {
		return vs[0].([]ClusterNodeResponse)[vs[1].(int)]
	}).(ClusterNodeResponseOutput)
}

// Properties reported by cluster agent.
type ClusterReportedPropertiesResponse struct {
	// Unique id generated by the on-prem cluster.
	ClusterId string `pulumi:"clusterId"`
	// Name of the on-prem cluster connected to this resource.
	ClusterName string `pulumi:"clusterName"`
	// The node type of all the nodes of the cluster.
	ClusterType string `pulumi:"clusterType"`
	// Version of the cluster software.
	ClusterVersion string `pulumi:"clusterVersion"`
	// Level of diagnostic data emitted by the cluster.
	DiagnosticLevel *string `pulumi:"diagnosticLevel"`
	// IMDS attestation status of the cluster.
	ImdsAttestation string `pulumi:"imdsAttestation"`
	// Last time the cluster reported the data.
	LastUpdated string `pulumi:"lastUpdated"`
	// The manufacturer of all the nodes of the cluster.
	Manufacturer string `pulumi:"manufacturer"`
	// List of nodes reported by the cluster.
	Nodes []ClusterNodeResponse `pulumi:"nodes"`
	// OEM activation status of the cluster.
	OemActivation string `pulumi:"oemActivation"`
	// Capabilities supported by the cluster.
	SupportedCapabilities []string `pulumi:"supportedCapabilities"`
}

// Properties reported by cluster agent.
type ClusterReportedPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ClusterReportedPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReportedPropertiesResponse)(nil)).Elem()
}

func (o ClusterReportedPropertiesResponseOutput) ToClusterReportedPropertiesResponseOutput() ClusterReportedPropertiesResponseOutput {
	return o
}

func (o ClusterReportedPropertiesResponseOutput) ToClusterReportedPropertiesResponseOutputWithContext(ctx context.Context) ClusterReportedPropertiesResponseOutput {
	return o
}

// Unique id generated by the on-prem cluster.
func (o ClusterReportedPropertiesResponseOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReportedPropertiesResponse) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Name of the on-prem cluster connected to this resource.
func (o ClusterReportedPropertiesResponseOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReportedPropertiesResponse) string { return v.ClusterName }).(pulumi.StringOutput)
}

// The node type of all the nodes of the cluster.
func (o ClusterReportedPropertiesResponseOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReportedPropertiesResponse) string { return v.ClusterType }).(pulumi.StringOutput)
}

// Version of the cluster software.
func (o ClusterReportedPropertiesResponseOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReportedPropertiesResponse) string { return v.ClusterVersion }).(pulumi.StringOutput)
}

// Level of diagnostic data emitted by the cluster.
func (o ClusterReportedPropertiesResponseOutput) DiagnosticLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterReportedPropertiesResponse) *string { return v.DiagnosticLevel }).(pulumi.StringPtrOutput)
}

// IMDS attestation status of the cluster.
func (o ClusterReportedPropertiesResponseOutput) ImdsAttestation() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReportedPropertiesResponse) string { return v.ImdsAttestation }).(pulumi.StringOutput)
}

// Last time the cluster reported the data.
func (o ClusterReportedPropertiesResponseOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReportedPropertiesResponse) string { return v.LastUpdated }).(pulumi.StringOutput)
}

// The manufacturer of all the nodes of the cluster.
func (o ClusterReportedPropertiesResponseOutput) Manufacturer() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReportedPropertiesResponse) string { return v.Manufacturer }).(pulumi.StringOutput)
}

// List of nodes reported by the cluster.
func (o ClusterReportedPropertiesResponseOutput) Nodes() ClusterNodeResponseArrayOutput {
	return o.ApplyT(func(v ClusterReportedPropertiesResponse) []ClusterNodeResponse { return v.Nodes }).(ClusterNodeResponseArrayOutput)
}

// OEM activation status of the cluster.
func (o ClusterReportedPropertiesResponseOutput) OemActivation() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReportedPropertiesResponse) string { return v.OemActivation }).(pulumi.StringOutput)
}

// Capabilities supported by the cluster.
func (o ClusterReportedPropertiesResponseOutput) SupportedCapabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterReportedPropertiesResponse) []string { return v.SupportedCapabilities }).(pulumi.StringArrayOutput)
}

// Properties for a particular default extension category.
type DefaultExtensionDetailsResponse struct {
	// Default extension category
	Category string `pulumi:"category"`
	// Consent time for extension category
	ConsentTime string `pulumi:"consentTime"`
}

// Properties for a particular default extension category.
type DefaultExtensionDetailsResponseOutput struct{ *pulumi.OutputState }

func (DefaultExtensionDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultExtensionDetailsResponse)(nil)).Elem()
}

func (o DefaultExtensionDetailsResponseOutput) ToDefaultExtensionDetailsResponseOutput() DefaultExtensionDetailsResponseOutput {
	return o
}

func (o DefaultExtensionDetailsResponseOutput) ToDefaultExtensionDetailsResponseOutputWithContext(ctx context.Context) DefaultExtensionDetailsResponseOutput {
	return o
}

// Default extension category
func (o DefaultExtensionDetailsResponseOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultExtensionDetailsResponse) string { return v.Category }).(pulumi.StringOutput)
}

// Consent time for extension category
func (o DefaultExtensionDetailsResponseOutput) ConsentTime() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultExtensionDetailsResponse) string { return v.ConsentTime }).(pulumi.StringOutput)
}

type DefaultExtensionDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (DefaultExtensionDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultExtensionDetailsResponse)(nil)).Elem()
}

func (o DefaultExtensionDetailsResponseArrayOutput) ToDefaultExtensionDetailsResponseArrayOutput() DefaultExtensionDetailsResponseArrayOutput {
	return o
}

func (o DefaultExtensionDetailsResponseArrayOutput) ToDefaultExtensionDetailsResponseArrayOutputWithContext(ctx context.Context) DefaultExtensionDetailsResponseArrayOutput {
	return o
}

func (o DefaultExtensionDetailsResponseArrayOutput) Index(i pulumi.IntInput) DefaultExtensionDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultExtensionDetailsResponse {
		return vs[0].([]DefaultExtensionDetailsResponse)[vs[1].(int)]
	}).(DefaultExtensionDetailsResponseOutput)
}

// AzureStackHCI Cluster deployment properties.
type DeploymentCluster struct {
	// For Azure blob service endpoint type, select either Default or Custom domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net.
	AzureServiceEndpoint *string `pulumi:"azureServiceEndpoint"`
	// Specify the Azure Storage account name for cloud witness for your Azure Stack HCI cluster.
	CloudAccountName *string `pulumi:"cloudAccountName"`
	// The cluster name provided when preparing Active Directory.
	Name *string `pulumi:"name"`
	// Specify the fileshare path for the local witness for your Azure Stack HCI cluster.
	WitnessPath *string `pulumi:"witnessPath"`
	// Use a cloud witness if you have internet access and if you use an Azure Storage account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file and then uses it to arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'.
	WitnessType *string `pulumi:"witnessType"`
}

// DeploymentClusterInput is an input type that accepts DeploymentClusterArgs and DeploymentClusterOutput values.
// You can construct a concrete instance of `DeploymentClusterInput` via:
//
//	DeploymentClusterArgs{...}
type DeploymentClusterInput interface {
	pulumi.Input

	ToDeploymentClusterOutput() DeploymentClusterOutput
	ToDeploymentClusterOutputWithContext(context.Context) DeploymentClusterOutput
}

// AzureStackHCI Cluster deployment properties.
type DeploymentClusterArgs struct {
	// For Azure blob service endpoint type, select either Default or Custom domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net.
	AzureServiceEndpoint pulumi.StringPtrInput `pulumi:"azureServiceEndpoint"`
	// Specify the Azure Storage account name for cloud witness for your Azure Stack HCI cluster.
	CloudAccountName pulumi.StringPtrInput `pulumi:"cloudAccountName"`
	// The cluster name provided when preparing Active Directory.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify the fileshare path for the local witness for your Azure Stack HCI cluster.
	WitnessPath pulumi.StringPtrInput `pulumi:"witnessPath"`
	// Use a cloud witness if you have internet access and if you use an Azure Storage account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file and then uses it to arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'.
	WitnessType pulumi.StringPtrInput `pulumi:"witnessType"`
}

func (DeploymentClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentCluster)(nil)).Elem()
}

func (i DeploymentClusterArgs) ToDeploymentClusterOutput() DeploymentClusterOutput {
	return i.ToDeploymentClusterOutputWithContext(context.Background())
}

func (i DeploymentClusterArgs) ToDeploymentClusterOutputWithContext(ctx context.Context) DeploymentClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentClusterOutput)
}

func (i DeploymentClusterArgs) ToDeploymentClusterPtrOutput() DeploymentClusterPtrOutput {
	return i.ToDeploymentClusterPtrOutputWithContext(context.Background())
}

func (i DeploymentClusterArgs) ToDeploymentClusterPtrOutputWithContext(ctx context.Context) DeploymentClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentClusterOutput).ToDeploymentClusterPtrOutputWithContext(ctx)
}

// DeploymentClusterPtrInput is an input type that accepts DeploymentClusterArgs, DeploymentClusterPtr and DeploymentClusterPtrOutput values.
// You can construct a concrete instance of `DeploymentClusterPtrInput` via:
//
//	        DeploymentClusterArgs{...}
//
//	or:
//
//	        nil
type DeploymentClusterPtrInput interface {
	pulumi.Input

	ToDeploymentClusterPtrOutput() DeploymentClusterPtrOutput
	ToDeploymentClusterPtrOutputWithContext(context.Context) DeploymentClusterPtrOutput
}

type deploymentClusterPtrType DeploymentClusterArgs

func DeploymentClusterPtr(v *DeploymentClusterArgs) DeploymentClusterPtrInput {
	return (*deploymentClusterPtrType)(v)
}

func (*deploymentClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentCluster)(nil)).Elem()
}

func (i *deploymentClusterPtrType) ToDeploymentClusterPtrOutput() DeploymentClusterPtrOutput {
	return i.ToDeploymentClusterPtrOutputWithContext(context.Background())
}

func (i *deploymentClusterPtrType) ToDeploymentClusterPtrOutputWithContext(ctx context.Context) DeploymentClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentClusterPtrOutput)
}

// AzureStackHCI Cluster deployment properties.
type DeploymentClusterOutput struct{ *pulumi.OutputState }

func (DeploymentClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentCluster)(nil)).Elem()
}

func (o DeploymentClusterOutput) ToDeploymentClusterOutput() DeploymentClusterOutput {
	return o
}

func (o DeploymentClusterOutput) ToDeploymentClusterOutputWithContext(ctx context.Context) DeploymentClusterOutput {
	return o
}

func (o DeploymentClusterOutput) ToDeploymentClusterPtrOutput() DeploymentClusterPtrOutput {
	return o.ToDeploymentClusterPtrOutputWithContext(context.Background())
}

func (o DeploymentClusterOutput) ToDeploymentClusterPtrOutputWithContext(ctx context.Context) DeploymentClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentCluster) *DeploymentCluster {
		return &v
	}).(DeploymentClusterPtrOutput)
}

// For Azure blob service endpoint type, select either Default or Custom domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net.
func (o DeploymentClusterOutput) AzureServiceEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentCluster) *string { return v.AzureServiceEndpoint }).(pulumi.StringPtrOutput)
}

// Specify the Azure Storage account name for cloud witness for your Azure Stack HCI cluster.
func (o DeploymentClusterOutput) CloudAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentCluster) *string { return v.CloudAccountName }).(pulumi.StringPtrOutput)
}

// The cluster name provided when preparing Active Directory.
func (o DeploymentClusterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentCluster) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify the fileshare path for the local witness for your Azure Stack HCI cluster.
func (o DeploymentClusterOutput) WitnessPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentCluster) *string { return v.WitnessPath }).(pulumi.StringPtrOutput)
}

// Use a cloud witness if you have internet access and if you use an Azure Storage account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file and then uses it to arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'.
func (o DeploymentClusterOutput) WitnessType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentCluster) *string { return v.WitnessType }).(pulumi.StringPtrOutput)
}

type DeploymentClusterPtrOutput struct{ *pulumi.OutputState }

func (DeploymentClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentCluster)(nil)).Elem()
}

func (o DeploymentClusterPtrOutput) ToDeploymentClusterPtrOutput() DeploymentClusterPtrOutput {
	return o
}

func (o DeploymentClusterPtrOutput) ToDeploymentClusterPtrOutputWithContext(ctx context.Context) DeploymentClusterPtrOutput {
	return o
}

func (o DeploymentClusterPtrOutput) Elem() DeploymentClusterOutput {
	return o.ApplyT(func(v *DeploymentCluster) DeploymentCluster {
		if v != nil {
			return *v
		}
		var ret DeploymentCluster
		return ret
	}).(DeploymentClusterOutput)
}

// For Azure blob service endpoint type, select either Default or Custom domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net.
func (o DeploymentClusterPtrOutput) AzureServiceEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentCluster) *string {
		if v == nil {
			return nil
		}
		return v.AzureServiceEndpoint
	}).(pulumi.StringPtrOutput)
}

// Specify the Azure Storage account name for cloud witness for your Azure Stack HCI cluster.
func (o DeploymentClusterPtrOutput) CloudAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentCluster) *string {
		if v == nil {
			return nil
		}
		return v.CloudAccountName
	}).(pulumi.StringPtrOutput)
}

// The cluster name provided when preparing Active Directory.
func (o DeploymentClusterPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentCluster) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify the fileshare path for the local witness for your Azure Stack HCI cluster.
func (o DeploymentClusterPtrOutput) WitnessPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentCluster) *string {
		if v == nil {
			return nil
		}
		return v.WitnessPath
	}).(pulumi.StringPtrOutput)
}

// Use a cloud witness if you have internet access and if you use an Azure Storage account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file and then uses it to arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'.
func (o DeploymentClusterPtrOutput) WitnessType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentCluster) *string {
		if v == nil {
			return nil
		}
		return v.WitnessType
	}).(pulumi.StringPtrOutput)
}

// AzureStackHCI Cluster deployment properties.
type DeploymentClusterResponse struct {
	// For Azure blob service endpoint type, select either Default or Custom domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net.
	AzureServiceEndpoint *string `pulumi:"azureServiceEndpoint"`
	// Specify the Azure Storage account name for cloud witness for your Azure Stack HCI cluster.
	CloudAccountName *string `pulumi:"cloudAccountName"`
	// The cluster name provided when preparing Active Directory.
	Name *string `pulumi:"name"`
	// Specify the fileshare path for the local witness for your Azure Stack HCI cluster.
	WitnessPath *string `pulumi:"witnessPath"`
	// Use a cloud witness if you have internet access and if you use an Azure Storage account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file and then uses it to arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'.
	WitnessType *string `pulumi:"witnessType"`
}

// AzureStackHCI Cluster deployment properties.
type DeploymentClusterResponseOutput struct{ *pulumi.OutputState }

func (DeploymentClusterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentClusterResponse)(nil)).Elem()
}

func (o DeploymentClusterResponseOutput) ToDeploymentClusterResponseOutput() DeploymentClusterResponseOutput {
	return o
}

func (o DeploymentClusterResponseOutput) ToDeploymentClusterResponseOutputWithContext(ctx context.Context) DeploymentClusterResponseOutput {
	return o
}

// For Azure blob service endpoint type, select either Default or Custom domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net.
func (o DeploymentClusterResponseOutput) AzureServiceEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentClusterResponse) *string { return v.AzureServiceEndpoint }).(pulumi.StringPtrOutput)
}

// Specify the Azure Storage account name for cloud witness for your Azure Stack HCI cluster.
func (o DeploymentClusterResponseOutput) CloudAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentClusterResponse) *string { return v.CloudAccountName }).(pulumi.StringPtrOutput)
}

// The cluster name provided when preparing Active Directory.
func (o DeploymentClusterResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentClusterResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify the fileshare path for the local witness for your Azure Stack HCI cluster.
func (o DeploymentClusterResponseOutput) WitnessPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentClusterResponse) *string { return v.WitnessPath }).(pulumi.StringPtrOutput)
}

// Use a cloud witness if you have internet access and if you use an Azure Storage account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file and then uses it to arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'.
func (o DeploymentClusterResponseOutput) WitnessType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentClusterResponse) *string { return v.WitnessType }).(pulumi.StringPtrOutput)
}

type DeploymentClusterResponsePtrOutput struct{ *pulumi.OutputState }

func (DeploymentClusterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentClusterResponse)(nil)).Elem()
}

func (o DeploymentClusterResponsePtrOutput) ToDeploymentClusterResponsePtrOutput() DeploymentClusterResponsePtrOutput {
	return o
}

func (o DeploymentClusterResponsePtrOutput) ToDeploymentClusterResponsePtrOutputWithContext(ctx context.Context) DeploymentClusterResponsePtrOutput {
	return o
}

func (o DeploymentClusterResponsePtrOutput) Elem() DeploymentClusterResponseOutput {
	return o.ApplyT(func(v *DeploymentClusterResponse) DeploymentClusterResponse {
		if v != nil {
			return *v
		}
		var ret DeploymentClusterResponse
		return ret
	}).(DeploymentClusterResponseOutput)
}

// For Azure blob service endpoint type, select either Default or Custom domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net.
func (o DeploymentClusterResponsePtrOutput) AzureServiceEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentClusterResponse) *string {
		if v == nil {
			return nil
		}
		return v.AzureServiceEndpoint
	}).(pulumi.StringPtrOutput)
}

// Specify the Azure Storage account name for cloud witness for your Azure Stack HCI cluster.
func (o DeploymentClusterResponsePtrOutput) CloudAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentClusterResponse) *string {
		if v == nil {
			return nil
		}
		return v.CloudAccountName
	}).(pulumi.StringPtrOutput)
}

// The cluster name provided when preparing Active Directory.
func (o DeploymentClusterResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentClusterResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify the fileshare path for the local witness for your Azure Stack HCI cluster.
func (o DeploymentClusterResponsePtrOutput) WitnessPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentClusterResponse) *string {
		if v == nil {
			return nil
		}
		return v.WitnessPath
	}).(pulumi.StringPtrOutput)
}

// Use a cloud witness if you have internet access and if you use an Azure Storage account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file and then uses it to arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'.
func (o DeploymentClusterResponsePtrOutput) WitnessType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentClusterResponse) *string {
		if v == nil {
			return nil
		}
		return v.WitnessType
	}).(pulumi.StringPtrOutput)
}

// Deployment Configuration
type DeploymentConfiguration struct {
	// Scale units will contains list of deployment data
	ScaleUnits []ScaleUnits `pulumi:"scaleUnits"`
	// deployment template version
	Version *string `pulumi:"version"`
}

// DeploymentConfigurationInput is an input type that accepts DeploymentConfigurationArgs and DeploymentConfigurationOutput values.
// You can construct a concrete instance of `DeploymentConfigurationInput` via:
//
//	DeploymentConfigurationArgs{...}
type DeploymentConfigurationInput interface {
	pulumi.Input

	ToDeploymentConfigurationOutput() DeploymentConfigurationOutput
	ToDeploymentConfigurationOutputWithContext(context.Context) DeploymentConfigurationOutput
}

// Deployment Configuration
type DeploymentConfigurationArgs struct {
	// Scale units will contains list of deployment data
	ScaleUnits ScaleUnitsArrayInput `pulumi:"scaleUnits"`
	// deployment template version
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DeploymentConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentConfiguration)(nil)).Elem()
}

func (i DeploymentConfigurationArgs) ToDeploymentConfigurationOutput() DeploymentConfigurationOutput {
	return i.ToDeploymentConfigurationOutputWithContext(context.Background())
}

func (i DeploymentConfigurationArgs) ToDeploymentConfigurationOutputWithContext(ctx context.Context) DeploymentConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentConfigurationOutput)
}

// Deployment Configuration
type DeploymentConfigurationOutput struct{ *pulumi.OutputState }

func (DeploymentConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentConfiguration)(nil)).Elem()
}

func (o DeploymentConfigurationOutput) ToDeploymentConfigurationOutput() DeploymentConfigurationOutput {
	return o
}

func (o DeploymentConfigurationOutput) ToDeploymentConfigurationOutputWithContext(ctx context.Context) DeploymentConfigurationOutput {
	return o
}

// Scale units will contains list of deployment data
func (o DeploymentConfigurationOutput) ScaleUnits() ScaleUnitsArrayOutput {
	return o.ApplyT(func(v DeploymentConfiguration) []ScaleUnits { return v.ScaleUnits }).(ScaleUnitsArrayOutput)
}

// deployment template version
func (o DeploymentConfigurationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentConfiguration) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// Deployment Configuration
type DeploymentConfigurationResponse struct {
	// Scale units will contains list of deployment data
	ScaleUnits []ScaleUnitsResponse `pulumi:"scaleUnits"`
	// deployment template version
	Version *string `pulumi:"version"`
}

// Deployment Configuration
type DeploymentConfigurationResponseOutput struct{ *pulumi.OutputState }

func (DeploymentConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentConfigurationResponse)(nil)).Elem()
}

func (o DeploymentConfigurationResponseOutput) ToDeploymentConfigurationResponseOutput() DeploymentConfigurationResponseOutput {
	return o
}

func (o DeploymentConfigurationResponseOutput) ToDeploymentConfigurationResponseOutputWithContext(ctx context.Context) DeploymentConfigurationResponseOutput {
	return o
}

// Scale units will contains list of deployment data
func (o DeploymentConfigurationResponseOutput) ScaleUnits() ScaleUnitsResponseArrayOutput {
	return o.ApplyT(func(v DeploymentConfigurationResponse) []ScaleUnitsResponse { return v.ScaleUnits }).(ScaleUnitsResponseArrayOutput)
}

// deployment template version
func (o DeploymentConfigurationResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentConfigurationResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// The Deployment data of AzureStackHCI Cluster.
type DeploymentData struct {
	// The path to the Active Directory Organizational Unit container object prepared for the deployment.
	AdouPath *string `pulumi:"adouPath"`
	// Observability config to deploy AzureStackHCI Cluster.
	Cluster *DeploymentCluster `pulumi:"cluster"`
	// FQDN to deploy cluster
	DomainFqdn *string `pulumi:"domainFqdn"`
	// HostNetwork config to deploy AzureStackHCI Cluster.
	HostNetwork *HostNetwork `pulumi:"hostNetwork"`
	// InfrastructureNetwork config to deploy AzureStackHCI Cluster.
	InfrastructureNetwork []InfrastructureNetwork `pulumi:"infrastructureNetwork"`
	// naming prefix to deploy cluster.
	NamingPrefix *string `pulumi:"namingPrefix"`
	// Observability config to deploy AzureStackHCI Cluster.
	Observability *Observability `pulumi:"observability"`
	// OptionalServices config to deploy AzureStackHCI Cluster.
	OptionalServices *OptionalServices `pulumi:"optionalServices"`
	// list of physical nodes config to deploy AzureStackHCI Cluster.
	PhysicalNodes []PhysicalNodes `pulumi:"physicalNodes"`
	// SDN Integration config to deploy AzureStackHCI Cluster.
	SdnIntegration *SdnIntegration `pulumi:"sdnIntegration"`
	// secrets used for cloud deployment.
	Secrets []EceDeploymentSecrets `pulumi:"secrets"`
	// Azure keyvault endpoint. This property is deprecated from 2023-12-01-preview. Please use secrets property instead.
	SecretsLocation *string `pulumi:"secretsLocation"`
	// SecuritySettings to deploy AzureStackHCI Cluster.
	SecuritySettings *DeploymentSecuritySettings `pulumi:"securitySettings"`
	// Storage config to deploy AzureStackHCI Cluster.
	Storage *Storage `pulumi:"storage"`
}

// Defaults sets the appropriate defaults for DeploymentData
func (val *DeploymentData) Defaults() *DeploymentData {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.HostNetwork = tmp.HostNetwork.Defaults()

	tmp.Observability = tmp.Observability.Defaults()

	tmp.SecuritySettings = tmp.SecuritySettings.Defaults()

	tmp.Storage = tmp.Storage.Defaults()

	return &tmp
}

// DeploymentDataInput is an input type that accepts DeploymentDataArgs and DeploymentDataOutput values.
// You can construct a concrete instance of `DeploymentDataInput` via:
//
//	DeploymentDataArgs{...}
type DeploymentDataInput interface {
	pulumi.Input

	ToDeploymentDataOutput() DeploymentDataOutput
	ToDeploymentDataOutputWithContext(context.Context) DeploymentDataOutput
}

// The Deployment data of AzureStackHCI Cluster.
type DeploymentDataArgs struct {
	// The path to the Active Directory Organizational Unit container object prepared for the deployment.
	AdouPath pulumi.StringPtrInput `pulumi:"adouPath"`
	// Observability config to deploy AzureStackHCI Cluster.
	Cluster DeploymentClusterPtrInput `pulumi:"cluster"`
	// FQDN to deploy cluster
	DomainFqdn pulumi.StringPtrInput `pulumi:"domainFqdn"`
	// HostNetwork config to deploy AzureStackHCI Cluster.
	HostNetwork HostNetworkPtrInput `pulumi:"hostNetwork"`
	// InfrastructureNetwork config to deploy AzureStackHCI Cluster.
	InfrastructureNetwork InfrastructureNetworkArrayInput `pulumi:"infrastructureNetwork"`
	// naming prefix to deploy cluster.
	NamingPrefix pulumi.StringPtrInput `pulumi:"namingPrefix"`
	// Observability config to deploy AzureStackHCI Cluster.
	Observability ObservabilityPtrInput `pulumi:"observability"`
	// OptionalServices config to deploy AzureStackHCI Cluster.
	OptionalServices OptionalServicesPtrInput `pulumi:"optionalServices"`
	// list of physical nodes config to deploy AzureStackHCI Cluster.
	PhysicalNodes PhysicalNodesArrayInput `pulumi:"physicalNodes"`
	// SDN Integration config to deploy AzureStackHCI Cluster.
	SdnIntegration SdnIntegrationPtrInput `pulumi:"sdnIntegration"`
	// secrets used for cloud deployment.
	Secrets EceDeploymentSecretsArrayInput `pulumi:"secrets"`
	// Azure keyvault endpoint. This property is deprecated from 2023-12-01-preview. Please use secrets property instead.
	SecretsLocation pulumi.StringPtrInput `pulumi:"secretsLocation"`
	// SecuritySettings to deploy AzureStackHCI Cluster.
	SecuritySettings DeploymentSecuritySettingsPtrInput `pulumi:"securitySettings"`
	// Storage config to deploy AzureStackHCI Cluster.
	Storage StoragePtrInput `pulumi:"storage"`
}

// Defaults sets the appropriate defaults for DeploymentDataArgs
func (val *DeploymentDataArgs) Defaults() *DeploymentDataArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (DeploymentDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentData)(nil)).Elem()
}

func (i DeploymentDataArgs) ToDeploymentDataOutput() DeploymentDataOutput {
	return i.ToDeploymentDataOutputWithContext(context.Background())
}

func (i DeploymentDataArgs) ToDeploymentDataOutputWithContext(ctx context.Context) DeploymentDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentDataOutput)
}

// The Deployment data of AzureStackHCI Cluster.
type DeploymentDataOutput struct{ *pulumi.OutputState }

func (DeploymentDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentData)(nil)).Elem()
}

func (o DeploymentDataOutput) ToDeploymentDataOutput() DeploymentDataOutput {
	return o
}

func (o DeploymentDataOutput) ToDeploymentDataOutputWithContext(ctx context.Context) DeploymentDataOutput {
	return o
}

// The path to the Active Directory Organizational Unit container object prepared for the deployment.
func (o DeploymentDataOutput) AdouPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentData) *string { return v.AdouPath }).(pulumi.StringPtrOutput)
}

// Observability config to deploy AzureStackHCI Cluster.
func (o DeploymentDataOutput) Cluster() DeploymentClusterPtrOutput {
	return o.ApplyT(func(v DeploymentData) *DeploymentCluster { return v.Cluster }).(DeploymentClusterPtrOutput)
}

// FQDN to deploy cluster
func (o DeploymentDataOutput) DomainFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentData) *string { return v.DomainFqdn }).(pulumi.StringPtrOutput)
}

// HostNetwork config to deploy AzureStackHCI Cluster.
func (o DeploymentDataOutput) HostNetwork() HostNetworkPtrOutput {
	return o.ApplyT(func(v DeploymentData) *HostNetwork { return v.HostNetwork }).(HostNetworkPtrOutput)
}

// InfrastructureNetwork config to deploy AzureStackHCI Cluster.
func (o DeploymentDataOutput) InfrastructureNetwork() InfrastructureNetworkArrayOutput {
	return o.ApplyT(func(v DeploymentData) []InfrastructureNetwork { return v.InfrastructureNetwork }).(InfrastructureNetworkArrayOutput)
}

// naming prefix to deploy cluster.
func (o DeploymentDataOutput) NamingPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentData) *string { return v.NamingPrefix }).(pulumi.StringPtrOutput)
}

// Observability config to deploy AzureStackHCI Cluster.
func (o DeploymentDataOutput) Observability() ObservabilityPtrOutput {
	return o.ApplyT(func(v DeploymentData) *Observability { return v.Observability }).(ObservabilityPtrOutput)
}

// OptionalServices config to deploy AzureStackHCI Cluster.
func (o DeploymentDataOutput) OptionalServices() OptionalServicesPtrOutput {
	return o.ApplyT(func(v DeploymentData) *OptionalServices { return v.OptionalServices }).(OptionalServicesPtrOutput)
}

// list of physical nodes config to deploy AzureStackHCI Cluster.
func (o DeploymentDataOutput) PhysicalNodes() PhysicalNodesArrayOutput {
	return o.ApplyT(func(v DeploymentData) []PhysicalNodes { return v.PhysicalNodes }).(PhysicalNodesArrayOutput)
}

// SDN Integration config to deploy AzureStackHCI Cluster.
func (o DeploymentDataOutput) SdnIntegration() SdnIntegrationPtrOutput {
	return o.ApplyT(func(v DeploymentData) *SdnIntegration { return v.SdnIntegration }).(SdnIntegrationPtrOutput)
}

// secrets used for cloud deployment.
func (o DeploymentDataOutput) Secrets() EceDeploymentSecretsArrayOutput {
	return o.ApplyT(func(v DeploymentData) []EceDeploymentSecrets { return v.Secrets }).(EceDeploymentSecretsArrayOutput)
}

// Azure keyvault endpoint. This property is deprecated from 2023-12-01-preview. Please use secrets property instead.
func (o DeploymentDataOutput) SecretsLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentData) *string { return v.SecretsLocation }).(pulumi.StringPtrOutput)
}

// SecuritySettings to deploy AzureStackHCI Cluster.
func (o DeploymentDataOutput) SecuritySettings() DeploymentSecuritySettingsPtrOutput {
	return o.ApplyT(func(v DeploymentData) *DeploymentSecuritySettings { return v.SecuritySettings }).(DeploymentSecuritySettingsPtrOutput)
}

// Storage config to deploy AzureStackHCI Cluster.
func (o DeploymentDataOutput) Storage() StoragePtrOutput {
	return o.ApplyT(func(v DeploymentData) *Storage { return v.Storage }).(StoragePtrOutput)
}

// The Deployment data of AzureStackHCI Cluster.
type DeploymentDataResponse struct {
	// The path to the Active Directory Organizational Unit container object prepared for the deployment.
	AdouPath *string `pulumi:"adouPath"`
	// Observability config to deploy AzureStackHCI Cluster.
	Cluster *DeploymentClusterResponse `pulumi:"cluster"`
	// FQDN to deploy cluster
	DomainFqdn *string `pulumi:"domainFqdn"`
	// HostNetwork config to deploy AzureStackHCI Cluster.
	HostNetwork *HostNetworkResponse `pulumi:"hostNetwork"`
	// InfrastructureNetwork config to deploy AzureStackHCI Cluster.
	InfrastructureNetwork []InfrastructureNetworkResponse `pulumi:"infrastructureNetwork"`
	// naming prefix to deploy cluster.
	NamingPrefix *string `pulumi:"namingPrefix"`
	// Observability config to deploy AzureStackHCI Cluster.
	Observability *ObservabilityResponse `pulumi:"observability"`
	// OptionalServices config to deploy AzureStackHCI Cluster.
	OptionalServices *OptionalServicesResponse `pulumi:"optionalServices"`
	// list of physical nodes config to deploy AzureStackHCI Cluster.
	PhysicalNodes []PhysicalNodesResponse `pulumi:"physicalNodes"`
	// SDN Integration config to deploy AzureStackHCI Cluster.
	SdnIntegration *SdnIntegrationResponse `pulumi:"sdnIntegration"`
	// secrets used for cloud deployment.
	Secrets []EceDeploymentSecretsResponse `pulumi:"secrets"`
	// Azure keyvault endpoint. This property is deprecated from 2023-12-01-preview. Please use secrets property instead.
	SecretsLocation *string `pulumi:"secretsLocation"`
	// SecuritySettings to deploy AzureStackHCI Cluster.
	SecuritySettings *DeploymentSecuritySettingsResponse `pulumi:"securitySettings"`
	// Storage config to deploy AzureStackHCI Cluster.
	Storage *StorageResponse `pulumi:"storage"`
}

// Defaults sets the appropriate defaults for DeploymentDataResponse
func (val *DeploymentDataResponse) Defaults() *DeploymentDataResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Observability = tmp.Observability.Defaults()

	tmp.SecuritySettings = tmp.SecuritySettings.Defaults()

	tmp.Storage = tmp.Storage.Defaults()

	return &tmp
}

// The Deployment data of AzureStackHCI Cluster.
type DeploymentDataResponseOutput struct{ *pulumi.OutputState }

func (DeploymentDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentDataResponse)(nil)).Elem()
}

func (o DeploymentDataResponseOutput) ToDeploymentDataResponseOutput() DeploymentDataResponseOutput {
	return o
}

func (o DeploymentDataResponseOutput) ToDeploymentDataResponseOutputWithContext(ctx context.Context) DeploymentDataResponseOutput {
	return o
}

// The path to the Active Directory Organizational Unit container object prepared for the deployment.
func (o DeploymentDataResponseOutput) AdouPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentDataResponse) *string { return v.AdouPath }).(pulumi.StringPtrOutput)
}

// Observability config to deploy AzureStackHCI Cluster.
func (o DeploymentDataResponseOutput) Cluster() DeploymentClusterResponsePtrOutput {
	return o.ApplyT(func(v DeploymentDataResponse) *DeploymentClusterResponse { return v.Cluster }).(DeploymentClusterResponsePtrOutput)
}

// FQDN to deploy cluster
func (o DeploymentDataResponseOutput) DomainFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentDataResponse) *string { return v.DomainFqdn }).(pulumi.StringPtrOutput)
}

// HostNetwork config to deploy AzureStackHCI Cluster.
func (o DeploymentDataResponseOutput) HostNetwork() HostNetworkResponsePtrOutput {
	return o.ApplyT(func(v DeploymentDataResponse) *HostNetworkResponse { return v.HostNetwork }).(HostNetworkResponsePtrOutput)
}

// InfrastructureNetwork config to deploy AzureStackHCI Cluster.
func (o DeploymentDataResponseOutput) InfrastructureNetwork() InfrastructureNetworkResponseArrayOutput {
	return o.ApplyT(func(v DeploymentDataResponse) []InfrastructureNetworkResponse { return v.InfrastructureNetwork }).(InfrastructureNetworkResponseArrayOutput)
}

// naming prefix to deploy cluster.
func (o DeploymentDataResponseOutput) NamingPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentDataResponse) *string { return v.NamingPrefix }).(pulumi.StringPtrOutput)
}

// Observability config to deploy AzureStackHCI Cluster.
func (o DeploymentDataResponseOutput) Observability() ObservabilityResponsePtrOutput {
	return o.ApplyT(func(v DeploymentDataResponse) *ObservabilityResponse { return v.Observability }).(ObservabilityResponsePtrOutput)
}

// OptionalServices config to deploy AzureStackHCI Cluster.
func (o DeploymentDataResponseOutput) OptionalServices() OptionalServicesResponsePtrOutput {
	return o.ApplyT(func(v DeploymentDataResponse) *OptionalServicesResponse { return v.OptionalServices }).(OptionalServicesResponsePtrOutput)
}

// list of physical nodes config to deploy AzureStackHCI Cluster.
func (o DeploymentDataResponseOutput) PhysicalNodes() PhysicalNodesResponseArrayOutput {
	return o.ApplyT(func(v DeploymentDataResponse) []PhysicalNodesResponse { return v.PhysicalNodes }).(PhysicalNodesResponseArrayOutput)
}

// SDN Integration config to deploy AzureStackHCI Cluster.
func (o DeploymentDataResponseOutput) SdnIntegration() SdnIntegrationResponsePtrOutput {
	return o.ApplyT(func(v DeploymentDataResponse) *SdnIntegrationResponse { return v.SdnIntegration }).(SdnIntegrationResponsePtrOutput)
}

// secrets used for cloud deployment.
func (o DeploymentDataResponseOutput) Secrets() EceDeploymentSecretsResponseArrayOutput {
	return o.ApplyT(func(v DeploymentDataResponse) []EceDeploymentSecretsResponse { return v.Secrets }).(EceDeploymentSecretsResponseArrayOutput)
}

// Azure keyvault endpoint. This property is deprecated from 2023-12-01-preview. Please use secrets property instead.
func (o DeploymentDataResponseOutput) SecretsLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentDataResponse) *string { return v.SecretsLocation }).(pulumi.StringPtrOutput)
}

// SecuritySettings to deploy AzureStackHCI Cluster.
func (o DeploymentDataResponseOutput) SecuritySettings() DeploymentSecuritySettingsResponsePtrOutput {
	return o.ApplyT(func(v DeploymentDataResponse) *DeploymentSecuritySettingsResponse { return v.SecuritySettings }).(DeploymentSecuritySettingsResponsePtrOutput)
}

// Storage config to deploy AzureStackHCI Cluster.
func (o DeploymentDataResponseOutput) Storage() StorageResponsePtrOutput {
	return o.ApplyT(func(v DeploymentDataResponse) *StorageResponse { return v.Storage }).(StorageResponsePtrOutput)
}

// The SecuritySettings of AzureStackHCI Cluster.
type DeploymentSecuritySettings struct {
	// When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent.
	BitlockerBootVolume *bool `pulumi:"bitlockerBootVolume"`
	// When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI cluster shared volumes.
	BitlockerDataVolumes *bool `pulumi:"bitlockerDataVolumes"`
	// When set to true, Credential Guard is enabled.
	CredentialGuardEnforced *bool `pulumi:"credentialGuardEnforced"`
	// When set to true, the security baseline is re-applied regularly.
	DriftControlEnforced *bool `pulumi:"driftControlEnforced"`
	// By default, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent.
	DrtmProtection *bool `pulumi:"drtmProtection"`
	// By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster.
	HvciProtection *bool `pulumi:"hvciProtection"`
	// When set to true, all the side channel mitigations are enabled
	SideChannelMitigationEnforced *bool `pulumi:"sideChannelMitigationEnforced"`
	// When set to true, cluster east-west traffic is encrypted.
	SmbClusterEncryption *bool `pulumi:"smbClusterEncryption"`
	// When set to true, the SMB default instance requires sign in for the client and server services.
	SmbSigningEnforced *bool `pulumi:"smbSigningEnforced"`
	// WDAC is enabled by default and limits the applications and the code that you can run on your Azure Stack HCI cluster.
	WdacEnforced *bool `pulumi:"wdacEnforced"`
}

// Defaults sets the appropriate defaults for DeploymentSecuritySettings
func (val *DeploymentSecuritySettings) Defaults() *DeploymentSecuritySettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.BitlockerBootVolume == nil {
		bitlockerBootVolume_ := true
		tmp.BitlockerBootVolume = &bitlockerBootVolume_
	}
	if tmp.BitlockerDataVolumes == nil {
		bitlockerDataVolumes_ := true
		tmp.BitlockerDataVolumes = &bitlockerDataVolumes_
	}
	if tmp.CredentialGuardEnforced == nil {
		credentialGuardEnforced_ := false
		tmp.CredentialGuardEnforced = &credentialGuardEnforced_
	}
	if tmp.DriftControlEnforced == nil {
		driftControlEnforced_ := true
		tmp.DriftControlEnforced = &driftControlEnforced_
	}
	if tmp.DrtmProtection == nil {
		drtmProtection_ := true
		tmp.DrtmProtection = &drtmProtection_
	}
	if tmp.HvciProtection == nil {
		hvciProtection_ := true
		tmp.HvciProtection = &hvciProtection_
	}
	if tmp.SideChannelMitigationEnforced == nil {
		sideChannelMitigationEnforced_ := true
		tmp.SideChannelMitigationEnforced = &sideChannelMitigationEnforced_
	}
	if tmp.SmbClusterEncryption == nil {
		smbClusterEncryption_ := false
		tmp.SmbClusterEncryption = &smbClusterEncryption_
	}
	if tmp.SmbSigningEnforced == nil {
		smbSigningEnforced_ := true
		tmp.SmbSigningEnforced = &smbSigningEnforced_
	}
	if tmp.WdacEnforced == nil {
		wdacEnforced_ := true
		tmp.WdacEnforced = &wdacEnforced_
	}
	return &tmp
}

// DeploymentSecuritySettingsInput is an input type that accepts DeploymentSecuritySettingsArgs and DeploymentSecuritySettingsOutput values.
// You can construct a concrete instance of `DeploymentSecuritySettingsInput` via:
//
//	DeploymentSecuritySettingsArgs{...}
type DeploymentSecuritySettingsInput interface {
	pulumi.Input

	ToDeploymentSecuritySettingsOutput() DeploymentSecuritySettingsOutput
	ToDeploymentSecuritySettingsOutputWithContext(context.Context) DeploymentSecuritySettingsOutput
}

// The SecuritySettings of AzureStackHCI Cluster.
type DeploymentSecuritySettingsArgs struct {
	// When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent.
	BitlockerBootVolume pulumi.BoolPtrInput `pulumi:"bitlockerBootVolume"`
	// When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI cluster shared volumes.
	BitlockerDataVolumes pulumi.BoolPtrInput `pulumi:"bitlockerDataVolumes"`
	// When set to true, Credential Guard is enabled.
	CredentialGuardEnforced pulumi.BoolPtrInput `pulumi:"credentialGuardEnforced"`
	// When set to true, the security baseline is re-applied regularly.
	DriftControlEnforced pulumi.BoolPtrInput `pulumi:"driftControlEnforced"`
	// By default, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent.
	DrtmProtection pulumi.BoolPtrInput `pulumi:"drtmProtection"`
	// By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster.
	HvciProtection pulumi.BoolPtrInput `pulumi:"hvciProtection"`
	// When set to true, all the side channel mitigations are enabled
	SideChannelMitigationEnforced pulumi.BoolPtrInput `pulumi:"sideChannelMitigationEnforced"`
	// When set to true, cluster east-west traffic is encrypted.
	SmbClusterEncryption pulumi.BoolPtrInput `pulumi:"smbClusterEncryption"`
	// When set to true, the SMB default instance requires sign in for the client and server services.
	SmbSigningEnforced pulumi.BoolPtrInput `pulumi:"smbSigningEnforced"`
	// WDAC is enabled by default and limits the applications and the code that you can run on your Azure Stack HCI cluster.
	WdacEnforced pulumi.BoolPtrInput `pulumi:"wdacEnforced"`
}

// Defaults sets the appropriate defaults for DeploymentSecuritySettingsArgs
func (val *DeploymentSecuritySettingsArgs) Defaults() *DeploymentSecuritySettingsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.BitlockerBootVolume == nil {
		tmp.BitlockerBootVolume = pulumi.BoolPtr(true)
	}
	if tmp.BitlockerDataVolumes == nil {
		tmp.BitlockerDataVolumes = pulumi.BoolPtr(true)
	}
	if tmp.CredentialGuardEnforced == nil {
		tmp.CredentialGuardEnforced = pulumi.BoolPtr(false)
	}
	if tmp.DriftControlEnforced == nil {
		tmp.DriftControlEnforced = pulumi.BoolPtr(true)
	}
	if tmp.DrtmProtection == nil {
		tmp.DrtmProtection = pulumi.BoolPtr(true)
	}
	if tmp.HvciProtection == nil {
		tmp.HvciProtection = pulumi.BoolPtr(true)
	}
	if tmp.SideChannelMitigationEnforced == nil {
		tmp.SideChannelMitigationEnforced = pulumi.BoolPtr(true)
	}
	if tmp.SmbClusterEncryption == nil {
		tmp.SmbClusterEncryption = pulumi.BoolPtr(false)
	}
	if tmp.SmbSigningEnforced == nil {
		tmp.SmbSigningEnforced = pulumi.BoolPtr(true)
	}
	if tmp.WdacEnforced == nil {
		tmp.WdacEnforced = pulumi.BoolPtr(true)
	}
	return &tmp
}
func (DeploymentSecuritySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSecuritySettings)(nil)).Elem()
}

func (i DeploymentSecuritySettingsArgs) ToDeploymentSecuritySettingsOutput() DeploymentSecuritySettingsOutput {
	return i.ToDeploymentSecuritySettingsOutputWithContext(context.Background())
}

func (i DeploymentSecuritySettingsArgs) ToDeploymentSecuritySettingsOutputWithContext(ctx context.Context) DeploymentSecuritySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSecuritySettingsOutput)
}

func (i DeploymentSecuritySettingsArgs) ToDeploymentSecuritySettingsPtrOutput() DeploymentSecuritySettingsPtrOutput {
	return i.ToDeploymentSecuritySettingsPtrOutputWithContext(context.Background())
}

func (i DeploymentSecuritySettingsArgs) ToDeploymentSecuritySettingsPtrOutputWithContext(ctx context.Context) DeploymentSecuritySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSecuritySettingsOutput).ToDeploymentSecuritySettingsPtrOutputWithContext(ctx)
}

// DeploymentSecuritySettingsPtrInput is an input type that accepts DeploymentSecuritySettingsArgs, DeploymentSecuritySettingsPtr and DeploymentSecuritySettingsPtrOutput values.
// You can construct a concrete instance of `DeploymentSecuritySettingsPtrInput` via:
//
//	        DeploymentSecuritySettingsArgs{...}
//
//	or:
//
//	        nil
type DeploymentSecuritySettingsPtrInput interface {
	pulumi.Input

	ToDeploymentSecuritySettingsPtrOutput() DeploymentSecuritySettingsPtrOutput
	ToDeploymentSecuritySettingsPtrOutputWithContext(context.Context) DeploymentSecuritySettingsPtrOutput
}

type deploymentSecuritySettingsPtrType DeploymentSecuritySettingsArgs

func DeploymentSecuritySettingsPtr(v *DeploymentSecuritySettingsArgs) DeploymentSecuritySettingsPtrInput {
	return (*deploymentSecuritySettingsPtrType)(v)
}

func (*deploymentSecuritySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSecuritySettings)(nil)).Elem()
}

func (i *deploymentSecuritySettingsPtrType) ToDeploymentSecuritySettingsPtrOutput() DeploymentSecuritySettingsPtrOutput {
	return i.ToDeploymentSecuritySettingsPtrOutputWithContext(context.Background())
}

func (i *deploymentSecuritySettingsPtrType) ToDeploymentSecuritySettingsPtrOutputWithContext(ctx context.Context) DeploymentSecuritySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSecuritySettingsPtrOutput)
}

// The SecuritySettings of AzureStackHCI Cluster.
type DeploymentSecuritySettingsOutput struct{ *pulumi.OutputState }

func (DeploymentSecuritySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSecuritySettings)(nil)).Elem()
}

func (o DeploymentSecuritySettingsOutput) ToDeploymentSecuritySettingsOutput() DeploymentSecuritySettingsOutput {
	return o
}

func (o DeploymentSecuritySettingsOutput) ToDeploymentSecuritySettingsOutputWithContext(ctx context.Context) DeploymentSecuritySettingsOutput {
	return o
}

func (o DeploymentSecuritySettingsOutput) ToDeploymentSecuritySettingsPtrOutput() DeploymentSecuritySettingsPtrOutput {
	return o.ToDeploymentSecuritySettingsPtrOutputWithContext(context.Background())
}

func (o DeploymentSecuritySettingsOutput) ToDeploymentSecuritySettingsPtrOutputWithContext(ctx context.Context) DeploymentSecuritySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentSecuritySettings) *DeploymentSecuritySettings {
		return &v
	}).(DeploymentSecuritySettingsPtrOutput)
}

// When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent.
func (o DeploymentSecuritySettingsOutput) BitlockerBootVolume() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettings) *bool { return v.BitlockerBootVolume }).(pulumi.BoolPtrOutput)
}

// When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI cluster shared volumes.
func (o DeploymentSecuritySettingsOutput) BitlockerDataVolumes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettings) *bool { return v.BitlockerDataVolumes }).(pulumi.BoolPtrOutput)
}

// When set to true, Credential Guard is enabled.
func (o DeploymentSecuritySettingsOutput) CredentialGuardEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettings) *bool { return v.CredentialGuardEnforced }).(pulumi.BoolPtrOutput)
}

// When set to true, the security baseline is re-applied regularly.
func (o DeploymentSecuritySettingsOutput) DriftControlEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettings) *bool { return v.DriftControlEnforced }).(pulumi.BoolPtrOutput)
}

// By default, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent.
func (o DeploymentSecuritySettingsOutput) DrtmProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettings) *bool { return v.DrtmProtection }).(pulumi.BoolPtrOutput)
}

// By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster.
func (o DeploymentSecuritySettingsOutput) HvciProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettings) *bool { return v.HvciProtection }).(pulumi.BoolPtrOutput)
}

// When set to true, all the side channel mitigations are enabled
func (o DeploymentSecuritySettingsOutput) SideChannelMitigationEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettings) *bool { return v.SideChannelMitigationEnforced }).(pulumi.BoolPtrOutput)
}

// When set to true, cluster east-west traffic is encrypted.
func (o DeploymentSecuritySettingsOutput) SmbClusterEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettings) *bool { return v.SmbClusterEncryption }).(pulumi.BoolPtrOutput)
}

// When set to true, the SMB default instance requires sign in for the client and server services.
func (o DeploymentSecuritySettingsOutput) SmbSigningEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettings) *bool { return v.SmbSigningEnforced }).(pulumi.BoolPtrOutput)
}

// WDAC is enabled by default and limits the applications and the code that you can run on your Azure Stack HCI cluster.
func (o DeploymentSecuritySettingsOutput) WdacEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettings) *bool { return v.WdacEnforced }).(pulumi.BoolPtrOutput)
}

type DeploymentSecuritySettingsPtrOutput struct{ *pulumi.OutputState }

func (DeploymentSecuritySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSecuritySettings)(nil)).Elem()
}

func (o DeploymentSecuritySettingsPtrOutput) ToDeploymentSecuritySettingsPtrOutput() DeploymentSecuritySettingsPtrOutput {
	return o
}

func (o DeploymentSecuritySettingsPtrOutput) ToDeploymentSecuritySettingsPtrOutputWithContext(ctx context.Context) DeploymentSecuritySettingsPtrOutput {
	return o
}

func (o DeploymentSecuritySettingsPtrOutput) Elem() DeploymentSecuritySettingsOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettings) DeploymentSecuritySettings {
		if v != nil {
			return *v
		}
		var ret DeploymentSecuritySettings
		return ret
	}).(DeploymentSecuritySettingsOutput)
}

// When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent.
func (o DeploymentSecuritySettingsPtrOutput) BitlockerBootVolume() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettings) *bool {
		if v == nil {
			return nil
		}
		return v.BitlockerBootVolume
	}).(pulumi.BoolPtrOutput)
}

// When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI cluster shared volumes.
func (o DeploymentSecuritySettingsPtrOutput) BitlockerDataVolumes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettings) *bool {
		if v == nil {
			return nil
		}
		return v.BitlockerDataVolumes
	}).(pulumi.BoolPtrOutput)
}

// When set to true, Credential Guard is enabled.
func (o DeploymentSecuritySettingsPtrOutput) CredentialGuardEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettings) *bool {
		if v == nil {
			return nil
		}
		return v.CredentialGuardEnforced
	}).(pulumi.BoolPtrOutput)
}

// When set to true, the security baseline is re-applied regularly.
func (o DeploymentSecuritySettingsPtrOutput) DriftControlEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettings) *bool {
		if v == nil {
			return nil
		}
		return v.DriftControlEnforced
	}).(pulumi.BoolPtrOutput)
}

// By default, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent.
func (o DeploymentSecuritySettingsPtrOutput) DrtmProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettings) *bool {
		if v == nil {
			return nil
		}
		return v.DrtmProtection
	}).(pulumi.BoolPtrOutput)
}

// By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster.
func (o DeploymentSecuritySettingsPtrOutput) HvciProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettings) *bool {
		if v == nil {
			return nil
		}
		return v.HvciProtection
	}).(pulumi.BoolPtrOutput)
}

// When set to true, all the side channel mitigations are enabled
func (o DeploymentSecuritySettingsPtrOutput) SideChannelMitigationEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettings) *bool {
		if v == nil {
			return nil
		}
		return v.SideChannelMitigationEnforced
	}).(pulumi.BoolPtrOutput)
}

// When set to true, cluster east-west traffic is encrypted.
func (o DeploymentSecuritySettingsPtrOutput) SmbClusterEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettings) *bool {
		if v == nil {
			return nil
		}
		return v.SmbClusterEncryption
	}).(pulumi.BoolPtrOutput)
}

// When set to true, the SMB default instance requires sign in for the client and server services.
func (o DeploymentSecuritySettingsPtrOutput) SmbSigningEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettings) *bool {
		if v == nil {
			return nil
		}
		return v.SmbSigningEnforced
	}).(pulumi.BoolPtrOutput)
}

// WDAC is enabled by default and limits the applications and the code that you can run on your Azure Stack HCI cluster.
func (o DeploymentSecuritySettingsPtrOutput) WdacEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettings) *bool {
		if v == nil {
			return nil
		}
		return v.WdacEnforced
	}).(pulumi.BoolPtrOutput)
}

// The SecuritySettings of AzureStackHCI Cluster.
type DeploymentSecuritySettingsResponse struct {
	// When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent.
	BitlockerBootVolume *bool `pulumi:"bitlockerBootVolume"`
	// When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI cluster shared volumes.
	BitlockerDataVolumes *bool `pulumi:"bitlockerDataVolumes"`
	// When set to true, Credential Guard is enabled.
	CredentialGuardEnforced *bool `pulumi:"credentialGuardEnforced"`
	// When set to true, the security baseline is re-applied regularly.
	DriftControlEnforced *bool `pulumi:"driftControlEnforced"`
	// By default, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent.
	DrtmProtection *bool `pulumi:"drtmProtection"`
	// By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster.
	HvciProtection *bool `pulumi:"hvciProtection"`
	// When set to true, all the side channel mitigations are enabled
	SideChannelMitigationEnforced *bool `pulumi:"sideChannelMitigationEnforced"`
	// When set to true, cluster east-west traffic is encrypted.
	SmbClusterEncryption *bool `pulumi:"smbClusterEncryption"`
	// When set to true, the SMB default instance requires sign in for the client and server services.
	SmbSigningEnforced *bool `pulumi:"smbSigningEnforced"`
	// WDAC is enabled by default and limits the applications and the code that you can run on your Azure Stack HCI cluster.
	WdacEnforced *bool `pulumi:"wdacEnforced"`
}

// Defaults sets the appropriate defaults for DeploymentSecuritySettingsResponse
func (val *DeploymentSecuritySettingsResponse) Defaults() *DeploymentSecuritySettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.BitlockerBootVolume == nil {
		bitlockerBootVolume_ := true
		tmp.BitlockerBootVolume = &bitlockerBootVolume_
	}
	if tmp.BitlockerDataVolumes == nil {
		bitlockerDataVolumes_ := true
		tmp.BitlockerDataVolumes = &bitlockerDataVolumes_
	}
	if tmp.CredentialGuardEnforced == nil {
		credentialGuardEnforced_ := false
		tmp.CredentialGuardEnforced = &credentialGuardEnforced_
	}
	if tmp.DriftControlEnforced == nil {
		driftControlEnforced_ := true
		tmp.DriftControlEnforced = &driftControlEnforced_
	}
	if tmp.DrtmProtection == nil {
		drtmProtection_ := true
		tmp.DrtmProtection = &drtmProtection_
	}
	if tmp.HvciProtection == nil {
		hvciProtection_ := true
		tmp.HvciProtection = &hvciProtection_
	}
	if tmp.SideChannelMitigationEnforced == nil {
		sideChannelMitigationEnforced_ := true
		tmp.SideChannelMitigationEnforced = &sideChannelMitigationEnforced_
	}
	if tmp.SmbClusterEncryption == nil {
		smbClusterEncryption_ := false
		tmp.SmbClusterEncryption = &smbClusterEncryption_
	}
	if tmp.SmbSigningEnforced == nil {
		smbSigningEnforced_ := true
		tmp.SmbSigningEnforced = &smbSigningEnforced_
	}
	if tmp.WdacEnforced == nil {
		wdacEnforced_ := true
		tmp.WdacEnforced = &wdacEnforced_
	}
	return &tmp
}

// The SecuritySettings of AzureStackHCI Cluster.
type DeploymentSecuritySettingsResponseOutput struct{ *pulumi.OutputState }

func (DeploymentSecuritySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSecuritySettingsResponse)(nil)).Elem()
}

func (o DeploymentSecuritySettingsResponseOutput) ToDeploymentSecuritySettingsResponseOutput() DeploymentSecuritySettingsResponseOutput {
	return o
}

func (o DeploymentSecuritySettingsResponseOutput) ToDeploymentSecuritySettingsResponseOutputWithContext(ctx context.Context) DeploymentSecuritySettingsResponseOutput {
	return o
}

// When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent.
func (o DeploymentSecuritySettingsResponseOutput) BitlockerBootVolume() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettingsResponse) *bool { return v.BitlockerBootVolume }).(pulumi.BoolPtrOutput)
}

// When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI cluster shared volumes.
func (o DeploymentSecuritySettingsResponseOutput) BitlockerDataVolumes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettingsResponse) *bool { return v.BitlockerDataVolumes }).(pulumi.BoolPtrOutput)
}

// When set to true, Credential Guard is enabled.
func (o DeploymentSecuritySettingsResponseOutput) CredentialGuardEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettingsResponse) *bool { return v.CredentialGuardEnforced }).(pulumi.BoolPtrOutput)
}

// When set to true, the security baseline is re-applied regularly.
func (o DeploymentSecuritySettingsResponseOutput) DriftControlEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettingsResponse) *bool { return v.DriftControlEnforced }).(pulumi.BoolPtrOutput)
}

// By default, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent.
func (o DeploymentSecuritySettingsResponseOutput) DrtmProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettingsResponse) *bool { return v.DrtmProtection }).(pulumi.BoolPtrOutput)
}

// By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster.
func (o DeploymentSecuritySettingsResponseOutput) HvciProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettingsResponse) *bool { return v.HvciProtection }).(pulumi.BoolPtrOutput)
}

// When set to true, all the side channel mitigations are enabled
func (o DeploymentSecuritySettingsResponseOutput) SideChannelMitigationEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettingsResponse) *bool { return v.SideChannelMitigationEnforced }).(pulumi.BoolPtrOutput)
}

// When set to true, cluster east-west traffic is encrypted.
func (o DeploymentSecuritySettingsResponseOutput) SmbClusterEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettingsResponse) *bool { return v.SmbClusterEncryption }).(pulumi.BoolPtrOutput)
}

// When set to true, the SMB default instance requires sign in for the client and server services.
func (o DeploymentSecuritySettingsResponseOutput) SmbSigningEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettingsResponse) *bool { return v.SmbSigningEnforced }).(pulumi.BoolPtrOutput)
}

// WDAC is enabled by default and limits the applications and the code that you can run on your Azure Stack HCI cluster.
func (o DeploymentSecuritySettingsResponseOutput) WdacEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentSecuritySettingsResponse) *bool { return v.WdacEnforced }).(pulumi.BoolPtrOutput)
}

type DeploymentSecuritySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DeploymentSecuritySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSecuritySettingsResponse)(nil)).Elem()
}

func (o DeploymentSecuritySettingsResponsePtrOutput) ToDeploymentSecuritySettingsResponsePtrOutput() DeploymentSecuritySettingsResponsePtrOutput {
	return o
}

func (o DeploymentSecuritySettingsResponsePtrOutput) ToDeploymentSecuritySettingsResponsePtrOutputWithContext(ctx context.Context) DeploymentSecuritySettingsResponsePtrOutput {
	return o
}

func (o DeploymentSecuritySettingsResponsePtrOutput) Elem() DeploymentSecuritySettingsResponseOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettingsResponse) DeploymentSecuritySettingsResponse {
		if v != nil {
			return *v
		}
		var ret DeploymentSecuritySettingsResponse
		return ret
	}).(DeploymentSecuritySettingsResponseOutput)
}

// When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent.
func (o DeploymentSecuritySettingsResponsePtrOutput) BitlockerBootVolume() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.BitlockerBootVolume
	}).(pulumi.BoolPtrOutput)
}

// When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI cluster shared volumes.
func (o DeploymentSecuritySettingsResponsePtrOutput) BitlockerDataVolumes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.BitlockerDataVolumes
	}).(pulumi.BoolPtrOutput)
}

// When set to true, Credential Guard is enabled.
func (o DeploymentSecuritySettingsResponsePtrOutput) CredentialGuardEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CredentialGuardEnforced
	}).(pulumi.BoolPtrOutput)
}

// When set to true, the security baseline is re-applied regularly.
func (o DeploymentSecuritySettingsResponsePtrOutput) DriftControlEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DriftControlEnforced
	}).(pulumi.BoolPtrOutput)
}

// By default, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent.
func (o DeploymentSecuritySettingsResponsePtrOutput) DrtmProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DrtmProtection
	}).(pulumi.BoolPtrOutput)
}

// By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster.
func (o DeploymentSecuritySettingsResponsePtrOutput) HvciProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.HvciProtection
	}).(pulumi.BoolPtrOutput)
}

// When set to true, all the side channel mitigations are enabled
func (o DeploymentSecuritySettingsResponsePtrOutput) SideChannelMitigationEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SideChannelMitigationEnforced
	}).(pulumi.BoolPtrOutput)
}

// When set to true, cluster east-west traffic is encrypted.
func (o DeploymentSecuritySettingsResponsePtrOutput) SmbClusterEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SmbClusterEncryption
	}).(pulumi.BoolPtrOutput)
}

// When set to true, the SMB default instance requires sign in for the client and server services.
func (o DeploymentSecuritySettingsResponsePtrOutput) SmbSigningEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SmbSigningEnforced
	}).(pulumi.BoolPtrOutput)
}

// WDAC is enabled by default and limits the applications and the code that you can run on your Azure Stack HCI cluster.
func (o DeploymentSecuritySettingsResponsePtrOutput) WdacEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentSecuritySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.WdacEnforced
	}).(pulumi.BoolPtrOutput)
}

// The Step of AzureStackHCI Cluster.
type DeploymentStepResponse struct {
	// Description of step.
	Description string `pulumi:"description"`
	// End time of step.
	EndTimeUtc string `pulumi:"endTimeUtc"`
	// List of exceptions in AzureStackHCI Cluster Deployment.
	Exception []string `pulumi:"exception"`
	// FullStepIndex of step.
	FullStepIndex string `pulumi:"fullStepIndex"`
	// Name of step.
	Name string `pulumi:"name"`
	// Start time of step.
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// Status of step. Allowed values are 'Error', 'Success', 'InProgress'
	Status string `pulumi:"status"`
	// List of nested steps of AzureStackHCI Cluster Deployment.
	Steps []DeploymentStepResponse `pulumi:"steps"`
}

// The Step of AzureStackHCI Cluster.
type DeploymentStepResponseOutput struct{ *pulumi.OutputState }

func (DeploymentStepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentStepResponse)(nil)).Elem()
}

func (o DeploymentStepResponseOutput) ToDeploymentStepResponseOutput() DeploymentStepResponseOutput {
	return o
}

func (o DeploymentStepResponseOutput) ToDeploymentStepResponseOutputWithContext(ctx context.Context) DeploymentStepResponseOutput {
	return o
}

// Description of step.
func (o DeploymentStepResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentStepResponse) string { return v.Description }).(pulumi.StringOutput)
}

// End time of step.
func (o DeploymentStepResponseOutput) EndTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentStepResponse) string { return v.EndTimeUtc }).(pulumi.StringOutput)
}

// List of exceptions in AzureStackHCI Cluster Deployment.
func (o DeploymentStepResponseOutput) Exception() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentStepResponse) []string { return v.Exception }).(pulumi.StringArrayOutput)
}

// FullStepIndex of step.
func (o DeploymentStepResponseOutput) FullStepIndex() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentStepResponse) string { return v.FullStepIndex }).(pulumi.StringOutput)
}

// Name of step.
func (o DeploymentStepResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentStepResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Start time of step.
func (o DeploymentStepResponseOutput) StartTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentStepResponse) string { return v.StartTimeUtc }).(pulumi.StringOutput)
}

// Status of step. Allowed values are 'Error', 'Success', 'InProgress'
func (o DeploymentStepResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentStepResponse) string { return v.Status }).(pulumi.StringOutput)
}

// List of nested steps of AzureStackHCI Cluster Deployment.
func (o DeploymentStepResponseOutput) Steps() DeploymentStepResponseArrayOutput {
	return o.ApplyT(func(v DeploymentStepResponse) []DeploymentStepResponse { return v.Steps }).(DeploymentStepResponseArrayOutput)
}

type DeploymentStepResponseArrayOutput struct{ *pulumi.OutputState }

func (DeploymentStepResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentStepResponse)(nil)).Elem()
}

func (o DeploymentStepResponseArrayOutput) ToDeploymentStepResponseArrayOutput() DeploymentStepResponseArrayOutput {
	return o
}

func (o DeploymentStepResponseArrayOutput) ToDeploymentStepResponseArrayOutputWithContext(ctx context.Context) DeploymentStepResponseArrayOutput {
	return o
}

func (o DeploymentStepResponseArrayOutput) Index(i pulumi.IntInput) DeploymentStepResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentStepResponse {
		return vs[0].([]DeploymentStepResponse)[vs[1].(int)]
	}).(DeploymentStepResponseOutput)
}

// The device Configuration for edge device.
type DeviceConfiguration struct {
	// Device metadata details.
	DeviceMetadata *string `pulumi:"deviceMetadata"`
	// NIC Details of device
	NicDetails []NicDetail `pulumi:"nicDetails"`
}

// DeviceConfigurationInput is an input type that accepts DeviceConfigurationArgs and DeviceConfigurationOutput values.
// You can construct a concrete instance of `DeviceConfigurationInput` via:
//
//	DeviceConfigurationArgs{...}
type DeviceConfigurationInput interface {
	pulumi.Input

	ToDeviceConfigurationOutput() DeviceConfigurationOutput
	ToDeviceConfigurationOutputWithContext(context.Context) DeviceConfigurationOutput
}

// The device Configuration for edge device.
type DeviceConfigurationArgs struct {
	// Device metadata details.
	DeviceMetadata pulumi.StringPtrInput `pulumi:"deviceMetadata"`
	// NIC Details of device
	NicDetails NicDetailArrayInput `pulumi:"nicDetails"`
}

func (DeviceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceConfiguration)(nil)).Elem()
}

func (i DeviceConfigurationArgs) ToDeviceConfigurationOutput() DeviceConfigurationOutput {
	return i.ToDeviceConfigurationOutputWithContext(context.Background())
}

func (i DeviceConfigurationArgs) ToDeviceConfigurationOutputWithContext(ctx context.Context) DeviceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceConfigurationOutput)
}

func (i DeviceConfigurationArgs) ToDeviceConfigurationPtrOutput() DeviceConfigurationPtrOutput {
	return i.ToDeviceConfigurationPtrOutputWithContext(context.Background())
}

func (i DeviceConfigurationArgs) ToDeviceConfigurationPtrOutputWithContext(ctx context.Context) DeviceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceConfigurationOutput).ToDeviceConfigurationPtrOutputWithContext(ctx)
}

// DeviceConfigurationPtrInput is an input type that accepts DeviceConfigurationArgs, DeviceConfigurationPtr and DeviceConfigurationPtrOutput values.
// You can construct a concrete instance of `DeviceConfigurationPtrInput` via:
//
//	        DeviceConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeviceConfigurationPtrInput interface {
	pulumi.Input

	ToDeviceConfigurationPtrOutput() DeviceConfigurationPtrOutput
	ToDeviceConfigurationPtrOutputWithContext(context.Context) DeviceConfigurationPtrOutput
}

type deviceConfigurationPtrType DeviceConfigurationArgs

func DeviceConfigurationPtr(v *DeviceConfigurationArgs) DeviceConfigurationPtrInput {
	return (*deviceConfigurationPtrType)(v)
}

func (*deviceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceConfiguration)(nil)).Elem()
}

func (i *deviceConfigurationPtrType) ToDeviceConfigurationPtrOutput() DeviceConfigurationPtrOutput {
	return i.ToDeviceConfigurationPtrOutputWithContext(context.Background())
}

func (i *deviceConfigurationPtrType) ToDeviceConfigurationPtrOutputWithContext(ctx context.Context) DeviceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceConfigurationPtrOutput)
}

// The device Configuration for edge device.
type DeviceConfigurationOutput struct{ *pulumi.OutputState }

func (DeviceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceConfiguration)(nil)).Elem()
}

func (o DeviceConfigurationOutput) ToDeviceConfigurationOutput() DeviceConfigurationOutput {
	return o
}

func (o DeviceConfigurationOutput) ToDeviceConfigurationOutputWithContext(ctx context.Context) DeviceConfigurationOutput {
	return o
}

func (o DeviceConfigurationOutput) ToDeviceConfigurationPtrOutput() DeviceConfigurationPtrOutput {
	return o.ToDeviceConfigurationPtrOutputWithContext(context.Background())
}

func (o DeviceConfigurationOutput) ToDeviceConfigurationPtrOutputWithContext(ctx context.Context) DeviceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeviceConfiguration) *DeviceConfiguration {
		return &v
	}).(DeviceConfigurationPtrOutput)
}

// Device metadata details.
func (o DeviceConfigurationOutput) DeviceMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceConfiguration) *string { return v.DeviceMetadata }).(pulumi.StringPtrOutput)
}

// NIC Details of device
func (o DeviceConfigurationOutput) NicDetails() NicDetailArrayOutput {
	return o.ApplyT(func(v DeviceConfiguration) []NicDetail { return v.NicDetails }).(NicDetailArrayOutput)
}

type DeviceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeviceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceConfiguration)(nil)).Elem()
}

func (o DeviceConfigurationPtrOutput) ToDeviceConfigurationPtrOutput() DeviceConfigurationPtrOutput {
	return o
}

func (o DeviceConfigurationPtrOutput) ToDeviceConfigurationPtrOutputWithContext(ctx context.Context) DeviceConfigurationPtrOutput {
	return o
}

func (o DeviceConfigurationPtrOutput) Elem() DeviceConfigurationOutput {
	return o.ApplyT(func(v *DeviceConfiguration) DeviceConfiguration {
		if v != nil {
			return *v
		}
		var ret DeviceConfiguration
		return ret
	}).(DeviceConfigurationOutput)
}

// Device metadata details.
func (o DeviceConfigurationPtrOutput) DeviceMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DeviceMetadata
	}).(pulumi.StringPtrOutput)
}

// NIC Details of device
func (o DeviceConfigurationPtrOutput) NicDetails() NicDetailArrayOutput {
	return o.ApplyT(func(v *DeviceConfiguration) []NicDetail {
		if v == nil {
			return nil
		}
		return v.NicDetails
	}).(NicDetailArrayOutput)
}

// The device Configuration for edge device.
type DeviceConfigurationResponse struct {
	// Device metadata details.
	DeviceMetadata *string `pulumi:"deviceMetadata"`
	// NIC Details of device
	NicDetails []NicDetailResponse `pulumi:"nicDetails"`
}

// The device Configuration for edge device.
type DeviceConfigurationResponseOutput struct{ *pulumi.OutputState }

func (DeviceConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceConfigurationResponse)(nil)).Elem()
}

func (o DeviceConfigurationResponseOutput) ToDeviceConfigurationResponseOutput() DeviceConfigurationResponseOutput {
	return o
}

func (o DeviceConfigurationResponseOutput) ToDeviceConfigurationResponseOutputWithContext(ctx context.Context) DeviceConfigurationResponseOutput {
	return o
}

// Device metadata details.
func (o DeviceConfigurationResponseOutput) DeviceMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceConfigurationResponse) *string { return v.DeviceMetadata }).(pulumi.StringPtrOutput)
}

// NIC Details of device
func (o DeviceConfigurationResponseOutput) NicDetails() NicDetailResponseArrayOutput {
	return o.ApplyT(func(v DeviceConfigurationResponse) []NicDetailResponse { return v.NicDetails }).(NicDetailResponseArrayOutput)
}

type DeviceConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (DeviceConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceConfigurationResponse)(nil)).Elem()
}

func (o DeviceConfigurationResponsePtrOutput) ToDeviceConfigurationResponsePtrOutput() DeviceConfigurationResponsePtrOutput {
	return o
}

func (o DeviceConfigurationResponsePtrOutput) ToDeviceConfigurationResponsePtrOutputWithContext(ctx context.Context) DeviceConfigurationResponsePtrOutput {
	return o
}

func (o DeviceConfigurationResponsePtrOutput) Elem() DeviceConfigurationResponseOutput {
	return o.ApplyT(func(v *DeviceConfigurationResponse) DeviceConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret DeviceConfigurationResponse
		return ret
	}).(DeviceConfigurationResponseOutput)
}

// Device metadata details.
func (o DeviceConfigurationResponsePtrOutput) DeviceMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeviceMetadata
	}).(pulumi.StringPtrOutput)
}

// NIC Details of device
func (o DeviceConfigurationResponsePtrOutput) NicDetails() NicDetailResponseArrayOutput {
	return o.ApplyT(func(v *DeviceConfigurationResponse) []NicDetailResponse {
		if v == nil {
			return nil
		}
		return v.NicDetails
	}).(NicDetailResponseArrayOutput)
}

// The ECE action plan deployment status for AzureStackHCI Cluster.
type EceActionStatusResponse struct {
	// Status of ECE action AzureStackHCI Cluster Deployment.
	Status string `pulumi:"status"`
	// List of steps of AzureStackHCI Cluster Deployment.
	Steps []DeploymentStepResponse `pulumi:"steps"`
}

// The ECE action plan deployment status for AzureStackHCI Cluster.
type EceActionStatusResponseOutput struct{ *pulumi.OutputState }

func (EceActionStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EceActionStatusResponse)(nil)).Elem()
}

func (o EceActionStatusResponseOutput) ToEceActionStatusResponseOutput() EceActionStatusResponseOutput {
	return o
}

func (o EceActionStatusResponseOutput) ToEceActionStatusResponseOutputWithContext(ctx context.Context) EceActionStatusResponseOutput {
	return o
}

// Status of ECE action AzureStackHCI Cluster Deployment.
func (o EceActionStatusResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v EceActionStatusResponse) string { return v.Status }).(pulumi.StringOutput)
}

// List of steps of AzureStackHCI Cluster Deployment.
func (o EceActionStatusResponseOutput) Steps() DeploymentStepResponseArrayOutput {
	return o.ApplyT(func(v EceActionStatusResponse) []DeploymentStepResponse { return v.Steps }).(DeploymentStepResponseArrayOutput)
}

// Protected parameters list stored in keyvault.
type EceDeploymentSecrets struct {
	// Secret name expected for Enterprise Cloud Engine (ECE) deployment.
	EceSecretName *string `pulumi:"eceSecretName"`
	// Secret URI stored in keyvault.
	SecretLocation *string `pulumi:"secretLocation"`
	// Secret name stored in keyvault.
	SecretName *string `pulumi:"secretName"`
}

// EceDeploymentSecretsInput is an input type that accepts EceDeploymentSecretsArgs and EceDeploymentSecretsOutput values.
// You can construct a concrete instance of `EceDeploymentSecretsInput` via:
//
//	EceDeploymentSecretsArgs{...}
type EceDeploymentSecretsInput interface {
	pulumi.Input

	ToEceDeploymentSecretsOutput() EceDeploymentSecretsOutput
	ToEceDeploymentSecretsOutputWithContext(context.Context) EceDeploymentSecretsOutput
}

// Protected parameters list stored in keyvault.
type EceDeploymentSecretsArgs struct {
	// Secret name expected for Enterprise Cloud Engine (ECE) deployment.
	EceSecretName pulumi.StringPtrInput `pulumi:"eceSecretName"`
	// Secret URI stored in keyvault.
	SecretLocation pulumi.StringPtrInput `pulumi:"secretLocation"`
	// Secret name stored in keyvault.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (EceDeploymentSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EceDeploymentSecrets)(nil)).Elem()
}

func (i EceDeploymentSecretsArgs) ToEceDeploymentSecretsOutput() EceDeploymentSecretsOutput {
	return i.ToEceDeploymentSecretsOutputWithContext(context.Background())
}

func (i EceDeploymentSecretsArgs) ToEceDeploymentSecretsOutputWithContext(ctx context.Context) EceDeploymentSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EceDeploymentSecretsOutput)
}

// EceDeploymentSecretsArrayInput is an input type that accepts EceDeploymentSecretsArray and EceDeploymentSecretsArrayOutput values.
// You can construct a concrete instance of `EceDeploymentSecretsArrayInput` via:
//
//	EceDeploymentSecretsArray{ EceDeploymentSecretsArgs{...} }
type EceDeploymentSecretsArrayInput interface {
	pulumi.Input

	ToEceDeploymentSecretsArrayOutput() EceDeploymentSecretsArrayOutput
	ToEceDeploymentSecretsArrayOutputWithContext(context.Context) EceDeploymentSecretsArrayOutput
}

type EceDeploymentSecretsArray []EceDeploymentSecretsInput

func (EceDeploymentSecretsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EceDeploymentSecrets)(nil)).Elem()
}

func (i EceDeploymentSecretsArray) ToEceDeploymentSecretsArrayOutput() EceDeploymentSecretsArrayOutput {
	return i.ToEceDeploymentSecretsArrayOutputWithContext(context.Background())
}

func (i EceDeploymentSecretsArray) ToEceDeploymentSecretsArrayOutputWithContext(ctx context.Context) EceDeploymentSecretsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EceDeploymentSecretsArrayOutput)
}

// Protected parameters list stored in keyvault.
type EceDeploymentSecretsOutput struct{ *pulumi.OutputState }

func (EceDeploymentSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EceDeploymentSecrets)(nil)).Elem()
}

func (o EceDeploymentSecretsOutput) ToEceDeploymentSecretsOutput() EceDeploymentSecretsOutput {
	return o
}

func (o EceDeploymentSecretsOutput) ToEceDeploymentSecretsOutputWithContext(ctx context.Context) EceDeploymentSecretsOutput {
	return o
}

// Secret name expected for Enterprise Cloud Engine (ECE) deployment.
func (o EceDeploymentSecretsOutput) EceSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EceDeploymentSecrets) *string { return v.EceSecretName }).(pulumi.StringPtrOutput)
}

// Secret URI stored in keyvault.
func (o EceDeploymentSecretsOutput) SecretLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EceDeploymentSecrets) *string { return v.SecretLocation }).(pulumi.StringPtrOutput)
}

// Secret name stored in keyvault.
func (o EceDeploymentSecretsOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EceDeploymentSecrets) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type EceDeploymentSecretsArrayOutput struct{ *pulumi.OutputState }

func (EceDeploymentSecretsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EceDeploymentSecrets)(nil)).Elem()
}

func (o EceDeploymentSecretsArrayOutput) ToEceDeploymentSecretsArrayOutput() EceDeploymentSecretsArrayOutput {
	return o
}

func (o EceDeploymentSecretsArrayOutput) ToEceDeploymentSecretsArrayOutputWithContext(ctx context.Context) EceDeploymentSecretsArrayOutput {
	return o
}

func (o EceDeploymentSecretsArrayOutput) Index(i pulumi.IntInput) EceDeploymentSecretsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EceDeploymentSecrets {
		return vs[0].([]EceDeploymentSecrets)[vs[1].(int)]
	}).(EceDeploymentSecretsOutput)
}

// Protected parameters list stored in keyvault.
type EceDeploymentSecretsResponse struct {
	// Secret name expected for Enterprise Cloud Engine (ECE) deployment.
	EceSecretName *string `pulumi:"eceSecretName"`
	// Secret URI stored in keyvault.
	SecretLocation *string `pulumi:"secretLocation"`
	// Secret name stored in keyvault.
	SecretName *string `pulumi:"secretName"`
}

// Protected parameters list stored in keyvault.
type EceDeploymentSecretsResponseOutput struct{ *pulumi.OutputState }

func (EceDeploymentSecretsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EceDeploymentSecretsResponse)(nil)).Elem()
}

func (o EceDeploymentSecretsResponseOutput) ToEceDeploymentSecretsResponseOutput() EceDeploymentSecretsResponseOutput {
	return o
}

func (o EceDeploymentSecretsResponseOutput) ToEceDeploymentSecretsResponseOutputWithContext(ctx context.Context) EceDeploymentSecretsResponseOutput {
	return o
}

// Secret name expected for Enterprise Cloud Engine (ECE) deployment.
func (o EceDeploymentSecretsResponseOutput) EceSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EceDeploymentSecretsResponse) *string { return v.EceSecretName }).(pulumi.StringPtrOutput)
}

// Secret URI stored in keyvault.
func (o EceDeploymentSecretsResponseOutput) SecretLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EceDeploymentSecretsResponse) *string { return v.SecretLocation }).(pulumi.StringPtrOutput)
}

// Secret name stored in keyvault.
func (o EceDeploymentSecretsResponseOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EceDeploymentSecretsResponse) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type EceDeploymentSecretsResponseArrayOutput struct{ *pulumi.OutputState }

func (EceDeploymentSecretsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EceDeploymentSecretsResponse)(nil)).Elem()
}

func (o EceDeploymentSecretsResponseArrayOutput) ToEceDeploymentSecretsResponseArrayOutput() EceDeploymentSecretsResponseArrayOutput {
	return o
}

func (o EceDeploymentSecretsResponseArrayOutput) ToEceDeploymentSecretsResponseArrayOutputWithContext(ctx context.Context) EceDeploymentSecretsResponseArrayOutput {
	return o
}

func (o EceDeploymentSecretsResponseArrayOutput) Index(i pulumi.IntInput) EceDeploymentSecretsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EceDeploymentSecretsResponse {
		return vs[0].([]EceDeploymentSecretsResponse)[vs[1].(int)]
	}).(EceDeploymentSecretsResponseOutput)
}

// The DeploymentStatus of AzureStackHCI Cluster.
type EceReportedPropertiesResponse struct {
	// Deployment status of AzureStackHCI Cluster Deployment.
	DeploymentStatus EceActionStatusResponse `pulumi:"deploymentStatus"`
	// validation status of AzureStackHCI Cluster Deployment.
	ValidationStatus EceActionStatusResponse `pulumi:"validationStatus"`
}

// The DeploymentStatus of AzureStackHCI Cluster.
type EceReportedPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EceReportedPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EceReportedPropertiesResponse)(nil)).Elem()
}

func (o EceReportedPropertiesResponseOutput) ToEceReportedPropertiesResponseOutput() EceReportedPropertiesResponseOutput {
	return o
}

func (o EceReportedPropertiesResponseOutput) ToEceReportedPropertiesResponseOutputWithContext(ctx context.Context) EceReportedPropertiesResponseOutput {
	return o
}

// Deployment status of AzureStackHCI Cluster Deployment.
func (o EceReportedPropertiesResponseOutput) DeploymentStatus() EceActionStatusResponseOutput {
	return o.ApplyT(func(v EceReportedPropertiesResponse) EceActionStatusResponse { return v.DeploymentStatus }).(EceActionStatusResponseOutput)
}

// validation status of AzureStackHCI Cluster Deployment.
func (o EceReportedPropertiesResponseOutput) ValidationStatus() EceActionStatusResponseOutput {
	return o.ApplyT(func(v EceReportedPropertiesResponse) EceActionStatusResponse { return v.ValidationStatus }).(EceActionStatusResponseOutput)
}

// details of validation failure
type ErrorDetailResponse struct {
	// Exception details while installing extension.
	Exception string `pulumi:"exception"`
}

// details of validation failure
type ErrorDetailResponseOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutput() ErrorDetailResponseOutput {
	return o
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutputWithContext(ctx context.Context) ErrorDetailResponseOutput {
	return o
}

// Exception details while installing extension.
func (o ErrorDetailResponseOutput) Exception() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Exception }).(pulumi.StringOutput)
}

type ErrorDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseArrayOutput) ToErrorDetailResponseArrayOutput() ErrorDetailResponseArrayOutput {
	return o
}

func (o ErrorDetailResponseArrayOutput) ToErrorDetailResponseArrayOutputWithContext(ctx context.Context) ErrorDetailResponseArrayOutput {
	return o
}

func (o ErrorDetailResponseArrayOutput) Index(i pulumi.IntInput) ErrorDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorDetailResponse {
		return vs[0].([]ErrorDetailResponse)[vs[1].(int)]
	}).(ErrorDetailResponseOutput)
}

// Describes the Extension Instance View.
type ExtensionInstanceViewResponse struct {
	// The extension name.
	Name *string `pulumi:"name"`
	// Instance view status.
	Status *ExtensionInstanceViewResponseStatus `pulumi:"status"`
	// Specifies the type of the extension; an example is "MicrosoftMonitoringAgent".
	Type *string `pulumi:"type"`
	// Specifies the version of the script handler.
	TypeHandlerVersion *string `pulumi:"typeHandlerVersion"`
}

// Describes the Extension Instance View.
type ExtensionInstanceViewResponseOutput struct{ *pulumi.OutputState }

func (ExtensionInstanceViewResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionInstanceViewResponse)(nil)).Elem()
}

func (o ExtensionInstanceViewResponseOutput) ToExtensionInstanceViewResponseOutput() ExtensionInstanceViewResponseOutput {
	return o
}

func (o ExtensionInstanceViewResponseOutput) ToExtensionInstanceViewResponseOutputWithContext(ctx context.Context) ExtensionInstanceViewResponseOutput {
	return o
}

// The extension name.
func (o ExtensionInstanceViewResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionInstanceViewResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Instance view status.
func (o ExtensionInstanceViewResponseOutput) Status() ExtensionInstanceViewResponseStatusPtrOutput {
	return o.ApplyT(func(v ExtensionInstanceViewResponse) *ExtensionInstanceViewResponseStatus { return v.Status }).(ExtensionInstanceViewResponseStatusPtrOutput)
}

// Specifies the type of the extension; an example is "MicrosoftMonitoringAgent".
func (o ExtensionInstanceViewResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionInstanceViewResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Specifies the version of the script handler.
func (o ExtensionInstanceViewResponseOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionInstanceViewResponse) *string { return v.TypeHandlerVersion }).(pulumi.StringPtrOutput)
}

// Instance view status.
type ExtensionInstanceViewResponseStatus struct {
	// The status code.
	Code *string `pulumi:"code"`
	// The short localizable label for the status.
	DisplayStatus *string `pulumi:"displayStatus"`
	// The level code.
	Level *string `pulumi:"level"`
	// The detailed status message, including for alerts and error messages.
	Message *string `pulumi:"message"`
	// The time of the status.
	Time *string `pulumi:"time"`
}

// Instance view status.
type ExtensionInstanceViewResponseStatusOutput struct{ *pulumi.OutputState }

func (ExtensionInstanceViewResponseStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionInstanceViewResponseStatus)(nil)).Elem()
}

func (o ExtensionInstanceViewResponseStatusOutput) ToExtensionInstanceViewResponseStatusOutput() ExtensionInstanceViewResponseStatusOutput {
	return o
}

func (o ExtensionInstanceViewResponseStatusOutput) ToExtensionInstanceViewResponseStatusOutputWithContext(ctx context.Context) ExtensionInstanceViewResponseStatusOutput {
	return o
}

// The status code.
func (o ExtensionInstanceViewResponseStatusOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionInstanceViewResponseStatus) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// The short localizable label for the status.
func (o ExtensionInstanceViewResponseStatusOutput) DisplayStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionInstanceViewResponseStatus) *string { return v.DisplayStatus }).(pulumi.StringPtrOutput)
}

// The level code.
func (o ExtensionInstanceViewResponseStatusOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionInstanceViewResponseStatus) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// The detailed status message, including for alerts and error messages.
func (o ExtensionInstanceViewResponseStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionInstanceViewResponseStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The time of the status.
func (o ExtensionInstanceViewResponseStatusOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionInstanceViewResponseStatus) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type ExtensionInstanceViewResponseStatusPtrOutput struct{ *pulumi.OutputState }

func (ExtensionInstanceViewResponseStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionInstanceViewResponseStatus)(nil)).Elem()
}

func (o ExtensionInstanceViewResponseStatusPtrOutput) ToExtensionInstanceViewResponseStatusPtrOutput() ExtensionInstanceViewResponseStatusPtrOutput {
	return o
}

func (o ExtensionInstanceViewResponseStatusPtrOutput) ToExtensionInstanceViewResponseStatusPtrOutputWithContext(ctx context.Context) ExtensionInstanceViewResponseStatusPtrOutput {
	return o
}

func (o ExtensionInstanceViewResponseStatusPtrOutput) Elem() ExtensionInstanceViewResponseStatusOutput {
	return o.ApplyT(func(v *ExtensionInstanceViewResponseStatus) ExtensionInstanceViewResponseStatus {
		if v != nil {
			return *v
		}
		var ret ExtensionInstanceViewResponseStatus
		return ret
	}).(ExtensionInstanceViewResponseStatusOutput)
}

// The status code.
func (o ExtensionInstanceViewResponseStatusPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionInstanceViewResponseStatus) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// The short localizable label for the status.
func (o ExtensionInstanceViewResponseStatusPtrOutput) DisplayStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionInstanceViewResponseStatus) *string {
		if v == nil {
			return nil
		}
		return v.DisplayStatus
	}).(pulumi.StringPtrOutput)
}

// The level code.
func (o ExtensionInstanceViewResponseStatusPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionInstanceViewResponseStatus) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// The detailed status message, including for alerts and error messages.
func (o ExtensionInstanceViewResponseStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionInstanceViewResponseStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// The time of the status.
func (o ExtensionInstanceViewResponseStatusPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtensionInstanceViewResponseStatus) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

// Extensions details for edge device.
type ExtensionProfileResponse struct {
	// List of Arc extensions installed on edge device.
	Extensions []ExtensionResponse `pulumi:"extensions"`
}

// Extensions details for edge device.
type ExtensionProfileResponseOutput struct{ *pulumi.OutputState }

func (ExtensionProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionProfileResponse)(nil)).Elem()
}

func (o ExtensionProfileResponseOutput) ToExtensionProfileResponseOutput() ExtensionProfileResponseOutput {
	return o
}

func (o ExtensionProfileResponseOutput) ToExtensionProfileResponseOutputWithContext(ctx context.Context) ExtensionProfileResponseOutput {
	return o
}

// List of Arc extensions installed on edge device.
func (o ExtensionProfileResponseOutput) Extensions() ExtensionResponseArrayOutput {
	return o.ApplyT(func(v ExtensionProfileResponse) []ExtensionResponse { return v.Extensions }).(ExtensionResponseArrayOutput)
}

// Arc extension installed on edge device.
type ExtensionResponse struct {
	// Error details while installing Arc extension.
	ErrorDetails []ErrorDetailResponse `pulumi:"errorDetails"`
	// Arc extension name installed on edge device.
	ExtensionName string `pulumi:"extensionName"`
	// Arc Extension Azure resource id.
	ExtensionResourceId string `pulumi:"extensionResourceId"`
	// Extension managed by user or Azure.
	ManagedBy string `pulumi:"managedBy"`
	// Arc extension state from arc machine extension.
	State string `pulumi:"state"`
	// Extension version installed.
	TypeHandlerVersion string `pulumi:"typeHandlerVersion"`
}

// Defaults sets the appropriate defaults for ExtensionResponse
func (val *ExtensionResponse) Defaults() *ExtensionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.ManagedBy) {
		tmp.ManagedBy = "Azure"
	}
	return &tmp
}

// Arc extension installed on edge device.
type ExtensionResponseOutput struct{ *pulumi.OutputState }

func (ExtensionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionResponse)(nil)).Elem()
}

func (o ExtensionResponseOutput) ToExtensionResponseOutput() ExtensionResponseOutput {
	return o
}

func (o ExtensionResponseOutput) ToExtensionResponseOutputWithContext(ctx context.Context) ExtensionResponseOutput {
	return o
}

// Error details while installing Arc extension.
func (o ExtensionResponseOutput) ErrorDetails() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v ExtensionResponse) []ErrorDetailResponse { return v.ErrorDetails }).(ErrorDetailResponseArrayOutput)
}

// Arc extension name installed on edge device.
func (o ExtensionResponseOutput) ExtensionName() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionResponse) string { return v.ExtensionName }).(pulumi.StringOutput)
}

// Arc Extension Azure resource id.
func (o ExtensionResponseOutput) ExtensionResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionResponse) string { return v.ExtensionResourceId }).(pulumi.StringOutput)
}

// Extension managed by user or Azure.
func (o ExtensionResponseOutput) ManagedBy() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionResponse) string { return v.ManagedBy }).(pulumi.StringOutput)
}

// Arc extension state from arc machine extension.
func (o ExtensionResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionResponse) string { return v.State }).(pulumi.StringOutput)
}

// Extension version installed.
func (o ExtensionResponseOutput) TypeHandlerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionResponse) string { return v.TypeHandlerVersion }).(pulumi.StringOutput)
}

type ExtensionResponseArrayOutput struct{ *pulumi.OutputState }

func (ExtensionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionResponse)(nil)).Elem()
}

func (o ExtensionResponseArrayOutput) ToExtensionResponseArrayOutput() ExtensionResponseArrayOutput {
	return o
}

func (o ExtensionResponseArrayOutput) ToExtensionResponseArrayOutputWithContext(ctx context.Context) ExtensionResponseArrayOutput {
	return o
}

func (o ExtensionResponseArrayOutput) Index(i pulumi.IntInput) ExtensionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtensionResponse {
		return vs[0].([]ExtensionResponse)[vs[1].(int)]
	}).(ExtensionResponseOutput)
}

// properties for Arc-enabled edge device with HCI OS.
type HciEdgeDeviceProperties struct {
	// Device Configuration
	DeviceConfiguration *DeviceConfiguration `pulumi:"deviceConfiguration"`
}

// HciEdgeDevicePropertiesInput is an input type that accepts HciEdgeDevicePropertiesArgs and HciEdgeDevicePropertiesOutput values.
// You can construct a concrete instance of `HciEdgeDevicePropertiesInput` via:
//
//	HciEdgeDevicePropertiesArgs{...}
type HciEdgeDevicePropertiesInput interface {
	pulumi.Input

	ToHciEdgeDevicePropertiesOutput() HciEdgeDevicePropertiesOutput
	ToHciEdgeDevicePropertiesOutputWithContext(context.Context) HciEdgeDevicePropertiesOutput
}

// properties for Arc-enabled edge device with HCI OS.
type HciEdgeDevicePropertiesArgs struct {
	// Device Configuration
	DeviceConfiguration DeviceConfigurationPtrInput `pulumi:"deviceConfiguration"`
}

func (HciEdgeDevicePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HciEdgeDeviceProperties)(nil)).Elem()
}

func (i HciEdgeDevicePropertiesArgs) ToHciEdgeDevicePropertiesOutput() HciEdgeDevicePropertiesOutput {
	return i.ToHciEdgeDevicePropertiesOutputWithContext(context.Background())
}

func (i HciEdgeDevicePropertiesArgs) ToHciEdgeDevicePropertiesOutputWithContext(ctx context.Context) HciEdgeDevicePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HciEdgeDevicePropertiesOutput)
}

func (i HciEdgeDevicePropertiesArgs) ToHciEdgeDevicePropertiesPtrOutput() HciEdgeDevicePropertiesPtrOutput {
	return i.ToHciEdgeDevicePropertiesPtrOutputWithContext(context.Background())
}

func (i HciEdgeDevicePropertiesArgs) ToHciEdgeDevicePropertiesPtrOutputWithContext(ctx context.Context) HciEdgeDevicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HciEdgeDevicePropertiesOutput).ToHciEdgeDevicePropertiesPtrOutputWithContext(ctx)
}

// HciEdgeDevicePropertiesPtrInput is an input type that accepts HciEdgeDevicePropertiesArgs, HciEdgeDevicePropertiesPtr and HciEdgeDevicePropertiesPtrOutput values.
// You can construct a concrete instance of `HciEdgeDevicePropertiesPtrInput` via:
//
//	        HciEdgeDevicePropertiesArgs{...}
//
//	or:
//
//	        nil
type HciEdgeDevicePropertiesPtrInput interface {
	pulumi.Input

	ToHciEdgeDevicePropertiesPtrOutput() HciEdgeDevicePropertiesPtrOutput
	ToHciEdgeDevicePropertiesPtrOutputWithContext(context.Context) HciEdgeDevicePropertiesPtrOutput
}

type hciEdgeDevicePropertiesPtrType HciEdgeDevicePropertiesArgs

func HciEdgeDevicePropertiesPtr(v *HciEdgeDevicePropertiesArgs) HciEdgeDevicePropertiesPtrInput {
	return (*hciEdgeDevicePropertiesPtrType)(v)
}

func (*hciEdgeDevicePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HciEdgeDeviceProperties)(nil)).Elem()
}

func (i *hciEdgeDevicePropertiesPtrType) ToHciEdgeDevicePropertiesPtrOutput() HciEdgeDevicePropertiesPtrOutput {
	return i.ToHciEdgeDevicePropertiesPtrOutputWithContext(context.Background())
}

func (i *hciEdgeDevicePropertiesPtrType) ToHciEdgeDevicePropertiesPtrOutputWithContext(ctx context.Context) HciEdgeDevicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HciEdgeDevicePropertiesPtrOutput)
}

// properties for Arc-enabled edge device with HCI OS.
type HciEdgeDevicePropertiesOutput struct{ *pulumi.OutputState }

func (HciEdgeDevicePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HciEdgeDeviceProperties)(nil)).Elem()
}

func (o HciEdgeDevicePropertiesOutput) ToHciEdgeDevicePropertiesOutput() HciEdgeDevicePropertiesOutput {
	return o
}

func (o HciEdgeDevicePropertiesOutput) ToHciEdgeDevicePropertiesOutputWithContext(ctx context.Context) HciEdgeDevicePropertiesOutput {
	return o
}

func (o HciEdgeDevicePropertiesOutput) ToHciEdgeDevicePropertiesPtrOutput() HciEdgeDevicePropertiesPtrOutput {
	return o.ToHciEdgeDevicePropertiesPtrOutputWithContext(context.Background())
}

func (o HciEdgeDevicePropertiesOutput) ToHciEdgeDevicePropertiesPtrOutputWithContext(ctx context.Context) HciEdgeDevicePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HciEdgeDeviceProperties) *HciEdgeDeviceProperties {
		return &v
	}).(HciEdgeDevicePropertiesPtrOutput)
}

// Device Configuration
func (o HciEdgeDevicePropertiesOutput) DeviceConfiguration() DeviceConfigurationPtrOutput {
	return o.ApplyT(func(v HciEdgeDeviceProperties) *DeviceConfiguration { return v.DeviceConfiguration }).(DeviceConfigurationPtrOutput)
}

type HciEdgeDevicePropertiesPtrOutput struct{ *pulumi.OutputState }

func (HciEdgeDevicePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HciEdgeDeviceProperties)(nil)).Elem()
}

func (o HciEdgeDevicePropertiesPtrOutput) ToHciEdgeDevicePropertiesPtrOutput() HciEdgeDevicePropertiesPtrOutput {
	return o
}

func (o HciEdgeDevicePropertiesPtrOutput) ToHciEdgeDevicePropertiesPtrOutputWithContext(ctx context.Context) HciEdgeDevicePropertiesPtrOutput {
	return o
}

func (o HciEdgeDevicePropertiesPtrOutput) Elem() HciEdgeDevicePropertiesOutput {
	return o.ApplyT(func(v *HciEdgeDeviceProperties) HciEdgeDeviceProperties {
		if v != nil {
			return *v
		}
		var ret HciEdgeDeviceProperties
		return ret
	}).(HciEdgeDevicePropertiesOutput)
}

// Device Configuration
func (o HciEdgeDevicePropertiesPtrOutput) DeviceConfiguration() DeviceConfigurationPtrOutput {
	return o.ApplyT(func(v *HciEdgeDeviceProperties) *DeviceConfiguration {
		if v == nil {
			return nil
		}
		return v.DeviceConfiguration
	}).(DeviceConfigurationPtrOutput)
}

// properties for Arc-enabled edge device with HCI OS.
type HciEdgeDevicePropertiesResponse struct {
	// Device Configuration
	DeviceConfiguration *DeviceConfigurationResponse `pulumi:"deviceConfiguration"`
	// Provisioning state of edgeDevice resource
	ProvisioningState string `pulumi:"provisioningState"`
	// The instance view of all current configurations on HCI device.
	ReportedProperties HciReportedPropertiesResponse `pulumi:"reportedProperties"`
}

// properties for Arc-enabled edge device with HCI OS.
type HciEdgeDevicePropertiesResponseOutput struct{ *pulumi.OutputState }

func (HciEdgeDevicePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HciEdgeDevicePropertiesResponse)(nil)).Elem()
}

func (o HciEdgeDevicePropertiesResponseOutput) ToHciEdgeDevicePropertiesResponseOutput() HciEdgeDevicePropertiesResponseOutput {
	return o
}

func (o HciEdgeDevicePropertiesResponseOutput) ToHciEdgeDevicePropertiesResponseOutputWithContext(ctx context.Context) HciEdgeDevicePropertiesResponseOutput {
	return o
}

// Device Configuration
func (o HciEdgeDevicePropertiesResponseOutput) DeviceConfiguration() DeviceConfigurationResponsePtrOutput {
	return o.ApplyT(func(v HciEdgeDevicePropertiesResponse) *DeviceConfigurationResponse { return v.DeviceConfiguration }).(DeviceConfigurationResponsePtrOutput)
}

// Provisioning state of edgeDevice resource
func (o HciEdgeDevicePropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v HciEdgeDevicePropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The instance view of all current configurations on HCI device.
func (o HciEdgeDevicePropertiesResponseOutput) ReportedProperties() HciReportedPropertiesResponseOutput {
	return o.ApplyT(func(v HciEdgeDevicePropertiesResponse) HciReportedPropertiesResponse { return v.ReportedProperties }).(HciReportedPropertiesResponseOutput)
}

// The network profile of a device.
type HciNetworkProfileResponse struct {
	// HostNetwork config to deploy AzureStackHCI Cluster.
	HostNetwork HostNetworkResponse `pulumi:"hostNetwork"`
	// List of NIC Details of device.
	NicDetails []HciNicDetailResponse `pulumi:"nicDetails"`
	// List of switch details for edge device.
	SwitchDetails []SwitchDetailResponse `pulumi:"switchDetails"`
}

// The network profile of a device.
type HciNetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (HciNetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HciNetworkProfileResponse)(nil)).Elem()
}

func (o HciNetworkProfileResponseOutput) ToHciNetworkProfileResponseOutput() HciNetworkProfileResponseOutput {
	return o
}

func (o HciNetworkProfileResponseOutput) ToHciNetworkProfileResponseOutputWithContext(ctx context.Context) HciNetworkProfileResponseOutput {
	return o
}

// HostNetwork config to deploy AzureStackHCI Cluster.
func (o HciNetworkProfileResponseOutput) HostNetwork() HostNetworkResponseOutput {
	return o.ApplyT(func(v HciNetworkProfileResponse) HostNetworkResponse { return v.HostNetwork }).(HostNetworkResponseOutput)
}

// List of NIC Details of device.
func (o HciNetworkProfileResponseOutput) NicDetails() HciNicDetailResponseArrayOutput {
	return o.ApplyT(func(v HciNetworkProfileResponse) []HciNicDetailResponse { return v.NicDetails }).(HciNicDetailResponseArrayOutput)
}

// List of switch details for edge device.
func (o HciNetworkProfileResponseOutput) SwitchDetails() SwitchDetailResponseArrayOutput {
	return o.ApplyT(func(v HciNetworkProfileResponse) []SwitchDetailResponse { return v.SwitchDetails }).(SwitchDetailResponseArrayOutput)
}

// The NIC Detail of a device.
type HciNicDetailResponse struct {
	// Adapter Name of NIC
	AdapterName string `pulumi:"adapterName"`
	// Component Id of NIC
	ComponentId string `pulumi:"componentId"`
	// Default Gateway of NIC
	DefaultGateway string `pulumi:"defaultGateway"`
	// Default Isolation of Management NIC
	DefaultIsolationId string `pulumi:"defaultIsolationId"`
	// DNS Servers for NIC
	DnsServers []string `pulumi:"dnsServers"`
	// Driver Version of NIC
	DriverVersion string `pulumi:"driverVersion"`
	// Interface Description of NIC
	InterfaceDescription string `pulumi:"interfaceDescription"`
	// Subnet Mask of NIC
	Ip4Address string `pulumi:"ip4Address"`
	// MAC address information of NIC.
	MacAddress string `pulumi:"macAddress"`
	// The status of NIC, up, disconnected.
	NicStatus string `pulumi:"nicStatus"`
	// The type of NIC, physical, virtual, management.
	NicType string `pulumi:"nicType"`
	// The slot attached to the NIC.
	Slot string `pulumi:"slot"`
	// Subnet Mask of NIC
	SubnetMask string `pulumi:"subnetMask"`
	// The switch attached to the NIC, if any.
	SwitchName string `pulumi:"switchName"`
	// The VLAN ID of the physical NIC.
	VlanId string `pulumi:"vlanId"`
}

// The NIC Detail of a device.
type HciNicDetailResponseOutput struct{ *pulumi.OutputState }

func (HciNicDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HciNicDetailResponse)(nil)).Elem()
}

func (o HciNicDetailResponseOutput) ToHciNicDetailResponseOutput() HciNicDetailResponseOutput {
	return o
}

func (o HciNicDetailResponseOutput) ToHciNicDetailResponseOutputWithContext(ctx context.Context) HciNicDetailResponseOutput {
	return o
}

// Adapter Name of NIC
func (o HciNicDetailResponseOutput) AdapterName() pulumi.StringOutput {
	return o.ApplyT(func(v HciNicDetailResponse) string { return v.AdapterName }).(pulumi.StringOutput)
}

// Component Id of NIC
func (o HciNicDetailResponseOutput) ComponentId() pulumi.StringOutput {
	return o.ApplyT(func(v HciNicDetailResponse) string { return v.ComponentId }).(pulumi.StringOutput)
}

// Default Gateway of NIC
func (o HciNicDetailResponseOutput) DefaultGateway() pulumi.StringOutput {
	return o.ApplyT(func(v HciNicDetailResponse) string { return v.DefaultGateway }).(pulumi.StringOutput)
}

// Default Isolation of Management NIC
func (o HciNicDetailResponseOutput) DefaultIsolationId() pulumi.StringOutput {
	return o.ApplyT(func(v HciNicDetailResponse) string { return v.DefaultIsolationId }).(pulumi.StringOutput)
}

// DNS Servers for NIC
func (o HciNicDetailResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HciNicDetailResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Driver Version of NIC
func (o HciNicDetailResponseOutput) DriverVersion() pulumi.StringOutput {
	return o.ApplyT(func(v HciNicDetailResponse) string { return v.DriverVersion }).(pulumi.StringOutput)
}

// Interface Description of NIC
func (o HciNicDetailResponseOutput) InterfaceDescription() pulumi.StringOutput {
	return o.ApplyT(func(v HciNicDetailResponse) string { return v.InterfaceDescription }).(pulumi.StringOutput)
}

// Subnet Mask of NIC
func (o HciNicDetailResponseOutput) Ip4Address() pulumi.StringOutput {
	return o.ApplyT(func(v HciNicDetailResponse) string { return v.Ip4Address }).(pulumi.StringOutput)
}

// MAC address information of NIC.
func (o HciNicDetailResponseOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v HciNicDetailResponse) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The status of NIC, up, disconnected.
func (o HciNicDetailResponseOutput) NicStatus() pulumi.StringOutput {
	return o.ApplyT(func(v HciNicDetailResponse) string { return v.NicStatus }).(pulumi.StringOutput)
}

// The type of NIC, physical, virtual, management.
func (o HciNicDetailResponseOutput) NicType() pulumi.StringOutput {
	return o.ApplyT(func(v HciNicDetailResponse) string { return v.NicType }).(pulumi.StringOutput)
}

// The slot attached to the NIC.
func (o HciNicDetailResponseOutput) Slot() pulumi.StringOutput {
	return o.ApplyT(func(v HciNicDetailResponse) string { return v.Slot }).(pulumi.StringOutput)
}

// Subnet Mask of NIC
func (o HciNicDetailResponseOutput) SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v HciNicDetailResponse) string { return v.SubnetMask }).(pulumi.StringOutput)
}

// The switch attached to the NIC, if any.
func (o HciNicDetailResponseOutput) SwitchName() pulumi.StringOutput {
	return o.ApplyT(func(v HciNicDetailResponse) string { return v.SwitchName }).(pulumi.StringOutput)
}

// The VLAN ID of the physical NIC.
func (o HciNicDetailResponseOutput) VlanId() pulumi.StringOutput {
	return o.ApplyT(func(v HciNicDetailResponse) string { return v.VlanId }).(pulumi.StringOutput)
}

type HciNicDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (HciNicDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HciNicDetailResponse)(nil)).Elem()
}

func (o HciNicDetailResponseArrayOutput) ToHciNicDetailResponseArrayOutput() HciNicDetailResponseArrayOutput {
	return o
}

func (o HciNicDetailResponseArrayOutput) ToHciNicDetailResponseArrayOutputWithContext(ctx context.Context) HciNicDetailResponseArrayOutput {
	return o
}

func (o HciNicDetailResponseArrayOutput) Index(i pulumi.IntInput) HciNicDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HciNicDetailResponse {
		return vs[0].([]HciNicDetailResponse)[vs[1].(int)]
	}).(HciNicDetailResponseOutput)
}

// OS configurations for HCI device.
type HciOsProfileResponse struct {
	// The boot type of the device. e.g. UEFI, Legacy etc
	BootType string `pulumi:"bootType"`
}

// OS configurations for HCI device.
type HciOsProfileResponseOutput struct{ *pulumi.OutputState }

func (HciOsProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HciOsProfileResponse)(nil)).Elem()
}

func (o HciOsProfileResponseOutput) ToHciOsProfileResponseOutput() HciOsProfileResponseOutput {
	return o
}

func (o HciOsProfileResponseOutput) ToHciOsProfileResponseOutputWithContext(ctx context.Context) HciOsProfileResponseOutput {
	return o
}

// The boot type of the device. e.g. UEFI, Legacy etc
func (o HciOsProfileResponseOutput) BootType() pulumi.StringOutput {
	return o.ApplyT(func(v HciOsProfileResponse) string { return v.BootType }).(pulumi.StringOutput)
}

// The device Configuration for HCI device.
type HciReportedPropertiesResponse struct {
	// edge device state.
	DeviceState string `pulumi:"deviceState"`
	// Extensions details for edge device.
	ExtensionProfile ExtensionProfileResponse `pulumi:"extensionProfile"`
	// HCI device network information.
	NetworkProfile HciNetworkProfileResponse `pulumi:"networkProfile"`
	// HCI device OS specific information.
	OsProfile HciOsProfileResponse `pulumi:"osProfile"`
	// Solution builder extension (SBE) deployment package information.
	SbeDeploymentPackageInfo SbeDeploymentPackageInfoResponse `pulumi:"sbeDeploymentPackageInfo"`
}

// The device Configuration for HCI device.
type HciReportedPropertiesResponseOutput struct{ *pulumi.OutputState }

func (HciReportedPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HciReportedPropertiesResponse)(nil)).Elem()
}

func (o HciReportedPropertiesResponseOutput) ToHciReportedPropertiesResponseOutput() HciReportedPropertiesResponseOutput {
	return o
}

func (o HciReportedPropertiesResponseOutput) ToHciReportedPropertiesResponseOutputWithContext(ctx context.Context) HciReportedPropertiesResponseOutput {
	return o
}

// edge device state.
func (o HciReportedPropertiesResponseOutput) DeviceState() pulumi.StringOutput {
	return o.ApplyT(func(v HciReportedPropertiesResponse) string { return v.DeviceState }).(pulumi.StringOutput)
}

// Extensions details for edge device.
func (o HciReportedPropertiesResponseOutput) ExtensionProfile() ExtensionProfileResponseOutput {
	return o.ApplyT(func(v HciReportedPropertiesResponse) ExtensionProfileResponse { return v.ExtensionProfile }).(ExtensionProfileResponseOutput)
}

// HCI device network information.
func (o HciReportedPropertiesResponseOutput) NetworkProfile() HciNetworkProfileResponseOutput {
	return o.ApplyT(func(v HciReportedPropertiesResponse) HciNetworkProfileResponse { return v.NetworkProfile }).(HciNetworkProfileResponseOutput)
}

// HCI device OS specific information.
func (o HciReportedPropertiesResponseOutput) OsProfile() HciOsProfileResponseOutput {
	return o.ApplyT(func(v HciReportedPropertiesResponse) HciOsProfileResponse { return v.OsProfile }).(HciOsProfileResponseOutput)
}

// Solution builder extension (SBE) deployment package information.
func (o HciReportedPropertiesResponseOutput) SbeDeploymentPackageInfo() SbeDeploymentPackageInfoResponseOutput {
	return o.ApplyT(func(v HciReportedPropertiesResponse) SbeDeploymentPackageInfoResponse {
		return v.SbeDeploymentPackageInfo
	}).(SbeDeploymentPackageInfoResponseOutput)
}

// The HostNetwork of a cluster.
type HostNetwork struct {
	// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.
	EnableStorageAutoIp *bool `pulumi:"enableStorageAutoIp"`
	// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.
	Intents []Intents `pulumi:"intents"`
	// Defines how the storage adapters between nodes are connected either switch or switch less..
	StorageConnectivitySwitchless *bool `pulumi:"storageConnectivitySwitchless"`
	// List of StorageNetworks config to deploy AzureStackHCI Cluster.
	StorageNetworks []StorageNetworks `pulumi:"storageNetworks"`
}

// Defaults sets the appropriate defaults for HostNetwork
func (val *HostNetwork) Defaults() *HostNetwork {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableStorageAutoIp == nil {
		enableStorageAutoIp_ := false
		tmp.EnableStorageAutoIp = &enableStorageAutoIp_
	}
	if tmp.StorageConnectivitySwitchless == nil {
		storageConnectivitySwitchless_ := false
		tmp.StorageConnectivitySwitchless = &storageConnectivitySwitchless_
	}
	return &tmp
}

// HostNetworkInput is an input type that accepts HostNetworkArgs and HostNetworkOutput values.
// You can construct a concrete instance of `HostNetworkInput` via:
//
//	HostNetworkArgs{...}
type HostNetworkInput interface {
	pulumi.Input

	ToHostNetworkOutput() HostNetworkOutput
	ToHostNetworkOutputWithContext(context.Context) HostNetworkOutput
}

// The HostNetwork of a cluster.
type HostNetworkArgs struct {
	// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.
	EnableStorageAutoIp pulumi.BoolPtrInput `pulumi:"enableStorageAutoIp"`
	// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.
	Intents IntentsArrayInput `pulumi:"intents"`
	// Defines how the storage adapters between nodes are connected either switch or switch less..
	StorageConnectivitySwitchless pulumi.BoolPtrInput `pulumi:"storageConnectivitySwitchless"`
	// List of StorageNetworks config to deploy AzureStackHCI Cluster.
	StorageNetworks StorageNetworksArrayInput `pulumi:"storageNetworks"`
}

// Defaults sets the appropriate defaults for HostNetworkArgs
func (val *HostNetworkArgs) Defaults() *HostNetworkArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableStorageAutoIp == nil {
		tmp.EnableStorageAutoIp = pulumi.BoolPtr(false)
	}
	if tmp.StorageConnectivitySwitchless == nil {
		tmp.StorageConnectivitySwitchless = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (HostNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNetwork)(nil)).Elem()
}

func (i HostNetworkArgs) ToHostNetworkOutput() HostNetworkOutput {
	return i.ToHostNetworkOutputWithContext(context.Background())
}

func (i HostNetworkArgs) ToHostNetworkOutputWithContext(ctx context.Context) HostNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNetworkOutput)
}

func (i HostNetworkArgs) ToHostNetworkPtrOutput() HostNetworkPtrOutput {
	return i.ToHostNetworkPtrOutputWithContext(context.Background())
}

func (i HostNetworkArgs) ToHostNetworkPtrOutputWithContext(ctx context.Context) HostNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNetworkOutput).ToHostNetworkPtrOutputWithContext(ctx)
}

// HostNetworkPtrInput is an input type that accepts HostNetworkArgs, HostNetworkPtr and HostNetworkPtrOutput values.
// You can construct a concrete instance of `HostNetworkPtrInput` via:
//
//	        HostNetworkArgs{...}
//
//	or:
//
//	        nil
type HostNetworkPtrInput interface {
	pulumi.Input

	ToHostNetworkPtrOutput() HostNetworkPtrOutput
	ToHostNetworkPtrOutputWithContext(context.Context) HostNetworkPtrOutput
}

type hostNetworkPtrType HostNetworkArgs

func HostNetworkPtr(v *HostNetworkArgs) HostNetworkPtrInput {
	return (*hostNetworkPtrType)(v)
}

func (*hostNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostNetwork)(nil)).Elem()
}

func (i *hostNetworkPtrType) ToHostNetworkPtrOutput() HostNetworkPtrOutput {
	return i.ToHostNetworkPtrOutputWithContext(context.Background())
}

func (i *hostNetworkPtrType) ToHostNetworkPtrOutputWithContext(ctx context.Context) HostNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNetworkPtrOutput)
}

// The HostNetwork of a cluster.
type HostNetworkOutput struct{ *pulumi.OutputState }

func (HostNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNetwork)(nil)).Elem()
}

func (o HostNetworkOutput) ToHostNetworkOutput() HostNetworkOutput {
	return o
}

func (o HostNetworkOutput) ToHostNetworkOutputWithContext(ctx context.Context) HostNetworkOutput {
	return o
}

func (o HostNetworkOutput) ToHostNetworkPtrOutput() HostNetworkPtrOutput {
	return o.ToHostNetworkPtrOutputWithContext(context.Background())
}

func (o HostNetworkOutput) ToHostNetworkPtrOutputWithContext(ctx context.Context) HostNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostNetwork) *HostNetwork {
		return &v
	}).(HostNetworkPtrOutput)
}

// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.
func (o HostNetworkOutput) EnableStorageAutoIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostNetwork) *bool { return v.EnableStorageAutoIp }).(pulumi.BoolPtrOutput)
}

// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.
func (o HostNetworkOutput) Intents() IntentsArrayOutput {
	return o.ApplyT(func(v HostNetwork) []Intents { return v.Intents }).(IntentsArrayOutput)
}

// Defines how the storage adapters between nodes are connected either switch or switch less..
func (o HostNetworkOutput) StorageConnectivitySwitchless() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostNetwork) *bool { return v.StorageConnectivitySwitchless }).(pulumi.BoolPtrOutput)
}

// List of StorageNetworks config to deploy AzureStackHCI Cluster.
func (o HostNetworkOutput) StorageNetworks() StorageNetworksArrayOutput {
	return o.ApplyT(func(v HostNetwork) []StorageNetworks { return v.StorageNetworks }).(StorageNetworksArrayOutput)
}

type HostNetworkPtrOutput struct{ *pulumi.OutputState }

func (HostNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostNetwork)(nil)).Elem()
}

func (o HostNetworkPtrOutput) ToHostNetworkPtrOutput() HostNetworkPtrOutput {
	return o
}

func (o HostNetworkPtrOutput) ToHostNetworkPtrOutputWithContext(ctx context.Context) HostNetworkPtrOutput {
	return o
}

func (o HostNetworkPtrOutput) Elem() HostNetworkOutput {
	return o.ApplyT(func(v *HostNetwork) HostNetwork {
		if v != nil {
			return *v
		}
		var ret HostNetwork
		return ret
	}).(HostNetworkOutput)
}

// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.
func (o HostNetworkPtrOutput) EnableStorageAutoIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HostNetwork) *bool {
		if v == nil {
			return nil
		}
		return v.EnableStorageAutoIp
	}).(pulumi.BoolPtrOutput)
}

// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.
func (o HostNetworkPtrOutput) Intents() IntentsArrayOutput {
	return o.ApplyT(func(v *HostNetwork) []Intents {
		if v == nil {
			return nil
		}
		return v.Intents
	}).(IntentsArrayOutput)
}

// Defines how the storage adapters between nodes are connected either switch or switch less..
func (o HostNetworkPtrOutput) StorageConnectivitySwitchless() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HostNetwork) *bool {
		if v == nil {
			return nil
		}
		return v.StorageConnectivitySwitchless
	}).(pulumi.BoolPtrOutput)
}

// List of StorageNetworks config to deploy AzureStackHCI Cluster.
func (o HostNetworkPtrOutput) StorageNetworks() StorageNetworksArrayOutput {
	return o.ApplyT(func(v *HostNetwork) []StorageNetworks {
		if v == nil {
			return nil
		}
		return v.StorageNetworks
	}).(StorageNetworksArrayOutput)
}

// The HostNetwork of a cluster.
type HostNetworkResponse struct {
	// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.
	EnableStorageAutoIp bool `pulumi:"enableStorageAutoIp"`
	// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.
	Intents []IntentsResponse `pulumi:"intents"`
	// Defines how the storage adapters between nodes are connected either switch or switch less.
	StorageConnectivitySwitchless bool `pulumi:"storageConnectivitySwitchless"`
	// List of StorageNetworks config to deploy AzureStackHCI Cluster.
	StorageNetworks []StorageNetworksResponse `pulumi:"storageNetworks"`
}

// The HostNetwork of a cluster.
type HostNetworkResponseOutput struct{ *pulumi.OutputState }

func (HostNetworkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNetworkResponse)(nil)).Elem()
}

func (o HostNetworkResponseOutput) ToHostNetworkResponseOutput() HostNetworkResponseOutput {
	return o
}

func (o HostNetworkResponseOutput) ToHostNetworkResponseOutputWithContext(ctx context.Context) HostNetworkResponseOutput {
	return o
}

// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.
func (o HostNetworkResponseOutput) EnableStorageAutoIp() pulumi.BoolOutput {
	return o.ApplyT(func(v HostNetworkResponse) bool { return v.EnableStorageAutoIp }).(pulumi.BoolOutput)
}

// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.
func (o HostNetworkResponseOutput) Intents() IntentsResponseArrayOutput {
	return o.ApplyT(func(v HostNetworkResponse) []IntentsResponse { return v.Intents }).(IntentsResponseArrayOutput)
}

// Defines how the storage adapters between nodes are connected either switch or switch less.
func (o HostNetworkResponseOutput) StorageConnectivitySwitchless() pulumi.BoolOutput {
	return o.ApplyT(func(v HostNetworkResponse) bool { return v.StorageConnectivitySwitchless }).(pulumi.BoolOutput)
}

// List of StorageNetworks config to deploy AzureStackHCI Cluster.
func (o HostNetworkResponseOutput) StorageNetworks() StorageNetworksResponseArrayOutput {
	return o.ApplyT(func(v HostNetworkResponse) []StorageNetworksResponse { return v.StorageNetworks }).(StorageNetworksResponseArrayOutput)
}

type HostNetworkResponsePtrOutput struct{ *pulumi.OutputState }

func (HostNetworkResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostNetworkResponse)(nil)).Elem()
}

func (o HostNetworkResponsePtrOutput) ToHostNetworkResponsePtrOutput() HostNetworkResponsePtrOutput {
	return o
}

func (o HostNetworkResponsePtrOutput) ToHostNetworkResponsePtrOutputWithContext(ctx context.Context) HostNetworkResponsePtrOutput {
	return o
}

func (o HostNetworkResponsePtrOutput) Elem() HostNetworkResponseOutput {
	return o.ApplyT(func(v *HostNetworkResponse) HostNetworkResponse {
		if v != nil {
			return *v
		}
		var ret HostNetworkResponse
		return ret
	}).(HostNetworkResponseOutput)
}

// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.
func (o HostNetworkResponsePtrOutput) EnableStorageAutoIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HostNetworkResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableStorageAutoIp
	}).(pulumi.BoolPtrOutput)
}

// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.
func (o HostNetworkResponsePtrOutput) Intents() IntentsResponseArrayOutput {
	return o.ApplyT(func(v *HostNetworkResponse) []IntentsResponse {
		if v == nil {
			return nil
		}
		return v.Intents
	}).(IntentsResponseArrayOutput)
}

// Defines how the storage adapters between nodes are connected either switch or switch less.
func (o HostNetworkResponsePtrOutput) StorageConnectivitySwitchless() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HostNetworkResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.StorageConnectivitySwitchless
	}).(pulumi.BoolPtrOutput)
}

// List of StorageNetworks config to deploy AzureStackHCI Cluster.
func (o HostNetworkResponsePtrOutput) StorageNetworks() StorageNetworksResponseArrayOutput {
	return o.ApplyT(func(v *HostNetworkResponse) []StorageNetworksResponse {
		if v == nil {
			return nil
		}
		return v.StorageNetworks
	}).(StorageNetworksResponseArrayOutput)
}

// The InfrastructureNetwork of a AzureStackHCI Cluster.
type InfrastructureNetwork struct {
	// IPv4 address of the DNS servers in your environment.
	DnsServers []string `pulumi:"dnsServers"`
	// Default gateway that should be used for the provided IP address space.
	Gateway *string `pulumi:"gateway"`
	// Range of IP addresses from which addresses are allocated for nodes within a subnet.
	IpPools []IpPools `pulumi:"ipPools"`
	// Subnet mask that matches the provided IP address space.
	SubnetMask *string `pulumi:"subnetMask"`
	// Allows customers to use DHCP for Hosts and Cluster IPs. If not declared, the deployment will default to static IPs. When true, GW and DNS servers are not required
	UseDhcp *bool `pulumi:"useDhcp"`
}

// InfrastructureNetworkInput is an input type that accepts InfrastructureNetworkArgs and InfrastructureNetworkOutput values.
// You can construct a concrete instance of `InfrastructureNetworkInput` via:
//
//	InfrastructureNetworkArgs{...}
type InfrastructureNetworkInput interface {
	pulumi.Input

	ToInfrastructureNetworkOutput() InfrastructureNetworkOutput
	ToInfrastructureNetworkOutputWithContext(context.Context) InfrastructureNetworkOutput
}

// The InfrastructureNetwork of a AzureStackHCI Cluster.
type InfrastructureNetworkArgs struct {
	// IPv4 address of the DNS servers in your environment.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Default gateway that should be used for the provided IP address space.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// Range of IP addresses from which addresses are allocated for nodes within a subnet.
	IpPools IpPoolsArrayInput `pulumi:"ipPools"`
	// Subnet mask that matches the provided IP address space.
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
	// Allows customers to use DHCP for Hosts and Cluster IPs. If not declared, the deployment will default to static IPs. When true, GW and DNS servers are not required
	UseDhcp pulumi.BoolPtrInput `pulumi:"useDhcp"`
}

func (InfrastructureNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureNetwork)(nil)).Elem()
}

func (i InfrastructureNetworkArgs) ToInfrastructureNetworkOutput() InfrastructureNetworkOutput {
	return i.ToInfrastructureNetworkOutputWithContext(context.Background())
}

func (i InfrastructureNetworkArgs) ToInfrastructureNetworkOutputWithContext(ctx context.Context) InfrastructureNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureNetworkOutput)
}

// InfrastructureNetworkArrayInput is an input type that accepts InfrastructureNetworkArray and InfrastructureNetworkArrayOutput values.
// You can construct a concrete instance of `InfrastructureNetworkArrayInput` via:
//
//	InfrastructureNetworkArray{ InfrastructureNetworkArgs{...} }
type InfrastructureNetworkArrayInput interface {
	pulumi.Input

	ToInfrastructureNetworkArrayOutput() InfrastructureNetworkArrayOutput
	ToInfrastructureNetworkArrayOutputWithContext(context.Context) InfrastructureNetworkArrayOutput
}

type InfrastructureNetworkArray []InfrastructureNetworkInput

func (InfrastructureNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureNetwork)(nil)).Elem()
}

func (i InfrastructureNetworkArray) ToInfrastructureNetworkArrayOutput() InfrastructureNetworkArrayOutput {
	return i.ToInfrastructureNetworkArrayOutputWithContext(context.Background())
}

func (i InfrastructureNetworkArray) ToInfrastructureNetworkArrayOutputWithContext(ctx context.Context) InfrastructureNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureNetworkArrayOutput)
}

// The InfrastructureNetwork of a AzureStackHCI Cluster.
type InfrastructureNetworkOutput struct{ *pulumi.OutputState }

func (InfrastructureNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureNetwork)(nil)).Elem()
}

func (o InfrastructureNetworkOutput) ToInfrastructureNetworkOutput() InfrastructureNetworkOutput {
	return o
}

func (o InfrastructureNetworkOutput) ToInfrastructureNetworkOutputWithContext(ctx context.Context) InfrastructureNetworkOutput {
	return o
}

// IPv4 address of the DNS servers in your environment.
func (o InfrastructureNetworkOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InfrastructureNetwork) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Default gateway that should be used for the provided IP address space.
func (o InfrastructureNetworkOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureNetwork) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// Range of IP addresses from which addresses are allocated for nodes within a subnet.
func (o InfrastructureNetworkOutput) IpPools() IpPoolsArrayOutput {
	return o.ApplyT(func(v InfrastructureNetwork) []IpPools { return v.IpPools }).(IpPoolsArrayOutput)
}

// Subnet mask that matches the provided IP address space.
func (o InfrastructureNetworkOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureNetwork) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

// Allows customers to use DHCP for Hosts and Cluster IPs. If not declared, the deployment will default to static IPs. When true, GW and DNS servers are not required
func (o InfrastructureNetworkOutput) UseDhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InfrastructureNetwork) *bool { return v.UseDhcp }).(pulumi.BoolPtrOutput)
}

type InfrastructureNetworkArrayOutput struct{ *pulumi.OutputState }

func (InfrastructureNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureNetwork)(nil)).Elem()
}

func (o InfrastructureNetworkArrayOutput) ToInfrastructureNetworkArrayOutput() InfrastructureNetworkArrayOutput {
	return o
}

func (o InfrastructureNetworkArrayOutput) ToInfrastructureNetworkArrayOutputWithContext(ctx context.Context) InfrastructureNetworkArrayOutput {
	return o
}

func (o InfrastructureNetworkArrayOutput) Index(i pulumi.IntInput) InfrastructureNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfrastructureNetwork {
		return vs[0].([]InfrastructureNetwork)[vs[1].(int)]
	}).(InfrastructureNetworkOutput)
}

// The InfrastructureNetwork of a AzureStackHCI Cluster.
type InfrastructureNetworkResponse struct {
	// IPv4 address of the DNS servers in your environment.
	DnsServers []string `pulumi:"dnsServers"`
	// Default gateway that should be used for the provided IP address space.
	Gateway *string `pulumi:"gateway"`
	// Range of IP addresses from which addresses are allocated for nodes within a subnet.
	IpPools []IpPoolsResponse `pulumi:"ipPools"`
	// Subnet mask that matches the provided IP address space.
	SubnetMask *string `pulumi:"subnetMask"`
	// Allows customers to use DHCP for Hosts and Cluster IPs. If not declared, the deployment will default to static IPs. When true, GW and DNS servers are not required
	UseDhcp *bool `pulumi:"useDhcp"`
}

// The InfrastructureNetwork of a AzureStackHCI Cluster.
type InfrastructureNetworkResponseOutput struct{ *pulumi.OutputState }

func (InfrastructureNetworkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureNetworkResponse)(nil)).Elem()
}

func (o InfrastructureNetworkResponseOutput) ToInfrastructureNetworkResponseOutput() InfrastructureNetworkResponseOutput {
	return o
}

func (o InfrastructureNetworkResponseOutput) ToInfrastructureNetworkResponseOutputWithContext(ctx context.Context) InfrastructureNetworkResponseOutput {
	return o
}

// IPv4 address of the DNS servers in your environment.
func (o InfrastructureNetworkResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InfrastructureNetworkResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Default gateway that should be used for the provided IP address space.
func (o InfrastructureNetworkResponseOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureNetworkResponse) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// Range of IP addresses from which addresses are allocated for nodes within a subnet.
func (o InfrastructureNetworkResponseOutput) IpPools() IpPoolsResponseArrayOutput {
	return o.ApplyT(func(v InfrastructureNetworkResponse) []IpPoolsResponse { return v.IpPools }).(IpPoolsResponseArrayOutput)
}

// Subnet mask that matches the provided IP address space.
func (o InfrastructureNetworkResponseOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureNetworkResponse) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

// Allows customers to use DHCP for Hosts and Cluster IPs. If not declared, the deployment will default to static IPs. When true, GW and DNS servers are not required
func (o InfrastructureNetworkResponseOutput) UseDhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InfrastructureNetworkResponse) *bool { return v.UseDhcp }).(pulumi.BoolPtrOutput)
}

type InfrastructureNetworkResponseArrayOutput struct{ *pulumi.OutputState }

func (InfrastructureNetworkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfrastructureNetworkResponse)(nil)).Elem()
}

func (o InfrastructureNetworkResponseArrayOutput) ToInfrastructureNetworkResponseArrayOutput() InfrastructureNetworkResponseArrayOutput {
	return o
}

func (o InfrastructureNetworkResponseArrayOutput) ToInfrastructureNetworkResponseArrayOutputWithContext(ctx context.Context) InfrastructureNetworkResponseArrayOutput {
	return o
}

func (o InfrastructureNetworkResponseArrayOutput) Index(i pulumi.IntInput) InfrastructureNetworkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfrastructureNetworkResponse {
		return vs[0].([]InfrastructureNetworkResponse)[vs[1].(int)]
	}).(InfrastructureNetworkResponseOutput)
}

// The Intents of a cluster.
type Intents struct {
	// Array of network interfaces used for the network intent.
	Adapter []string `pulumi:"adapter"`
	// Set Adapter PropertyOverrides for cluster.
	AdapterPropertyOverrides *AdapterPropertyOverrides `pulumi:"adapterPropertyOverrides"`
	// Name of the network intent you wish to create.
	Name *string `pulumi:"name"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	OverrideAdapterProperty *bool `pulumi:"overrideAdapterProperty"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	OverrideQosPolicy *bool `pulumi:"overrideQosPolicy"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	OverrideVirtualSwitchConfiguration *bool `pulumi:"overrideVirtualSwitchConfiguration"`
	// Set QoS PolicyOverrides for cluster.
	QosPolicyOverrides *QosPolicyOverrides `pulumi:"qosPolicyOverrides"`
	// List of network traffic types. Only allowed values are 'Compute', 'Storage', 'Management'.
	TrafficType []string `pulumi:"trafficType"`
	// Set virtualSwitch ConfigurationOverrides for cluster.
	VirtualSwitchConfigurationOverrides *VirtualSwitchConfigurationOverrides `pulumi:"virtualSwitchConfigurationOverrides"`
}

// Defaults sets the appropriate defaults for Intents
func (val *Intents) Defaults() *Intents {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.OverrideAdapterProperty == nil {
		overrideAdapterProperty_ := false
		tmp.OverrideAdapterProperty = &overrideAdapterProperty_
	}
	if tmp.OverrideQosPolicy == nil {
		overrideQosPolicy_ := false
		tmp.OverrideQosPolicy = &overrideQosPolicy_
	}
	if tmp.OverrideVirtualSwitchConfiguration == nil {
		overrideVirtualSwitchConfiguration_ := false
		tmp.OverrideVirtualSwitchConfiguration = &overrideVirtualSwitchConfiguration_
	}
	return &tmp
}

// IntentsInput is an input type that accepts IntentsArgs and IntentsOutput values.
// You can construct a concrete instance of `IntentsInput` via:
//
//	IntentsArgs{...}
type IntentsInput interface {
	pulumi.Input

	ToIntentsOutput() IntentsOutput
	ToIntentsOutputWithContext(context.Context) IntentsOutput
}

// The Intents of a cluster.
type IntentsArgs struct {
	// Array of network interfaces used for the network intent.
	Adapter pulumi.StringArrayInput `pulumi:"adapter"`
	// Set Adapter PropertyOverrides for cluster.
	AdapterPropertyOverrides AdapterPropertyOverridesPtrInput `pulumi:"adapterPropertyOverrides"`
	// Name of the network intent you wish to create.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	OverrideAdapterProperty pulumi.BoolPtrInput `pulumi:"overrideAdapterProperty"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	OverrideQosPolicy pulumi.BoolPtrInput `pulumi:"overrideQosPolicy"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	OverrideVirtualSwitchConfiguration pulumi.BoolPtrInput `pulumi:"overrideVirtualSwitchConfiguration"`
	// Set QoS PolicyOverrides for cluster.
	QosPolicyOverrides QosPolicyOverridesPtrInput `pulumi:"qosPolicyOverrides"`
	// List of network traffic types. Only allowed values are 'Compute', 'Storage', 'Management'.
	TrafficType pulumi.StringArrayInput `pulumi:"trafficType"`
	// Set virtualSwitch ConfigurationOverrides for cluster.
	VirtualSwitchConfigurationOverrides VirtualSwitchConfigurationOverridesPtrInput `pulumi:"virtualSwitchConfigurationOverrides"`
}

// Defaults sets the appropriate defaults for IntentsArgs
func (val *IntentsArgs) Defaults() *IntentsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.OverrideAdapterProperty == nil {
		tmp.OverrideAdapterProperty = pulumi.BoolPtr(false)
	}
	if tmp.OverrideQosPolicy == nil {
		tmp.OverrideQosPolicy = pulumi.BoolPtr(false)
	}
	if tmp.OverrideVirtualSwitchConfiguration == nil {
		tmp.OverrideVirtualSwitchConfiguration = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (IntentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Intents)(nil)).Elem()
}

func (i IntentsArgs) ToIntentsOutput() IntentsOutput {
	return i.ToIntentsOutputWithContext(context.Background())
}

func (i IntentsArgs) ToIntentsOutputWithContext(ctx context.Context) IntentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentsOutput)
}

// IntentsArrayInput is an input type that accepts IntentsArray and IntentsArrayOutput values.
// You can construct a concrete instance of `IntentsArrayInput` via:
//
//	IntentsArray{ IntentsArgs{...} }
type IntentsArrayInput interface {
	pulumi.Input

	ToIntentsArrayOutput() IntentsArrayOutput
	ToIntentsArrayOutputWithContext(context.Context) IntentsArrayOutput
}

type IntentsArray []IntentsInput

func (IntentsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Intents)(nil)).Elem()
}

func (i IntentsArray) ToIntentsArrayOutput() IntentsArrayOutput {
	return i.ToIntentsArrayOutputWithContext(context.Background())
}

func (i IntentsArray) ToIntentsArrayOutputWithContext(ctx context.Context) IntentsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentsArrayOutput)
}

// The Intents of a cluster.
type IntentsOutput struct{ *pulumi.OutputState }

func (IntentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Intents)(nil)).Elem()
}

func (o IntentsOutput) ToIntentsOutput() IntentsOutput {
	return o
}

func (o IntentsOutput) ToIntentsOutputWithContext(ctx context.Context) IntentsOutput {
	return o
}

// Array of network interfaces used for the network intent.
func (o IntentsOutput) Adapter() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Intents) []string { return v.Adapter }).(pulumi.StringArrayOutput)
}

// Set Adapter PropertyOverrides for cluster.
func (o IntentsOutput) AdapterPropertyOverrides() AdapterPropertyOverridesPtrOutput {
	return o.ApplyT(func(v Intents) *AdapterPropertyOverrides { return v.AdapterPropertyOverrides }).(AdapterPropertyOverridesPtrOutput)
}

// Name of the network intent you wish to create.
func (o IntentsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Intents) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o IntentsOutput) OverrideAdapterProperty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Intents) *bool { return v.OverrideAdapterProperty }).(pulumi.BoolPtrOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o IntentsOutput) OverrideQosPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Intents) *bool { return v.OverrideQosPolicy }).(pulumi.BoolPtrOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o IntentsOutput) OverrideVirtualSwitchConfiguration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Intents) *bool { return v.OverrideVirtualSwitchConfiguration }).(pulumi.BoolPtrOutput)
}

// Set QoS PolicyOverrides for cluster.
func (o IntentsOutput) QosPolicyOverrides() QosPolicyOverridesPtrOutput {
	return o.ApplyT(func(v Intents) *QosPolicyOverrides { return v.QosPolicyOverrides }).(QosPolicyOverridesPtrOutput)
}

// List of network traffic types. Only allowed values are 'Compute', 'Storage', 'Management'.
func (o IntentsOutput) TrafficType() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Intents) []string { return v.TrafficType }).(pulumi.StringArrayOutput)
}

// Set virtualSwitch ConfigurationOverrides for cluster.
func (o IntentsOutput) VirtualSwitchConfigurationOverrides() VirtualSwitchConfigurationOverridesPtrOutput {
	return o.ApplyT(func(v Intents) *VirtualSwitchConfigurationOverrides { return v.VirtualSwitchConfigurationOverrides }).(VirtualSwitchConfigurationOverridesPtrOutput)
}

type IntentsArrayOutput struct{ *pulumi.OutputState }

func (IntentsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Intents)(nil)).Elem()
}

func (o IntentsArrayOutput) ToIntentsArrayOutput() IntentsArrayOutput {
	return o
}

func (o IntentsArrayOutput) ToIntentsArrayOutputWithContext(ctx context.Context) IntentsArrayOutput {
	return o
}

func (o IntentsArrayOutput) Index(i pulumi.IntInput) IntentsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Intents {
		return vs[0].([]Intents)[vs[1].(int)]
	}).(IntentsOutput)
}

// The Intents of a cluster.
type IntentsResponse struct {
	// Array of network interfaces used for the network intent.
	Adapter []string `pulumi:"adapter"`
	// Set Adapter PropertyOverrides for cluster.
	AdapterPropertyOverrides AdapterPropertyOverridesResponse `pulumi:"adapterPropertyOverrides"`
	// Array of adapters used for the network intent.
	IntentAdapters []string `pulumi:"intentAdapters"`
	// Name of the network intent you wish to create.
	IntentName string `pulumi:"intentName"`
	// IntentType for host network intent.
	IntentType float64 `pulumi:"intentType"`
	// IsComputeIntentSet for host network intent.
	IsComputeIntentSet bool `pulumi:"isComputeIntentSet"`
	// IsManagementIntentSet for host network intent.
	IsManagementIntentSet bool `pulumi:"isManagementIntentSet"`
	// IsNetworkIntentType for host network intent.
	IsNetworkIntentType bool `pulumi:"isNetworkIntentType"`
	// IntentType for host network intent.
	IsOnlyStorage bool `pulumi:"isOnlyStorage"`
	// IsOnlyStretch for host network intent.
	IsOnlyStretch bool `pulumi:"isOnlyStretch"`
	// IsStorageIntentSet for host network intent.
	IsStorageIntentSet bool `pulumi:"isStorageIntentSet"`
	// IsStretchIntentSet for host network intent.
	IsStretchIntentSet bool `pulumi:"isStretchIntentSet"`
	// Name of the network intent you wish to create.
	Name *string `pulumi:"name"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	OverrideAdapterProperty bool `pulumi:"overrideAdapterProperty"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	OverrideQosPolicy bool `pulumi:"overrideQosPolicy"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	OverrideVirtualSwitchConfiguration bool `pulumi:"overrideVirtualSwitchConfiguration"`
	// Set QoS PolicyOverrides for cluster.
	QosPolicyOverrides QosPolicyOverridesResponse `pulumi:"qosPolicyOverrides"`
	// Scope for host network intent.
	Scope float64 `pulumi:"scope"`
	// List of network traffic types. Only allowed values are 'Compute', 'Storage', 'Management'.
	TrafficType []string `pulumi:"trafficType"`
	// Set virtualSwitch ConfigurationOverrides for cluster.
	VirtualSwitchConfigurationOverrides VirtualSwitchConfigurationOverridesResponse `pulumi:"virtualSwitchConfigurationOverrides"`
}

// The Intents of a cluster.
type IntentsResponseOutput struct{ *pulumi.OutputState }

func (IntentsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentsResponse)(nil)).Elem()
}

func (o IntentsResponseOutput) ToIntentsResponseOutput() IntentsResponseOutput {
	return o
}

func (o IntentsResponseOutput) ToIntentsResponseOutputWithContext(ctx context.Context) IntentsResponseOutput {
	return o
}

// Array of network interfaces used for the network intent.
func (o IntentsResponseOutput) Adapter() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IntentsResponse) []string { return v.Adapter }).(pulumi.StringArrayOutput)
}

// Set Adapter PropertyOverrides for cluster.
func (o IntentsResponseOutput) AdapterPropertyOverrides() AdapterPropertyOverridesResponseOutput {
	return o.ApplyT(func(v IntentsResponse) AdapterPropertyOverridesResponse { return v.AdapterPropertyOverrides }).(AdapterPropertyOverridesResponseOutput)
}

// Array of adapters used for the network intent.
func (o IntentsResponseOutput) IntentAdapters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IntentsResponse) []string { return v.IntentAdapters }).(pulumi.StringArrayOutput)
}

// Name of the network intent you wish to create.
func (o IntentsResponseOutput) IntentName() pulumi.StringOutput {
	return o.ApplyT(func(v IntentsResponse) string { return v.IntentName }).(pulumi.StringOutput)
}

// IntentType for host network intent.
func (o IntentsResponseOutput) IntentType() pulumi.Float64Output {
	return o.ApplyT(func(v IntentsResponse) float64 { return v.IntentType }).(pulumi.Float64Output)
}

// IsComputeIntentSet for host network intent.
func (o IntentsResponseOutput) IsComputeIntentSet() pulumi.BoolOutput {
	return o.ApplyT(func(v IntentsResponse) bool { return v.IsComputeIntentSet }).(pulumi.BoolOutput)
}

// IsManagementIntentSet for host network intent.
func (o IntentsResponseOutput) IsManagementIntentSet() pulumi.BoolOutput {
	return o.ApplyT(func(v IntentsResponse) bool { return v.IsManagementIntentSet }).(pulumi.BoolOutput)
}

// IsNetworkIntentType for host network intent.
func (o IntentsResponseOutput) IsNetworkIntentType() pulumi.BoolOutput {
	return o.ApplyT(func(v IntentsResponse) bool { return v.IsNetworkIntentType }).(pulumi.BoolOutput)
}

// IntentType for host network intent.
func (o IntentsResponseOutput) IsOnlyStorage() pulumi.BoolOutput {
	return o.ApplyT(func(v IntentsResponse) bool { return v.IsOnlyStorage }).(pulumi.BoolOutput)
}

// IsOnlyStretch for host network intent.
func (o IntentsResponseOutput) IsOnlyStretch() pulumi.BoolOutput {
	return o.ApplyT(func(v IntentsResponse) bool { return v.IsOnlyStretch }).(pulumi.BoolOutput)
}

// IsStorageIntentSet for host network intent.
func (o IntentsResponseOutput) IsStorageIntentSet() pulumi.BoolOutput {
	return o.ApplyT(func(v IntentsResponse) bool { return v.IsStorageIntentSet }).(pulumi.BoolOutput)
}

// IsStretchIntentSet for host network intent.
func (o IntentsResponseOutput) IsStretchIntentSet() pulumi.BoolOutput {
	return o.ApplyT(func(v IntentsResponse) bool { return v.IsStretchIntentSet }).(pulumi.BoolOutput)
}

// Name of the network intent you wish to create.
func (o IntentsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntentsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o IntentsResponseOutput) OverrideAdapterProperty() pulumi.BoolOutput {
	return o.ApplyT(func(v IntentsResponse) bool { return v.OverrideAdapterProperty }).(pulumi.BoolOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o IntentsResponseOutput) OverrideQosPolicy() pulumi.BoolOutput {
	return o.ApplyT(func(v IntentsResponse) bool { return v.OverrideQosPolicy }).(pulumi.BoolOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o IntentsResponseOutput) OverrideVirtualSwitchConfiguration() pulumi.BoolOutput {
	return o.ApplyT(func(v IntentsResponse) bool { return v.OverrideVirtualSwitchConfiguration }).(pulumi.BoolOutput)
}

// Set QoS PolicyOverrides for cluster.
func (o IntentsResponseOutput) QosPolicyOverrides() QosPolicyOverridesResponseOutput {
	return o.ApplyT(func(v IntentsResponse) QosPolicyOverridesResponse { return v.QosPolicyOverrides }).(QosPolicyOverridesResponseOutput)
}

// Scope for host network intent.
func (o IntentsResponseOutput) Scope() pulumi.Float64Output {
	return o.ApplyT(func(v IntentsResponse) float64 { return v.Scope }).(pulumi.Float64Output)
}

// List of network traffic types. Only allowed values are 'Compute', 'Storage', 'Management'.
func (o IntentsResponseOutput) TrafficType() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IntentsResponse) []string { return v.TrafficType }).(pulumi.StringArrayOutput)
}

// Set virtualSwitch ConfigurationOverrides for cluster.
func (o IntentsResponseOutput) VirtualSwitchConfigurationOverrides() VirtualSwitchConfigurationOverridesResponseOutput {
	return o.ApplyT(func(v IntentsResponse) VirtualSwitchConfigurationOverridesResponse {
		return v.VirtualSwitchConfigurationOverrides
	}).(VirtualSwitchConfigurationOverridesResponseOutput)
}

type IntentsResponseArrayOutput struct{ *pulumi.OutputState }

func (IntentsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntentsResponse)(nil)).Elem()
}

func (o IntentsResponseArrayOutput) ToIntentsResponseArrayOutput() IntentsResponseArrayOutput {
	return o
}

func (o IntentsResponseArrayOutput) ToIntentsResponseArrayOutputWithContext(ctx context.Context) IntentsResponseArrayOutput {
	return o
}

func (o IntentsResponseArrayOutput) Index(i pulumi.IntInput) IntentsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntentsResponse {
		return vs[0].([]IntentsResponse)[vs[1].(int)]
	}).(IntentsResponseOutput)
}

// The dnsServers of a device.
type IpPools struct {
	// Ending IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering.
	EndingAddress *string `pulumi:"endingAddress"`
	// Starting IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering.
	StartingAddress *string `pulumi:"startingAddress"`
}

// IpPoolsInput is an input type that accepts IpPoolsArgs and IpPoolsOutput values.
// You can construct a concrete instance of `IpPoolsInput` via:
//
//	IpPoolsArgs{...}
type IpPoolsInput interface {
	pulumi.Input

	ToIpPoolsOutput() IpPoolsOutput
	ToIpPoolsOutputWithContext(context.Context) IpPoolsOutput
}

// The dnsServers of a device.
type IpPoolsArgs struct {
	// Ending IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering.
	EndingAddress pulumi.StringPtrInput `pulumi:"endingAddress"`
	// Starting IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering.
	StartingAddress pulumi.StringPtrInput `pulumi:"startingAddress"`
}

func (IpPoolsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpPools)(nil)).Elem()
}

func (i IpPoolsArgs) ToIpPoolsOutput() IpPoolsOutput {
	return i.ToIpPoolsOutputWithContext(context.Background())
}

func (i IpPoolsArgs) ToIpPoolsOutputWithContext(ctx context.Context) IpPoolsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpPoolsOutput)
}

// IpPoolsArrayInput is an input type that accepts IpPoolsArray and IpPoolsArrayOutput values.
// You can construct a concrete instance of `IpPoolsArrayInput` via:
//
//	IpPoolsArray{ IpPoolsArgs{...} }
type IpPoolsArrayInput interface {
	pulumi.Input

	ToIpPoolsArrayOutput() IpPoolsArrayOutput
	ToIpPoolsArrayOutputWithContext(context.Context) IpPoolsArrayOutput
}

type IpPoolsArray []IpPoolsInput

func (IpPoolsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpPools)(nil)).Elem()
}

func (i IpPoolsArray) ToIpPoolsArrayOutput() IpPoolsArrayOutput {
	return i.ToIpPoolsArrayOutputWithContext(context.Background())
}

func (i IpPoolsArray) ToIpPoolsArrayOutputWithContext(ctx context.Context) IpPoolsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpPoolsArrayOutput)
}

// The dnsServers of a device.
type IpPoolsOutput struct{ *pulumi.OutputState }

func (IpPoolsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpPools)(nil)).Elem()
}

func (o IpPoolsOutput) ToIpPoolsOutput() IpPoolsOutput {
	return o
}

func (o IpPoolsOutput) ToIpPoolsOutputWithContext(ctx context.Context) IpPoolsOutput {
	return o
}

// Ending IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering.
func (o IpPoolsOutput) EndingAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpPools) *string { return v.EndingAddress }).(pulumi.StringPtrOutput)
}

// Starting IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering.
func (o IpPoolsOutput) StartingAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpPools) *string { return v.StartingAddress }).(pulumi.StringPtrOutput)
}

type IpPoolsArrayOutput struct{ *pulumi.OutputState }

func (IpPoolsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpPools)(nil)).Elem()
}

func (o IpPoolsArrayOutput) ToIpPoolsArrayOutput() IpPoolsArrayOutput {
	return o
}

func (o IpPoolsArrayOutput) ToIpPoolsArrayOutputWithContext(ctx context.Context) IpPoolsArrayOutput {
	return o
}

func (o IpPoolsArrayOutput) Index(i pulumi.IntInput) IpPoolsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpPools {
		return vs[0].([]IpPools)[vs[1].(int)]
	}).(IpPoolsOutput)
}

// The dnsServers of a device.
type IpPoolsResponse struct {
	// Ending IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering.
	EndingAddress *string `pulumi:"endingAddress"`
	// Starting IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering.
	StartingAddress *string `pulumi:"startingAddress"`
}

// The dnsServers of a device.
type IpPoolsResponseOutput struct{ *pulumi.OutputState }

func (IpPoolsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpPoolsResponse)(nil)).Elem()
}

func (o IpPoolsResponseOutput) ToIpPoolsResponseOutput() IpPoolsResponseOutput {
	return o
}

func (o IpPoolsResponseOutput) ToIpPoolsResponseOutputWithContext(ctx context.Context) IpPoolsResponseOutput {
	return o
}

// Ending IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering.
func (o IpPoolsResponseOutput) EndingAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpPoolsResponse) *string { return v.EndingAddress }).(pulumi.StringPtrOutput)
}

// Starting IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering.
func (o IpPoolsResponseOutput) StartingAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpPoolsResponse) *string { return v.StartingAddress }).(pulumi.StringPtrOutput)
}

type IpPoolsResponseArrayOutput struct{ *pulumi.OutputState }

func (IpPoolsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpPoolsResponse)(nil)).Elem()
}

func (o IpPoolsResponseArrayOutput) ToIpPoolsResponseArrayOutput() IpPoolsResponseArrayOutput {
	return o
}

func (o IpPoolsResponseArrayOutput) ToIpPoolsResponseArrayOutputWithContext(ctx context.Context) IpPoolsResponseArrayOutput {
	return o
}

func (o IpPoolsResponseArrayOutput) Index(i pulumi.IntInput) IpPoolsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpPoolsResponse {
		return vs[0].([]IpPoolsResponse)[vs[1].(int)]
	}).(IpPoolsResponseOutput)
}

// Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.
type IsolatedVmAttestationConfigurationResponse struct {
	// Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.
	AttestationResourceId string `pulumi:"attestationResourceId"`
	// Region specific endpoint for Microsoft Azure Attestation service for the cluster
	AttestationServiceEndpoint string `pulumi:"attestationServiceEndpoint"`
	// Region specific endpoint for relying party service.
	RelyingPartyServiceEndpoint string `pulumi:"relyingPartyServiceEndpoint"`
}

// Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.
type IsolatedVmAttestationConfigurationResponseOutput struct{ *pulumi.OutputState }

func (IsolatedVmAttestationConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IsolatedVmAttestationConfigurationResponse)(nil)).Elem()
}

func (o IsolatedVmAttestationConfigurationResponseOutput) ToIsolatedVmAttestationConfigurationResponseOutput() IsolatedVmAttestationConfigurationResponseOutput {
	return o
}

func (o IsolatedVmAttestationConfigurationResponseOutput) ToIsolatedVmAttestationConfigurationResponseOutputWithContext(ctx context.Context) IsolatedVmAttestationConfigurationResponseOutput {
	return o
}

// Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.
func (o IsolatedVmAttestationConfigurationResponseOutput) AttestationResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v IsolatedVmAttestationConfigurationResponse) string { return v.AttestationResourceId }).(pulumi.StringOutput)
}

// Region specific endpoint for Microsoft Azure Attestation service for the cluster
func (o IsolatedVmAttestationConfigurationResponseOutput) AttestationServiceEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v IsolatedVmAttestationConfigurationResponse) string { return v.AttestationServiceEndpoint }).(pulumi.StringOutput)
}

// Region specific endpoint for relying party service.
func (o IsolatedVmAttestationConfigurationResponseOutput) RelyingPartyServiceEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v IsolatedVmAttestationConfigurationResponse) string { return v.RelyingPartyServiceEndpoint }).(pulumi.StringOutput)
}

// Log Collection properties of the cluster.
type LogCollectionPropertiesResponse struct {
	// From DateTimeStamp from when logs need to be connected
	FromDate string `pulumi:"fromDate"`
	// Recent DateTimeStamp where logs are successfully generated
	LastLogGenerated            string                         `pulumi:"lastLogGenerated"`
	LogCollectionSessionDetails []LogCollectionSessionResponse `pulumi:"logCollectionSessionDetails"`
	// To DateTimeStamp till when logs need to be connected
	ToDate string `pulumi:"toDate"`
}

// Log Collection properties of the cluster.
type LogCollectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (LogCollectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogCollectionPropertiesResponse)(nil)).Elem()
}

func (o LogCollectionPropertiesResponseOutput) ToLogCollectionPropertiesResponseOutput() LogCollectionPropertiesResponseOutput {
	return o
}

func (o LogCollectionPropertiesResponseOutput) ToLogCollectionPropertiesResponseOutputWithContext(ctx context.Context) LogCollectionPropertiesResponseOutput {
	return o
}

// From DateTimeStamp from when logs need to be connected
func (o LogCollectionPropertiesResponseOutput) FromDate() pulumi.StringOutput {
	return o.ApplyT(func(v LogCollectionPropertiesResponse) string { return v.FromDate }).(pulumi.StringOutput)
}

// Recent DateTimeStamp where logs are successfully generated
func (o LogCollectionPropertiesResponseOutput) LastLogGenerated() pulumi.StringOutput {
	return o.ApplyT(func(v LogCollectionPropertiesResponse) string { return v.LastLogGenerated }).(pulumi.StringOutput)
}

func (o LogCollectionPropertiesResponseOutput) LogCollectionSessionDetails() LogCollectionSessionResponseArrayOutput {
	return o.ApplyT(func(v LogCollectionPropertiesResponse) []LogCollectionSessionResponse {
		return v.LogCollectionSessionDetails
	}).(LogCollectionSessionResponseArrayOutput)
}

// To DateTimeStamp till when logs need to be connected
func (o LogCollectionPropertiesResponseOutput) ToDate() pulumi.StringOutput {
	return o.ApplyT(func(v LogCollectionPropertiesResponse) string { return v.ToDate }).(pulumi.StringOutput)
}

type LogCollectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (LogCollectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogCollectionPropertiesResponse)(nil)).Elem()
}

func (o LogCollectionPropertiesResponsePtrOutput) ToLogCollectionPropertiesResponsePtrOutput() LogCollectionPropertiesResponsePtrOutput {
	return o
}

func (o LogCollectionPropertiesResponsePtrOutput) ToLogCollectionPropertiesResponsePtrOutputWithContext(ctx context.Context) LogCollectionPropertiesResponsePtrOutput {
	return o
}

func (o LogCollectionPropertiesResponsePtrOutput) Elem() LogCollectionPropertiesResponseOutput {
	return o.ApplyT(func(v *LogCollectionPropertiesResponse) LogCollectionPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret LogCollectionPropertiesResponse
		return ret
	}).(LogCollectionPropertiesResponseOutput)
}

// From DateTimeStamp from when logs need to be connected
func (o LogCollectionPropertiesResponsePtrOutput) FromDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogCollectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FromDate
	}).(pulumi.StringPtrOutput)
}

// Recent DateTimeStamp where logs are successfully generated
func (o LogCollectionPropertiesResponsePtrOutput) LastLogGenerated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogCollectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastLogGenerated
	}).(pulumi.StringPtrOutput)
}

func (o LogCollectionPropertiesResponsePtrOutput) LogCollectionSessionDetails() LogCollectionSessionResponseArrayOutput {
	return o.ApplyT(func(v *LogCollectionPropertiesResponse) []LogCollectionSessionResponse {
		if v == nil {
			return nil
		}
		return v.LogCollectionSessionDetails
	}).(LogCollectionSessionResponseArrayOutput)
}

// To DateTimeStamp till when logs need to be connected
func (o LogCollectionPropertiesResponsePtrOutput) ToDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogCollectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ToDate
	}).(pulumi.StringPtrOutput)
}

// Log Collection Session details of the cluster.
type LogCollectionSessionResponse struct {
	// LogCollection status
	LogCollectionStatus string `pulumi:"logCollectionStatus"`
	// End Time of the logs when it was collected
	LogEndTime string `pulumi:"logEndTime"`
	// Size of the logs collected
	LogSize float64 `pulumi:"logSize"`
	// Start Time of the logs when it was collected
	LogStartTime string `pulumi:"logStartTime"`
	// Duration of logs collected
	TimeCollected string `pulumi:"timeCollected"`
}

// Log Collection Session details of the cluster.
type LogCollectionSessionResponseOutput struct{ *pulumi.OutputState }

func (LogCollectionSessionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogCollectionSessionResponse)(nil)).Elem()
}

func (o LogCollectionSessionResponseOutput) ToLogCollectionSessionResponseOutput() LogCollectionSessionResponseOutput {
	return o
}

func (o LogCollectionSessionResponseOutput) ToLogCollectionSessionResponseOutputWithContext(ctx context.Context) LogCollectionSessionResponseOutput {
	return o
}

// LogCollection status
func (o LogCollectionSessionResponseOutput) LogCollectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LogCollectionSessionResponse) string { return v.LogCollectionStatus }).(pulumi.StringOutput)
}

// End Time of the logs when it was collected
func (o LogCollectionSessionResponseOutput) LogEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v LogCollectionSessionResponse) string { return v.LogEndTime }).(pulumi.StringOutput)
}

// Size of the logs collected
func (o LogCollectionSessionResponseOutput) LogSize() pulumi.Float64Output {
	return o.ApplyT(func(v LogCollectionSessionResponse) float64 { return v.LogSize }).(pulumi.Float64Output)
}

// Start Time of the logs when it was collected
func (o LogCollectionSessionResponseOutput) LogStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v LogCollectionSessionResponse) string { return v.LogStartTime }).(pulumi.StringOutput)
}

// Duration of logs collected
func (o LogCollectionSessionResponseOutput) TimeCollected() pulumi.StringOutput {
	return o.ApplyT(func(v LogCollectionSessionResponse) string { return v.TimeCollected }).(pulumi.StringOutput)
}

type LogCollectionSessionResponseArrayOutput struct{ *pulumi.OutputState }

func (LogCollectionSessionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogCollectionSessionResponse)(nil)).Elem()
}

func (o LogCollectionSessionResponseArrayOutput) ToLogCollectionSessionResponseArrayOutput() LogCollectionSessionResponseArrayOutput {
	return o
}

func (o LogCollectionSessionResponseArrayOutput) ToLogCollectionSessionResponseArrayOutputWithContext(ctx context.Context) LogCollectionSessionResponseArrayOutput {
	return o
}

func (o LogCollectionSessionResponseArrayOutput) Index(i pulumi.IntInput) LogCollectionSessionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogCollectionSessionResponse {
		return vs[0].([]LogCollectionSessionResponse)[vs[1].(int)]
	}).(LogCollectionSessionResponseOutput)
}

// network controller config for SDN Integration to deploy AzureStackHCI Cluster.
type NetworkController struct {
	// macAddressPoolStart of network controller used for SDN Integration.
	MacAddressPoolStart *string `pulumi:"macAddressPoolStart"`
	// macAddressPoolStop of network controller used for SDN Integration.
	MacAddressPoolStop *string `pulumi:"macAddressPoolStop"`
	// NetworkVirtualizationEnabled of network controller used for SDN Integration.
	NetworkVirtualizationEnabled *bool `pulumi:"networkVirtualizationEnabled"`
}

// NetworkControllerInput is an input type that accepts NetworkControllerArgs and NetworkControllerOutput values.
// You can construct a concrete instance of `NetworkControllerInput` via:
//
//	NetworkControllerArgs{...}
type NetworkControllerInput interface {
	pulumi.Input

	ToNetworkControllerOutput() NetworkControllerOutput
	ToNetworkControllerOutputWithContext(context.Context) NetworkControllerOutput
}

// network controller config for SDN Integration to deploy AzureStackHCI Cluster.
type NetworkControllerArgs struct {
	// macAddressPoolStart of network controller used for SDN Integration.
	MacAddressPoolStart pulumi.StringPtrInput `pulumi:"macAddressPoolStart"`
	// macAddressPoolStop of network controller used for SDN Integration.
	MacAddressPoolStop pulumi.StringPtrInput `pulumi:"macAddressPoolStop"`
	// NetworkVirtualizationEnabled of network controller used for SDN Integration.
	NetworkVirtualizationEnabled pulumi.BoolPtrInput `pulumi:"networkVirtualizationEnabled"`
}

func (NetworkControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkController)(nil)).Elem()
}

func (i NetworkControllerArgs) ToNetworkControllerOutput() NetworkControllerOutput {
	return i.ToNetworkControllerOutputWithContext(context.Background())
}

func (i NetworkControllerArgs) ToNetworkControllerOutputWithContext(ctx context.Context) NetworkControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkControllerOutput)
}

func (i NetworkControllerArgs) ToNetworkControllerPtrOutput() NetworkControllerPtrOutput {
	return i.ToNetworkControllerPtrOutputWithContext(context.Background())
}

func (i NetworkControllerArgs) ToNetworkControllerPtrOutputWithContext(ctx context.Context) NetworkControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkControllerOutput).ToNetworkControllerPtrOutputWithContext(ctx)
}

// NetworkControllerPtrInput is an input type that accepts NetworkControllerArgs, NetworkControllerPtr and NetworkControllerPtrOutput values.
// You can construct a concrete instance of `NetworkControllerPtrInput` via:
//
//	        NetworkControllerArgs{...}
//
//	or:
//
//	        nil
type NetworkControllerPtrInput interface {
	pulumi.Input

	ToNetworkControllerPtrOutput() NetworkControllerPtrOutput
	ToNetworkControllerPtrOutputWithContext(context.Context) NetworkControllerPtrOutput
}

type networkControllerPtrType NetworkControllerArgs

func NetworkControllerPtr(v *NetworkControllerArgs) NetworkControllerPtrInput {
	return (*networkControllerPtrType)(v)
}

func (*networkControllerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkController)(nil)).Elem()
}

func (i *networkControllerPtrType) ToNetworkControllerPtrOutput() NetworkControllerPtrOutput {
	return i.ToNetworkControllerPtrOutputWithContext(context.Background())
}

func (i *networkControllerPtrType) ToNetworkControllerPtrOutputWithContext(ctx context.Context) NetworkControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkControllerPtrOutput)
}

// network controller config for SDN Integration to deploy AzureStackHCI Cluster.
type NetworkControllerOutput struct{ *pulumi.OutputState }

func (NetworkControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkController)(nil)).Elem()
}

func (o NetworkControllerOutput) ToNetworkControllerOutput() NetworkControllerOutput {
	return o
}

func (o NetworkControllerOutput) ToNetworkControllerOutputWithContext(ctx context.Context) NetworkControllerOutput {
	return o
}

func (o NetworkControllerOutput) ToNetworkControllerPtrOutput() NetworkControllerPtrOutput {
	return o.ToNetworkControllerPtrOutputWithContext(context.Background())
}

func (o NetworkControllerOutput) ToNetworkControllerPtrOutputWithContext(ctx context.Context) NetworkControllerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkController) *NetworkController {
		return &v
	}).(NetworkControllerPtrOutput)
}

// macAddressPoolStart of network controller used for SDN Integration.
func (o NetworkControllerOutput) MacAddressPoolStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkController) *string { return v.MacAddressPoolStart }).(pulumi.StringPtrOutput)
}

// macAddressPoolStop of network controller used for SDN Integration.
func (o NetworkControllerOutput) MacAddressPoolStop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkController) *string { return v.MacAddressPoolStop }).(pulumi.StringPtrOutput)
}

// NetworkVirtualizationEnabled of network controller used for SDN Integration.
func (o NetworkControllerOutput) NetworkVirtualizationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkController) *bool { return v.NetworkVirtualizationEnabled }).(pulumi.BoolPtrOutput)
}

type NetworkControllerPtrOutput struct{ *pulumi.OutputState }

func (NetworkControllerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkController)(nil)).Elem()
}

func (o NetworkControllerPtrOutput) ToNetworkControllerPtrOutput() NetworkControllerPtrOutput {
	return o
}

func (o NetworkControllerPtrOutput) ToNetworkControllerPtrOutputWithContext(ctx context.Context) NetworkControllerPtrOutput {
	return o
}

func (o NetworkControllerPtrOutput) Elem() NetworkControllerOutput {
	return o.ApplyT(func(v *NetworkController) NetworkController {
		if v != nil {
			return *v
		}
		var ret NetworkController
		return ret
	}).(NetworkControllerOutput)
}

// macAddressPoolStart of network controller used for SDN Integration.
func (o NetworkControllerPtrOutput) MacAddressPoolStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkController) *string {
		if v == nil {
			return nil
		}
		return v.MacAddressPoolStart
	}).(pulumi.StringPtrOutput)
}

// macAddressPoolStop of network controller used for SDN Integration.
func (o NetworkControllerPtrOutput) MacAddressPoolStop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkController) *string {
		if v == nil {
			return nil
		}
		return v.MacAddressPoolStop
	}).(pulumi.StringPtrOutput)
}

// NetworkVirtualizationEnabled of network controller used for SDN Integration.
func (o NetworkControllerPtrOutput) NetworkVirtualizationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkController) *bool {
		if v == nil {
			return nil
		}
		return v.NetworkVirtualizationEnabled
	}).(pulumi.BoolPtrOutput)
}

// network controller config for SDN Integration to deploy AzureStackHCI Cluster.
type NetworkControllerResponse struct {
	// macAddressPoolStart of network controller used for SDN Integration.
	MacAddressPoolStart *string `pulumi:"macAddressPoolStart"`
	// macAddressPoolStop of network controller used for SDN Integration.
	MacAddressPoolStop *string `pulumi:"macAddressPoolStop"`
	// NetworkVirtualizationEnabled of network controller used for SDN Integration.
	NetworkVirtualizationEnabled *bool `pulumi:"networkVirtualizationEnabled"`
}

// network controller config for SDN Integration to deploy AzureStackHCI Cluster.
type NetworkControllerResponseOutput struct{ *pulumi.OutputState }

func (NetworkControllerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkControllerResponse)(nil)).Elem()
}

func (o NetworkControllerResponseOutput) ToNetworkControllerResponseOutput() NetworkControllerResponseOutput {
	return o
}

func (o NetworkControllerResponseOutput) ToNetworkControllerResponseOutputWithContext(ctx context.Context) NetworkControllerResponseOutput {
	return o
}

// macAddressPoolStart of network controller used for SDN Integration.
func (o NetworkControllerResponseOutput) MacAddressPoolStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkControllerResponse) *string { return v.MacAddressPoolStart }).(pulumi.StringPtrOutput)
}

// macAddressPoolStop of network controller used for SDN Integration.
func (o NetworkControllerResponseOutput) MacAddressPoolStop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkControllerResponse) *string { return v.MacAddressPoolStop }).(pulumi.StringPtrOutput)
}

// NetworkVirtualizationEnabled of network controller used for SDN Integration.
func (o NetworkControllerResponseOutput) NetworkVirtualizationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkControllerResponse) *bool { return v.NetworkVirtualizationEnabled }).(pulumi.BoolPtrOutput)
}

type NetworkControllerResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkControllerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkControllerResponse)(nil)).Elem()
}

func (o NetworkControllerResponsePtrOutput) ToNetworkControllerResponsePtrOutput() NetworkControllerResponsePtrOutput {
	return o
}

func (o NetworkControllerResponsePtrOutput) ToNetworkControllerResponsePtrOutputWithContext(ctx context.Context) NetworkControllerResponsePtrOutput {
	return o
}

func (o NetworkControllerResponsePtrOutput) Elem() NetworkControllerResponseOutput {
	return o.ApplyT(func(v *NetworkControllerResponse) NetworkControllerResponse {
		if v != nil {
			return *v
		}
		var ret NetworkControllerResponse
		return ret
	}).(NetworkControllerResponseOutput)
}

// macAddressPoolStart of network controller used for SDN Integration.
func (o NetworkControllerResponsePtrOutput) MacAddressPoolStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkControllerResponse) *string {
		if v == nil {
			return nil
		}
		return v.MacAddressPoolStart
	}).(pulumi.StringPtrOutput)
}

// macAddressPoolStop of network controller used for SDN Integration.
func (o NetworkControllerResponsePtrOutput) MacAddressPoolStop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkControllerResponse) *string {
		if v == nil {
			return nil
		}
		return v.MacAddressPoolStop
	}).(pulumi.StringPtrOutput)
}

// NetworkVirtualizationEnabled of network controller used for SDN Integration.
func (o NetworkControllerResponsePtrOutput) NetworkVirtualizationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkControllerResponse) *bool {
		if v == nil {
			return nil
		}
		return v.NetworkVirtualizationEnabled
	}).(pulumi.BoolPtrOutput)
}

// The NIC Detail of a device.
type NicDetail struct {
	// Adapter Name of NIC
	AdapterName *string `pulumi:"adapterName"`
	// Component Id of NIC
	ComponentId *string `pulumi:"componentId"`
	// Default Gateway of NIC
	DefaultGateway *string `pulumi:"defaultGateway"`
	// Default Isolation of Management NIC
	DefaultIsolationId *string `pulumi:"defaultIsolationId"`
	// DNS Servers for NIC
	DnsServers []string `pulumi:"dnsServers"`
	// Driver Version of NIC
	DriverVersion *string `pulumi:"driverVersion"`
	// Interface Description of NIC
	InterfaceDescription *string `pulumi:"interfaceDescription"`
	// Subnet Mask of NIC
	Ip4Address *string `pulumi:"ip4Address"`
	// Subnet Mask of NIC
	SubnetMask *string `pulumi:"subnetMask"`
}

// NicDetailInput is an input type that accepts NicDetailArgs and NicDetailOutput values.
// You can construct a concrete instance of `NicDetailInput` via:
//
//	NicDetailArgs{...}
type NicDetailInput interface {
	pulumi.Input

	ToNicDetailOutput() NicDetailOutput
	ToNicDetailOutputWithContext(context.Context) NicDetailOutput
}

// The NIC Detail of a device.
type NicDetailArgs struct {
	// Adapter Name of NIC
	AdapterName pulumi.StringPtrInput `pulumi:"adapterName"`
	// Component Id of NIC
	ComponentId pulumi.StringPtrInput `pulumi:"componentId"`
	// Default Gateway of NIC
	DefaultGateway pulumi.StringPtrInput `pulumi:"defaultGateway"`
	// Default Isolation of Management NIC
	DefaultIsolationId pulumi.StringPtrInput `pulumi:"defaultIsolationId"`
	// DNS Servers for NIC
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Driver Version of NIC
	DriverVersion pulumi.StringPtrInput `pulumi:"driverVersion"`
	// Interface Description of NIC
	InterfaceDescription pulumi.StringPtrInput `pulumi:"interfaceDescription"`
	// Subnet Mask of NIC
	Ip4Address pulumi.StringPtrInput `pulumi:"ip4Address"`
	// Subnet Mask of NIC
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
}

func (NicDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NicDetail)(nil)).Elem()
}

func (i NicDetailArgs) ToNicDetailOutput() NicDetailOutput {
	return i.ToNicDetailOutputWithContext(context.Background())
}

func (i NicDetailArgs) ToNicDetailOutputWithContext(ctx context.Context) NicDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicDetailOutput)
}

// NicDetailArrayInput is an input type that accepts NicDetailArray and NicDetailArrayOutput values.
// You can construct a concrete instance of `NicDetailArrayInput` via:
//
//	NicDetailArray{ NicDetailArgs{...} }
type NicDetailArrayInput interface {
	pulumi.Input

	ToNicDetailArrayOutput() NicDetailArrayOutput
	ToNicDetailArrayOutputWithContext(context.Context) NicDetailArrayOutput
}

type NicDetailArray []NicDetailInput

func (NicDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicDetail)(nil)).Elem()
}

func (i NicDetailArray) ToNicDetailArrayOutput() NicDetailArrayOutput {
	return i.ToNicDetailArrayOutputWithContext(context.Background())
}

func (i NicDetailArray) ToNicDetailArrayOutputWithContext(ctx context.Context) NicDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NicDetailArrayOutput)
}

// The NIC Detail of a device.
type NicDetailOutput struct{ *pulumi.OutputState }

func (NicDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NicDetail)(nil)).Elem()
}

func (o NicDetailOutput) ToNicDetailOutput() NicDetailOutput {
	return o
}

func (o NicDetailOutput) ToNicDetailOutputWithContext(ctx context.Context) NicDetailOutput {
	return o
}

// Adapter Name of NIC
func (o NicDetailOutput) AdapterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicDetail) *string { return v.AdapterName }).(pulumi.StringPtrOutput)
}

// Component Id of NIC
func (o NicDetailOutput) ComponentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicDetail) *string { return v.ComponentId }).(pulumi.StringPtrOutput)
}

// Default Gateway of NIC
func (o NicDetailOutput) DefaultGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicDetail) *string { return v.DefaultGateway }).(pulumi.StringPtrOutput)
}

// Default Isolation of Management NIC
func (o NicDetailOutput) DefaultIsolationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicDetail) *string { return v.DefaultIsolationId }).(pulumi.StringPtrOutput)
}

// DNS Servers for NIC
func (o NicDetailOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NicDetail) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Driver Version of NIC
func (o NicDetailOutput) DriverVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicDetail) *string { return v.DriverVersion }).(pulumi.StringPtrOutput)
}

// Interface Description of NIC
func (o NicDetailOutput) InterfaceDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicDetail) *string { return v.InterfaceDescription }).(pulumi.StringPtrOutput)
}

// Subnet Mask of NIC
func (o NicDetailOutput) Ip4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicDetail) *string { return v.Ip4Address }).(pulumi.StringPtrOutput)
}

// Subnet Mask of NIC
func (o NicDetailOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicDetail) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

type NicDetailArrayOutput struct{ *pulumi.OutputState }

func (NicDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicDetail)(nil)).Elem()
}

func (o NicDetailArrayOutput) ToNicDetailArrayOutput() NicDetailArrayOutput {
	return o
}

func (o NicDetailArrayOutput) ToNicDetailArrayOutputWithContext(ctx context.Context) NicDetailArrayOutput {
	return o
}

func (o NicDetailArrayOutput) Index(i pulumi.IntInput) NicDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NicDetail {
		return vs[0].([]NicDetail)[vs[1].(int)]
	}).(NicDetailOutput)
}

// The NIC Detail of a device.
type NicDetailResponse struct {
	// Adapter Name of NIC
	AdapterName *string `pulumi:"adapterName"`
	// Component Id of NIC
	ComponentId *string `pulumi:"componentId"`
	// Default Gateway of NIC
	DefaultGateway *string `pulumi:"defaultGateway"`
	// Default Isolation of Management NIC
	DefaultIsolationId *string `pulumi:"defaultIsolationId"`
	// DNS Servers for NIC
	DnsServers []string `pulumi:"dnsServers"`
	// Driver Version of NIC
	DriverVersion *string `pulumi:"driverVersion"`
	// Interface Description of NIC
	InterfaceDescription *string `pulumi:"interfaceDescription"`
	// Subnet Mask of NIC
	Ip4Address *string `pulumi:"ip4Address"`
	// Subnet Mask of NIC
	SubnetMask *string `pulumi:"subnetMask"`
}

// The NIC Detail of a device.
type NicDetailResponseOutput struct{ *pulumi.OutputState }

func (NicDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NicDetailResponse)(nil)).Elem()
}

func (o NicDetailResponseOutput) ToNicDetailResponseOutput() NicDetailResponseOutput {
	return o
}

func (o NicDetailResponseOutput) ToNicDetailResponseOutputWithContext(ctx context.Context) NicDetailResponseOutput {
	return o
}

// Adapter Name of NIC
func (o NicDetailResponseOutput) AdapterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicDetailResponse) *string { return v.AdapterName }).(pulumi.StringPtrOutput)
}

// Component Id of NIC
func (o NicDetailResponseOutput) ComponentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicDetailResponse) *string { return v.ComponentId }).(pulumi.StringPtrOutput)
}

// Default Gateway of NIC
func (o NicDetailResponseOutput) DefaultGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicDetailResponse) *string { return v.DefaultGateway }).(pulumi.StringPtrOutput)
}

// Default Isolation of Management NIC
func (o NicDetailResponseOutput) DefaultIsolationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicDetailResponse) *string { return v.DefaultIsolationId }).(pulumi.StringPtrOutput)
}

// DNS Servers for NIC
func (o NicDetailResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NicDetailResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Driver Version of NIC
func (o NicDetailResponseOutput) DriverVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicDetailResponse) *string { return v.DriverVersion }).(pulumi.StringPtrOutput)
}

// Interface Description of NIC
func (o NicDetailResponseOutput) InterfaceDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicDetailResponse) *string { return v.InterfaceDescription }).(pulumi.StringPtrOutput)
}

// Subnet Mask of NIC
func (o NicDetailResponseOutput) Ip4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicDetailResponse) *string { return v.Ip4Address }).(pulumi.StringPtrOutput)
}

// Subnet Mask of NIC
func (o NicDetailResponseOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NicDetailResponse) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

type NicDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (NicDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NicDetailResponse)(nil)).Elem()
}

func (o NicDetailResponseArrayOutput) ToNicDetailResponseArrayOutput() NicDetailResponseArrayOutput {
	return o
}

func (o NicDetailResponseArrayOutput) ToNicDetailResponseArrayOutputWithContext(ctx context.Context) NicDetailResponseArrayOutput {
	return o
}

func (o NicDetailResponseArrayOutput) Index(i pulumi.IntInput) NicDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NicDetailResponse {
		return vs[0].([]NicDetailResponse)[vs[1].(int)]
	}).(NicDetailResponseOutput)
}

// The Observability of AzureStackHCI Cluster.
type Observability struct {
	// When set to true, collects log data to facilitate quicker issue resolution.
	EpisodicDataUpload *bool `pulumi:"episodicDataUpload"`
	// Location of your cluster. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to Microsoft to be stored outside of the EU.
	EuLocation *bool `pulumi:"euLocation"`
	// Enables telemetry data to be sent to Microsoft
	StreamingDataClient *bool `pulumi:"streamingDataClient"`
}

// Defaults sets the appropriate defaults for Observability
func (val *Observability) Defaults() *Observability {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EpisodicDataUpload == nil {
		episodicDataUpload_ := true
		tmp.EpisodicDataUpload = &episodicDataUpload_
	}
	if tmp.EuLocation == nil {
		euLocation_ := false
		tmp.EuLocation = &euLocation_
	}
	if tmp.StreamingDataClient == nil {
		streamingDataClient_ := true
		tmp.StreamingDataClient = &streamingDataClient_
	}
	return &tmp
}

// ObservabilityInput is an input type that accepts ObservabilityArgs and ObservabilityOutput values.
// You can construct a concrete instance of `ObservabilityInput` via:
//
//	ObservabilityArgs{...}
type ObservabilityInput interface {
	pulumi.Input

	ToObservabilityOutput() ObservabilityOutput
	ToObservabilityOutputWithContext(context.Context) ObservabilityOutput
}

// The Observability of AzureStackHCI Cluster.
type ObservabilityArgs struct {
	// When set to true, collects log data to facilitate quicker issue resolution.
	EpisodicDataUpload pulumi.BoolPtrInput `pulumi:"episodicDataUpload"`
	// Location of your cluster. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to Microsoft to be stored outside of the EU.
	EuLocation pulumi.BoolPtrInput `pulumi:"euLocation"`
	// Enables telemetry data to be sent to Microsoft
	StreamingDataClient pulumi.BoolPtrInput `pulumi:"streamingDataClient"`
}

// Defaults sets the appropriate defaults for ObservabilityArgs
func (val *ObservabilityArgs) Defaults() *ObservabilityArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EpisodicDataUpload == nil {
		tmp.EpisodicDataUpload = pulumi.BoolPtr(true)
	}
	if tmp.EuLocation == nil {
		tmp.EuLocation = pulumi.BoolPtr(false)
	}
	if tmp.StreamingDataClient == nil {
		tmp.StreamingDataClient = pulumi.BoolPtr(true)
	}
	return &tmp
}
func (ObservabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Observability)(nil)).Elem()
}

func (i ObservabilityArgs) ToObservabilityOutput() ObservabilityOutput {
	return i.ToObservabilityOutputWithContext(context.Background())
}

func (i ObservabilityArgs) ToObservabilityOutputWithContext(ctx context.Context) ObservabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObservabilityOutput)
}

func (i ObservabilityArgs) ToObservabilityPtrOutput() ObservabilityPtrOutput {
	return i.ToObservabilityPtrOutputWithContext(context.Background())
}

func (i ObservabilityArgs) ToObservabilityPtrOutputWithContext(ctx context.Context) ObservabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObservabilityOutput).ToObservabilityPtrOutputWithContext(ctx)
}

// ObservabilityPtrInput is an input type that accepts ObservabilityArgs, ObservabilityPtr and ObservabilityPtrOutput values.
// You can construct a concrete instance of `ObservabilityPtrInput` via:
//
//	        ObservabilityArgs{...}
//
//	or:
//
//	        nil
type ObservabilityPtrInput interface {
	pulumi.Input

	ToObservabilityPtrOutput() ObservabilityPtrOutput
	ToObservabilityPtrOutputWithContext(context.Context) ObservabilityPtrOutput
}

type observabilityPtrType ObservabilityArgs

func ObservabilityPtr(v *ObservabilityArgs) ObservabilityPtrInput {
	return (*observabilityPtrType)(v)
}

func (*observabilityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Observability)(nil)).Elem()
}

func (i *observabilityPtrType) ToObservabilityPtrOutput() ObservabilityPtrOutput {
	return i.ToObservabilityPtrOutputWithContext(context.Background())
}

func (i *observabilityPtrType) ToObservabilityPtrOutputWithContext(ctx context.Context) ObservabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObservabilityPtrOutput)
}

// The Observability of AzureStackHCI Cluster.
type ObservabilityOutput struct{ *pulumi.OutputState }

func (ObservabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Observability)(nil)).Elem()
}

func (o ObservabilityOutput) ToObservabilityOutput() ObservabilityOutput {
	return o
}

func (o ObservabilityOutput) ToObservabilityOutputWithContext(ctx context.Context) ObservabilityOutput {
	return o
}

func (o ObservabilityOutput) ToObservabilityPtrOutput() ObservabilityPtrOutput {
	return o.ToObservabilityPtrOutputWithContext(context.Background())
}

func (o ObservabilityOutput) ToObservabilityPtrOutputWithContext(ctx context.Context) ObservabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Observability) *Observability {
		return &v
	}).(ObservabilityPtrOutput)
}

// When set to true, collects log data to facilitate quicker issue resolution.
func (o ObservabilityOutput) EpisodicDataUpload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Observability) *bool { return v.EpisodicDataUpload }).(pulumi.BoolPtrOutput)
}

// Location of your cluster. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to Microsoft to be stored outside of the EU.
func (o ObservabilityOutput) EuLocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Observability) *bool { return v.EuLocation }).(pulumi.BoolPtrOutput)
}

// Enables telemetry data to be sent to Microsoft
func (o ObservabilityOutput) StreamingDataClient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Observability) *bool { return v.StreamingDataClient }).(pulumi.BoolPtrOutput)
}

type ObservabilityPtrOutput struct{ *pulumi.OutputState }

func (ObservabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Observability)(nil)).Elem()
}

func (o ObservabilityPtrOutput) ToObservabilityPtrOutput() ObservabilityPtrOutput {
	return o
}

func (o ObservabilityPtrOutput) ToObservabilityPtrOutputWithContext(ctx context.Context) ObservabilityPtrOutput {
	return o
}

func (o ObservabilityPtrOutput) Elem() ObservabilityOutput {
	return o.ApplyT(func(v *Observability) Observability {
		if v != nil {
			return *v
		}
		var ret Observability
		return ret
	}).(ObservabilityOutput)
}

// When set to true, collects log data to facilitate quicker issue resolution.
func (o ObservabilityPtrOutput) EpisodicDataUpload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Observability) *bool {
		if v == nil {
			return nil
		}
		return v.EpisodicDataUpload
	}).(pulumi.BoolPtrOutput)
}

// Location of your cluster. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to Microsoft to be stored outside of the EU.
func (o ObservabilityPtrOutput) EuLocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Observability) *bool {
		if v == nil {
			return nil
		}
		return v.EuLocation
	}).(pulumi.BoolPtrOutput)
}

// Enables telemetry data to be sent to Microsoft
func (o ObservabilityPtrOutput) StreamingDataClient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Observability) *bool {
		if v == nil {
			return nil
		}
		return v.StreamingDataClient
	}).(pulumi.BoolPtrOutput)
}

// The Observability of AzureStackHCI Cluster.
type ObservabilityResponse struct {
	// When set to true, collects log data to facilitate quicker issue resolution.
	EpisodicDataUpload *bool `pulumi:"episodicDataUpload"`
	// Location of your cluster. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to Microsoft to be stored outside of the EU.
	EuLocation *bool `pulumi:"euLocation"`
	// Enables telemetry data to be sent to Microsoft
	StreamingDataClient *bool `pulumi:"streamingDataClient"`
}

// Defaults sets the appropriate defaults for ObservabilityResponse
func (val *ObservabilityResponse) Defaults() *ObservabilityResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EpisodicDataUpload == nil {
		episodicDataUpload_ := true
		tmp.EpisodicDataUpload = &episodicDataUpload_
	}
	if tmp.EuLocation == nil {
		euLocation_ := false
		tmp.EuLocation = &euLocation_
	}
	if tmp.StreamingDataClient == nil {
		streamingDataClient_ := true
		tmp.StreamingDataClient = &streamingDataClient_
	}
	return &tmp
}

// The Observability of AzureStackHCI Cluster.
type ObservabilityResponseOutput struct{ *pulumi.OutputState }

func (ObservabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObservabilityResponse)(nil)).Elem()
}

func (o ObservabilityResponseOutput) ToObservabilityResponseOutput() ObservabilityResponseOutput {
	return o
}

func (o ObservabilityResponseOutput) ToObservabilityResponseOutputWithContext(ctx context.Context) ObservabilityResponseOutput {
	return o
}

// When set to true, collects log data to facilitate quicker issue resolution.
func (o ObservabilityResponseOutput) EpisodicDataUpload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ObservabilityResponse) *bool { return v.EpisodicDataUpload }).(pulumi.BoolPtrOutput)
}

// Location of your cluster. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to Microsoft to be stored outside of the EU.
func (o ObservabilityResponseOutput) EuLocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ObservabilityResponse) *bool { return v.EuLocation }).(pulumi.BoolPtrOutput)
}

// Enables telemetry data to be sent to Microsoft
func (o ObservabilityResponseOutput) StreamingDataClient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ObservabilityResponse) *bool { return v.StreamingDataClient }).(pulumi.BoolPtrOutput)
}

type ObservabilityResponsePtrOutput struct{ *pulumi.OutputState }

func (ObservabilityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObservabilityResponse)(nil)).Elem()
}

func (o ObservabilityResponsePtrOutput) ToObservabilityResponsePtrOutput() ObservabilityResponsePtrOutput {
	return o
}

func (o ObservabilityResponsePtrOutput) ToObservabilityResponsePtrOutputWithContext(ctx context.Context) ObservabilityResponsePtrOutput {
	return o
}

func (o ObservabilityResponsePtrOutput) Elem() ObservabilityResponseOutput {
	return o.ApplyT(func(v *ObservabilityResponse) ObservabilityResponse {
		if v != nil {
			return *v
		}
		var ret ObservabilityResponse
		return ret
	}).(ObservabilityResponseOutput)
}

// When set to true, collects log data to facilitate quicker issue resolution.
func (o ObservabilityResponsePtrOutput) EpisodicDataUpload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ObservabilityResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EpisodicDataUpload
	}).(pulumi.BoolPtrOutput)
}

// Location of your cluster. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to Microsoft to be stored outside of the EU.
func (o ObservabilityResponsePtrOutput) EuLocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ObservabilityResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EuLocation
	}).(pulumi.BoolPtrOutput)
}

// Enables telemetry data to be sent to Microsoft
func (o ObservabilityResponsePtrOutput) StreamingDataClient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ObservabilityResponse) *bool {
		if v == nil {
			return nil
		}
		return v.StreamingDataClient
	}).(pulumi.BoolPtrOutput)
}

// The OptionalServices of AzureStackHCI Cluster.
type OptionalServices struct {
	// The name of custom location.
	CustomLocation *string `pulumi:"customLocation"`
}

// OptionalServicesInput is an input type that accepts OptionalServicesArgs and OptionalServicesOutput values.
// You can construct a concrete instance of `OptionalServicesInput` via:
//
//	OptionalServicesArgs{...}
type OptionalServicesInput interface {
	pulumi.Input

	ToOptionalServicesOutput() OptionalServicesOutput
	ToOptionalServicesOutputWithContext(context.Context) OptionalServicesOutput
}

// The OptionalServices of AzureStackHCI Cluster.
type OptionalServicesArgs struct {
	// The name of custom location.
	CustomLocation pulumi.StringPtrInput `pulumi:"customLocation"`
}

func (OptionalServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionalServices)(nil)).Elem()
}

func (i OptionalServicesArgs) ToOptionalServicesOutput() OptionalServicesOutput {
	return i.ToOptionalServicesOutputWithContext(context.Background())
}

func (i OptionalServicesArgs) ToOptionalServicesOutputWithContext(ctx context.Context) OptionalServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionalServicesOutput)
}

func (i OptionalServicesArgs) ToOptionalServicesPtrOutput() OptionalServicesPtrOutput {
	return i.ToOptionalServicesPtrOutputWithContext(context.Background())
}

func (i OptionalServicesArgs) ToOptionalServicesPtrOutputWithContext(ctx context.Context) OptionalServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionalServicesOutput).ToOptionalServicesPtrOutputWithContext(ctx)
}

// OptionalServicesPtrInput is an input type that accepts OptionalServicesArgs, OptionalServicesPtr and OptionalServicesPtrOutput values.
// You can construct a concrete instance of `OptionalServicesPtrInput` via:
//
//	        OptionalServicesArgs{...}
//
//	or:
//
//	        nil
type OptionalServicesPtrInput interface {
	pulumi.Input

	ToOptionalServicesPtrOutput() OptionalServicesPtrOutput
	ToOptionalServicesPtrOutputWithContext(context.Context) OptionalServicesPtrOutput
}

type optionalServicesPtrType OptionalServicesArgs

func OptionalServicesPtr(v *OptionalServicesArgs) OptionalServicesPtrInput {
	return (*optionalServicesPtrType)(v)
}

func (*optionalServicesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OptionalServices)(nil)).Elem()
}

func (i *optionalServicesPtrType) ToOptionalServicesPtrOutput() OptionalServicesPtrOutput {
	return i.ToOptionalServicesPtrOutputWithContext(context.Background())
}

func (i *optionalServicesPtrType) ToOptionalServicesPtrOutputWithContext(ctx context.Context) OptionalServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionalServicesPtrOutput)
}

// The OptionalServices of AzureStackHCI Cluster.
type OptionalServicesOutput struct{ *pulumi.OutputState }

func (OptionalServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionalServices)(nil)).Elem()
}

func (o OptionalServicesOutput) ToOptionalServicesOutput() OptionalServicesOutput {
	return o
}

func (o OptionalServicesOutput) ToOptionalServicesOutputWithContext(ctx context.Context) OptionalServicesOutput {
	return o
}

func (o OptionalServicesOutput) ToOptionalServicesPtrOutput() OptionalServicesPtrOutput {
	return o.ToOptionalServicesPtrOutputWithContext(context.Background())
}

func (o OptionalServicesOutput) ToOptionalServicesPtrOutputWithContext(ctx context.Context) OptionalServicesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OptionalServices) *OptionalServices {
		return &v
	}).(OptionalServicesPtrOutput)
}

// The name of custom location.
func (o OptionalServicesOutput) CustomLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionalServices) *string { return v.CustomLocation }).(pulumi.StringPtrOutput)
}

type OptionalServicesPtrOutput struct{ *pulumi.OutputState }

func (OptionalServicesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OptionalServices)(nil)).Elem()
}

func (o OptionalServicesPtrOutput) ToOptionalServicesPtrOutput() OptionalServicesPtrOutput {
	return o
}

func (o OptionalServicesPtrOutput) ToOptionalServicesPtrOutputWithContext(ctx context.Context) OptionalServicesPtrOutput {
	return o
}

func (o OptionalServicesPtrOutput) Elem() OptionalServicesOutput {
	return o.ApplyT(func(v *OptionalServices) OptionalServices {
		if v != nil {
			return *v
		}
		var ret OptionalServices
		return ret
	}).(OptionalServicesOutput)
}

// The name of custom location.
func (o OptionalServicesPtrOutput) CustomLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OptionalServices) *string {
		if v == nil {
			return nil
		}
		return v.CustomLocation
	}).(pulumi.StringPtrOutput)
}

// The OptionalServices of AzureStackHCI Cluster.
type OptionalServicesResponse struct {
	// The name of custom location.
	CustomLocation *string `pulumi:"customLocation"`
}

// The OptionalServices of AzureStackHCI Cluster.
type OptionalServicesResponseOutput struct{ *pulumi.OutputState }

func (OptionalServicesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionalServicesResponse)(nil)).Elem()
}

func (o OptionalServicesResponseOutput) ToOptionalServicesResponseOutput() OptionalServicesResponseOutput {
	return o
}

func (o OptionalServicesResponseOutput) ToOptionalServicesResponseOutputWithContext(ctx context.Context) OptionalServicesResponseOutput {
	return o
}

// The name of custom location.
func (o OptionalServicesResponseOutput) CustomLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionalServicesResponse) *string { return v.CustomLocation }).(pulumi.StringPtrOutput)
}

type OptionalServicesResponsePtrOutput struct{ *pulumi.OutputState }

func (OptionalServicesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OptionalServicesResponse)(nil)).Elem()
}

func (o OptionalServicesResponsePtrOutput) ToOptionalServicesResponsePtrOutput() OptionalServicesResponsePtrOutput {
	return o
}

func (o OptionalServicesResponsePtrOutput) ToOptionalServicesResponsePtrOutputWithContext(ctx context.Context) OptionalServicesResponsePtrOutput {
	return o
}

func (o OptionalServicesResponsePtrOutput) Elem() OptionalServicesResponseOutput {
	return o.ApplyT(func(v *OptionalServicesResponse) OptionalServicesResponse {
		if v != nil {
			return *v
		}
		var ret OptionalServicesResponse
		return ret
	}).(OptionalServicesResponseOutput)
}

// The name of custom location.
func (o OptionalServicesResponsePtrOutput) CustomLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OptionalServicesResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomLocation
	}).(pulumi.StringPtrOutput)
}

// Status of Arc Extension for a particular node in HCI Cluster.
type PerNodeExtensionStateResponse struct {
	// Fully qualified resource ID for the particular Arc Extension on this node.
	Extension string `pulumi:"extension"`
	// The extension instance view.
	InstanceView ExtensionInstanceViewResponse `pulumi:"instanceView"`
	// Name of the node in HCI Cluster.
	Name string `pulumi:"name"`
	// State of Arc Extension in this node.
	State string `pulumi:"state"`
	// Specifies the version of the script handler.
	TypeHandlerVersion string `pulumi:"typeHandlerVersion"`
}

// Status of Arc Extension for a particular node in HCI Cluster.
type PerNodeExtensionStateResponseOutput struct{ *pulumi.OutputState }

func (PerNodeExtensionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PerNodeExtensionStateResponse)(nil)).Elem()
}

func (o PerNodeExtensionStateResponseOutput) ToPerNodeExtensionStateResponseOutput() PerNodeExtensionStateResponseOutput {
	return o
}

func (o PerNodeExtensionStateResponseOutput) ToPerNodeExtensionStateResponseOutputWithContext(ctx context.Context) PerNodeExtensionStateResponseOutput {
	return o
}

// Fully qualified resource ID for the particular Arc Extension on this node.
func (o PerNodeExtensionStateResponseOutput) Extension() pulumi.StringOutput {
	return o.ApplyT(func(v PerNodeExtensionStateResponse) string { return v.Extension }).(pulumi.StringOutput)
}

// The extension instance view.
func (o PerNodeExtensionStateResponseOutput) InstanceView() ExtensionInstanceViewResponseOutput {
	return o.ApplyT(func(v PerNodeExtensionStateResponse) ExtensionInstanceViewResponse { return v.InstanceView }).(ExtensionInstanceViewResponseOutput)
}

// Name of the node in HCI Cluster.
func (o PerNodeExtensionStateResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PerNodeExtensionStateResponse) string { return v.Name }).(pulumi.StringOutput)
}

// State of Arc Extension in this node.
func (o PerNodeExtensionStateResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v PerNodeExtensionStateResponse) string { return v.State }).(pulumi.StringOutput)
}

// Specifies the version of the script handler.
func (o PerNodeExtensionStateResponseOutput) TypeHandlerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v PerNodeExtensionStateResponse) string { return v.TypeHandlerVersion }).(pulumi.StringOutput)
}

type PerNodeExtensionStateResponseArrayOutput struct{ *pulumi.OutputState }

func (PerNodeExtensionStateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PerNodeExtensionStateResponse)(nil)).Elem()
}

func (o PerNodeExtensionStateResponseArrayOutput) ToPerNodeExtensionStateResponseArrayOutput() PerNodeExtensionStateResponseArrayOutput {
	return o
}

func (o PerNodeExtensionStateResponseArrayOutput) ToPerNodeExtensionStateResponseArrayOutputWithContext(ctx context.Context) PerNodeExtensionStateResponseArrayOutput {
	return o
}

func (o PerNodeExtensionStateResponseArrayOutput) Index(i pulumi.IntInput) PerNodeExtensionStateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PerNodeExtensionStateResponse {
		return vs[0].([]PerNodeExtensionStateResponse)[vs[1].(int)]
	}).(PerNodeExtensionStateResponseOutput)
}

// Remote Support Node Session Details on the Node.
type PerNodeRemoteSupportSessionResponse struct {
	// Remote Support Access Level
	AccessLevel string `pulumi:"accessLevel"`
	// Duration of Remote Support Enablement
	Duration float64 `pulumi:"duration"`
	// Name of the node
	NodeName string `pulumi:"nodeName"`
	// Remote Support Session EndTime on the Node
	SessionEndTime string `pulumi:"sessionEndTime"`
	// Remote Support Session StartTime on the Node
	SessionStartTime string `pulumi:"sessionStartTime"`
}

// Remote Support Node Session Details on the Node.
type PerNodeRemoteSupportSessionResponseOutput struct{ *pulumi.OutputState }

func (PerNodeRemoteSupportSessionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PerNodeRemoteSupportSessionResponse)(nil)).Elem()
}

func (o PerNodeRemoteSupportSessionResponseOutput) ToPerNodeRemoteSupportSessionResponseOutput() PerNodeRemoteSupportSessionResponseOutput {
	return o
}

func (o PerNodeRemoteSupportSessionResponseOutput) ToPerNodeRemoteSupportSessionResponseOutputWithContext(ctx context.Context) PerNodeRemoteSupportSessionResponseOutput {
	return o
}

// Remote Support Access Level
func (o PerNodeRemoteSupportSessionResponseOutput) AccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v PerNodeRemoteSupportSessionResponse) string { return v.AccessLevel }).(pulumi.StringOutput)
}

// Duration of Remote Support Enablement
func (o PerNodeRemoteSupportSessionResponseOutput) Duration() pulumi.Float64Output {
	return o.ApplyT(func(v PerNodeRemoteSupportSessionResponse) float64 { return v.Duration }).(pulumi.Float64Output)
}

// Name of the node
func (o PerNodeRemoteSupportSessionResponseOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v PerNodeRemoteSupportSessionResponse) string { return v.NodeName }).(pulumi.StringOutput)
}

// Remote Support Session EndTime on the Node
func (o PerNodeRemoteSupportSessionResponseOutput) SessionEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v PerNodeRemoteSupportSessionResponse) string { return v.SessionEndTime }).(pulumi.StringOutput)
}

// Remote Support Session StartTime on the Node
func (o PerNodeRemoteSupportSessionResponseOutput) SessionStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v PerNodeRemoteSupportSessionResponse) string { return v.SessionStartTime }).(pulumi.StringOutput)
}

type PerNodeRemoteSupportSessionResponseArrayOutput struct{ *pulumi.OutputState }

func (PerNodeRemoteSupportSessionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PerNodeRemoteSupportSessionResponse)(nil)).Elem()
}

func (o PerNodeRemoteSupportSessionResponseArrayOutput) ToPerNodeRemoteSupportSessionResponseArrayOutput() PerNodeRemoteSupportSessionResponseArrayOutput {
	return o
}

func (o PerNodeRemoteSupportSessionResponseArrayOutput) ToPerNodeRemoteSupportSessionResponseArrayOutputWithContext(ctx context.Context) PerNodeRemoteSupportSessionResponseArrayOutput {
	return o
}

func (o PerNodeRemoteSupportSessionResponseArrayOutput) Index(i pulumi.IntInput) PerNodeRemoteSupportSessionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PerNodeRemoteSupportSessionResponse {
		return vs[0].([]PerNodeRemoteSupportSessionResponse)[vs[1].(int)]
	}).(PerNodeRemoteSupportSessionResponseOutput)
}

// Status of Arc agent for a particular node in HCI Cluster.
type PerNodeStateResponse struct {
	// Fully qualified resource ID for the Arc agent of this node.
	ArcInstance string `pulumi:"arcInstance"`
	// The service principal id of the arc for server node
	ArcNodeServicePrincipalObjectId string `pulumi:"arcNodeServicePrincipalObjectId"`
	// Name of the Node in HCI Cluster
	Name string `pulumi:"name"`
	// State of Arc agent in this node.
	State string `pulumi:"state"`
}

// Status of Arc agent for a particular node in HCI Cluster.
type PerNodeStateResponseOutput struct{ *pulumi.OutputState }

func (PerNodeStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PerNodeStateResponse)(nil)).Elem()
}

func (o PerNodeStateResponseOutput) ToPerNodeStateResponseOutput() PerNodeStateResponseOutput {
	return o
}

func (o PerNodeStateResponseOutput) ToPerNodeStateResponseOutputWithContext(ctx context.Context) PerNodeStateResponseOutput {
	return o
}

// Fully qualified resource ID for the Arc agent of this node.
func (o PerNodeStateResponseOutput) ArcInstance() pulumi.StringOutput {
	return o.ApplyT(func(v PerNodeStateResponse) string { return v.ArcInstance }).(pulumi.StringOutput)
}

// The service principal id of the arc for server node
func (o PerNodeStateResponseOutput) ArcNodeServicePrincipalObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v PerNodeStateResponse) string { return v.ArcNodeServicePrincipalObjectId }).(pulumi.StringOutput)
}

// Name of the Node in HCI Cluster
func (o PerNodeStateResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PerNodeStateResponse) string { return v.Name }).(pulumi.StringOutput)
}

// State of Arc agent in this node.
func (o PerNodeStateResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v PerNodeStateResponse) string { return v.State }).(pulumi.StringOutput)
}

type PerNodeStateResponseArrayOutput struct{ *pulumi.OutputState }

func (PerNodeStateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PerNodeStateResponse)(nil)).Elem()
}

func (o PerNodeStateResponseArrayOutput) ToPerNodeStateResponseArrayOutput() PerNodeStateResponseArrayOutput {
	return o
}

func (o PerNodeStateResponseArrayOutput) ToPerNodeStateResponseArrayOutputWithContext(ctx context.Context) PerNodeStateResponseArrayOutput {
	return o
}

func (o PerNodeStateResponseArrayOutput) Index(i pulumi.IntInput) PerNodeStateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PerNodeStateResponse {
		return vs[0].([]PerNodeStateResponse)[vs[1].(int)]
	}).(PerNodeStateResponseOutput)
}

// The PhysicalNodes of a cluster.
type PhysicalNodes struct {
	// The IPv4 address assigned to each physical server on your Azure Stack HCI cluster.
	Ipv4Address *string `pulumi:"ipv4Address"`
	// NETBIOS name of each physical server on your Azure Stack HCI cluster.
	Name *string `pulumi:"name"`
}

// PhysicalNodesInput is an input type that accepts PhysicalNodesArgs and PhysicalNodesOutput values.
// You can construct a concrete instance of `PhysicalNodesInput` via:
//
//	PhysicalNodesArgs{...}
type PhysicalNodesInput interface {
	pulumi.Input

	ToPhysicalNodesOutput() PhysicalNodesOutput
	ToPhysicalNodesOutputWithContext(context.Context) PhysicalNodesOutput
}

// The PhysicalNodes of a cluster.
type PhysicalNodesArgs struct {
	// The IPv4 address assigned to each physical server on your Azure Stack HCI cluster.
	Ipv4Address pulumi.StringPtrInput `pulumi:"ipv4Address"`
	// NETBIOS name of each physical server on your Azure Stack HCI cluster.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PhysicalNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PhysicalNodes)(nil)).Elem()
}

func (i PhysicalNodesArgs) ToPhysicalNodesOutput() PhysicalNodesOutput {
	return i.ToPhysicalNodesOutputWithContext(context.Background())
}

func (i PhysicalNodesArgs) ToPhysicalNodesOutputWithContext(ctx context.Context) PhysicalNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhysicalNodesOutput)
}

// PhysicalNodesArrayInput is an input type that accepts PhysicalNodesArray and PhysicalNodesArrayOutput values.
// You can construct a concrete instance of `PhysicalNodesArrayInput` via:
//
//	PhysicalNodesArray{ PhysicalNodesArgs{...} }
type PhysicalNodesArrayInput interface {
	pulumi.Input

	ToPhysicalNodesArrayOutput() PhysicalNodesArrayOutput
	ToPhysicalNodesArrayOutputWithContext(context.Context) PhysicalNodesArrayOutput
}

type PhysicalNodesArray []PhysicalNodesInput

func (PhysicalNodesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PhysicalNodes)(nil)).Elem()
}

func (i PhysicalNodesArray) ToPhysicalNodesArrayOutput() PhysicalNodesArrayOutput {
	return i.ToPhysicalNodesArrayOutputWithContext(context.Background())
}

func (i PhysicalNodesArray) ToPhysicalNodesArrayOutputWithContext(ctx context.Context) PhysicalNodesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhysicalNodesArrayOutput)
}

// The PhysicalNodes of a cluster.
type PhysicalNodesOutput struct{ *pulumi.OutputState }

func (PhysicalNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PhysicalNodes)(nil)).Elem()
}

func (o PhysicalNodesOutput) ToPhysicalNodesOutput() PhysicalNodesOutput {
	return o
}

func (o PhysicalNodesOutput) ToPhysicalNodesOutputWithContext(ctx context.Context) PhysicalNodesOutput {
	return o
}

// The IPv4 address assigned to each physical server on your Azure Stack HCI cluster.
func (o PhysicalNodesOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhysicalNodes) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

// NETBIOS name of each physical server on your Azure Stack HCI cluster.
func (o PhysicalNodesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhysicalNodes) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PhysicalNodesArrayOutput struct{ *pulumi.OutputState }

func (PhysicalNodesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PhysicalNodes)(nil)).Elem()
}

func (o PhysicalNodesArrayOutput) ToPhysicalNodesArrayOutput() PhysicalNodesArrayOutput {
	return o
}

func (o PhysicalNodesArrayOutput) ToPhysicalNodesArrayOutputWithContext(ctx context.Context) PhysicalNodesArrayOutput {
	return o
}

func (o PhysicalNodesArrayOutput) Index(i pulumi.IntInput) PhysicalNodesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PhysicalNodes {
		return vs[0].([]PhysicalNodes)[vs[1].(int)]
	}).(PhysicalNodesOutput)
}

// The PhysicalNodes of a cluster.
type PhysicalNodesResponse struct {
	// The IPv4 address assigned to each physical server on your Azure Stack HCI cluster.
	Ipv4Address *string `pulumi:"ipv4Address"`
	// NETBIOS name of each physical server on your Azure Stack HCI cluster.
	Name *string `pulumi:"name"`
}

// The PhysicalNodes of a cluster.
type PhysicalNodesResponseOutput struct{ *pulumi.OutputState }

func (PhysicalNodesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PhysicalNodesResponse)(nil)).Elem()
}

func (o PhysicalNodesResponseOutput) ToPhysicalNodesResponseOutput() PhysicalNodesResponseOutput {
	return o
}

func (o PhysicalNodesResponseOutput) ToPhysicalNodesResponseOutputWithContext(ctx context.Context) PhysicalNodesResponseOutput {
	return o
}

// The IPv4 address assigned to each physical server on your Azure Stack HCI cluster.
func (o PhysicalNodesResponseOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhysicalNodesResponse) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

// NETBIOS name of each physical server on your Azure Stack HCI cluster.
func (o PhysicalNodesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhysicalNodesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PhysicalNodesResponseArrayOutput struct{ *pulumi.OutputState }

func (PhysicalNodesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PhysicalNodesResponse)(nil)).Elem()
}

func (o PhysicalNodesResponseArrayOutput) ToPhysicalNodesResponseArrayOutput() PhysicalNodesResponseArrayOutput {
	return o
}

func (o PhysicalNodesResponseArrayOutput) ToPhysicalNodesResponseArrayOutputWithContext(ctx context.Context) PhysicalNodesResponseArrayOutput {
	return o
}

func (o PhysicalNodesResponseArrayOutput) Index(i pulumi.IntInput) PhysicalNodesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PhysicalNodesResponse {
		return vs[0].([]PhysicalNodesResponse)[vs[1].(int)]
	}).(PhysicalNodesResponseOutput)
}

// The QoSPolicyOverrides of a cluster.
type QosPolicyOverrides struct {
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	BandwidthPercentageSMB *string `pulumi:"bandwidthPercentageSMB"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	PriorityValue8021ActionCluster *string `pulumi:"priorityValue8021ActionCluster"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	PriorityValue8021ActionSMB *string `pulumi:"priorityValue8021ActionSMB"`
}

// QosPolicyOverridesInput is an input type that accepts QosPolicyOverridesArgs and QosPolicyOverridesOutput values.
// You can construct a concrete instance of `QosPolicyOverridesInput` via:
//
//	QosPolicyOverridesArgs{...}
type QosPolicyOverridesInput interface {
	pulumi.Input

	ToQosPolicyOverridesOutput() QosPolicyOverridesOutput
	ToQosPolicyOverridesOutputWithContext(context.Context) QosPolicyOverridesOutput
}

// The QoSPolicyOverrides of a cluster.
type QosPolicyOverridesArgs struct {
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	BandwidthPercentageSMB pulumi.StringPtrInput `pulumi:"bandwidthPercentageSMB"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	PriorityValue8021ActionCluster pulumi.StringPtrInput `pulumi:"priorityValue8021ActionCluster"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	PriorityValue8021ActionSMB pulumi.StringPtrInput `pulumi:"priorityValue8021ActionSMB"`
}

func (QosPolicyOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QosPolicyOverrides)(nil)).Elem()
}

func (i QosPolicyOverridesArgs) ToQosPolicyOverridesOutput() QosPolicyOverridesOutput {
	return i.ToQosPolicyOverridesOutputWithContext(context.Background())
}

func (i QosPolicyOverridesArgs) ToQosPolicyOverridesOutputWithContext(ctx context.Context) QosPolicyOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosPolicyOverridesOutput)
}

func (i QosPolicyOverridesArgs) ToQosPolicyOverridesPtrOutput() QosPolicyOverridesPtrOutput {
	return i.ToQosPolicyOverridesPtrOutputWithContext(context.Background())
}

func (i QosPolicyOverridesArgs) ToQosPolicyOverridesPtrOutputWithContext(ctx context.Context) QosPolicyOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosPolicyOverridesOutput).ToQosPolicyOverridesPtrOutputWithContext(ctx)
}

// QosPolicyOverridesPtrInput is an input type that accepts QosPolicyOverridesArgs, QosPolicyOverridesPtr and QosPolicyOverridesPtrOutput values.
// You can construct a concrete instance of `QosPolicyOverridesPtrInput` via:
//
//	        QosPolicyOverridesArgs{...}
//
//	or:
//
//	        nil
type QosPolicyOverridesPtrInput interface {
	pulumi.Input

	ToQosPolicyOverridesPtrOutput() QosPolicyOverridesPtrOutput
	ToQosPolicyOverridesPtrOutputWithContext(context.Context) QosPolicyOverridesPtrOutput
}

type qosPolicyOverridesPtrType QosPolicyOverridesArgs

func QosPolicyOverridesPtr(v *QosPolicyOverridesArgs) QosPolicyOverridesPtrInput {
	return (*qosPolicyOverridesPtrType)(v)
}

func (*qosPolicyOverridesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QosPolicyOverrides)(nil)).Elem()
}

func (i *qosPolicyOverridesPtrType) ToQosPolicyOverridesPtrOutput() QosPolicyOverridesPtrOutput {
	return i.ToQosPolicyOverridesPtrOutputWithContext(context.Background())
}

func (i *qosPolicyOverridesPtrType) ToQosPolicyOverridesPtrOutputWithContext(ctx context.Context) QosPolicyOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosPolicyOverridesPtrOutput)
}

// The QoSPolicyOverrides of a cluster.
type QosPolicyOverridesOutput struct{ *pulumi.OutputState }

func (QosPolicyOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QosPolicyOverrides)(nil)).Elem()
}

func (o QosPolicyOverridesOutput) ToQosPolicyOverridesOutput() QosPolicyOverridesOutput {
	return o
}

func (o QosPolicyOverridesOutput) ToQosPolicyOverridesOutputWithContext(ctx context.Context) QosPolicyOverridesOutput {
	return o
}

func (o QosPolicyOverridesOutput) ToQosPolicyOverridesPtrOutput() QosPolicyOverridesPtrOutput {
	return o.ToQosPolicyOverridesPtrOutputWithContext(context.Background())
}

func (o QosPolicyOverridesOutput) ToQosPolicyOverridesPtrOutputWithContext(ctx context.Context) QosPolicyOverridesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QosPolicyOverrides) *QosPolicyOverrides {
		return &v
	}).(QosPolicyOverridesPtrOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o QosPolicyOverridesOutput) BandwidthPercentageSMB() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QosPolicyOverrides) *string { return v.BandwidthPercentageSMB }).(pulumi.StringPtrOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o QosPolicyOverridesOutput) PriorityValue8021ActionCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QosPolicyOverrides) *string { return v.PriorityValue8021ActionCluster }).(pulumi.StringPtrOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o QosPolicyOverridesOutput) PriorityValue8021ActionSMB() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QosPolicyOverrides) *string { return v.PriorityValue8021ActionSMB }).(pulumi.StringPtrOutput)
}

type QosPolicyOverridesPtrOutput struct{ *pulumi.OutputState }

func (QosPolicyOverridesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QosPolicyOverrides)(nil)).Elem()
}

func (o QosPolicyOverridesPtrOutput) ToQosPolicyOverridesPtrOutput() QosPolicyOverridesPtrOutput {
	return o
}

func (o QosPolicyOverridesPtrOutput) ToQosPolicyOverridesPtrOutputWithContext(ctx context.Context) QosPolicyOverridesPtrOutput {
	return o
}

func (o QosPolicyOverridesPtrOutput) Elem() QosPolicyOverridesOutput {
	return o.ApplyT(func(v *QosPolicyOverrides) QosPolicyOverrides {
		if v != nil {
			return *v
		}
		var ret QosPolicyOverrides
		return ret
	}).(QosPolicyOverridesOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o QosPolicyOverridesPtrOutput) BandwidthPercentageSMB() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QosPolicyOverrides) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthPercentageSMB
	}).(pulumi.StringPtrOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o QosPolicyOverridesPtrOutput) PriorityValue8021ActionCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QosPolicyOverrides) *string {
		if v == nil {
			return nil
		}
		return v.PriorityValue8021ActionCluster
	}).(pulumi.StringPtrOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o QosPolicyOverridesPtrOutput) PriorityValue8021ActionSMB() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QosPolicyOverrides) *string {
		if v == nil {
			return nil
		}
		return v.PriorityValue8021ActionSMB
	}).(pulumi.StringPtrOutput)
}

// The QoSPolicyOverrides of a cluster.
type QosPolicyOverridesResponse struct {
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	BandwidthPercentageSMB *string `pulumi:"bandwidthPercentageSMB"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	PriorityValue8021ActionCluster *string `pulumi:"priorityValue8021ActionCluster"`
	// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
	PriorityValue8021ActionSMB *string `pulumi:"priorityValue8021ActionSMB"`
}

// The QoSPolicyOverrides of a cluster.
type QosPolicyOverridesResponseOutput struct{ *pulumi.OutputState }

func (QosPolicyOverridesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QosPolicyOverridesResponse)(nil)).Elem()
}

func (o QosPolicyOverridesResponseOutput) ToQosPolicyOverridesResponseOutput() QosPolicyOverridesResponseOutput {
	return o
}

func (o QosPolicyOverridesResponseOutput) ToQosPolicyOverridesResponseOutputWithContext(ctx context.Context) QosPolicyOverridesResponseOutput {
	return o
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o QosPolicyOverridesResponseOutput) BandwidthPercentageSMB() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QosPolicyOverridesResponse) *string { return v.BandwidthPercentageSMB }).(pulumi.StringPtrOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o QosPolicyOverridesResponseOutput) PriorityValue8021ActionCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QosPolicyOverridesResponse) *string { return v.PriorityValue8021ActionCluster }).(pulumi.StringPtrOutput)
}

// This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.
func (o QosPolicyOverridesResponseOutput) PriorityValue8021ActionSMB() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QosPolicyOverridesResponse) *string { return v.PriorityValue8021ActionSMB }).(pulumi.StringPtrOutput)
}

// Remote Support Node Settings of the cluster.
type RemoteSupportNodeSettingsResponse struct {
	// Arc ResourceId of the Node
	ArcResourceId string `pulumi:"arcResourceId"`
	// Remote Support Access Connection Error Message on the Node
	ConnectionErrorMessage string `pulumi:"connectionErrorMessage"`
	// Remote Support Access Connection Status on the Node
	ConnectionStatus string `pulumi:"connectionStatus"`
	// Remote Support Enablement Request Created TimeStamp on the Node
	CreatedAt string `pulumi:"createdAt"`
	// Remote Support Access Connection State on the Node
	State string `pulumi:"state"`
	// Remote Support Transcript location on the node
	TranscriptLocation string `pulumi:"transcriptLocation"`
	// Remote Support Enablement Request Updated TimeStamp on the Node
	UpdatedAt string `pulumi:"updatedAt"`
}

// Remote Support Node Settings of the cluster.
type RemoteSupportNodeSettingsResponseOutput struct{ *pulumi.OutputState }

func (RemoteSupportNodeSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteSupportNodeSettingsResponse)(nil)).Elem()
}

func (o RemoteSupportNodeSettingsResponseOutput) ToRemoteSupportNodeSettingsResponseOutput() RemoteSupportNodeSettingsResponseOutput {
	return o
}

func (o RemoteSupportNodeSettingsResponseOutput) ToRemoteSupportNodeSettingsResponseOutputWithContext(ctx context.Context) RemoteSupportNodeSettingsResponseOutput {
	return o
}

// Arc ResourceId of the Node
func (o RemoteSupportNodeSettingsResponseOutput) ArcResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteSupportNodeSettingsResponse) string { return v.ArcResourceId }).(pulumi.StringOutput)
}

// Remote Support Access Connection Error Message on the Node
func (o RemoteSupportNodeSettingsResponseOutput) ConnectionErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteSupportNodeSettingsResponse) string { return v.ConnectionErrorMessage }).(pulumi.StringOutput)
}

// Remote Support Access Connection Status on the Node
func (o RemoteSupportNodeSettingsResponseOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteSupportNodeSettingsResponse) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// Remote Support Enablement Request Created TimeStamp on the Node
func (o RemoteSupportNodeSettingsResponseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteSupportNodeSettingsResponse) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Remote Support Access Connection State on the Node
func (o RemoteSupportNodeSettingsResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteSupportNodeSettingsResponse) string { return v.State }).(pulumi.StringOutput)
}

// Remote Support Transcript location on the node
func (o RemoteSupportNodeSettingsResponseOutput) TranscriptLocation() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteSupportNodeSettingsResponse) string { return v.TranscriptLocation }).(pulumi.StringOutput)
}

// Remote Support Enablement Request Updated TimeStamp on the Node
func (o RemoteSupportNodeSettingsResponseOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteSupportNodeSettingsResponse) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type RemoteSupportNodeSettingsResponseArrayOutput struct{ *pulumi.OutputState }

func (RemoteSupportNodeSettingsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RemoteSupportNodeSettingsResponse)(nil)).Elem()
}

func (o RemoteSupportNodeSettingsResponseArrayOutput) ToRemoteSupportNodeSettingsResponseArrayOutput() RemoteSupportNodeSettingsResponseArrayOutput {
	return o
}

func (o RemoteSupportNodeSettingsResponseArrayOutput) ToRemoteSupportNodeSettingsResponseArrayOutputWithContext(ctx context.Context) RemoteSupportNodeSettingsResponseArrayOutput {
	return o
}

func (o RemoteSupportNodeSettingsResponseArrayOutput) Index(i pulumi.IntInput) RemoteSupportNodeSettingsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RemoteSupportNodeSettingsResponse {
		return vs[0].([]RemoteSupportNodeSettingsResponse)[vs[1].(int)]
	}).(RemoteSupportNodeSettingsResponseOutput)
}

// Remote Support properties of the cluster.
type RemoteSupportPropertiesResponse struct {
	// Remote Support Access Level
	AccessLevel string `pulumi:"accessLevel"`
	// Expiration DateTimeStamp when Remote Support Access will be expired
	ExpirationTimeStamp         string                                `pulumi:"expirationTimeStamp"`
	RemoteSupportNodeSettings   []RemoteSupportNodeSettingsResponse   `pulumi:"remoteSupportNodeSettings"`
	RemoteSupportSessionDetails []PerNodeRemoteSupportSessionResponse `pulumi:"remoteSupportSessionDetails"`
	// Remote Support Type for cluster
	RemoteSupportType string `pulumi:"remoteSupportType"`
}

// Remote Support properties of the cluster.
type RemoteSupportPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RemoteSupportPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteSupportPropertiesResponse)(nil)).Elem()
}

func (o RemoteSupportPropertiesResponseOutput) ToRemoteSupportPropertiesResponseOutput() RemoteSupportPropertiesResponseOutput {
	return o
}

func (o RemoteSupportPropertiesResponseOutput) ToRemoteSupportPropertiesResponseOutputWithContext(ctx context.Context) RemoteSupportPropertiesResponseOutput {
	return o
}

// Remote Support Access Level
func (o RemoteSupportPropertiesResponseOutput) AccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteSupportPropertiesResponse) string { return v.AccessLevel }).(pulumi.StringOutput)
}

// Expiration DateTimeStamp when Remote Support Access will be expired
func (o RemoteSupportPropertiesResponseOutput) ExpirationTimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteSupportPropertiesResponse) string { return v.ExpirationTimeStamp }).(pulumi.StringOutput)
}

func (o RemoteSupportPropertiesResponseOutput) RemoteSupportNodeSettings() RemoteSupportNodeSettingsResponseArrayOutput {
	return o.ApplyT(func(v RemoteSupportPropertiesResponse) []RemoteSupportNodeSettingsResponse {
		return v.RemoteSupportNodeSettings
	}).(RemoteSupportNodeSettingsResponseArrayOutput)
}

func (o RemoteSupportPropertiesResponseOutput) RemoteSupportSessionDetails() PerNodeRemoteSupportSessionResponseArrayOutput {
	return o.ApplyT(func(v RemoteSupportPropertiesResponse) []PerNodeRemoteSupportSessionResponse {
		return v.RemoteSupportSessionDetails
	}).(PerNodeRemoteSupportSessionResponseArrayOutput)
}

// Remote Support Type for cluster
func (o RemoteSupportPropertiesResponseOutput) RemoteSupportType() pulumi.StringOutput {
	return o.ApplyT(func(v RemoteSupportPropertiesResponse) string { return v.RemoteSupportType }).(pulumi.StringOutput)
}

type RemoteSupportPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (RemoteSupportPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemoteSupportPropertiesResponse)(nil)).Elem()
}

func (o RemoteSupportPropertiesResponsePtrOutput) ToRemoteSupportPropertiesResponsePtrOutput() RemoteSupportPropertiesResponsePtrOutput {
	return o
}

func (o RemoteSupportPropertiesResponsePtrOutput) ToRemoteSupportPropertiesResponsePtrOutputWithContext(ctx context.Context) RemoteSupportPropertiesResponsePtrOutput {
	return o
}

func (o RemoteSupportPropertiesResponsePtrOutput) Elem() RemoteSupportPropertiesResponseOutput {
	return o.ApplyT(func(v *RemoteSupportPropertiesResponse) RemoteSupportPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret RemoteSupportPropertiesResponse
		return ret
	}).(RemoteSupportPropertiesResponseOutput)
}

// Remote Support Access Level
func (o RemoteSupportPropertiesResponsePtrOutput) AccessLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteSupportPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AccessLevel
	}).(pulumi.StringPtrOutput)
}

// Expiration DateTimeStamp when Remote Support Access will be expired
func (o RemoteSupportPropertiesResponsePtrOutput) ExpirationTimeStamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteSupportPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ExpirationTimeStamp
	}).(pulumi.StringPtrOutput)
}

func (o RemoteSupportPropertiesResponsePtrOutput) RemoteSupportNodeSettings() RemoteSupportNodeSettingsResponseArrayOutput {
	return o.ApplyT(func(v *RemoteSupportPropertiesResponse) []RemoteSupportNodeSettingsResponse {
		if v == nil {
			return nil
		}
		return v.RemoteSupportNodeSettings
	}).(RemoteSupportNodeSettingsResponseArrayOutput)
}

func (o RemoteSupportPropertiesResponsePtrOutput) RemoteSupportSessionDetails() PerNodeRemoteSupportSessionResponseArrayOutput {
	return o.ApplyT(func(v *RemoteSupportPropertiesResponse) []PerNodeRemoteSupportSessionResponse {
		if v == nil {
			return nil
		}
		return v.RemoteSupportSessionDetails
	}).(PerNodeRemoteSupportSessionResponseArrayOutput)
}

// Remote Support Type for cluster
func (o RemoteSupportPropertiesResponsePtrOutput) RemoteSupportType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemoteSupportPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RemoteSupportType
	}).(pulumi.StringPtrOutput)
}

// secrets used for solution builder extension (SBE) partner extensibility.
type SbeCredentials struct {
	// secret name expected for Enterprise Cloud Engine (ECE).
	EceSecretName *string `pulumi:"eceSecretName"`
	// secret URI stored in keyvault.
	SecretLocation *string `pulumi:"secretLocation"`
	// secret name stored in keyvault.
	SecretName *string `pulumi:"secretName"`
}

// SbeCredentialsInput is an input type that accepts SbeCredentialsArgs and SbeCredentialsOutput values.
// You can construct a concrete instance of `SbeCredentialsInput` via:
//
//	SbeCredentialsArgs{...}
type SbeCredentialsInput interface {
	pulumi.Input

	ToSbeCredentialsOutput() SbeCredentialsOutput
	ToSbeCredentialsOutputWithContext(context.Context) SbeCredentialsOutput
}

// secrets used for solution builder extension (SBE) partner extensibility.
type SbeCredentialsArgs struct {
	// secret name expected for Enterprise Cloud Engine (ECE).
	EceSecretName pulumi.StringPtrInput `pulumi:"eceSecretName"`
	// secret URI stored in keyvault.
	SecretLocation pulumi.StringPtrInput `pulumi:"secretLocation"`
	// secret name stored in keyvault.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (SbeCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SbeCredentials)(nil)).Elem()
}

func (i SbeCredentialsArgs) ToSbeCredentialsOutput() SbeCredentialsOutput {
	return i.ToSbeCredentialsOutputWithContext(context.Background())
}

func (i SbeCredentialsArgs) ToSbeCredentialsOutputWithContext(ctx context.Context) SbeCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SbeCredentialsOutput)
}

// SbeCredentialsArrayInput is an input type that accepts SbeCredentialsArray and SbeCredentialsArrayOutput values.
// You can construct a concrete instance of `SbeCredentialsArrayInput` via:
//
//	SbeCredentialsArray{ SbeCredentialsArgs{...} }
type SbeCredentialsArrayInput interface {
	pulumi.Input

	ToSbeCredentialsArrayOutput() SbeCredentialsArrayOutput
	ToSbeCredentialsArrayOutputWithContext(context.Context) SbeCredentialsArrayOutput
}

type SbeCredentialsArray []SbeCredentialsInput

func (SbeCredentialsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SbeCredentials)(nil)).Elem()
}

func (i SbeCredentialsArray) ToSbeCredentialsArrayOutput() SbeCredentialsArrayOutput {
	return i.ToSbeCredentialsArrayOutputWithContext(context.Background())
}

func (i SbeCredentialsArray) ToSbeCredentialsArrayOutputWithContext(ctx context.Context) SbeCredentialsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SbeCredentialsArrayOutput)
}

// secrets used for solution builder extension (SBE) partner extensibility.
type SbeCredentialsOutput struct{ *pulumi.OutputState }

func (SbeCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SbeCredentials)(nil)).Elem()
}

func (o SbeCredentialsOutput) ToSbeCredentialsOutput() SbeCredentialsOutput {
	return o
}

func (o SbeCredentialsOutput) ToSbeCredentialsOutputWithContext(ctx context.Context) SbeCredentialsOutput {
	return o
}

// secret name expected for Enterprise Cloud Engine (ECE).
func (o SbeCredentialsOutput) EceSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbeCredentials) *string { return v.EceSecretName }).(pulumi.StringPtrOutput)
}

// secret URI stored in keyvault.
func (o SbeCredentialsOutput) SecretLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbeCredentials) *string { return v.SecretLocation }).(pulumi.StringPtrOutput)
}

// secret name stored in keyvault.
func (o SbeCredentialsOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbeCredentials) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type SbeCredentialsArrayOutput struct{ *pulumi.OutputState }

func (SbeCredentialsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SbeCredentials)(nil)).Elem()
}

func (o SbeCredentialsArrayOutput) ToSbeCredentialsArrayOutput() SbeCredentialsArrayOutput {
	return o
}

func (o SbeCredentialsArrayOutput) ToSbeCredentialsArrayOutputWithContext(ctx context.Context) SbeCredentialsArrayOutput {
	return o
}

func (o SbeCredentialsArrayOutput) Index(i pulumi.IntInput) SbeCredentialsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SbeCredentials {
		return vs[0].([]SbeCredentials)[vs[1].(int)]
	}).(SbeCredentialsOutput)
}

// secrets used for solution builder extension (SBE) partner extensibility.
type SbeCredentialsResponse struct {
	// secret name expected for Enterprise Cloud Engine (ECE).
	EceSecretName *string `pulumi:"eceSecretName"`
	// secret URI stored in keyvault.
	SecretLocation *string `pulumi:"secretLocation"`
	// secret name stored in keyvault.
	SecretName *string `pulumi:"secretName"`
}

// secrets used for solution builder extension (SBE) partner extensibility.
type SbeCredentialsResponseOutput struct{ *pulumi.OutputState }

func (SbeCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SbeCredentialsResponse)(nil)).Elem()
}

func (o SbeCredentialsResponseOutput) ToSbeCredentialsResponseOutput() SbeCredentialsResponseOutput {
	return o
}

func (o SbeCredentialsResponseOutput) ToSbeCredentialsResponseOutputWithContext(ctx context.Context) SbeCredentialsResponseOutput {
	return o
}

// secret name expected for Enterprise Cloud Engine (ECE).
func (o SbeCredentialsResponseOutput) EceSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbeCredentialsResponse) *string { return v.EceSecretName }).(pulumi.StringPtrOutput)
}

// secret URI stored in keyvault.
func (o SbeCredentialsResponseOutput) SecretLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbeCredentialsResponse) *string { return v.SecretLocation }).(pulumi.StringPtrOutput)
}

// secret name stored in keyvault.
func (o SbeCredentialsResponseOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbeCredentialsResponse) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type SbeCredentialsResponseArrayOutput struct{ *pulumi.OutputState }

func (SbeCredentialsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SbeCredentialsResponse)(nil)).Elem()
}

func (o SbeCredentialsResponseArrayOutput) ToSbeCredentialsResponseArrayOutput() SbeCredentialsResponseArrayOutput {
	return o
}

func (o SbeCredentialsResponseArrayOutput) ToSbeCredentialsResponseArrayOutputWithContext(ctx context.Context) SbeCredentialsResponseArrayOutput {
	return o
}

func (o SbeCredentialsResponseArrayOutput) Index(i pulumi.IntInput) SbeCredentialsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SbeCredentialsResponse {
		return vs[0].([]SbeCredentialsResponse)[vs[1].(int)]
	}).(SbeCredentialsResponseOutput)
}

// Solution builder extension (SBE) package and manifest information for the solution builder extension staged for AzureStackHCI cluster deployment.
type SbeDeploymentInfo struct {
	// SBE family name.
	Family *string `pulumi:"family"`
	// SBE manifest publisher.
	Publisher *string `pulumi:"publisher"`
	// SBE Manifest Creation Date.
	SbeManifestCreationDate *string `pulumi:"sbeManifestCreationDate"`
	// SBE Manifest Source.
	SbeManifestSource *string `pulumi:"sbeManifestSource"`
	// SBE package version.
	Version *string `pulumi:"version"`
}

// SbeDeploymentInfoInput is an input type that accepts SbeDeploymentInfoArgs and SbeDeploymentInfoOutput values.
// You can construct a concrete instance of `SbeDeploymentInfoInput` via:
//
//	SbeDeploymentInfoArgs{...}
type SbeDeploymentInfoInput interface {
	pulumi.Input

	ToSbeDeploymentInfoOutput() SbeDeploymentInfoOutput
	ToSbeDeploymentInfoOutputWithContext(context.Context) SbeDeploymentInfoOutput
}

// Solution builder extension (SBE) package and manifest information for the solution builder extension staged for AzureStackHCI cluster deployment.
type SbeDeploymentInfoArgs struct {
	// SBE family name.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// SBE manifest publisher.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// SBE Manifest Creation Date.
	SbeManifestCreationDate pulumi.StringPtrInput `pulumi:"sbeManifestCreationDate"`
	// SBE Manifest Source.
	SbeManifestSource pulumi.StringPtrInput `pulumi:"sbeManifestSource"`
	// SBE package version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (SbeDeploymentInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SbeDeploymentInfo)(nil)).Elem()
}

func (i SbeDeploymentInfoArgs) ToSbeDeploymentInfoOutput() SbeDeploymentInfoOutput {
	return i.ToSbeDeploymentInfoOutputWithContext(context.Background())
}

func (i SbeDeploymentInfoArgs) ToSbeDeploymentInfoOutputWithContext(ctx context.Context) SbeDeploymentInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SbeDeploymentInfoOutput)
}

func (i SbeDeploymentInfoArgs) ToSbeDeploymentInfoPtrOutput() SbeDeploymentInfoPtrOutput {
	return i.ToSbeDeploymentInfoPtrOutputWithContext(context.Background())
}

func (i SbeDeploymentInfoArgs) ToSbeDeploymentInfoPtrOutputWithContext(ctx context.Context) SbeDeploymentInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SbeDeploymentInfoOutput).ToSbeDeploymentInfoPtrOutputWithContext(ctx)
}

// SbeDeploymentInfoPtrInput is an input type that accepts SbeDeploymentInfoArgs, SbeDeploymentInfoPtr and SbeDeploymentInfoPtrOutput values.
// You can construct a concrete instance of `SbeDeploymentInfoPtrInput` via:
//
//	        SbeDeploymentInfoArgs{...}
//
//	or:
//
//	        nil
type SbeDeploymentInfoPtrInput interface {
	pulumi.Input

	ToSbeDeploymentInfoPtrOutput() SbeDeploymentInfoPtrOutput
	ToSbeDeploymentInfoPtrOutputWithContext(context.Context) SbeDeploymentInfoPtrOutput
}

type sbeDeploymentInfoPtrType SbeDeploymentInfoArgs

func SbeDeploymentInfoPtr(v *SbeDeploymentInfoArgs) SbeDeploymentInfoPtrInput {
	return (*sbeDeploymentInfoPtrType)(v)
}

func (*sbeDeploymentInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SbeDeploymentInfo)(nil)).Elem()
}

func (i *sbeDeploymentInfoPtrType) ToSbeDeploymentInfoPtrOutput() SbeDeploymentInfoPtrOutput {
	return i.ToSbeDeploymentInfoPtrOutputWithContext(context.Background())
}

func (i *sbeDeploymentInfoPtrType) ToSbeDeploymentInfoPtrOutputWithContext(ctx context.Context) SbeDeploymentInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SbeDeploymentInfoPtrOutput)
}

// Solution builder extension (SBE) package and manifest information for the solution builder extension staged for AzureStackHCI cluster deployment.
type SbeDeploymentInfoOutput struct{ *pulumi.OutputState }

func (SbeDeploymentInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SbeDeploymentInfo)(nil)).Elem()
}

func (o SbeDeploymentInfoOutput) ToSbeDeploymentInfoOutput() SbeDeploymentInfoOutput {
	return o
}

func (o SbeDeploymentInfoOutput) ToSbeDeploymentInfoOutputWithContext(ctx context.Context) SbeDeploymentInfoOutput {
	return o
}

func (o SbeDeploymentInfoOutput) ToSbeDeploymentInfoPtrOutput() SbeDeploymentInfoPtrOutput {
	return o.ToSbeDeploymentInfoPtrOutputWithContext(context.Background())
}

func (o SbeDeploymentInfoOutput) ToSbeDeploymentInfoPtrOutputWithContext(ctx context.Context) SbeDeploymentInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SbeDeploymentInfo) *SbeDeploymentInfo {
		return &v
	}).(SbeDeploymentInfoPtrOutput)
}

// SBE family name.
func (o SbeDeploymentInfoOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbeDeploymentInfo) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// SBE manifest publisher.
func (o SbeDeploymentInfoOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbeDeploymentInfo) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// SBE Manifest Creation Date.
func (o SbeDeploymentInfoOutput) SbeManifestCreationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbeDeploymentInfo) *string { return v.SbeManifestCreationDate }).(pulumi.StringPtrOutput)
}

// SBE Manifest Source.
func (o SbeDeploymentInfoOutput) SbeManifestSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbeDeploymentInfo) *string { return v.SbeManifestSource }).(pulumi.StringPtrOutput)
}

// SBE package version.
func (o SbeDeploymentInfoOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbeDeploymentInfo) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SbeDeploymentInfoPtrOutput struct{ *pulumi.OutputState }

func (SbeDeploymentInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SbeDeploymentInfo)(nil)).Elem()
}

func (o SbeDeploymentInfoPtrOutput) ToSbeDeploymentInfoPtrOutput() SbeDeploymentInfoPtrOutput {
	return o
}

func (o SbeDeploymentInfoPtrOutput) ToSbeDeploymentInfoPtrOutputWithContext(ctx context.Context) SbeDeploymentInfoPtrOutput {
	return o
}

func (o SbeDeploymentInfoPtrOutput) Elem() SbeDeploymentInfoOutput {
	return o.ApplyT(func(v *SbeDeploymentInfo) SbeDeploymentInfo {
		if v != nil {
			return *v
		}
		var ret SbeDeploymentInfo
		return ret
	}).(SbeDeploymentInfoOutput)
}

// SBE family name.
func (o SbeDeploymentInfoPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SbeDeploymentInfo) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// SBE manifest publisher.
func (o SbeDeploymentInfoPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SbeDeploymentInfo) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// SBE Manifest Creation Date.
func (o SbeDeploymentInfoPtrOutput) SbeManifestCreationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SbeDeploymentInfo) *string {
		if v == nil {
			return nil
		}
		return v.SbeManifestCreationDate
	}).(pulumi.StringPtrOutput)
}

// SBE Manifest Source.
func (o SbeDeploymentInfoPtrOutput) SbeManifestSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SbeDeploymentInfo) *string {
		if v == nil {
			return nil
		}
		return v.SbeManifestSource
	}).(pulumi.StringPtrOutput)
}

// SBE package version.
func (o SbeDeploymentInfoPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SbeDeploymentInfo) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Solution builder extension (SBE) package and manifest information for the solution builder extension staged for AzureStackHCI cluster deployment.
type SbeDeploymentInfoResponse struct {
	// SBE family name.
	Family *string `pulumi:"family"`
	// SBE manifest publisher.
	Publisher *string `pulumi:"publisher"`
	// SBE Manifest Creation Date.
	SbeManifestCreationDate *string `pulumi:"sbeManifestCreationDate"`
	// SBE Manifest Source.
	SbeManifestSource *string `pulumi:"sbeManifestSource"`
	// SBE package version.
	Version *string `pulumi:"version"`
}

// Solution builder extension (SBE) package and manifest information for the solution builder extension staged for AzureStackHCI cluster deployment.
type SbeDeploymentInfoResponseOutput struct{ *pulumi.OutputState }

func (SbeDeploymentInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SbeDeploymentInfoResponse)(nil)).Elem()
}

func (o SbeDeploymentInfoResponseOutput) ToSbeDeploymentInfoResponseOutput() SbeDeploymentInfoResponseOutput {
	return o
}

func (o SbeDeploymentInfoResponseOutput) ToSbeDeploymentInfoResponseOutputWithContext(ctx context.Context) SbeDeploymentInfoResponseOutput {
	return o
}

// SBE family name.
func (o SbeDeploymentInfoResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbeDeploymentInfoResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// SBE manifest publisher.
func (o SbeDeploymentInfoResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbeDeploymentInfoResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// SBE Manifest Creation Date.
func (o SbeDeploymentInfoResponseOutput) SbeManifestCreationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbeDeploymentInfoResponse) *string { return v.SbeManifestCreationDate }).(pulumi.StringPtrOutput)
}

// SBE Manifest Source.
func (o SbeDeploymentInfoResponseOutput) SbeManifestSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbeDeploymentInfoResponse) *string { return v.SbeManifestSource }).(pulumi.StringPtrOutput)
}

// SBE package version.
func (o SbeDeploymentInfoResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbeDeploymentInfoResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SbeDeploymentInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (SbeDeploymentInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SbeDeploymentInfoResponse)(nil)).Elem()
}

func (o SbeDeploymentInfoResponsePtrOutput) ToSbeDeploymentInfoResponsePtrOutput() SbeDeploymentInfoResponsePtrOutput {
	return o
}

func (o SbeDeploymentInfoResponsePtrOutput) ToSbeDeploymentInfoResponsePtrOutputWithContext(ctx context.Context) SbeDeploymentInfoResponsePtrOutput {
	return o
}

func (o SbeDeploymentInfoResponsePtrOutput) Elem() SbeDeploymentInfoResponseOutput {
	return o.ApplyT(func(v *SbeDeploymentInfoResponse) SbeDeploymentInfoResponse {
		if v != nil {
			return *v
		}
		var ret SbeDeploymentInfoResponse
		return ret
	}).(SbeDeploymentInfoResponseOutput)
}

// SBE family name.
func (o SbeDeploymentInfoResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SbeDeploymentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// SBE manifest publisher.
func (o SbeDeploymentInfoResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SbeDeploymentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// SBE Manifest Creation Date.
func (o SbeDeploymentInfoResponsePtrOutput) SbeManifestCreationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SbeDeploymentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.SbeManifestCreationDate
	}).(pulumi.StringPtrOutput)
}

// SBE Manifest Source.
func (o SbeDeploymentInfoResponsePtrOutput) SbeManifestSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SbeDeploymentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.SbeManifestSource
	}).(pulumi.StringPtrOutput)
}

// SBE package version.
func (o SbeDeploymentInfoResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SbeDeploymentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Solution builder extension (SBE) deployment package information.
type SbeDeploymentPackageInfoResponse struct {
	// SBE deployment validation code.
	Code string `pulumi:"code"`
	// A detailed message that explains the SBE package validation result.
	Message string `pulumi:"message"`
	// This represents discovered update results for matching updates and store it as SBE manifest.
	SbeManifest string `pulumi:"sbeManifest"`
}

// Solution builder extension (SBE) deployment package information.
type SbeDeploymentPackageInfoResponseOutput struct{ *pulumi.OutputState }

func (SbeDeploymentPackageInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SbeDeploymentPackageInfoResponse)(nil)).Elem()
}

func (o SbeDeploymentPackageInfoResponseOutput) ToSbeDeploymentPackageInfoResponseOutput() SbeDeploymentPackageInfoResponseOutput {
	return o
}

func (o SbeDeploymentPackageInfoResponseOutput) ToSbeDeploymentPackageInfoResponseOutputWithContext(ctx context.Context) SbeDeploymentPackageInfoResponseOutput {
	return o
}

// SBE deployment validation code.
func (o SbeDeploymentPackageInfoResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v SbeDeploymentPackageInfoResponse) string { return v.Code }).(pulumi.StringOutput)
}

// A detailed message that explains the SBE package validation result.
func (o SbeDeploymentPackageInfoResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v SbeDeploymentPackageInfoResponse) string { return v.Message }).(pulumi.StringOutput)
}

// This represents discovered update results for matching updates and store it as SBE manifest.
func (o SbeDeploymentPackageInfoResponseOutput) SbeManifest() pulumi.StringOutput {
	return o.ApplyT(func(v SbeDeploymentPackageInfoResponse) string { return v.SbeManifest }).(pulumi.StringOutput)
}

// The solution builder extension (SBE) partner deployment info for cluster.
type SbePartnerInfo struct {
	// SBE credentials list for AzureStackHCI cluster deployment.
	CredentialList []SbeCredentials `pulumi:"credentialList"`
	// List of SBE partner properties for AzureStackHCI cluster deployment.
	PartnerProperties []SbePartnerProperties `pulumi:"partnerProperties"`
	// SBE package and manifest information for the solution Builder Extension staged for AzureStackHCI cluster deployment.
	SbeDeploymentInfo *SbeDeploymentInfo `pulumi:"sbeDeploymentInfo"`
}

// SbePartnerInfoInput is an input type that accepts SbePartnerInfoArgs and SbePartnerInfoOutput values.
// You can construct a concrete instance of `SbePartnerInfoInput` via:
//
//	SbePartnerInfoArgs{...}
type SbePartnerInfoInput interface {
	pulumi.Input

	ToSbePartnerInfoOutput() SbePartnerInfoOutput
	ToSbePartnerInfoOutputWithContext(context.Context) SbePartnerInfoOutput
}

// The solution builder extension (SBE) partner deployment info for cluster.
type SbePartnerInfoArgs struct {
	// SBE credentials list for AzureStackHCI cluster deployment.
	CredentialList SbeCredentialsArrayInput `pulumi:"credentialList"`
	// List of SBE partner properties for AzureStackHCI cluster deployment.
	PartnerProperties SbePartnerPropertiesArrayInput `pulumi:"partnerProperties"`
	// SBE package and manifest information for the solution Builder Extension staged for AzureStackHCI cluster deployment.
	SbeDeploymentInfo SbeDeploymentInfoPtrInput `pulumi:"sbeDeploymentInfo"`
}

func (SbePartnerInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SbePartnerInfo)(nil)).Elem()
}

func (i SbePartnerInfoArgs) ToSbePartnerInfoOutput() SbePartnerInfoOutput {
	return i.ToSbePartnerInfoOutputWithContext(context.Background())
}

func (i SbePartnerInfoArgs) ToSbePartnerInfoOutputWithContext(ctx context.Context) SbePartnerInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SbePartnerInfoOutput)
}

func (i SbePartnerInfoArgs) ToSbePartnerInfoPtrOutput() SbePartnerInfoPtrOutput {
	return i.ToSbePartnerInfoPtrOutputWithContext(context.Background())
}

func (i SbePartnerInfoArgs) ToSbePartnerInfoPtrOutputWithContext(ctx context.Context) SbePartnerInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SbePartnerInfoOutput).ToSbePartnerInfoPtrOutputWithContext(ctx)
}

// SbePartnerInfoPtrInput is an input type that accepts SbePartnerInfoArgs, SbePartnerInfoPtr and SbePartnerInfoPtrOutput values.
// You can construct a concrete instance of `SbePartnerInfoPtrInput` via:
//
//	        SbePartnerInfoArgs{...}
//
//	or:
//
//	        nil
type SbePartnerInfoPtrInput interface {
	pulumi.Input

	ToSbePartnerInfoPtrOutput() SbePartnerInfoPtrOutput
	ToSbePartnerInfoPtrOutputWithContext(context.Context) SbePartnerInfoPtrOutput
}

type sbePartnerInfoPtrType SbePartnerInfoArgs

func SbePartnerInfoPtr(v *SbePartnerInfoArgs) SbePartnerInfoPtrInput {
	return (*sbePartnerInfoPtrType)(v)
}

func (*sbePartnerInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SbePartnerInfo)(nil)).Elem()
}

func (i *sbePartnerInfoPtrType) ToSbePartnerInfoPtrOutput() SbePartnerInfoPtrOutput {
	return i.ToSbePartnerInfoPtrOutputWithContext(context.Background())
}

func (i *sbePartnerInfoPtrType) ToSbePartnerInfoPtrOutputWithContext(ctx context.Context) SbePartnerInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SbePartnerInfoPtrOutput)
}

// The solution builder extension (SBE) partner deployment info for cluster.
type SbePartnerInfoOutput struct{ *pulumi.OutputState }

func (SbePartnerInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SbePartnerInfo)(nil)).Elem()
}

func (o SbePartnerInfoOutput) ToSbePartnerInfoOutput() SbePartnerInfoOutput {
	return o
}

func (o SbePartnerInfoOutput) ToSbePartnerInfoOutputWithContext(ctx context.Context) SbePartnerInfoOutput {
	return o
}

func (o SbePartnerInfoOutput) ToSbePartnerInfoPtrOutput() SbePartnerInfoPtrOutput {
	return o.ToSbePartnerInfoPtrOutputWithContext(context.Background())
}

func (o SbePartnerInfoOutput) ToSbePartnerInfoPtrOutputWithContext(ctx context.Context) SbePartnerInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SbePartnerInfo) *SbePartnerInfo {
		return &v
	}).(SbePartnerInfoPtrOutput)
}

// SBE credentials list for AzureStackHCI cluster deployment.
func (o SbePartnerInfoOutput) CredentialList() SbeCredentialsArrayOutput {
	return o.ApplyT(func(v SbePartnerInfo) []SbeCredentials { return v.CredentialList }).(SbeCredentialsArrayOutput)
}

// List of SBE partner properties for AzureStackHCI cluster deployment.
func (o SbePartnerInfoOutput) PartnerProperties() SbePartnerPropertiesArrayOutput {
	return o.ApplyT(func(v SbePartnerInfo) []SbePartnerProperties { return v.PartnerProperties }).(SbePartnerPropertiesArrayOutput)
}

// SBE package and manifest information for the solution Builder Extension staged for AzureStackHCI cluster deployment.
func (o SbePartnerInfoOutput) SbeDeploymentInfo() SbeDeploymentInfoPtrOutput {
	return o.ApplyT(func(v SbePartnerInfo) *SbeDeploymentInfo { return v.SbeDeploymentInfo }).(SbeDeploymentInfoPtrOutput)
}

type SbePartnerInfoPtrOutput struct{ *pulumi.OutputState }

func (SbePartnerInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SbePartnerInfo)(nil)).Elem()
}

func (o SbePartnerInfoPtrOutput) ToSbePartnerInfoPtrOutput() SbePartnerInfoPtrOutput {
	return o
}

func (o SbePartnerInfoPtrOutput) ToSbePartnerInfoPtrOutputWithContext(ctx context.Context) SbePartnerInfoPtrOutput {
	return o
}

func (o SbePartnerInfoPtrOutput) Elem() SbePartnerInfoOutput {
	return o.ApplyT(func(v *SbePartnerInfo) SbePartnerInfo {
		if v != nil {
			return *v
		}
		var ret SbePartnerInfo
		return ret
	}).(SbePartnerInfoOutput)
}

// SBE credentials list for AzureStackHCI cluster deployment.
func (o SbePartnerInfoPtrOutput) CredentialList() SbeCredentialsArrayOutput {
	return o.ApplyT(func(v *SbePartnerInfo) []SbeCredentials {
		if v == nil {
			return nil
		}
		return v.CredentialList
	}).(SbeCredentialsArrayOutput)
}

// List of SBE partner properties for AzureStackHCI cluster deployment.
func (o SbePartnerInfoPtrOutput) PartnerProperties() SbePartnerPropertiesArrayOutput {
	return o.ApplyT(func(v *SbePartnerInfo) []SbePartnerProperties {
		if v == nil {
			return nil
		}
		return v.PartnerProperties
	}).(SbePartnerPropertiesArrayOutput)
}

// SBE package and manifest information for the solution Builder Extension staged for AzureStackHCI cluster deployment.
func (o SbePartnerInfoPtrOutput) SbeDeploymentInfo() SbeDeploymentInfoPtrOutput {
	return o.ApplyT(func(v *SbePartnerInfo) *SbeDeploymentInfo {
		if v == nil {
			return nil
		}
		return v.SbeDeploymentInfo
	}).(SbeDeploymentInfoPtrOutput)
}

// The solution builder extension (SBE) partner deployment info for cluster.
type SbePartnerInfoResponse struct {
	// SBE credentials list for AzureStackHCI cluster deployment.
	CredentialList []SbeCredentialsResponse `pulumi:"credentialList"`
	// List of SBE partner properties for AzureStackHCI cluster deployment.
	PartnerProperties []SbePartnerPropertiesResponse `pulumi:"partnerProperties"`
	// SBE package and manifest information for the solution Builder Extension staged for AzureStackHCI cluster deployment.
	SbeDeploymentInfo *SbeDeploymentInfoResponse `pulumi:"sbeDeploymentInfo"`
}

// The solution builder extension (SBE) partner deployment info for cluster.
type SbePartnerInfoResponseOutput struct{ *pulumi.OutputState }

func (SbePartnerInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SbePartnerInfoResponse)(nil)).Elem()
}

func (o SbePartnerInfoResponseOutput) ToSbePartnerInfoResponseOutput() SbePartnerInfoResponseOutput {
	return o
}

func (o SbePartnerInfoResponseOutput) ToSbePartnerInfoResponseOutputWithContext(ctx context.Context) SbePartnerInfoResponseOutput {
	return o
}

// SBE credentials list for AzureStackHCI cluster deployment.
func (o SbePartnerInfoResponseOutput) CredentialList() SbeCredentialsResponseArrayOutput {
	return o.ApplyT(func(v SbePartnerInfoResponse) []SbeCredentialsResponse { return v.CredentialList }).(SbeCredentialsResponseArrayOutput)
}

// List of SBE partner properties for AzureStackHCI cluster deployment.
func (o SbePartnerInfoResponseOutput) PartnerProperties() SbePartnerPropertiesResponseArrayOutput {
	return o.ApplyT(func(v SbePartnerInfoResponse) []SbePartnerPropertiesResponse { return v.PartnerProperties }).(SbePartnerPropertiesResponseArrayOutput)
}

// SBE package and manifest information for the solution Builder Extension staged for AzureStackHCI cluster deployment.
func (o SbePartnerInfoResponseOutput) SbeDeploymentInfo() SbeDeploymentInfoResponsePtrOutput {
	return o.ApplyT(func(v SbePartnerInfoResponse) *SbeDeploymentInfoResponse { return v.SbeDeploymentInfo }).(SbeDeploymentInfoResponsePtrOutput)
}

type SbePartnerInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (SbePartnerInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SbePartnerInfoResponse)(nil)).Elem()
}

func (o SbePartnerInfoResponsePtrOutput) ToSbePartnerInfoResponsePtrOutput() SbePartnerInfoResponsePtrOutput {
	return o
}

func (o SbePartnerInfoResponsePtrOutput) ToSbePartnerInfoResponsePtrOutputWithContext(ctx context.Context) SbePartnerInfoResponsePtrOutput {
	return o
}

func (o SbePartnerInfoResponsePtrOutput) Elem() SbePartnerInfoResponseOutput {
	return o.ApplyT(func(v *SbePartnerInfoResponse) SbePartnerInfoResponse {
		if v != nil {
			return *v
		}
		var ret SbePartnerInfoResponse
		return ret
	}).(SbePartnerInfoResponseOutput)
}

// SBE credentials list for AzureStackHCI cluster deployment.
func (o SbePartnerInfoResponsePtrOutput) CredentialList() SbeCredentialsResponseArrayOutput {
	return o.ApplyT(func(v *SbePartnerInfoResponse) []SbeCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.CredentialList
	}).(SbeCredentialsResponseArrayOutput)
}

// List of SBE partner properties for AzureStackHCI cluster deployment.
func (o SbePartnerInfoResponsePtrOutput) PartnerProperties() SbePartnerPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *SbePartnerInfoResponse) []SbePartnerPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.PartnerProperties
	}).(SbePartnerPropertiesResponseArrayOutput)
}

// SBE package and manifest information for the solution Builder Extension staged for AzureStackHCI cluster deployment.
func (o SbePartnerInfoResponsePtrOutput) SbeDeploymentInfo() SbeDeploymentInfoResponsePtrOutput {
	return o.ApplyT(func(v *SbePartnerInfoResponse) *SbeDeploymentInfoResponse {
		if v == nil {
			return nil
		}
		return v.SbeDeploymentInfo
	}).(SbeDeploymentInfoResponsePtrOutput)
}

// Solution builder extension (SBE) partner properties object.
type SbePartnerProperties struct {
	// SBE partner property name.
	Name *string `pulumi:"name"`
	// SBE partner property value.
	Value *string `pulumi:"value"`
}

// SbePartnerPropertiesInput is an input type that accepts SbePartnerPropertiesArgs and SbePartnerPropertiesOutput values.
// You can construct a concrete instance of `SbePartnerPropertiesInput` via:
//
//	SbePartnerPropertiesArgs{...}
type SbePartnerPropertiesInput interface {
	pulumi.Input

	ToSbePartnerPropertiesOutput() SbePartnerPropertiesOutput
	ToSbePartnerPropertiesOutputWithContext(context.Context) SbePartnerPropertiesOutput
}

// Solution builder extension (SBE) partner properties object.
type SbePartnerPropertiesArgs struct {
	// SBE partner property name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SBE partner property value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SbePartnerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SbePartnerProperties)(nil)).Elem()
}

func (i SbePartnerPropertiesArgs) ToSbePartnerPropertiesOutput() SbePartnerPropertiesOutput {
	return i.ToSbePartnerPropertiesOutputWithContext(context.Background())
}

func (i SbePartnerPropertiesArgs) ToSbePartnerPropertiesOutputWithContext(ctx context.Context) SbePartnerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SbePartnerPropertiesOutput)
}

// SbePartnerPropertiesArrayInput is an input type that accepts SbePartnerPropertiesArray and SbePartnerPropertiesArrayOutput values.
// You can construct a concrete instance of `SbePartnerPropertiesArrayInput` via:
//
//	SbePartnerPropertiesArray{ SbePartnerPropertiesArgs{...} }
type SbePartnerPropertiesArrayInput interface {
	pulumi.Input

	ToSbePartnerPropertiesArrayOutput() SbePartnerPropertiesArrayOutput
	ToSbePartnerPropertiesArrayOutputWithContext(context.Context) SbePartnerPropertiesArrayOutput
}

type SbePartnerPropertiesArray []SbePartnerPropertiesInput

func (SbePartnerPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SbePartnerProperties)(nil)).Elem()
}

func (i SbePartnerPropertiesArray) ToSbePartnerPropertiesArrayOutput() SbePartnerPropertiesArrayOutput {
	return i.ToSbePartnerPropertiesArrayOutputWithContext(context.Background())
}

func (i SbePartnerPropertiesArray) ToSbePartnerPropertiesArrayOutputWithContext(ctx context.Context) SbePartnerPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SbePartnerPropertiesArrayOutput)
}

// Solution builder extension (SBE) partner properties object.
type SbePartnerPropertiesOutput struct{ *pulumi.OutputState }

func (SbePartnerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SbePartnerProperties)(nil)).Elem()
}

func (o SbePartnerPropertiesOutput) ToSbePartnerPropertiesOutput() SbePartnerPropertiesOutput {
	return o
}

func (o SbePartnerPropertiesOutput) ToSbePartnerPropertiesOutputWithContext(ctx context.Context) SbePartnerPropertiesOutput {
	return o
}

// SBE partner property name.
func (o SbePartnerPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbePartnerProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SBE partner property value.
func (o SbePartnerPropertiesOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbePartnerProperties) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SbePartnerPropertiesArrayOutput struct{ *pulumi.OutputState }

func (SbePartnerPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SbePartnerProperties)(nil)).Elem()
}

func (o SbePartnerPropertiesArrayOutput) ToSbePartnerPropertiesArrayOutput() SbePartnerPropertiesArrayOutput {
	return o
}

func (o SbePartnerPropertiesArrayOutput) ToSbePartnerPropertiesArrayOutputWithContext(ctx context.Context) SbePartnerPropertiesArrayOutput {
	return o
}

func (o SbePartnerPropertiesArrayOutput) Index(i pulumi.IntInput) SbePartnerPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SbePartnerProperties {
		return vs[0].([]SbePartnerProperties)[vs[1].(int)]
	}).(SbePartnerPropertiesOutput)
}

// Solution builder extension (SBE) partner properties object.
type SbePartnerPropertiesResponse struct {
	// SBE partner property name.
	Name *string `pulumi:"name"`
	// SBE partner property value.
	Value *string `pulumi:"value"`
}

// Solution builder extension (SBE) partner properties object.
type SbePartnerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SbePartnerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SbePartnerPropertiesResponse)(nil)).Elem()
}

func (o SbePartnerPropertiesResponseOutput) ToSbePartnerPropertiesResponseOutput() SbePartnerPropertiesResponseOutput {
	return o
}

func (o SbePartnerPropertiesResponseOutput) ToSbePartnerPropertiesResponseOutputWithContext(ctx context.Context) SbePartnerPropertiesResponseOutput {
	return o
}

// SBE partner property name.
func (o SbePartnerPropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbePartnerPropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SBE partner property value.
func (o SbePartnerPropertiesResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SbePartnerPropertiesResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SbePartnerPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (SbePartnerPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SbePartnerPropertiesResponse)(nil)).Elem()
}

func (o SbePartnerPropertiesResponseArrayOutput) ToSbePartnerPropertiesResponseArrayOutput() SbePartnerPropertiesResponseArrayOutput {
	return o
}

func (o SbePartnerPropertiesResponseArrayOutput) ToSbePartnerPropertiesResponseArrayOutputWithContext(ctx context.Context) SbePartnerPropertiesResponseArrayOutput {
	return o
}

func (o SbePartnerPropertiesResponseArrayOutput) Index(i pulumi.IntInput) SbePartnerPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SbePartnerPropertiesResponse {
		return vs[0].([]SbePartnerPropertiesResponse)[vs[1].(int)]
	}).(SbePartnerPropertiesResponseOutput)
}

// Scale units will contains list of deployment data
type ScaleUnits struct {
	// Deployment Data to deploy AzureStackHCI Cluster.
	DeploymentData DeploymentData `pulumi:"deploymentData"`
	// Solution builder extension (SBE) partner properties
	SbePartnerInfo *SbePartnerInfo `pulumi:"sbePartnerInfo"`
}

// Defaults sets the appropriate defaults for ScaleUnits
func (val *ScaleUnits) Defaults() *ScaleUnits {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.DeploymentData = *tmp.DeploymentData.Defaults()

	return &tmp
}

// ScaleUnitsInput is an input type that accepts ScaleUnitsArgs and ScaleUnitsOutput values.
// You can construct a concrete instance of `ScaleUnitsInput` via:
//
//	ScaleUnitsArgs{...}
type ScaleUnitsInput interface {
	pulumi.Input

	ToScaleUnitsOutput() ScaleUnitsOutput
	ToScaleUnitsOutputWithContext(context.Context) ScaleUnitsOutput
}

// Scale units will contains list of deployment data
type ScaleUnitsArgs struct {
	// Deployment Data to deploy AzureStackHCI Cluster.
	DeploymentData DeploymentDataInput `pulumi:"deploymentData"`
	// Solution builder extension (SBE) partner properties
	SbePartnerInfo SbePartnerInfoPtrInput `pulumi:"sbePartnerInfo"`
}

// Defaults sets the appropriate defaults for ScaleUnitsArgs
func (val *ScaleUnitsArgs) Defaults() *ScaleUnitsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ScaleUnitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleUnits)(nil)).Elem()
}

func (i ScaleUnitsArgs) ToScaleUnitsOutput() ScaleUnitsOutput {
	return i.ToScaleUnitsOutputWithContext(context.Background())
}

func (i ScaleUnitsArgs) ToScaleUnitsOutputWithContext(ctx context.Context) ScaleUnitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleUnitsOutput)
}

// ScaleUnitsArrayInput is an input type that accepts ScaleUnitsArray and ScaleUnitsArrayOutput values.
// You can construct a concrete instance of `ScaleUnitsArrayInput` via:
//
//	ScaleUnitsArray{ ScaleUnitsArgs{...} }
type ScaleUnitsArrayInput interface {
	pulumi.Input

	ToScaleUnitsArrayOutput() ScaleUnitsArrayOutput
	ToScaleUnitsArrayOutputWithContext(context.Context) ScaleUnitsArrayOutput
}

type ScaleUnitsArray []ScaleUnitsInput

func (ScaleUnitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleUnits)(nil)).Elem()
}

func (i ScaleUnitsArray) ToScaleUnitsArrayOutput() ScaleUnitsArrayOutput {
	return i.ToScaleUnitsArrayOutputWithContext(context.Background())
}

func (i ScaleUnitsArray) ToScaleUnitsArrayOutputWithContext(ctx context.Context) ScaleUnitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleUnitsArrayOutput)
}

// Scale units will contains list of deployment data
type ScaleUnitsOutput struct{ *pulumi.OutputState }

func (ScaleUnitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleUnits)(nil)).Elem()
}

func (o ScaleUnitsOutput) ToScaleUnitsOutput() ScaleUnitsOutput {
	return o
}

func (o ScaleUnitsOutput) ToScaleUnitsOutputWithContext(ctx context.Context) ScaleUnitsOutput {
	return o
}

// Deployment Data to deploy AzureStackHCI Cluster.
func (o ScaleUnitsOutput) DeploymentData() DeploymentDataOutput {
	return o.ApplyT(func(v ScaleUnits) DeploymentData { return v.DeploymentData }).(DeploymentDataOutput)
}

// Solution builder extension (SBE) partner properties
func (o ScaleUnitsOutput) SbePartnerInfo() SbePartnerInfoPtrOutput {
	return o.ApplyT(func(v ScaleUnits) *SbePartnerInfo { return v.SbePartnerInfo }).(SbePartnerInfoPtrOutput)
}

type ScaleUnitsArrayOutput struct{ *pulumi.OutputState }

func (ScaleUnitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleUnits)(nil)).Elem()
}

func (o ScaleUnitsArrayOutput) ToScaleUnitsArrayOutput() ScaleUnitsArrayOutput {
	return o
}

func (o ScaleUnitsArrayOutput) ToScaleUnitsArrayOutputWithContext(ctx context.Context) ScaleUnitsArrayOutput {
	return o
}

func (o ScaleUnitsArrayOutput) Index(i pulumi.IntInput) ScaleUnitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleUnits {
		return vs[0].([]ScaleUnits)[vs[1].(int)]
	}).(ScaleUnitsOutput)
}

// Scale units will contains list of deployment data
type ScaleUnitsResponse struct {
	// Deployment Data to deploy AzureStackHCI Cluster.
	DeploymentData DeploymentDataResponse `pulumi:"deploymentData"`
	// Solution builder extension (SBE) partner properties
	SbePartnerInfo *SbePartnerInfoResponse `pulumi:"sbePartnerInfo"`
}

// Defaults sets the appropriate defaults for ScaleUnitsResponse
func (val *ScaleUnitsResponse) Defaults() *ScaleUnitsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.DeploymentData = *tmp.DeploymentData.Defaults()

	return &tmp
}

// Scale units will contains list of deployment data
type ScaleUnitsResponseOutput struct{ *pulumi.OutputState }

func (ScaleUnitsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleUnitsResponse)(nil)).Elem()
}

func (o ScaleUnitsResponseOutput) ToScaleUnitsResponseOutput() ScaleUnitsResponseOutput {
	return o
}

func (o ScaleUnitsResponseOutput) ToScaleUnitsResponseOutputWithContext(ctx context.Context) ScaleUnitsResponseOutput {
	return o
}

// Deployment Data to deploy AzureStackHCI Cluster.
func (o ScaleUnitsResponseOutput) DeploymentData() DeploymentDataResponseOutput {
	return o.ApplyT(func(v ScaleUnitsResponse) DeploymentDataResponse { return v.DeploymentData }).(DeploymentDataResponseOutput)
}

// Solution builder extension (SBE) partner properties
func (o ScaleUnitsResponseOutput) SbePartnerInfo() SbePartnerInfoResponsePtrOutput {
	return o.ApplyT(func(v ScaleUnitsResponse) *SbePartnerInfoResponse { return v.SbePartnerInfo }).(SbePartnerInfoResponsePtrOutput)
}

type ScaleUnitsResponseArrayOutput struct{ *pulumi.OutputState }

func (ScaleUnitsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleUnitsResponse)(nil)).Elem()
}

func (o ScaleUnitsResponseArrayOutput) ToScaleUnitsResponseArrayOutput() ScaleUnitsResponseArrayOutput {
	return o
}

func (o ScaleUnitsResponseArrayOutput) ToScaleUnitsResponseArrayOutputWithContext(ctx context.Context) ScaleUnitsResponseArrayOutput {
	return o
}

func (o ScaleUnitsResponseArrayOutput) Index(i pulumi.IntInput) ScaleUnitsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleUnitsResponse {
		return vs[0].([]ScaleUnitsResponse)[vs[1].(int)]
	}).(ScaleUnitsResponseOutput)
}

// SDN Integration config to deploy AzureStackHCI Cluster.
type SdnIntegration struct {
	// network controller config for SDN Integration to deploy AzureStackHCI Cluster.
	NetworkController *NetworkController `pulumi:"networkController"`
}

// SdnIntegrationInput is an input type that accepts SdnIntegrationArgs and SdnIntegrationOutput values.
// You can construct a concrete instance of `SdnIntegrationInput` via:
//
//	SdnIntegrationArgs{...}
type SdnIntegrationInput interface {
	pulumi.Input

	ToSdnIntegrationOutput() SdnIntegrationOutput
	ToSdnIntegrationOutputWithContext(context.Context) SdnIntegrationOutput
}

// SDN Integration config to deploy AzureStackHCI Cluster.
type SdnIntegrationArgs struct {
	// network controller config for SDN Integration to deploy AzureStackHCI Cluster.
	NetworkController NetworkControllerPtrInput `pulumi:"networkController"`
}

func (SdnIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnIntegration)(nil)).Elem()
}

func (i SdnIntegrationArgs) ToSdnIntegrationOutput() SdnIntegrationOutput {
	return i.ToSdnIntegrationOutputWithContext(context.Background())
}

func (i SdnIntegrationArgs) ToSdnIntegrationOutputWithContext(ctx context.Context) SdnIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnIntegrationOutput)
}

func (i SdnIntegrationArgs) ToSdnIntegrationPtrOutput() SdnIntegrationPtrOutput {
	return i.ToSdnIntegrationPtrOutputWithContext(context.Background())
}

func (i SdnIntegrationArgs) ToSdnIntegrationPtrOutputWithContext(ctx context.Context) SdnIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnIntegrationOutput).ToSdnIntegrationPtrOutputWithContext(ctx)
}

// SdnIntegrationPtrInput is an input type that accepts SdnIntegrationArgs, SdnIntegrationPtr and SdnIntegrationPtrOutput values.
// You can construct a concrete instance of `SdnIntegrationPtrInput` via:
//
//	        SdnIntegrationArgs{...}
//
//	or:
//
//	        nil
type SdnIntegrationPtrInput interface {
	pulumi.Input

	ToSdnIntegrationPtrOutput() SdnIntegrationPtrOutput
	ToSdnIntegrationPtrOutputWithContext(context.Context) SdnIntegrationPtrOutput
}

type sdnIntegrationPtrType SdnIntegrationArgs

func SdnIntegrationPtr(v *SdnIntegrationArgs) SdnIntegrationPtrInput {
	return (*sdnIntegrationPtrType)(v)
}

func (*sdnIntegrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SdnIntegration)(nil)).Elem()
}

func (i *sdnIntegrationPtrType) ToSdnIntegrationPtrOutput() SdnIntegrationPtrOutput {
	return i.ToSdnIntegrationPtrOutputWithContext(context.Background())
}

func (i *sdnIntegrationPtrType) ToSdnIntegrationPtrOutputWithContext(ctx context.Context) SdnIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdnIntegrationPtrOutput)
}

// SDN Integration config to deploy AzureStackHCI Cluster.
type SdnIntegrationOutput struct{ *pulumi.OutputState }

func (SdnIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnIntegration)(nil)).Elem()
}

func (o SdnIntegrationOutput) ToSdnIntegrationOutput() SdnIntegrationOutput {
	return o
}

func (o SdnIntegrationOutput) ToSdnIntegrationOutputWithContext(ctx context.Context) SdnIntegrationOutput {
	return o
}

func (o SdnIntegrationOutput) ToSdnIntegrationPtrOutput() SdnIntegrationPtrOutput {
	return o.ToSdnIntegrationPtrOutputWithContext(context.Background())
}

func (o SdnIntegrationOutput) ToSdnIntegrationPtrOutputWithContext(ctx context.Context) SdnIntegrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SdnIntegration) *SdnIntegration {
		return &v
	}).(SdnIntegrationPtrOutput)
}

// network controller config for SDN Integration to deploy AzureStackHCI Cluster.
func (o SdnIntegrationOutput) NetworkController() NetworkControllerPtrOutput {
	return o.ApplyT(func(v SdnIntegration) *NetworkController { return v.NetworkController }).(NetworkControllerPtrOutput)
}

type SdnIntegrationPtrOutput struct{ *pulumi.OutputState }

func (SdnIntegrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SdnIntegration)(nil)).Elem()
}

func (o SdnIntegrationPtrOutput) ToSdnIntegrationPtrOutput() SdnIntegrationPtrOutput {
	return o
}

func (o SdnIntegrationPtrOutput) ToSdnIntegrationPtrOutputWithContext(ctx context.Context) SdnIntegrationPtrOutput {
	return o
}

func (o SdnIntegrationPtrOutput) Elem() SdnIntegrationOutput {
	return o.ApplyT(func(v *SdnIntegration) SdnIntegration {
		if v != nil {
			return *v
		}
		var ret SdnIntegration
		return ret
	}).(SdnIntegrationOutput)
}

// network controller config for SDN Integration to deploy AzureStackHCI Cluster.
func (o SdnIntegrationPtrOutput) NetworkController() NetworkControllerPtrOutput {
	return o.ApplyT(func(v *SdnIntegration) *NetworkController {
		if v == nil {
			return nil
		}
		return v.NetworkController
	}).(NetworkControllerPtrOutput)
}

// SDN Integration config to deploy AzureStackHCI Cluster.
type SdnIntegrationResponse struct {
	// network controller config for SDN Integration to deploy AzureStackHCI Cluster.
	NetworkController *NetworkControllerResponse `pulumi:"networkController"`
}

// SDN Integration config to deploy AzureStackHCI Cluster.
type SdnIntegrationResponseOutput struct{ *pulumi.OutputState }

func (SdnIntegrationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdnIntegrationResponse)(nil)).Elem()
}

func (o SdnIntegrationResponseOutput) ToSdnIntegrationResponseOutput() SdnIntegrationResponseOutput {
	return o
}

func (o SdnIntegrationResponseOutput) ToSdnIntegrationResponseOutputWithContext(ctx context.Context) SdnIntegrationResponseOutput {
	return o
}

// network controller config for SDN Integration to deploy AzureStackHCI Cluster.
func (o SdnIntegrationResponseOutput) NetworkController() NetworkControllerResponsePtrOutput {
	return o.ApplyT(func(v SdnIntegrationResponse) *NetworkControllerResponse { return v.NetworkController }).(NetworkControllerResponsePtrOutput)
}

type SdnIntegrationResponsePtrOutput struct{ *pulumi.OutputState }

func (SdnIntegrationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SdnIntegrationResponse)(nil)).Elem()
}

func (o SdnIntegrationResponsePtrOutput) ToSdnIntegrationResponsePtrOutput() SdnIntegrationResponsePtrOutput {
	return o
}

func (o SdnIntegrationResponsePtrOutput) ToSdnIntegrationResponsePtrOutputWithContext(ctx context.Context) SdnIntegrationResponsePtrOutput {
	return o
}

func (o SdnIntegrationResponsePtrOutput) Elem() SdnIntegrationResponseOutput {
	return o.ApplyT(func(v *SdnIntegrationResponse) SdnIntegrationResponse {
		if v != nil {
			return *v
		}
		var ret SdnIntegrationResponse
		return ret
	}).(SdnIntegrationResponseOutput)
}

// network controller config for SDN Integration to deploy AzureStackHCI Cluster.
func (o SdnIntegrationResponsePtrOutput) NetworkController() NetworkControllerResponsePtrOutput {
	return o.ApplyT(func(v *SdnIntegrationResponse) *NetworkControllerResponse {
		if v == nil {
			return nil
		}
		return v.NetworkController
	}).(NetworkControllerResponsePtrOutput)
}

// Security compliance properties of the resource
type SecurityComplianceStatusResponse struct {
	// Indicates whether data at-rest encryption is enabled on Azure Stack HCI clustered volumes.
	DataAtRestEncrypted string `pulumi:"dataAtRestEncrypted"`
	// Indicates whether HCI cluster has data in-transit protection.
	DataInTransitProtected string `pulumi:"dataInTransitProtected"`
	// Time in UTC when compliance status was last updated.
	LastUpdated string `pulumi:"lastUpdated"`
	// Indicates whether HCI hosts meets secured-core server requirements.
	SecuredCoreCompliance string `pulumi:"securedCoreCompliance"`
	// Indicates whether HCI hosts have enforced consistent Windows Defender Application Control.
	WdacCompliance string `pulumi:"wdacCompliance"`
}

// Security compliance properties of the resource
type SecurityComplianceStatusResponseOutput struct{ *pulumi.OutputState }

func (SecurityComplianceStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityComplianceStatusResponse)(nil)).Elem()
}

func (o SecurityComplianceStatusResponseOutput) ToSecurityComplianceStatusResponseOutput() SecurityComplianceStatusResponseOutput {
	return o
}

func (o SecurityComplianceStatusResponseOutput) ToSecurityComplianceStatusResponseOutputWithContext(ctx context.Context) SecurityComplianceStatusResponseOutput {
	return o
}

// Indicates whether data at-rest encryption is enabled on Azure Stack HCI clustered volumes.
func (o SecurityComplianceStatusResponseOutput) DataAtRestEncrypted() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityComplianceStatusResponse) string { return v.DataAtRestEncrypted }).(pulumi.StringOutput)
}

// Indicates whether HCI cluster has data in-transit protection.
func (o SecurityComplianceStatusResponseOutput) DataInTransitProtected() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityComplianceStatusResponse) string { return v.DataInTransitProtected }).(pulumi.StringOutput)
}

// Time in UTC when compliance status was last updated.
func (o SecurityComplianceStatusResponseOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityComplianceStatusResponse) string { return v.LastUpdated }).(pulumi.StringOutput)
}

// Indicates whether HCI hosts meets secured-core server requirements.
func (o SecurityComplianceStatusResponseOutput) SecuredCoreCompliance() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityComplianceStatusResponse) string { return v.SecuredCoreCompliance }).(pulumi.StringOutput)
}

// Indicates whether HCI hosts have enforced consistent Windows Defender Application Control.
func (o SecurityComplianceStatusResponseOutput) WdacCompliance() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityComplianceStatusResponse) string { return v.WdacCompliance }).(pulumi.StringOutput)
}

// Service configuration details
type ServiceConfiguration struct {
	// The port on which service is enabled.
	Port float64 `pulumi:"port"`
	// Name of the service.
	ServiceName string `pulumi:"serviceName"`
}

// ServiceConfigurationInput is an input type that accepts ServiceConfigurationArgs and ServiceConfigurationOutput values.
// You can construct a concrete instance of `ServiceConfigurationInput` via:
//
//	ServiceConfigurationArgs{...}
type ServiceConfigurationInput interface {
	pulumi.Input

	ToServiceConfigurationOutput() ServiceConfigurationOutput
	ToServiceConfigurationOutputWithContext(context.Context) ServiceConfigurationOutput
}

// Service configuration details
type ServiceConfigurationArgs struct {
	// The port on which service is enabled.
	Port pulumi.Float64Input `pulumi:"port"`
	// Name of the service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (ServiceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConfiguration)(nil)).Elem()
}

func (i ServiceConfigurationArgs) ToServiceConfigurationOutput() ServiceConfigurationOutput {
	return i.ToServiceConfigurationOutputWithContext(context.Background())
}

func (i ServiceConfigurationArgs) ToServiceConfigurationOutputWithContext(ctx context.Context) ServiceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConfigurationOutput)
}

// ServiceConfigurationArrayInput is an input type that accepts ServiceConfigurationArray and ServiceConfigurationArrayOutput values.
// You can construct a concrete instance of `ServiceConfigurationArrayInput` via:
//
//	ServiceConfigurationArray{ ServiceConfigurationArgs{...} }
type ServiceConfigurationArrayInput interface {
	pulumi.Input

	ToServiceConfigurationArrayOutput() ServiceConfigurationArrayOutput
	ToServiceConfigurationArrayOutputWithContext(context.Context) ServiceConfigurationArrayOutput
}

type ServiceConfigurationArray []ServiceConfigurationInput

func (ServiceConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceConfiguration)(nil)).Elem()
}

func (i ServiceConfigurationArray) ToServiceConfigurationArrayOutput() ServiceConfigurationArrayOutput {
	return i.ToServiceConfigurationArrayOutputWithContext(context.Background())
}

func (i ServiceConfigurationArray) ToServiceConfigurationArrayOutputWithContext(ctx context.Context) ServiceConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConfigurationArrayOutput)
}

// Service configuration details
type ServiceConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConfiguration)(nil)).Elem()
}

func (o ServiceConfigurationOutput) ToServiceConfigurationOutput() ServiceConfigurationOutput {
	return o
}

func (o ServiceConfigurationOutput) ToServiceConfigurationOutputWithContext(ctx context.Context) ServiceConfigurationOutput {
	return o
}

// The port on which service is enabled.
func (o ServiceConfigurationOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v ServiceConfiguration) float64 { return v.Port }).(pulumi.Float64Output)
}

// Name of the service.
func (o ServiceConfigurationOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceConfiguration) string { return v.ServiceName }).(pulumi.StringOutput)
}

type ServiceConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ServiceConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceConfiguration)(nil)).Elem()
}

func (o ServiceConfigurationArrayOutput) ToServiceConfigurationArrayOutput() ServiceConfigurationArrayOutput {
	return o
}

func (o ServiceConfigurationArrayOutput) ToServiceConfigurationArrayOutputWithContext(ctx context.Context) ServiceConfigurationArrayOutput {
	return o
}

func (o ServiceConfigurationArrayOutput) Index(i pulumi.IntInput) ServiceConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceConfiguration {
		return vs[0].([]ServiceConfiguration)[vs[1].(int)]
	}).(ServiceConfigurationOutput)
}

// Service configuration details
type ServiceConfigurationResponse struct {
	// The port on which service is enabled.
	Port float64 `pulumi:"port"`
	// Name of the service.
	ServiceName string `pulumi:"serviceName"`
}

// Service configuration details
type ServiceConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ServiceConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConfigurationResponse)(nil)).Elem()
}

func (o ServiceConfigurationResponseOutput) ToServiceConfigurationResponseOutput() ServiceConfigurationResponseOutput {
	return o
}

func (o ServiceConfigurationResponseOutput) ToServiceConfigurationResponseOutputWithContext(ctx context.Context) ServiceConfigurationResponseOutput {
	return o
}

// The port on which service is enabled.
func (o ServiceConfigurationResponseOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v ServiceConfigurationResponse) float64 { return v.Port }).(pulumi.Float64Output)
}

// Name of the service.
func (o ServiceConfigurationResponseOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceConfigurationResponse) string { return v.ServiceName }).(pulumi.StringOutput)
}

type ServiceConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceConfigurationResponse)(nil)).Elem()
}

func (o ServiceConfigurationResponseArrayOutput) ToServiceConfigurationResponseArrayOutput() ServiceConfigurationResponseArrayOutput {
	return o
}

func (o ServiceConfigurationResponseArrayOutput) ToServiceConfigurationResponseArrayOutputWithContext(ctx context.Context) ServiceConfigurationResponseArrayOutput {
	return o
}

func (o ServiceConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ServiceConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceConfigurationResponse {
		return vs[0].([]ServiceConfigurationResponse)[vs[1].(int)]
	}).(ServiceConfigurationResponseOutput)
}

// Software Assurance properties of the cluster.
type SoftwareAssuranceProperties struct {
	// Customer Intent for Software Assurance Benefit.
	SoftwareAssuranceIntent *string `pulumi:"softwareAssuranceIntent"`
}

// SoftwareAssurancePropertiesInput is an input type that accepts SoftwareAssurancePropertiesArgs and SoftwareAssurancePropertiesOutput values.
// You can construct a concrete instance of `SoftwareAssurancePropertiesInput` via:
//
//	SoftwareAssurancePropertiesArgs{...}
type SoftwareAssurancePropertiesInput interface {
	pulumi.Input

	ToSoftwareAssurancePropertiesOutput() SoftwareAssurancePropertiesOutput
	ToSoftwareAssurancePropertiesOutputWithContext(context.Context) SoftwareAssurancePropertiesOutput
}

// Software Assurance properties of the cluster.
type SoftwareAssurancePropertiesArgs struct {
	// Customer Intent for Software Assurance Benefit.
	SoftwareAssuranceIntent pulumi.StringPtrInput `pulumi:"softwareAssuranceIntent"`
}

func (SoftwareAssurancePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareAssuranceProperties)(nil)).Elem()
}

func (i SoftwareAssurancePropertiesArgs) ToSoftwareAssurancePropertiesOutput() SoftwareAssurancePropertiesOutput {
	return i.ToSoftwareAssurancePropertiesOutputWithContext(context.Background())
}

func (i SoftwareAssurancePropertiesArgs) ToSoftwareAssurancePropertiesOutputWithContext(ctx context.Context) SoftwareAssurancePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareAssurancePropertiesOutput)
}

func (i SoftwareAssurancePropertiesArgs) ToSoftwareAssurancePropertiesPtrOutput() SoftwareAssurancePropertiesPtrOutput {
	return i.ToSoftwareAssurancePropertiesPtrOutputWithContext(context.Background())
}

func (i SoftwareAssurancePropertiesArgs) ToSoftwareAssurancePropertiesPtrOutputWithContext(ctx context.Context) SoftwareAssurancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareAssurancePropertiesOutput).ToSoftwareAssurancePropertiesPtrOutputWithContext(ctx)
}

// SoftwareAssurancePropertiesPtrInput is an input type that accepts SoftwareAssurancePropertiesArgs, SoftwareAssurancePropertiesPtr and SoftwareAssurancePropertiesPtrOutput values.
// You can construct a concrete instance of `SoftwareAssurancePropertiesPtrInput` via:
//
//	        SoftwareAssurancePropertiesArgs{...}
//
//	or:
//
//	        nil
type SoftwareAssurancePropertiesPtrInput interface {
	pulumi.Input

	ToSoftwareAssurancePropertiesPtrOutput() SoftwareAssurancePropertiesPtrOutput
	ToSoftwareAssurancePropertiesPtrOutputWithContext(context.Context) SoftwareAssurancePropertiesPtrOutput
}

type softwareAssurancePropertiesPtrType SoftwareAssurancePropertiesArgs

func SoftwareAssurancePropertiesPtr(v *SoftwareAssurancePropertiesArgs) SoftwareAssurancePropertiesPtrInput {
	return (*softwareAssurancePropertiesPtrType)(v)
}

func (*softwareAssurancePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareAssuranceProperties)(nil)).Elem()
}

func (i *softwareAssurancePropertiesPtrType) ToSoftwareAssurancePropertiesPtrOutput() SoftwareAssurancePropertiesPtrOutput {
	return i.ToSoftwareAssurancePropertiesPtrOutputWithContext(context.Background())
}

func (i *softwareAssurancePropertiesPtrType) ToSoftwareAssurancePropertiesPtrOutputWithContext(ctx context.Context) SoftwareAssurancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoftwareAssurancePropertiesPtrOutput)
}

// Software Assurance properties of the cluster.
type SoftwareAssurancePropertiesOutput struct{ *pulumi.OutputState }

func (SoftwareAssurancePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareAssuranceProperties)(nil)).Elem()
}

func (o SoftwareAssurancePropertiesOutput) ToSoftwareAssurancePropertiesOutput() SoftwareAssurancePropertiesOutput {
	return o
}

func (o SoftwareAssurancePropertiesOutput) ToSoftwareAssurancePropertiesOutputWithContext(ctx context.Context) SoftwareAssurancePropertiesOutput {
	return o
}

func (o SoftwareAssurancePropertiesOutput) ToSoftwareAssurancePropertiesPtrOutput() SoftwareAssurancePropertiesPtrOutput {
	return o.ToSoftwareAssurancePropertiesPtrOutputWithContext(context.Background())
}

func (o SoftwareAssurancePropertiesOutput) ToSoftwareAssurancePropertiesPtrOutputWithContext(ctx context.Context) SoftwareAssurancePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SoftwareAssuranceProperties) *SoftwareAssuranceProperties {
		return &v
	}).(SoftwareAssurancePropertiesPtrOutput)
}

// Customer Intent for Software Assurance Benefit.
func (o SoftwareAssurancePropertiesOutput) SoftwareAssuranceIntent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoftwareAssuranceProperties) *string { return v.SoftwareAssuranceIntent }).(pulumi.StringPtrOutput)
}

type SoftwareAssurancePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SoftwareAssurancePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareAssuranceProperties)(nil)).Elem()
}

func (o SoftwareAssurancePropertiesPtrOutput) ToSoftwareAssurancePropertiesPtrOutput() SoftwareAssurancePropertiesPtrOutput {
	return o
}

func (o SoftwareAssurancePropertiesPtrOutput) ToSoftwareAssurancePropertiesPtrOutputWithContext(ctx context.Context) SoftwareAssurancePropertiesPtrOutput {
	return o
}

func (o SoftwareAssurancePropertiesPtrOutput) Elem() SoftwareAssurancePropertiesOutput {
	return o.ApplyT(func(v *SoftwareAssuranceProperties) SoftwareAssuranceProperties {
		if v != nil {
			return *v
		}
		var ret SoftwareAssuranceProperties
		return ret
	}).(SoftwareAssurancePropertiesOutput)
}

// Customer Intent for Software Assurance Benefit.
func (o SoftwareAssurancePropertiesPtrOutput) SoftwareAssuranceIntent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoftwareAssuranceProperties) *string {
		if v == nil {
			return nil
		}
		return v.SoftwareAssuranceIntent
	}).(pulumi.StringPtrOutput)
}

// Software Assurance properties of the cluster.
type SoftwareAssurancePropertiesResponse struct {
	// TimeStamp denoting the latest SA benefit applicability is validated.
	LastUpdated string `pulumi:"lastUpdated"`
	// Customer Intent for Software Assurance Benefit.
	SoftwareAssuranceIntent *string `pulumi:"softwareAssuranceIntent"`
	// Status of the Software Assurance for the cluster.
	SoftwareAssuranceStatus string `pulumi:"softwareAssuranceStatus"`
}

// Software Assurance properties of the cluster.
type SoftwareAssurancePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SoftwareAssurancePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoftwareAssurancePropertiesResponse)(nil)).Elem()
}

func (o SoftwareAssurancePropertiesResponseOutput) ToSoftwareAssurancePropertiesResponseOutput() SoftwareAssurancePropertiesResponseOutput {
	return o
}

func (o SoftwareAssurancePropertiesResponseOutput) ToSoftwareAssurancePropertiesResponseOutputWithContext(ctx context.Context) SoftwareAssurancePropertiesResponseOutput {
	return o
}

// TimeStamp denoting the latest SA benefit applicability is validated.
func (o SoftwareAssurancePropertiesResponseOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v SoftwareAssurancePropertiesResponse) string { return v.LastUpdated }).(pulumi.StringOutput)
}

// Customer Intent for Software Assurance Benefit.
func (o SoftwareAssurancePropertiesResponseOutput) SoftwareAssuranceIntent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoftwareAssurancePropertiesResponse) *string { return v.SoftwareAssuranceIntent }).(pulumi.StringPtrOutput)
}

// Status of the Software Assurance for the cluster.
func (o SoftwareAssurancePropertiesResponseOutput) SoftwareAssuranceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v SoftwareAssurancePropertiesResponse) string { return v.SoftwareAssuranceStatus }).(pulumi.StringOutput)
}

type SoftwareAssurancePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SoftwareAssurancePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoftwareAssurancePropertiesResponse)(nil)).Elem()
}

func (o SoftwareAssurancePropertiesResponsePtrOutput) ToSoftwareAssurancePropertiesResponsePtrOutput() SoftwareAssurancePropertiesResponsePtrOutput {
	return o
}

func (o SoftwareAssurancePropertiesResponsePtrOutput) ToSoftwareAssurancePropertiesResponsePtrOutputWithContext(ctx context.Context) SoftwareAssurancePropertiesResponsePtrOutput {
	return o
}

func (o SoftwareAssurancePropertiesResponsePtrOutput) Elem() SoftwareAssurancePropertiesResponseOutput {
	return o.ApplyT(func(v *SoftwareAssurancePropertiesResponse) SoftwareAssurancePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret SoftwareAssurancePropertiesResponse
		return ret
	}).(SoftwareAssurancePropertiesResponseOutput)
}

// TimeStamp denoting the latest SA benefit applicability is validated.
func (o SoftwareAssurancePropertiesResponsePtrOutput) LastUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoftwareAssurancePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastUpdated
	}).(pulumi.StringPtrOutput)
}

// Customer Intent for Software Assurance Benefit.
func (o SoftwareAssurancePropertiesResponsePtrOutput) SoftwareAssuranceIntent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoftwareAssurancePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SoftwareAssuranceIntent
	}).(pulumi.StringPtrOutput)
}

// Status of the Software Assurance for the cluster.
func (o SoftwareAssurancePropertiesResponsePtrOutput) SoftwareAssuranceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoftwareAssurancePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SoftwareAssuranceStatus
	}).(pulumi.StringPtrOutput)
}

// Progress representation of the update run steps.
type Step struct {
	// More detailed description of the step.
	Description *string `pulumi:"description"`
	// When the step reached a terminal state.
	EndTimeUtc *string `pulumi:"endTimeUtc"`
	// Error message, specified if the step is in a failed state.
	ErrorMessage *string `pulumi:"errorMessage"`
	// Completion time of this step or the last completed sub-step.
	LastUpdatedTimeUtc *string `pulumi:"lastUpdatedTimeUtc"`
	// Name of the step.
	Name *string `pulumi:"name"`
	// When the step started, or empty if it has not started executing.
	StartTimeUtc *string `pulumi:"startTimeUtc"`
	// Status of the step, bubbled up from the ECE action plan for installation attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'.
	Status *string `pulumi:"status"`
	// Recursive model for child steps of this step.
	Steps []Step `pulumi:"steps"`
}

// StepInput is an input type that accepts StepArgs and StepOutput values.
// You can construct a concrete instance of `StepInput` via:
//
//	StepArgs{...}
type StepInput interface {
	pulumi.Input

	ToStepOutput() StepOutput
	ToStepOutputWithContext(context.Context) StepOutput
}

// Progress representation of the update run steps.
type StepArgs struct {
	// More detailed description of the step.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// When the step reached a terminal state.
	EndTimeUtc pulumi.StringPtrInput `pulumi:"endTimeUtc"`
	// Error message, specified if the step is in a failed state.
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
	// Completion time of this step or the last completed sub-step.
	LastUpdatedTimeUtc pulumi.StringPtrInput `pulumi:"lastUpdatedTimeUtc"`
	// Name of the step.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// When the step started, or empty if it has not started executing.
	StartTimeUtc pulumi.StringPtrInput `pulumi:"startTimeUtc"`
	// Status of the step, bubbled up from the ECE action plan for installation attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Recursive model for child steps of this step.
	Steps StepArrayInput `pulumi:"steps"`
}

func (StepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Step)(nil)).Elem()
}

func (i StepArgs) ToStepOutput() StepOutput {
	return i.ToStepOutputWithContext(context.Background())
}

func (i StepArgs) ToStepOutputWithContext(ctx context.Context) StepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepOutput)
}

// StepArrayInput is an input type that accepts StepArray and StepArrayOutput values.
// You can construct a concrete instance of `StepArrayInput` via:
//
//	StepArray{ StepArgs{...} }
type StepArrayInput interface {
	pulumi.Input

	ToStepArrayOutput() StepArrayOutput
	ToStepArrayOutputWithContext(context.Context) StepArrayOutput
}

type StepArray []StepInput

func (StepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Step)(nil)).Elem()
}

func (i StepArray) ToStepArrayOutput() StepArrayOutput {
	return i.ToStepArrayOutputWithContext(context.Background())
}

func (i StepArray) ToStepArrayOutputWithContext(ctx context.Context) StepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepArrayOutput)
}

// Progress representation of the update run steps.
type StepOutput struct{ *pulumi.OutputState }

func (StepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Step)(nil)).Elem()
}

func (o StepOutput) ToStepOutput() StepOutput {
	return o
}

func (o StepOutput) ToStepOutputWithContext(ctx context.Context) StepOutput {
	return o
}

// More detailed description of the step.
func (o StepOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Step) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// When the step reached a terminal state.
func (o StepOutput) EndTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Step) *string { return v.EndTimeUtc }).(pulumi.StringPtrOutput)
}

// Error message, specified if the step is in a failed state.
func (o StepOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Step) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Completion time of this step or the last completed sub-step.
func (o StepOutput) LastUpdatedTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Step) *string { return v.LastUpdatedTimeUtc }).(pulumi.StringPtrOutput)
}

// Name of the step.
func (o StepOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Step) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// When the step started, or empty if it has not started executing.
func (o StepOutput) StartTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Step) *string { return v.StartTimeUtc }).(pulumi.StringPtrOutput)
}

// Status of the step, bubbled up from the ECE action plan for installation attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'.
func (o StepOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Step) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Recursive model for child steps of this step.
func (o StepOutput) Steps() StepArrayOutput {
	return o.ApplyT(func(v Step) []Step { return v.Steps }).(StepArrayOutput)
}

type StepArrayOutput struct{ *pulumi.OutputState }

func (StepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Step)(nil)).Elem()
}

func (o StepArrayOutput) ToStepArrayOutput() StepArrayOutput {
	return o
}

func (o StepArrayOutput) ToStepArrayOutputWithContext(ctx context.Context) StepArrayOutput {
	return o
}

func (o StepArrayOutput) Index(i pulumi.IntInput) StepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Step {
		return vs[0].([]Step)[vs[1].(int)]
	}).(StepOutput)
}

// Progress representation of the update run steps.
type StepResponse struct {
	// More detailed description of the step.
	Description *string `pulumi:"description"`
	// When the step reached a terminal state.
	EndTimeUtc *string `pulumi:"endTimeUtc"`
	// Error message, specified if the step is in a failed state.
	ErrorMessage *string `pulumi:"errorMessage"`
	// Completion time of this step or the last completed sub-step.
	LastUpdatedTimeUtc *string `pulumi:"lastUpdatedTimeUtc"`
	// Name of the step.
	Name *string `pulumi:"name"`
	// When the step started, or empty if it has not started executing.
	StartTimeUtc *string `pulumi:"startTimeUtc"`
	// Status of the step, bubbled up from the ECE action plan for installation attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'.
	Status *string `pulumi:"status"`
	// Recursive model for child steps of this step.
	Steps []StepResponse `pulumi:"steps"`
}

// Progress representation of the update run steps.
type StepResponseOutput struct{ *pulumi.OutputState }

func (StepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StepResponse)(nil)).Elem()
}

func (o StepResponseOutput) ToStepResponseOutput() StepResponseOutput {
	return o
}

func (o StepResponseOutput) ToStepResponseOutputWithContext(ctx context.Context) StepResponseOutput {
	return o
}

// More detailed description of the step.
func (o StepResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StepResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// When the step reached a terminal state.
func (o StepResponseOutput) EndTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StepResponse) *string { return v.EndTimeUtc }).(pulumi.StringPtrOutput)
}

// Error message, specified if the step is in a failed state.
func (o StepResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StepResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Completion time of this step or the last completed sub-step.
func (o StepResponseOutput) LastUpdatedTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StepResponse) *string { return v.LastUpdatedTimeUtc }).(pulumi.StringPtrOutput)
}

// Name of the step.
func (o StepResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StepResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// When the step started, or empty if it has not started executing.
func (o StepResponseOutput) StartTimeUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StepResponse) *string { return v.StartTimeUtc }).(pulumi.StringPtrOutput)
}

// Status of the step, bubbled up from the ECE action plan for installation attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'.
func (o StepResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StepResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Recursive model for child steps of this step.
func (o StepResponseOutput) Steps() StepResponseArrayOutput {
	return o.ApplyT(func(v StepResponse) []StepResponse { return v.Steps }).(StepResponseArrayOutput)
}

type StepResponseArrayOutput struct{ *pulumi.OutputState }

func (StepResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StepResponse)(nil)).Elem()
}

func (o StepResponseArrayOutput) ToStepResponseArrayOutput() StepResponseArrayOutput {
	return o
}

func (o StepResponseArrayOutput) ToStepResponseArrayOutputWithContext(ctx context.Context) StepResponseArrayOutput {
	return o
}

func (o StepResponseArrayOutput) Index(i pulumi.IntInput) StepResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StepResponse {
		return vs[0].([]StepResponse)[vs[1].(int)]
	}).(StepResponseOutput)
}

// The Storage config of AzureStackHCI Cluster.
type Storage struct {
	// By default, this mode is set to Express and your storage is configured as per best practices based on the number of nodes in the cluster. Allowed values are 'Express','InfraOnly', 'KeepStorage'
	ConfigurationMode *string `pulumi:"configurationMode"`
}

// Defaults sets the appropriate defaults for Storage
func (val *Storage) Defaults() *Storage {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ConfigurationMode == nil {
		configurationMode_ := "Express"
		tmp.ConfigurationMode = &configurationMode_
	}
	return &tmp
}

// StorageInput is an input type that accepts StorageArgs and StorageOutput values.
// You can construct a concrete instance of `StorageInput` via:
//
//	StorageArgs{...}
type StorageInput interface {
	pulumi.Input

	ToStorageOutput() StorageOutput
	ToStorageOutputWithContext(context.Context) StorageOutput
}

// The Storage config of AzureStackHCI Cluster.
type StorageArgs struct {
	// By default, this mode is set to Express and your storage is configured as per best practices based on the number of nodes in the cluster. Allowed values are 'Express','InfraOnly', 'KeepStorage'
	ConfigurationMode pulumi.StringPtrInput `pulumi:"configurationMode"`
}

// Defaults sets the appropriate defaults for StorageArgs
func (val *StorageArgs) Defaults() *StorageArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ConfigurationMode == nil {
		tmp.ConfigurationMode = pulumi.StringPtr("Express")
	}
	return &tmp
}
func (StorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Storage)(nil)).Elem()
}

func (i StorageArgs) ToStorageOutput() StorageOutput {
	return i.ToStorageOutputWithContext(context.Background())
}

func (i StorageArgs) ToStorageOutputWithContext(ctx context.Context) StorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageOutput)
}

func (i StorageArgs) ToStoragePtrOutput() StoragePtrOutput {
	return i.ToStoragePtrOutputWithContext(context.Background())
}

func (i StorageArgs) ToStoragePtrOutputWithContext(ctx context.Context) StoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageOutput).ToStoragePtrOutputWithContext(ctx)
}

// StoragePtrInput is an input type that accepts StorageArgs, StoragePtr and StoragePtrOutput values.
// You can construct a concrete instance of `StoragePtrInput` via:
//
//	        StorageArgs{...}
//
//	or:
//
//	        nil
type StoragePtrInput interface {
	pulumi.Input

	ToStoragePtrOutput() StoragePtrOutput
	ToStoragePtrOutputWithContext(context.Context) StoragePtrOutput
}

type storagePtrType StorageArgs

func StoragePtr(v *StorageArgs) StoragePtrInput {
	return (*storagePtrType)(v)
}

func (*storagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Storage)(nil)).Elem()
}

func (i *storagePtrType) ToStoragePtrOutput() StoragePtrOutput {
	return i.ToStoragePtrOutputWithContext(context.Background())
}

func (i *storagePtrType) ToStoragePtrOutputWithContext(ctx context.Context) StoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StoragePtrOutput)
}

// The Storage config of AzureStackHCI Cluster.
type StorageOutput struct{ *pulumi.OutputState }

func (StorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Storage)(nil)).Elem()
}

func (o StorageOutput) ToStorageOutput() StorageOutput {
	return o
}

func (o StorageOutput) ToStorageOutputWithContext(ctx context.Context) StorageOutput {
	return o
}

func (o StorageOutput) ToStoragePtrOutput() StoragePtrOutput {
	return o.ToStoragePtrOutputWithContext(context.Background())
}

func (o StorageOutput) ToStoragePtrOutputWithContext(ctx context.Context) StoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Storage) *Storage {
		return &v
	}).(StoragePtrOutput)
}

// By default, this mode is set to Express and your storage is configured as per best practices based on the number of nodes in the cluster. Allowed values are 'Express','InfraOnly', 'KeepStorage'
func (o StorageOutput) ConfigurationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Storage) *string { return v.ConfigurationMode }).(pulumi.StringPtrOutput)
}

type StoragePtrOutput struct{ *pulumi.OutputState }

func (StoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Storage)(nil)).Elem()
}

func (o StoragePtrOutput) ToStoragePtrOutput() StoragePtrOutput {
	return o
}

func (o StoragePtrOutput) ToStoragePtrOutputWithContext(ctx context.Context) StoragePtrOutput {
	return o
}

func (o StoragePtrOutput) Elem() StorageOutput {
	return o.ApplyT(func(v *Storage) Storage {
		if v != nil {
			return *v
		}
		var ret Storage
		return ret
	}).(StorageOutput)
}

// By default, this mode is set to Express and your storage is configured as per best practices based on the number of nodes in the cluster. Allowed values are 'Express','InfraOnly', 'KeepStorage'
func (o StoragePtrOutput) ConfigurationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Storage) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationMode
	}).(pulumi.StringPtrOutput)
}

// The StorageAdapter physical nodes of a cluster.
type StorageAdapterIPInfo struct {
	// The IPv4 address assigned to each storage adapter physical node on your Azure Stack HCI cluster.
	Ipv4Address *string `pulumi:"ipv4Address"`
	// storage adapter physical node name.
	PhysicalNode *string `pulumi:"physicalNode"`
	// The SubnetMask address assigned to each storage adapter physical node on your Azure Stack HCI cluster.
	SubnetMask *string `pulumi:"subnetMask"`
}

// StorageAdapterIPInfoInput is an input type that accepts StorageAdapterIPInfoArgs and StorageAdapterIPInfoOutput values.
// You can construct a concrete instance of `StorageAdapterIPInfoInput` via:
//
//	StorageAdapterIPInfoArgs{...}
type StorageAdapterIPInfoInput interface {
	pulumi.Input

	ToStorageAdapterIPInfoOutput() StorageAdapterIPInfoOutput
	ToStorageAdapterIPInfoOutputWithContext(context.Context) StorageAdapterIPInfoOutput
}

// The StorageAdapter physical nodes of a cluster.
type StorageAdapterIPInfoArgs struct {
	// The IPv4 address assigned to each storage adapter physical node on your Azure Stack HCI cluster.
	Ipv4Address pulumi.StringPtrInput `pulumi:"ipv4Address"`
	// storage adapter physical node name.
	PhysicalNode pulumi.StringPtrInput `pulumi:"physicalNode"`
	// The SubnetMask address assigned to each storage adapter physical node on your Azure Stack HCI cluster.
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
}

func (StorageAdapterIPInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAdapterIPInfo)(nil)).Elem()
}

func (i StorageAdapterIPInfoArgs) ToStorageAdapterIPInfoOutput() StorageAdapterIPInfoOutput {
	return i.ToStorageAdapterIPInfoOutputWithContext(context.Background())
}

func (i StorageAdapterIPInfoArgs) ToStorageAdapterIPInfoOutputWithContext(ctx context.Context) StorageAdapterIPInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAdapterIPInfoOutput)
}

// StorageAdapterIPInfoArrayInput is an input type that accepts StorageAdapterIPInfoArray and StorageAdapterIPInfoArrayOutput values.
// You can construct a concrete instance of `StorageAdapterIPInfoArrayInput` via:
//
//	StorageAdapterIPInfoArray{ StorageAdapterIPInfoArgs{...} }
type StorageAdapterIPInfoArrayInput interface {
	pulumi.Input

	ToStorageAdapterIPInfoArrayOutput() StorageAdapterIPInfoArrayOutput
	ToStorageAdapterIPInfoArrayOutputWithContext(context.Context) StorageAdapterIPInfoArrayOutput
}

type StorageAdapterIPInfoArray []StorageAdapterIPInfoInput

func (StorageAdapterIPInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAdapterIPInfo)(nil)).Elem()
}

func (i StorageAdapterIPInfoArray) ToStorageAdapterIPInfoArrayOutput() StorageAdapterIPInfoArrayOutput {
	return i.ToStorageAdapterIPInfoArrayOutputWithContext(context.Background())
}

func (i StorageAdapterIPInfoArray) ToStorageAdapterIPInfoArrayOutputWithContext(ctx context.Context) StorageAdapterIPInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAdapterIPInfoArrayOutput)
}

// The StorageAdapter physical nodes of a cluster.
type StorageAdapterIPInfoOutput struct{ *pulumi.OutputState }

func (StorageAdapterIPInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAdapterIPInfo)(nil)).Elem()
}

func (o StorageAdapterIPInfoOutput) ToStorageAdapterIPInfoOutput() StorageAdapterIPInfoOutput {
	return o
}

func (o StorageAdapterIPInfoOutput) ToStorageAdapterIPInfoOutputWithContext(ctx context.Context) StorageAdapterIPInfoOutput {
	return o
}

// The IPv4 address assigned to each storage adapter physical node on your Azure Stack HCI cluster.
func (o StorageAdapterIPInfoOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAdapterIPInfo) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

// storage adapter physical node name.
func (o StorageAdapterIPInfoOutput) PhysicalNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAdapterIPInfo) *string { return v.PhysicalNode }).(pulumi.StringPtrOutput)
}

// The SubnetMask address assigned to each storage adapter physical node on your Azure Stack HCI cluster.
func (o StorageAdapterIPInfoOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAdapterIPInfo) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

type StorageAdapterIPInfoArrayOutput struct{ *pulumi.OutputState }

func (StorageAdapterIPInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAdapterIPInfo)(nil)).Elem()
}

func (o StorageAdapterIPInfoArrayOutput) ToStorageAdapterIPInfoArrayOutput() StorageAdapterIPInfoArrayOutput {
	return o
}

func (o StorageAdapterIPInfoArrayOutput) ToStorageAdapterIPInfoArrayOutputWithContext(ctx context.Context) StorageAdapterIPInfoArrayOutput {
	return o
}

func (o StorageAdapterIPInfoArrayOutput) Index(i pulumi.IntInput) StorageAdapterIPInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageAdapterIPInfo {
		return vs[0].([]StorageAdapterIPInfo)[vs[1].(int)]
	}).(StorageAdapterIPInfoOutput)
}

// The StorageAdapter physical nodes of a cluster.
type StorageAdapterIPInfoResponse struct {
	// The IPv4 address assigned to each storage adapter physical node on your Azure Stack HCI cluster.
	Ipv4Address string `pulumi:"ipv4Address"`
	// storage adapter physical node name.
	PhysicalNode string `pulumi:"physicalNode"`
	// The SubnetMask address assigned to each storage adapter physical node on your Azure Stack HCI cluster.
	SubnetMask string `pulumi:"subnetMask"`
}

// The StorageAdapter physical nodes of a cluster.
type StorageAdapterIPInfoResponseOutput struct{ *pulumi.OutputState }

func (StorageAdapterIPInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAdapterIPInfoResponse)(nil)).Elem()
}

func (o StorageAdapterIPInfoResponseOutput) ToStorageAdapterIPInfoResponseOutput() StorageAdapterIPInfoResponseOutput {
	return o
}

func (o StorageAdapterIPInfoResponseOutput) ToStorageAdapterIPInfoResponseOutputWithContext(ctx context.Context) StorageAdapterIPInfoResponseOutput {
	return o
}

// The IPv4 address assigned to each storage adapter physical node on your Azure Stack HCI cluster.
func (o StorageAdapterIPInfoResponseOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAdapterIPInfoResponse) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

// storage adapter physical node name.
func (o StorageAdapterIPInfoResponseOutput) PhysicalNode() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAdapterIPInfoResponse) string { return v.PhysicalNode }).(pulumi.StringOutput)
}

// The SubnetMask address assigned to each storage adapter physical node on your Azure Stack HCI cluster.
func (o StorageAdapterIPInfoResponseOutput) SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v StorageAdapterIPInfoResponse) string { return v.SubnetMask }).(pulumi.StringOutput)
}

type StorageAdapterIPInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (StorageAdapterIPInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAdapterIPInfoResponse)(nil)).Elem()
}

func (o StorageAdapterIPInfoResponseArrayOutput) ToStorageAdapterIPInfoResponseArrayOutput() StorageAdapterIPInfoResponseArrayOutput {
	return o
}

func (o StorageAdapterIPInfoResponseArrayOutput) ToStorageAdapterIPInfoResponseArrayOutputWithContext(ctx context.Context) StorageAdapterIPInfoResponseArrayOutput {
	return o
}

func (o StorageAdapterIPInfoResponseArrayOutput) Index(i pulumi.IntInput) StorageAdapterIPInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageAdapterIPInfoResponse {
		return vs[0].([]StorageAdapterIPInfoResponse)[vs[1].(int)]
	}).(StorageAdapterIPInfoResponseOutput)
}

// The StorageNetworks of a cluster.
type StorageNetworks struct {
	// Name of the storage network.
	Name *string `pulumi:"name"`
	// Name of the storage network adapter.
	NetworkAdapterName *string `pulumi:"networkAdapterName"`
	// List of Storage adapter physical nodes config to deploy AzureStackHCI Cluster.
	StorageAdapterIPInfo []StorageAdapterIPInfo `pulumi:"storageAdapterIPInfo"`
	// ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic.
	VlanId *string `pulumi:"vlanId"`
}

// StorageNetworksInput is an input type that accepts StorageNetworksArgs and StorageNetworksOutput values.
// You can construct a concrete instance of `StorageNetworksInput` via:
//
//	StorageNetworksArgs{...}
type StorageNetworksInput interface {
	pulumi.Input

	ToStorageNetworksOutput() StorageNetworksOutput
	ToStorageNetworksOutputWithContext(context.Context) StorageNetworksOutput
}

// The StorageNetworks of a cluster.
type StorageNetworksArgs struct {
	// Name of the storage network.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Name of the storage network adapter.
	NetworkAdapterName pulumi.StringPtrInput `pulumi:"networkAdapterName"`
	// List of Storage adapter physical nodes config to deploy AzureStackHCI Cluster.
	StorageAdapterIPInfo StorageAdapterIPInfoArrayInput `pulumi:"storageAdapterIPInfo"`
	// ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic.
	VlanId pulumi.StringPtrInput `pulumi:"vlanId"`
}

func (StorageNetworksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNetworks)(nil)).Elem()
}

func (i StorageNetworksArgs) ToStorageNetworksOutput() StorageNetworksOutput {
	return i.ToStorageNetworksOutputWithContext(context.Background())
}

func (i StorageNetworksArgs) ToStorageNetworksOutputWithContext(ctx context.Context) StorageNetworksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworksOutput)
}

// StorageNetworksArrayInput is an input type that accepts StorageNetworksArray and StorageNetworksArrayOutput values.
// You can construct a concrete instance of `StorageNetworksArrayInput` via:
//
//	StorageNetworksArray{ StorageNetworksArgs{...} }
type StorageNetworksArrayInput interface {
	pulumi.Input

	ToStorageNetworksArrayOutput() StorageNetworksArrayOutput
	ToStorageNetworksArrayOutputWithContext(context.Context) StorageNetworksArrayOutput
}

type StorageNetworksArray []StorageNetworksInput

func (StorageNetworksArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageNetworks)(nil)).Elem()
}

func (i StorageNetworksArray) ToStorageNetworksArrayOutput() StorageNetworksArrayOutput {
	return i.ToStorageNetworksArrayOutputWithContext(context.Background())
}

func (i StorageNetworksArray) ToStorageNetworksArrayOutputWithContext(ctx context.Context) StorageNetworksArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworksArrayOutput)
}

// The StorageNetworks of a cluster.
type StorageNetworksOutput struct{ *pulumi.OutputState }

func (StorageNetworksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNetworks)(nil)).Elem()
}

func (o StorageNetworksOutput) ToStorageNetworksOutput() StorageNetworksOutput {
	return o
}

func (o StorageNetworksOutput) ToStorageNetworksOutputWithContext(ctx context.Context) StorageNetworksOutput {
	return o
}

// Name of the storage network.
func (o StorageNetworksOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNetworks) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Name of the storage network adapter.
func (o StorageNetworksOutput) NetworkAdapterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNetworks) *string { return v.NetworkAdapterName }).(pulumi.StringPtrOutput)
}

// List of Storage adapter physical nodes config to deploy AzureStackHCI Cluster.
func (o StorageNetworksOutput) StorageAdapterIPInfo() StorageAdapterIPInfoArrayOutput {
	return o.ApplyT(func(v StorageNetworks) []StorageAdapterIPInfo { return v.StorageAdapterIPInfo }).(StorageAdapterIPInfoArrayOutput)
}

// ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic.
func (o StorageNetworksOutput) VlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNetworks) *string { return v.VlanId }).(pulumi.StringPtrOutput)
}

type StorageNetworksArrayOutput struct{ *pulumi.OutputState }

func (StorageNetworksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageNetworks)(nil)).Elem()
}

func (o StorageNetworksArrayOutput) ToStorageNetworksArrayOutput() StorageNetworksArrayOutput {
	return o
}

func (o StorageNetworksArrayOutput) ToStorageNetworksArrayOutputWithContext(ctx context.Context) StorageNetworksArrayOutput {
	return o
}

func (o StorageNetworksArrayOutput) Index(i pulumi.IntInput) StorageNetworksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageNetworks {
		return vs[0].([]StorageNetworks)[vs[1].(int)]
	}).(StorageNetworksOutput)
}

// The StorageNetworks of a cluster.
type StorageNetworksResponse struct {
	// Name of the storage network.
	Name string `pulumi:"name"`
	// Name of the storage network adapter.
	NetworkAdapterName string `pulumi:"networkAdapterName"`
	// List of Storage adapter physical nodes config to deploy AzureStackHCI Cluster.
	StorageAdapterIPInfo []StorageAdapterIPInfoResponse `pulumi:"storageAdapterIPInfo"`
	// ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic.
	StorageVlanId string `pulumi:"storageVlanId"`
	// ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic.
	VlanId *string `pulumi:"vlanId"`
}

// The StorageNetworks of a cluster.
type StorageNetworksResponseOutput struct{ *pulumi.OutputState }

func (StorageNetworksResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNetworksResponse)(nil)).Elem()
}

func (o StorageNetworksResponseOutput) ToStorageNetworksResponseOutput() StorageNetworksResponseOutput {
	return o
}

func (o StorageNetworksResponseOutput) ToStorageNetworksResponseOutputWithContext(ctx context.Context) StorageNetworksResponseOutput {
	return o
}

// Name of the storage network.
func (o StorageNetworksResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StorageNetworksResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Name of the storage network adapter.
func (o StorageNetworksResponseOutput) NetworkAdapterName() pulumi.StringOutput {
	return o.ApplyT(func(v StorageNetworksResponse) string { return v.NetworkAdapterName }).(pulumi.StringOutput)
}

// List of Storage adapter physical nodes config to deploy AzureStackHCI Cluster.
func (o StorageNetworksResponseOutput) StorageAdapterIPInfo() StorageAdapterIPInfoResponseArrayOutput {
	return o.ApplyT(func(v StorageNetworksResponse) []StorageAdapterIPInfoResponse { return v.StorageAdapterIPInfo }).(StorageAdapterIPInfoResponseArrayOutput)
}

// ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic.
func (o StorageNetworksResponseOutput) StorageVlanId() pulumi.StringOutput {
	return o.ApplyT(func(v StorageNetworksResponse) string { return v.StorageVlanId }).(pulumi.StringOutput)
}

// ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic.
func (o StorageNetworksResponseOutput) VlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNetworksResponse) *string { return v.VlanId }).(pulumi.StringPtrOutput)
}

type StorageNetworksResponseArrayOutput struct{ *pulumi.OutputState }

func (StorageNetworksResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageNetworksResponse)(nil)).Elem()
}

func (o StorageNetworksResponseArrayOutput) ToStorageNetworksResponseArrayOutput() StorageNetworksResponseArrayOutput {
	return o
}

func (o StorageNetworksResponseArrayOutput) ToStorageNetworksResponseArrayOutputWithContext(ctx context.Context) StorageNetworksResponseArrayOutput {
	return o
}

func (o StorageNetworksResponseArrayOutput) Index(i pulumi.IntInput) StorageNetworksResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageNetworksResponse {
		return vs[0].([]StorageNetworksResponse)[vs[1].(int)]
	}).(StorageNetworksResponseOutput)
}

// The Storage config of AzureStackHCI Cluster.
type StorageResponse struct {
	// By default, this mode is set to Express and your storage is configured as per best practices based on the number of nodes in the cluster. Allowed values are 'Express','InfraOnly', 'KeepStorage'
	ConfigurationMode *string `pulumi:"configurationMode"`
}

// Defaults sets the appropriate defaults for StorageResponse
func (val *StorageResponse) Defaults() *StorageResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ConfigurationMode == nil {
		configurationMode_ := "Express"
		tmp.ConfigurationMode = &configurationMode_
	}
	return &tmp
}

// The Storage config of AzureStackHCI Cluster.
type StorageResponseOutput struct{ *pulumi.OutputState }

func (StorageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageResponse)(nil)).Elem()
}

func (o StorageResponseOutput) ToStorageResponseOutput() StorageResponseOutput {
	return o
}

func (o StorageResponseOutput) ToStorageResponseOutputWithContext(ctx context.Context) StorageResponseOutput {
	return o
}

// By default, this mode is set to Express and your storage is configured as per best practices based on the number of nodes in the cluster. Allowed values are 'Express','InfraOnly', 'KeepStorage'
func (o StorageResponseOutput) ConfigurationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageResponse) *string { return v.ConfigurationMode }).(pulumi.StringPtrOutput)
}

type StorageResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageResponse)(nil)).Elem()
}

func (o StorageResponsePtrOutput) ToStorageResponsePtrOutput() StorageResponsePtrOutput {
	return o
}

func (o StorageResponsePtrOutput) ToStorageResponsePtrOutputWithContext(ctx context.Context) StorageResponsePtrOutput {
	return o
}

func (o StorageResponsePtrOutput) Elem() StorageResponseOutput {
	return o.ApplyT(func(v *StorageResponse) StorageResponse {
		if v != nil {
			return *v
		}
		var ret StorageResponse
		return ret
	}).(StorageResponseOutput)
}

// By default, this mode is set to Express and your storage is configured as per best practices based on the number of nodes in the cluster. Allowed values are 'Express','InfraOnly', 'KeepStorage'
func (o StorageResponsePtrOutput) ConfigurationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationMode
	}).(pulumi.StringPtrOutput)
}

// List of switch details for edge device.
type SwitchDetailResponse struct {
	// This represents extensions installed on virtualSwitch.
	Extensions []SwitchExtensionResponse `pulumi:"extensions"`
	// The name of the switch.
	SwitchName string `pulumi:"switchName"`
	// The type of the switch. e.g. external, internal.
	SwitchType string `pulumi:"switchType"`
}

// List of switch details for edge device.
type SwitchDetailResponseOutput struct{ *pulumi.OutputState }

func (SwitchDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchDetailResponse)(nil)).Elem()
}

func (o SwitchDetailResponseOutput) ToSwitchDetailResponseOutput() SwitchDetailResponseOutput {
	return o
}

func (o SwitchDetailResponseOutput) ToSwitchDetailResponseOutputWithContext(ctx context.Context) SwitchDetailResponseOutput {
	return o
}

// This represents extensions installed on virtualSwitch.
func (o SwitchDetailResponseOutput) Extensions() SwitchExtensionResponseArrayOutput {
	return o.ApplyT(func(v SwitchDetailResponse) []SwitchExtensionResponse { return v.Extensions }).(SwitchExtensionResponseArrayOutput)
}

// The name of the switch.
func (o SwitchDetailResponseOutput) SwitchName() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchDetailResponse) string { return v.SwitchName }).(pulumi.StringOutput)
}

// The type of the switch. e.g. external, internal.
func (o SwitchDetailResponseOutput) SwitchType() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchDetailResponse) string { return v.SwitchType }).(pulumi.StringOutput)
}

type SwitchDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (SwitchDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchDetailResponse)(nil)).Elem()
}

func (o SwitchDetailResponseArrayOutput) ToSwitchDetailResponseArrayOutput() SwitchDetailResponseArrayOutput {
	return o
}

func (o SwitchDetailResponseArrayOutput) ToSwitchDetailResponseArrayOutputWithContext(ctx context.Context) SwitchDetailResponseArrayOutput {
	return o
}

func (o SwitchDetailResponseArrayOutput) Index(i pulumi.IntInput) SwitchDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchDetailResponse {
		return vs[0].([]SwitchDetailResponse)[vs[1].(int)]
	}).(SwitchDetailResponseOutput)
}

// This represents extensions installed on virtualSwitch.
type SwitchExtensionResponse struct {
	// This represents whether extension is enabled on virtualSwitch.
	ExtensionEnabled bool `pulumi:"extensionEnabled"`
	// This will show extension name for virtualSwitch.
	ExtensionName string `pulumi:"extensionName"`
	// Unique identifier for virtualSwitch.
	SwitchId string `pulumi:"switchId"`
}

// This represents extensions installed on virtualSwitch.
type SwitchExtensionResponseOutput struct{ *pulumi.OutputState }

func (SwitchExtensionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SwitchExtensionResponse)(nil)).Elem()
}

func (o SwitchExtensionResponseOutput) ToSwitchExtensionResponseOutput() SwitchExtensionResponseOutput {
	return o
}

func (o SwitchExtensionResponseOutput) ToSwitchExtensionResponseOutputWithContext(ctx context.Context) SwitchExtensionResponseOutput {
	return o
}

// This represents whether extension is enabled on virtualSwitch.
func (o SwitchExtensionResponseOutput) ExtensionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SwitchExtensionResponse) bool { return v.ExtensionEnabled }).(pulumi.BoolOutput)
}

// This will show extension name for virtualSwitch.
func (o SwitchExtensionResponseOutput) ExtensionName() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchExtensionResponse) string { return v.ExtensionName }).(pulumi.StringOutput)
}

// Unique identifier for virtualSwitch.
func (o SwitchExtensionResponseOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func(v SwitchExtensionResponse) string { return v.SwitchId }).(pulumi.StringOutput)
}

type SwitchExtensionResponseArrayOutput struct{ *pulumi.OutputState }

func (SwitchExtensionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SwitchExtensionResponse)(nil)).Elem()
}

func (o SwitchExtensionResponseArrayOutput) ToSwitchExtensionResponseArrayOutput() SwitchExtensionResponseArrayOutput {
	return o
}

func (o SwitchExtensionResponseArrayOutput) ToSwitchExtensionResponseArrayOutputWithContext(ctx context.Context) SwitchExtensionResponseArrayOutput {
	return o
}

func (o SwitchExtensionResponseArrayOutput) Index(i pulumi.IntInput) SwitchExtensionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SwitchExtensionResponse {
		return vs[0].([]SwitchExtensionResponse)[vs[1].(int)]
	}).(SwitchExtensionResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.
type UpdatePrerequisite struct {
	// Friendly name of the prerequisite.
	PackageName *string `pulumi:"packageName"`
	// Updatable component type.
	UpdateType *string `pulumi:"updateType"`
	// Version of the prerequisite.
	Version *string `pulumi:"version"`
}

// UpdatePrerequisiteInput is an input type that accepts UpdatePrerequisiteArgs and UpdatePrerequisiteOutput values.
// You can construct a concrete instance of `UpdatePrerequisiteInput` via:
//
//	UpdatePrerequisiteArgs{...}
type UpdatePrerequisiteInput interface {
	pulumi.Input

	ToUpdatePrerequisiteOutput() UpdatePrerequisiteOutput
	ToUpdatePrerequisiteOutputWithContext(context.Context) UpdatePrerequisiteOutput
}

// If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.
type UpdatePrerequisiteArgs struct {
	// Friendly name of the prerequisite.
	PackageName pulumi.StringPtrInput `pulumi:"packageName"`
	// Updatable component type.
	UpdateType pulumi.StringPtrInput `pulumi:"updateType"`
	// Version of the prerequisite.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (UpdatePrerequisiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdatePrerequisite)(nil)).Elem()
}

func (i UpdatePrerequisiteArgs) ToUpdatePrerequisiteOutput() UpdatePrerequisiteOutput {
	return i.ToUpdatePrerequisiteOutputWithContext(context.Background())
}

func (i UpdatePrerequisiteArgs) ToUpdatePrerequisiteOutputWithContext(ctx context.Context) UpdatePrerequisiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdatePrerequisiteOutput)
}

// UpdatePrerequisiteArrayInput is an input type that accepts UpdatePrerequisiteArray and UpdatePrerequisiteArrayOutput values.
// You can construct a concrete instance of `UpdatePrerequisiteArrayInput` via:
//
//	UpdatePrerequisiteArray{ UpdatePrerequisiteArgs{...} }
type UpdatePrerequisiteArrayInput interface {
	pulumi.Input

	ToUpdatePrerequisiteArrayOutput() UpdatePrerequisiteArrayOutput
	ToUpdatePrerequisiteArrayOutputWithContext(context.Context) UpdatePrerequisiteArrayOutput
}

type UpdatePrerequisiteArray []UpdatePrerequisiteInput

func (UpdatePrerequisiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UpdatePrerequisite)(nil)).Elem()
}

func (i UpdatePrerequisiteArray) ToUpdatePrerequisiteArrayOutput() UpdatePrerequisiteArrayOutput {
	return i.ToUpdatePrerequisiteArrayOutputWithContext(context.Background())
}

func (i UpdatePrerequisiteArray) ToUpdatePrerequisiteArrayOutputWithContext(ctx context.Context) UpdatePrerequisiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdatePrerequisiteArrayOutput)
}

// If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.
type UpdatePrerequisiteOutput struct{ *pulumi.OutputState }

func (UpdatePrerequisiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdatePrerequisite)(nil)).Elem()
}

func (o UpdatePrerequisiteOutput) ToUpdatePrerequisiteOutput() UpdatePrerequisiteOutput {
	return o
}

func (o UpdatePrerequisiteOutput) ToUpdatePrerequisiteOutputWithContext(ctx context.Context) UpdatePrerequisiteOutput {
	return o
}

// Friendly name of the prerequisite.
func (o UpdatePrerequisiteOutput) PackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdatePrerequisite) *string { return v.PackageName }).(pulumi.StringPtrOutput)
}

// Updatable component type.
func (o UpdatePrerequisiteOutput) UpdateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdatePrerequisite) *string { return v.UpdateType }).(pulumi.StringPtrOutput)
}

// Version of the prerequisite.
func (o UpdatePrerequisiteOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdatePrerequisite) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type UpdatePrerequisiteArrayOutput struct{ *pulumi.OutputState }

func (UpdatePrerequisiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UpdatePrerequisite)(nil)).Elem()
}

func (o UpdatePrerequisiteArrayOutput) ToUpdatePrerequisiteArrayOutput() UpdatePrerequisiteArrayOutput {
	return o
}

func (o UpdatePrerequisiteArrayOutput) ToUpdatePrerequisiteArrayOutputWithContext(ctx context.Context) UpdatePrerequisiteArrayOutput {
	return o
}

func (o UpdatePrerequisiteArrayOutput) Index(i pulumi.IntInput) UpdatePrerequisiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UpdatePrerequisite {
		return vs[0].([]UpdatePrerequisite)[vs[1].(int)]
	}).(UpdatePrerequisiteOutput)
}

// If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.
type UpdatePrerequisiteResponse struct {
	// Friendly name of the prerequisite.
	PackageName *string `pulumi:"packageName"`
	// Updatable component type.
	UpdateType *string `pulumi:"updateType"`
	// Version of the prerequisite.
	Version *string `pulumi:"version"`
}

// If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.
type UpdatePrerequisiteResponseOutput struct{ *pulumi.OutputState }

func (UpdatePrerequisiteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdatePrerequisiteResponse)(nil)).Elem()
}

func (o UpdatePrerequisiteResponseOutput) ToUpdatePrerequisiteResponseOutput() UpdatePrerequisiteResponseOutput {
	return o
}

func (o UpdatePrerequisiteResponseOutput) ToUpdatePrerequisiteResponseOutputWithContext(ctx context.Context) UpdatePrerequisiteResponseOutput {
	return o
}

// Friendly name of the prerequisite.
func (o UpdatePrerequisiteResponseOutput) PackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdatePrerequisiteResponse) *string { return v.PackageName }).(pulumi.StringPtrOutput)
}

// Updatable component type.
func (o UpdatePrerequisiteResponseOutput) UpdateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdatePrerequisiteResponse) *string { return v.UpdateType }).(pulumi.StringPtrOutput)
}

// Version of the prerequisite.
func (o UpdatePrerequisiteResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdatePrerequisiteResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type UpdatePrerequisiteResponseArrayOutput struct{ *pulumi.OutputState }

func (UpdatePrerequisiteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UpdatePrerequisiteResponse)(nil)).Elem()
}

func (o UpdatePrerequisiteResponseArrayOutput) ToUpdatePrerequisiteResponseArrayOutput() UpdatePrerequisiteResponseArrayOutput {
	return o
}

func (o UpdatePrerequisiteResponseArrayOutput) ToUpdatePrerequisiteResponseArrayOutputWithContext(ctx context.Context) UpdatePrerequisiteResponseArrayOutput {
	return o
}

func (o UpdatePrerequisiteResponseArrayOutput) Index(i pulumi.IntInput) UpdatePrerequisiteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UpdatePrerequisiteResponse {
		return vs[0].([]UpdatePrerequisiteResponse)[vs[1].(int)]
	}).(UpdatePrerequisiteResponseOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// The VirtualSwitchConfigurationOverrides of a cluster.
type VirtualSwitchConfigurationOverrides struct {
	// Enable IoV for Virtual Switch
	EnableIov *string `pulumi:"enableIov"`
	// Load Balancing Algorithm for Virtual Switch
	LoadBalancingAlgorithm *string `pulumi:"loadBalancingAlgorithm"`
}

// VirtualSwitchConfigurationOverridesInput is an input type that accepts VirtualSwitchConfigurationOverridesArgs and VirtualSwitchConfigurationOverridesOutput values.
// You can construct a concrete instance of `VirtualSwitchConfigurationOverridesInput` via:
//
//	VirtualSwitchConfigurationOverridesArgs{...}
type VirtualSwitchConfigurationOverridesInput interface {
	pulumi.Input

	ToVirtualSwitchConfigurationOverridesOutput() VirtualSwitchConfigurationOverridesOutput
	ToVirtualSwitchConfigurationOverridesOutputWithContext(context.Context) VirtualSwitchConfigurationOverridesOutput
}

// The VirtualSwitchConfigurationOverrides of a cluster.
type VirtualSwitchConfigurationOverridesArgs struct {
	// Enable IoV for Virtual Switch
	EnableIov pulumi.StringPtrInput `pulumi:"enableIov"`
	// Load Balancing Algorithm for Virtual Switch
	LoadBalancingAlgorithm pulumi.StringPtrInput `pulumi:"loadBalancingAlgorithm"`
}

func (VirtualSwitchConfigurationOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualSwitchConfigurationOverrides)(nil)).Elem()
}

func (i VirtualSwitchConfigurationOverridesArgs) ToVirtualSwitchConfigurationOverridesOutput() VirtualSwitchConfigurationOverridesOutput {
	return i.ToVirtualSwitchConfigurationOverridesOutputWithContext(context.Background())
}

func (i VirtualSwitchConfigurationOverridesArgs) ToVirtualSwitchConfigurationOverridesOutputWithContext(ctx context.Context) VirtualSwitchConfigurationOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualSwitchConfigurationOverridesOutput)
}

func (i VirtualSwitchConfigurationOverridesArgs) ToVirtualSwitchConfigurationOverridesPtrOutput() VirtualSwitchConfigurationOverridesPtrOutput {
	return i.ToVirtualSwitchConfigurationOverridesPtrOutputWithContext(context.Background())
}

func (i VirtualSwitchConfigurationOverridesArgs) ToVirtualSwitchConfigurationOverridesPtrOutputWithContext(ctx context.Context) VirtualSwitchConfigurationOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualSwitchConfigurationOverridesOutput).ToVirtualSwitchConfigurationOverridesPtrOutputWithContext(ctx)
}

// VirtualSwitchConfigurationOverridesPtrInput is an input type that accepts VirtualSwitchConfigurationOverridesArgs, VirtualSwitchConfigurationOverridesPtr and VirtualSwitchConfigurationOverridesPtrOutput values.
// You can construct a concrete instance of `VirtualSwitchConfigurationOverridesPtrInput` via:
//
//	        VirtualSwitchConfigurationOverridesArgs{...}
//
//	or:
//
//	        nil
type VirtualSwitchConfigurationOverridesPtrInput interface {
	pulumi.Input

	ToVirtualSwitchConfigurationOverridesPtrOutput() VirtualSwitchConfigurationOverridesPtrOutput
	ToVirtualSwitchConfigurationOverridesPtrOutputWithContext(context.Context) VirtualSwitchConfigurationOverridesPtrOutput
}

type virtualSwitchConfigurationOverridesPtrType VirtualSwitchConfigurationOverridesArgs

func VirtualSwitchConfigurationOverridesPtr(v *VirtualSwitchConfigurationOverridesArgs) VirtualSwitchConfigurationOverridesPtrInput {
	return (*virtualSwitchConfigurationOverridesPtrType)(v)
}

func (*virtualSwitchConfigurationOverridesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualSwitchConfigurationOverrides)(nil)).Elem()
}

func (i *virtualSwitchConfigurationOverridesPtrType) ToVirtualSwitchConfigurationOverridesPtrOutput() VirtualSwitchConfigurationOverridesPtrOutput {
	return i.ToVirtualSwitchConfigurationOverridesPtrOutputWithContext(context.Background())
}

func (i *virtualSwitchConfigurationOverridesPtrType) ToVirtualSwitchConfigurationOverridesPtrOutputWithContext(ctx context.Context) VirtualSwitchConfigurationOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualSwitchConfigurationOverridesPtrOutput)
}

// The VirtualSwitchConfigurationOverrides of a cluster.
type VirtualSwitchConfigurationOverridesOutput struct{ *pulumi.OutputState }

func (VirtualSwitchConfigurationOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualSwitchConfigurationOverrides)(nil)).Elem()
}

func (o VirtualSwitchConfigurationOverridesOutput) ToVirtualSwitchConfigurationOverridesOutput() VirtualSwitchConfigurationOverridesOutput {
	return o
}

func (o VirtualSwitchConfigurationOverridesOutput) ToVirtualSwitchConfigurationOverridesOutputWithContext(ctx context.Context) VirtualSwitchConfigurationOverridesOutput {
	return o
}

func (o VirtualSwitchConfigurationOverridesOutput) ToVirtualSwitchConfigurationOverridesPtrOutput() VirtualSwitchConfigurationOverridesPtrOutput {
	return o.ToVirtualSwitchConfigurationOverridesPtrOutputWithContext(context.Background())
}

func (o VirtualSwitchConfigurationOverridesOutput) ToVirtualSwitchConfigurationOverridesPtrOutputWithContext(ctx context.Context) VirtualSwitchConfigurationOverridesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualSwitchConfigurationOverrides) *VirtualSwitchConfigurationOverrides {
		return &v
	}).(VirtualSwitchConfigurationOverridesPtrOutput)
}

// Enable IoV for Virtual Switch
func (o VirtualSwitchConfigurationOverridesOutput) EnableIov() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualSwitchConfigurationOverrides) *string { return v.EnableIov }).(pulumi.StringPtrOutput)
}

// Load Balancing Algorithm for Virtual Switch
func (o VirtualSwitchConfigurationOverridesOutput) LoadBalancingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualSwitchConfigurationOverrides) *string { return v.LoadBalancingAlgorithm }).(pulumi.StringPtrOutput)
}

type VirtualSwitchConfigurationOverridesPtrOutput struct{ *pulumi.OutputState }

func (VirtualSwitchConfigurationOverridesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualSwitchConfigurationOverrides)(nil)).Elem()
}

func (o VirtualSwitchConfigurationOverridesPtrOutput) ToVirtualSwitchConfigurationOverridesPtrOutput() VirtualSwitchConfigurationOverridesPtrOutput {
	return o
}

func (o VirtualSwitchConfigurationOverridesPtrOutput) ToVirtualSwitchConfigurationOverridesPtrOutputWithContext(ctx context.Context) VirtualSwitchConfigurationOverridesPtrOutput {
	return o
}

func (o VirtualSwitchConfigurationOverridesPtrOutput) Elem() VirtualSwitchConfigurationOverridesOutput {
	return o.ApplyT(func(v *VirtualSwitchConfigurationOverrides) VirtualSwitchConfigurationOverrides {
		if v != nil {
			return *v
		}
		var ret VirtualSwitchConfigurationOverrides
		return ret
	}).(VirtualSwitchConfigurationOverridesOutput)
}

// Enable IoV for Virtual Switch
func (o VirtualSwitchConfigurationOverridesPtrOutput) EnableIov() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualSwitchConfigurationOverrides) *string {
		if v == nil {
			return nil
		}
		return v.EnableIov
	}).(pulumi.StringPtrOutput)
}

// Load Balancing Algorithm for Virtual Switch
func (o VirtualSwitchConfigurationOverridesPtrOutput) LoadBalancingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualSwitchConfigurationOverrides) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancingAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The VirtualSwitchConfigurationOverrides of a cluster.
type VirtualSwitchConfigurationOverridesResponse struct {
	// Enable IoV for Virtual Switch
	EnableIov string `pulumi:"enableIov"`
	// Load Balancing Algorithm for Virtual Switch
	LoadBalancingAlgorithm string `pulumi:"loadBalancingAlgorithm"`
}

// The VirtualSwitchConfigurationOverrides of a cluster.
type VirtualSwitchConfigurationOverridesResponseOutput struct{ *pulumi.OutputState }

func (VirtualSwitchConfigurationOverridesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualSwitchConfigurationOverridesResponse)(nil)).Elem()
}

func (o VirtualSwitchConfigurationOverridesResponseOutput) ToVirtualSwitchConfigurationOverridesResponseOutput() VirtualSwitchConfigurationOverridesResponseOutput {
	return o
}

func (o VirtualSwitchConfigurationOverridesResponseOutput) ToVirtualSwitchConfigurationOverridesResponseOutputWithContext(ctx context.Context) VirtualSwitchConfigurationOverridesResponseOutput {
	return o
}

// Enable IoV for Virtual Switch
func (o VirtualSwitchConfigurationOverridesResponseOutput) EnableIov() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualSwitchConfigurationOverridesResponse) string { return v.EnableIov }).(pulumi.StringOutput)
}

// Load Balancing Algorithm for Virtual Switch
func (o VirtualSwitchConfigurationOverridesResponseOutput) LoadBalancingAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualSwitchConfigurationOverridesResponse) string { return v.LoadBalancingAlgorithm }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AdapterPropertyOverridesOutput{})
	pulumi.RegisterOutputType(AdapterPropertyOverridesPtrOutput{})
	pulumi.RegisterOutputType(AdapterPropertyOverridesResponseOutput{})
	pulumi.RegisterOutputType(ArcConnectivityPropertiesOutput{})
	pulumi.RegisterOutputType(ArcConnectivityPropertiesArrayOutput{})
	pulumi.RegisterOutputType(ArcConnectivityPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ArcConnectivityPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(ClusterDesiredPropertiesOutput{})
	pulumi.RegisterOutputType(ClusterDesiredPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ClusterDesiredPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ClusterDesiredPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeResponseOutput{})
	pulumi.RegisterOutputType(ClusterNodeResponseArrayOutput{})
	pulumi.RegisterOutputType(ClusterReportedPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DefaultExtensionDetailsResponseOutput{})
	pulumi.RegisterOutputType(DefaultExtensionDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(DeploymentClusterOutput{})
	pulumi.RegisterOutputType(DeploymentClusterPtrOutput{})
	pulumi.RegisterOutputType(DeploymentClusterResponseOutput{})
	pulumi.RegisterOutputType(DeploymentClusterResponsePtrOutput{})
	pulumi.RegisterOutputType(DeploymentConfigurationOutput{})
	pulumi.RegisterOutputType(DeploymentConfigurationResponseOutput{})
	pulumi.RegisterOutputType(DeploymentDataOutput{})
	pulumi.RegisterOutputType(DeploymentDataResponseOutput{})
	pulumi.RegisterOutputType(DeploymentSecuritySettingsOutput{})
	pulumi.RegisterOutputType(DeploymentSecuritySettingsPtrOutput{})
	pulumi.RegisterOutputType(DeploymentSecuritySettingsResponseOutput{})
	pulumi.RegisterOutputType(DeploymentSecuritySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DeploymentStepResponseOutput{})
	pulumi.RegisterOutputType(DeploymentStepResponseArrayOutput{})
	pulumi.RegisterOutputType(DeviceConfigurationOutput{})
	pulumi.RegisterOutputType(DeviceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeviceConfigurationResponseOutput{})
	pulumi.RegisterOutputType(DeviceConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(EceActionStatusResponseOutput{})
	pulumi.RegisterOutputType(EceDeploymentSecretsOutput{})
	pulumi.RegisterOutputType(EceDeploymentSecretsArrayOutput{})
	pulumi.RegisterOutputType(EceDeploymentSecretsResponseOutput{})
	pulumi.RegisterOutputType(EceDeploymentSecretsResponseArrayOutput{})
	pulumi.RegisterOutputType(EceReportedPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(ExtensionInstanceViewResponseOutput{})
	pulumi.RegisterOutputType(ExtensionInstanceViewResponseStatusOutput{})
	pulumi.RegisterOutputType(ExtensionInstanceViewResponseStatusPtrOutput{})
	pulumi.RegisterOutputType(ExtensionProfileResponseOutput{})
	pulumi.RegisterOutputType(ExtensionResponseOutput{})
	pulumi.RegisterOutputType(ExtensionResponseArrayOutput{})
	pulumi.RegisterOutputType(HciEdgeDevicePropertiesOutput{})
	pulumi.RegisterOutputType(HciEdgeDevicePropertiesPtrOutput{})
	pulumi.RegisterOutputType(HciEdgeDevicePropertiesResponseOutput{})
	pulumi.RegisterOutputType(HciNetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(HciNicDetailResponseOutput{})
	pulumi.RegisterOutputType(HciNicDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(HciOsProfileResponseOutput{})
	pulumi.RegisterOutputType(HciReportedPropertiesResponseOutput{})
	pulumi.RegisterOutputType(HostNetworkOutput{})
	pulumi.RegisterOutputType(HostNetworkPtrOutput{})
	pulumi.RegisterOutputType(HostNetworkResponseOutput{})
	pulumi.RegisterOutputType(HostNetworkResponsePtrOutput{})
	pulumi.RegisterOutputType(InfrastructureNetworkOutput{})
	pulumi.RegisterOutputType(InfrastructureNetworkArrayOutput{})
	pulumi.RegisterOutputType(InfrastructureNetworkResponseOutput{})
	pulumi.RegisterOutputType(InfrastructureNetworkResponseArrayOutput{})
	pulumi.RegisterOutputType(IntentsOutput{})
	pulumi.RegisterOutputType(IntentsArrayOutput{})
	pulumi.RegisterOutputType(IntentsResponseOutput{})
	pulumi.RegisterOutputType(IntentsResponseArrayOutput{})
	pulumi.RegisterOutputType(IpPoolsOutput{})
	pulumi.RegisterOutputType(IpPoolsArrayOutput{})
	pulumi.RegisterOutputType(IpPoolsResponseOutput{})
	pulumi.RegisterOutputType(IpPoolsResponseArrayOutput{})
	pulumi.RegisterOutputType(IsolatedVmAttestationConfigurationResponseOutput{})
	pulumi.RegisterOutputType(LogCollectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(LogCollectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(LogCollectionSessionResponseOutput{})
	pulumi.RegisterOutputType(LogCollectionSessionResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkControllerOutput{})
	pulumi.RegisterOutputType(NetworkControllerPtrOutput{})
	pulumi.RegisterOutputType(NetworkControllerResponseOutput{})
	pulumi.RegisterOutputType(NetworkControllerResponsePtrOutput{})
	pulumi.RegisterOutputType(NicDetailOutput{})
	pulumi.RegisterOutputType(NicDetailArrayOutput{})
	pulumi.RegisterOutputType(NicDetailResponseOutput{})
	pulumi.RegisterOutputType(NicDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(ObservabilityOutput{})
	pulumi.RegisterOutputType(ObservabilityPtrOutput{})
	pulumi.RegisterOutputType(ObservabilityResponseOutput{})
	pulumi.RegisterOutputType(ObservabilityResponsePtrOutput{})
	pulumi.RegisterOutputType(OptionalServicesOutput{})
	pulumi.RegisterOutputType(OptionalServicesPtrOutput{})
	pulumi.RegisterOutputType(OptionalServicesResponseOutput{})
	pulumi.RegisterOutputType(OptionalServicesResponsePtrOutput{})
	pulumi.RegisterOutputType(PerNodeExtensionStateResponseOutput{})
	pulumi.RegisterOutputType(PerNodeExtensionStateResponseArrayOutput{})
	pulumi.RegisterOutputType(PerNodeRemoteSupportSessionResponseOutput{})
	pulumi.RegisterOutputType(PerNodeRemoteSupportSessionResponseArrayOutput{})
	pulumi.RegisterOutputType(PerNodeStateResponseOutput{})
	pulumi.RegisterOutputType(PerNodeStateResponseArrayOutput{})
	pulumi.RegisterOutputType(PhysicalNodesOutput{})
	pulumi.RegisterOutputType(PhysicalNodesArrayOutput{})
	pulumi.RegisterOutputType(PhysicalNodesResponseOutput{})
	pulumi.RegisterOutputType(PhysicalNodesResponseArrayOutput{})
	pulumi.RegisterOutputType(QosPolicyOverridesOutput{})
	pulumi.RegisterOutputType(QosPolicyOverridesPtrOutput{})
	pulumi.RegisterOutputType(QosPolicyOverridesResponseOutput{})
	pulumi.RegisterOutputType(RemoteSupportNodeSettingsResponseOutput{})
	pulumi.RegisterOutputType(RemoteSupportNodeSettingsResponseArrayOutput{})
	pulumi.RegisterOutputType(RemoteSupportPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RemoteSupportPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SbeCredentialsOutput{})
	pulumi.RegisterOutputType(SbeCredentialsArrayOutput{})
	pulumi.RegisterOutputType(SbeCredentialsResponseOutput{})
	pulumi.RegisterOutputType(SbeCredentialsResponseArrayOutput{})
	pulumi.RegisterOutputType(SbeDeploymentInfoOutput{})
	pulumi.RegisterOutputType(SbeDeploymentInfoPtrOutput{})
	pulumi.RegisterOutputType(SbeDeploymentInfoResponseOutput{})
	pulumi.RegisterOutputType(SbeDeploymentInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(SbeDeploymentPackageInfoResponseOutput{})
	pulumi.RegisterOutputType(SbePartnerInfoOutput{})
	pulumi.RegisterOutputType(SbePartnerInfoPtrOutput{})
	pulumi.RegisterOutputType(SbePartnerInfoResponseOutput{})
	pulumi.RegisterOutputType(SbePartnerInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(SbePartnerPropertiesOutput{})
	pulumi.RegisterOutputType(SbePartnerPropertiesArrayOutput{})
	pulumi.RegisterOutputType(SbePartnerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SbePartnerPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(ScaleUnitsOutput{})
	pulumi.RegisterOutputType(ScaleUnitsArrayOutput{})
	pulumi.RegisterOutputType(ScaleUnitsResponseOutput{})
	pulumi.RegisterOutputType(ScaleUnitsResponseArrayOutput{})
	pulumi.RegisterOutputType(SdnIntegrationOutput{})
	pulumi.RegisterOutputType(SdnIntegrationPtrOutput{})
	pulumi.RegisterOutputType(SdnIntegrationResponseOutput{})
	pulumi.RegisterOutputType(SdnIntegrationResponsePtrOutput{})
	pulumi.RegisterOutputType(SecurityComplianceStatusResponseOutput{})
	pulumi.RegisterOutputType(ServiceConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ServiceConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ServiceConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(SoftwareAssurancePropertiesOutput{})
	pulumi.RegisterOutputType(SoftwareAssurancePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SoftwareAssurancePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SoftwareAssurancePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(StepOutput{})
	pulumi.RegisterOutputType(StepArrayOutput{})
	pulumi.RegisterOutputType(StepResponseOutput{})
	pulumi.RegisterOutputType(StepResponseArrayOutput{})
	pulumi.RegisterOutputType(StorageOutput{})
	pulumi.RegisterOutputType(StoragePtrOutput{})
	pulumi.RegisterOutputType(StorageAdapterIPInfoOutput{})
	pulumi.RegisterOutputType(StorageAdapterIPInfoArrayOutput{})
	pulumi.RegisterOutputType(StorageAdapterIPInfoResponseOutput{})
	pulumi.RegisterOutputType(StorageAdapterIPInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(StorageNetworksOutput{})
	pulumi.RegisterOutputType(StorageNetworksArrayOutput{})
	pulumi.RegisterOutputType(StorageNetworksResponseOutput{})
	pulumi.RegisterOutputType(StorageNetworksResponseArrayOutput{})
	pulumi.RegisterOutputType(StorageResponseOutput{})
	pulumi.RegisterOutputType(StorageResponsePtrOutput{})
	pulumi.RegisterOutputType(SwitchDetailResponseOutput{})
	pulumi.RegisterOutputType(SwitchDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(SwitchExtensionResponseOutput{})
	pulumi.RegisterOutputType(SwitchExtensionResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UpdatePrerequisiteOutput{})
	pulumi.RegisterOutputType(UpdatePrerequisiteArrayOutput{})
	pulumi.RegisterOutputType(UpdatePrerequisiteResponseOutput{})
	pulumi.RegisterOutputType(UpdatePrerequisiteResponseArrayOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(VirtualSwitchConfigurationOverridesOutput{})
	pulumi.RegisterOutputType(VirtualSwitchConfigurationOverridesPtrOutput{})
	pulumi.RegisterOutputType(VirtualSwitchConfigurationOverridesResponseOutput{})
}
