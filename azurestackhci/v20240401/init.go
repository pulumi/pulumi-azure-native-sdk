// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240401

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure-native:azurestackhci/v20240401:ArcSetting":
		r = &ArcSetting{}
	case "azure-native:azurestackhci/v20240401:Cluster":
		r = &Cluster{}
	case "azure-native:azurestackhci/v20240401:DeploymentSetting":
		r = &DeploymentSetting{}
	case "azure-native:azurestackhci/v20240401:Extension":
		r = &Extension{}
	case "azure-native:azurestackhci/v20240401:HciEdgeDevice":
		r = &HciEdgeDevice{}
	case "azure-native:azurestackhci/v20240401:SecuritySetting":
		r = &SecuritySetting{}
	case "azure-native:azurestackhci/v20240401:Update":
		r = &Update{}
	case "azure-native:azurestackhci/v20240401:UpdateRun":
		r = &UpdateRun{}
	case "azure-native:azurestackhci/v20240401:UpdateSummary":
		r = &UpdateSummary{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := utilities.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"azure-native",
		"azurestackhci/v20240401",
		&module{version},
	)
}
