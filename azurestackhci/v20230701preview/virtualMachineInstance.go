// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20230701preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The virtual machine instance resource definition.
type VirtualMachineInstance struct {
	pulumi.CustomResourceState

	// The extendedLocation of the resource.
	ExtendedLocation ExtendedLocationResponsePtrOutput `pulumi:"extendedLocation"`
	// Guest agent install status.
	GuestAgentInstallStatus GuestAgentInstallStatusResponsePtrOutput `pulumi:"guestAgentInstallStatus"`
	// HardwareProfile - Specifies the hardware settings for the virtual machine instance.
	HardwareProfile VirtualMachineInstancePropertiesResponseHardwareProfilePtrOutput `pulumi:"hardwareProfile"`
	// Identity for the resource.
	Identity IdentityResponsePtrOutput `pulumi:"identity"`
	// The virtual machine instance view.
	InstanceView VirtualMachineInstanceViewResponseOutput `pulumi:"instanceView"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// NetworkProfile - describes the network configuration the virtual machine instance
	NetworkProfile VirtualMachineInstancePropertiesResponseNetworkProfilePtrOutput `pulumi:"networkProfile"`
	// OsProfile - describes the configuration of the operating system and sets login data
	OsProfile VirtualMachineInstancePropertiesResponseOsProfilePtrOutput `pulumi:"osProfile"`
	// Provisioning state of the virtual machine instance.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Unique identifier defined by ARC to identify the guest of the VM.
	ResourceUid pulumi.StringPtrOutput `pulumi:"resourceUid"`
	// SecurityProfile - Specifies the security settings for the virtual machine instance.
	SecurityProfile VirtualMachineInstancePropertiesResponseSecurityProfilePtrOutput `pulumi:"securityProfile"`
	// The observed state of virtual machine instances
	Status VirtualMachineInstanceStatusResponseOutput `pulumi:"status"`
	// StorageProfile - contains information about the disks and storage information for the virtual machine instance
	StorageProfile VirtualMachineInstancePropertiesResponseStorageProfilePtrOutput `pulumi:"storageProfile"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
	// Unique identifier for the vm resource.
	VmId pulumi.StringOutput `pulumi:"vmId"`
}

// NewVirtualMachineInstance registers a new resource with the given unique name, arguments, and options.
func NewVirtualMachineInstance(ctx *pulumi.Context,
	name string, args *VirtualMachineInstanceArgs, opts ...pulumi.ResourceOption) (*VirtualMachineInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceUri == nil {
		return nil, errors.New("invalid value for required argument 'ResourceUri'")
	}
	if args.HardwareProfile != nil {
		args.HardwareProfile = args.HardwareProfile.ToVirtualMachineInstancePropertiesHardwareProfilePtrOutput().ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfile) *VirtualMachineInstancePropertiesHardwareProfile {
			return v.Defaults()
		}).(VirtualMachineInstancePropertiesHardwareProfilePtrOutput)
	}
	if args.OsProfile != nil {
		args.OsProfile = args.OsProfile.ToVirtualMachineInstancePropertiesOsProfilePtrOutput().ApplyT(func(v *VirtualMachineInstancePropertiesOsProfile) *VirtualMachineInstancePropertiesOsProfile {
			return v.Defaults()
		}).(VirtualMachineInstancePropertiesOsProfilePtrOutput)
	}
	if args.SecurityProfile != nil {
		args.SecurityProfile = args.SecurityProfile.ToVirtualMachineInstancePropertiesSecurityProfilePtrOutput().ApplyT(func(v *VirtualMachineInstancePropertiesSecurityProfile) *VirtualMachineInstancePropertiesSecurityProfile {
			return v.Defaults()
		}).(VirtualMachineInstancePropertiesSecurityProfilePtrOutput)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:azurestackhci:VirtualMachineInstance"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource VirtualMachineInstance
	err := ctx.RegisterResource("azure-native:azurestackhci/v20230701preview:VirtualMachineInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualMachineInstance gets an existing VirtualMachineInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualMachineInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualMachineInstanceState, opts ...pulumi.ResourceOption) (*VirtualMachineInstance, error) {
	var resource VirtualMachineInstance
	err := ctx.ReadResource("azure-native:azurestackhci/v20230701preview:VirtualMachineInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualMachineInstance resources.
type virtualMachineInstanceState struct {
}

type VirtualMachineInstanceState struct {
}

func (VirtualMachineInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineInstanceState)(nil)).Elem()
}

type virtualMachineInstanceArgs struct {
	// The extendedLocation of the resource.
	ExtendedLocation *ExtendedLocation `pulumi:"extendedLocation"`
	// HardwareProfile - Specifies the hardware settings for the virtual machine instance.
	HardwareProfile *VirtualMachineInstancePropertiesHardwareProfile `pulumi:"hardwareProfile"`
	// Identity for the resource.
	Identity *Identity `pulumi:"identity"`
	// NetworkProfile - describes the network configuration the virtual machine instance
	NetworkProfile *VirtualMachineInstancePropertiesNetworkProfile `pulumi:"networkProfile"`
	// OsProfile - describes the configuration of the operating system and sets login data
	OsProfile *VirtualMachineInstancePropertiesOsProfile `pulumi:"osProfile"`
	// Unique identifier defined by ARC to identify the guest of the VM.
	ResourceUid *string `pulumi:"resourceUid"`
	// The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.
	ResourceUri string `pulumi:"resourceUri"`
	// SecurityProfile - Specifies the security settings for the virtual machine instance.
	SecurityProfile *VirtualMachineInstancePropertiesSecurityProfile `pulumi:"securityProfile"`
	// StorageProfile - contains information about the disks and storage information for the virtual machine instance
	StorageProfile *VirtualMachineInstancePropertiesStorageProfile `pulumi:"storageProfile"`
}

// The set of arguments for constructing a VirtualMachineInstance resource.
type VirtualMachineInstanceArgs struct {
	// The extendedLocation of the resource.
	ExtendedLocation ExtendedLocationPtrInput
	// HardwareProfile - Specifies the hardware settings for the virtual machine instance.
	HardwareProfile VirtualMachineInstancePropertiesHardwareProfilePtrInput
	// Identity for the resource.
	Identity IdentityPtrInput
	// NetworkProfile - describes the network configuration the virtual machine instance
	NetworkProfile VirtualMachineInstancePropertiesNetworkProfilePtrInput
	// OsProfile - describes the configuration of the operating system and sets login data
	OsProfile VirtualMachineInstancePropertiesOsProfilePtrInput
	// Unique identifier defined by ARC to identify the guest of the VM.
	ResourceUid pulumi.StringPtrInput
	// The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.
	ResourceUri pulumi.StringInput
	// SecurityProfile - Specifies the security settings for the virtual machine instance.
	SecurityProfile VirtualMachineInstancePropertiesSecurityProfilePtrInput
	// StorageProfile - contains information about the disks and storage information for the virtual machine instance
	StorageProfile VirtualMachineInstancePropertiesStorageProfilePtrInput
}

func (VirtualMachineInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineInstanceArgs)(nil)).Elem()
}

type VirtualMachineInstanceInput interface {
	pulumi.Input

	ToVirtualMachineInstanceOutput() VirtualMachineInstanceOutput
	ToVirtualMachineInstanceOutputWithContext(ctx context.Context) VirtualMachineInstanceOutput
}

func (*VirtualMachineInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstance)(nil)).Elem()
}

func (i *VirtualMachineInstance) ToVirtualMachineInstanceOutput() VirtualMachineInstanceOutput {
	return i.ToVirtualMachineInstanceOutputWithContext(context.Background())
}

func (i *VirtualMachineInstance) ToVirtualMachineInstanceOutputWithContext(ctx context.Context) VirtualMachineInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstanceOutput)
}

type VirtualMachineInstanceOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstance)(nil)).Elem()
}

func (o VirtualMachineInstanceOutput) ToVirtualMachineInstanceOutput() VirtualMachineInstanceOutput {
	return o
}

func (o VirtualMachineInstanceOutput) ToVirtualMachineInstanceOutputWithContext(ctx context.Context) VirtualMachineInstanceOutput {
	return o
}

// The extendedLocation of the resource.
func (o VirtualMachineInstanceOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) ExtendedLocationResponsePtrOutput { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// Guest agent install status.
func (o VirtualMachineInstanceOutput) GuestAgentInstallStatus() GuestAgentInstallStatusResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) GuestAgentInstallStatusResponsePtrOutput {
		return v.GuestAgentInstallStatus
	}).(GuestAgentInstallStatusResponsePtrOutput)
}

// HardwareProfile - Specifies the hardware settings for the virtual machine instance.
func (o VirtualMachineInstanceOutput) HardwareProfile() VirtualMachineInstancePropertiesResponseHardwareProfilePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) VirtualMachineInstancePropertiesResponseHardwareProfilePtrOutput {
		return v.HardwareProfile
	}).(VirtualMachineInstancePropertiesResponseHardwareProfilePtrOutput)
}

// Identity for the resource.
func (o VirtualMachineInstanceOutput) Identity() IdentityResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) IdentityResponsePtrOutput { return v.Identity }).(IdentityResponsePtrOutput)
}

// The virtual machine instance view.
func (o VirtualMachineInstanceOutput) InstanceView() VirtualMachineInstanceViewResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) VirtualMachineInstanceViewResponseOutput { return v.InstanceView }).(VirtualMachineInstanceViewResponseOutput)
}

// The name of the resource
func (o VirtualMachineInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// NetworkProfile - describes the network configuration the virtual machine instance
func (o VirtualMachineInstanceOutput) NetworkProfile() VirtualMachineInstancePropertiesResponseNetworkProfilePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) VirtualMachineInstancePropertiesResponseNetworkProfilePtrOutput {
		return v.NetworkProfile
	}).(VirtualMachineInstancePropertiesResponseNetworkProfilePtrOutput)
}

// OsProfile - describes the configuration of the operating system and sets login data
func (o VirtualMachineInstanceOutput) OsProfile() VirtualMachineInstancePropertiesResponseOsProfilePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) VirtualMachineInstancePropertiesResponseOsProfilePtrOutput {
		return v.OsProfile
	}).(VirtualMachineInstancePropertiesResponseOsProfilePtrOutput)
}

// Provisioning state of the virtual machine instance.
func (o VirtualMachineInstanceOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Unique identifier defined by ARC to identify the guest of the VM.
func (o VirtualMachineInstanceOutput) ResourceUid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) pulumi.StringPtrOutput { return v.ResourceUid }).(pulumi.StringPtrOutput)
}

// SecurityProfile - Specifies the security settings for the virtual machine instance.
func (o VirtualMachineInstanceOutput) SecurityProfile() VirtualMachineInstancePropertiesResponseSecurityProfilePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) VirtualMachineInstancePropertiesResponseSecurityProfilePtrOutput {
		return v.SecurityProfile
	}).(VirtualMachineInstancePropertiesResponseSecurityProfilePtrOutput)
}

// The observed state of virtual machine instances
func (o VirtualMachineInstanceOutput) Status() VirtualMachineInstanceStatusResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) VirtualMachineInstanceStatusResponseOutput { return v.Status }).(VirtualMachineInstanceStatusResponseOutput)
}

// StorageProfile - contains information about the disks and storage information for the virtual machine instance
func (o VirtualMachineInstanceOutput) StorageProfile() VirtualMachineInstancePropertiesResponseStorageProfilePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) VirtualMachineInstancePropertiesResponseStorageProfilePtrOutput {
		return v.StorageProfile
	}).(VirtualMachineInstancePropertiesResponseStorageProfilePtrOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o VirtualMachineInstanceOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o VirtualMachineInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Unique identifier for the vm resource.
func (o VirtualMachineInstanceOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineInstance) pulumi.StringOutput { return v.VmId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(VirtualMachineInstanceOutput{})
}
