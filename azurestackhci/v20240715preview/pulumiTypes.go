// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240715preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// The resource management error additional info.
type ErrorAdditionalInfoResponse struct {
	// The additional info.
	Info interface{} `pulumi:"info"`
	// The additional info type.
	Type string `pulumi:"type"`
}

// The resource management error additional info.
type ErrorAdditionalInfoResponseOutput struct{ *pulumi.OutputState }

func (ErrorAdditionalInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorAdditionalInfoResponse)(nil)).Elem()
}

func (o ErrorAdditionalInfoResponseOutput) ToErrorAdditionalInfoResponseOutput() ErrorAdditionalInfoResponseOutput {
	return o
}

func (o ErrorAdditionalInfoResponseOutput) ToErrorAdditionalInfoResponseOutputWithContext(ctx context.Context) ErrorAdditionalInfoResponseOutput {
	return o
}

// The additional info.
func (o ErrorAdditionalInfoResponseOutput) Info() pulumi.AnyOutput {
	return o.ApplyT(func(v ErrorAdditionalInfoResponse) interface{} { return v.Info }).(pulumi.AnyOutput)
}

// The additional info type.
func (o ErrorAdditionalInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorAdditionalInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ErrorAdditionalInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorAdditionalInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorAdditionalInfoResponse)(nil)).Elem()
}

func (o ErrorAdditionalInfoResponseArrayOutput) ToErrorAdditionalInfoResponseArrayOutput() ErrorAdditionalInfoResponseArrayOutput {
	return o
}

func (o ErrorAdditionalInfoResponseArrayOutput) ToErrorAdditionalInfoResponseArrayOutputWithContext(ctx context.Context) ErrorAdditionalInfoResponseArrayOutput {
	return o
}

func (o ErrorAdditionalInfoResponseArrayOutput) Index(i pulumi.IntInput) ErrorAdditionalInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorAdditionalInfoResponse {
		return vs[0].([]ErrorAdditionalInfoResponse)[vs[1].(int)]
	}).(ErrorAdditionalInfoResponseOutput)
}

// The error detail.
type ErrorDetailResponse struct {
	// The error additional info.
	AdditionalInfo []ErrorAdditionalInfoResponse `pulumi:"additionalInfo"`
	// The error code.
	Code string `pulumi:"code"`
	// The error details.
	Details []ErrorDetailResponse `pulumi:"details"`
	// The error message.
	Message string `pulumi:"message"`
	// The error target.
	Target string `pulumi:"target"`
}

// The error detail.
type ErrorDetailResponseOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutput() ErrorDetailResponseOutput {
	return o
}

func (o ErrorDetailResponseOutput) ToErrorDetailResponseOutputWithContext(ctx context.Context) ErrorDetailResponseOutput {
	return o
}

// The error additional info.
func (o ErrorDetailResponseOutput) AdditionalInfo() ErrorAdditionalInfoResponseArrayOutput {
	return o.ApplyT(func(v ErrorDetailResponse) []ErrorAdditionalInfoResponse { return v.AdditionalInfo }).(ErrorAdditionalInfoResponseArrayOutput)
}

// The error code.
func (o ErrorDetailResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Code }).(pulumi.StringOutput)
}

// The error details.
func (o ErrorDetailResponseOutput) Details() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v ErrorDetailResponse) []ErrorDetailResponse { return v.Details }).(ErrorDetailResponseArrayOutput)
}

// The error message.
func (o ErrorDetailResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The error target.
func (o ErrorDetailResponseOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v ErrorDetailResponse) string { return v.Target }).(pulumi.StringOutput)
}

type ErrorDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorDetailResponse)(nil)).Elem()
}

func (o ErrorDetailResponseArrayOutput) ToErrorDetailResponseArrayOutput() ErrorDetailResponseArrayOutput {
	return o
}

func (o ErrorDetailResponseArrayOutput) ToErrorDetailResponseArrayOutputWithContext(ctx context.Context) ErrorDetailResponseArrayOutput {
	return o
}

func (o ErrorDetailResponseArrayOutput) Index(i pulumi.IntInput) ErrorDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorDetailResponse {
		return vs[0].([]ErrorDetailResponse)[vs[1].(int)]
	}).(ErrorDetailResponseOutput)
}

// The complex type of the extended location.
type ExtendedLocation struct {
	// The name of the extended location.
	Name *string `pulumi:"name"`
	// The type of the extended location.
	Type *string `pulumi:"type"`
}

// ExtendedLocationInput is an input type that accepts ExtendedLocationArgs and ExtendedLocationOutput values.
// You can construct a concrete instance of `ExtendedLocationInput` via:
//
//	ExtendedLocationArgs{...}
type ExtendedLocationInput interface {
	pulumi.Input

	ToExtendedLocationOutput() ExtendedLocationOutput
	ToExtendedLocationOutputWithContext(context.Context) ExtendedLocationOutput
}

// The complex type of the extended location.
type ExtendedLocationArgs struct {
	// The name of the extended location.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the extended location.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (i ExtendedLocationArgs) ToExtendedLocationOutput() ExtendedLocationOutput {
	return i.ToExtendedLocationOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput)
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput).ToExtendedLocationPtrOutputWithContext(ctx)
}

// ExtendedLocationPtrInput is an input type that accepts ExtendedLocationArgs, ExtendedLocationPtr and ExtendedLocationPtrOutput values.
// You can construct a concrete instance of `ExtendedLocationPtrInput` via:
//
//	        ExtendedLocationArgs{...}
//
//	or:
//
//	        nil
type ExtendedLocationPtrInput interface {
	pulumi.Input

	ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput
	ToExtendedLocationPtrOutputWithContext(context.Context) ExtendedLocationPtrOutput
}

type extendedLocationPtrType ExtendedLocationArgs

func ExtendedLocationPtr(v *ExtendedLocationArgs) ExtendedLocationPtrInput {
	return (*extendedLocationPtrType)(v)
}

func (*extendedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationPtrOutput)
}

// The complex type of the extended location.
type ExtendedLocationOutput struct{ *pulumi.OutputState }

func (ExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationOutput) ToExtendedLocationOutput() ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocation) *ExtendedLocation {
		return &v
	}).(ExtendedLocationPtrOutput)
}

// The name of the extended location.
func (o ExtendedLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) Elem() ExtendedLocationOutput {
	return o.ApplyT(func(v *ExtendedLocation) ExtendedLocation {
		if v != nil {
			return *v
		}
		var ret ExtendedLocation
		return ret
	}).(ExtendedLocationOutput)
}

// The name of the extended location.
func (o ExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The complex type of the extended location.
type ExtendedLocationResponse struct {
	// The name of the extended location.
	Name *string `pulumi:"name"`
	// The type of the extended location.
	Type *string `pulumi:"type"`
}

// The complex type of the extended location.
type ExtendedLocationResponseOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutput() ExtendedLocationResponseOutput {
	return o
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutputWithContext(ctx context.Context) ExtendedLocationResponseOutput {
	return o
}

// The name of the extended location.
func (o ExtendedLocationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExtendedLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutput() ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutputWithContext(ctx context.Context) ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) Elem() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) ExtendedLocationResponse {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationResponse
		return ret
	}).(ExtendedLocationResponseOutput)
}

// The name of the extended location.
func (o ExtendedLocationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// This is the gallery image definition identifier.
type GalleryImageIdentifier struct {
	// The name of the gallery image definition offer.
	Offer string `pulumi:"offer"`
	// The name of the gallery image definition publisher.
	Publisher string `pulumi:"publisher"`
	// The name of the gallery image definition SKU.
	Sku string `pulumi:"sku"`
}

// GalleryImageIdentifierInput is an input type that accepts GalleryImageIdentifierArgs and GalleryImageIdentifierOutput values.
// You can construct a concrete instance of `GalleryImageIdentifierInput` via:
//
//	GalleryImageIdentifierArgs{...}
type GalleryImageIdentifierInput interface {
	pulumi.Input

	ToGalleryImageIdentifierOutput() GalleryImageIdentifierOutput
	ToGalleryImageIdentifierOutputWithContext(context.Context) GalleryImageIdentifierOutput
}

// This is the gallery image definition identifier.
type GalleryImageIdentifierArgs struct {
	// The name of the gallery image definition offer.
	Offer pulumi.StringInput `pulumi:"offer"`
	// The name of the gallery image definition publisher.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// The name of the gallery image definition SKU.
	Sku pulumi.StringInput `pulumi:"sku"`
}

func (GalleryImageIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageIdentifier)(nil)).Elem()
}

func (i GalleryImageIdentifierArgs) ToGalleryImageIdentifierOutput() GalleryImageIdentifierOutput {
	return i.ToGalleryImageIdentifierOutputWithContext(context.Background())
}

func (i GalleryImageIdentifierArgs) ToGalleryImageIdentifierOutputWithContext(ctx context.Context) GalleryImageIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageIdentifierOutput)
}

func (i GalleryImageIdentifierArgs) ToGalleryImageIdentifierPtrOutput() GalleryImageIdentifierPtrOutput {
	return i.ToGalleryImageIdentifierPtrOutputWithContext(context.Background())
}

func (i GalleryImageIdentifierArgs) ToGalleryImageIdentifierPtrOutputWithContext(ctx context.Context) GalleryImageIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageIdentifierOutput).ToGalleryImageIdentifierPtrOutputWithContext(ctx)
}

// GalleryImageIdentifierPtrInput is an input type that accepts GalleryImageIdentifierArgs, GalleryImageIdentifierPtr and GalleryImageIdentifierPtrOutput values.
// You can construct a concrete instance of `GalleryImageIdentifierPtrInput` via:
//
//	        GalleryImageIdentifierArgs{...}
//
//	or:
//
//	        nil
type GalleryImageIdentifierPtrInput interface {
	pulumi.Input

	ToGalleryImageIdentifierPtrOutput() GalleryImageIdentifierPtrOutput
	ToGalleryImageIdentifierPtrOutputWithContext(context.Context) GalleryImageIdentifierPtrOutput
}

type galleryImageIdentifierPtrType GalleryImageIdentifierArgs

func GalleryImageIdentifierPtr(v *GalleryImageIdentifierArgs) GalleryImageIdentifierPtrInput {
	return (*galleryImageIdentifierPtrType)(v)
}

func (*galleryImageIdentifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageIdentifier)(nil)).Elem()
}

func (i *galleryImageIdentifierPtrType) ToGalleryImageIdentifierPtrOutput() GalleryImageIdentifierPtrOutput {
	return i.ToGalleryImageIdentifierPtrOutputWithContext(context.Background())
}

func (i *galleryImageIdentifierPtrType) ToGalleryImageIdentifierPtrOutputWithContext(ctx context.Context) GalleryImageIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageIdentifierPtrOutput)
}

// This is the gallery image definition identifier.
type GalleryImageIdentifierOutput struct{ *pulumi.OutputState }

func (GalleryImageIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageIdentifier)(nil)).Elem()
}

func (o GalleryImageIdentifierOutput) ToGalleryImageIdentifierOutput() GalleryImageIdentifierOutput {
	return o
}

func (o GalleryImageIdentifierOutput) ToGalleryImageIdentifierOutputWithContext(ctx context.Context) GalleryImageIdentifierOutput {
	return o
}

func (o GalleryImageIdentifierOutput) ToGalleryImageIdentifierPtrOutput() GalleryImageIdentifierPtrOutput {
	return o.ToGalleryImageIdentifierPtrOutputWithContext(context.Background())
}

func (o GalleryImageIdentifierOutput) ToGalleryImageIdentifierPtrOutputWithContext(ctx context.Context) GalleryImageIdentifierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GalleryImageIdentifier) *GalleryImageIdentifier {
		return &v
	}).(GalleryImageIdentifierPtrOutput)
}

// The name of the gallery image definition offer.
func (o GalleryImageIdentifierOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifier) string { return v.Offer }).(pulumi.StringOutput)
}

// The name of the gallery image definition publisher.
func (o GalleryImageIdentifierOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifier) string { return v.Publisher }).(pulumi.StringOutput)
}

// The name of the gallery image definition SKU.
func (o GalleryImageIdentifierOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifier) string { return v.Sku }).(pulumi.StringOutput)
}

type GalleryImageIdentifierPtrOutput struct{ *pulumi.OutputState }

func (GalleryImageIdentifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageIdentifier)(nil)).Elem()
}

func (o GalleryImageIdentifierPtrOutput) ToGalleryImageIdentifierPtrOutput() GalleryImageIdentifierPtrOutput {
	return o
}

func (o GalleryImageIdentifierPtrOutput) ToGalleryImageIdentifierPtrOutputWithContext(ctx context.Context) GalleryImageIdentifierPtrOutput {
	return o
}

func (o GalleryImageIdentifierPtrOutput) Elem() GalleryImageIdentifierOutput {
	return o.ApplyT(func(v *GalleryImageIdentifier) GalleryImageIdentifier {
		if v != nil {
			return *v
		}
		var ret GalleryImageIdentifier
		return ret
	}).(GalleryImageIdentifierOutput)
}

// The name of the gallery image definition offer.
func (o GalleryImageIdentifierPtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.Offer
	}).(pulumi.StringPtrOutput)
}

// The name of the gallery image definition publisher.
func (o GalleryImageIdentifierPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The name of the gallery image definition SKU.
func (o GalleryImageIdentifierPtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.Sku
	}).(pulumi.StringPtrOutput)
}

// This is the gallery image definition identifier.
type GalleryImageIdentifierResponse struct {
	// The name of the gallery image definition offer.
	Offer string `pulumi:"offer"`
	// The name of the gallery image definition publisher.
	Publisher string `pulumi:"publisher"`
	// The name of the gallery image definition SKU.
	Sku string `pulumi:"sku"`
}

// This is the gallery image definition identifier.
type GalleryImageIdentifierResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageIdentifierResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageIdentifierResponse)(nil)).Elem()
}

func (o GalleryImageIdentifierResponseOutput) ToGalleryImageIdentifierResponseOutput() GalleryImageIdentifierResponseOutput {
	return o
}

func (o GalleryImageIdentifierResponseOutput) ToGalleryImageIdentifierResponseOutputWithContext(ctx context.Context) GalleryImageIdentifierResponseOutput {
	return o
}

// The name of the gallery image definition offer.
func (o GalleryImageIdentifierResponseOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifierResponse) string { return v.Offer }).(pulumi.StringOutput)
}

// The name of the gallery image definition publisher.
func (o GalleryImageIdentifierResponseOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifierResponse) string { return v.Publisher }).(pulumi.StringOutput)
}

// The name of the gallery image definition SKU.
func (o GalleryImageIdentifierResponseOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageIdentifierResponse) string { return v.Sku }).(pulumi.StringOutput)
}

type GalleryImageIdentifierResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageIdentifierResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageIdentifierResponse)(nil)).Elem()
}

func (o GalleryImageIdentifierResponsePtrOutput) ToGalleryImageIdentifierResponsePtrOutput() GalleryImageIdentifierResponsePtrOutput {
	return o
}

func (o GalleryImageIdentifierResponsePtrOutput) ToGalleryImageIdentifierResponsePtrOutputWithContext(ctx context.Context) GalleryImageIdentifierResponsePtrOutput {
	return o
}

func (o GalleryImageIdentifierResponsePtrOutput) Elem() GalleryImageIdentifierResponseOutput {
	return o.ApplyT(func(v *GalleryImageIdentifierResponse) GalleryImageIdentifierResponse {
		if v != nil {
			return *v
		}
		var ret GalleryImageIdentifierResponse
		return ret
	}).(GalleryImageIdentifierResponseOutput)
}

// The name of the gallery image definition offer.
func (o GalleryImageIdentifierResponsePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageIdentifierResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Offer
	}).(pulumi.StringPtrOutput)
}

// The name of the gallery image definition publisher.
func (o GalleryImageIdentifierResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageIdentifierResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The name of the gallery image definition SKU.
func (o GalleryImageIdentifierResponsePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageIdentifierResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Sku
	}).(pulumi.StringPtrOutput)
}

// The download status of the gallery image
type GalleryImageStatusDownloadStatusResponse struct {
	// The downloaded sized of the image in MB
	DownloadSizeInMB *float64 `pulumi:"downloadSizeInMB"`
}

// The download status of the gallery image
type GalleryImageStatusDownloadStatusResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageStatusDownloadStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageStatusDownloadStatusResponse)(nil)).Elem()
}

func (o GalleryImageStatusDownloadStatusResponseOutput) ToGalleryImageStatusDownloadStatusResponseOutput() GalleryImageStatusDownloadStatusResponseOutput {
	return o
}

func (o GalleryImageStatusDownloadStatusResponseOutput) ToGalleryImageStatusDownloadStatusResponseOutputWithContext(ctx context.Context) GalleryImageStatusDownloadStatusResponseOutput {
	return o
}

// The downloaded sized of the image in MB
func (o GalleryImageStatusDownloadStatusResponseOutput) DownloadSizeInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GalleryImageStatusDownloadStatusResponse) *float64 { return v.DownloadSizeInMB }).(pulumi.Float64PtrOutput)
}

type GalleryImageStatusDownloadStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageStatusDownloadStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageStatusDownloadStatusResponse)(nil)).Elem()
}

func (o GalleryImageStatusDownloadStatusResponsePtrOutput) ToGalleryImageStatusDownloadStatusResponsePtrOutput() GalleryImageStatusDownloadStatusResponsePtrOutput {
	return o
}

func (o GalleryImageStatusDownloadStatusResponsePtrOutput) ToGalleryImageStatusDownloadStatusResponsePtrOutputWithContext(ctx context.Context) GalleryImageStatusDownloadStatusResponsePtrOutput {
	return o
}

func (o GalleryImageStatusDownloadStatusResponsePtrOutput) Elem() GalleryImageStatusDownloadStatusResponseOutput {
	return o.ApplyT(func(v *GalleryImageStatusDownloadStatusResponse) GalleryImageStatusDownloadStatusResponse {
		if v != nil {
			return *v
		}
		var ret GalleryImageStatusDownloadStatusResponse
		return ret
	}).(GalleryImageStatusDownloadStatusResponseOutput)
}

// The downloaded sized of the image in MB
func (o GalleryImageStatusDownloadStatusResponsePtrOutput) DownloadSizeInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GalleryImageStatusDownloadStatusResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.DownloadSizeInMB
	}).(pulumi.Float64PtrOutput)
}

// The status of the operation performed on the gallery image
type GalleryImageStatusProvisioningStatusResponse struct {
	// The ID of the operation performed on the gallery image
	OperationId *string `pulumi:"operationId"`
	// The status of the operation performed on the gallery image [Succeeded, Failed, InProgress]
	Status string `pulumi:"status"`
}

// The status of the operation performed on the gallery image
type GalleryImageStatusProvisioningStatusResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageStatusProvisioningStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageStatusProvisioningStatusResponse)(nil)).Elem()
}

func (o GalleryImageStatusProvisioningStatusResponseOutput) ToGalleryImageStatusProvisioningStatusResponseOutput() GalleryImageStatusProvisioningStatusResponseOutput {
	return o
}

func (o GalleryImageStatusProvisioningStatusResponseOutput) ToGalleryImageStatusProvisioningStatusResponseOutputWithContext(ctx context.Context) GalleryImageStatusProvisioningStatusResponseOutput {
	return o
}

// The ID of the operation performed on the gallery image
func (o GalleryImageStatusProvisioningStatusResponseOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageStatusProvisioningStatusResponse) *string { return v.OperationId }).(pulumi.StringPtrOutput)
}

// The status of the operation performed on the gallery image [Succeeded, Failed, InProgress]
func (o GalleryImageStatusProvisioningStatusResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GalleryImageStatusProvisioningStatusResponse) string { return v.Status }).(pulumi.StringOutput)
}

type GalleryImageStatusProvisioningStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageStatusProvisioningStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageStatusProvisioningStatusResponse)(nil)).Elem()
}

func (o GalleryImageStatusProvisioningStatusResponsePtrOutput) ToGalleryImageStatusProvisioningStatusResponsePtrOutput() GalleryImageStatusProvisioningStatusResponsePtrOutput {
	return o
}

func (o GalleryImageStatusProvisioningStatusResponsePtrOutput) ToGalleryImageStatusProvisioningStatusResponsePtrOutputWithContext(ctx context.Context) GalleryImageStatusProvisioningStatusResponsePtrOutput {
	return o
}

func (o GalleryImageStatusProvisioningStatusResponsePtrOutput) Elem() GalleryImageStatusProvisioningStatusResponseOutput {
	return o.ApplyT(func(v *GalleryImageStatusProvisioningStatusResponse) GalleryImageStatusProvisioningStatusResponse {
		if v != nil {
			return *v
		}
		var ret GalleryImageStatusProvisioningStatusResponse
		return ret
	}).(GalleryImageStatusProvisioningStatusResponseOutput)
}

// The ID of the operation performed on the gallery image
func (o GalleryImageStatusProvisioningStatusResponsePtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageStatusProvisioningStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperationId
	}).(pulumi.StringPtrOutput)
}

// The status of the operation performed on the gallery image [Succeeded, Failed, InProgress]
func (o GalleryImageStatusProvisioningStatusResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageStatusProvisioningStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The observed state of gallery images
type GalleryImageStatusResponse struct {
	// The download status of the gallery image
	DownloadStatus *GalleryImageStatusDownloadStatusResponse `pulumi:"downloadStatus"`
	// GalleryImage provisioning error code
	ErrorCode *string `pulumi:"errorCode"`
	// Descriptive error message
	ErrorMessage *string `pulumi:"errorMessage"`
	// The progress of the operation in percentage
	ProgressPercentage *float64 `pulumi:"progressPercentage"`
	// provisioning status of the gallery image
	ProvisioningStatus *GalleryImageStatusProvisioningStatusResponse `pulumi:"provisioningStatus"`
}

// The observed state of gallery images
type GalleryImageStatusResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageStatusResponse)(nil)).Elem()
}

func (o GalleryImageStatusResponseOutput) ToGalleryImageStatusResponseOutput() GalleryImageStatusResponseOutput {
	return o
}

func (o GalleryImageStatusResponseOutput) ToGalleryImageStatusResponseOutputWithContext(ctx context.Context) GalleryImageStatusResponseOutput {
	return o
}

// The download status of the gallery image
func (o GalleryImageStatusResponseOutput) DownloadStatus() GalleryImageStatusDownloadStatusResponsePtrOutput {
	return o.ApplyT(func(v GalleryImageStatusResponse) *GalleryImageStatusDownloadStatusResponse { return v.DownloadStatus }).(GalleryImageStatusDownloadStatusResponsePtrOutput)
}

// GalleryImage provisioning error code
func (o GalleryImageStatusResponseOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageStatusResponse) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// Descriptive error message
func (o GalleryImageStatusResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageStatusResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// The progress of the operation in percentage
func (o GalleryImageStatusResponseOutput) ProgressPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GalleryImageStatusResponse) *float64 { return v.ProgressPercentage }).(pulumi.Float64PtrOutput)
}

// provisioning status of the gallery image
func (o GalleryImageStatusResponseOutput) ProvisioningStatus() GalleryImageStatusProvisioningStatusResponsePtrOutput {
	return o.ApplyT(func(v GalleryImageStatusResponse) *GalleryImageStatusProvisioningStatusResponse {
		return v.ProvisioningStatus
	}).(GalleryImageStatusProvisioningStatusResponsePtrOutput)
}

// Specifies information about the gallery image version that you want to create or update.
type GalleryImageVersion struct {
	// This is the version of the gallery image.
	Name *string `pulumi:"name"`
}

// GalleryImageVersionInput is an input type that accepts GalleryImageVersionArgs and GalleryImageVersionOutput values.
// You can construct a concrete instance of `GalleryImageVersionInput` via:
//
//	GalleryImageVersionArgs{...}
type GalleryImageVersionInput interface {
	pulumi.Input

	ToGalleryImageVersionOutput() GalleryImageVersionOutput
	ToGalleryImageVersionOutputWithContext(context.Context) GalleryImageVersionOutput
}

// Specifies information about the gallery image version that you want to create or update.
type GalleryImageVersionArgs struct {
	// This is the version of the gallery image.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GalleryImageVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersion)(nil)).Elem()
}

func (i GalleryImageVersionArgs) ToGalleryImageVersionOutput() GalleryImageVersionOutput {
	return i.ToGalleryImageVersionOutputWithContext(context.Background())
}

func (i GalleryImageVersionArgs) ToGalleryImageVersionOutputWithContext(ctx context.Context) GalleryImageVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionOutput)
}

func (i GalleryImageVersionArgs) ToGalleryImageVersionPtrOutput() GalleryImageVersionPtrOutput {
	return i.ToGalleryImageVersionPtrOutputWithContext(context.Background())
}

func (i GalleryImageVersionArgs) ToGalleryImageVersionPtrOutputWithContext(ctx context.Context) GalleryImageVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionOutput).ToGalleryImageVersionPtrOutputWithContext(ctx)
}

// GalleryImageVersionPtrInput is an input type that accepts GalleryImageVersionArgs, GalleryImageVersionPtr and GalleryImageVersionPtrOutput values.
// You can construct a concrete instance of `GalleryImageVersionPtrInput` via:
//
//	        GalleryImageVersionArgs{...}
//
//	or:
//
//	        nil
type GalleryImageVersionPtrInput interface {
	pulumi.Input

	ToGalleryImageVersionPtrOutput() GalleryImageVersionPtrOutput
	ToGalleryImageVersionPtrOutputWithContext(context.Context) GalleryImageVersionPtrOutput
}

type galleryImageVersionPtrType GalleryImageVersionArgs

func GalleryImageVersionPtr(v *GalleryImageVersionArgs) GalleryImageVersionPtrInput {
	return (*galleryImageVersionPtrType)(v)
}

func (*galleryImageVersionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersion)(nil)).Elem()
}

func (i *galleryImageVersionPtrType) ToGalleryImageVersionPtrOutput() GalleryImageVersionPtrOutput {
	return i.ToGalleryImageVersionPtrOutputWithContext(context.Background())
}

func (i *galleryImageVersionPtrType) ToGalleryImageVersionPtrOutputWithContext(ctx context.Context) GalleryImageVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageVersionPtrOutput)
}

// Specifies information about the gallery image version that you want to create or update.
type GalleryImageVersionOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersion)(nil)).Elem()
}

func (o GalleryImageVersionOutput) ToGalleryImageVersionOutput() GalleryImageVersionOutput {
	return o
}

func (o GalleryImageVersionOutput) ToGalleryImageVersionOutputWithContext(ctx context.Context) GalleryImageVersionOutput {
	return o
}

func (o GalleryImageVersionOutput) ToGalleryImageVersionPtrOutput() GalleryImageVersionPtrOutput {
	return o.ToGalleryImageVersionPtrOutputWithContext(context.Background())
}

func (o GalleryImageVersionOutput) ToGalleryImageVersionPtrOutputWithContext(ctx context.Context) GalleryImageVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GalleryImageVersion) *GalleryImageVersion {
		return &v
	}).(GalleryImageVersionPtrOutput)
}

// This is the version of the gallery image.
func (o GalleryImageVersionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageVersion) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GalleryImageVersionPtrOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersion)(nil)).Elem()
}

func (o GalleryImageVersionPtrOutput) ToGalleryImageVersionPtrOutput() GalleryImageVersionPtrOutput {
	return o
}

func (o GalleryImageVersionPtrOutput) ToGalleryImageVersionPtrOutputWithContext(ctx context.Context) GalleryImageVersionPtrOutput {
	return o
}

func (o GalleryImageVersionPtrOutput) Elem() GalleryImageVersionOutput {
	return o.ApplyT(func(v *GalleryImageVersion) GalleryImageVersion {
		if v != nil {
			return *v
		}
		var ret GalleryImageVersion
		return ret
	}).(GalleryImageVersionOutput)
}

// This is the version of the gallery image.
func (o GalleryImageVersionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersion) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies information about the gallery image version that you want to create or update.
type GalleryImageVersionResponse struct {
	// This is the version of the gallery image.
	Name *string `pulumi:"name"`
	// This is the storage profile of a Gallery Image Version.
	StorageProfile GalleryImageVersionStorageProfileResponse `pulumi:"storageProfile"`
}

// Specifies information about the gallery image version that you want to create or update.
type GalleryImageVersionResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionResponse)(nil)).Elem()
}

func (o GalleryImageVersionResponseOutput) ToGalleryImageVersionResponseOutput() GalleryImageVersionResponseOutput {
	return o
}

func (o GalleryImageVersionResponseOutput) ToGalleryImageVersionResponseOutputWithContext(ctx context.Context) GalleryImageVersionResponseOutput {
	return o
}

// This is the version of the gallery image.
func (o GalleryImageVersionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageVersionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// This is the storage profile of a Gallery Image Version.
func (o GalleryImageVersionResponseOutput) StorageProfile() GalleryImageVersionStorageProfileResponseOutput {
	return o.ApplyT(func(v GalleryImageVersionResponse) GalleryImageVersionStorageProfileResponse { return v.StorageProfile }).(GalleryImageVersionStorageProfileResponseOutput)
}

type GalleryImageVersionResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionResponse)(nil)).Elem()
}

func (o GalleryImageVersionResponsePtrOutput) ToGalleryImageVersionResponsePtrOutput() GalleryImageVersionResponsePtrOutput {
	return o
}

func (o GalleryImageVersionResponsePtrOutput) ToGalleryImageVersionResponsePtrOutputWithContext(ctx context.Context) GalleryImageVersionResponsePtrOutput {
	return o
}

func (o GalleryImageVersionResponsePtrOutput) Elem() GalleryImageVersionResponseOutput {
	return o.ApplyT(func(v *GalleryImageVersionResponse) GalleryImageVersionResponse {
		if v != nil {
			return *v
		}
		var ret GalleryImageVersionResponse
		return ret
	}).(GalleryImageVersionResponseOutput)
}

// This is the version of the gallery image.
func (o GalleryImageVersionResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// This is the storage profile of a Gallery Image Version.
func (o GalleryImageVersionResponsePtrOutput) StorageProfile() GalleryImageVersionStorageProfileResponsePtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionResponse) *GalleryImageVersionStorageProfileResponse {
		if v == nil {
			return nil
		}
		return &v.StorageProfile
	}).(GalleryImageVersionStorageProfileResponsePtrOutput)
}

// This is the storage profile of a Gallery Image Version.
type GalleryImageVersionStorageProfileResponse struct {
	// This is the OS disk image.
	OsDiskImage *GalleryOSDiskImageResponse `pulumi:"osDiskImage"`
}

// This is the storage profile of a Gallery Image Version.
type GalleryImageVersionStorageProfileResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionStorageProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageVersionStorageProfileResponse)(nil)).Elem()
}

func (o GalleryImageVersionStorageProfileResponseOutput) ToGalleryImageVersionStorageProfileResponseOutput() GalleryImageVersionStorageProfileResponseOutput {
	return o
}

func (o GalleryImageVersionStorageProfileResponseOutput) ToGalleryImageVersionStorageProfileResponseOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfileResponseOutput {
	return o
}

// This is the OS disk image.
func (o GalleryImageVersionStorageProfileResponseOutput) OsDiskImage() GalleryOSDiskImageResponsePtrOutput {
	return o.ApplyT(func(v GalleryImageVersionStorageProfileResponse) *GalleryOSDiskImageResponse { return v.OsDiskImage }).(GalleryOSDiskImageResponsePtrOutput)
}

type GalleryImageVersionStorageProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageVersionStorageProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageVersionStorageProfileResponse)(nil)).Elem()
}

func (o GalleryImageVersionStorageProfileResponsePtrOutput) ToGalleryImageVersionStorageProfileResponsePtrOutput() GalleryImageVersionStorageProfileResponsePtrOutput {
	return o
}

func (o GalleryImageVersionStorageProfileResponsePtrOutput) ToGalleryImageVersionStorageProfileResponsePtrOutputWithContext(ctx context.Context) GalleryImageVersionStorageProfileResponsePtrOutput {
	return o
}

func (o GalleryImageVersionStorageProfileResponsePtrOutput) Elem() GalleryImageVersionStorageProfileResponseOutput {
	return o.ApplyT(func(v *GalleryImageVersionStorageProfileResponse) GalleryImageVersionStorageProfileResponse {
		if v != nil {
			return *v
		}
		var ret GalleryImageVersionStorageProfileResponse
		return ret
	}).(GalleryImageVersionStorageProfileResponseOutput)
}

// This is the OS disk image.
func (o GalleryImageVersionStorageProfileResponsePtrOutput) OsDiskImage() GalleryOSDiskImageResponsePtrOutput {
	return o.ApplyT(func(v *GalleryImageVersionStorageProfileResponse) *GalleryOSDiskImageResponse {
		if v == nil {
			return nil
		}
		return v.OsDiskImage
	}).(GalleryOSDiskImageResponsePtrOutput)
}

// This is the OS disk image.
type GalleryOSDiskImageResponse struct {
	// This property indicates the size of the VHD to be created.
	SizeInMB float64 `pulumi:"sizeInMB"`
}

// This is the OS disk image.
type GalleryOSDiskImageResponseOutput struct{ *pulumi.OutputState }

func (GalleryOSDiskImageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryOSDiskImageResponse)(nil)).Elem()
}

func (o GalleryOSDiskImageResponseOutput) ToGalleryOSDiskImageResponseOutput() GalleryOSDiskImageResponseOutput {
	return o
}

func (o GalleryOSDiskImageResponseOutput) ToGalleryOSDiskImageResponseOutputWithContext(ctx context.Context) GalleryOSDiskImageResponseOutput {
	return o
}

// This property indicates the size of the VHD to be created.
func (o GalleryOSDiskImageResponseOutput) SizeInMB() pulumi.Float64Output {
	return o.ApplyT(func(v GalleryOSDiskImageResponse) float64 { return v.SizeInMB }).(pulumi.Float64Output)
}

type GalleryOSDiskImageResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryOSDiskImageResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryOSDiskImageResponse)(nil)).Elem()
}

func (o GalleryOSDiskImageResponsePtrOutput) ToGalleryOSDiskImageResponsePtrOutput() GalleryOSDiskImageResponsePtrOutput {
	return o
}

func (o GalleryOSDiskImageResponsePtrOutput) ToGalleryOSDiskImageResponsePtrOutputWithContext(ctx context.Context) GalleryOSDiskImageResponsePtrOutput {
	return o
}

func (o GalleryOSDiskImageResponsePtrOutput) Elem() GalleryOSDiskImageResponseOutput {
	return o.ApplyT(func(v *GalleryOSDiskImageResponse) GalleryOSDiskImageResponse {
		if v != nil {
			return *v
		}
		var ret GalleryOSDiskImageResponse
		return ret
	}).(GalleryOSDiskImageResponseOutput)
}

// This property indicates the size of the VHD to be created.
func (o GalleryOSDiskImageResponsePtrOutput) SizeInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GalleryOSDiskImageResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.SizeInMB
	}).(pulumi.Float64PtrOutput)
}

// Defines the status of a guest agent installation.
type GuestAgentInstallStatusResponse struct {
	// The hybrid machine agent full version.
	AgentVersion string `pulumi:"agentVersion"`
	// Details about the error state.
	ErrorDetails []ErrorDetailResponse `pulumi:"errorDetails"`
	// The time of the last status change.
	LastStatusChange string `pulumi:"lastStatusChange"`
	// The installation status of the hybrid machine agent installation.
	Status string `pulumi:"status"`
	// Specifies the VM's unique SMBIOS ID.
	VmUuid string `pulumi:"vmUuid"`
}

// Defines the status of a guest agent installation.
type GuestAgentInstallStatusResponseOutput struct{ *pulumi.OutputState }

func (GuestAgentInstallStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestAgentInstallStatusResponse)(nil)).Elem()
}

func (o GuestAgentInstallStatusResponseOutput) ToGuestAgentInstallStatusResponseOutput() GuestAgentInstallStatusResponseOutput {
	return o
}

func (o GuestAgentInstallStatusResponseOutput) ToGuestAgentInstallStatusResponseOutputWithContext(ctx context.Context) GuestAgentInstallStatusResponseOutput {
	return o
}

// The hybrid machine agent full version.
func (o GuestAgentInstallStatusResponseOutput) AgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GuestAgentInstallStatusResponse) string { return v.AgentVersion }).(pulumi.StringOutput)
}

// Details about the error state.
func (o GuestAgentInstallStatusResponseOutput) ErrorDetails() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v GuestAgentInstallStatusResponse) []ErrorDetailResponse { return v.ErrorDetails }).(ErrorDetailResponseArrayOutput)
}

// The time of the last status change.
func (o GuestAgentInstallStatusResponseOutput) LastStatusChange() pulumi.StringOutput {
	return o.ApplyT(func(v GuestAgentInstallStatusResponse) string { return v.LastStatusChange }).(pulumi.StringOutput)
}

// The installation status of the hybrid machine agent installation.
func (o GuestAgentInstallStatusResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GuestAgentInstallStatusResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Specifies the VM's unique SMBIOS ID.
func (o GuestAgentInstallStatusResponseOutput) VmUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GuestAgentInstallStatusResponse) string { return v.VmUuid }).(pulumi.StringOutput)
}

type GuestAgentInstallStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (GuestAgentInstallStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestAgentInstallStatusResponse)(nil)).Elem()
}

func (o GuestAgentInstallStatusResponsePtrOutput) ToGuestAgentInstallStatusResponsePtrOutput() GuestAgentInstallStatusResponsePtrOutput {
	return o
}

func (o GuestAgentInstallStatusResponsePtrOutput) ToGuestAgentInstallStatusResponsePtrOutputWithContext(ctx context.Context) GuestAgentInstallStatusResponsePtrOutput {
	return o
}

func (o GuestAgentInstallStatusResponsePtrOutput) Elem() GuestAgentInstallStatusResponseOutput {
	return o.ApplyT(func(v *GuestAgentInstallStatusResponse) GuestAgentInstallStatusResponse {
		if v != nil {
			return *v
		}
		var ret GuestAgentInstallStatusResponse
		return ret
	}).(GuestAgentInstallStatusResponseOutput)
}

// The hybrid machine agent full version.
func (o GuestAgentInstallStatusResponsePtrOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestAgentInstallStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AgentVersion
	}).(pulumi.StringPtrOutput)
}

// Details about the error state.
func (o GuestAgentInstallStatusResponsePtrOutput) ErrorDetails() ErrorDetailResponseArrayOutput {
	return o.ApplyT(func(v *GuestAgentInstallStatusResponse) []ErrorDetailResponse {
		if v == nil {
			return nil
		}
		return v.ErrorDetails
	}).(ErrorDetailResponseArrayOutput)
}

// The time of the last status change.
func (o GuestAgentInstallStatusResponsePtrOutput) LastStatusChange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestAgentInstallStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastStatusChange
	}).(pulumi.StringPtrOutput)
}

// The installation status of the hybrid machine agent installation.
func (o GuestAgentInstallStatusResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestAgentInstallStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Specifies the VM's unique SMBIOS ID.
func (o GuestAgentInstallStatusResponsePtrOutput) VmUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestAgentInstallStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmUuid
	}).(pulumi.StringPtrOutput)
}

// Username / Password Credentials to connect to guest.
type GuestCredential struct {
	// The password to connect with the guest.
	Password *string `pulumi:"password"`
	// The username to connect with the guest.
	Username *string `pulumi:"username"`
}

// GuestCredentialInput is an input type that accepts GuestCredentialArgs and GuestCredentialOutput values.
// You can construct a concrete instance of `GuestCredentialInput` via:
//
//	GuestCredentialArgs{...}
type GuestCredentialInput interface {
	pulumi.Input

	ToGuestCredentialOutput() GuestCredentialOutput
	ToGuestCredentialOutputWithContext(context.Context) GuestCredentialOutput
}

// Username / Password Credentials to connect to guest.
type GuestCredentialArgs struct {
	// The password to connect with the guest.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The username to connect with the guest.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GuestCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestCredential)(nil)).Elem()
}

func (i GuestCredentialArgs) ToGuestCredentialOutput() GuestCredentialOutput {
	return i.ToGuestCredentialOutputWithContext(context.Background())
}

func (i GuestCredentialArgs) ToGuestCredentialOutputWithContext(ctx context.Context) GuestCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestCredentialOutput)
}

func (i GuestCredentialArgs) ToGuestCredentialPtrOutput() GuestCredentialPtrOutput {
	return i.ToGuestCredentialPtrOutputWithContext(context.Background())
}

func (i GuestCredentialArgs) ToGuestCredentialPtrOutputWithContext(ctx context.Context) GuestCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestCredentialOutput).ToGuestCredentialPtrOutputWithContext(ctx)
}

// GuestCredentialPtrInput is an input type that accepts GuestCredentialArgs, GuestCredentialPtr and GuestCredentialPtrOutput values.
// You can construct a concrete instance of `GuestCredentialPtrInput` via:
//
//	        GuestCredentialArgs{...}
//
//	or:
//
//	        nil
type GuestCredentialPtrInput interface {
	pulumi.Input

	ToGuestCredentialPtrOutput() GuestCredentialPtrOutput
	ToGuestCredentialPtrOutputWithContext(context.Context) GuestCredentialPtrOutput
}

type guestCredentialPtrType GuestCredentialArgs

func GuestCredentialPtr(v *GuestCredentialArgs) GuestCredentialPtrInput {
	return (*guestCredentialPtrType)(v)
}

func (*guestCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestCredential)(nil)).Elem()
}

func (i *guestCredentialPtrType) ToGuestCredentialPtrOutput() GuestCredentialPtrOutput {
	return i.ToGuestCredentialPtrOutputWithContext(context.Background())
}

func (i *guestCredentialPtrType) ToGuestCredentialPtrOutputWithContext(ctx context.Context) GuestCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestCredentialPtrOutput)
}

// Username / Password Credentials to connect to guest.
type GuestCredentialOutput struct{ *pulumi.OutputState }

func (GuestCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestCredential)(nil)).Elem()
}

func (o GuestCredentialOutput) ToGuestCredentialOutput() GuestCredentialOutput {
	return o
}

func (o GuestCredentialOutput) ToGuestCredentialOutputWithContext(ctx context.Context) GuestCredentialOutput {
	return o
}

func (o GuestCredentialOutput) ToGuestCredentialPtrOutput() GuestCredentialPtrOutput {
	return o.ToGuestCredentialPtrOutputWithContext(context.Background())
}

func (o GuestCredentialOutput) ToGuestCredentialPtrOutputWithContext(ctx context.Context) GuestCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestCredential) *GuestCredential {
		return &v
	}).(GuestCredentialPtrOutput)
}

// The password to connect with the guest.
func (o GuestCredentialOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestCredential) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username to connect with the guest.
func (o GuestCredentialOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestCredential) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GuestCredentialPtrOutput struct{ *pulumi.OutputState }

func (GuestCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestCredential)(nil)).Elem()
}

func (o GuestCredentialPtrOutput) ToGuestCredentialPtrOutput() GuestCredentialPtrOutput {
	return o
}

func (o GuestCredentialPtrOutput) ToGuestCredentialPtrOutputWithContext(ctx context.Context) GuestCredentialPtrOutput {
	return o
}

func (o GuestCredentialPtrOutput) Elem() GuestCredentialOutput {
	return o.ApplyT(func(v *GuestCredential) GuestCredential {
		if v != nil {
			return *v
		}
		var ret GuestCredential
		return ret
	}).(GuestCredentialOutput)
}

// The password to connect with the guest.
func (o GuestCredentialPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestCredential) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The username to connect with the guest.
func (o GuestCredentialPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestCredential) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Username / Password Credentials to connect to guest.
type GuestCredentialResponse struct {
	// The username to connect with the guest.
	Username *string `pulumi:"username"`
}

// Username / Password Credentials to connect to guest.
type GuestCredentialResponseOutput struct{ *pulumi.OutputState }

func (GuestCredentialResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestCredentialResponse)(nil)).Elem()
}

func (o GuestCredentialResponseOutput) ToGuestCredentialResponseOutput() GuestCredentialResponseOutput {
	return o
}

func (o GuestCredentialResponseOutput) ToGuestCredentialResponseOutputWithContext(ctx context.Context) GuestCredentialResponseOutput {
	return o
}

// The username to connect with the guest.
func (o GuestCredentialResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestCredentialResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GuestCredentialResponsePtrOutput struct{ *pulumi.OutputState }

func (GuestCredentialResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestCredentialResponse)(nil)).Elem()
}

func (o GuestCredentialResponsePtrOutput) ToGuestCredentialResponsePtrOutput() GuestCredentialResponsePtrOutput {
	return o
}

func (o GuestCredentialResponsePtrOutput) ToGuestCredentialResponsePtrOutputWithContext(ctx context.Context) GuestCredentialResponsePtrOutput {
	return o
}

func (o GuestCredentialResponsePtrOutput) Elem() GuestCredentialResponseOutput {
	return o.ApplyT(func(v *GuestCredentialResponse) GuestCredentialResponse {
		if v != nil {
			return *v
		}
		var ret GuestCredentialResponse
		return ret
	}).(GuestCredentialResponseOutput)
}

// The username to connect with the guest.
func (o GuestCredentialResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestCredentialResponse) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// HTTP Proxy configuration for the VM.
type HttpProxyConfiguration struct {
	// The HTTP proxy server endpoint to use.
	HttpProxy *string `pulumi:"httpProxy"`
	// The HTTPS proxy server endpoint to use.
	HttpsProxy *string `pulumi:"httpsProxy"`
	// The endpoints that should not go through proxy.
	NoProxy []string `pulumi:"noProxy"`
	// Alternative CA cert to use for connecting to proxy servers.
	TrustedCa *string `pulumi:"trustedCa"`
}

// HttpProxyConfigurationInput is an input type that accepts HttpProxyConfigurationArgs and HttpProxyConfigurationOutput values.
// You can construct a concrete instance of `HttpProxyConfigurationInput` via:
//
//	HttpProxyConfigurationArgs{...}
type HttpProxyConfigurationInput interface {
	pulumi.Input

	ToHttpProxyConfigurationOutput() HttpProxyConfigurationOutput
	ToHttpProxyConfigurationOutputWithContext(context.Context) HttpProxyConfigurationOutput
}

// HTTP Proxy configuration for the VM.
type HttpProxyConfigurationArgs struct {
	// The HTTP proxy server endpoint to use.
	HttpProxy pulumi.StringPtrInput `pulumi:"httpProxy"`
	// The HTTPS proxy server endpoint to use.
	HttpsProxy pulumi.StringPtrInput `pulumi:"httpsProxy"`
	// The endpoints that should not go through proxy.
	NoProxy pulumi.StringArrayInput `pulumi:"noProxy"`
	// Alternative CA cert to use for connecting to proxy servers.
	TrustedCa pulumi.StringPtrInput `pulumi:"trustedCa"`
}

func (HttpProxyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpProxyConfiguration)(nil)).Elem()
}

func (i HttpProxyConfigurationArgs) ToHttpProxyConfigurationOutput() HttpProxyConfigurationOutput {
	return i.ToHttpProxyConfigurationOutputWithContext(context.Background())
}

func (i HttpProxyConfigurationArgs) ToHttpProxyConfigurationOutputWithContext(ctx context.Context) HttpProxyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpProxyConfigurationOutput)
}

func (i HttpProxyConfigurationArgs) ToHttpProxyConfigurationPtrOutput() HttpProxyConfigurationPtrOutput {
	return i.ToHttpProxyConfigurationPtrOutputWithContext(context.Background())
}

func (i HttpProxyConfigurationArgs) ToHttpProxyConfigurationPtrOutputWithContext(ctx context.Context) HttpProxyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpProxyConfigurationOutput).ToHttpProxyConfigurationPtrOutputWithContext(ctx)
}

// HttpProxyConfigurationPtrInput is an input type that accepts HttpProxyConfigurationArgs, HttpProxyConfigurationPtr and HttpProxyConfigurationPtrOutput values.
// You can construct a concrete instance of `HttpProxyConfigurationPtrInput` via:
//
//	        HttpProxyConfigurationArgs{...}
//
//	or:
//
//	        nil
type HttpProxyConfigurationPtrInput interface {
	pulumi.Input

	ToHttpProxyConfigurationPtrOutput() HttpProxyConfigurationPtrOutput
	ToHttpProxyConfigurationPtrOutputWithContext(context.Context) HttpProxyConfigurationPtrOutput
}

type httpProxyConfigurationPtrType HttpProxyConfigurationArgs

func HttpProxyConfigurationPtr(v *HttpProxyConfigurationArgs) HttpProxyConfigurationPtrInput {
	return (*httpProxyConfigurationPtrType)(v)
}

func (*httpProxyConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpProxyConfiguration)(nil)).Elem()
}

func (i *httpProxyConfigurationPtrType) ToHttpProxyConfigurationPtrOutput() HttpProxyConfigurationPtrOutput {
	return i.ToHttpProxyConfigurationPtrOutputWithContext(context.Background())
}

func (i *httpProxyConfigurationPtrType) ToHttpProxyConfigurationPtrOutputWithContext(ctx context.Context) HttpProxyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpProxyConfigurationPtrOutput)
}

// HTTP Proxy configuration for the VM.
type HttpProxyConfigurationOutput struct{ *pulumi.OutputState }

func (HttpProxyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpProxyConfiguration)(nil)).Elem()
}

func (o HttpProxyConfigurationOutput) ToHttpProxyConfigurationOutput() HttpProxyConfigurationOutput {
	return o
}

func (o HttpProxyConfigurationOutput) ToHttpProxyConfigurationOutputWithContext(ctx context.Context) HttpProxyConfigurationOutput {
	return o
}

func (o HttpProxyConfigurationOutput) ToHttpProxyConfigurationPtrOutput() HttpProxyConfigurationPtrOutput {
	return o.ToHttpProxyConfigurationPtrOutputWithContext(context.Background())
}

func (o HttpProxyConfigurationOutput) ToHttpProxyConfigurationPtrOutputWithContext(ctx context.Context) HttpProxyConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HttpProxyConfiguration) *HttpProxyConfiguration {
		return &v
	}).(HttpProxyConfigurationPtrOutput)
}

// The HTTP proxy server endpoint to use.
func (o HttpProxyConfigurationOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpProxyConfiguration) *string { return v.HttpProxy }).(pulumi.StringPtrOutput)
}

// The HTTPS proxy server endpoint to use.
func (o HttpProxyConfigurationOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpProxyConfiguration) *string { return v.HttpsProxy }).(pulumi.StringPtrOutput)
}

// The endpoints that should not go through proxy.
func (o HttpProxyConfigurationOutput) NoProxy() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HttpProxyConfiguration) []string { return v.NoProxy }).(pulumi.StringArrayOutput)
}

// Alternative CA cert to use for connecting to proxy servers.
func (o HttpProxyConfigurationOutput) TrustedCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpProxyConfiguration) *string { return v.TrustedCa }).(pulumi.StringPtrOutput)
}

type HttpProxyConfigurationPtrOutput struct{ *pulumi.OutputState }

func (HttpProxyConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpProxyConfiguration)(nil)).Elem()
}

func (o HttpProxyConfigurationPtrOutput) ToHttpProxyConfigurationPtrOutput() HttpProxyConfigurationPtrOutput {
	return o
}

func (o HttpProxyConfigurationPtrOutput) ToHttpProxyConfigurationPtrOutputWithContext(ctx context.Context) HttpProxyConfigurationPtrOutput {
	return o
}

func (o HttpProxyConfigurationPtrOutput) Elem() HttpProxyConfigurationOutput {
	return o.ApplyT(func(v *HttpProxyConfiguration) HttpProxyConfiguration {
		if v != nil {
			return *v
		}
		var ret HttpProxyConfiguration
		return ret
	}).(HttpProxyConfigurationOutput)
}

// The HTTP proxy server endpoint to use.
func (o HttpProxyConfigurationPtrOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpProxyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.HttpProxy
	}).(pulumi.StringPtrOutput)
}

// The HTTPS proxy server endpoint to use.
func (o HttpProxyConfigurationPtrOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpProxyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.HttpsProxy
	}).(pulumi.StringPtrOutput)
}

// The endpoints that should not go through proxy.
func (o HttpProxyConfigurationPtrOutput) NoProxy() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HttpProxyConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.NoProxy
	}).(pulumi.StringArrayOutput)
}

// Alternative CA cert to use for connecting to proxy servers.
func (o HttpProxyConfigurationPtrOutput) TrustedCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpProxyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TrustedCa
	}).(pulumi.StringPtrOutput)
}

// HTTP Proxy configuration for the VM.
type HttpProxyConfigurationResponse struct {
	// The HTTP proxy server endpoint to use.
	HttpProxy *string `pulumi:"httpProxy"`
	// The HTTPS proxy server endpoint to use.
	HttpsProxy *string `pulumi:"httpsProxy"`
	// The endpoints that should not go through proxy.
	NoProxy []string `pulumi:"noProxy"`
	// Alternative CA cert to use for connecting to proxy servers.
	TrustedCa *string `pulumi:"trustedCa"`
}

// HTTP Proxy configuration for the VM.
type HttpProxyConfigurationResponseOutput struct{ *pulumi.OutputState }

func (HttpProxyConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpProxyConfigurationResponse)(nil)).Elem()
}

func (o HttpProxyConfigurationResponseOutput) ToHttpProxyConfigurationResponseOutput() HttpProxyConfigurationResponseOutput {
	return o
}

func (o HttpProxyConfigurationResponseOutput) ToHttpProxyConfigurationResponseOutputWithContext(ctx context.Context) HttpProxyConfigurationResponseOutput {
	return o
}

// The HTTP proxy server endpoint to use.
func (o HttpProxyConfigurationResponseOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpProxyConfigurationResponse) *string { return v.HttpProxy }).(pulumi.StringPtrOutput)
}

// The HTTPS proxy server endpoint to use.
func (o HttpProxyConfigurationResponseOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpProxyConfigurationResponse) *string { return v.HttpsProxy }).(pulumi.StringPtrOutput)
}

// The endpoints that should not go through proxy.
func (o HttpProxyConfigurationResponseOutput) NoProxy() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HttpProxyConfigurationResponse) []string { return v.NoProxy }).(pulumi.StringArrayOutput)
}

// Alternative CA cert to use for connecting to proxy servers.
func (o HttpProxyConfigurationResponseOutput) TrustedCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpProxyConfigurationResponse) *string { return v.TrustedCa }).(pulumi.StringPtrOutput)
}

type HttpProxyConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (HttpProxyConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpProxyConfigurationResponse)(nil)).Elem()
}

func (o HttpProxyConfigurationResponsePtrOutput) ToHttpProxyConfigurationResponsePtrOutput() HttpProxyConfigurationResponsePtrOutput {
	return o
}

func (o HttpProxyConfigurationResponsePtrOutput) ToHttpProxyConfigurationResponsePtrOutputWithContext(ctx context.Context) HttpProxyConfigurationResponsePtrOutput {
	return o
}

func (o HttpProxyConfigurationResponsePtrOutput) Elem() HttpProxyConfigurationResponseOutput {
	return o.ApplyT(func(v *HttpProxyConfigurationResponse) HttpProxyConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret HttpProxyConfigurationResponse
		return ret
	}).(HttpProxyConfigurationResponseOutput)
}

// The HTTP proxy server endpoint to use.
func (o HttpProxyConfigurationResponsePtrOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpProxyConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.HttpProxy
	}).(pulumi.StringPtrOutput)
}

// The HTTPS proxy server endpoint to use.
func (o HttpProxyConfigurationResponsePtrOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpProxyConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.HttpsProxy
	}).(pulumi.StringPtrOutput)
}

// The endpoints that should not go through proxy.
func (o HttpProxyConfigurationResponsePtrOutput) NoProxy() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HttpProxyConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.NoProxy
	}).(pulumi.StringArrayOutput)
}

// Alternative CA cert to use for connecting to proxy servers.
func (o HttpProxyConfigurationResponsePtrOutput) TrustedCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpProxyConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrustedCa
	}).(pulumi.StringPtrOutput)
}

// InterfaceIPConfiguration IPConfiguration in a network interface.
type IPConfiguration struct {
	// Name - The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// InterfaceIPConfigurationPropertiesFormat properties of IP configuration.
	Properties *IPConfigurationProperties `pulumi:"properties"`
}

// IPConfigurationInput is an input type that accepts IPConfigurationArgs and IPConfigurationOutput values.
// You can construct a concrete instance of `IPConfigurationInput` via:
//
//	IPConfigurationArgs{...}
type IPConfigurationInput interface {
	pulumi.Input

	ToIPConfigurationOutput() IPConfigurationOutput
	ToIPConfigurationOutputWithContext(context.Context) IPConfigurationOutput
}

// InterfaceIPConfiguration IPConfiguration in a network interface.
type IPConfigurationArgs struct {
	// Name - The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// InterfaceIPConfigurationPropertiesFormat properties of IP configuration.
	Properties IPConfigurationPropertiesPtrInput `pulumi:"properties"`
}

func (IPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfiguration)(nil)).Elem()
}

func (i IPConfigurationArgs) ToIPConfigurationOutput() IPConfigurationOutput {
	return i.ToIPConfigurationOutputWithContext(context.Background())
}

func (i IPConfigurationArgs) ToIPConfigurationOutputWithContext(ctx context.Context) IPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationOutput)
}

// IPConfigurationArrayInput is an input type that accepts IPConfigurationArray and IPConfigurationArrayOutput values.
// You can construct a concrete instance of `IPConfigurationArrayInput` via:
//
//	IPConfigurationArray{ IPConfigurationArgs{...} }
type IPConfigurationArrayInput interface {
	pulumi.Input

	ToIPConfigurationArrayOutput() IPConfigurationArrayOutput
	ToIPConfigurationArrayOutputWithContext(context.Context) IPConfigurationArrayOutput
}

type IPConfigurationArray []IPConfigurationInput

func (IPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfiguration)(nil)).Elem()
}

func (i IPConfigurationArray) ToIPConfigurationArrayOutput() IPConfigurationArrayOutput {
	return i.ToIPConfigurationArrayOutputWithContext(context.Background())
}

func (i IPConfigurationArray) ToIPConfigurationArrayOutputWithContext(ctx context.Context) IPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationArrayOutput)
}

// InterfaceIPConfiguration IPConfiguration in a network interface.
type IPConfigurationOutput struct{ *pulumi.OutputState }

func (IPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfiguration)(nil)).Elem()
}

func (o IPConfigurationOutput) ToIPConfigurationOutput() IPConfigurationOutput {
	return o
}

func (o IPConfigurationOutput) ToIPConfigurationOutputWithContext(ctx context.Context) IPConfigurationOutput {
	return o
}

// Name - The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// InterfaceIPConfigurationPropertiesFormat properties of IP configuration.
func (o IPConfigurationOutput) Properties() IPConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v IPConfiguration) *IPConfigurationProperties { return v.Properties }).(IPConfigurationPropertiesPtrOutput)
}

type IPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfiguration)(nil)).Elem()
}

func (o IPConfigurationArrayOutput) ToIPConfigurationArrayOutput() IPConfigurationArrayOutput {
	return o
}

func (o IPConfigurationArrayOutput) ToIPConfigurationArrayOutputWithContext(ctx context.Context) IPConfigurationArrayOutput {
	return o
}

func (o IPConfigurationArrayOutput) Index(i pulumi.IntInput) IPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfiguration {
		return vs[0].([]IPConfiguration)[vs[1].(int)]
	}).(IPConfigurationOutput)
}

// InterfaceIPConfigurationPropertiesFormat properties of IP configuration.
type IPConfigurationProperties struct {
	// PrivateIPAddress - Private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Subnet - Name of Subnet bound to the IP configuration.
	Subnet *LogicalNetworkArmReference `pulumi:"subnet"`
}

// IPConfigurationPropertiesInput is an input type that accepts IPConfigurationPropertiesArgs and IPConfigurationPropertiesOutput values.
// You can construct a concrete instance of `IPConfigurationPropertiesInput` via:
//
//	IPConfigurationPropertiesArgs{...}
type IPConfigurationPropertiesInput interface {
	pulumi.Input

	ToIPConfigurationPropertiesOutput() IPConfigurationPropertiesOutput
	ToIPConfigurationPropertiesOutputWithContext(context.Context) IPConfigurationPropertiesOutput
}

// InterfaceIPConfigurationPropertiesFormat properties of IP configuration.
type IPConfigurationPropertiesArgs struct {
	// PrivateIPAddress - Private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Subnet - Name of Subnet bound to the IP configuration.
	Subnet LogicalNetworkArmReferencePtrInput `pulumi:"subnet"`
}

func (IPConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProperties)(nil)).Elem()
}

func (i IPConfigurationPropertiesArgs) ToIPConfigurationPropertiesOutput() IPConfigurationPropertiesOutput {
	return i.ToIPConfigurationPropertiesOutputWithContext(context.Background())
}

func (i IPConfigurationPropertiesArgs) ToIPConfigurationPropertiesOutputWithContext(ctx context.Context) IPConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationPropertiesOutput)
}

func (i IPConfigurationPropertiesArgs) ToIPConfigurationPropertiesPtrOutput() IPConfigurationPropertiesPtrOutput {
	return i.ToIPConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i IPConfigurationPropertiesArgs) ToIPConfigurationPropertiesPtrOutputWithContext(ctx context.Context) IPConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationPropertiesOutput).ToIPConfigurationPropertiesPtrOutputWithContext(ctx)
}

// IPConfigurationPropertiesPtrInput is an input type that accepts IPConfigurationPropertiesArgs, IPConfigurationPropertiesPtr and IPConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `IPConfigurationPropertiesPtrInput` via:
//
//	        IPConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type IPConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToIPConfigurationPropertiesPtrOutput() IPConfigurationPropertiesPtrOutput
	ToIPConfigurationPropertiesPtrOutputWithContext(context.Context) IPConfigurationPropertiesPtrOutput
}

type ipconfigurationPropertiesPtrType IPConfigurationPropertiesArgs

func IPConfigurationPropertiesPtr(v *IPConfigurationPropertiesArgs) IPConfigurationPropertiesPtrInput {
	return (*ipconfigurationPropertiesPtrType)(v)
}

func (*ipconfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationProperties)(nil)).Elem()
}

func (i *ipconfigurationPropertiesPtrType) ToIPConfigurationPropertiesPtrOutput() IPConfigurationPropertiesPtrOutput {
	return i.ToIPConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *ipconfigurationPropertiesPtrType) ToIPConfigurationPropertiesPtrOutputWithContext(ctx context.Context) IPConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationPropertiesPtrOutput)
}

// InterfaceIPConfigurationPropertiesFormat properties of IP configuration.
type IPConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (IPConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProperties)(nil)).Elem()
}

func (o IPConfigurationPropertiesOutput) ToIPConfigurationPropertiesOutput() IPConfigurationPropertiesOutput {
	return o
}

func (o IPConfigurationPropertiesOutput) ToIPConfigurationPropertiesOutputWithContext(ctx context.Context) IPConfigurationPropertiesOutput {
	return o
}

func (o IPConfigurationPropertiesOutput) ToIPConfigurationPropertiesPtrOutput() IPConfigurationPropertiesPtrOutput {
	return o.ToIPConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o IPConfigurationPropertiesOutput) ToIPConfigurationPropertiesPtrOutputWithContext(ctx context.Context) IPConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IPConfigurationProperties) *IPConfigurationProperties {
		return &v
	}).(IPConfigurationPropertiesPtrOutput)
}

// PrivateIPAddress - Private IP address of the IP configuration.
func (o IPConfigurationPropertiesOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProperties) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Subnet - Name of Subnet bound to the IP configuration.
func (o IPConfigurationPropertiesOutput) Subnet() LogicalNetworkArmReferencePtrOutput {
	return o.ApplyT(func(v IPConfigurationProperties) *LogicalNetworkArmReference { return v.Subnet }).(LogicalNetworkArmReferencePtrOutput)
}

type IPConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IPConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationProperties)(nil)).Elem()
}

func (o IPConfigurationPropertiesPtrOutput) ToIPConfigurationPropertiesPtrOutput() IPConfigurationPropertiesPtrOutput {
	return o
}

func (o IPConfigurationPropertiesPtrOutput) ToIPConfigurationPropertiesPtrOutputWithContext(ctx context.Context) IPConfigurationPropertiesPtrOutput {
	return o
}

func (o IPConfigurationPropertiesPtrOutput) Elem() IPConfigurationPropertiesOutput {
	return o.ApplyT(func(v *IPConfigurationProperties) IPConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret IPConfigurationProperties
		return ret
	}).(IPConfigurationPropertiesOutput)
}

// PrivateIPAddress - Private IP address of the IP configuration.
func (o IPConfigurationPropertiesPtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Subnet - Name of Subnet bound to the IP configuration.
func (o IPConfigurationPropertiesPtrOutput) Subnet() LogicalNetworkArmReferencePtrOutput {
	return o.ApplyT(func(v *IPConfigurationProperties) *LogicalNetworkArmReference {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(LogicalNetworkArmReferencePtrOutput)
}

// InterfaceIPConfigurationPropertiesFormat properties of IP configuration.
type IPConfigurationPropertiesResponse struct {
	// Gateway for network interface
	Gateway string `pulumi:"gateway"`
	// prefixLength for network interface
	PrefixLength string `pulumi:"prefixLength"`
	// PrivateIPAddress - Private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Subnet - Name of Subnet bound to the IP configuration.
	Subnet *LogicalNetworkArmReferenceResponse `pulumi:"subnet"`
}

// InterfaceIPConfigurationPropertiesFormat properties of IP configuration.
type IPConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationPropertiesResponse)(nil)).Elem()
}

func (o IPConfigurationPropertiesResponseOutput) ToIPConfigurationPropertiesResponseOutput() IPConfigurationPropertiesResponseOutput {
	return o
}

func (o IPConfigurationPropertiesResponseOutput) ToIPConfigurationPropertiesResponseOutputWithContext(ctx context.Context) IPConfigurationPropertiesResponseOutput {
	return o
}

// Gateway for network interface
func (o IPConfigurationPropertiesResponseOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationPropertiesResponse) string { return v.Gateway }).(pulumi.StringOutput)
}

// prefixLength for network interface
func (o IPConfigurationPropertiesResponseOutput) PrefixLength() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationPropertiesResponse) string { return v.PrefixLength }).(pulumi.StringOutput)
}

// PrivateIPAddress - Private IP address of the IP configuration.
func (o IPConfigurationPropertiesResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationPropertiesResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Subnet - Name of Subnet bound to the IP configuration.
func (o IPConfigurationPropertiesResponseOutput) Subnet() LogicalNetworkArmReferenceResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationPropertiesResponse) *LogicalNetworkArmReferenceResponse { return v.Subnet }).(LogicalNetworkArmReferenceResponsePtrOutput)
}

type IPConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IPConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationPropertiesResponse)(nil)).Elem()
}

func (o IPConfigurationPropertiesResponsePtrOutput) ToIPConfigurationPropertiesResponsePtrOutput() IPConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o IPConfigurationPropertiesResponsePtrOutput) ToIPConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) IPConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o IPConfigurationPropertiesResponsePtrOutput) Elem() IPConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesResponse) IPConfigurationPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret IPConfigurationPropertiesResponse
		return ret
	}).(IPConfigurationPropertiesResponseOutput)
}

// Gateway for network interface
func (o IPConfigurationPropertiesResponsePtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Gateway
	}).(pulumi.StringPtrOutput)
}

// prefixLength for network interface
func (o IPConfigurationPropertiesResponsePtrOutput) PrefixLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrefixLength
	}).(pulumi.StringPtrOutput)
}

// PrivateIPAddress - Private IP address of the IP configuration.
func (o IPConfigurationPropertiesResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Subnet - Name of Subnet bound to the IP configuration.
func (o IPConfigurationPropertiesResponsePtrOutput) Subnet() LogicalNetworkArmReferenceResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationPropertiesResponse) *LogicalNetworkArmReferenceResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(LogicalNetworkArmReferenceResponsePtrOutput)
}

// InterfaceIPConfiguration IPConfiguration in a network interface.
type IPConfigurationResponse struct {
	// Name - The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// InterfaceIPConfigurationPropertiesFormat properties of IP configuration.
	Properties *IPConfigurationPropertiesResponse `pulumi:"properties"`
}

// InterfaceIPConfiguration IPConfiguration in a network interface.
type IPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponseOutput() IPConfigurationResponseOutput {
	return o
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponseOutputWithContext(ctx context.Context) IPConfigurationResponseOutput {
	return o
}

// Name - The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// InterfaceIPConfigurationPropertiesFormat properties of IP configuration.
func (o IPConfigurationResponseOutput) Properties() IPConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *IPConfigurationPropertiesResponse { return v.Properties }).(IPConfigurationPropertiesResponsePtrOutput)
}

type IPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponseArrayOutput) ToIPConfigurationResponseArrayOutput() IPConfigurationResponseArrayOutput {
	return o
}

func (o IPConfigurationResponseArrayOutput) ToIPConfigurationResponseArrayOutputWithContext(ctx context.Context) IPConfigurationResponseArrayOutput {
	return o
}

func (o IPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) IPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationResponse {
		return vs[0].([]IPConfigurationResponse)[vs[1].(int)]
	}).(IPConfigurationResponseOutput)
}

// Describes IPPool
type IPPool struct {
	// End of the IP address pool
	End *string `pulumi:"end"`
	// Type of the IP Pool [vm, vippool]
	IpPoolType *string `pulumi:"ipPoolType"`
	// Name of the IP-Pool
	Name *string `pulumi:"name"`
	// Start of the IP address pool
	Start *string `pulumi:"start"`
}

// IPPoolInput is an input type that accepts IPPoolArgs and IPPoolOutput values.
// You can construct a concrete instance of `IPPoolInput` via:
//
//	IPPoolArgs{...}
type IPPoolInput interface {
	pulumi.Input

	ToIPPoolOutput() IPPoolOutput
	ToIPPoolOutputWithContext(context.Context) IPPoolOutput
}

// Describes IPPool
type IPPoolArgs struct {
	// End of the IP address pool
	End pulumi.StringPtrInput `pulumi:"end"`
	// Type of the IP Pool [vm, vippool]
	IpPoolType pulumi.StringPtrInput `pulumi:"ipPoolType"`
	// Name of the IP-Pool
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Start of the IP address pool
	Start pulumi.StringPtrInput `pulumi:"start"`
}

func (IPPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPPool)(nil)).Elem()
}

func (i IPPoolArgs) ToIPPoolOutput() IPPoolOutput {
	return i.ToIPPoolOutputWithContext(context.Background())
}

func (i IPPoolArgs) ToIPPoolOutputWithContext(ctx context.Context) IPPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPPoolOutput)
}

// IPPoolArrayInput is an input type that accepts IPPoolArray and IPPoolArrayOutput values.
// You can construct a concrete instance of `IPPoolArrayInput` via:
//
//	IPPoolArray{ IPPoolArgs{...} }
type IPPoolArrayInput interface {
	pulumi.Input

	ToIPPoolArrayOutput() IPPoolArrayOutput
	ToIPPoolArrayOutputWithContext(context.Context) IPPoolArrayOutput
}

type IPPoolArray []IPPoolInput

func (IPPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPPool)(nil)).Elem()
}

func (i IPPoolArray) ToIPPoolArrayOutput() IPPoolArrayOutput {
	return i.ToIPPoolArrayOutputWithContext(context.Background())
}

func (i IPPoolArray) ToIPPoolArrayOutputWithContext(ctx context.Context) IPPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPPoolArrayOutput)
}

// Describes IPPool
type IPPoolOutput struct{ *pulumi.OutputState }

func (IPPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPPool)(nil)).Elem()
}

func (o IPPoolOutput) ToIPPoolOutput() IPPoolOutput {
	return o
}

func (o IPPoolOutput) ToIPPoolOutputWithContext(ctx context.Context) IPPoolOutput {
	return o
}

// End of the IP address pool
func (o IPPoolOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPPool) *string { return v.End }).(pulumi.StringPtrOutput)
}

// Type of the IP Pool [vm, vippool]
func (o IPPoolOutput) IpPoolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPPool) *string { return v.IpPoolType }).(pulumi.StringPtrOutput)
}

// Name of the IP-Pool
func (o IPPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Start of the IP address pool
func (o IPPoolOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPPool) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type IPPoolArrayOutput struct{ *pulumi.OutputState }

func (IPPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPPool)(nil)).Elem()
}

func (o IPPoolArrayOutput) ToIPPoolArrayOutput() IPPoolArrayOutput {
	return o
}

func (o IPPoolArrayOutput) ToIPPoolArrayOutputWithContext(ctx context.Context) IPPoolArrayOutput {
	return o
}

func (o IPPoolArrayOutput) Index(i pulumi.IntInput) IPPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPPool {
		return vs[0].([]IPPool)[vs[1].(int)]
	}).(IPPoolOutput)
}

// IP Pool info
type IPPoolInfoResponse struct {
	// Number of IP addresses available in the IP Pool
	Available string `pulumi:"available"`
	// Number of IP addresses allocated from the IP Pool
	Used string `pulumi:"used"`
}

// IP Pool info
type IPPoolInfoResponseOutput struct{ *pulumi.OutputState }

func (IPPoolInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPPoolInfoResponse)(nil)).Elem()
}

func (o IPPoolInfoResponseOutput) ToIPPoolInfoResponseOutput() IPPoolInfoResponseOutput {
	return o
}

func (o IPPoolInfoResponseOutput) ToIPPoolInfoResponseOutputWithContext(ctx context.Context) IPPoolInfoResponseOutput {
	return o
}

// Number of IP addresses available in the IP Pool
func (o IPPoolInfoResponseOutput) Available() pulumi.StringOutput {
	return o.ApplyT(func(v IPPoolInfoResponse) string { return v.Available }).(pulumi.StringOutput)
}

// Number of IP addresses allocated from the IP Pool
func (o IPPoolInfoResponseOutput) Used() pulumi.StringOutput {
	return o.ApplyT(func(v IPPoolInfoResponse) string { return v.Used }).(pulumi.StringOutput)
}

type IPPoolInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (IPPoolInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPPoolInfoResponse)(nil)).Elem()
}

func (o IPPoolInfoResponsePtrOutput) ToIPPoolInfoResponsePtrOutput() IPPoolInfoResponsePtrOutput {
	return o
}

func (o IPPoolInfoResponsePtrOutput) ToIPPoolInfoResponsePtrOutputWithContext(ctx context.Context) IPPoolInfoResponsePtrOutput {
	return o
}

func (o IPPoolInfoResponsePtrOutput) Elem() IPPoolInfoResponseOutput {
	return o.ApplyT(func(v *IPPoolInfoResponse) IPPoolInfoResponse {
		if v != nil {
			return *v
		}
		var ret IPPoolInfoResponse
		return ret
	}).(IPPoolInfoResponseOutput)
}

// Number of IP addresses available in the IP Pool
func (o IPPoolInfoResponsePtrOutput) Available() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPPoolInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Available
	}).(pulumi.StringPtrOutput)
}

// Number of IP addresses allocated from the IP Pool
func (o IPPoolInfoResponsePtrOutput) Used() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPPoolInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Used
	}).(pulumi.StringPtrOutput)
}

// Describes IPPool
type IPPoolResponse struct {
	// End of the IP address pool
	End *string `pulumi:"end"`
	// IPPool info
	Info *IPPoolInfoResponse `pulumi:"info"`
	// Type of the IP Pool [vm, vippool]
	IpPoolType *string `pulumi:"ipPoolType"`
	// Name of the IP-Pool
	Name *string `pulumi:"name"`
	// Start of the IP address pool
	Start *string `pulumi:"start"`
}

// Describes IPPool
type IPPoolResponseOutput struct{ *pulumi.OutputState }

func (IPPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPPoolResponse)(nil)).Elem()
}

func (o IPPoolResponseOutput) ToIPPoolResponseOutput() IPPoolResponseOutput {
	return o
}

func (o IPPoolResponseOutput) ToIPPoolResponseOutputWithContext(ctx context.Context) IPPoolResponseOutput {
	return o
}

// End of the IP address pool
func (o IPPoolResponseOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPPoolResponse) *string { return v.End }).(pulumi.StringPtrOutput)
}

// IPPool info
func (o IPPoolResponseOutput) Info() IPPoolInfoResponsePtrOutput {
	return o.ApplyT(func(v IPPoolResponse) *IPPoolInfoResponse { return v.Info }).(IPPoolInfoResponsePtrOutput)
}

// Type of the IP Pool [vm, vippool]
func (o IPPoolResponseOutput) IpPoolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPPoolResponse) *string { return v.IpPoolType }).(pulumi.StringPtrOutput)
}

// Name of the IP-Pool
func (o IPPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Start of the IP address pool
func (o IPPoolResponseOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPPoolResponse) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type IPPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (IPPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPPoolResponse)(nil)).Elem()
}

func (o IPPoolResponseArrayOutput) ToIPPoolResponseArrayOutput() IPPoolResponseArrayOutput {
	return o
}

func (o IPPoolResponseArrayOutput) ToIPPoolResponseArrayOutputWithContext(ctx context.Context) IPPoolResponseArrayOutput {
	return o
}

func (o IPPoolResponseArrayOutput) Index(i pulumi.IntInput) IPPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPPoolResponse {
		return vs[0].([]IPPoolResponse)[vs[1].(int)]
	}).(IPPoolResponseOutput)
}

// The ARM ID for a Gallery Image.
type ImageArmReference struct {
	// The ARM ID for an image resource used by the virtual machine instance.
	Id *string `pulumi:"id"`
}

// ImageArmReferenceInput is an input type that accepts ImageArmReferenceArgs and ImageArmReferenceOutput values.
// You can construct a concrete instance of `ImageArmReferenceInput` via:
//
//	ImageArmReferenceArgs{...}
type ImageArmReferenceInput interface {
	pulumi.Input

	ToImageArmReferenceOutput() ImageArmReferenceOutput
	ToImageArmReferenceOutputWithContext(context.Context) ImageArmReferenceOutput
}

// The ARM ID for a Gallery Image.
type ImageArmReferenceArgs struct {
	// The ARM ID for an image resource used by the virtual machine instance.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ImageArmReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageArmReference)(nil)).Elem()
}

func (i ImageArmReferenceArgs) ToImageArmReferenceOutput() ImageArmReferenceOutput {
	return i.ToImageArmReferenceOutputWithContext(context.Background())
}

func (i ImageArmReferenceArgs) ToImageArmReferenceOutputWithContext(ctx context.Context) ImageArmReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageArmReferenceOutput)
}

func (i ImageArmReferenceArgs) ToImageArmReferencePtrOutput() ImageArmReferencePtrOutput {
	return i.ToImageArmReferencePtrOutputWithContext(context.Background())
}

func (i ImageArmReferenceArgs) ToImageArmReferencePtrOutputWithContext(ctx context.Context) ImageArmReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageArmReferenceOutput).ToImageArmReferencePtrOutputWithContext(ctx)
}

// ImageArmReferencePtrInput is an input type that accepts ImageArmReferenceArgs, ImageArmReferencePtr and ImageArmReferencePtrOutput values.
// You can construct a concrete instance of `ImageArmReferencePtrInput` via:
//
//	        ImageArmReferenceArgs{...}
//
//	or:
//
//	        nil
type ImageArmReferencePtrInput interface {
	pulumi.Input

	ToImageArmReferencePtrOutput() ImageArmReferencePtrOutput
	ToImageArmReferencePtrOutputWithContext(context.Context) ImageArmReferencePtrOutput
}

type imageArmReferencePtrType ImageArmReferenceArgs

func ImageArmReferencePtr(v *ImageArmReferenceArgs) ImageArmReferencePtrInput {
	return (*imageArmReferencePtrType)(v)
}

func (*imageArmReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageArmReference)(nil)).Elem()
}

func (i *imageArmReferencePtrType) ToImageArmReferencePtrOutput() ImageArmReferencePtrOutput {
	return i.ToImageArmReferencePtrOutputWithContext(context.Background())
}

func (i *imageArmReferencePtrType) ToImageArmReferencePtrOutputWithContext(ctx context.Context) ImageArmReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageArmReferencePtrOutput)
}

// The ARM ID for a Gallery Image.
type ImageArmReferenceOutput struct{ *pulumi.OutputState }

func (ImageArmReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageArmReference)(nil)).Elem()
}

func (o ImageArmReferenceOutput) ToImageArmReferenceOutput() ImageArmReferenceOutput {
	return o
}

func (o ImageArmReferenceOutput) ToImageArmReferenceOutputWithContext(ctx context.Context) ImageArmReferenceOutput {
	return o
}

func (o ImageArmReferenceOutput) ToImageArmReferencePtrOutput() ImageArmReferencePtrOutput {
	return o.ToImageArmReferencePtrOutputWithContext(context.Background())
}

func (o ImageArmReferenceOutput) ToImageArmReferencePtrOutputWithContext(ctx context.Context) ImageArmReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageArmReference) *ImageArmReference {
		return &v
	}).(ImageArmReferencePtrOutput)
}

// The ARM ID for an image resource used by the virtual machine instance.
func (o ImageArmReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageArmReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ImageArmReferencePtrOutput struct{ *pulumi.OutputState }

func (ImageArmReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageArmReference)(nil)).Elem()
}

func (o ImageArmReferencePtrOutput) ToImageArmReferencePtrOutput() ImageArmReferencePtrOutput {
	return o
}

func (o ImageArmReferencePtrOutput) ToImageArmReferencePtrOutputWithContext(ctx context.Context) ImageArmReferencePtrOutput {
	return o
}

func (o ImageArmReferencePtrOutput) Elem() ImageArmReferenceOutput {
	return o.ApplyT(func(v *ImageArmReference) ImageArmReference {
		if v != nil {
			return *v
		}
		var ret ImageArmReference
		return ret
	}).(ImageArmReferenceOutput)
}

// The ARM ID for an image resource used by the virtual machine instance.
func (o ImageArmReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageArmReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The ARM ID for a Gallery Image.
type ImageArmReferenceResponse struct {
	// The ARM ID for an image resource used by the virtual machine instance.
	Id *string `pulumi:"id"`
}

// The ARM ID for a Gallery Image.
type ImageArmReferenceResponseOutput struct{ *pulumi.OutputState }

func (ImageArmReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageArmReferenceResponse)(nil)).Elem()
}

func (o ImageArmReferenceResponseOutput) ToImageArmReferenceResponseOutput() ImageArmReferenceResponseOutput {
	return o
}

func (o ImageArmReferenceResponseOutput) ToImageArmReferenceResponseOutputWithContext(ctx context.Context) ImageArmReferenceResponseOutput {
	return o
}

// The ARM ID for an image resource used by the virtual machine instance.
func (o ImageArmReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageArmReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ImageArmReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ImageArmReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageArmReferenceResponse)(nil)).Elem()
}

func (o ImageArmReferenceResponsePtrOutput) ToImageArmReferenceResponsePtrOutput() ImageArmReferenceResponsePtrOutput {
	return o
}

func (o ImageArmReferenceResponsePtrOutput) ToImageArmReferenceResponsePtrOutputWithContext(ctx context.Context) ImageArmReferenceResponsePtrOutput {
	return o
}

func (o ImageArmReferenceResponsePtrOutput) Elem() ImageArmReferenceResponseOutput {
	return o.ApplyT(func(v *ImageArmReferenceResponse) ImageArmReferenceResponse {
		if v != nil {
			return *v
		}
		var ret ImageArmReferenceResponse
		return ret
	}).(ImageArmReferenceResponseOutput)
}

// The ARM ID for an image resource used by the virtual machine instance.
func (o ImageArmReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageArmReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Instance view status.
type InstanceViewStatusResponse struct {
	// The status code.
	Code *string `pulumi:"code"`
	// The short localizable label for the status.
	DisplayStatus *string `pulumi:"displayStatus"`
	// The level code.
	Level *string `pulumi:"level"`
	// The detailed status message, including for alerts and error messages.
	Message *string `pulumi:"message"`
	// The time of the status.
	Time *string `pulumi:"time"`
}

// Instance view status.
type InstanceViewStatusResponseOutput struct{ *pulumi.OutputState }

func (InstanceViewStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceViewStatusResponse)(nil)).Elem()
}

func (o InstanceViewStatusResponseOutput) ToInstanceViewStatusResponseOutput() InstanceViewStatusResponseOutput {
	return o
}

func (o InstanceViewStatusResponseOutput) ToInstanceViewStatusResponseOutputWithContext(ctx context.Context) InstanceViewStatusResponseOutput {
	return o
}

// The status code.
func (o InstanceViewStatusResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatusResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// The short localizable label for the status.
func (o InstanceViewStatusResponseOutput) DisplayStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatusResponse) *string { return v.DisplayStatus }).(pulumi.StringPtrOutput)
}

// The level code.
func (o InstanceViewStatusResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatusResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// The detailed status message, including for alerts and error messages.
func (o InstanceViewStatusResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatusResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The time of the status.
func (o InstanceViewStatusResponseOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceViewStatusResponse) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type InstanceViewStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (InstanceViewStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceViewStatusResponse)(nil)).Elem()
}

func (o InstanceViewStatusResponseArrayOutput) ToInstanceViewStatusResponseArrayOutput() InstanceViewStatusResponseArrayOutput {
	return o
}

func (o InstanceViewStatusResponseArrayOutput) ToInstanceViewStatusResponseArrayOutputWithContext(ctx context.Context) InstanceViewStatusResponseArrayOutput {
	return o
}

func (o InstanceViewStatusResponseArrayOutput) Index(i pulumi.IntInput) InstanceViewStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceViewStatusResponse {
		return vs[0].([]InstanceViewStatusResponse)[vs[1].(int)]
	}).(InstanceViewStatusResponseOutput)
}

// DNS Settings of the interface
type InterfaceDNSSettings struct {
	// List of DNS server IP Addresses for the interface
	DnsServers []string `pulumi:"dnsServers"`
}

// InterfaceDNSSettingsInput is an input type that accepts InterfaceDNSSettingsArgs and InterfaceDNSSettingsOutput values.
// You can construct a concrete instance of `InterfaceDNSSettingsInput` via:
//
//	InterfaceDNSSettingsArgs{...}
type InterfaceDNSSettingsInput interface {
	pulumi.Input

	ToInterfaceDNSSettingsOutput() InterfaceDNSSettingsOutput
	ToInterfaceDNSSettingsOutputWithContext(context.Context) InterfaceDNSSettingsOutput
}

// DNS Settings of the interface
type InterfaceDNSSettingsArgs struct {
	// List of DNS server IP Addresses for the interface
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
}

func (InterfaceDNSSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceDNSSettings)(nil)).Elem()
}

func (i InterfaceDNSSettingsArgs) ToInterfaceDNSSettingsOutput() InterfaceDNSSettingsOutput {
	return i.ToInterfaceDNSSettingsOutputWithContext(context.Background())
}

func (i InterfaceDNSSettingsArgs) ToInterfaceDNSSettingsOutputWithContext(ctx context.Context) InterfaceDNSSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceDNSSettingsOutput)
}

func (i InterfaceDNSSettingsArgs) ToInterfaceDNSSettingsPtrOutput() InterfaceDNSSettingsPtrOutput {
	return i.ToInterfaceDNSSettingsPtrOutputWithContext(context.Background())
}

func (i InterfaceDNSSettingsArgs) ToInterfaceDNSSettingsPtrOutputWithContext(ctx context.Context) InterfaceDNSSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceDNSSettingsOutput).ToInterfaceDNSSettingsPtrOutputWithContext(ctx)
}

// InterfaceDNSSettingsPtrInput is an input type that accepts InterfaceDNSSettingsArgs, InterfaceDNSSettingsPtr and InterfaceDNSSettingsPtrOutput values.
// You can construct a concrete instance of `InterfaceDNSSettingsPtrInput` via:
//
//	        InterfaceDNSSettingsArgs{...}
//
//	or:
//
//	        nil
type InterfaceDNSSettingsPtrInput interface {
	pulumi.Input

	ToInterfaceDNSSettingsPtrOutput() InterfaceDNSSettingsPtrOutput
	ToInterfaceDNSSettingsPtrOutputWithContext(context.Context) InterfaceDNSSettingsPtrOutput
}

type interfaceDNSSettingsPtrType InterfaceDNSSettingsArgs

func InterfaceDNSSettingsPtr(v *InterfaceDNSSettingsArgs) InterfaceDNSSettingsPtrInput {
	return (*interfaceDNSSettingsPtrType)(v)
}

func (*interfaceDNSSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceDNSSettings)(nil)).Elem()
}

func (i *interfaceDNSSettingsPtrType) ToInterfaceDNSSettingsPtrOutput() InterfaceDNSSettingsPtrOutput {
	return i.ToInterfaceDNSSettingsPtrOutputWithContext(context.Background())
}

func (i *interfaceDNSSettingsPtrType) ToInterfaceDNSSettingsPtrOutputWithContext(ctx context.Context) InterfaceDNSSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceDNSSettingsPtrOutput)
}

// DNS Settings of the interface
type InterfaceDNSSettingsOutput struct{ *pulumi.OutputState }

func (InterfaceDNSSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceDNSSettings)(nil)).Elem()
}

func (o InterfaceDNSSettingsOutput) ToInterfaceDNSSettingsOutput() InterfaceDNSSettingsOutput {
	return o
}

func (o InterfaceDNSSettingsOutput) ToInterfaceDNSSettingsOutputWithContext(ctx context.Context) InterfaceDNSSettingsOutput {
	return o
}

func (o InterfaceDNSSettingsOutput) ToInterfaceDNSSettingsPtrOutput() InterfaceDNSSettingsPtrOutput {
	return o.ToInterfaceDNSSettingsPtrOutputWithContext(context.Background())
}

func (o InterfaceDNSSettingsOutput) ToInterfaceDNSSettingsPtrOutputWithContext(ctx context.Context) InterfaceDNSSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InterfaceDNSSettings) *InterfaceDNSSettings {
		return &v
	}).(InterfaceDNSSettingsPtrOutput)
}

// List of DNS server IP Addresses for the interface
func (o InterfaceDNSSettingsOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InterfaceDNSSettings) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type InterfaceDNSSettingsPtrOutput struct{ *pulumi.OutputState }

func (InterfaceDNSSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceDNSSettings)(nil)).Elem()
}

func (o InterfaceDNSSettingsPtrOutput) ToInterfaceDNSSettingsPtrOutput() InterfaceDNSSettingsPtrOutput {
	return o
}

func (o InterfaceDNSSettingsPtrOutput) ToInterfaceDNSSettingsPtrOutputWithContext(ctx context.Context) InterfaceDNSSettingsPtrOutput {
	return o
}

func (o InterfaceDNSSettingsPtrOutput) Elem() InterfaceDNSSettingsOutput {
	return o.ApplyT(func(v *InterfaceDNSSettings) InterfaceDNSSettings {
		if v != nil {
			return *v
		}
		var ret InterfaceDNSSettings
		return ret
	}).(InterfaceDNSSettingsOutput)
}

// List of DNS server IP Addresses for the interface
func (o InterfaceDNSSettingsPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InterfaceDNSSettings) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// DNS Settings of the interface
type InterfaceDNSSettingsResponse struct {
	// List of DNS server IP Addresses for the interface
	DnsServers []string `pulumi:"dnsServers"`
}

// DNS Settings of the interface
type InterfaceDNSSettingsResponseOutput struct{ *pulumi.OutputState }

func (InterfaceDNSSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceDNSSettingsResponse)(nil)).Elem()
}

func (o InterfaceDNSSettingsResponseOutput) ToInterfaceDNSSettingsResponseOutput() InterfaceDNSSettingsResponseOutput {
	return o
}

func (o InterfaceDNSSettingsResponseOutput) ToInterfaceDNSSettingsResponseOutputWithContext(ctx context.Context) InterfaceDNSSettingsResponseOutput {
	return o
}

// List of DNS server IP Addresses for the interface
func (o InterfaceDNSSettingsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InterfaceDNSSettingsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type InterfaceDNSSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (InterfaceDNSSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceDNSSettingsResponse)(nil)).Elem()
}

func (o InterfaceDNSSettingsResponsePtrOutput) ToInterfaceDNSSettingsResponsePtrOutput() InterfaceDNSSettingsResponsePtrOutput {
	return o
}

func (o InterfaceDNSSettingsResponsePtrOutput) ToInterfaceDNSSettingsResponsePtrOutputWithContext(ctx context.Context) InterfaceDNSSettingsResponsePtrOutput {
	return o
}

func (o InterfaceDNSSettingsResponsePtrOutput) Elem() InterfaceDNSSettingsResponseOutput {
	return o.ApplyT(func(v *InterfaceDNSSettingsResponse) InterfaceDNSSettingsResponse {
		if v != nil {
			return *v
		}
		var ret InterfaceDNSSettingsResponse
		return ret
	}).(InterfaceDNSSettingsResponseOutput)
}

// List of DNS server IP Addresses for the interface
func (o InterfaceDNSSettingsResponsePtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InterfaceDNSSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// The ARM ID for a Logical Network.
type LogicalNetworkArmReference struct {
	// The ARM ID for a Logical Network.
	Id *string `pulumi:"id"`
}

// LogicalNetworkArmReferenceInput is an input type that accepts LogicalNetworkArmReferenceArgs and LogicalNetworkArmReferenceOutput values.
// You can construct a concrete instance of `LogicalNetworkArmReferenceInput` via:
//
//	LogicalNetworkArmReferenceArgs{...}
type LogicalNetworkArmReferenceInput interface {
	pulumi.Input

	ToLogicalNetworkArmReferenceOutput() LogicalNetworkArmReferenceOutput
	ToLogicalNetworkArmReferenceOutputWithContext(context.Context) LogicalNetworkArmReferenceOutput
}

// The ARM ID for a Logical Network.
type LogicalNetworkArmReferenceArgs struct {
	// The ARM ID for a Logical Network.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LogicalNetworkArmReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalNetworkArmReference)(nil)).Elem()
}

func (i LogicalNetworkArmReferenceArgs) ToLogicalNetworkArmReferenceOutput() LogicalNetworkArmReferenceOutput {
	return i.ToLogicalNetworkArmReferenceOutputWithContext(context.Background())
}

func (i LogicalNetworkArmReferenceArgs) ToLogicalNetworkArmReferenceOutputWithContext(ctx context.Context) LogicalNetworkArmReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalNetworkArmReferenceOutput)
}

func (i LogicalNetworkArmReferenceArgs) ToLogicalNetworkArmReferencePtrOutput() LogicalNetworkArmReferencePtrOutput {
	return i.ToLogicalNetworkArmReferencePtrOutputWithContext(context.Background())
}

func (i LogicalNetworkArmReferenceArgs) ToLogicalNetworkArmReferencePtrOutputWithContext(ctx context.Context) LogicalNetworkArmReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalNetworkArmReferenceOutput).ToLogicalNetworkArmReferencePtrOutputWithContext(ctx)
}

// LogicalNetworkArmReferencePtrInput is an input type that accepts LogicalNetworkArmReferenceArgs, LogicalNetworkArmReferencePtr and LogicalNetworkArmReferencePtrOutput values.
// You can construct a concrete instance of `LogicalNetworkArmReferencePtrInput` via:
//
//	        LogicalNetworkArmReferenceArgs{...}
//
//	or:
//
//	        nil
type LogicalNetworkArmReferencePtrInput interface {
	pulumi.Input

	ToLogicalNetworkArmReferencePtrOutput() LogicalNetworkArmReferencePtrOutput
	ToLogicalNetworkArmReferencePtrOutputWithContext(context.Context) LogicalNetworkArmReferencePtrOutput
}

type logicalNetworkArmReferencePtrType LogicalNetworkArmReferenceArgs

func LogicalNetworkArmReferencePtr(v *LogicalNetworkArmReferenceArgs) LogicalNetworkArmReferencePtrInput {
	return (*logicalNetworkArmReferencePtrType)(v)
}

func (*logicalNetworkArmReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogicalNetworkArmReference)(nil)).Elem()
}

func (i *logicalNetworkArmReferencePtrType) ToLogicalNetworkArmReferencePtrOutput() LogicalNetworkArmReferencePtrOutput {
	return i.ToLogicalNetworkArmReferencePtrOutputWithContext(context.Background())
}

func (i *logicalNetworkArmReferencePtrType) ToLogicalNetworkArmReferencePtrOutputWithContext(ctx context.Context) LogicalNetworkArmReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalNetworkArmReferencePtrOutput)
}

// The ARM ID for a Logical Network.
type LogicalNetworkArmReferenceOutput struct{ *pulumi.OutputState }

func (LogicalNetworkArmReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalNetworkArmReference)(nil)).Elem()
}

func (o LogicalNetworkArmReferenceOutput) ToLogicalNetworkArmReferenceOutput() LogicalNetworkArmReferenceOutput {
	return o
}

func (o LogicalNetworkArmReferenceOutput) ToLogicalNetworkArmReferenceOutputWithContext(ctx context.Context) LogicalNetworkArmReferenceOutput {
	return o
}

func (o LogicalNetworkArmReferenceOutput) ToLogicalNetworkArmReferencePtrOutput() LogicalNetworkArmReferencePtrOutput {
	return o.ToLogicalNetworkArmReferencePtrOutputWithContext(context.Background())
}

func (o LogicalNetworkArmReferenceOutput) ToLogicalNetworkArmReferencePtrOutputWithContext(ctx context.Context) LogicalNetworkArmReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogicalNetworkArmReference) *LogicalNetworkArmReference {
		return &v
	}).(LogicalNetworkArmReferencePtrOutput)
}

// The ARM ID for a Logical Network.
func (o LogicalNetworkArmReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalNetworkArmReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LogicalNetworkArmReferencePtrOutput struct{ *pulumi.OutputState }

func (LogicalNetworkArmReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogicalNetworkArmReference)(nil)).Elem()
}

func (o LogicalNetworkArmReferencePtrOutput) ToLogicalNetworkArmReferencePtrOutput() LogicalNetworkArmReferencePtrOutput {
	return o
}

func (o LogicalNetworkArmReferencePtrOutput) ToLogicalNetworkArmReferencePtrOutputWithContext(ctx context.Context) LogicalNetworkArmReferencePtrOutput {
	return o
}

func (o LogicalNetworkArmReferencePtrOutput) Elem() LogicalNetworkArmReferenceOutput {
	return o.ApplyT(func(v *LogicalNetworkArmReference) LogicalNetworkArmReference {
		if v != nil {
			return *v
		}
		var ret LogicalNetworkArmReference
		return ret
	}).(LogicalNetworkArmReferenceOutput)
}

// The ARM ID for a Logical Network.
func (o LogicalNetworkArmReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogicalNetworkArmReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The ARM ID for a Logical Network.
type LogicalNetworkArmReferenceResponse struct {
	// The ARM ID for a Logical Network.
	Id *string `pulumi:"id"`
}

// The ARM ID for a Logical Network.
type LogicalNetworkArmReferenceResponseOutput struct{ *pulumi.OutputState }

func (LogicalNetworkArmReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalNetworkArmReferenceResponse)(nil)).Elem()
}

func (o LogicalNetworkArmReferenceResponseOutput) ToLogicalNetworkArmReferenceResponseOutput() LogicalNetworkArmReferenceResponseOutput {
	return o
}

func (o LogicalNetworkArmReferenceResponseOutput) ToLogicalNetworkArmReferenceResponseOutputWithContext(ctx context.Context) LogicalNetworkArmReferenceResponseOutput {
	return o
}

// The ARM ID for a Logical Network.
func (o LogicalNetworkArmReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalNetworkArmReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type LogicalNetworkArmReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (LogicalNetworkArmReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogicalNetworkArmReferenceResponse)(nil)).Elem()
}

func (o LogicalNetworkArmReferenceResponsePtrOutput) ToLogicalNetworkArmReferenceResponsePtrOutput() LogicalNetworkArmReferenceResponsePtrOutput {
	return o
}

func (o LogicalNetworkArmReferenceResponsePtrOutput) ToLogicalNetworkArmReferenceResponsePtrOutputWithContext(ctx context.Context) LogicalNetworkArmReferenceResponsePtrOutput {
	return o
}

func (o LogicalNetworkArmReferenceResponsePtrOutput) Elem() LogicalNetworkArmReferenceResponseOutput {
	return o.ApplyT(func(v *LogicalNetworkArmReferenceResponse) LogicalNetworkArmReferenceResponse {
		if v != nil {
			return *v
		}
		var ret LogicalNetworkArmReferenceResponse
		return ret
	}).(LogicalNetworkArmReferenceResponseOutput)
}

// The ARM ID for a Logical Network.
func (o LogicalNetworkArmReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogicalNetworkArmReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type LogicalNetworkArmReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (LogicalNetworkArmReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogicalNetworkArmReferenceResponse)(nil)).Elem()
}

func (o LogicalNetworkArmReferenceResponseArrayOutput) ToLogicalNetworkArmReferenceResponseArrayOutput() LogicalNetworkArmReferenceResponseArrayOutput {
	return o
}

func (o LogicalNetworkArmReferenceResponseArrayOutput) ToLogicalNetworkArmReferenceResponseArrayOutputWithContext(ctx context.Context) LogicalNetworkArmReferenceResponseArrayOutput {
	return o
}

func (o LogicalNetworkArmReferenceResponseArrayOutput) Index(i pulumi.IntInput) LogicalNetworkArmReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogicalNetworkArmReferenceResponse {
		return vs[0].([]LogicalNetworkArmReferenceResponse)[vs[1].(int)]
	}).(LogicalNetworkArmReferenceResponseOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the logical network. Standard DHCP option for a subnet overrides logical network DHCP options.
type LogicalNetworkPropertiesDhcpOptions struct {
	// The list of DNS servers IP addresses.
	DnsServers []string `pulumi:"dnsServers"`
}

// LogicalNetworkPropertiesDhcpOptionsInput is an input type that accepts LogicalNetworkPropertiesDhcpOptionsArgs and LogicalNetworkPropertiesDhcpOptionsOutput values.
// You can construct a concrete instance of `LogicalNetworkPropertiesDhcpOptionsInput` via:
//
//	LogicalNetworkPropertiesDhcpOptionsArgs{...}
type LogicalNetworkPropertiesDhcpOptionsInput interface {
	pulumi.Input

	ToLogicalNetworkPropertiesDhcpOptionsOutput() LogicalNetworkPropertiesDhcpOptionsOutput
	ToLogicalNetworkPropertiesDhcpOptionsOutputWithContext(context.Context) LogicalNetworkPropertiesDhcpOptionsOutput
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the logical network. Standard DHCP option for a subnet overrides logical network DHCP options.
type LogicalNetworkPropertiesDhcpOptionsArgs struct {
	// The list of DNS servers IP addresses.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
}

func (LogicalNetworkPropertiesDhcpOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalNetworkPropertiesDhcpOptions)(nil)).Elem()
}

func (i LogicalNetworkPropertiesDhcpOptionsArgs) ToLogicalNetworkPropertiesDhcpOptionsOutput() LogicalNetworkPropertiesDhcpOptionsOutput {
	return i.ToLogicalNetworkPropertiesDhcpOptionsOutputWithContext(context.Background())
}

func (i LogicalNetworkPropertiesDhcpOptionsArgs) ToLogicalNetworkPropertiesDhcpOptionsOutputWithContext(ctx context.Context) LogicalNetworkPropertiesDhcpOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalNetworkPropertiesDhcpOptionsOutput)
}

func (i LogicalNetworkPropertiesDhcpOptionsArgs) ToLogicalNetworkPropertiesDhcpOptionsPtrOutput() LogicalNetworkPropertiesDhcpOptionsPtrOutput {
	return i.ToLogicalNetworkPropertiesDhcpOptionsPtrOutputWithContext(context.Background())
}

func (i LogicalNetworkPropertiesDhcpOptionsArgs) ToLogicalNetworkPropertiesDhcpOptionsPtrOutputWithContext(ctx context.Context) LogicalNetworkPropertiesDhcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalNetworkPropertiesDhcpOptionsOutput).ToLogicalNetworkPropertiesDhcpOptionsPtrOutputWithContext(ctx)
}

// LogicalNetworkPropertiesDhcpOptionsPtrInput is an input type that accepts LogicalNetworkPropertiesDhcpOptionsArgs, LogicalNetworkPropertiesDhcpOptionsPtr and LogicalNetworkPropertiesDhcpOptionsPtrOutput values.
// You can construct a concrete instance of `LogicalNetworkPropertiesDhcpOptionsPtrInput` via:
//
//	        LogicalNetworkPropertiesDhcpOptionsArgs{...}
//
//	or:
//
//	        nil
type LogicalNetworkPropertiesDhcpOptionsPtrInput interface {
	pulumi.Input

	ToLogicalNetworkPropertiesDhcpOptionsPtrOutput() LogicalNetworkPropertiesDhcpOptionsPtrOutput
	ToLogicalNetworkPropertiesDhcpOptionsPtrOutputWithContext(context.Context) LogicalNetworkPropertiesDhcpOptionsPtrOutput
}

type logicalNetworkPropertiesDhcpOptionsPtrType LogicalNetworkPropertiesDhcpOptionsArgs

func LogicalNetworkPropertiesDhcpOptionsPtr(v *LogicalNetworkPropertiesDhcpOptionsArgs) LogicalNetworkPropertiesDhcpOptionsPtrInput {
	return (*logicalNetworkPropertiesDhcpOptionsPtrType)(v)
}

func (*logicalNetworkPropertiesDhcpOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogicalNetworkPropertiesDhcpOptions)(nil)).Elem()
}

func (i *logicalNetworkPropertiesDhcpOptionsPtrType) ToLogicalNetworkPropertiesDhcpOptionsPtrOutput() LogicalNetworkPropertiesDhcpOptionsPtrOutput {
	return i.ToLogicalNetworkPropertiesDhcpOptionsPtrOutputWithContext(context.Background())
}

func (i *logicalNetworkPropertiesDhcpOptionsPtrType) ToLogicalNetworkPropertiesDhcpOptionsPtrOutputWithContext(ctx context.Context) LogicalNetworkPropertiesDhcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogicalNetworkPropertiesDhcpOptionsPtrOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the logical network. Standard DHCP option for a subnet overrides logical network DHCP options.
type LogicalNetworkPropertiesDhcpOptionsOutput struct{ *pulumi.OutputState }

func (LogicalNetworkPropertiesDhcpOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalNetworkPropertiesDhcpOptions)(nil)).Elem()
}

func (o LogicalNetworkPropertiesDhcpOptionsOutput) ToLogicalNetworkPropertiesDhcpOptionsOutput() LogicalNetworkPropertiesDhcpOptionsOutput {
	return o
}

func (o LogicalNetworkPropertiesDhcpOptionsOutput) ToLogicalNetworkPropertiesDhcpOptionsOutputWithContext(ctx context.Context) LogicalNetworkPropertiesDhcpOptionsOutput {
	return o
}

func (o LogicalNetworkPropertiesDhcpOptionsOutput) ToLogicalNetworkPropertiesDhcpOptionsPtrOutput() LogicalNetworkPropertiesDhcpOptionsPtrOutput {
	return o.ToLogicalNetworkPropertiesDhcpOptionsPtrOutputWithContext(context.Background())
}

func (o LogicalNetworkPropertiesDhcpOptionsOutput) ToLogicalNetworkPropertiesDhcpOptionsPtrOutputWithContext(ctx context.Context) LogicalNetworkPropertiesDhcpOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogicalNetworkPropertiesDhcpOptions) *LogicalNetworkPropertiesDhcpOptions {
		return &v
	}).(LogicalNetworkPropertiesDhcpOptionsPtrOutput)
}

// The list of DNS servers IP addresses.
func (o LogicalNetworkPropertiesDhcpOptionsOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LogicalNetworkPropertiesDhcpOptions) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type LogicalNetworkPropertiesDhcpOptionsPtrOutput struct{ *pulumi.OutputState }

func (LogicalNetworkPropertiesDhcpOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogicalNetworkPropertiesDhcpOptions)(nil)).Elem()
}

func (o LogicalNetworkPropertiesDhcpOptionsPtrOutput) ToLogicalNetworkPropertiesDhcpOptionsPtrOutput() LogicalNetworkPropertiesDhcpOptionsPtrOutput {
	return o
}

func (o LogicalNetworkPropertiesDhcpOptionsPtrOutput) ToLogicalNetworkPropertiesDhcpOptionsPtrOutputWithContext(ctx context.Context) LogicalNetworkPropertiesDhcpOptionsPtrOutput {
	return o
}

func (o LogicalNetworkPropertiesDhcpOptionsPtrOutput) Elem() LogicalNetworkPropertiesDhcpOptionsOutput {
	return o.ApplyT(func(v *LogicalNetworkPropertiesDhcpOptions) LogicalNetworkPropertiesDhcpOptions {
		if v != nil {
			return *v
		}
		var ret LogicalNetworkPropertiesDhcpOptions
		return ret
	}).(LogicalNetworkPropertiesDhcpOptionsOutput)
}

// The list of DNS servers IP addresses.
func (o LogicalNetworkPropertiesDhcpOptionsPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LogicalNetworkPropertiesDhcpOptions) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the logical network. Standard DHCP option for a subnet overrides logical network DHCP options.
type LogicalNetworkPropertiesDhcpOptionsResponse struct {
	// The list of DNS servers IP addresses.
	DnsServers []string `pulumi:"dnsServers"`
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the logical network. Standard DHCP option for a subnet overrides logical network DHCP options.
type LogicalNetworkPropertiesDhcpOptionsResponseOutput struct{ *pulumi.OutputState }

func (LogicalNetworkPropertiesDhcpOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalNetworkPropertiesDhcpOptionsResponse)(nil)).Elem()
}

func (o LogicalNetworkPropertiesDhcpOptionsResponseOutput) ToLogicalNetworkPropertiesDhcpOptionsResponseOutput() LogicalNetworkPropertiesDhcpOptionsResponseOutput {
	return o
}

func (o LogicalNetworkPropertiesDhcpOptionsResponseOutput) ToLogicalNetworkPropertiesDhcpOptionsResponseOutputWithContext(ctx context.Context) LogicalNetworkPropertiesDhcpOptionsResponseOutput {
	return o
}

// The list of DNS servers IP addresses.
func (o LogicalNetworkPropertiesDhcpOptionsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LogicalNetworkPropertiesDhcpOptionsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type LogicalNetworkPropertiesDhcpOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (LogicalNetworkPropertiesDhcpOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogicalNetworkPropertiesDhcpOptionsResponse)(nil)).Elem()
}

func (o LogicalNetworkPropertiesDhcpOptionsResponsePtrOutput) ToLogicalNetworkPropertiesDhcpOptionsResponsePtrOutput() LogicalNetworkPropertiesDhcpOptionsResponsePtrOutput {
	return o
}

func (o LogicalNetworkPropertiesDhcpOptionsResponsePtrOutput) ToLogicalNetworkPropertiesDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) LogicalNetworkPropertiesDhcpOptionsResponsePtrOutput {
	return o
}

func (o LogicalNetworkPropertiesDhcpOptionsResponsePtrOutput) Elem() LogicalNetworkPropertiesDhcpOptionsResponseOutput {
	return o.ApplyT(func(v *LogicalNetworkPropertiesDhcpOptionsResponse) LogicalNetworkPropertiesDhcpOptionsResponse {
		if v != nil {
			return *v
		}
		var ret LogicalNetworkPropertiesDhcpOptionsResponse
		return ret
	}).(LogicalNetworkPropertiesDhcpOptionsResponseOutput)
}

// The list of DNS servers IP addresses.
func (o LogicalNetworkPropertiesDhcpOptionsResponsePtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LogicalNetworkPropertiesDhcpOptionsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Describes the status of the provisioning.
type LogicalNetworkStatusProvisioningStatusResponse struct {
	// The ID of the operation performed on the logical network
	OperationId *string `pulumi:"operationId"`
	// The status of the operation performed on the logical network [Succeeded, Failed, InProgress]
	Status string `pulumi:"status"`
}

// Describes the status of the provisioning.
type LogicalNetworkStatusProvisioningStatusResponseOutput struct{ *pulumi.OutputState }

func (LogicalNetworkStatusProvisioningStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalNetworkStatusProvisioningStatusResponse)(nil)).Elem()
}

func (o LogicalNetworkStatusProvisioningStatusResponseOutput) ToLogicalNetworkStatusProvisioningStatusResponseOutput() LogicalNetworkStatusProvisioningStatusResponseOutput {
	return o
}

func (o LogicalNetworkStatusProvisioningStatusResponseOutput) ToLogicalNetworkStatusProvisioningStatusResponseOutputWithContext(ctx context.Context) LogicalNetworkStatusProvisioningStatusResponseOutput {
	return o
}

// The ID of the operation performed on the logical network
func (o LogicalNetworkStatusProvisioningStatusResponseOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalNetworkStatusProvisioningStatusResponse) *string { return v.OperationId }).(pulumi.StringPtrOutput)
}

// The status of the operation performed on the logical network [Succeeded, Failed, InProgress]
func (o LogicalNetworkStatusProvisioningStatusResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LogicalNetworkStatusProvisioningStatusResponse) string { return v.Status }).(pulumi.StringOutput)
}

type LogicalNetworkStatusProvisioningStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (LogicalNetworkStatusProvisioningStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogicalNetworkStatusProvisioningStatusResponse)(nil)).Elem()
}

func (o LogicalNetworkStatusProvisioningStatusResponsePtrOutput) ToLogicalNetworkStatusProvisioningStatusResponsePtrOutput() LogicalNetworkStatusProvisioningStatusResponsePtrOutput {
	return o
}

func (o LogicalNetworkStatusProvisioningStatusResponsePtrOutput) ToLogicalNetworkStatusProvisioningStatusResponsePtrOutputWithContext(ctx context.Context) LogicalNetworkStatusProvisioningStatusResponsePtrOutput {
	return o
}

func (o LogicalNetworkStatusProvisioningStatusResponsePtrOutput) Elem() LogicalNetworkStatusProvisioningStatusResponseOutput {
	return o.ApplyT(func(v *LogicalNetworkStatusProvisioningStatusResponse) LogicalNetworkStatusProvisioningStatusResponse {
		if v != nil {
			return *v
		}
		var ret LogicalNetworkStatusProvisioningStatusResponse
		return ret
	}).(LogicalNetworkStatusProvisioningStatusResponseOutput)
}

// The ID of the operation performed on the logical network
func (o LogicalNetworkStatusProvisioningStatusResponsePtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogicalNetworkStatusProvisioningStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperationId
	}).(pulumi.StringPtrOutput)
}

// The status of the operation performed on the logical network [Succeeded, Failed, InProgress]
func (o LogicalNetworkStatusProvisioningStatusResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogicalNetworkStatusProvisioningStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The observed state of logical networks
type LogicalNetworkStatusResponse struct {
	// LogicalNetwork provisioning error code
	ErrorCode *string `pulumi:"errorCode"`
	// Descriptive error message
	ErrorMessage *string `pulumi:"errorMessage"`
	// Logical network provisioning status
	ProvisioningStatus *LogicalNetworkStatusProvisioningStatusResponse `pulumi:"provisioningStatus"`
}

// The observed state of logical networks
type LogicalNetworkStatusResponseOutput struct{ *pulumi.OutputState }

func (LogicalNetworkStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalNetworkStatusResponse)(nil)).Elem()
}

func (o LogicalNetworkStatusResponseOutput) ToLogicalNetworkStatusResponseOutput() LogicalNetworkStatusResponseOutput {
	return o
}

func (o LogicalNetworkStatusResponseOutput) ToLogicalNetworkStatusResponseOutputWithContext(ctx context.Context) LogicalNetworkStatusResponseOutput {
	return o
}

// LogicalNetwork provisioning error code
func (o LogicalNetworkStatusResponseOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalNetworkStatusResponse) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// Descriptive error message
func (o LogicalNetworkStatusResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogicalNetworkStatusResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Logical network provisioning status
func (o LogicalNetworkStatusResponseOutput) ProvisioningStatus() LogicalNetworkStatusProvisioningStatusResponsePtrOutput {
	return o.ApplyT(func(v LogicalNetworkStatusResponse) *LogicalNetworkStatusProvisioningStatusResponse {
		return v.ProvisioningStatus
	}).(LogicalNetworkStatusProvisioningStatusResponsePtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponse struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// The download status of the gallery image
type MarketplaceGalleryImageStatusDownloadStatusResponse struct {
	// The downloaded sized of the image in MB
	DownloadSizeInMB *float64 `pulumi:"downloadSizeInMB"`
}

// The download status of the gallery image
type MarketplaceGalleryImageStatusDownloadStatusResponseOutput struct{ *pulumi.OutputState }

func (MarketplaceGalleryImageStatusDownloadStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketplaceGalleryImageStatusDownloadStatusResponse)(nil)).Elem()
}

func (o MarketplaceGalleryImageStatusDownloadStatusResponseOutput) ToMarketplaceGalleryImageStatusDownloadStatusResponseOutput() MarketplaceGalleryImageStatusDownloadStatusResponseOutput {
	return o
}

func (o MarketplaceGalleryImageStatusDownloadStatusResponseOutput) ToMarketplaceGalleryImageStatusDownloadStatusResponseOutputWithContext(ctx context.Context) MarketplaceGalleryImageStatusDownloadStatusResponseOutput {
	return o
}

// The downloaded sized of the image in MB
func (o MarketplaceGalleryImageStatusDownloadStatusResponseOutput) DownloadSizeInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MarketplaceGalleryImageStatusDownloadStatusResponse) *float64 { return v.DownloadSizeInMB }).(pulumi.Float64PtrOutput)
}

type MarketplaceGalleryImageStatusDownloadStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (MarketplaceGalleryImageStatusDownloadStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MarketplaceGalleryImageStatusDownloadStatusResponse)(nil)).Elem()
}

func (o MarketplaceGalleryImageStatusDownloadStatusResponsePtrOutput) ToMarketplaceGalleryImageStatusDownloadStatusResponsePtrOutput() MarketplaceGalleryImageStatusDownloadStatusResponsePtrOutput {
	return o
}

func (o MarketplaceGalleryImageStatusDownloadStatusResponsePtrOutput) ToMarketplaceGalleryImageStatusDownloadStatusResponsePtrOutputWithContext(ctx context.Context) MarketplaceGalleryImageStatusDownloadStatusResponsePtrOutput {
	return o
}

func (o MarketplaceGalleryImageStatusDownloadStatusResponsePtrOutput) Elem() MarketplaceGalleryImageStatusDownloadStatusResponseOutput {
	return o.ApplyT(func(v *MarketplaceGalleryImageStatusDownloadStatusResponse) MarketplaceGalleryImageStatusDownloadStatusResponse {
		if v != nil {
			return *v
		}
		var ret MarketplaceGalleryImageStatusDownloadStatusResponse
		return ret
	}).(MarketplaceGalleryImageStatusDownloadStatusResponseOutput)
}

// The downloaded sized of the image in MB
func (o MarketplaceGalleryImageStatusDownloadStatusResponsePtrOutput) DownloadSizeInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MarketplaceGalleryImageStatusDownloadStatusResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.DownloadSizeInMB
	}).(pulumi.Float64PtrOutput)
}

// Marketplace GalleryImage provisioning status
type MarketplaceGalleryImageStatusProvisioningStatusResponse struct {
	// The ID of the operation performed on the gallery image
	OperationId *string `pulumi:"operationId"`
	// The status of the operation performed on the gallery image [Succeeded, Failed, InProgress]
	Status string `pulumi:"status"`
}

// Marketplace GalleryImage provisioning status
type MarketplaceGalleryImageStatusProvisioningStatusResponseOutput struct{ *pulumi.OutputState }

func (MarketplaceGalleryImageStatusProvisioningStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketplaceGalleryImageStatusProvisioningStatusResponse)(nil)).Elem()
}

func (o MarketplaceGalleryImageStatusProvisioningStatusResponseOutput) ToMarketplaceGalleryImageStatusProvisioningStatusResponseOutput() MarketplaceGalleryImageStatusProvisioningStatusResponseOutput {
	return o
}

func (o MarketplaceGalleryImageStatusProvisioningStatusResponseOutput) ToMarketplaceGalleryImageStatusProvisioningStatusResponseOutputWithContext(ctx context.Context) MarketplaceGalleryImageStatusProvisioningStatusResponseOutput {
	return o
}

// The ID of the operation performed on the gallery image
func (o MarketplaceGalleryImageStatusProvisioningStatusResponseOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MarketplaceGalleryImageStatusProvisioningStatusResponse) *string { return v.OperationId }).(pulumi.StringPtrOutput)
}

// The status of the operation performed on the gallery image [Succeeded, Failed, InProgress]
func (o MarketplaceGalleryImageStatusProvisioningStatusResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MarketplaceGalleryImageStatusProvisioningStatusResponse) string { return v.Status }).(pulumi.StringOutput)
}

type MarketplaceGalleryImageStatusProvisioningStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (MarketplaceGalleryImageStatusProvisioningStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MarketplaceGalleryImageStatusProvisioningStatusResponse)(nil)).Elem()
}

func (o MarketplaceGalleryImageStatusProvisioningStatusResponsePtrOutput) ToMarketplaceGalleryImageStatusProvisioningStatusResponsePtrOutput() MarketplaceGalleryImageStatusProvisioningStatusResponsePtrOutput {
	return o
}

func (o MarketplaceGalleryImageStatusProvisioningStatusResponsePtrOutput) ToMarketplaceGalleryImageStatusProvisioningStatusResponsePtrOutputWithContext(ctx context.Context) MarketplaceGalleryImageStatusProvisioningStatusResponsePtrOutput {
	return o
}

func (o MarketplaceGalleryImageStatusProvisioningStatusResponsePtrOutput) Elem() MarketplaceGalleryImageStatusProvisioningStatusResponseOutput {
	return o.ApplyT(func(v *MarketplaceGalleryImageStatusProvisioningStatusResponse) MarketplaceGalleryImageStatusProvisioningStatusResponse {
		if v != nil {
			return *v
		}
		var ret MarketplaceGalleryImageStatusProvisioningStatusResponse
		return ret
	}).(MarketplaceGalleryImageStatusProvisioningStatusResponseOutput)
}

// The ID of the operation performed on the gallery image
func (o MarketplaceGalleryImageStatusProvisioningStatusResponsePtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MarketplaceGalleryImageStatusProvisioningStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperationId
	}).(pulumi.StringPtrOutput)
}

// The status of the operation performed on the gallery image [Succeeded, Failed, InProgress]
func (o MarketplaceGalleryImageStatusProvisioningStatusResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MarketplaceGalleryImageStatusProvisioningStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The observed state of marketplace gallery images
type MarketplaceGalleryImageStatusResponse struct {
	// The download status of the gallery image
	DownloadStatus *MarketplaceGalleryImageStatusDownloadStatusResponse `pulumi:"downloadStatus"`
	// MarketplaceGalleryImage provisioning error code
	ErrorCode *string `pulumi:"errorCode"`
	// Descriptive error message
	ErrorMessage *string `pulumi:"errorMessage"`
	// The progress of the operation in percentage
	ProgressPercentage *float64 `pulumi:"progressPercentage"`
	// Provisioning status of marketplace gallery image
	ProvisioningStatus *MarketplaceGalleryImageStatusProvisioningStatusResponse `pulumi:"provisioningStatus"`
}

// The observed state of marketplace gallery images
type MarketplaceGalleryImageStatusResponseOutput struct{ *pulumi.OutputState }

func (MarketplaceGalleryImageStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MarketplaceGalleryImageStatusResponse)(nil)).Elem()
}

func (o MarketplaceGalleryImageStatusResponseOutput) ToMarketplaceGalleryImageStatusResponseOutput() MarketplaceGalleryImageStatusResponseOutput {
	return o
}

func (o MarketplaceGalleryImageStatusResponseOutput) ToMarketplaceGalleryImageStatusResponseOutputWithContext(ctx context.Context) MarketplaceGalleryImageStatusResponseOutput {
	return o
}

// The download status of the gallery image
func (o MarketplaceGalleryImageStatusResponseOutput) DownloadStatus() MarketplaceGalleryImageStatusDownloadStatusResponsePtrOutput {
	return o.ApplyT(func(v MarketplaceGalleryImageStatusResponse) *MarketplaceGalleryImageStatusDownloadStatusResponse {
		return v.DownloadStatus
	}).(MarketplaceGalleryImageStatusDownloadStatusResponsePtrOutput)
}

// MarketplaceGalleryImage provisioning error code
func (o MarketplaceGalleryImageStatusResponseOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MarketplaceGalleryImageStatusResponse) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// Descriptive error message
func (o MarketplaceGalleryImageStatusResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MarketplaceGalleryImageStatusResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// The progress of the operation in percentage
func (o MarketplaceGalleryImageStatusResponseOutput) ProgressPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MarketplaceGalleryImageStatusResponse) *float64 { return v.ProgressPercentage }).(pulumi.Float64PtrOutput)
}

// Provisioning status of marketplace gallery image
func (o MarketplaceGalleryImageStatusResponseOutput) ProvisioningStatus() MarketplaceGalleryImageStatusProvisioningStatusResponsePtrOutput {
	return o.ApplyT(func(v MarketplaceGalleryImageStatusResponse) *MarketplaceGalleryImageStatusProvisioningStatusResponse {
		return v.ProvisioningStatus
	}).(MarketplaceGalleryImageStatusProvisioningStatusResponsePtrOutput)
}

// The ARM ID for a Network Interface.
type NetworkInterfaceArmReference struct {
	// The ARM ID for a Network Interface.
	Id *string `pulumi:"id"`
}

// NetworkInterfaceArmReferenceInput is an input type that accepts NetworkInterfaceArmReferenceArgs and NetworkInterfaceArmReferenceOutput values.
// You can construct a concrete instance of `NetworkInterfaceArmReferenceInput` via:
//
//	NetworkInterfaceArmReferenceArgs{...}
type NetworkInterfaceArmReferenceInput interface {
	pulumi.Input

	ToNetworkInterfaceArmReferenceOutput() NetworkInterfaceArmReferenceOutput
	ToNetworkInterfaceArmReferenceOutputWithContext(context.Context) NetworkInterfaceArmReferenceOutput
}

// The ARM ID for a Network Interface.
type NetworkInterfaceArmReferenceArgs struct {
	// The ARM ID for a Network Interface.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (NetworkInterfaceArmReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceArmReference)(nil)).Elem()
}

func (i NetworkInterfaceArmReferenceArgs) ToNetworkInterfaceArmReferenceOutput() NetworkInterfaceArmReferenceOutput {
	return i.ToNetworkInterfaceArmReferenceOutputWithContext(context.Background())
}

func (i NetworkInterfaceArmReferenceArgs) ToNetworkInterfaceArmReferenceOutputWithContext(ctx context.Context) NetworkInterfaceArmReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceArmReferenceOutput)
}

// NetworkInterfaceArmReferenceArrayInput is an input type that accepts NetworkInterfaceArmReferenceArray and NetworkInterfaceArmReferenceArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceArmReferenceArrayInput` via:
//
//	NetworkInterfaceArmReferenceArray{ NetworkInterfaceArmReferenceArgs{...} }
type NetworkInterfaceArmReferenceArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceArmReferenceArrayOutput() NetworkInterfaceArmReferenceArrayOutput
	ToNetworkInterfaceArmReferenceArrayOutputWithContext(context.Context) NetworkInterfaceArmReferenceArrayOutput
}

type NetworkInterfaceArmReferenceArray []NetworkInterfaceArmReferenceInput

func (NetworkInterfaceArmReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceArmReference)(nil)).Elem()
}

func (i NetworkInterfaceArmReferenceArray) ToNetworkInterfaceArmReferenceArrayOutput() NetworkInterfaceArmReferenceArrayOutput {
	return i.ToNetworkInterfaceArmReferenceArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceArmReferenceArray) ToNetworkInterfaceArmReferenceArrayOutputWithContext(ctx context.Context) NetworkInterfaceArmReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceArmReferenceArrayOutput)
}

// The ARM ID for a Network Interface.
type NetworkInterfaceArmReferenceOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceArmReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceArmReference)(nil)).Elem()
}

func (o NetworkInterfaceArmReferenceOutput) ToNetworkInterfaceArmReferenceOutput() NetworkInterfaceArmReferenceOutput {
	return o
}

func (o NetworkInterfaceArmReferenceOutput) ToNetworkInterfaceArmReferenceOutputWithContext(ctx context.Context) NetworkInterfaceArmReferenceOutput {
	return o
}

// The ARM ID for a Network Interface.
func (o NetworkInterfaceArmReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceArmReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceArmReferenceArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceArmReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceArmReference)(nil)).Elem()
}

func (o NetworkInterfaceArmReferenceArrayOutput) ToNetworkInterfaceArmReferenceArrayOutput() NetworkInterfaceArmReferenceArrayOutput {
	return o
}

func (o NetworkInterfaceArmReferenceArrayOutput) ToNetworkInterfaceArmReferenceArrayOutputWithContext(ctx context.Context) NetworkInterfaceArmReferenceArrayOutput {
	return o
}

func (o NetworkInterfaceArmReferenceArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceArmReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceArmReference {
		return vs[0].([]NetworkInterfaceArmReference)[vs[1].(int)]
	}).(NetworkInterfaceArmReferenceOutput)
}

// The ARM ID for a Network Interface.
type NetworkInterfaceArmReferenceResponse struct {
	// The ARM ID for a Network Interface.
	Id *string `pulumi:"id"`
}

// The ARM ID for a Network Interface.
type NetworkInterfaceArmReferenceResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceArmReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceArmReferenceResponse)(nil)).Elem()
}

func (o NetworkInterfaceArmReferenceResponseOutput) ToNetworkInterfaceArmReferenceResponseOutput() NetworkInterfaceArmReferenceResponseOutput {
	return o
}

func (o NetworkInterfaceArmReferenceResponseOutput) ToNetworkInterfaceArmReferenceResponseOutputWithContext(ctx context.Context) NetworkInterfaceArmReferenceResponseOutput {
	return o
}

// The ARM ID for a Network Interface.
func (o NetworkInterfaceArmReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceArmReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceArmReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceArmReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceArmReferenceResponse)(nil)).Elem()
}

func (o NetworkInterfaceArmReferenceResponseArrayOutput) ToNetworkInterfaceArmReferenceResponseArrayOutput() NetworkInterfaceArmReferenceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceArmReferenceResponseArrayOutput) ToNetworkInterfaceArmReferenceResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceArmReferenceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceArmReferenceResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceArmReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceArmReferenceResponse {
		return vs[0].([]NetworkInterfaceArmReferenceResponse)[vs[1].(int)]
	}).(NetworkInterfaceArmReferenceResponseOutput)
}

// Network interface provisioning status
type NetworkInterfaceStatusProvisioningStatusResponse struct {
	// The ID of the operation performed on the network interface
	OperationId *string `pulumi:"operationId"`
	// The status of the operation performed on the network interface [Succeeded, Failed, InProgress]
	Status string `pulumi:"status"`
}

// Network interface provisioning status
type NetworkInterfaceStatusProvisioningStatusResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceStatusProvisioningStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceStatusProvisioningStatusResponse)(nil)).Elem()
}

func (o NetworkInterfaceStatusProvisioningStatusResponseOutput) ToNetworkInterfaceStatusProvisioningStatusResponseOutput() NetworkInterfaceStatusProvisioningStatusResponseOutput {
	return o
}

func (o NetworkInterfaceStatusProvisioningStatusResponseOutput) ToNetworkInterfaceStatusProvisioningStatusResponseOutputWithContext(ctx context.Context) NetworkInterfaceStatusProvisioningStatusResponseOutput {
	return o
}

// The ID of the operation performed on the network interface
func (o NetworkInterfaceStatusProvisioningStatusResponseOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceStatusProvisioningStatusResponse) *string { return v.OperationId }).(pulumi.StringPtrOutput)
}

// The status of the operation performed on the network interface [Succeeded, Failed, InProgress]
func (o NetworkInterfaceStatusProvisioningStatusResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceStatusProvisioningStatusResponse) string { return v.Status }).(pulumi.StringOutput)
}

type NetworkInterfaceStatusProvisioningStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceStatusProvisioningStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceStatusProvisioningStatusResponse)(nil)).Elem()
}

func (o NetworkInterfaceStatusProvisioningStatusResponsePtrOutput) ToNetworkInterfaceStatusProvisioningStatusResponsePtrOutput() NetworkInterfaceStatusProvisioningStatusResponsePtrOutput {
	return o
}

func (o NetworkInterfaceStatusProvisioningStatusResponsePtrOutput) ToNetworkInterfaceStatusProvisioningStatusResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceStatusProvisioningStatusResponsePtrOutput {
	return o
}

func (o NetworkInterfaceStatusProvisioningStatusResponsePtrOutput) Elem() NetworkInterfaceStatusProvisioningStatusResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceStatusProvisioningStatusResponse) NetworkInterfaceStatusProvisioningStatusResponse {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceStatusProvisioningStatusResponse
		return ret
	}).(NetworkInterfaceStatusProvisioningStatusResponseOutput)
}

// The ID of the operation performed on the network interface
func (o NetworkInterfaceStatusProvisioningStatusResponsePtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceStatusProvisioningStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperationId
	}).(pulumi.StringPtrOutput)
}

// The status of the operation performed on the network interface [Succeeded, Failed, InProgress]
func (o NetworkInterfaceStatusProvisioningStatusResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceStatusProvisioningStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The observed state of network interfaces
type NetworkInterfaceStatusResponse struct {
	// NetworkInterface provisioning error code
	ErrorCode *string `pulumi:"errorCode"`
	// Descriptive error message
	ErrorMessage *string `pulumi:"errorMessage"`
	// Network interface provisioning status
	ProvisioningStatus *NetworkInterfaceStatusProvisioningStatusResponse `pulumi:"provisioningStatus"`
}

// The observed state of network interfaces
type NetworkInterfaceStatusResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceStatusResponse)(nil)).Elem()
}

func (o NetworkInterfaceStatusResponseOutput) ToNetworkInterfaceStatusResponseOutput() NetworkInterfaceStatusResponseOutput {
	return o
}

func (o NetworkInterfaceStatusResponseOutput) ToNetworkInterfaceStatusResponseOutputWithContext(ctx context.Context) NetworkInterfaceStatusResponseOutput {
	return o
}

// NetworkInterface provisioning error code
func (o NetworkInterfaceStatusResponseOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceStatusResponse) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// Descriptive error message
func (o NetworkInterfaceStatusResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceStatusResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Network interface provisioning status
func (o NetworkInterfaceStatusResponseOutput) ProvisioningStatus() NetworkInterfaceStatusProvisioningStatusResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceStatusResponse) *NetworkInterfaceStatusProvisioningStatusResponse {
		return v.ProvisioningStatus
	}).(NetworkInterfaceStatusProvisioningStatusResponsePtrOutput)
}

// The ARM ID for a Network Security Group.
type NetworkSecurityGroupArmReference struct {
	// The ARM ID for a Network Security Group.
	Id *string `pulumi:"id"`
}

// NetworkSecurityGroupArmReferenceInput is an input type that accepts NetworkSecurityGroupArmReferenceArgs and NetworkSecurityGroupArmReferenceOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupArmReferenceInput` via:
//
//	NetworkSecurityGroupArmReferenceArgs{...}
type NetworkSecurityGroupArmReferenceInput interface {
	pulumi.Input

	ToNetworkSecurityGroupArmReferenceOutput() NetworkSecurityGroupArmReferenceOutput
	ToNetworkSecurityGroupArmReferenceOutputWithContext(context.Context) NetworkSecurityGroupArmReferenceOutput
}

// The ARM ID for a Network Security Group.
type NetworkSecurityGroupArmReferenceArgs struct {
	// The ARM ID for a Network Security Group.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (NetworkSecurityGroupArmReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupArmReference)(nil)).Elem()
}

func (i NetworkSecurityGroupArmReferenceArgs) ToNetworkSecurityGroupArmReferenceOutput() NetworkSecurityGroupArmReferenceOutput {
	return i.ToNetworkSecurityGroupArmReferenceOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupArmReferenceArgs) ToNetworkSecurityGroupArmReferenceOutputWithContext(ctx context.Context) NetworkSecurityGroupArmReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupArmReferenceOutput)
}

func (i NetworkSecurityGroupArmReferenceArgs) ToNetworkSecurityGroupArmReferencePtrOutput() NetworkSecurityGroupArmReferencePtrOutput {
	return i.ToNetworkSecurityGroupArmReferencePtrOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupArmReferenceArgs) ToNetworkSecurityGroupArmReferencePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupArmReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupArmReferenceOutput).ToNetworkSecurityGroupArmReferencePtrOutputWithContext(ctx)
}

// NetworkSecurityGroupArmReferencePtrInput is an input type that accepts NetworkSecurityGroupArmReferenceArgs, NetworkSecurityGroupArmReferencePtr and NetworkSecurityGroupArmReferencePtrOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupArmReferencePtrInput` via:
//
//	        NetworkSecurityGroupArmReferenceArgs{...}
//
//	or:
//
//	        nil
type NetworkSecurityGroupArmReferencePtrInput interface {
	pulumi.Input

	ToNetworkSecurityGroupArmReferencePtrOutput() NetworkSecurityGroupArmReferencePtrOutput
	ToNetworkSecurityGroupArmReferencePtrOutputWithContext(context.Context) NetworkSecurityGroupArmReferencePtrOutput
}

type networkSecurityGroupArmReferencePtrType NetworkSecurityGroupArmReferenceArgs

func NetworkSecurityGroupArmReferencePtr(v *NetworkSecurityGroupArmReferenceArgs) NetworkSecurityGroupArmReferencePtrInput {
	return (*networkSecurityGroupArmReferencePtrType)(v)
}

func (*networkSecurityGroupArmReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupArmReference)(nil)).Elem()
}

func (i *networkSecurityGroupArmReferencePtrType) ToNetworkSecurityGroupArmReferencePtrOutput() NetworkSecurityGroupArmReferencePtrOutput {
	return i.ToNetworkSecurityGroupArmReferencePtrOutputWithContext(context.Background())
}

func (i *networkSecurityGroupArmReferencePtrType) ToNetworkSecurityGroupArmReferencePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupArmReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupArmReferencePtrOutput)
}

// The ARM ID for a Network Security Group.
type NetworkSecurityGroupArmReferenceOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupArmReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupArmReference)(nil)).Elem()
}

func (o NetworkSecurityGroupArmReferenceOutput) ToNetworkSecurityGroupArmReferenceOutput() NetworkSecurityGroupArmReferenceOutput {
	return o
}

func (o NetworkSecurityGroupArmReferenceOutput) ToNetworkSecurityGroupArmReferenceOutputWithContext(ctx context.Context) NetworkSecurityGroupArmReferenceOutput {
	return o
}

func (o NetworkSecurityGroupArmReferenceOutput) ToNetworkSecurityGroupArmReferencePtrOutput() NetworkSecurityGroupArmReferencePtrOutput {
	return o.ToNetworkSecurityGroupArmReferencePtrOutputWithContext(context.Background())
}

func (o NetworkSecurityGroupArmReferenceOutput) ToNetworkSecurityGroupArmReferencePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupArmReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkSecurityGroupArmReference) *NetworkSecurityGroupArmReference {
		return &v
	}).(NetworkSecurityGroupArmReferencePtrOutput)
}

// The ARM ID for a Network Security Group.
func (o NetworkSecurityGroupArmReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupArmReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type NetworkSecurityGroupArmReferencePtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupArmReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupArmReference)(nil)).Elem()
}

func (o NetworkSecurityGroupArmReferencePtrOutput) ToNetworkSecurityGroupArmReferencePtrOutput() NetworkSecurityGroupArmReferencePtrOutput {
	return o
}

func (o NetworkSecurityGroupArmReferencePtrOutput) ToNetworkSecurityGroupArmReferencePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupArmReferencePtrOutput {
	return o
}

func (o NetworkSecurityGroupArmReferencePtrOutput) Elem() NetworkSecurityGroupArmReferenceOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupArmReference) NetworkSecurityGroupArmReference {
		if v != nil {
			return *v
		}
		var ret NetworkSecurityGroupArmReference
		return ret
	}).(NetworkSecurityGroupArmReferenceOutput)
}

// The ARM ID for a Network Security Group.
func (o NetworkSecurityGroupArmReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupArmReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The ARM ID for a Network Security Group.
type NetworkSecurityGroupArmReferenceResponse struct {
	// The ARM ID for a Network Security Group.
	Id *string `pulumi:"id"`
}

// The ARM ID for a Network Security Group.
type NetworkSecurityGroupArmReferenceResponseOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupArmReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupArmReferenceResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupArmReferenceResponseOutput) ToNetworkSecurityGroupArmReferenceResponseOutput() NetworkSecurityGroupArmReferenceResponseOutput {
	return o
}

func (o NetworkSecurityGroupArmReferenceResponseOutput) ToNetworkSecurityGroupArmReferenceResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupArmReferenceResponseOutput {
	return o
}

// The ARM ID for a Network Security Group.
func (o NetworkSecurityGroupArmReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupArmReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type NetworkSecurityGroupArmReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupArmReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupArmReferenceResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupArmReferenceResponsePtrOutput) ToNetworkSecurityGroupArmReferenceResponsePtrOutput() NetworkSecurityGroupArmReferenceResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupArmReferenceResponsePtrOutput) ToNetworkSecurityGroupArmReferenceResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupArmReferenceResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupArmReferenceResponsePtrOutput) Elem() NetworkSecurityGroupArmReferenceResponseOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupArmReferenceResponse) NetworkSecurityGroupArmReferenceResponse {
		if v != nil {
			return *v
		}
		var ret NetworkSecurityGroupArmReferenceResponse
		return ret
	}).(NetworkSecurityGroupArmReferenceResponseOutput)
}

// The ARM ID for a Network Security Group.
func (o NetworkSecurityGroupArmReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupArmReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Route - Route resource.
type Route struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// Name - name of the subnet
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// RouteInput is an input type that accepts RouteArgs and RouteOutput values.
// You can construct a concrete instance of `RouteInput` via:
//
//	RouteArgs{...}
type RouteInput interface {
	pulumi.Input

	ToRouteOutput() RouteOutput
	ToRouteOutputWithContext(context.Context) RouteOutput
}

// Route - Route resource.
type RouteArgs struct {
	// The destination CIDR to which the route applies.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// Name - name of the subnet
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
}

func (RouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Route)(nil)).Elem()
}

func (i RouteArgs) ToRouteOutput() RouteOutput {
	return i.ToRouteOutputWithContext(context.Background())
}

func (i RouteArgs) ToRouteOutputWithContext(ctx context.Context) RouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteOutput)
}

// RouteArrayInput is an input type that accepts RouteArray and RouteArrayOutput values.
// You can construct a concrete instance of `RouteArrayInput` via:
//
//	RouteArray{ RouteArgs{...} }
type RouteArrayInput interface {
	pulumi.Input

	ToRouteArrayOutput() RouteArrayOutput
	ToRouteArrayOutputWithContext(context.Context) RouteArrayOutput
}

type RouteArray []RouteInput

func (RouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Route)(nil)).Elem()
}

func (i RouteArray) ToRouteArrayOutput() RouteArrayOutput {
	return i.ToRouteArrayOutputWithContext(context.Background())
}

func (i RouteArray) ToRouteArrayOutputWithContext(ctx context.Context) RouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteArrayOutput)
}

// Route - Route resource.
type RouteOutput struct{ *pulumi.OutputState }

func (RouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Route)(nil)).Elem()
}

func (o RouteOutput) ToRouteOutput() RouteOutput {
	return o
}

func (o RouteOutput) ToRouteOutputWithContext(ctx context.Context) RouteOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// Name - name of the subnet
func (o RouteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Route) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type RouteArrayOutput struct{ *pulumi.OutputState }

func (RouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Route)(nil)).Elem()
}

func (o RouteArrayOutput) ToRouteArrayOutput() RouteArrayOutput {
	return o
}

func (o RouteArrayOutput) ToRouteArrayOutputWithContext(ctx context.Context) RouteArrayOutput {
	return o
}

func (o RouteArrayOutput) Index(i pulumi.IntInput) RouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Route {
		return vs[0].([]Route)[vs[1].(int)]
	}).(RouteOutput)
}

// Route - Route resource.
type RouteResponse struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// Name - name of the subnet
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// Route - Route resource.
type RouteResponseOutput struct{ *pulumi.OutputState }

func (RouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (o RouteResponseOutput) ToRouteResponseOutput() RouteResponseOutput {
	return o
}

func (o RouteResponseOutput) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// Name - name of the subnet
func (o RouteResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type RouteResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteResponse)(nil)).Elem()
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutput() RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutputWithContext(ctx context.Context) RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) Index(i pulumi.IntInput) RouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteResponse {
		return vs[0].([]RouteResponse)[vs[1].(int)]
	}).(RouteResponseOutput)
}

// Route table resource.
type RouteTable struct {
	// Collection of routes contained within a route table.
	Routes []Route `pulumi:"routes"`
}

// RouteTableInput is an input type that accepts RouteTableArgs and RouteTableOutput values.
// You can construct a concrete instance of `RouteTableInput` via:
//
//	RouteTableArgs{...}
type RouteTableInput interface {
	pulumi.Input

	ToRouteTableOutput() RouteTableOutput
	ToRouteTableOutputWithContext(context.Context) RouteTableOutput
}

// Route table resource.
type RouteTableArgs struct {
	// Collection of routes contained within a route table.
	Routes RouteArrayInput `pulumi:"routes"`
}

func (RouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTable)(nil)).Elem()
}

func (i RouteTableArgs) ToRouteTableOutput() RouteTableOutput {
	return i.ToRouteTableOutputWithContext(context.Background())
}

func (i RouteTableArgs) ToRouteTableOutputWithContext(ctx context.Context) RouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableOutput)
}

func (i RouteTableArgs) ToRouteTablePtrOutput() RouteTablePtrOutput {
	return i.ToRouteTablePtrOutputWithContext(context.Background())
}

func (i RouteTableArgs) ToRouteTablePtrOutputWithContext(ctx context.Context) RouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableOutput).ToRouteTablePtrOutputWithContext(ctx)
}

// RouteTablePtrInput is an input type that accepts RouteTableArgs, RouteTablePtr and RouteTablePtrOutput values.
// You can construct a concrete instance of `RouteTablePtrInput` via:
//
//	        RouteTableArgs{...}
//
//	or:
//
//	        nil
type RouteTablePtrInput interface {
	pulumi.Input

	ToRouteTablePtrOutput() RouteTablePtrOutput
	ToRouteTablePtrOutputWithContext(context.Context) RouteTablePtrOutput
}

type routeTablePtrType RouteTableArgs

func RouteTablePtr(v *RouteTableArgs) RouteTablePtrInput {
	return (*routeTablePtrType)(v)
}

func (*routeTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTable)(nil)).Elem()
}

func (i *routeTablePtrType) ToRouteTablePtrOutput() RouteTablePtrOutput {
	return i.ToRouteTablePtrOutputWithContext(context.Background())
}

func (i *routeTablePtrType) ToRouteTablePtrOutputWithContext(ctx context.Context) RouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablePtrOutput)
}

// Route table resource.
type RouteTableOutput struct{ *pulumi.OutputState }

func (RouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTable)(nil)).Elem()
}

func (o RouteTableOutput) ToRouteTableOutput() RouteTableOutput {
	return o
}

func (o RouteTableOutput) ToRouteTableOutputWithContext(ctx context.Context) RouteTableOutput {
	return o
}

func (o RouteTableOutput) ToRouteTablePtrOutput() RouteTablePtrOutput {
	return o.ToRouteTablePtrOutputWithContext(context.Background())
}

func (o RouteTableOutput) ToRouteTablePtrOutputWithContext(ctx context.Context) RouteTablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteTable) *RouteTable {
		return &v
	}).(RouteTablePtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableOutput) Routes() RouteArrayOutput {
	return o.ApplyT(func(v RouteTable) []Route { return v.Routes }).(RouteArrayOutput)
}

type RouteTablePtrOutput struct{ *pulumi.OutputState }

func (RouteTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTable)(nil)).Elem()
}

func (o RouteTablePtrOutput) ToRouteTablePtrOutput() RouteTablePtrOutput {
	return o
}

func (o RouteTablePtrOutput) ToRouteTablePtrOutputWithContext(ctx context.Context) RouteTablePtrOutput {
	return o
}

func (o RouteTablePtrOutput) Elem() RouteTableOutput {
	return o.ApplyT(func(v *RouteTable) RouteTable {
		if v != nil {
			return *v
		}
		var ret RouteTable
		return ret
	}).(RouteTableOutput)
}

// Collection of routes contained within a route table.
func (o RouteTablePtrOutput) Routes() RouteArrayOutput {
	return o.ApplyT(func(v *RouteTable) []Route {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteArrayOutput)
}

// Route table resource.
type RouteTableResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource name.
	Name string `pulumi:"name"`
	// Collection of routes contained within a route table.
	Routes []RouteResponse `pulumi:"routes"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Route table resource.
type RouteTableResponseOutput struct{ *pulumi.OutputState }

func (RouteTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutput() RouteTableResponseOutput {
	return o
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutputWithContext(ctx context.Context) RouteTableResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource name.
func (o RouteTableResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableResponseOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v RouteTableResponse) []RouteResponse { return v.Routes }).(RouteResponseArrayOutput)
}

// Resource type.
func (o RouteTableResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RouteTableResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) Elem() RouteTableResponseOutput {
	return o.ApplyT(func(v *RouteTableResponse) RouteTableResponse {
		if v != nil {
			return *v
		}
		var ret RouteTableResponse
		return ret
	}).(RouteTableResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableResponsePtrOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableResponse) []RouteResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteResponseArrayOutput)
}

// Resource type.
func (o RouteTableResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// SSH configuration for Linux based VMs running on Azure
type SshConfiguration struct {
	// The list of SSH public keys used to authenticate with linux based VMs.
	PublicKeys []SshPublicKey `pulumi:"publicKeys"`
}

// SshConfigurationInput is an input type that accepts SshConfigurationArgs and SshConfigurationOutput values.
// You can construct a concrete instance of `SshConfigurationInput` via:
//
//	SshConfigurationArgs{...}
type SshConfigurationInput interface {
	pulumi.Input

	ToSshConfigurationOutput() SshConfigurationOutput
	ToSshConfigurationOutputWithContext(context.Context) SshConfigurationOutput
}

// SSH configuration for Linux based VMs running on Azure
type SshConfigurationArgs struct {
	// The list of SSH public keys used to authenticate with linux based VMs.
	PublicKeys SshPublicKeyArrayInput `pulumi:"publicKeys"`
}

func (SshConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshConfiguration)(nil)).Elem()
}

func (i SshConfigurationArgs) ToSshConfigurationOutput() SshConfigurationOutput {
	return i.ToSshConfigurationOutputWithContext(context.Background())
}

func (i SshConfigurationArgs) ToSshConfigurationOutputWithContext(ctx context.Context) SshConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationOutput)
}

func (i SshConfigurationArgs) ToSshConfigurationPtrOutput() SshConfigurationPtrOutput {
	return i.ToSshConfigurationPtrOutputWithContext(context.Background())
}

func (i SshConfigurationArgs) ToSshConfigurationPtrOutputWithContext(ctx context.Context) SshConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationOutput).ToSshConfigurationPtrOutputWithContext(ctx)
}

// SshConfigurationPtrInput is an input type that accepts SshConfigurationArgs, SshConfigurationPtr and SshConfigurationPtrOutput values.
// You can construct a concrete instance of `SshConfigurationPtrInput` via:
//
//	        SshConfigurationArgs{...}
//
//	or:
//
//	        nil
type SshConfigurationPtrInput interface {
	pulumi.Input

	ToSshConfigurationPtrOutput() SshConfigurationPtrOutput
	ToSshConfigurationPtrOutputWithContext(context.Context) SshConfigurationPtrOutput
}

type sshConfigurationPtrType SshConfigurationArgs

func SshConfigurationPtr(v *SshConfigurationArgs) SshConfigurationPtrInput {
	return (*sshConfigurationPtrType)(v)
}

func (*sshConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConfiguration)(nil)).Elem()
}

func (i *sshConfigurationPtrType) ToSshConfigurationPtrOutput() SshConfigurationPtrOutput {
	return i.ToSshConfigurationPtrOutputWithContext(context.Background())
}

func (i *sshConfigurationPtrType) ToSshConfigurationPtrOutputWithContext(ctx context.Context) SshConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshConfigurationPtrOutput)
}

// SSH configuration for Linux based VMs running on Azure
type SshConfigurationOutput struct{ *pulumi.OutputState }

func (SshConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshConfiguration)(nil)).Elem()
}

func (o SshConfigurationOutput) ToSshConfigurationOutput() SshConfigurationOutput {
	return o
}

func (o SshConfigurationOutput) ToSshConfigurationOutputWithContext(ctx context.Context) SshConfigurationOutput {
	return o
}

func (o SshConfigurationOutput) ToSshConfigurationPtrOutput() SshConfigurationPtrOutput {
	return o.ToSshConfigurationPtrOutputWithContext(context.Background())
}

func (o SshConfigurationOutput) ToSshConfigurationPtrOutputWithContext(ctx context.Context) SshConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SshConfiguration) *SshConfiguration {
		return &v
	}).(SshConfigurationPtrOutput)
}

// The list of SSH public keys used to authenticate with linux based VMs.
func (o SshConfigurationOutput) PublicKeys() SshPublicKeyArrayOutput {
	return o.ApplyT(func(v SshConfiguration) []SshPublicKey { return v.PublicKeys }).(SshPublicKeyArrayOutput)
}

type SshConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SshConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConfiguration)(nil)).Elem()
}

func (o SshConfigurationPtrOutput) ToSshConfigurationPtrOutput() SshConfigurationPtrOutput {
	return o
}

func (o SshConfigurationPtrOutput) ToSshConfigurationPtrOutputWithContext(ctx context.Context) SshConfigurationPtrOutput {
	return o
}

func (o SshConfigurationPtrOutput) Elem() SshConfigurationOutput {
	return o.ApplyT(func(v *SshConfiguration) SshConfiguration {
		if v != nil {
			return *v
		}
		var ret SshConfiguration
		return ret
	}).(SshConfigurationOutput)
}

// The list of SSH public keys used to authenticate with linux based VMs.
func (o SshConfigurationPtrOutput) PublicKeys() SshPublicKeyArrayOutput {
	return o.ApplyT(func(v *SshConfiguration) []SshPublicKey {
		if v == nil {
			return nil
		}
		return v.PublicKeys
	}).(SshPublicKeyArrayOutput)
}

// SSH configuration for Linux based VMs running on Azure
type SshConfigurationResponse struct {
	// The list of SSH public keys used to authenticate with linux based VMs.
	PublicKeys []SshPublicKeyResponse `pulumi:"publicKeys"`
}

// SSH configuration for Linux based VMs running on Azure
type SshConfigurationResponseOutput struct{ *pulumi.OutputState }

func (SshConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshConfigurationResponse)(nil)).Elem()
}

func (o SshConfigurationResponseOutput) ToSshConfigurationResponseOutput() SshConfigurationResponseOutput {
	return o
}

func (o SshConfigurationResponseOutput) ToSshConfigurationResponseOutputWithContext(ctx context.Context) SshConfigurationResponseOutput {
	return o
}

// The list of SSH public keys used to authenticate with linux based VMs.
func (o SshConfigurationResponseOutput) PublicKeys() SshPublicKeyResponseArrayOutput {
	return o.ApplyT(func(v SshConfigurationResponse) []SshPublicKeyResponse { return v.PublicKeys }).(SshPublicKeyResponseArrayOutput)
}

type SshConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (SshConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshConfigurationResponse)(nil)).Elem()
}

func (o SshConfigurationResponsePtrOutput) ToSshConfigurationResponsePtrOutput() SshConfigurationResponsePtrOutput {
	return o
}

func (o SshConfigurationResponsePtrOutput) ToSshConfigurationResponsePtrOutputWithContext(ctx context.Context) SshConfigurationResponsePtrOutput {
	return o
}

func (o SshConfigurationResponsePtrOutput) Elem() SshConfigurationResponseOutput {
	return o.ApplyT(func(v *SshConfigurationResponse) SshConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret SshConfigurationResponse
		return ret
	}).(SshConfigurationResponseOutput)
}

// The list of SSH public keys used to authenticate with linux based VMs.
func (o SshConfigurationResponsePtrOutput) PublicKeys() SshPublicKeyResponseArrayOutput {
	return o.ApplyT(func(v *SshConfigurationResponse) []SshPublicKeyResponse {
		if v == nil {
			return nil
		}
		return v.PublicKeys
	}).(SshPublicKeyResponseArrayOutput)
}

// Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
type SshPublicKey struct {
	// SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
	KeyData *string `pulumi:"keyData"`
	// Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
	Path *string `pulumi:"path"`
}

// SshPublicKeyInput is an input type that accepts SshPublicKeyArgs and SshPublicKeyOutput values.
// You can construct a concrete instance of `SshPublicKeyInput` via:
//
//	SshPublicKeyArgs{...}
type SshPublicKeyInput interface {
	pulumi.Input

	ToSshPublicKeyOutput() SshPublicKeyOutput
	ToSshPublicKeyOutputWithContext(context.Context) SshPublicKeyOutput
}

// Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
type SshPublicKeyArgs struct {
	// SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
	KeyData pulumi.StringPtrInput `pulumi:"keyData"`
	// Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (SshPublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKey)(nil)).Elem()
}

func (i SshPublicKeyArgs) ToSshPublicKeyOutput() SshPublicKeyOutput {
	return i.ToSshPublicKeyOutputWithContext(context.Background())
}

func (i SshPublicKeyArgs) ToSshPublicKeyOutputWithContext(ctx context.Context) SshPublicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshPublicKeyOutput)
}

// SshPublicKeyArrayInput is an input type that accepts SshPublicKeyArray and SshPublicKeyArrayOutput values.
// You can construct a concrete instance of `SshPublicKeyArrayInput` via:
//
//	SshPublicKeyArray{ SshPublicKeyArgs{...} }
type SshPublicKeyArrayInput interface {
	pulumi.Input

	ToSshPublicKeyArrayOutput() SshPublicKeyArrayOutput
	ToSshPublicKeyArrayOutputWithContext(context.Context) SshPublicKeyArrayOutput
}

type SshPublicKeyArray []SshPublicKeyInput

func (SshPublicKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshPublicKey)(nil)).Elem()
}

func (i SshPublicKeyArray) ToSshPublicKeyArrayOutput() SshPublicKeyArrayOutput {
	return i.ToSshPublicKeyArrayOutputWithContext(context.Background())
}

func (i SshPublicKeyArray) ToSshPublicKeyArrayOutputWithContext(ctx context.Context) SshPublicKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshPublicKeyArrayOutput)
}

// Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
type SshPublicKeyOutput struct{ *pulumi.OutputState }

func (SshPublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKey)(nil)).Elem()
}

func (o SshPublicKeyOutput) ToSshPublicKeyOutput() SshPublicKeyOutput {
	return o
}

func (o SshPublicKeyOutput) ToSshPublicKeyOutputWithContext(ctx context.Context) SshPublicKeyOutput {
	return o
}

// SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
func (o SshPublicKeyOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKey) *string { return v.KeyData }).(pulumi.StringPtrOutput)
}

// Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
func (o SshPublicKeyOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKey) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type SshPublicKeyArrayOutput struct{ *pulumi.OutputState }

func (SshPublicKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshPublicKey)(nil)).Elem()
}

func (o SshPublicKeyArrayOutput) ToSshPublicKeyArrayOutput() SshPublicKeyArrayOutput {
	return o
}

func (o SshPublicKeyArrayOutput) ToSshPublicKeyArrayOutputWithContext(ctx context.Context) SshPublicKeyArrayOutput {
	return o
}

func (o SshPublicKeyArrayOutput) Index(i pulumi.IntInput) SshPublicKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SshPublicKey {
		return vs[0].([]SshPublicKey)[vs[1].(int)]
	}).(SshPublicKeyOutput)
}

// Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
type SshPublicKeyResponse struct {
	// SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
	KeyData *string `pulumi:"keyData"`
	// Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
	Path *string `pulumi:"path"`
}

// Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
type SshPublicKeyResponseOutput struct{ *pulumi.OutputState }

func (SshPublicKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKeyResponse)(nil)).Elem()
}

func (o SshPublicKeyResponseOutput) ToSshPublicKeyResponseOutput() SshPublicKeyResponseOutput {
	return o
}

func (o SshPublicKeyResponseOutput) ToSshPublicKeyResponseOutputWithContext(ctx context.Context) SshPublicKeyResponseOutput {
	return o
}

// SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
func (o SshPublicKeyResponseOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKeyResponse) *string { return v.KeyData }).(pulumi.StringPtrOutput)
}

// Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
func (o SshPublicKeyResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SshPublicKeyResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type SshPublicKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (SshPublicKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SshPublicKeyResponse)(nil)).Elem()
}

func (o SshPublicKeyResponseArrayOutput) ToSshPublicKeyResponseArrayOutput() SshPublicKeyResponseArrayOutput {
	return o
}

func (o SshPublicKeyResponseArrayOutput) ToSshPublicKeyResponseArrayOutputWithContext(ctx context.Context) SshPublicKeyResponseArrayOutput {
	return o
}

func (o SshPublicKeyResponseArrayOutput) Index(i pulumi.IntInput) SshPublicKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SshPublicKeyResponse {
		return vs[0].([]SshPublicKeyResponse)[vs[1].(int)]
	}).(SshPublicKeyResponseOutput)
}

// Storage container provisioning status
type StorageContainerStatusProvisioningStatusResponse struct {
	// The ID of the operation performed on the storage container
	OperationId *string `pulumi:"operationId"`
	// The status of the operation performed on the storage container [Succeeded, Failed, InProgress]
	Status string `pulumi:"status"`
}

// Storage container provisioning status
type StorageContainerStatusProvisioningStatusResponseOutput struct{ *pulumi.OutputState }

func (StorageContainerStatusProvisioningStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageContainerStatusProvisioningStatusResponse)(nil)).Elem()
}

func (o StorageContainerStatusProvisioningStatusResponseOutput) ToStorageContainerStatusProvisioningStatusResponseOutput() StorageContainerStatusProvisioningStatusResponseOutput {
	return o
}

func (o StorageContainerStatusProvisioningStatusResponseOutput) ToStorageContainerStatusProvisioningStatusResponseOutputWithContext(ctx context.Context) StorageContainerStatusProvisioningStatusResponseOutput {
	return o
}

// The ID of the operation performed on the storage container
func (o StorageContainerStatusProvisioningStatusResponseOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageContainerStatusProvisioningStatusResponse) *string { return v.OperationId }).(pulumi.StringPtrOutput)
}

// The status of the operation performed on the storage container [Succeeded, Failed, InProgress]
func (o StorageContainerStatusProvisioningStatusResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v StorageContainerStatusProvisioningStatusResponse) string { return v.Status }).(pulumi.StringOutput)
}

type StorageContainerStatusProvisioningStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageContainerStatusProvisioningStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageContainerStatusProvisioningStatusResponse)(nil)).Elem()
}

func (o StorageContainerStatusProvisioningStatusResponsePtrOutput) ToStorageContainerStatusProvisioningStatusResponsePtrOutput() StorageContainerStatusProvisioningStatusResponsePtrOutput {
	return o
}

func (o StorageContainerStatusProvisioningStatusResponsePtrOutput) ToStorageContainerStatusProvisioningStatusResponsePtrOutputWithContext(ctx context.Context) StorageContainerStatusProvisioningStatusResponsePtrOutput {
	return o
}

func (o StorageContainerStatusProvisioningStatusResponsePtrOutput) Elem() StorageContainerStatusProvisioningStatusResponseOutput {
	return o.ApplyT(func(v *StorageContainerStatusProvisioningStatusResponse) StorageContainerStatusProvisioningStatusResponse {
		if v != nil {
			return *v
		}
		var ret StorageContainerStatusProvisioningStatusResponse
		return ret
	}).(StorageContainerStatusProvisioningStatusResponseOutput)
}

// The ID of the operation performed on the storage container
func (o StorageContainerStatusProvisioningStatusResponsePtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageContainerStatusProvisioningStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperationId
	}).(pulumi.StringPtrOutput)
}

// The status of the operation performed on the storage container [Succeeded, Failed, InProgress]
func (o StorageContainerStatusProvisioningStatusResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageContainerStatusProvisioningStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The observed state of storage containers
type StorageContainerStatusResponse struct {
	// Amount of space available on the disk in MB
	AvailableSizeMB *float64 `pulumi:"availableSizeMB"`
	// Total size of the disk in MB
	ContainerSizeMB *float64 `pulumi:"containerSizeMB"`
	// StorageContainer provisioning error code
	ErrorCode *string `pulumi:"errorCode"`
	// Descriptive error message
	ErrorMessage *string `pulumi:"errorMessage"`
	// Storage container's provisioning status
	ProvisioningStatus *StorageContainerStatusProvisioningStatusResponse `pulumi:"provisioningStatus"`
}

// The observed state of storage containers
type StorageContainerStatusResponseOutput struct{ *pulumi.OutputState }

func (StorageContainerStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageContainerStatusResponse)(nil)).Elem()
}

func (o StorageContainerStatusResponseOutput) ToStorageContainerStatusResponseOutput() StorageContainerStatusResponseOutput {
	return o
}

func (o StorageContainerStatusResponseOutput) ToStorageContainerStatusResponseOutputWithContext(ctx context.Context) StorageContainerStatusResponseOutput {
	return o
}

// Amount of space available on the disk in MB
func (o StorageContainerStatusResponseOutput) AvailableSizeMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StorageContainerStatusResponse) *float64 { return v.AvailableSizeMB }).(pulumi.Float64PtrOutput)
}

// Total size of the disk in MB
func (o StorageContainerStatusResponseOutput) ContainerSizeMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StorageContainerStatusResponse) *float64 { return v.ContainerSizeMB }).(pulumi.Float64PtrOutput)
}

// StorageContainer provisioning error code
func (o StorageContainerStatusResponseOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageContainerStatusResponse) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// Descriptive error message
func (o StorageContainerStatusResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageContainerStatusResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Storage container's provisioning status
func (o StorageContainerStatusResponseOutput) ProvisioningStatus() StorageContainerStatusProvisioningStatusResponsePtrOutput {
	return o.ApplyT(func(v StorageContainerStatusResponse) *StorageContainerStatusProvisioningStatusResponse {
		return v.ProvisioningStatus
	}).(StorageContainerStatusProvisioningStatusResponsePtrOutput)
}

// Properties of the subnet.
type Subnet struct {
	// The address prefix for the subnet: Cidr for this subnet - IPv4, IPv6.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// IPAllocationMethod - The IP address allocation method. Possible values include: 'Static', 'Dynamic'
	IpAllocationMethod *string `pulumi:"ipAllocationMethod"`
	// IPConfigurationReferences - list of IPConfigurationReferences
	IpConfigurationReferences []SubnetIpConfigurationReference `pulumi:"ipConfigurationReferences"`
	// network associated pool of IP Addresses
	IpPools []IPPool `pulumi:"ipPools"`
	// Name - The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// NetworkSecurityGroup - Network Security Group attached to the logical network.
	NetworkSecurityGroup *NetworkSecurityGroupArmReference `pulumi:"networkSecurityGroup"`
	// Route table resource.
	RouteTable *RouteTable `pulumi:"routeTable"`
	// Vlan to use for the subnet
	Vlan *int `pulumi:"vlan"`
}

// SubnetInput is an input type that accepts SubnetArgs and SubnetOutput values.
// You can construct a concrete instance of `SubnetInput` via:
//
//	SubnetArgs{...}
type SubnetInput interface {
	pulumi.Input

	ToSubnetOutput() SubnetOutput
	ToSubnetOutputWithContext(context.Context) SubnetOutput
}

// Properties of the subnet.
type SubnetArgs struct {
	// The address prefix for the subnet: Cidr for this subnet - IPv4, IPv6.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// IPAllocationMethod - The IP address allocation method. Possible values include: 'Static', 'Dynamic'
	IpAllocationMethod pulumi.StringPtrInput `pulumi:"ipAllocationMethod"`
	// IPConfigurationReferences - list of IPConfigurationReferences
	IpConfigurationReferences SubnetIpConfigurationReferenceArrayInput `pulumi:"ipConfigurationReferences"`
	// network associated pool of IP Addresses
	IpPools IPPoolArrayInput `pulumi:"ipPools"`
	// Name - The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// NetworkSecurityGroup - Network Security Group attached to the logical network.
	NetworkSecurityGroup NetworkSecurityGroupArmReferencePtrInput `pulumi:"networkSecurityGroup"`
	// Route table resource.
	RouteTable RouteTablePtrInput `pulumi:"routeTable"`
	// Vlan to use for the subnet
	Vlan pulumi.IntPtrInput `pulumi:"vlan"`
}

func (SubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Subnet)(nil)).Elem()
}

func (i SubnetArgs) ToSubnetOutput() SubnetOutput {
	return i.ToSubnetOutputWithContext(context.Background())
}

func (i SubnetArgs) ToSubnetOutputWithContext(ctx context.Context) SubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetOutput)
}

// SubnetArrayInput is an input type that accepts SubnetArray and SubnetArrayOutput values.
// You can construct a concrete instance of `SubnetArrayInput` via:
//
//	SubnetArray{ SubnetArgs{...} }
type SubnetArrayInput interface {
	pulumi.Input

	ToSubnetArrayOutput() SubnetArrayOutput
	ToSubnetArrayOutputWithContext(context.Context) SubnetArrayOutput
}

type SubnetArray []SubnetInput

func (SubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Subnet)(nil)).Elem()
}

func (i SubnetArray) ToSubnetArrayOutput() SubnetArrayOutput {
	return i.ToSubnetArrayOutputWithContext(context.Background())
}

func (i SubnetArray) ToSubnetArrayOutputWithContext(ctx context.Context) SubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetArrayOutput)
}

// Properties of the subnet.
type SubnetOutput struct{ *pulumi.OutputState }

func (SubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Subnet)(nil)).Elem()
}

func (o SubnetOutput) ToSubnetOutput() SubnetOutput {
	return o
}

func (o SubnetOutput) ToSubnetOutputWithContext(ctx context.Context) SubnetOutput {
	return o
}

// The address prefix for the subnet: Cidr for this subnet - IPv4, IPv6.
func (o SubnetOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Subnet) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// IPAllocationMethod - The IP address allocation method. Possible values include: 'Static', 'Dynamic'
func (o SubnetOutput) IpAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.IpAllocationMethod }).(pulumi.StringPtrOutput)
}

// IPConfigurationReferences - list of IPConfigurationReferences
func (o SubnetOutput) IpConfigurationReferences() SubnetIpConfigurationReferenceArrayOutput {
	return o.ApplyT(func(v Subnet) []SubnetIpConfigurationReference { return v.IpConfigurationReferences }).(SubnetIpConfigurationReferenceArrayOutput)
}

// network associated pool of IP Addresses
func (o SubnetOutput) IpPools() IPPoolArrayOutput {
	return o.ApplyT(func(v Subnet) []IPPool { return v.IpPools }).(IPPoolArrayOutput)
}

// Name - The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Subnet) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// NetworkSecurityGroup - Network Security Group attached to the logical network.
func (o SubnetOutput) NetworkSecurityGroup() NetworkSecurityGroupArmReferencePtrOutput {
	return o.ApplyT(func(v Subnet) *NetworkSecurityGroupArmReference { return v.NetworkSecurityGroup }).(NetworkSecurityGroupArmReferencePtrOutput)
}

// Route table resource.
func (o SubnetOutput) RouteTable() RouteTablePtrOutput {
	return o.ApplyT(func(v Subnet) *RouteTable { return v.RouteTable }).(RouteTablePtrOutput)
}

// Vlan to use for the subnet
func (o SubnetOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Subnet) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SubnetArrayOutput struct{ *pulumi.OutputState }

func (SubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Subnet)(nil)).Elem()
}

func (o SubnetArrayOutput) ToSubnetArrayOutput() SubnetArrayOutput {
	return o
}

func (o SubnetArrayOutput) ToSubnetArrayOutputWithContext(ctx context.Context) SubnetArrayOutput {
	return o
}

func (o SubnetArrayOutput) Index(i pulumi.IntInput) SubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Subnet {
		return vs[0].([]Subnet)[vs[1].(int)]
	}).(SubnetOutput)
}

// The ARM ID for a Network Interface.
type SubnetIpConfigurationReference struct {
	// The ARM ID for a Network Interface.
	Id *string `pulumi:"id"`
}

// SubnetIpConfigurationReferenceInput is an input type that accepts SubnetIpConfigurationReferenceArgs and SubnetIpConfigurationReferenceOutput values.
// You can construct a concrete instance of `SubnetIpConfigurationReferenceInput` via:
//
//	SubnetIpConfigurationReferenceArgs{...}
type SubnetIpConfigurationReferenceInput interface {
	pulumi.Input

	ToSubnetIpConfigurationReferenceOutput() SubnetIpConfigurationReferenceOutput
	ToSubnetIpConfigurationReferenceOutputWithContext(context.Context) SubnetIpConfigurationReferenceOutput
}

// The ARM ID for a Network Interface.
type SubnetIpConfigurationReferenceArgs struct {
	// The ARM ID for a Network Interface.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubnetIpConfigurationReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetIpConfigurationReference)(nil)).Elem()
}

func (i SubnetIpConfigurationReferenceArgs) ToSubnetIpConfigurationReferenceOutput() SubnetIpConfigurationReferenceOutput {
	return i.ToSubnetIpConfigurationReferenceOutputWithContext(context.Background())
}

func (i SubnetIpConfigurationReferenceArgs) ToSubnetIpConfigurationReferenceOutputWithContext(ctx context.Context) SubnetIpConfigurationReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetIpConfigurationReferenceOutput)
}

// SubnetIpConfigurationReferenceArrayInput is an input type that accepts SubnetIpConfigurationReferenceArray and SubnetIpConfigurationReferenceArrayOutput values.
// You can construct a concrete instance of `SubnetIpConfigurationReferenceArrayInput` via:
//
//	SubnetIpConfigurationReferenceArray{ SubnetIpConfigurationReferenceArgs{...} }
type SubnetIpConfigurationReferenceArrayInput interface {
	pulumi.Input

	ToSubnetIpConfigurationReferenceArrayOutput() SubnetIpConfigurationReferenceArrayOutput
	ToSubnetIpConfigurationReferenceArrayOutputWithContext(context.Context) SubnetIpConfigurationReferenceArrayOutput
}

type SubnetIpConfigurationReferenceArray []SubnetIpConfigurationReferenceInput

func (SubnetIpConfigurationReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetIpConfigurationReference)(nil)).Elem()
}

func (i SubnetIpConfigurationReferenceArray) ToSubnetIpConfigurationReferenceArrayOutput() SubnetIpConfigurationReferenceArrayOutput {
	return i.ToSubnetIpConfigurationReferenceArrayOutputWithContext(context.Background())
}

func (i SubnetIpConfigurationReferenceArray) ToSubnetIpConfigurationReferenceArrayOutputWithContext(ctx context.Context) SubnetIpConfigurationReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetIpConfigurationReferenceArrayOutput)
}

// The ARM ID for a Network Interface.
type SubnetIpConfigurationReferenceOutput struct{ *pulumi.OutputState }

func (SubnetIpConfigurationReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetIpConfigurationReference)(nil)).Elem()
}

func (o SubnetIpConfigurationReferenceOutput) ToSubnetIpConfigurationReferenceOutput() SubnetIpConfigurationReferenceOutput {
	return o
}

func (o SubnetIpConfigurationReferenceOutput) ToSubnetIpConfigurationReferenceOutputWithContext(ctx context.Context) SubnetIpConfigurationReferenceOutput {
	return o
}

// The ARM ID for a Network Interface.
func (o SubnetIpConfigurationReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetIpConfigurationReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubnetIpConfigurationReferenceArrayOutput struct{ *pulumi.OutputState }

func (SubnetIpConfigurationReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetIpConfigurationReference)(nil)).Elem()
}

func (o SubnetIpConfigurationReferenceArrayOutput) ToSubnetIpConfigurationReferenceArrayOutput() SubnetIpConfigurationReferenceArrayOutput {
	return o
}

func (o SubnetIpConfigurationReferenceArrayOutput) ToSubnetIpConfigurationReferenceArrayOutputWithContext(ctx context.Context) SubnetIpConfigurationReferenceArrayOutput {
	return o
}

func (o SubnetIpConfigurationReferenceArrayOutput) Index(i pulumi.IntInput) SubnetIpConfigurationReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetIpConfigurationReference {
		return vs[0].([]SubnetIpConfigurationReference)[vs[1].(int)]
	}).(SubnetIpConfigurationReferenceOutput)
}

// The ARM ID for a Network Interface.
type SubnetIpConfigurationReferenceResponse struct {
	// The ARM ID for a Network Interface.
	Id *string `pulumi:"id"`
}

// The ARM ID for a Network Interface.
type SubnetIpConfigurationReferenceResponseOutput struct{ *pulumi.OutputState }

func (SubnetIpConfigurationReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetIpConfigurationReferenceResponse)(nil)).Elem()
}

func (o SubnetIpConfigurationReferenceResponseOutput) ToSubnetIpConfigurationReferenceResponseOutput() SubnetIpConfigurationReferenceResponseOutput {
	return o
}

func (o SubnetIpConfigurationReferenceResponseOutput) ToSubnetIpConfigurationReferenceResponseOutputWithContext(ctx context.Context) SubnetIpConfigurationReferenceResponseOutput {
	return o
}

// The ARM ID for a Network Interface.
func (o SubnetIpConfigurationReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetIpConfigurationReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubnetIpConfigurationReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetIpConfigurationReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetIpConfigurationReferenceResponse)(nil)).Elem()
}

func (o SubnetIpConfigurationReferenceResponseArrayOutput) ToSubnetIpConfigurationReferenceResponseArrayOutput() SubnetIpConfigurationReferenceResponseArrayOutput {
	return o
}

func (o SubnetIpConfigurationReferenceResponseArrayOutput) ToSubnetIpConfigurationReferenceResponseArrayOutputWithContext(ctx context.Context) SubnetIpConfigurationReferenceResponseArrayOutput {
	return o
}

func (o SubnetIpConfigurationReferenceResponseArrayOutput) Index(i pulumi.IntInput) SubnetIpConfigurationReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetIpConfigurationReferenceResponse {
		return vs[0].([]SubnetIpConfigurationReferenceResponse)[vs[1].(int)]
	}).(SubnetIpConfigurationReferenceResponseOutput)
}

// Properties of the subnet.
type SubnetResponse struct {
	// The address prefix for the subnet: Cidr for this subnet - IPv4, IPv6.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// IPAllocationMethod - The IP address allocation method. Possible values include: 'Static', 'Dynamic'
	IpAllocationMethod *string `pulumi:"ipAllocationMethod"`
	// IPConfigurationReferences - list of IPConfigurationReferences
	IpConfigurationReferences []SubnetIpConfigurationReferenceResponse `pulumi:"ipConfigurationReferences"`
	// network associated pool of IP Addresses
	IpPools []IPPoolResponse `pulumi:"ipPools"`
	// Name - The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// NetworkSecurityGroup - Network Security Group attached to the logical network.
	NetworkSecurityGroup *NetworkSecurityGroupArmReferenceResponse `pulumi:"networkSecurityGroup"`
	// Route table resource.
	RouteTable *RouteTableResponse `pulumi:"routeTable"`
	// Vlan to use for the subnet
	Vlan *int `pulumi:"vlan"`
}

// Properties of the subnet.
type SubnetResponseOutput struct{ *pulumi.OutputState }

func (SubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseOutput) ToSubnetResponseOutput() SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return o
}

// The address prefix for the subnet: Cidr for this subnet - IPv4, IPv6.
func (o SubnetResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// IPAllocationMethod - The IP address allocation method. Possible values include: 'Static', 'Dynamic'
func (o SubnetResponseOutput) IpAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.IpAllocationMethod }).(pulumi.StringPtrOutput)
}

// IPConfigurationReferences - list of IPConfigurationReferences
func (o SubnetResponseOutput) IpConfigurationReferences() SubnetIpConfigurationReferenceResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []SubnetIpConfigurationReferenceResponse { return v.IpConfigurationReferences }).(SubnetIpConfigurationReferenceResponseArrayOutput)
}

// network associated pool of IP Addresses
func (o SubnetResponseOutput) IpPools() IPPoolResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []IPPoolResponse { return v.IpPools }).(IPPoolResponseArrayOutput)
}

// Name - The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// NetworkSecurityGroup - Network Security Group attached to the logical network.
func (o SubnetResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupArmReferenceResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *NetworkSecurityGroupArmReferenceResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupArmReferenceResponsePtrOutput)
}

// Route table resource.
func (o SubnetResponseOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *RouteTableResponse { return v.RouteTable }).(RouteTableResponsePtrOutput)
}

// Vlan to use for the subnet
func (o SubnetResponseOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type SubnetResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) Index(i pulumi.IntInput) SubnetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetResponse {
		return vs[0].([]SubnetResponse)[vs[1].(int)]
	}).(SubnetResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// The ARM ID for a Virtual Hard Disk.
type VirtualHardDiskArmReference struct {
	// The ARM ID for a Virtual Hard Disk.
	Id *string `pulumi:"id"`
}

// VirtualHardDiskArmReferenceInput is an input type that accepts VirtualHardDiskArmReferenceArgs and VirtualHardDiskArmReferenceOutput values.
// You can construct a concrete instance of `VirtualHardDiskArmReferenceInput` via:
//
//	VirtualHardDiskArmReferenceArgs{...}
type VirtualHardDiskArmReferenceInput interface {
	pulumi.Input

	ToVirtualHardDiskArmReferenceOutput() VirtualHardDiskArmReferenceOutput
	ToVirtualHardDiskArmReferenceOutputWithContext(context.Context) VirtualHardDiskArmReferenceOutput
}

// The ARM ID for a Virtual Hard Disk.
type VirtualHardDiskArmReferenceArgs struct {
	// The ARM ID for a Virtual Hard Disk.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (VirtualHardDiskArmReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHardDiskArmReference)(nil)).Elem()
}

func (i VirtualHardDiskArmReferenceArgs) ToVirtualHardDiskArmReferenceOutput() VirtualHardDiskArmReferenceOutput {
	return i.ToVirtualHardDiskArmReferenceOutputWithContext(context.Background())
}

func (i VirtualHardDiskArmReferenceArgs) ToVirtualHardDiskArmReferenceOutputWithContext(ctx context.Context) VirtualHardDiskArmReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHardDiskArmReferenceOutput)
}

// VirtualHardDiskArmReferenceArrayInput is an input type that accepts VirtualHardDiskArmReferenceArray and VirtualHardDiskArmReferenceArrayOutput values.
// You can construct a concrete instance of `VirtualHardDiskArmReferenceArrayInput` via:
//
//	VirtualHardDiskArmReferenceArray{ VirtualHardDiskArmReferenceArgs{...} }
type VirtualHardDiskArmReferenceArrayInput interface {
	pulumi.Input

	ToVirtualHardDiskArmReferenceArrayOutput() VirtualHardDiskArmReferenceArrayOutput
	ToVirtualHardDiskArmReferenceArrayOutputWithContext(context.Context) VirtualHardDiskArmReferenceArrayOutput
}

type VirtualHardDiskArmReferenceArray []VirtualHardDiskArmReferenceInput

func (VirtualHardDiskArmReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHardDiskArmReference)(nil)).Elem()
}

func (i VirtualHardDiskArmReferenceArray) ToVirtualHardDiskArmReferenceArrayOutput() VirtualHardDiskArmReferenceArrayOutput {
	return i.ToVirtualHardDiskArmReferenceArrayOutputWithContext(context.Background())
}

func (i VirtualHardDiskArmReferenceArray) ToVirtualHardDiskArmReferenceArrayOutputWithContext(ctx context.Context) VirtualHardDiskArmReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHardDiskArmReferenceArrayOutput)
}

// The ARM ID for a Virtual Hard Disk.
type VirtualHardDiskArmReferenceOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskArmReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHardDiskArmReference)(nil)).Elem()
}

func (o VirtualHardDiskArmReferenceOutput) ToVirtualHardDiskArmReferenceOutput() VirtualHardDiskArmReferenceOutput {
	return o
}

func (o VirtualHardDiskArmReferenceOutput) ToVirtualHardDiskArmReferenceOutputWithContext(ctx context.Context) VirtualHardDiskArmReferenceOutput {
	return o
}

// The ARM ID for a Virtual Hard Disk.
func (o VirtualHardDiskArmReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHardDiskArmReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type VirtualHardDiskArmReferenceArrayOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskArmReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHardDiskArmReference)(nil)).Elem()
}

func (o VirtualHardDiskArmReferenceArrayOutput) ToVirtualHardDiskArmReferenceArrayOutput() VirtualHardDiskArmReferenceArrayOutput {
	return o
}

func (o VirtualHardDiskArmReferenceArrayOutput) ToVirtualHardDiskArmReferenceArrayOutputWithContext(ctx context.Context) VirtualHardDiskArmReferenceArrayOutput {
	return o
}

func (o VirtualHardDiskArmReferenceArrayOutput) Index(i pulumi.IntInput) VirtualHardDiskArmReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHardDiskArmReference {
		return vs[0].([]VirtualHardDiskArmReference)[vs[1].(int)]
	}).(VirtualHardDiskArmReferenceOutput)
}

// The ARM ID for a Virtual Hard Disk.
type VirtualHardDiskArmReferenceResponse struct {
	// The ARM ID for a Virtual Hard Disk.
	Id *string `pulumi:"id"`
}

// The ARM ID for a Virtual Hard Disk.
type VirtualHardDiskArmReferenceResponseOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskArmReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHardDiskArmReferenceResponse)(nil)).Elem()
}

func (o VirtualHardDiskArmReferenceResponseOutput) ToVirtualHardDiskArmReferenceResponseOutput() VirtualHardDiskArmReferenceResponseOutput {
	return o
}

func (o VirtualHardDiskArmReferenceResponseOutput) ToVirtualHardDiskArmReferenceResponseOutputWithContext(ctx context.Context) VirtualHardDiskArmReferenceResponseOutput {
	return o
}

// The ARM ID for a Virtual Hard Disk.
func (o VirtualHardDiskArmReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHardDiskArmReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type VirtualHardDiskArmReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskArmReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHardDiskArmReferenceResponse)(nil)).Elem()
}

func (o VirtualHardDiskArmReferenceResponseArrayOutput) ToVirtualHardDiskArmReferenceResponseArrayOutput() VirtualHardDiskArmReferenceResponseArrayOutput {
	return o
}

func (o VirtualHardDiskArmReferenceResponseArrayOutput) ToVirtualHardDiskArmReferenceResponseArrayOutputWithContext(ctx context.Context) VirtualHardDiskArmReferenceResponseArrayOutput {
	return o
}

func (o VirtualHardDiskArmReferenceResponseArrayOutput) Index(i pulumi.IntInput) VirtualHardDiskArmReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHardDiskArmReferenceResponse {
		return vs[0].([]VirtualHardDiskArmReferenceResponse)[vs[1].(int)]
	}).(VirtualHardDiskArmReferenceResponseOutput)
}

// The download status of the virtual hard disk
type VirtualHardDiskDownloadStatusResponse struct {
	// The downloaded sized of the virtual hard disk in MB
	DownloadedSizeInMB *float64 `pulumi:"downloadedSizeInMB"`
}

// The download status of the virtual hard disk
type VirtualHardDiskDownloadStatusResponseOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskDownloadStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHardDiskDownloadStatusResponse)(nil)).Elem()
}

func (o VirtualHardDiskDownloadStatusResponseOutput) ToVirtualHardDiskDownloadStatusResponseOutput() VirtualHardDiskDownloadStatusResponseOutput {
	return o
}

func (o VirtualHardDiskDownloadStatusResponseOutput) ToVirtualHardDiskDownloadStatusResponseOutputWithContext(ctx context.Context) VirtualHardDiskDownloadStatusResponseOutput {
	return o
}

// The downloaded sized of the virtual hard disk in MB
func (o VirtualHardDiskDownloadStatusResponseOutput) DownloadedSizeInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualHardDiskDownloadStatusResponse) *float64 { return v.DownloadedSizeInMB }).(pulumi.Float64PtrOutput)
}

type VirtualHardDiskDownloadStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskDownloadStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHardDiskDownloadStatusResponse)(nil)).Elem()
}

func (o VirtualHardDiskDownloadStatusResponsePtrOutput) ToVirtualHardDiskDownloadStatusResponsePtrOutput() VirtualHardDiskDownloadStatusResponsePtrOutput {
	return o
}

func (o VirtualHardDiskDownloadStatusResponsePtrOutput) ToVirtualHardDiskDownloadStatusResponsePtrOutputWithContext(ctx context.Context) VirtualHardDiskDownloadStatusResponsePtrOutput {
	return o
}

func (o VirtualHardDiskDownloadStatusResponsePtrOutput) Elem() VirtualHardDiskDownloadStatusResponseOutput {
	return o.ApplyT(func(v *VirtualHardDiskDownloadStatusResponse) VirtualHardDiskDownloadStatusResponse {
		if v != nil {
			return *v
		}
		var ret VirtualHardDiskDownloadStatusResponse
		return ret
	}).(VirtualHardDiskDownloadStatusResponseOutput)
}

// The downloaded sized of the virtual hard disk in MB
func (o VirtualHardDiskDownloadStatusResponsePtrOutput) DownloadedSizeInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VirtualHardDiskDownloadStatusResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.DownloadedSizeInMB
	}).(pulumi.Float64PtrOutput)
}

// VHD Status provisioning status
type VirtualHardDiskStatusProvisioningStatusResponse struct {
	// The ID of the operation performed on the virtual hard disk
	OperationId *string `pulumi:"operationId"`
	// The status of the operation performed on the virtual hard disk [Succeeded, Failed, InProgress]
	Status string `pulumi:"status"`
}

// VHD Status provisioning status
type VirtualHardDiskStatusProvisioningStatusResponseOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskStatusProvisioningStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHardDiskStatusProvisioningStatusResponse)(nil)).Elem()
}

func (o VirtualHardDiskStatusProvisioningStatusResponseOutput) ToVirtualHardDiskStatusProvisioningStatusResponseOutput() VirtualHardDiskStatusProvisioningStatusResponseOutput {
	return o
}

func (o VirtualHardDiskStatusProvisioningStatusResponseOutput) ToVirtualHardDiskStatusProvisioningStatusResponseOutputWithContext(ctx context.Context) VirtualHardDiskStatusProvisioningStatusResponseOutput {
	return o
}

// The ID of the operation performed on the virtual hard disk
func (o VirtualHardDiskStatusProvisioningStatusResponseOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHardDiskStatusProvisioningStatusResponse) *string { return v.OperationId }).(pulumi.StringPtrOutput)
}

// The status of the operation performed on the virtual hard disk [Succeeded, Failed, InProgress]
func (o VirtualHardDiskStatusProvisioningStatusResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHardDiskStatusProvisioningStatusResponse) string { return v.Status }).(pulumi.StringOutput)
}

type VirtualHardDiskStatusProvisioningStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskStatusProvisioningStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHardDiskStatusProvisioningStatusResponse)(nil)).Elem()
}

func (o VirtualHardDiskStatusProvisioningStatusResponsePtrOutput) ToVirtualHardDiskStatusProvisioningStatusResponsePtrOutput() VirtualHardDiskStatusProvisioningStatusResponsePtrOutput {
	return o
}

func (o VirtualHardDiskStatusProvisioningStatusResponsePtrOutput) ToVirtualHardDiskStatusProvisioningStatusResponsePtrOutputWithContext(ctx context.Context) VirtualHardDiskStatusProvisioningStatusResponsePtrOutput {
	return o
}

func (o VirtualHardDiskStatusProvisioningStatusResponsePtrOutput) Elem() VirtualHardDiskStatusProvisioningStatusResponseOutput {
	return o.ApplyT(func(v *VirtualHardDiskStatusProvisioningStatusResponse) VirtualHardDiskStatusProvisioningStatusResponse {
		if v != nil {
			return *v
		}
		var ret VirtualHardDiskStatusProvisioningStatusResponse
		return ret
	}).(VirtualHardDiskStatusProvisioningStatusResponseOutput)
}

// The ID of the operation performed on the virtual hard disk
func (o VirtualHardDiskStatusProvisioningStatusResponsePtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHardDiskStatusProvisioningStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperationId
	}).(pulumi.StringPtrOutput)
}

// The status of the operation performed on the virtual hard disk [Succeeded, Failed, InProgress]
func (o VirtualHardDiskStatusProvisioningStatusResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHardDiskStatusProvisioningStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The observed state of virtual hard disks
type VirtualHardDiskStatusResponse struct {
	// The download status of the virtual hard disk
	DownloadStatus *VirtualHardDiskDownloadStatusResponse `pulumi:"downloadStatus"`
	// VirtualHardDisk provisioning error code
	ErrorCode *string `pulumi:"errorCode"`
	// Descriptive error message
	ErrorMessage *string `pulumi:"errorMessage"`
	// Provisioning status of the vhd
	ProvisioningStatus *VirtualHardDiskStatusProvisioningStatusResponse `pulumi:"provisioningStatus"`
	// The upload status of the virtual hard disk
	UploadStatus *VirtualHardDiskUploadStatusResponse `pulumi:"uploadStatus"`
}

// The observed state of virtual hard disks
type VirtualHardDiskStatusResponseOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHardDiskStatusResponse)(nil)).Elem()
}

func (o VirtualHardDiskStatusResponseOutput) ToVirtualHardDiskStatusResponseOutput() VirtualHardDiskStatusResponseOutput {
	return o
}

func (o VirtualHardDiskStatusResponseOutput) ToVirtualHardDiskStatusResponseOutputWithContext(ctx context.Context) VirtualHardDiskStatusResponseOutput {
	return o
}

// The download status of the virtual hard disk
func (o VirtualHardDiskStatusResponseOutput) DownloadStatus() VirtualHardDiskDownloadStatusResponsePtrOutput {
	return o.ApplyT(func(v VirtualHardDiskStatusResponse) *VirtualHardDiskDownloadStatusResponse { return v.DownloadStatus }).(VirtualHardDiskDownloadStatusResponsePtrOutput)
}

// VirtualHardDisk provisioning error code
func (o VirtualHardDiskStatusResponseOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHardDiskStatusResponse) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// Descriptive error message
func (o VirtualHardDiskStatusResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHardDiskStatusResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// Provisioning status of the vhd
func (o VirtualHardDiskStatusResponseOutput) ProvisioningStatus() VirtualHardDiskStatusProvisioningStatusResponsePtrOutput {
	return o.ApplyT(func(v VirtualHardDiskStatusResponse) *VirtualHardDiskStatusProvisioningStatusResponse {
		return v.ProvisioningStatus
	}).(VirtualHardDiskStatusProvisioningStatusResponsePtrOutput)
}

// The upload status of the virtual hard disk
func (o VirtualHardDiskStatusResponseOutput) UploadStatus() VirtualHardDiskUploadStatusResponsePtrOutput {
	return o.ApplyT(func(v VirtualHardDiskStatusResponse) *VirtualHardDiskUploadStatusResponse { return v.UploadStatus }).(VirtualHardDiskUploadStatusResponsePtrOutput)
}

// The upload status of the virtual hard disk
type VirtualHardDiskUploadStatusResponse struct {
	// The status of Uploading virtual hard disk [Succeeded, Failed, InProgress]
	Status string `pulumi:"status"`
	// The uploaded sized of the virtual hard disk in MB
	UploadedSizeInMB *float64 `pulumi:"uploadedSizeInMB"`
}

// The upload status of the virtual hard disk
type VirtualHardDiskUploadStatusResponseOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskUploadStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHardDiskUploadStatusResponse)(nil)).Elem()
}

func (o VirtualHardDiskUploadStatusResponseOutput) ToVirtualHardDiskUploadStatusResponseOutput() VirtualHardDiskUploadStatusResponseOutput {
	return o
}

func (o VirtualHardDiskUploadStatusResponseOutput) ToVirtualHardDiskUploadStatusResponseOutputWithContext(ctx context.Context) VirtualHardDiskUploadStatusResponseOutput {
	return o
}

// The status of Uploading virtual hard disk [Succeeded, Failed, InProgress]
func (o VirtualHardDiskUploadStatusResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHardDiskUploadStatusResponse) string { return v.Status }).(pulumi.StringOutput)
}

// The uploaded sized of the virtual hard disk in MB
func (o VirtualHardDiskUploadStatusResponseOutput) UploadedSizeInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualHardDiskUploadStatusResponse) *float64 { return v.UploadedSizeInMB }).(pulumi.Float64PtrOutput)
}

type VirtualHardDiskUploadStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualHardDiskUploadStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHardDiskUploadStatusResponse)(nil)).Elem()
}

func (o VirtualHardDiskUploadStatusResponsePtrOutput) ToVirtualHardDiskUploadStatusResponsePtrOutput() VirtualHardDiskUploadStatusResponsePtrOutput {
	return o
}

func (o VirtualHardDiskUploadStatusResponsePtrOutput) ToVirtualHardDiskUploadStatusResponsePtrOutputWithContext(ctx context.Context) VirtualHardDiskUploadStatusResponsePtrOutput {
	return o
}

func (o VirtualHardDiskUploadStatusResponsePtrOutput) Elem() VirtualHardDiskUploadStatusResponseOutput {
	return o.ApplyT(func(v *VirtualHardDiskUploadStatusResponse) VirtualHardDiskUploadStatusResponse {
		if v != nil {
			return *v
		}
		var ret VirtualHardDiskUploadStatusResponse
		return ret
	}).(VirtualHardDiskUploadStatusResponseOutput)
}

// The status of Uploading virtual hard disk [Succeeded, Failed, InProgress]
func (o VirtualHardDiskUploadStatusResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHardDiskUploadStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The uploaded sized of the virtual hard disk in MB
func (o VirtualHardDiskUploadStatusResponsePtrOutput) UploadedSizeInMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VirtualHardDiskUploadStatusResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.UploadedSizeInMB
	}).(pulumi.Float64PtrOutput)
}

// The instance view of the VM Config Agent running on the virtual machine.
type VirtualMachineConfigAgentInstanceViewResponse struct {
	// The resource status information.
	Statuses []InstanceViewStatusResponse `pulumi:"statuses"`
	// The VM Config Agent full version.
	VmConfigAgentVersion *string `pulumi:"vmConfigAgentVersion"`
}

// The instance view of the VM Config Agent running on the virtual machine.
type VirtualMachineConfigAgentInstanceViewResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineConfigAgentInstanceViewResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineConfigAgentInstanceViewResponse)(nil)).Elem()
}

func (o VirtualMachineConfigAgentInstanceViewResponseOutput) ToVirtualMachineConfigAgentInstanceViewResponseOutput() VirtualMachineConfigAgentInstanceViewResponseOutput {
	return o
}

func (o VirtualMachineConfigAgentInstanceViewResponseOutput) ToVirtualMachineConfigAgentInstanceViewResponseOutputWithContext(ctx context.Context) VirtualMachineConfigAgentInstanceViewResponseOutput {
	return o
}

// The resource status information.
func (o VirtualMachineConfigAgentInstanceViewResponseOutput) Statuses() InstanceViewStatusResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineConfigAgentInstanceViewResponse) []InstanceViewStatusResponse { return v.Statuses }).(InstanceViewStatusResponseArrayOutput)
}

// The VM Config Agent full version.
func (o VirtualMachineConfigAgentInstanceViewResponseOutput) VmConfigAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineConfigAgentInstanceViewResponse) *string { return v.VmConfigAgentVersion }).(pulumi.StringPtrOutput)
}

type VirtualMachineConfigAgentInstanceViewResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineConfigAgentInstanceViewResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineConfigAgentInstanceViewResponse)(nil)).Elem()
}

func (o VirtualMachineConfigAgentInstanceViewResponsePtrOutput) ToVirtualMachineConfigAgentInstanceViewResponsePtrOutput() VirtualMachineConfigAgentInstanceViewResponsePtrOutput {
	return o
}

func (o VirtualMachineConfigAgentInstanceViewResponsePtrOutput) ToVirtualMachineConfigAgentInstanceViewResponsePtrOutputWithContext(ctx context.Context) VirtualMachineConfigAgentInstanceViewResponsePtrOutput {
	return o
}

func (o VirtualMachineConfigAgentInstanceViewResponsePtrOutput) Elem() VirtualMachineConfigAgentInstanceViewResponseOutput {
	return o.ApplyT(func(v *VirtualMachineConfigAgentInstanceViewResponse) VirtualMachineConfigAgentInstanceViewResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineConfigAgentInstanceViewResponse
		return ret
	}).(VirtualMachineConfigAgentInstanceViewResponseOutput)
}

// The resource status information.
func (o VirtualMachineConfigAgentInstanceViewResponsePtrOutput) Statuses() InstanceViewStatusResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineConfigAgentInstanceViewResponse) []InstanceViewStatusResponse {
		if v == nil {
			return nil
		}
		return v.Statuses
	}).(InstanceViewStatusResponseArrayOutput)
}

// The VM Config Agent full version.
func (o VirtualMachineConfigAgentInstanceViewResponsePtrOutput) VmConfigAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineConfigAgentInstanceViewResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmConfigAgentVersion
	}).(pulumi.StringPtrOutput)
}

// HardwareProfile - Specifies the hardware settings for the virtual machine instance.
type VirtualMachineInstancePropertiesHardwareProfile struct {
	// Dynamic memory config
	DynamicMemoryConfig *VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig `pulumi:"dynamicMemoryConfig"`
	// RAM in MB for the virtual machine instance
	MemoryMB *float64 `pulumi:"memoryMB"`
	// number of processors for the virtual machine instance
	Processors *int `pulumi:"processors"`
	// virtualMachineGPUs - list of gpus to be attached to the virtual machine instance
	VirtualMachineGPUs []VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU `pulumi:"virtualMachineGPUs"`
	// Enum of VM Sizes
	VmSize *string `pulumi:"vmSize"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesHardwareProfile
func (val *VirtualMachineInstancePropertiesHardwareProfile) Defaults() *VirtualMachineInstancePropertiesHardwareProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.VmSize == nil {
		vmSize_ := "Default"
		tmp.VmSize = &vmSize_
	}
	return &tmp
}

// VirtualMachineInstancePropertiesHardwareProfileInput is an input type that accepts VirtualMachineInstancePropertiesHardwareProfileArgs and VirtualMachineInstancePropertiesHardwareProfileOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesHardwareProfileInput` via:
//
//	VirtualMachineInstancePropertiesHardwareProfileArgs{...}
type VirtualMachineInstancePropertiesHardwareProfileInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesHardwareProfileOutput() VirtualMachineInstancePropertiesHardwareProfileOutput
	ToVirtualMachineInstancePropertiesHardwareProfileOutputWithContext(context.Context) VirtualMachineInstancePropertiesHardwareProfileOutput
}

// HardwareProfile - Specifies the hardware settings for the virtual machine instance.
type VirtualMachineInstancePropertiesHardwareProfileArgs struct {
	// Dynamic memory config
	DynamicMemoryConfig VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrInput `pulumi:"dynamicMemoryConfig"`
	// RAM in MB for the virtual machine instance
	MemoryMB pulumi.Float64PtrInput `pulumi:"memoryMB"`
	// number of processors for the virtual machine instance
	Processors pulumi.IntPtrInput `pulumi:"processors"`
	// virtualMachineGPUs - list of gpus to be attached to the virtual machine instance
	VirtualMachineGPUs VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayInput `pulumi:"virtualMachineGPUs"`
	// Enum of VM Sizes
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesHardwareProfileArgs
func (val *VirtualMachineInstancePropertiesHardwareProfileArgs) Defaults() *VirtualMachineInstancePropertiesHardwareProfileArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.VmSize == nil {
		tmp.VmSize = pulumi.StringPtr("Default")
	}
	return &tmp
}
func (VirtualMachineInstancePropertiesHardwareProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesHardwareProfile)(nil)).Elem()
}

func (i VirtualMachineInstancePropertiesHardwareProfileArgs) ToVirtualMachineInstancePropertiesHardwareProfileOutput() VirtualMachineInstancePropertiesHardwareProfileOutput {
	return i.ToVirtualMachineInstancePropertiesHardwareProfileOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesHardwareProfileArgs) ToVirtualMachineInstancePropertiesHardwareProfileOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesHardwareProfileOutput)
}

func (i VirtualMachineInstancePropertiesHardwareProfileArgs) ToVirtualMachineInstancePropertiesHardwareProfilePtrOutput() VirtualMachineInstancePropertiesHardwareProfilePtrOutput {
	return i.ToVirtualMachineInstancePropertiesHardwareProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesHardwareProfileArgs) ToVirtualMachineInstancePropertiesHardwareProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesHardwareProfileOutput).ToVirtualMachineInstancePropertiesHardwareProfilePtrOutputWithContext(ctx)
}

// VirtualMachineInstancePropertiesHardwareProfilePtrInput is an input type that accepts VirtualMachineInstancePropertiesHardwareProfileArgs, VirtualMachineInstancePropertiesHardwareProfilePtr and VirtualMachineInstancePropertiesHardwareProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesHardwareProfilePtrInput` via:
//
//	        VirtualMachineInstancePropertiesHardwareProfileArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineInstancePropertiesHardwareProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesHardwareProfilePtrOutput() VirtualMachineInstancePropertiesHardwareProfilePtrOutput
	ToVirtualMachineInstancePropertiesHardwareProfilePtrOutputWithContext(context.Context) VirtualMachineInstancePropertiesHardwareProfilePtrOutput
}

type virtualMachineInstancePropertiesHardwareProfilePtrType VirtualMachineInstancePropertiesHardwareProfileArgs

func VirtualMachineInstancePropertiesHardwareProfilePtr(v *VirtualMachineInstancePropertiesHardwareProfileArgs) VirtualMachineInstancePropertiesHardwareProfilePtrInput {
	return (*virtualMachineInstancePropertiesHardwareProfilePtrType)(v)
}

func (*virtualMachineInstancePropertiesHardwareProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesHardwareProfile)(nil)).Elem()
}

func (i *virtualMachineInstancePropertiesHardwareProfilePtrType) ToVirtualMachineInstancePropertiesHardwareProfilePtrOutput() VirtualMachineInstancePropertiesHardwareProfilePtrOutput {
	return i.ToVirtualMachineInstancePropertiesHardwareProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineInstancePropertiesHardwareProfilePtrType) ToVirtualMachineInstancePropertiesHardwareProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesHardwareProfilePtrOutput)
}

// HardwareProfile - Specifies the hardware settings for the virtual machine instance.
type VirtualMachineInstancePropertiesHardwareProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesHardwareProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesHardwareProfile)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesHardwareProfileOutput) ToVirtualMachineInstancePropertiesHardwareProfileOutput() VirtualMachineInstancePropertiesHardwareProfileOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileOutput) ToVirtualMachineInstancePropertiesHardwareProfileOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileOutput) ToVirtualMachineInstancePropertiesHardwareProfilePtrOutput() VirtualMachineInstancePropertiesHardwareProfilePtrOutput {
	return o.ToVirtualMachineInstancePropertiesHardwareProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineInstancePropertiesHardwareProfileOutput) ToVirtualMachineInstancePropertiesHardwareProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineInstancePropertiesHardwareProfile) *VirtualMachineInstancePropertiesHardwareProfile {
		return &v
	}).(VirtualMachineInstancePropertiesHardwareProfilePtrOutput)
}

// Dynamic memory config
func (o VirtualMachineInstancePropertiesHardwareProfileOutput) DynamicMemoryConfig() VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfile) *VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig {
		return v.DynamicMemoryConfig
	}).(VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput)
}

// RAM in MB for the virtual machine instance
func (o VirtualMachineInstancePropertiesHardwareProfileOutput) MemoryMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfile) *float64 { return v.MemoryMB }).(pulumi.Float64PtrOutput)
}

// number of processors for the virtual machine instance
func (o VirtualMachineInstancePropertiesHardwareProfileOutput) Processors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfile) *int { return v.Processors }).(pulumi.IntPtrOutput)
}

// virtualMachineGPUs - list of gpus to be attached to the virtual machine instance
func (o VirtualMachineInstancePropertiesHardwareProfileOutput) VirtualMachineGPUs() VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfile) []VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU {
		return v.VirtualMachineGPUs
	}).(VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput)
}

// Enum of VM Sizes
func (o VirtualMachineInstancePropertiesHardwareProfileOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfile) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type VirtualMachineInstancePropertiesHardwareProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesHardwareProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesHardwareProfile)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesHardwareProfilePtrOutput) ToVirtualMachineInstancePropertiesHardwareProfilePtrOutput() VirtualMachineInstancePropertiesHardwareProfilePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfilePtrOutput) ToVirtualMachineInstancePropertiesHardwareProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfilePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfilePtrOutput) Elem() VirtualMachineInstancePropertiesHardwareProfileOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfile) VirtualMachineInstancePropertiesHardwareProfile {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesHardwareProfile
		return ret
	}).(VirtualMachineInstancePropertiesHardwareProfileOutput)
}

// Dynamic memory config
func (o VirtualMachineInstancePropertiesHardwareProfilePtrOutput) DynamicMemoryConfig() VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfile) *VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig {
		if v == nil {
			return nil
		}
		return v.DynamicMemoryConfig
	}).(VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput)
}

// RAM in MB for the virtual machine instance
func (o VirtualMachineInstancePropertiesHardwareProfilePtrOutput) MemoryMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfile) *float64 {
		if v == nil {
			return nil
		}
		return v.MemoryMB
	}).(pulumi.Float64PtrOutput)
}

// number of processors for the virtual machine instance
func (o VirtualMachineInstancePropertiesHardwareProfilePtrOutput) Processors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfile) *int {
		if v == nil {
			return nil
		}
		return v.Processors
	}).(pulumi.IntPtrOutput)
}

// virtualMachineGPUs - list of gpus to be attached to the virtual machine instance
func (o VirtualMachineInstancePropertiesHardwareProfilePtrOutput) VirtualMachineGPUs() VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfile) []VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU {
		if v == nil {
			return nil
		}
		return v.VirtualMachineGPUs
	}).(VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput)
}

// Enum of VM Sizes
func (o VirtualMachineInstancePropertiesHardwareProfilePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfile) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// Dynamic memory config
type VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig struct {
	// Maximum memory in MB
	MaximumMemoryMB *float64 `pulumi:"maximumMemoryMB"`
	// Minimum memory in MB
	MinimumMemoryMB *float64 `pulumi:"minimumMemoryMB"`
	// Defines the amount of extra memory that should be reserved for a virtual machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to 2000.
	TargetMemoryBuffer *int `pulumi:"targetMemoryBuffer"`
}

// VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigInput is an input type that accepts VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigArgs and VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigInput` via:
//
//	VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigArgs{...}
type VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput() VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput
	ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutputWithContext(context.Context) VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput
}

// Dynamic memory config
type VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigArgs struct {
	// Maximum memory in MB
	MaximumMemoryMB pulumi.Float64PtrInput `pulumi:"maximumMemoryMB"`
	// Minimum memory in MB
	MinimumMemoryMB pulumi.Float64PtrInput `pulumi:"minimumMemoryMB"`
	// Defines the amount of extra memory that should be reserved for a virtual machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to 2000.
	TargetMemoryBuffer pulumi.IntPtrInput `pulumi:"targetMemoryBuffer"`
}

func (VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig)(nil)).Elem()
}

func (i VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigArgs) ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput() VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput {
	return i.ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigArgs) ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput)
}

func (i VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigArgs) ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput() VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput {
	return i.ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigArgs) ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput).ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutputWithContext(ctx)
}

// VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrInput is an input type that accepts VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigArgs, VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtr and VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrInput` via:
//
//	        VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput() VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput
	ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutputWithContext(context.Context) VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput
}

type virtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrType VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigArgs

func VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtr(v *VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigArgs) VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrInput {
	return (*virtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrType)(v)
}

func (*virtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig)(nil)).Elem()
}

func (i *virtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrType) ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput() VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput {
	return i.ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutputWithContext(context.Background())
}

func (i *virtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrType) ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput)
}

// Dynamic memory config
type VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput) ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput() VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput) ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput) ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput() VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput {
	return o.ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutputWithContext(context.Background())
}

func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput) ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig) *VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig {
		return &v
	}).(VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput)
}

// Maximum memory in MB
func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput) MaximumMemoryMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig) *float64 {
		return v.MaximumMemoryMB
	}).(pulumi.Float64PtrOutput)
}

// Minimum memory in MB
func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput) MinimumMemoryMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig) *float64 {
		return v.MinimumMemoryMB
	}).(pulumi.Float64PtrOutput)
}

// Defines the amount of extra memory that should be reserved for a virtual machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to 2000.
func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput) TargetMemoryBuffer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig) *int {
		return v.TargetMemoryBuffer
	}).(pulumi.IntPtrOutput)
}

type VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput) ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput() VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput) ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput) Elem() VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig) VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig
		return ret
	}).(VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput)
}

// Maximum memory in MB
func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput) MaximumMemoryMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.MaximumMemoryMB
	}).(pulumi.Float64PtrOutput)
}

// Minimum memory in MB
func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput) MinimumMemoryMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.MinimumMemoryMB
	}).(pulumi.Float64PtrOutput)
}

// Defines the amount of extra memory that should be reserved for a virtual machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to 2000.
func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput) TargetMemoryBuffer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig) *int {
		if v == nil {
			return nil
		}
		return v.TargetMemoryBuffer
	}).(pulumi.IntPtrOutput)
}

// Dynamic memory config
type VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse struct {
	// Maximum memory in MB
	MaximumMemoryMB *float64 `pulumi:"maximumMemoryMB"`
	// Minimum memory in MB
	MinimumMemoryMB *float64 `pulumi:"minimumMemoryMB"`
	// Defines the amount of extra memory that should be reserved for a virtual machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to 2000.
	TargetMemoryBuffer *int `pulumi:"targetMemoryBuffer"`
}

// Dynamic memory config
type VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponseOutput) ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponseOutput() VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponseOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponseOutput) ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponseOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponseOutput {
	return o
}

// Maximum memory in MB
func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponseOutput) MaximumMemoryMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse) *float64 {
		return v.MaximumMemoryMB
	}).(pulumi.Float64PtrOutput)
}

// Minimum memory in MB
func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponseOutput) MinimumMemoryMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse) *float64 {
		return v.MinimumMemoryMB
	}).(pulumi.Float64PtrOutput)
}

// Defines the amount of extra memory that should be reserved for a virtual machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to 2000.
func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponseOutput) TargetMemoryBuffer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse) *int {
		return v.TargetMemoryBuffer
	}).(pulumi.IntPtrOutput)
}

type VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutput) ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutput() VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutput) ToVirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutput) Elem() VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse) VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse
		return ret
	}).(VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponseOutput)
}

// Maximum memory in MB
func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutput) MaximumMemoryMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaximumMemoryMB
	}).(pulumi.Float64PtrOutput)
}

// Minimum memory in MB
func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutput) MinimumMemoryMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MinimumMemoryMB
	}).(pulumi.Float64PtrOutput)
}

// Defines the amount of extra memory that should be reserved for a virtual machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to 2000.
func (o VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutput) TargetMemoryBuffer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.TargetMemoryBuffer
	}).(pulumi.IntPtrOutput)
}

// HardwareProfile - Specifies the hardware settings for the virtual machine instance.
type VirtualMachineInstancePropertiesHardwareProfileResponse struct {
	// Dynamic memory config
	DynamicMemoryConfig *VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse `pulumi:"dynamicMemoryConfig"`
	// RAM in MB for the virtual machine instance
	MemoryMB *float64 `pulumi:"memoryMB"`
	// number of processors for the virtual machine instance
	Processors *int `pulumi:"processors"`
	// virtualMachineGPUs - list of gpus to be attached to the virtual machine instance
	VirtualMachineGPUs []VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponse `pulumi:"virtualMachineGPUs"`
	// Enum of VM Sizes
	VmSize *string `pulumi:"vmSize"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesHardwareProfileResponse
func (val *VirtualMachineInstancePropertiesHardwareProfileResponse) Defaults() *VirtualMachineInstancePropertiesHardwareProfileResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.VmSize == nil {
		vmSize_ := "Default"
		tmp.VmSize = &vmSize_
	}
	return &tmp
}

// HardwareProfile - Specifies the hardware settings for the virtual machine instance.
type VirtualMachineInstancePropertiesHardwareProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesHardwareProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesHardwareProfileResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesHardwareProfileResponseOutput) ToVirtualMachineInstancePropertiesHardwareProfileResponseOutput() VirtualMachineInstancePropertiesHardwareProfileResponseOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileResponseOutput) ToVirtualMachineInstancePropertiesHardwareProfileResponseOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileResponseOutput {
	return o
}

// Dynamic memory config
func (o VirtualMachineInstancePropertiesHardwareProfileResponseOutput) DynamicMemoryConfig() VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileResponse) *VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse {
		return v.DynamicMemoryConfig
	}).(VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutput)
}

// RAM in MB for the virtual machine instance
func (o VirtualMachineInstancePropertiesHardwareProfileResponseOutput) MemoryMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileResponse) *float64 { return v.MemoryMB }).(pulumi.Float64PtrOutput)
}

// number of processors for the virtual machine instance
func (o VirtualMachineInstancePropertiesHardwareProfileResponseOutput) Processors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileResponse) *int { return v.Processors }).(pulumi.IntPtrOutput)
}

// virtualMachineGPUs - list of gpus to be attached to the virtual machine instance
func (o VirtualMachineInstancePropertiesHardwareProfileResponseOutput) VirtualMachineGPUs() VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileResponse) []VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponse {
		return v.VirtualMachineGPUs
	}).(VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseArrayOutput)
}

// Enum of VM Sizes
func (o VirtualMachineInstancePropertiesHardwareProfileResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

type VirtualMachineInstancePropertiesHardwareProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesHardwareProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesHardwareProfileResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesHardwareProfileResponsePtrOutput) ToVirtualMachineInstancePropertiesHardwareProfileResponsePtrOutput() VirtualMachineInstancePropertiesHardwareProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileResponsePtrOutput) ToVirtualMachineInstancePropertiesHardwareProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileResponsePtrOutput) Elem() VirtualMachineInstancePropertiesHardwareProfileResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfileResponse) VirtualMachineInstancePropertiesHardwareProfileResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesHardwareProfileResponse
		return ret
	}).(VirtualMachineInstancePropertiesHardwareProfileResponseOutput)
}

// Dynamic memory config
func (o VirtualMachineInstancePropertiesHardwareProfileResponsePtrOutput) DynamicMemoryConfig() VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfileResponse) *VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponse {
		if v == nil {
			return nil
		}
		return v.DynamicMemoryConfig
	}).(VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutput)
}

// RAM in MB for the virtual machine instance
func (o VirtualMachineInstancePropertiesHardwareProfileResponsePtrOutput) MemoryMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfileResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MemoryMB
	}).(pulumi.Float64PtrOutput)
}

// number of processors for the virtual machine instance
func (o VirtualMachineInstancePropertiesHardwareProfileResponsePtrOutput) Processors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.Processors
	}).(pulumi.IntPtrOutput)
}

// virtualMachineGPUs - list of gpus to be attached to the virtual machine instance
func (o VirtualMachineInstancePropertiesHardwareProfileResponsePtrOutput) VirtualMachineGPUs() VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfileResponse) []VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponse {
		if v == nil {
			return nil
		}
		return v.VirtualMachineGPUs
	}).(VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseArrayOutput)
}

// Enum of VM Sizes
func (o VirtualMachineInstancePropertiesHardwareProfileResponsePtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesHardwareProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmSize
	}).(pulumi.StringPtrOutput)
}

// GPU properties - describes the GPU configuration.
type VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU struct {
	// GPU assignment type
	AssignmentType string `pulumi:"assignmentType"`
	// Name of the GPU
	GpuName *string `pulumi:"gpuName"`
	// Size of gpu partition in MB for GPU-P
	PartitionSizeMB *float64 `pulumi:"partitionSizeMB"`
}

// VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUInput is an input type that accepts VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArgs and VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUInput` via:
//
//	VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArgs{...}
type VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput() VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput
	ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutputWithContext(context.Context) VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput
}

// GPU properties - describes the GPU configuration.
type VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArgs struct {
	// GPU assignment type
	AssignmentType pulumi.StringInput `pulumi:"assignmentType"`
	// Name of the GPU
	GpuName pulumi.StringPtrInput `pulumi:"gpuName"`
	// Size of gpu partition in MB for GPU-P
	PartitionSizeMB pulumi.Float64PtrInput `pulumi:"partitionSizeMB"`
}

func (VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU)(nil)).Elem()
}

func (i VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArgs) ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput() VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput {
	return i.ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArgs) ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput)
}

// VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayInput is an input type that accepts VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArray and VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayInput` via:
//
//	VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArray{ VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArgs{...} }
type VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput() VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput
	ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutputWithContext(context.Context) VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput
}

type VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArray []VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUInput

func (VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU)(nil)).Elem()
}

func (i VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArray) ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput() VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput {
	return i.ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArray) ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput)
}

// GPU properties - describes the GPU configuration.
type VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput) ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput() VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput) ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput {
	return o
}

// GPU assignment type
func (o VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput) AssignmentType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU) string {
		return v.AssignmentType
	}).(pulumi.StringOutput)
}

// Name of the GPU
func (o VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput) GpuName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU) *string { return v.GpuName }).(pulumi.StringPtrOutput)
}

// Size of gpu partition in MB for GPU-P
func (o VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput) PartitionSizeMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU) *float64 {
		return v.PartitionSizeMB
	}).(pulumi.Float64PtrOutput)
}

type VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput) ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput() VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput) ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput) Index(i pulumi.IntInput) VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU {
		return vs[0].([]VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU)[vs[1].(int)]
	}).(VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput)
}

// GPU properties - describes the GPU configuration.
type VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponse struct {
	// GPU assignment type
	AssignmentType string `pulumi:"assignmentType"`
	// Name of the GPU
	GpuName *string `pulumi:"gpuName"`
	// Size of gpu partition in MB for GPU-P
	PartitionSizeMB *float64 `pulumi:"partitionSizeMB"`
}

// GPU properties - describes the GPU configuration.
type VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseOutput) ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseOutput() VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseOutput) ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseOutput {
	return o
}

// GPU assignment type
func (o VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseOutput) AssignmentType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponse) string {
		return v.AssignmentType
	}).(pulumi.StringOutput)
}

// Name of the GPU
func (o VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseOutput) GpuName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponse) *string {
		return v.GpuName
	}).(pulumi.StringPtrOutput)
}

// Size of gpu partition in MB for GPU-P
func (o VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseOutput) PartitionSizeMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponse) *float64 {
		return v.PartitionSizeMB
	}).(pulumi.Float64PtrOutput)
}

type VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseArrayOutput) ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseArrayOutput() VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseArrayOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseArrayOutput) ToVirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseArrayOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseArrayOutput {
	return o
}

func (o VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseArrayOutput) Index(i pulumi.IntInput) VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponse {
		return vs[0].([]VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponse)[vs[1].(int)]
	}).(VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseOutput)
}

// NetworkProfile - describes the network configuration the virtual machine instance
type VirtualMachineInstancePropertiesNetworkProfile struct {
	// NetworkInterfaces - list of network interfaces to be attached to the virtual machine instance
	NetworkInterfaces []NetworkInterfaceArmReference `pulumi:"networkInterfaces"`
}

// VirtualMachineInstancePropertiesNetworkProfileInput is an input type that accepts VirtualMachineInstancePropertiesNetworkProfileArgs and VirtualMachineInstancePropertiesNetworkProfileOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesNetworkProfileInput` via:
//
//	VirtualMachineInstancePropertiesNetworkProfileArgs{...}
type VirtualMachineInstancePropertiesNetworkProfileInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesNetworkProfileOutput() VirtualMachineInstancePropertiesNetworkProfileOutput
	ToVirtualMachineInstancePropertiesNetworkProfileOutputWithContext(context.Context) VirtualMachineInstancePropertiesNetworkProfileOutput
}

// NetworkProfile - describes the network configuration the virtual machine instance
type VirtualMachineInstancePropertiesNetworkProfileArgs struct {
	// NetworkInterfaces - list of network interfaces to be attached to the virtual machine instance
	NetworkInterfaces NetworkInterfaceArmReferenceArrayInput `pulumi:"networkInterfaces"`
}

func (VirtualMachineInstancePropertiesNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesNetworkProfile)(nil)).Elem()
}

func (i VirtualMachineInstancePropertiesNetworkProfileArgs) ToVirtualMachineInstancePropertiesNetworkProfileOutput() VirtualMachineInstancePropertiesNetworkProfileOutput {
	return i.ToVirtualMachineInstancePropertiesNetworkProfileOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesNetworkProfileArgs) ToVirtualMachineInstancePropertiesNetworkProfileOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesNetworkProfileOutput)
}

func (i VirtualMachineInstancePropertiesNetworkProfileArgs) ToVirtualMachineInstancePropertiesNetworkProfilePtrOutput() VirtualMachineInstancePropertiesNetworkProfilePtrOutput {
	return i.ToVirtualMachineInstancePropertiesNetworkProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesNetworkProfileArgs) ToVirtualMachineInstancePropertiesNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesNetworkProfileOutput).ToVirtualMachineInstancePropertiesNetworkProfilePtrOutputWithContext(ctx)
}

// VirtualMachineInstancePropertiesNetworkProfilePtrInput is an input type that accepts VirtualMachineInstancePropertiesNetworkProfileArgs, VirtualMachineInstancePropertiesNetworkProfilePtr and VirtualMachineInstancePropertiesNetworkProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesNetworkProfilePtrInput` via:
//
//	        VirtualMachineInstancePropertiesNetworkProfileArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineInstancePropertiesNetworkProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesNetworkProfilePtrOutput() VirtualMachineInstancePropertiesNetworkProfilePtrOutput
	ToVirtualMachineInstancePropertiesNetworkProfilePtrOutputWithContext(context.Context) VirtualMachineInstancePropertiesNetworkProfilePtrOutput
}

type virtualMachineInstancePropertiesNetworkProfilePtrType VirtualMachineInstancePropertiesNetworkProfileArgs

func VirtualMachineInstancePropertiesNetworkProfilePtr(v *VirtualMachineInstancePropertiesNetworkProfileArgs) VirtualMachineInstancePropertiesNetworkProfilePtrInput {
	return (*virtualMachineInstancePropertiesNetworkProfilePtrType)(v)
}

func (*virtualMachineInstancePropertiesNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesNetworkProfile)(nil)).Elem()
}

func (i *virtualMachineInstancePropertiesNetworkProfilePtrType) ToVirtualMachineInstancePropertiesNetworkProfilePtrOutput() VirtualMachineInstancePropertiesNetworkProfilePtrOutput {
	return i.ToVirtualMachineInstancePropertiesNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineInstancePropertiesNetworkProfilePtrType) ToVirtualMachineInstancePropertiesNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesNetworkProfilePtrOutput)
}

// NetworkProfile - describes the network configuration the virtual machine instance
type VirtualMachineInstancePropertiesNetworkProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesNetworkProfile)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesNetworkProfileOutput) ToVirtualMachineInstancePropertiesNetworkProfileOutput() VirtualMachineInstancePropertiesNetworkProfileOutput {
	return o
}

func (o VirtualMachineInstancePropertiesNetworkProfileOutput) ToVirtualMachineInstancePropertiesNetworkProfileOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesNetworkProfileOutput {
	return o
}

func (o VirtualMachineInstancePropertiesNetworkProfileOutput) ToVirtualMachineInstancePropertiesNetworkProfilePtrOutput() VirtualMachineInstancePropertiesNetworkProfilePtrOutput {
	return o.ToVirtualMachineInstancePropertiesNetworkProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineInstancePropertiesNetworkProfileOutput) ToVirtualMachineInstancePropertiesNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesNetworkProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineInstancePropertiesNetworkProfile) *VirtualMachineInstancePropertiesNetworkProfile {
		return &v
	}).(VirtualMachineInstancePropertiesNetworkProfilePtrOutput)
}

// NetworkInterfaces - list of network interfaces to be attached to the virtual machine instance
func (o VirtualMachineInstancePropertiesNetworkProfileOutput) NetworkInterfaces() NetworkInterfaceArmReferenceArrayOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesNetworkProfile) []NetworkInterfaceArmReference {
		return v.NetworkInterfaces
	}).(NetworkInterfaceArmReferenceArrayOutput)
}

type VirtualMachineInstancePropertiesNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesNetworkProfile)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesNetworkProfilePtrOutput) ToVirtualMachineInstancePropertiesNetworkProfilePtrOutput() VirtualMachineInstancePropertiesNetworkProfilePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesNetworkProfilePtrOutput) ToVirtualMachineInstancePropertiesNetworkProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesNetworkProfilePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesNetworkProfilePtrOutput) Elem() VirtualMachineInstancePropertiesNetworkProfileOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesNetworkProfile) VirtualMachineInstancePropertiesNetworkProfile {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesNetworkProfile
		return ret
	}).(VirtualMachineInstancePropertiesNetworkProfileOutput)
}

// NetworkInterfaces - list of network interfaces to be attached to the virtual machine instance
func (o VirtualMachineInstancePropertiesNetworkProfilePtrOutput) NetworkInterfaces() NetworkInterfaceArmReferenceArrayOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesNetworkProfile) []NetworkInterfaceArmReference {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceArmReferenceArrayOutput)
}

// NetworkProfile - describes the network configuration the virtual machine instance
type VirtualMachineInstancePropertiesNetworkProfileResponse struct {
	// NetworkInterfaces - list of network interfaces to be attached to the virtual machine instance
	NetworkInterfaces []NetworkInterfaceArmReferenceResponse `pulumi:"networkInterfaces"`
}

// NetworkProfile - describes the network configuration the virtual machine instance
type VirtualMachineInstancePropertiesNetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesNetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesNetworkProfileResponseOutput) ToVirtualMachineInstancePropertiesNetworkProfileResponseOutput() VirtualMachineInstancePropertiesNetworkProfileResponseOutput {
	return o
}

func (o VirtualMachineInstancePropertiesNetworkProfileResponseOutput) ToVirtualMachineInstancePropertiesNetworkProfileResponseOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesNetworkProfileResponseOutput {
	return o
}

// NetworkInterfaces - list of network interfaces to be attached to the virtual machine instance
func (o VirtualMachineInstancePropertiesNetworkProfileResponseOutput) NetworkInterfaces() NetworkInterfaceArmReferenceResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesNetworkProfileResponse) []NetworkInterfaceArmReferenceResponse {
		return v.NetworkInterfaces
	}).(NetworkInterfaceArmReferenceResponseArrayOutput)
}

type VirtualMachineInstancePropertiesNetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesNetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesNetworkProfileResponsePtrOutput) ToVirtualMachineInstancePropertiesNetworkProfileResponsePtrOutput() VirtualMachineInstancePropertiesNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesNetworkProfileResponsePtrOutput) ToVirtualMachineInstancePropertiesNetworkProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesNetworkProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesNetworkProfileResponsePtrOutput) Elem() VirtualMachineInstancePropertiesNetworkProfileResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesNetworkProfileResponse) VirtualMachineInstancePropertiesNetworkProfileResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesNetworkProfileResponse
		return ret
	}).(VirtualMachineInstancePropertiesNetworkProfileResponseOutput)
}

// NetworkInterfaces - list of network interfaces to be attached to the virtual machine instance
func (o VirtualMachineInstancePropertiesNetworkProfileResponsePtrOutput) NetworkInterfaces() NetworkInterfaceArmReferenceResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesNetworkProfileResponse) []NetworkInterfaceArmReferenceResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceArmReferenceResponseArrayOutput)
}

// OsProfile - describes the configuration of the operating system and sets login data
type VirtualMachineInstancePropertiesOsProfile struct {
	// AdminPassword - admin password
	AdminPassword *string `pulumi:"adminPassword"`
	// AdminUsername - admin username
	AdminUsername *string `pulumi:"adminUsername"`
	// ComputerName - name of the compute
	ComputerName *string `pulumi:"computerName"`
	// LinuxConfiguration - linux specific configuration values for the virtual machine instance
	LinuxConfiguration *VirtualMachineInstancePropertiesOsProfileLinuxConfiguration `pulumi:"linuxConfiguration"`
	// Windows Configuration for the virtual machine instance
	WindowsConfiguration *VirtualMachineInstancePropertiesOsProfileWindowsConfiguration `pulumi:"windowsConfiguration"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesOsProfile
func (val *VirtualMachineInstancePropertiesOsProfile) Defaults() *VirtualMachineInstancePropertiesOsProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.LinuxConfiguration = tmp.LinuxConfiguration.Defaults()

	tmp.WindowsConfiguration = tmp.WindowsConfiguration.Defaults()

	return &tmp
}

// VirtualMachineInstancePropertiesOsProfileInput is an input type that accepts VirtualMachineInstancePropertiesOsProfileArgs and VirtualMachineInstancePropertiesOsProfileOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesOsProfileInput` via:
//
//	VirtualMachineInstancePropertiesOsProfileArgs{...}
type VirtualMachineInstancePropertiesOsProfileInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesOsProfileOutput() VirtualMachineInstancePropertiesOsProfileOutput
	ToVirtualMachineInstancePropertiesOsProfileOutputWithContext(context.Context) VirtualMachineInstancePropertiesOsProfileOutput
}

// OsProfile - describes the configuration of the operating system and sets login data
type VirtualMachineInstancePropertiesOsProfileArgs struct {
	// AdminPassword - admin password
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// AdminUsername - admin username
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// ComputerName - name of the compute
	ComputerName pulumi.StringPtrInput `pulumi:"computerName"`
	// LinuxConfiguration - linux specific configuration values for the virtual machine instance
	LinuxConfiguration VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrInput `pulumi:"linuxConfiguration"`
	// Windows Configuration for the virtual machine instance
	WindowsConfiguration VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrInput `pulumi:"windowsConfiguration"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesOsProfileArgs
func (val *VirtualMachineInstancePropertiesOsProfileArgs) Defaults() *VirtualMachineInstancePropertiesOsProfileArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (VirtualMachineInstancePropertiesOsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesOsProfile)(nil)).Elem()
}

func (i VirtualMachineInstancePropertiesOsProfileArgs) ToVirtualMachineInstancePropertiesOsProfileOutput() VirtualMachineInstancePropertiesOsProfileOutput {
	return i.ToVirtualMachineInstancePropertiesOsProfileOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesOsProfileArgs) ToVirtualMachineInstancePropertiesOsProfileOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesOsProfileOutput)
}

func (i VirtualMachineInstancePropertiesOsProfileArgs) ToVirtualMachineInstancePropertiesOsProfilePtrOutput() VirtualMachineInstancePropertiesOsProfilePtrOutput {
	return i.ToVirtualMachineInstancePropertiesOsProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesOsProfileArgs) ToVirtualMachineInstancePropertiesOsProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesOsProfileOutput).ToVirtualMachineInstancePropertiesOsProfilePtrOutputWithContext(ctx)
}

// VirtualMachineInstancePropertiesOsProfilePtrInput is an input type that accepts VirtualMachineInstancePropertiesOsProfileArgs, VirtualMachineInstancePropertiesOsProfilePtr and VirtualMachineInstancePropertiesOsProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesOsProfilePtrInput` via:
//
//	        VirtualMachineInstancePropertiesOsProfileArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineInstancePropertiesOsProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesOsProfilePtrOutput() VirtualMachineInstancePropertiesOsProfilePtrOutput
	ToVirtualMachineInstancePropertiesOsProfilePtrOutputWithContext(context.Context) VirtualMachineInstancePropertiesOsProfilePtrOutput
}

type virtualMachineInstancePropertiesOsProfilePtrType VirtualMachineInstancePropertiesOsProfileArgs

func VirtualMachineInstancePropertiesOsProfilePtr(v *VirtualMachineInstancePropertiesOsProfileArgs) VirtualMachineInstancePropertiesOsProfilePtrInput {
	return (*virtualMachineInstancePropertiesOsProfilePtrType)(v)
}

func (*virtualMachineInstancePropertiesOsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesOsProfile)(nil)).Elem()
}

func (i *virtualMachineInstancePropertiesOsProfilePtrType) ToVirtualMachineInstancePropertiesOsProfilePtrOutput() VirtualMachineInstancePropertiesOsProfilePtrOutput {
	return i.ToVirtualMachineInstancePropertiesOsProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineInstancePropertiesOsProfilePtrType) ToVirtualMachineInstancePropertiesOsProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesOsProfilePtrOutput)
}

// OsProfile - describes the configuration of the operating system and sets login data
type VirtualMachineInstancePropertiesOsProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesOsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesOsProfile)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesOsProfileOutput) ToVirtualMachineInstancePropertiesOsProfileOutput() VirtualMachineInstancePropertiesOsProfileOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileOutput) ToVirtualMachineInstancePropertiesOsProfileOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileOutput) ToVirtualMachineInstancePropertiesOsProfilePtrOutput() VirtualMachineInstancePropertiesOsProfilePtrOutput {
	return o.ToVirtualMachineInstancePropertiesOsProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineInstancePropertiesOsProfileOutput) ToVirtualMachineInstancePropertiesOsProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineInstancePropertiesOsProfile) *VirtualMachineInstancePropertiesOsProfile {
		return &v
	}).(VirtualMachineInstancePropertiesOsProfilePtrOutput)
}

// AdminPassword - admin password
func (o VirtualMachineInstancePropertiesOsProfileOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfile) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// AdminUsername - admin username
func (o VirtualMachineInstancePropertiesOsProfileOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfile) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// ComputerName - name of the compute
func (o VirtualMachineInstancePropertiesOsProfileOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfile) *string { return v.ComputerName }).(pulumi.StringPtrOutput)
}

// LinuxConfiguration - linux specific configuration values for the virtual machine instance
func (o VirtualMachineInstancePropertiesOsProfileOutput) LinuxConfiguration() VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfile) *VirtualMachineInstancePropertiesOsProfileLinuxConfiguration {
		return v.LinuxConfiguration
	}).(VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput)
}

// Windows Configuration for the virtual machine instance
func (o VirtualMachineInstancePropertiesOsProfileOutput) WindowsConfiguration() VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfile) *VirtualMachineInstancePropertiesOsProfileWindowsConfiguration {
		return v.WindowsConfiguration
	}).(VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput)
}

type VirtualMachineInstancePropertiesOsProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesOsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesOsProfile)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesOsProfilePtrOutput) ToVirtualMachineInstancePropertiesOsProfilePtrOutput() VirtualMachineInstancePropertiesOsProfilePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfilePtrOutput) ToVirtualMachineInstancePropertiesOsProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfilePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfilePtrOutput) Elem() VirtualMachineInstancePropertiesOsProfileOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfile) VirtualMachineInstancePropertiesOsProfile {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesOsProfile
		return ret
	}).(VirtualMachineInstancePropertiesOsProfileOutput)
}

// AdminPassword - admin password
func (o VirtualMachineInstancePropertiesOsProfilePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfile) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// AdminUsername - admin username
func (o VirtualMachineInstancePropertiesOsProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfile) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// ComputerName - name of the compute
func (o VirtualMachineInstancePropertiesOsProfilePtrOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfile) *string {
		if v == nil {
			return nil
		}
		return v.ComputerName
	}).(pulumi.StringPtrOutput)
}

// LinuxConfiguration - linux specific configuration values for the virtual machine instance
func (o VirtualMachineInstancePropertiesOsProfilePtrOutput) LinuxConfiguration() VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfile) *VirtualMachineInstancePropertiesOsProfileLinuxConfiguration {
		if v == nil {
			return nil
		}
		return v.LinuxConfiguration
	}).(VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput)
}

// Windows Configuration for the virtual machine instance
func (o VirtualMachineInstancePropertiesOsProfilePtrOutput) WindowsConfiguration() VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfile) *VirtualMachineInstancePropertiesOsProfileWindowsConfiguration {
		if v == nil {
			return nil
		}
		return v.WindowsConfiguration
	}).(VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput)
}

// LinuxConfiguration - linux specific configuration values for the virtual machine instance
type VirtualMachineInstancePropertiesOsProfileLinuxConfiguration struct {
	// DisablePasswordAuthentication - whether password authentication should be disabled
	DisablePasswordAuthentication *bool `pulumi:"disablePasswordAuthentication"`
	// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
	ProvisionVMAgent *bool `pulumi:"provisionVMAgent"`
	// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
	ProvisionVMConfigAgent *bool `pulumi:"provisionVMConfigAgent"`
	// Specifies the ssh key configuration for a Linux OS.
	Ssh *SshConfiguration `pulumi:"ssh"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesOsProfileLinuxConfiguration
func (val *VirtualMachineInstancePropertiesOsProfileLinuxConfiguration) Defaults() *VirtualMachineInstancePropertiesOsProfileLinuxConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ProvisionVMAgent == nil {
		provisionVMAgent_ := true
		tmp.ProvisionVMAgent = &provisionVMAgent_
	}
	if tmp.ProvisionVMConfigAgent == nil {
		provisionVMConfigAgent_ := true
		tmp.ProvisionVMConfigAgent = &provisionVMConfigAgent_
	}
	return &tmp
}

// VirtualMachineInstancePropertiesOsProfileLinuxConfigurationInput is an input type that accepts VirtualMachineInstancePropertiesOsProfileLinuxConfigurationArgs and VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesOsProfileLinuxConfigurationInput` via:
//
//	VirtualMachineInstancePropertiesOsProfileLinuxConfigurationArgs{...}
type VirtualMachineInstancePropertiesOsProfileLinuxConfigurationInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput() VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput
	ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutputWithContext(context.Context) VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput
}

// LinuxConfiguration - linux specific configuration values for the virtual machine instance
type VirtualMachineInstancePropertiesOsProfileLinuxConfigurationArgs struct {
	// DisablePasswordAuthentication - whether password authentication should be disabled
	DisablePasswordAuthentication pulumi.BoolPtrInput `pulumi:"disablePasswordAuthentication"`
	// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
	ProvisionVMAgent pulumi.BoolPtrInput `pulumi:"provisionVMAgent"`
	// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
	ProvisionVMConfigAgent pulumi.BoolPtrInput `pulumi:"provisionVMConfigAgent"`
	// Specifies the ssh key configuration for a Linux OS.
	Ssh SshConfigurationPtrInput `pulumi:"ssh"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesOsProfileLinuxConfigurationArgs
func (val *VirtualMachineInstancePropertiesOsProfileLinuxConfigurationArgs) Defaults() *VirtualMachineInstancePropertiesOsProfileLinuxConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ProvisionVMAgent == nil {
		tmp.ProvisionVMAgent = pulumi.BoolPtr(true)
	}
	if tmp.ProvisionVMConfigAgent == nil {
		tmp.ProvisionVMConfigAgent = pulumi.BoolPtr(true)
	}
	return &tmp
}
func (VirtualMachineInstancePropertiesOsProfileLinuxConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesOsProfileLinuxConfiguration)(nil)).Elem()
}

func (i VirtualMachineInstancePropertiesOsProfileLinuxConfigurationArgs) ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput() VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput {
	return i.ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesOsProfileLinuxConfigurationArgs) ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput)
}

func (i VirtualMachineInstancePropertiesOsProfileLinuxConfigurationArgs) ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput() VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput {
	return i.ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesOsProfileLinuxConfigurationArgs) ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput).ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutputWithContext(ctx)
}

// VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrInput is an input type that accepts VirtualMachineInstancePropertiesOsProfileLinuxConfigurationArgs, VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtr and VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrInput` via:
//
//	        VirtualMachineInstancePropertiesOsProfileLinuxConfigurationArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput() VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput
	ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutputWithContext(context.Context) VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput
}

type virtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrType VirtualMachineInstancePropertiesOsProfileLinuxConfigurationArgs

func VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtr(v *VirtualMachineInstancePropertiesOsProfileLinuxConfigurationArgs) VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrInput {
	return (*virtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrType)(v)
}

func (*virtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesOsProfileLinuxConfiguration)(nil)).Elem()
}

func (i *virtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrType) ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput() VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput {
	return i.ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutputWithContext(context.Background())
}

func (i *virtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrType) ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput)
}

// LinuxConfiguration - linux specific configuration values for the virtual machine instance
type VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesOsProfileLinuxConfiguration)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput) ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput() VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput) ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput) ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput() VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput {
	return o.ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutputWithContext(context.Background())
}

func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput) ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineInstancePropertiesOsProfileLinuxConfiguration) *VirtualMachineInstancePropertiesOsProfileLinuxConfiguration {
		return &v
	}).(VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput)
}

// DisablePasswordAuthentication - whether password authentication should be disabled
func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileLinuxConfiguration) *bool {
		return v.DisablePasswordAuthentication
	}).(pulumi.BoolPtrOutput)
}

// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileLinuxConfiguration) *bool { return v.ProvisionVMAgent }).(pulumi.BoolPtrOutput)
}

// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput) ProvisionVMConfigAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileLinuxConfiguration) *bool {
		return v.ProvisionVMConfigAgent
	}).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for a Linux OS.
func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput) Ssh() SshConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileLinuxConfiguration) *SshConfiguration { return v.Ssh }).(SshConfigurationPtrOutput)
}

type VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesOsProfileLinuxConfiguration)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput) ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput() VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput) ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput) Elem() VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileLinuxConfiguration) VirtualMachineInstancePropertiesOsProfileLinuxConfiguration {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesOsProfileLinuxConfiguration
		return ret
	}).(VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput)
}

// DisablePasswordAuthentication - whether password authentication should be disabled
func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileLinuxConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisablePasswordAuthentication
	}).(pulumi.BoolPtrOutput)
}

// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileLinuxConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVMAgent
	}).(pulumi.BoolPtrOutput)
}

// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput) ProvisionVMConfigAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileLinuxConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVMConfigAgent
	}).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for a Linux OS.
func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput) Ssh() SshConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileLinuxConfiguration) *SshConfiguration {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(SshConfigurationPtrOutput)
}

// LinuxConfiguration - linux specific configuration values for the virtual machine instance
type VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse struct {
	// DisablePasswordAuthentication - whether password authentication should be disabled
	DisablePasswordAuthentication *bool `pulumi:"disablePasswordAuthentication"`
	// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
	ProvisionVMAgent *bool `pulumi:"provisionVMAgent"`
	// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
	ProvisionVMConfigAgent *bool `pulumi:"provisionVMConfigAgent"`
	// Specifies the ssh key configuration for a Linux OS.
	Ssh *SshConfigurationResponse `pulumi:"ssh"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse
func (val *VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse) Defaults() *VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ProvisionVMAgent == nil {
		provisionVMAgent_ := true
		tmp.ProvisionVMAgent = &provisionVMAgent_
	}
	if tmp.ProvisionVMConfigAgent == nil {
		provisionVMConfigAgent_ := true
		tmp.ProvisionVMConfigAgent = &provisionVMConfigAgent_
	}
	return &tmp
}

// LinuxConfiguration - linux specific configuration values for the virtual machine instance
type VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponseOutput) ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponseOutput() VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponseOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponseOutput) ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponseOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponseOutput {
	return o
}

// DisablePasswordAuthentication - whether password authentication should be disabled
func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponseOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse) *bool {
		return v.DisablePasswordAuthentication
	}).(pulumi.BoolPtrOutput)
}

// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponseOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse) *bool {
		return v.ProvisionVMAgent
	}).(pulumi.BoolPtrOutput)
}

// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponseOutput) ProvisionVMConfigAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse) *bool {
		return v.ProvisionVMConfigAgent
	}).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for a Linux OS.
func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponseOutput) Ssh() SshConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse) *SshConfigurationResponse {
		return v.Ssh
	}).(SshConfigurationResponsePtrOutput)
}

type VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput) ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput() VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput) ToVirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput) Elem() VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse) VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse
		return ret
	}).(VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponseOutput)
}

// DisablePasswordAuthentication - whether password authentication should be disabled
func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisablePasswordAuthentication
	}).(pulumi.BoolPtrOutput)
}

// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVMAgent
	}).(pulumi.BoolPtrOutput)
}

// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput) ProvisionVMConfigAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVMConfigAgent
	}).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for a Linux OS.
func (o VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput) Ssh() SshConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse) *SshConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(SshConfigurationResponsePtrOutput)
}

// OsProfile - describes the configuration of the operating system and sets login data
type VirtualMachineInstancePropertiesOsProfileResponse struct {
	// AdminUsername - admin username
	AdminUsername *string `pulumi:"adminUsername"`
	// ComputerName - name of the compute
	ComputerName *string `pulumi:"computerName"`
	// LinuxConfiguration - linux specific configuration values for the virtual machine instance
	LinuxConfiguration *VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse `pulumi:"linuxConfiguration"`
	// Windows Configuration for the virtual machine instance
	WindowsConfiguration *VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse `pulumi:"windowsConfiguration"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesOsProfileResponse
func (val *VirtualMachineInstancePropertiesOsProfileResponse) Defaults() *VirtualMachineInstancePropertiesOsProfileResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.LinuxConfiguration = tmp.LinuxConfiguration.Defaults()

	tmp.WindowsConfiguration = tmp.WindowsConfiguration.Defaults()

	return &tmp
}

// OsProfile - describes the configuration of the operating system and sets login data
type VirtualMachineInstancePropertiesOsProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesOsProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesOsProfileResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesOsProfileResponseOutput) ToVirtualMachineInstancePropertiesOsProfileResponseOutput() VirtualMachineInstancePropertiesOsProfileResponseOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileResponseOutput) ToVirtualMachineInstancePropertiesOsProfileResponseOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileResponseOutput {
	return o
}

// AdminUsername - admin username
func (o VirtualMachineInstancePropertiesOsProfileResponseOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileResponse) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// ComputerName - name of the compute
func (o VirtualMachineInstancePropertiesOsProfileResponseOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileResponse) *string { return v.ComputerName }).(pulumi.StringPtrOutput)
}

// LinuxConfiguration - linux specific configuration values for the virtual machine instance
func (o VirtualMachineInstancePropertiesOsProfileResponseOutput) LinuxConfiguration() VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileResponse) *VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse {
		return v.LinuxConfiguration
	}).(VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput)
}

// Windows Configuration for the virtual machine instance
func (o VirtualMachineInstancePropertiesOsProfileResponseOutput) WindowsConfiguration() VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileResponse) *VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse {
		return v.WindowsConfiguration
	}).(VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput)
}

type VirtualMachineInstancePropertiesOsProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesOsProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesOsProfileResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesOsProfileResponsePtrOutput) ToVirtualMachineInstancePropertiesOsProfileResponsePtrOutput() VirtualMachineInstancePropertiesOsProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileResponsePtrOutput) ToVirtualMachineInstancePropertiesOsProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileResponsePtrOutput) Elem() VirtualMachineInstancePropertiesOsProfileResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileResponse) VirtualMachineInstancePropertiesOsProfileResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesOsProfileResponse
		return ret
	}).(VirtualMachineInstancePropertiesOsProfileResponseOutput)
}

// AdminUsername - admin username
func (o VirtualMachineInstancePropertiesOsProfileResponsePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// ComputerName - name of the compute
func (o VirtualMachineInstancePropertiesOsProfileResponsePtrOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ComputerName
	}).(pulumi.StringPtrOutput)
}

// LinuxConfiguration - linux specific configuration values for the virtual machine instance
func (o VirtualMachineInstancePropertiesOsProfileResponsePtrOutput) LinuxConfiguration() VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileResponse) *VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.LinuxConfiguration
	}).(VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput)
}

// Windows Configuration for the virtual machine instance
func (o VirtualMachineInstancePropertiesOsProfileResponsePtrOutput) WindowsConfiguration() VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileResponse) *VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.WindowsConfiguration
	}).(VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput)
}

// Windows Configuration for the virtual machine instance
type VirtualMachineInstancePropertiesOsProfileWindowsConfiguration struct {
	// Whether to EnableAutomaticUpdates on the machine
	EnableAutomaticUpdates *bool `pulumi:"enableAutomaticUpdates"`
	// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
	ProvisionVMAgent *bool `pulumi:"provisionVMAgent"`
	// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
	ProvisionVMConfigAgent *bool `pulumi:"provisionVMConfigAgent"`
	// Specifies the ssh key configuration for Windows OS.
	Ssh *SshConfiguration `pulumi:"ssh"`
	// TimeZone for the virtual machine instance
	TimeZone *string `pulumi:"timeZone"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesOsProfileWindowsConfiguration
func (val *VirtualMachineInstancePropertiesOsProfileWindowsConfiguration) Defaults() *VirtualMachineInstancePropertiesOsProfileWindowsConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ProvisionVMAgent == nil {
		provisionVMAgent_ := true
		tmp.ProvisionVMAgent = &provisionVMAgent_
	}
	if tmp.ProvisionVMConfigAgent == nil {
		provisionVMConfigAgent_ := true
		tmp.ProvisionVMConfigAgent = &provisionVMConfigAgent_
	}
	return &tmp
}

// VirtualMachineInstancePropertiesOsProfileWindowsConfigurationInput is an input type that accepts VirtualMachineInstancePropertiesOsProfileWindowsConfigurationArgs and VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesOsProfileWindowsConfigurationInput` via:
//
//	VirtualMachineInstancePropertiesOsProfileWindowsConfigurationArgs{...}
type VirtualMachineInstancePropertiesOsProfileWindowsConfigurationInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput() VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput
	ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutputWithContext(context.Context) VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput
}

// Windows Configuration for the virtual machine instance
type VirtualMachineInstancePropertiesOsProfileWindowsConfigurationArgs struct {
	// Whether to EnableAutomaticUpdates on the machine
	EnableAutomaticUpdates pulumi.BoolPtrInput `pulumi:"enableAutomaticUpdates"`
	// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
	ProvisionVMAgent pulumi.BoolPtrInput `pulumi:"provisionVMAgent"`
	// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
	ProvisionVMConfigAgent pulumi.BoolPtrInput `pulumi:"provisionVMConfigAgent"`
	// Specifies the ssh key configuration for Windows OS.
	Ssh SshConfigurationPtrInput `pulumi:"ssh"`
	// TimeZone for the virtual machine instance
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesOsProfileWindowsConfigurationArgs
func (val *VirtualMachineInstancePropertiesOsProfileWindowsConfigurationArgs) Defaults() *VirtualMachineInstancePropertiesOsProfileWindowsConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ProvisionVMAgent == nil {
		tmp.ProvisionVMAgent = pulumi.BoolPtr(true)
	}
	if tmp.ProvisionVMConfigAgent == nil {
		tmp.ProvisionVMConfigAgent = pulumi.BoolPtr(true)
	}
	return &tmp
}
func (VirtualMachineInstancePropertiesOsProfileWindowsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesOsProfileWindowsConfiguration)(nil)).Elem()
}

func (i VirtualMachineInstancePropertiesOsProfileWindowsConfigurationArgs) ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput() VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput {
	return i.ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesOsProfileWindowsConfigurationArgs) ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput)
}

func (i VirtualMachineInstancePropertiesOsProfileWindowsConfigurationArgs) ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput() VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput {
	return i.ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesOsProfileWindowsConfigurationArgs) ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput).ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutputWithContext(ctx)
}

// VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrInput is an input type that accepts VirtualMachineInstancePropertiesOsProfileWindowsConfigurationArgs, VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtr and VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrInput` via:
//
//	        VirtualMachineInstancePropertiesOsProfileWindowsConfigurationArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput() VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput
	ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutputWithContext(context.Context) VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput
}

type virtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrType VirtualMachineInstancePropertiesOsProfileWindowsConfigurationArgs

func VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtr(v *VirtualMachineInstancePropertiesOsProfileWindowsConfigurationArgs) VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrInput {
	return (*virtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrType)(v)
}

func (*virtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesOsProfileWindowsConfiguration)(nil)).Elem()
}

func (i *virtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrType) ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput() VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput {
	return i.ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutputWithContext(context.Background())
}

func (i *virtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrType) ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput)
}

// Windows Configuration for the virtual machine instance
type VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesOsProfileWindowsConfiguration)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput) ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput() VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput) ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput) ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput() VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput {
	return o.ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutputWithContext(context.Background())
}

func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput) ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineInstancePropertiesOsProfileWindowsConfiguration) *VirtualMachineInstancePropertiesOsProfileWindowsConfiguration {
		return &v
	}).(VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput)
}

// Whether to EnableAutomaticUpdates on the machine
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput) EnableAutomaticUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileWindowsConfiguration) *bool {
		return v.EnableAutomaticUpdates
	}).(pulumi.BoolPtrOutput)
}

// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileWindowsConfiguration) *bool { return v.ProvisionVMAgent }).(pulumi.BoolPtrOutput)
}

// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput) ProvisionVMConfigAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileWindowsConfiguration) *bool {
		return v.ProvisionVMConfigAgent
	}).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for Windows OS.
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput) Ssh() SshConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileWindowsConfiguration) *SshConfiguration { return v.Ssh }).(SshConfigurationPtrOutput)
}

// TimeZone for the virtual machine instance
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileWindowsConfiguration) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesOsProfileWindowsConfiguration)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput) ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput() VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput) ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput) Elem() VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileWindowsConfiguration) VirtualMachineInstancePropertiesOsProfileWindowsConfiguration {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesOsProfileWindowsConfiguration
		return ret
	}).(VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput)
}

// Whether to EnableAutomaticUpdates on the machine
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput) EnableAutomaticUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileWindowsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutomaticUpdates
	}).(pulumi.BoolPtrOutput)
}

// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileWindowsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVMAgent
	}).(pulumi.BoolPtrOutput)
}

// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput) ProvisionVMConfigAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileWindowsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVMConfigAgent
	}).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for Windows OS.
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput) Ssh() SshConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileWindowsConfiguration) *SshConfiguration {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(SshConfigurationPtrOutput)
}

// TimeZone for the virtual machine instance
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileWindowsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Windows Configuration for the virtual machine instance
type VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse struct {
	// Whether to EnableAutomaticUpdates on the machine
	EnableAutomaticUpdates *bool `pulumi:"enableAutomaticUpdates"`
	// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
	ProvisionVMAgent *bool `pulumi:"provisionVMAgent"`
	// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
	ProvisionVMConfigAgent *bool `pulumi:"provisionVMConfigAgent"`
	// Specifies the ssh key configuration for Windows OS.
	Ssh *SshConfigurationResponse `pulumi:"ssh"`
	// TimeZone for the virtual machine instance
	TimeZone *string `pulumi:"timeZone"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse
func (val *VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse) Defaults() *VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ProvisionVMAgent == nil {
		provisionVMAgent_ := true
		tmp.ProvisionVMAgent = &provisionVMAgent_
	}
	if tmp.ProvisionVMConfigAgent == nil {
		provisionVMConfigAgent_ := true
		tmp.ProvisionVMConfigAgent = &provisionVMConfigAgent_
	}
	return &tmp
}

// Windows Configuration for the virtual machine instance
type VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponseOutput) ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponseOutput() VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponseOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponseOutput) ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponseOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponseOutput {
	return o
}

// Whether to EnableAutomaticUpdates on the machine
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponseOutput) EnableAutomaticUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse) *bool {
		return v.EnableAutomaticUpdates
	}).(pulumi.BoolPtrOutput)
}

// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponseOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse) *bool {
		return v.ProvisionVMAgent
	}).(pulumi.BoolPtrOutput)
}

// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponseOutput) ProvisionVMConfigAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse) *bool {
		return v.ProvisionVMConfigAgent
	}).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for Windows OS.
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponseOutput) Ssh() SshConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse) *SshConfigurationResponse {
		return v.Ssh
	}).(SshConfigurationResponsePtrOutput)
}

// TimeZone for the virtual machine instance
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponseOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse) *string {
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput) ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput() VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput) ToVirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput) Elem() VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse) VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse
		return ret
	}).(VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponseOutput)
}

// Whether to EnableAutomaticUpdates on the machine
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput) EnableAutomaticUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutomaticUpdates
	}).(pulumi.BoolPtrOutput)
}

// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput) ProvisionVMAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVMAgent
	}).(pulumi.BoolPtrOutput)
}

// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput) ProvisionVMConfigAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVMConfigAgent
	}).(pulumi.BoolPtrOutput)
}

// Specifies the ssh key configuration for Windows OS.
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput) Ssh() SshConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse) *SshConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(SshConfigurationResponsePtrOutput)
}

// TimeZone for the virtual machine instance
func (o VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// SecurityProfile - Specifies the security settings for the virtual machine instance.
type VirtualMachineInstancePropertiesSecurityProfile struct {
	// Enable TPM flag
	EnableTPM *bool `pulumi:"enableTPM"`
	// Specifies the SecurityType of the virtual machine. EnableTPM and SecureBootEnabled must be set to true for SecurityType to function.
	SecurityType *string `pulumi:"securityType"`
	// Uefi settings of the virtual machine instance
	UefiSettings *VirtualMachineInstancePropertiesSecurityProfileUefiSettings `pulumi:"uefiSettings"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesSecurityProfile
func (val *VirtualMachineInstancePropertiesSecurityProfile) Defaults() *VirtualMachineInstancePropertiesSecurityProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableTPM == nil {
		enableTPM_ := false
		tmp.EnableTPM = &enableTPM_
	}
	tmp.UefiSettings = tmp.UefiSettings.Defaults()

	return &tmp
}

// VirtualMachineInstancePropertiesSecurityProfileInput is an input type that accepts VirtualMachineInstancePropertiesSecurityProfileArgs and VirtualMachineInstancePropertiesSecurityProfileOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesSecurityProfileInput` via:
//
//	VirtualMachineInstancePropertiesSecurityProfileArgs{...}
type VirtualMachineInstancePropertiesSecurityProfileInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesSecurityProfileOutput() VirtualMachineInstancePropertiesSecurityProfileOutput
	ToVirtualMachineInstancePropertiesSecurityProfileOutputWithContext(context.Context) VirtualMachineInstancePropertiesSecurityProfileOutput
}

// SecurityProfile - Specifies the security settings for the virtual machine instance.
type VirtualMachineInstancePropertiesSecurityProfileArgs struct {
	// Enable TPM flag
	EnableTPM pulumi.BoolPtrInput `pulumi:"enableTPM"`
	// Specifies the SecurityType of the virtual machine. EnableTPM and SecureBootEnabled must be set to true for SecurityType to function.
	SecurityType pulumi.StringPtrInput `pulumi:"securityType"`
	// Uefi settings of the virtual machine instance
	UefiSettings VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrInput `pulumi:"uefiSettings"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesSecurityProfileArgs
func (val *VirtualMachineInstancePropertiesSecurityProfileArgs) Defaults() *VirtualMachineInstancePropertiesSecurityProfileArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableTPM == nil {
		tmp.EnableTPM = pulumi.BoolPtr(false)
	}

	return &tmp
}
func (VirtualMachineInstancePropertiesSecurityProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesSecurityProfile)(nil)).Elem()
}

func (i VirtualMachineInstancePropertiesSecurityProfileArgs) ToVirtualMachineInstancePropertiesSecurityProfileOutput() VirtualMachineInstancePropertiesSecurityProfileOutput {
	return i.ToVirtualMachineInstancePropertiesSecurityProfileOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesSecurityProfileArgs) ToVirtualMachineInstancePropertiesSecurityProfileOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesSecurityProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesSecurityProfileOutput)
}

func (i VirtualMachineInstancePropertiesSecurityProfileArgs) ToVirtualMachineInstancePropertiesSecurityProfilePtrOutput() VirtualMachineInstancePropertiesSecurityProfilePtrOutput {
	return i.ToVirtualMachineInstancePropertiesSecurityProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesSecurityProfileArgs) ToVirtualMachineInstancePropertiesSecurityProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesSecurityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesSecurityProfileOutput).ToVirtualMachineInstancePropertiesSecurityProfilePtrOutputWithContext(ctx)
}

// VirtualMachineInstancePropertiesSecurityProfilePtrInput is an input type that accepts VirtualMachineInstancePropertiesSecurityProfileArgs, VirtualMachineInstancePropertiesSecurityProfilePtr and VirtualMachineInstancePropertiesSecurityProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesSecurityProfilePtrInput` via:
//
//	        VirtualMachineInstancePropertiesSecurityProfileArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineInstancePropertiesSecurityProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesSecurityProfilePtrOutput() VirtualMachineInstancePropertiesSecurityProfilePtrOutput
	ToVirtualMachineInstancePropertiesSecurityProfilePtrOutputWithContext(context.Context) VirtualMachineInstancePropertiesSecurityProfilePtrOutput
}

type virtualMachineInstancePropertiesSecurityProfilePtrType VirtualMachineInstancePropertiesSecurityProfileArgs

func VirtualMachineInstancePropertiesSecurityProfilePtr(v *VirtualMachineInstancePropertiesSecurityProfileArgs) VirtualMachineInstancePropertiesSecurityProfilePtrInput {
	return (*virtualMachineInstancePropertiesSecurityProfilePtrType)(v)
}

func (*virtualMachineInstancePropertiesSecurityProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesSecurityProfile)(nil)).Elem()
}

func (i *virtualMachineInstancePropertiesSecurityProfilePtrType) ToVirtualMachineInstancePropertiesSecurityProfilePtrOutput() VirtualMachineInstancePropertiesSecurityProfilePtrOutput {
	return i.ToVirtualMachineInstancePropertiesSecurityProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineInstancePropertiesSecurityProfilePtrType) ToVirtualMachineInstancePropertiesSecurityProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesSecurityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesSecurityProfilePtrOutput)
}

// SecurityProfile - Specifies the security settings for the virtual machine instance.
type VirtualMachineInstancePropertiesSecurityProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesSecurityProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesSecurityProfile)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesSecurityProfileOutput) ToVirtualMachineInstancePropertiesSecurityProfileOutput() VirtualMachineInstancePropertiesSecurityProfileOutput {
	return o
}

func (o VirtualMachineInstancePropertiesSecurityProfileOutput) ToVirtualMachineInstancePropertiesSecurityProfileOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesSecurityProfileOutput {
	return o
}

func (o VirtualMachineInstancePropertiesSecurityProfileOutput) ToVirtualMachineInstancePropertiesSecurityProfilePtrOutput() VirtualMachineInstancePropertiesSecurityProfilePtrOutput {
	return o.ToVirtualMachineInstancePropertiesSecurityProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineInstancePropertiesSecurityProfileOutput) ToVirtualMachineInstancePropertiesSecurityProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesSecurityProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineInstancePropertiesSecurityProfile) *VirtualMachineInstancePropertiesSecurityProfile {
		return &v
	}).(VirtualMachineInstancePropertiesSecurityProfilePtrOutput)
}

// Enable TPM flag
func (o VirtualMachineInstancePropertiesSecurityProfileOutput) EnableTPM() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesSecurityProfile) *bool { return v.EnableTPM }).(pulumi.BoolPtrOutput)
}

// Specifies the SecurityType of the virtual machine. EnableTPM and SecureBootEnabled must be set to true for SecurityType to function.
func (o VirtualMachineInstancePropertiesSecurityProfileOutput) SecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesSecurityProfile) *string { return v.SecurityType }).(pulumi.StringPtrOutput)
}

// Uefi settings of the virtual machine instance
func (o VirtualMachineInstancePropertiesSecurityProfileOutput) UefiSettings() VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesSecurityProfile) *VirtualMachineInstancePropertiesSecurityProfileUefiSettings {
		return v.UefiSettings
	}).(VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput)
}

type VirtualMachineInstancePropertiesSecurityProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesSecurityProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesSecurityProfile)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesSecurityProfilePtrOutput) ToVirtualMachineInstancePropertiesSecurityProfilePtrOutput() VirtualMachineInstancePropertiesSecurityProfilePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesSecurityProfilePtrOutput) ToVirtualMachineInstancePropertiesSecurityProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesSecurityProfilePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesSecurityProfilePtrOutput) Elem() VirtualMachineInstancePropertiesSecurityProfileOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesSecurityProfile) VirtualMachineInstancePropertiesSecurityProfile {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesSecurityProfile
		return ret
	}).(VirtualMachineInstancePropertiesSecurityProfileOutput)
}

// Enable TPM flag
func (o VirtualMachineInstancePropertiesSecurityProfilePtrOutput) EnableTPM() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesSecurityProfile) *bool {
		if v == nil {
			return nil
		}
		return v.EnableTPM
	}).(pulumi.BoolPtrOutput)
}

// Specifies the SecurityType of the virtual machine. EnableTPM and SecureBootEnabled must be set to true for SecurityType to function.
func (o VirtualMachineInstancePropertiesSecurityProfilePtrOutput) SecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesSecurityProfile) *string {
		if v == nil {
			return nil
		}
		return v.SecurityType
	}).(pulumi.StringPtrOutput)
}

// Uefi settings of the virtual machine instance
func (o VirtualMachineInstancePropertiesSecurityProfilePtrOutput) UefiSettings() VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesSecurityProfile) *VirtualMachineInstancePropertiesSecurityProfileUefiSettings {
		if v == nil {
			return nil
		}
		return v.UefiSettings
	}).(VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput)
}

// SecurityProfile - Specifies the security settings for the virtual machine instance.
type VirtualMachineInstancePropertiesSecurityProfileResponse struct {
	// Enable TPM flag
	EnableTPM *bool `pulumi:"enableTPM"`
	// Specifies the SecurityType of the virtual machine. EnableTPM and SecureBootEnabled must be set to true for SecurityType to function.
	SecurityType *string `pulumi:"securityType"`
	// Uefi settings of the virtual machine instance
	UefiSettings *VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponse `pulumi:"uefiSettings"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesSecurityProfileResponse
func (val *VirtualMachineInstancePropertiesSecurityProfileResponse) Defaults() *VirtualMachineInstancePropertiesSecurityProfileResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EnableTPM == nil {
		enableTPM_ := false
		tmp.EnableTPM = &enableTPM_
	}
	tmp.UefiSettings = tmp.UefiSettings.Defaults()

	return &tmp
}

// SecurityProfile - Specifies the security settings for the virtual machine instance.
type VirtualMachineInstancePropertiesSecurityProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesSecurityProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesSecurityProfileResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesSecurityProfileResponseOutput) ToVirtualMachineInstancePropertiesSecurityProfileResponseOutput() VirtualMachineInstancePropertiesSecurityProfileResponseOutput {
	return o
}

func (o VirtualMachineInstancePropertiesSecurityProfileResponseOutput) ToVirtualMachineInstancePropertiesSecurityProfileResponseOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesSecurityProfileResponseOutput {
	return o
}

// Enable TPM flag
func (o VirtualMachineInstancePropertiesSecurityProfileResponseOutput) EnableTPM() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesSecurityProfileResponse) *bool { return v.EnableTPM }).(pulumi.BoolPtrOutput)
}

// Specifies the SecurityType of the virtual machine. EnableTPM and SecureBootEnabled must be set to true for SecurityType to function.
func (o VirtualMachineInstancePropertiesSecurityProfileResponseOutput) SecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesSecurityProfileResponse) *string { return v.SecurityType }).(pulumi.StringPtrOutput)
}

// Uefi settings of the virtual machine instance
func (o VirtualMachineInstancePropertiesSecurityProfileResponseOutput) UefiSettings() VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesSecurityProfileResponse) *VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponse {
		return v.UefiSettings
	}).(VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponsePtrOutput)
}

type VirtualMachineInstancePropertiesSecurityProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesSecurityProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesSecurityProfileResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesSecurityProfileResponsePtrOutput) ToVirtualMachineInstancePropertiesSecurityProfileResponsePtrOutput() VirtualMachineInstancePropertiesSecurityProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesSecurityProfileResponsePtrOutput) ToVirtualMachineInstancePropertiesSecurityProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesSecurityProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesSecurityProfileResponsePtrOutput) Elem() VirtualMachineInstancePropertiesSecurityProfileResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesSecurityProfileResponse) VirtualMachineInstancePropertiesSecurityProfileResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesSecurityProfileResponse
		return ret
	}).(VirtualMachineInstancePropertiesSecurityProfileResponseOutput)
}

// Enable TPM flag
func (o VirtualMachineInstancePropertiesSecurityProfileResponsePtrOutput) EnableTPM() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesSecurityProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableTPM
	}).(pulumi.BoolPtrOutput)
}

// Specifies the SecurityType of the virtual machine. EnableTPM and SecureBootEnabled must be set to true for SecurityType to function.
func (o VirtualMachineInstancePropertiesSecurityProfileResponsePtrOutput) SecurityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesSecurityProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecurityType
	}).(pulumi.StringPtrOutput)
}

// Uefi settings of the virtual machine instance
func (o VirtualMachineInstancePropertiesSecurityProfileResponsePtrOutput) UefiSettings() VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesSecurityProfileResponse) *VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponse {
		if v == nil {
			return nil
		}
		return v.UefiSettings
	}).(VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponsePtrOutput)
}

// Uefi settings - Specifies whether secure boot should be enabled on the virtual machine instance.
type VirtualMachineInstancePropertiesSecurityProfileUefiSettings struct {
	// Specifies whether secure boot should be enabled on the virtual machine instance.
	SecureBootEnabled *bool `pulumi:"secureBootEnabled"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesSecurityProfileUefiSettings
func (val *VirtualMachineInstancePropertiesSecurityProfileUefiSettings) Defaults() *VirtualMachineInstancePropertiesSecurityProfileUefiSettings {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.SecureBootEnabled == nil {
		secureBootEnabled_ := false
		tmp.SecureBootEnabled = &secureBootEnabled_
	}
	return &tmp
}

// VirtualMachineInstancePropertiesSecurityProfileUefiSettingsInput is an input type that accepts VirtualMachineInstancePropertiesSecurityProfileUefiSettingsArgs and VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesSecurityProfileUefiSettingsInput` via:
//
//	VirtualMachineInstancePropertiesSecurityProfileUefiSettingsArgs{...}
type VirtualMachineInstancePropertiesSecurityProfileUefiSettingsInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput() VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput
	ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutputWithContext(context.Context) VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput
}

// Uefi settings - Specifies whether secure boot should be enabled on the virtual machine instance.
type VirtualMachineInstancePropertiesSecurityProfileUefiSettingsArgs struct {
	// Specifies whether secure boot should be enabled on the virtual machine instance.
	SecureBootEnabled pulumi.BoolPtrInput `pulumi:"secureBootEnabled"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesSecurityProfileUefiSettingsArgs
func (val *VirtualMachineInstancePropertiesSecurityProfileUefiSettingsArgs) Defaults() *VirtualMachineInstancePropertiesSecurityProfileUefiSettingsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.SecureBootEnabled == nil {
		tmp.SecureBootEnabled = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (VirtualMachineInstancePropertiesSecurityProfileUefiSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesSecurityProfileUefiSettings)(nil)).Elem()
}

func (i VirtualMachineInstancePropertiesSecurityProfileUefiSettingsArgs) ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput() VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput {
	return i.ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesSecurityProfileUefiSettingsArgs) ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput)
}

func (i VirtualMachineInstancePropertiesSecurityProfileUefiSettingsArgs) ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput() VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput {
	return i.ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesSecurityProfileUefiSettingsArgs) ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput).ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutputWithContext(ctx)
}

// VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrInput is an input type that accepts VirtualMachineInstancePropertiesSecurityProfileUefiSettingsArgs, VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtr and VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrInput` via:
//
//	        VirtualMachineInstancePropertiesSecurityProfileUefiSettingsArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput() VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput
	ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutputWithContext(context.Context) VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput
}

type virtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrType VirtualMachineInstancePropertiesSecurityProfileUefiSettingsArgs

func VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtr(v *VirtualMachineInstancePropertiesSecurityProfileUefiSettingsArgs) VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrInput {
	return (*virtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrType)(v)
}

func (*virtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesSecurityProfileUefiSettings)(nil)).Elem()
}

func (i *virtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrType) ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput() VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput {
	return i.ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutputWithContext(context.Background())
}

func (i *virtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrType) ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput)
}

// Uefi settings - Specifies whether secure boot should be enabled on the virtual machine instance.
type VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesSecurityProfileUefiSettings)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput) ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput() VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput {
	return o
}

func (o VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput) ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput {
	return o
}

func (o VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput) ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput() VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput {
	return o.ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutputWithContext(context.Background())
}

func (o VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput) ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineInstancePropertiesSecurityProfileUefiSettings) *VirtualMachineInstancePropertiesSecurityProfileUefiSettings {
		return &v
	}).(VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput)
}

// Specifies whether secure boot should be enabled on the virtual machine instance.
func (o VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput) SecureBootEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesSecurityProfileUefiSettings) *bool { return v.SecureBootEnabled }).(pulumi.BoolPtrOutput)
}

type VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesSecurityProfileUefiSettings)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput) ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput() VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput) ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput) Elem() VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesSecurityProfileUefiSettings) VirtualMachineInstancePropertiesSecurityProfileUefiSettings {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesSecurityProfileUefiSettings
		return ret
	}).(VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput)
}

// Specifies whether secure boot should be enabled on the virtual machine instance.
func (o VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput) SecureBootEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesSecurityProfileUefiSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SecureBootEnabled
	}).(pulumi.BoolPtrOutput)
}

// Uefi settings - Specifies whether secure boot should be enabled on the virtual machine instance.
type VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponse struct {
	// Specifies whether secure boot should be enabled on the virtual machine instance.
	SecureBootEnabled *bool `pulumi:"secureBootEnabled"`
}

// Defaults sets the appropriate defaults for VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponse
func (val *VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponse) Defaults() *VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.SecureBootEnabled == nil {
		secureBootEnabled_ := false
		tmp.SecureBootEnabled = &secureBootEnabled_
	}
	return &tmp
}

// Uefi settings - Specifies whether secure boot should be enabled on the virtual machine instance.
type VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponseOutput) ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponseOutput() VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponseOutput {
	return o
}

func (o VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponseOutput) ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponseOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponseOutput {
	return o
}

// Specifies whether secure boot should be enabled on the virtual machine instance.
func (o VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponseOutput) SecureBootEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponse) *bool {
		return v.SecureBootEnabled
	}).(pulumi.BoolPtrOutput)
}

type VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponsePtrOutput) ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponsePtrOutput() VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponsePtrOutput) ToVirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponsePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponsePtrOutput) Elem() VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponse) VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponse
		return ret
	}).(VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponseOutput)
}

// Specifies whether secure boot should be enabled on the virtual machine instance.
func (o VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponsePtrOutput) SecureBootEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SecureBootEnabled
	}).(pulumi.BoolPtrOutput)
}

// StorageProfile - contains information about the disks and storage information for the virtual machine instance
type VirtualMachineInstancePropertiesStorageProfile struct {
	// adds data disks to the virtual machine instance
	DataDisks []VirtualHardDiskArmReference `pulumi:"dataDisks"`
	// Which Image to use for the virtual machine instance
	ImageReference *ImageArmReference `pulumi:"imageReference"`
	// VHD to attach as OS disk
	OsDisk *VirtualMachineInstancePropertiesStorageProfileOsDisk `pulumi:"osDisk"`
	// Id of the storage container that hosts the VM configuration file
	VmConfigStoragePathId *string `pulumi:"vmConfigStoragePathId"`
}

// VirtualMachineInstancePropertiesStorageProfileInput is an input type that accepts VirtualMachineInstancePropertiesStorageProfileArgs and VirtualMachineInstancePropertiesStorageProfileOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesStorageProfileInput` via:
//
//	VirtualMachineInstancePropertiesStorageProfileArgs{...}
type VirtualMachineInstancePropertiesStorageProfileInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesStorageProfileOutput() VirtualMachineInstancePropertiesStorageProfileOutput
	ToVirtualMachineInstancePropertiesStorageProfileOutputWithContext(context.Context) VirtualMachineInstancePropertiesStorageProfileOutput
}

// StorageProfile - contains information about the disks and storage information for the virtual machine instance
type VirtualMachineInstancePropertiesStorageProfileArgs struct {
	// adds data disks to the virtual machine instance
	DataDisks VirtualHardDiskArmReferenceArrayInput `pulumi:"dataDisks"`
	// Which Image to use for the virtual machine instance
	ImageReference ImageArmReferencePtrInput `pulumi:"imageReference"`
	// VHD to attach as OS disk
	OsDisk VirtualMachineInstancePropertiesStorageProfileOsDiskPtrInput `pulumi:"osDisk"`
	// Id of the storage container that hosts the VM configuration file
	VmConfigStoragePathId pulumi.StringPtrInput `pulumi:"vmConfigStoragePathId"`
}

func (VirtualMachineInstancePropertiesStorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesStorageProfile)(nil)).Elem()
}

func (i VirtualMachineInstancePropertiesStorageProfileArgs) ToVirtualMachineInstancePropertiesStorageProfileOutput() VirtualMachineInstancePropertiesStorageProfileOutput {
	return i.ToVirtualMachineInstancePropertiesStorageProfileOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesStorageProfileArgs) ToVirtualMachineInstancePropertiesStorageProfileOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesStorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesStorageProfileOutput)
}

func (i VirtualMachineInstancePropertiesStorageProfileArgs) ToVirtualMachineInstancePropertiesStorageProfilePtrOutput() VirtualMachineInstancePropertiesStorageProfilePtrOutput {
	return i.ToVirtualMachineInstancePropertiesStorageProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesStorageProfileArgs) ToVirtualMachineInstancePropertiesStorageProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesStorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesStorageProfileOutput).ToVirtualMachineInstancePropertiesStorageProfilePtrOutputWithContext(ctx)
}

// VirtualMachineInstancePropertiesStorageProfilePtrInput is an input type that accepts VirtualMachineInstancePropertiesStorageProfileArgs, VirtualMachineInstancePropertiesStorageProfilePtr and VirtualMachineInstancePropertiesStorageProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesStorageProfilePtrInput` via:
//
//	        VirtualMachineInstancePropertiesStorageProfileArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineInstancePropertiesStorageProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesStorageProfilePtrOutput() VirtualMachineInstancePropertiesStorageProfilePtrOutput
	ToVirtualMachineInstancePropertiesStorageProfilePtrOutputWithContext(context.Context) VirtualMachineInstancePropertiesStorageProfilePtrOutput
}

type virtualMachineInstancePropertiesStorageProfilePtrType VirtualMachineInstancePropertiesStorageProfileArgs

func VirtualMachineInstancePropertiesStorageProfilePtr(v *VirtualMachineInstancePropertiesStorageProfileArgs) VirtualMachineInstancePropertiesStorageProfilePtrInput {
	return (*virtualMachineInstancePropertiesStorageProfilePtrType)(v)
}

func (*virtualMachineInstancePropertiesStorageProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesStorageProfile)(nil)).Elem()
}

func (i *virtualMachineInstancePropertiesStorageProfilePtrType) ToVirtualMachineInstancePropertiesStorageProfilePtrOutput() VirtualMachineInstancePropertiesStorageProfilePtrOutput {
	return i.ToVirtualMachineInstancePropertiesStorageProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineInstancePropertiesStorageProfilePtrType) ToVirtualMachineInstancePropertiesStorageProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesStorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesStorageProfilePtrOutput)
}

// StorageProfile - contains information about the disks and storage information for the virtual machine instance
type VirtualMachineInstancePropertiesStorageProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesStorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesStorageProfile)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesStorageProfileOutput) ToVirtualMachineInstancePropertiesStorageProfileOutput() VirtualMachineInstancePropertiesStorageProfileOutput {
	return o
}

func (o VirtualMachineInstancePropertiesStorageProfileOutput) ToVirtualMachineInstancePropertiesStorageProfileOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesStorageProfileOutput {
	return o
}

func (o VirtualMachineInstancePropertiesStorageProfileOutput) ToVirtualMachineInstancePropertiesStorageProfilePtrOutput() VirtualMachineInstancePropertiesStorageProfilePtrOutput {
	return o.ToVirtualMachineInstancePropertiesStorageProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineInstancePropertiesStorageProfileOutput) ToVirtualMachineInstancePropertiesStorageProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesStorageProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineInstancePropertiesStorageProfile) *VirtualMachineInstancePropertiesStorageProfile {
		return &v
	}).(VirtualMachineInstancePropertiesStorageProfilePtrOutput)
}

// adds data disks to the virtual machine instance
func (o VirtualMachineInstancePropertiesStorageProfileOutput) DataDisks() VirtualHardDiskArmReferenceArrayOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesStorageProfile) []VirtualHardDiskArmReference {
		return v.DataDisks
	}).(VirtualHardDiskArmReferenceArrayOutput)
}

// Which Image to use for the virtual machine instance
func (o VirtualMachineInstancePropertiesStorageProfileOutput) ImageReference() ImageArmReferencePtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesStorageProfile) *ImageArmReference { return v.ImageReference }).(ImageArmReferencePtrOutput)
}

// VHD to attach as OS disk
func (o VirtualMachineInstancePropertiesStorageProfileOutput) OsDisk() VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesStorageProfile) *VirtualMachineInstancePropertiesStorageProfileOsDisk {
		return v.OsDisk
	}).(VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput)
}

// Id of the storage container that hosts the VM configuration file
func (o VirtualMachineInstancePropertiesStorageProfileOutput) VmConfigStoragePathId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesStorageProfile) *string { return v.VmConfigStoragePathId }).(pulumi.StringPtrOutput)
}

type VirtualMachineInstancePropertiesStorageProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesStorageProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesStorageProfile)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesStorageProfilePtrOutput) ToVirtualMachineInstancePropertiesStorageProfilePtrOutput() VirtualMachineInstancePropertiesStorageProfilePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesStorageProfilePtrOutput) ToVirtualMachineInstancePropertiesStorageProfilePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesStorageProfilePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesStorageProfilePtrOutput) Elem() VirtualMachineInstancePropertiesStorageProfileOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesStorageProfile) VirtualMachineInstancePropertiesStorageProfile {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesStorageProfile
		return ret
	}).(VirtualMachineInstancePropertiesStorageProfileOutput)
}

// adds data disks to the virtual machine instance
func (o VirtualMachineInstancePropertiesStorageProfilePtrOutput) DataDisks() VirtualHardDiskArmReferenceArrayOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesStorageProfile) []VirtualHardDiskArmReference {
		if v == nil {
			return nil
		}
		return v.DataDisks
	}).(VirtualHardDiskArmReferenceArrayOutput)
}

// Which Image to use for the virtual machine instance
func (o VirtualMachineInstancePropertiesStorageProfilePtrOutput) ImageReference() ImageArmReferencePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesStorageProfile) *ImageArmReference {
		if v == nil {
			return nil
		}
		return v.ImageReference
	}).(ImageArmReferencePtrOutput)
}

// VHD to attach as OS disk
func (o VirtualMachineInstancePropertiesStorageProfilePtrOutput) OsDisk() VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesStorageProfile) *VirtualMachineInstancePropertiesStorageProfileOsDisk {
		if v == nil {
			return nil
		}
		return v.OsDisk
	}).(VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput)
}

// Id of the storage container that hosts the VM configuration file
func (o VirtualMachineInstancePropertiesStorageProfilePtrOutput) VmConfigStoragePathId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesStorageProfile) *string {
		if v == nil {
			return nil
		}
		return v.VmConfigStoragePathId
	}).(pulumi.StringPtrOutput)
}

// VHD to attach as OS disk
type VirtualMachineInstancePropertiesStorageProfileOsDisk struct {
	// The ARM ID for a Virtual Hard Disk.
	Id *string `pulumi:"id"`
	// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows, Linux.
	OsType *string `pulumi:"osType"`
}

// VirtualMachineInstancePropertiesStorageProfileOsDiskInput is an input type that accepts VirtualMachineInstancePropertiesStorageProfileOsDiskArgs and VirtualMachineInstancePropertiesStorageProfileOsDiskOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesStorageProfileOsDiskInput` via:
//
//	VirtualMachineInstancePropertiesStorageProfileOsDiskArgs{...}
type VirtualMachineInstancePropertiesStorageProfileOsDiskInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesStorageProfileOsDiskOutput() VirtualMachineInstancePropertiesStorageProfileOsDiskOutput
	ToVirtualMachineInstancePropertiesStorageProfileOsDiskOutputWithContext(context.Context) VirtualMachineInstancePropertiesStorageProfileOsDiskOutput
}

// VHD to attach as OS disk
type VirtualMachineInstancePropertiesStorageProfileOsDiskArgs struct {
	// The ARM ID for a Virtual Hard Disk.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows, Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
}

func (VirtualMachineInstancePropertiesStorageProfileOsDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesStorageProfileOsDisk)(nil)).Elem()
}

func (i VirtualMachineInstancePropertiesStorageProfileOsDiskArgs) ToVirtualMachineInstancePropertiesStorageProfileOsDiskOutput() VirtualMachineInstancePropertiesStorageProfileOsDiskOutput {
	return i.ToVirtualMachineInstancePropertiesStorageProfileOsDiskOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesStorageProfileOsDiskArgs) ToVirtualMachineInstancePropertiesStorageProfileOsDiskOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesStorageProfileOsDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesStorageProfileOsDiskOutput)
}

func (i VirtualMachineInstancePropertiesStorageProfileOsDiskArgs) ToVirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput() VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput {
	return i.ToVirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutputWithContext(context.Background())
}

func (i VirtualMachineInstancePropertiesStorageProfileOsDiskArgs) ToVirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesStorageProfileOsDiskOutput).ToVirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutputWithContext(ctx)
}

// VirtualMachineInstancePropertiesStorageProfileOsDiskPtrInput is an input type that accepts VirtualMachineInstancePropertiesStorageProfileOsDiskArgs, VirtualMachineInstancePropertiesStorageProfileOsDiskPtr and VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput values.
// You can construct a concrete instance of `VirtualMachineInstancePropertiesStorageProfileOsDiskPtrInput` via:
//
//	        VirtualMachineInstancePropertiesStorageProfileOsDiskArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineInstancePropertiesStorageProfileOsDiskPtrInput interface {
	pulumi.Input

	ToVirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput() VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput
	ToVirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutputWithContext(context.Context) VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput
}

type virtualMachineInstancePropertiesStorageProfileOsDiskPtrType VirtualMachineInstancePropertiesStorageProfileOsDiskArgs

func VirtualMachineInstancePropertiesStorageProfileOsDiskPtr(v *VirtualMachineInstancePropertiesStorageProfileOsDiskArgs) VirtualMachineInstancePropertiesStorageProfileOsDiskPtrInput {
	return (*virtualMachineInstancePropertiesStorageProfileOsDiskPtrType)(v)
}

func (*virtualMachineInstancePropertiesStorageProfileOsDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesStorageProfileOsDisk)(nil)).Elem()
}

func (i *virtualMachineInstancePropertiesStorageProfileOsDiskPtrType) ToVirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput() VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput {
	return i.ToVirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutputWithContext(context.Background())
}

func (i *virtualMachineInstancePropertiesStorageProfileOsDiskPtrType) ToVirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput)
}

// VHD to attach as OS disk
type VirtualMachineInstancePropertiesStorageProfileOsDiskOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesStorageProfileOsDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesStorageProfileOsDisk)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesStorageProfileOsDiskOutput) ToVirtualMachineInstancePropertiesStorageProfileOsDiskOutput() VirtualMachineInstancePropertiesStorageProfileOsDiskOutput {
	return o
}

func (o VirtualMachineInstancePropertiesStorageProfileOsDiskOutput) ToVirtualMachineInstancePropertiesStorageProfileOsDiskOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesStorageProfileOsDiskOutput {
	return o
}

func (o VirtualMachineInstancePropertiesStorageProfileOsDiskOutput) ToVirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput() VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput {
	return o.ToVirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutputWithContext(context.Background())
}

func (o VirtualMachineInstancePropertiesStorageProfileOsDiskOutput) ToVirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineInstancePropertiesStorageProfileOsDisk) *VirtualMachineInstancePropertiesStorageProfileOsDisk {
		return &v
	}).(VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput)
}

// The ARM ID for a Virtual Hard Disk.
func (o VirtualMachineInstancePropertiesStorageProfileOsDiskOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesStorageProfileOsDisk) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows, Linux.
func (o VirtualMachineInstancePropertiesStorageProfileOsDiskOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesStorageProfileOsDisk) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

type VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesStorageProfileOsDisk)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput) ToVirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput() VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput) ToVirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput) Elem() VirtualMachineInstancePropertiesStorageProfileOsDiskOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesStorageProfileOsDisk) VirtualMachineInstancePropertiesStorageProfileOsDisk {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesStorageProfileOsDisk
		return ret
	}).(VirtualMachineInstancePropertiesStorageProfileOsDiskOutput)
}

// The ARM ID for a Virtual Hard Disk.
func (o VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesStorageProfileOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows, Linux.
func (o VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesStorageProfileOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// VHD to attach as OS disk
type VirtualMachineInstancePropertiesStorageProfileOsDiskResponse struct {
	// The ARM ID for a Virtual Hard Disk.
	Id *string `pulumi:"id"`
	// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows, Linux.
	OsType *string `pulumi:"osType"`
}

// VHD to attach as OS disk
type VirtualMachineInstancePropertiesStorageProfileOsDiskResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesStorageProfileOsDiskResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesStorageProfileOsDiskResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesStorageProfileOsDiskResponseOutput) ToVirtualMachineInstancePropertiesStorageProfileOsDiskResponseOutput() VirtualMachineInstancePropertiesStorageProfileOsDiskResponseOutput {
	return o
}

func (o VirtualMachineInstancePropertiesStorageProfileOsDiskResponseOutput) ToVirtualMachineInstancePropertiesStorageProfileOsDiskResponseOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesStorageProfileOsDiskResponseOutput {
	return o
}

// The ARM ID for a Virtual Hard Disk.
func (o VirtualMachineInstancePropertiesStorageProfileOsDiskResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesStorageProfileOsDiskResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows, Linux.
func (o VirtualMachineInstancePropertiesStorageProfileOsDiskResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesStorageProfileOsDiskResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

type VirtualMachineInstancePropertiesStorageProfileOsDiskResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesStorageProfileOsDiskResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesStorageProfileOsDiskResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesStorageProfileOsDiskResponsePtrOutput) ToVirtualMachineInstancePropertiesStorageProfileOsDiskResponsePtrOutput() VirtualMachineInstancePropertiesStorageProfileOsDiskResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesStorageProfileOsDiskResponsePtrOutput) ToVirtualMachineInstancePropertiesStorageProfileOsDiskResponsePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesStorageProfileOsDiskResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesStorageProfileOsDiskResponsePtrOutput) Elem() VirtualMachineInstancePropertiesStorageProfileOsDiskResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesStorageProfileOsDiskResponse) VirtualMachineInstancePropertiesStorageProfileOsDiskResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesStorageProfileOsDiskResponse
		return ret
	}).(VirtualMachineInstancePropertiesStorageProfileOsDiskResponseOutput)
}

// The ARM ID for a Virtual Hard Disk.
func (o VirtualMachineInstancePropertiesStorageProfileOsDiskResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesStorageProfileOsDiskResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows, Linux.
func (o VirtualMachineInstancePropertiesStorageProfileOsDiskResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesStorageProfileOsDiskResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// StorageProfile - contains information about the disks and storage information for the virtual machine instance
type VirtualMachineInstancePropertiesStorageProfileResponse struct {
	// adds data disks to the virtual machine instance
	DataDisks []VirtualHardDiskArmReferenceResponse `pulumi:"dataDisks"`
	// Which Image to use for the virtual machine instance
	ImageReference *ImageArmReferenceResponse `pulumi:"imageReference"`
	// VHD to attach as OS disk
	OsDisk *VirtualMachineInstancePropertiesStorageProfileOsDiskResponse `pulumi:"osDisk"`
	// Id of the storage container that hosts the VM configuration file
	VmConfigStoragePathId *string `pulumi:"vmConfigStoragePathId"`
}

// StorageProfile - contains information about the disks and storage information for the virtual machine instance
type VirtualMachineInstancePropertiesStorageProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesStorageProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstancePropertiesStorageProfileResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesStorageProfileResponseOutput) ToVirtualMachineInstancePropertiesStorageProfileResponseOutput() VirtualMachineInstancePropertiesStorageProfileResponseOutput {
	return o
}

func (o VirtualMachineInstancePropertiesStorageProfileResponseOutput) ToVirtualMachineInstancePropertiesStorageProfileResponseOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesStorageProfileResponseOutput {
	return o
}

// adds data disks to the virtual machine instance
func (o VirtualMachineInstancePropertiesStorageProfileResponseOutput) DataDisks() VirtualHardDiskArmReferenceResponseArrayOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesStorageProfileResponse) []VirtualHardDiskArmReferenceResponse {
		return v.DataDisks
	}).(VirtualHardDiskArmReferenceResponseArrayOutput)
}

// Which Image to use for the virtual machine instance
func (o VirtualMachineInstancePropertiesStorageProfileResponseOutput) ImageReference() ImageArmReferenceResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesStorageProfileResponse) *ImageArmReferenceResponse {
		return v.ImageReference
	}).(ImageArmReferenceResponsePtrOutput)
}

// VHD to attach as OS disk
func (o VirtualMachineInstancePropertiesStorageProfileResponseOutput) OsDisk() VirtualMachineInstancePropertiesStorageProfileOsDiskResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesStorageProfileResponse) *VirtualMachineInstancePropertiesStorageProfileOsDiskResponse {
		return v.OsDisk
	}).(VirtualMachineInstancePropertiesStorageProfileOsDiskResponsePtrOutput)
}

// Id of the storage container that hosts the VM configuration file
func (o VirtualMachineInstancePropertiesStorageProfileResponseOutput) VmConfigStoragePathId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstancePropertiesStorageProfileResponse) *string { return v.VmConfigStoragePathId }).(pulumi.StringPtrOutput)
}

type VirtualMachineInstancePropertiesStorageProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstancePropertiesStorageProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstancePropertiesStorageProfileResponse)(nil)).Elem()
}

func (o VirtualMachineInstancePropertiesStorageProfileResponsePtrOutput) ToVirtualMachineInstancePropertiesStorageProfileResponsePtrOutput() VirtualMachineInstancePropertiesStorageProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesStorageProfileResponsePtrOutput) ToVirtualMachineInstancePropertiesStorageProfileResponsePtrOutputWithContext(ctx context.Context) VirtualMachineInstancePropertiesStorageProfileResponsePtrOutput {
	return o
}

func (o VirtualMachineInstancePropertiesStorageProfileResponsePtrOutput) Elem() VirtualMachineInstancePropertiesStorageProfileResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesStorageProfileResponse) VirtualMachineInstancePropertiesStorageProfileResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstancePropertiesStorageProfileResponse
		return ret
	}).(VirtualMachineInstancePropertiesStorageProfileResponseOutput)
}

// adds data disks to the virtual machine instance
func (o VirtualMachineInstancePropertiesStorageProfileResponsePtrOutput) DataDisks() VirtualHardDiskArmReferenceResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesStorageProfileResponse) []VirtualHardDiskArmReferenceResponse {
		if v == nil {
			return nil
		}
		return v.DataDisks
	}).(VirtualHardDiskArmReferenceResponseArrayOutput)
}

// Which Image to use for the virtual machine instance
func (o VirtualMachineInstancePropertiesStorageProfileResponsePtrOutput) ImageReference() ImageArmReferenceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesStorageProfileResponse) *ImageArmReferenceResponse {
		if v == nil {
			return nil
		}
		return v.ImageReference
	}).(ImageArmReferenceResponsePtrOutput)
}

// VHD to attach as OS disk
func (o VirtualMachineInstancePropertiesStorageProfileResponsePtrOutput) OsDisk() VirtualMachineInstancePropertiesStorageProfileOsDiskResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesStorageProfileResponse) *VirtualMachineInstancePropertiesStorageProfileOsDiskResponse {
		if v == nil {
			return nil
		}
		return v.OsDisk
	}).(VirtualMachineInstancePropertiesStorageProfileOsDiskResponsePtrOutput)
}

// Id of the storage container that hosts the VM configuration file
func (o VirtualMachineInstancePropertiesStorageProfileResponsePtrOutput) VmConfigStoragePathId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstancePropertiesStorageProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmConfigStoragePathId
	}).(pulumi.StringPtrOutput)
}

// Virtual machine instance provisioning status.
type VirtualMachineInstanceStatusProvisioningStatusResponse struct {
	// The ID of the operation performed on the virtual machine instance
	OperationId *string `pulumi:"operationId"`
	// The status of the operation performed on the virtual machine instance [Succeeded, Failed, InProgress]
	Status string `pulumi:"status"`
}

// Virtual machine instance provisioning status.
type VirtualMachineInstanceStatusProvisioningStatusResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstanceStatusProvisioningStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstanceStatusProvisioningStatusResponse)(nil)).Elem()
}

func (o VirtualMachineInstanceStatusProvisioningStatusResponseOutput) ToVirtualMachineInstanceStatusProvisioningStatusResponseOutput() VirtualMachineInstanceStatusProvisioningStatusResponseOutput {
	return o
}

func (o VirtualMachineInstanceStatusProvisioningStatusResponseOutput) ToVirtualMachineInstanceStatusProvisioningStatusResponseOutputWithContext(ctx context.Context) VirtualMachineInstanceStatusProvisioningStatusResponseOutput {
	return o
}

// The ID of the operation performed on the virtual machine instance
func (o VirtualMachineInstanceStatusProvisioningStatusResponseOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceStatusProvisioningStatusResponse) *string { return v.OperationId }).(pulumi.StringPtrOutput)
}

// The status of the operation performed on the virtual machine instance [Succeeded, Failed, InProgress]
func (o VirtualMachineInstanceStatusProvisioningStatusResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineInstanceStatusProvisioningStatusResponse) string { return v.Status }).(pulumi.StringOutput)
}

type VirtualMachineInstanceStatusProvisioningStatusResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstanceStatusProvisioningStatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineInstanceStatusProvisioningStatusResponse)(nil)).Elem()
}

func (o VirtualMachineInstanceStatusProvisioningStatusResponsePtrOutput) ToVirtualMachineInstanceStatusProvisioningStatusResponsePtrOutput() VirtualMachineInstanceStatusProvisioningStatusResponsePtrOutput {
	return o
}

func (o VirtualMachineInstanceStatusProvisioningStatusResponsePtrOutput) ToVirtualMachineInstanceStatusProvisioningStatusResponsePtrOutputWithContext(ctx context.Context) VirtualMachineInstanceStatusProvisioningStatusResponsePtrOutput {
	return o
}

func (o VirtualMachineInstanceStatusProvisioningStatusResponsePtrOutput) Elem() VirtualMachineInstanceStatusProvisioningStatusResponseOutput {
	return o.ApplyT(func(v *VirtualMachineInstanceStatusProvisioningStatusResponse) VirtualMachineInstanceStatusProvisioningStatusResponse {
		if v != nil {
			return *v
		}
		var ret VirtualMachineInstanceStatusProvisioningStatusResponse
		return ret
	}).(VirtualMachineInstanceStatusProvisioningStatusResponseOutput)
}

// The ID of the operation performed on the virtual machine instance
func (o VirtualMachineInstanceStatusProvisioningStatusResponsePtrOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstanceStatusProvisioningStatusResponse) *string {
		if v == nil {
			return nil
		}
		return v.OperationId
	}).(pulumi.StringPtrOutput)
}

// The status of the operation performed on the virtual machine instance [Succeeded, Failed, InProgress]
func (o VirtualMachineInstanceStatusProvisioningStatusResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineInstanceStatusProvisioningStatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The observed state of virtual machine instances
type VirtualMachineInstanceStatusResponse struct {
	// VirtualMachine provisioning error code
	ErrorCode *string `pulumi:"errorCode"`
	// Descriptive error message
	ErrorMessage *string `pulumi:"errorMessage"`
	// The power state of the virtual machine instance
	PowerState *string `pulumi:"powerState"`
	// Provisioning status of the virtual machine instance
	ProvisioningStatus *VirtualMachineInstanceStatusProvisioningStatusResponse `pulumi:"provisioningStatus"`
}

// The observed state of virtual machine instances
type VirtualMachineInstanceStatusResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstanceStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstanceStatusResponse)(nil)).Elem()
}

func (o VirtualMachineInstanceStatusResponseOutput) ToVirtualMachineInstanceStatusResponseOutput() VirtualMachineInstanceStatusResponseOutput {
	return o
}

func (o VirtualMachineInstanceStatusResponseOutput) ToVirtualMachineInstanceStatusResponseOutputWithContext(ctx context.Context) VirtualMachineInstanceStatusResponseOutput {
	return o
}

// VirtualMachine provisioning error code
func (o VirtualMachineInstanceStatusResponseOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceStatusResponse) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// Descriptive error message
func (o VirtualMachineInstanceStatusResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceStatusResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// The power state of the virtual machine instance
func (o VirtualMachineInstanceStatusResponseOutput) PowerState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceStatusResponse) *string { return v.PowerState }).(pulumi.StringPtrOutput)
}

// Provisioning status of the virtual machine instance
func (o VirtualMachineInstanceStatusResponseOutput) ProvisioningStatus() VirtualMachineInstanceStatusProvisioningStatusResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceStatusResponse) *VirtualMachineInstanceStatusProvisioningStatusResponse {
		return v.ProvisioningStatus
	}).(VirtualMachineInstanceStatusProvisioningStatusResponsePtrOutput)
}

// The instance view of a virtual machine.
type VirtualMachineInstanceViewResponse struct {
	// The VM Config Agent running on the virtual machine.
	VmAgent *VirtualMachineConfigAgentInstanceViewResponse `pulumi:"vmAgent"`
}

// The instance view of a virtual machine.
type VirtualMachineInstanceViewResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineInstanceViewResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineInstanceViewResponse)(nil)).Elem()
}

func (o VirtualMachineInstanceViewResponseOutput) ToVirtualMachineInstanceViewResponseOutput() VirtualMachineInstanceViewResponseOutput {
	return o
}

func (o VirtualMachineInstanceViewResponseOutput) ToVirtualMachineInstanceViewResponseOutputWithContext(ctx context.Context) VirtualMachineInstanceViewResponseOutput {
	return o
}

// The VM Config Agent running on the virtual machine.
func (o VirtualMachineInstanceViewResponseOutput) VmAgent() VirtualMachineConfigAgentInstanceViewResponsePtrOutput {
	return o.ApplyT(func(v VirtualMachineInstanceViewResponse) *VirtualMachineConfigAgentInstanceViewResponse {
		return v.VmAgent
	}).(VirtualMachineConfigAgentInstanceViewResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ErrorAdditionalInfoResponseOutput{})
	pulumi.RegisterOutputType(ErrorAdditionalInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseOutput{})
	pulumi.RegisterOutputType(ErrorDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(ExtendedLocationOutput{})
	pulumi.RegisterOutputType(ExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponseOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageIdentifierOutput{})
	pulumi.RegisterOutputType(GalleryImageIdentifierPtrOutput{})
	pulumi.RegisterOutputType(GalleryImageIdentifierResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageIdentifierResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageStatusDownloadStatusResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageStatusDownloadStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageStatusProvisioningStatusResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageStatusProvisioningStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageStatusResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionPtrOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionStorageProfileResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageVersionStorageProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(GalleryOSDiskImageResponseOutput{})
	pulumi.RegisterOutputType(GalleryOSDiskImageResponsePtrOutput{})
	pulumi.RegisterOutputType(GuestAgentInstallStatusResponseOutput{})
	pulumi.RegisterOutputType(GuestAgentInstallStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(GuestCredentialOutput{})
	pulumi.RegisterOutputType(GuestCredentialPtrOutput{})
	pulumi.RegisterOutputType(GuestCredentialResponseOutput{})
	pulumi.RegisterOutputType(GuestCredentialResponsePtrOutput{})
	pulumi.RegisterOutputType(HttpProxyConfigurationOutput{})
	pulumi.RegisterOutputType(HttpProxyConfigurationPtrOutput{})
	pulumi.RegisterOutputType(HttpProxyConfigurationResponseOutput{})
	pulumi.RegisterOutputType(HttpProxyConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationOutput{})
	pulumi.RegisterOutputType(IPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(IPConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(IPPoolOutput{})
	pulumi.RegisterOutputType(IPPoolArrayOutput{})
	pulumi.RegisterOutputType(IPPoolInfoResponseOutput{})
	pulumi.RegisterOutputType(IPPoolInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(IPPoolResponseOutput{})
	pulumi.RegisterOutputType(IPPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(ImageArmReferenceOutput{})
	pulumi.RegisterOutputType(ImageArmReferencePtrOutput{})
	pulumi.RegisterOutputType(ImageArmReferenceResponseOutput{})
	pulumi.RegisterOutputType(ImageArmReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(InstanceViewStatusResponseOutput{})
	pulumi.RegisterOutputType(InstanceViewStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(InterfaceDNSSettingsOutput{})
	pulumi.RegisterOutputType(InterfaceDNSSettingsPtrOutput{})
	pulumi.RegisterOutputType(InterfaceDNSSettingsResponseOutput{})
	pulumi.RegisterOutputType(InterfaceDNSSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(LogicalNetworkArmReferenceOutput{})
	pulumi.RegisterOutputType(LogicalNetworkArmReferencePtrOutput{})
	pulumi.RegisterOutputType(LogicalNetworkArmReferenceResponseOutput{})
	pulumi.RegisterOutputType(LogicalNetworkArmReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(LogicalNetworkArmReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(LogicalNetworkPropertiesDhcpOptionsOutput{})
	pulumi.RegisterOutputType(LogicalNetworkPropertiesDhcpOptionsPtrOutput{})
	pulumi.RegisterOutputType(LogicalNetworkPropertiesDhcpOptionsResponseOutput{})
	pulumi.RegisterOutputType(LogicalNetworkPropertiesDhcpOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(LogicalNetworkStatusProvisioningStatusResponseOutput{})
	pulumi.RegisterOutputType(LogicalNetworkStatusProvisioningStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(LogicalNetworkStatusResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(MarketplaceGalleryImageStatusDownloadStatusResponseOutput{})
	pulumi.RegisterOutputType(MarketplaceGalleryImageStatusDownloadStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(MarketplaceGalleryImageStatusProvisioningStatusResponseOutput{})
	pulumi.RegisterOutputType(MarketplaceGalleryImageStatusProvisioningStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(MarketplaceGalleryImageStatusResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceArmReferenceOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceArmReferenceArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceArmReferenceResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceArmReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceStatusProvisioningStatusResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceStatusProvisioningStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceStatusResponseOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupArmReferenceOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupArmReferencePtrOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupArmReferenceResponseOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupArmReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteOutput{})
	pulumi.RegisterOutputType(RouteArrayOutput{})
	pulumi.RegisterOutputType(RouteResponseOutput{})
	pulumi.RegisterOutputType(RouteResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteTableOutput{})
	pulumi.RegisterOutputType(RouteTablePtrOutput{})
	pulumi.RegisterOutputType(RouteTableResponseOutput{})
	pulumi.RegisterOutputType(RouteTableResponsePtrOutput{})
	pulumi.RegisterOutputType(SshConfigurationOutput{})
	pulumi.RegisterOutputType(SshConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SshConfigurationResponseOutput{})
	pulumi.RegisterOutputType(SshConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(SshPublicKeyOutput{})
	pulumi.RegisterOutputType(SshPublicKeyArrayOutput{})
	pulumi.RegisterOutputType(SshPublicKeyResponseOutput{})
	pulumi.RegisterOutputType(SshPublicKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(StorageContainerStatusProvisioningStatusResponseOutput{})
	pulumi.RegisterOutputType(StorageContainerStatusProvisioningStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageContainerStatusResponseOutput{})
	pulumi.RegisterOutputType(SubnetOutput{})
	pulumi.RegisterOutputType(SubnetArrayOutput{})
	pulumi.RegisterOutputType(SubnetIpConfigurationReferenceOutput{})
	pulumi.RegisterOutputType(SubnetIpConfigurationReferenceArrayOutput{})
	pulumi.RegisterOutputType(SubnetIpConfigurationReferenceResponseOutput{})
	pulumi.RegisterOutputType(SubnetIpConfigurationReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetResponseOutput{})
	pulumi.RegisterOutputType(SubnetResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskArmReferenceOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskArmReferenceArrayOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskArmReferenceResponseOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskArmReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskDownloadStatusResponseOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskDownloadStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskStatusProvisioningStatusResponseOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskStatusProvisioningStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskStatusResponseOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskUploadStatusResponseOutput{})
	pulumi.RegisterOutputType(VirtualHardDiskUploadStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineConfigAgentInstanceViewResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineConfigAgentInstanceViewResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesHardwareProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesHardwareProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesHardwareProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesHardwareProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPUResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesNetworkProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesNetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesNetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesOsProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesOsProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesOsProfileLinuxConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesOsProfileLinuxConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesOsProfileLinuxConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesOsProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesOsProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesOsProfileWindowsConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesOsProfileWindowsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesOsProfileWindowsConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesSecurityProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesSecurityProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesSecurityProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesSecurityProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesSecurityProfileUefiSettingsOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesSecurityProfileUefiSettingsPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesSecurityProfileUefiSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesStorageProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesStorageProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesStorageProfileOsDiskOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesStorageProfileOsDiskPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesStorageProfileOsDiskResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesStorageProfileOsDiskResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesStorageProfileResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstancePropertiesStorageProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstanceStatusProvisioningStatusResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstanceStatusProvisioningStatusResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstanceStatusResponseOutput{})
	pulumi.RegisterOutputType(VirtualMachineInstanceViewResponseOutput{})
}
