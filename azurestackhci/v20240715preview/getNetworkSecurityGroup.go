// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20240715preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the specified network security group.
func LookupNetworkSecurityGroup(ctx *pulumi.Context, args *LookupNetworkSecurityGroupArgs, opts ...pulumi.InvokeOption) (*LookupNetworkSecurityGroupResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkSecurityGroupResult
	err := ctx.Invoke("azure-native:azurestackhci/v20240715preview:getNetworkSecurityGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupNetworkSecurityGroupArgs struct {
	// Name of the network security group
	NetworkSecurityGroupName string `pulumi:"networkSecurityGroupName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// NetworkSecurityGroup resource.
type LookupNetworkSecurityGroupResult struct {
	// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
	ETag string `pulumi:"eTag"`
	// The extendedLocation of the resource.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// A collection of references to network interfaces that are currently using this NSG.
	NetworkInterfaces []NetworkInterfaceArmReferenceResponse `pulumi:"networkInterfaces"`
	// The provisioning state of the network security group resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// A collection of references to logical networks that are currently using this NSG
	Subnets []LogicalNetworkArmReferenceResponse `pulumi:"subnets"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupNetworkSecurityGroupOutput(ctx *pulumi.Context, args LookupNetworkSecurityGroupOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkSecurityGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNetworkSecurityGroupResultOutput, error) {
			args := v.(LookupNetworkSecurityGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: utilities.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure-native:azurestackhci/v20240715preview:getNetworkSecurityGroup", args, LookupNetworkSecurityGroupResultOutput{}, options).(LookupNetworkSecurityGroupResultOutput), nil
		}).(LookupNetworkSecurityGroupResultOutput)
}

type LookupNetworkSecurityGroupOutputArgs struct {
	// Name of the network security group
	NetworkSecurityGroupName pulumi.StringInput `pulumi:"networkSecurityGroupName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupNetworkSecurityGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkSecurityGroupArgs)(nil)).Elem()
}

// NetworkSecurityGroup resource.
type LookupNetworkSecurityGroupResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkSecurityGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkSecurityGroupResult)(nil)).Elem()
}

func (o LookupNetworkSecurityGroupResultOutput) ToLookupNetworkSecurityGroupResultOutput() LookupNetworkSecurityGroupResultOutput {
	return o
}

func (o LookupNetworkSecurityGroupResultOutput) ToLookupNetworkSecurityGroupResultOutputWithContext(ctx context.Context) LookupNetworkSecurityGroupResultOutput {
	return o
}

// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
func (o LookupNetworkSecurityGroupResultOutput) ETag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) string { return v.ETag }).(pulumi.StringOutput)
}

// The extendedLocation of the resource.
func (o LookupNetworkSecurityGroupResultOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
func (o LookupNetworkSecurityGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupNetworkSecurityGroupResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupNetworkSecurityGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// A collection of references to network interfaces that are currently using this NSG.
func (o LookupNetworkSecurityGroupResultOutput) NetworkInterfaces() NetworkInterfaceArmReferenceResponseArrayOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) []NetworkInterfaceArmReferenceResponse {
		return v.NetworkInterfaces
	}).(NetworkInterfaceArmReferenceResponseArrayOutput)
}

// The provisioning state of the network security group resource.
func (o LookupNetworkSecurityGroupResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// A collection of references to logical networks that are currently using this NSG
func (o LookupNetworkSecurityGroupResultOutput) Subnets() LogicalNetworkArmReferenceResponseArrayOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) []LogicalNetworkArmReferenceResponse { return v.Subnets }).(LogicalNetworkArmReferenceResponseArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupNetworkSecurityGroupResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupNetworkSecurityGroupResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupNetworkSecurityGroupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkSecurityGroupResultOutput{})
}
