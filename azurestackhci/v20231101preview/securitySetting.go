// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20231101preview

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Security settings proxy resource
type SecuritySetting struct {
	pulumi.CustomResourceState

	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The status of the last operation.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Secured Core Compliance Assignment
	SecuredCoreComplianceAssignment pulumi.StringPtrOutput `pulumi:"securedCoreComplianceAssignment"`
	// Security Compliance Status
	SecurityComplianceStatus SecurityComplianceStatusResponseOutput `pulumi:"securityComplianceStatus"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSecuritySetting registers a new resource with the given unique name, arguments, and options.
func NewSecuritySetting(ctx *pulumi.Context,
	name string, args *SecuritySettingArgs, opts ...pulumi.ResourceOption) (*SecuritySetting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SecuredCoreComplianceAssignment == nil {
		args.SecuredCoreComplianceAssignment = pulumi.StringPtr("Audit")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:azurestackhci:SecuritySetting"),
		},
		{
			Type: pulumi.String("azure-native:azurestackhci/v20240101:SecuritySetting"),
		},
		{
			Type: pulumi.String("azure-native:azurestackhci/v20240215preview:SecuritySetting"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource SecuritySetting
	err := ctx.RegisterResource("azure-native:azurestackhci/v20231101preview:SecuritySetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecuritySetting gets an existing SecuritySetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecuritySetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecuritySettingState, opts ...pulumi.ResourceOption) (*SecuritySetting, error) {
	var resource SecuritySetting
	err := ctx.ReadResource("azure-native:azurestackhci/v20231101preview:SecuritySetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecuritySetting resources.
type securitySettingState struct {
}

type SecuritySettingState struct {
}

func (SecuritySettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*securitySettingState)(nil)).Elem()
}

type securitySettingArgs struct {
	// The name of the cluster.
	ClusterName string `pulumi:"clusterName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Secured Core Compliance Assignment
	SecuredCoreComplianceAssignment *string `pulumi:"securedCoreComplianceAssignment"`
	// Name of security setting
	SecuritySettingsName *string `pulumi:"securitySettingsName"`
}

// The set of arguments for constructing a SecuritySetting resource.
type SecuritySettingArgs struct {
	// The name of the cluster.
	ClusterName pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// Secured Core Compliance Assignment
	SecuredCoreComplianceAssignment pulumi.StringPtrInput
	// Name of security setting
	SecuritySettingsName pulumi.StringPtrInput
}

func (SecuritySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securitySettingArgs)(nil)).Elem()
}

type SecuritySettingInput interface {
	pulumi.Input

	ToSecuritySettingOutput() SecuritySettingOutput
	ToSecuritySettingOutputWithContext(ctx context.Context) SecuritySettingOutput
}

func (*SecuritySetting) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySetting)(nil)).Elem()
}

func (i *SecuritySetting) ToSecuritySettingOutput() SecuritySettingOutput {
	return i.ToSecuritySettingOutputWithContext(context.Background())
}

func (i *SecuritySetting) ToSecuritySettingOutputWithContext(ctx context.Context) SecuritySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySettingOutput)
}

type SecuritySettingOutput struct{ *pulumi.OutputState }

func (SecuritySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySetting)(nil)).Elem()
}

func (o SecuritySettingOutput) ToSecuritySettingOutput() SecuritySettingOutput {
	return o
}

func (o SecuritySettingOutput) ToSecuritySettingOutputWithContext(ctx context.Context) SecuritySettingOutput {
	return o
}

// The name of the resource
func (o SecuritySettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecuritySetting) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The status of the last operation.
func (o SecuritySettingOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *SecuritySetting) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Secured Core Compliance Assignment
func (o SecuritySettingOutput) SecuredCoreComplianceAssignment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecuritySetting) pulumi.StringPtrOutput { return v.SecuredCoreComplianceAssignment }).(pulumi.StringPtrOutput)
}

// Security Compliance Status
func (o SecuritySettingOutput) SecurityComplianceStatus() SecurityComplianceStatusResponseOutput {
	return o.ApplyT(func(v *SecuritySetting) SecurityComplianceStatusResponseOutput { return v.SecurityComplianceStatus }).(SecurityComplianceStatusResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o SecuritySettingOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v *SecuritySetting) SystemDataResponseOutput { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o SecuritySettingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SecuritySetting) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SecuritySettingOutput{})
}
