// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package computeschedule

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v3/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Extra details needed to run the user's request
type ExecutionParameters struct {
	// Details that could optimize the user's request
	OptimizationPreference *string `pulumi:"optimizationPreference"`
	// Retry policy the user can pass
	RetryPolicy *RetryPolicy `pulumi:"retryPolicy"`
}

// ExecutionParametersInput is an input type that accepts ExecutionParametersArgs and ExecutionParametersOutput values.
// You can construct a concrete instance of `ExecutionParametersInput` via:
//
//	ExecutionParametersArgs{...}
type ExecutionParametersInput interface {
	pulumi.Input

	ToExecutionParametersOutput() ExecutionParametersOutput
	ToExecutionParametersOutputWithContext(context.Context) ExecutionParametersOutput
}

// Extra details needed to run the user's request
type ExecutionParametersArgs struct {
	// Details that could optimize the user's request
	OptimizationPreference pulumi.StringPtrInput `pulumi:"optimizationPreference"`
	// Retry policy the user can pass
	RetryPolicy RetryPolicyPtrInput `pulumi:"retryPolicy"`
}

func (ExecutionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionParameters)(nil)).Elem()
}

func (i ExecutionParametersArgs) ToExecutionParametersOutput() ExecutionParametersOutput {
	return i.ToExecutionParametersOutputWithContext(context.Background())
}

func (i ExecutionParametersArgs) ToExecutionParametersOutputWithContext(ctx context.Context) ExecutionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecutionParametersOutput)
}

func (i ExecutionParametersArgs) ToExecutionParametersPtrOutput() ExecutionParametersPtrOutput {
	return i.ToExecutionParametersPtrOutputWithContext(context.Background())
}

func (i ExecutionParametersArgs) ToExecutionParametersPtrOutputWithContext(ctx context.Context) ExecutionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecutionParametersOutput).ToExecutionParametersPtrOutputWithContext(ctx)
}

// ExecutionParametersPtrInput is an input type that accepts ExecutionParametersArgs, ExecutionParametersPtr and ExecutionParametersPtrOutput values.
// You can construct a concrete instance of `ExecutionParametersPtrInput` via:
//
//	        ExecutionParametersArgs{...}
//
//	or:
//
//	        nil
type ExecutionParametersPtrInput interface {
	pulumi.Input

	ToExecutionParametersPtrOutput() ExecutionParametersPtrOutput
	ToExecutionParametersPtrOutputWithContext(context.Context) ExecutionParametersPtrOutput
}

type executionParametersPtrType ExecutionParametersArgs

func ExecutionParametersPtr(v *ExecutionParametersArgs) ExecutionParametersPtrInput {
	return (*executionParametersPtrType)(v)
}

func (*executionParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExecutionParameters)(nil)).Elem()
}

func (i *executionParametersPtrType) ToExecutionParametersPtrOutput() ExecutionParametersPtrOutput {
	return i.ToExecutionParametersPtrOutputWithContext(context.Background())
}

func (i *executionParametersPtrType) ToExecutionParametersPtrOutputWithContext(ctx context.Context) ExecutionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecutionParametersPtrOutput)
}

// Extra details needed to run the user's request
type ExecutionParametersOutput struct{ *pulumi.OutputState }

func (ExecutionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionParameters)(nil)).Elem()
}

func (o ExecutionParametersOutput) ToExecutionParametersOutput() ExecutionParametersOutput {
	return o
}

func (o ExecutionParametersOutput) ToExecutionParametersOutputWithContext(ctx context.Context) ExecutionParametersOutput {
	return o
}

func (o ExecutionParametersOutput) ToExecutionParametersPtrOutput() ExecutionParametersPtrOutput {
	return o.ToExecutionParametersPtrOutputWithContext(context.Background())
}

func (o ExecutionParametersOutput) ToExecutionParametersPtrOutputWithContext(ctx context.Context) ExecutionParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExecutionParameters) *ExecutionParameters {
		return &v
	}).(ExecutionParametersPtrOutput)
}

// Details that could optimize the user's request
func (o ExecutionParametersOutput) OptimizationPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExecutionParameters) *string { return v.OptimizationPreference }).(pulumi.StringPtrOutput)
}

// Retry policy the user can pass
func (o ExecutionParametersOutput) RetryPolicy() RetryPolicyPtrOutput {
	return o.ApplyT(func(v ExecutionParameters) *RetryPolicy { return v.RetryPolicy }).(RetryPolicyPtrOutput)
}

type ExecutionParametersPtrOutput struct{ *pulumi.OutputState }

func (ExecutionParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExecutionParameters)(nil)).Elem()
}

func (o ExecutionParametersPtrOutput) ToExecutionParametersPtrOutput() ExecutionParametersPtrOutput {
	return o
}

func (o ExecutionParametersPtrOutput) ToExecutionParametersPtrOutputWithContext(ctx context.Context) ExecutionParametersPtrOutput {
	return o
}

func (o ExecutionParametersPtrOutput) Elem() ExecutionParametersOutput {
	return o.ApplyT(func(v *ExecutionParameters) ExecutionParameters {
		if v != nil {
			return *v
		}
		var ret ExecutionParameters
		return ret
	}).(ExecutionParametersOutput)
}

// Details that could optimize the user's request
func (o ExecutionParametersPtrOutput) OptimizationPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExecutionParameters) *string {
		if v == nil {
			return nil
		}
		return v.OptimizationPreference
	}).(pulumi.StringPtrOutput)
}

// Retry policy the user can pass
func (o ExecutionParametersPtrOutput) RetryPolicy() RetryPolicyPtrOutput {
	return o.ApplyT(func(v *ExecutionParameters) *RetryPolicy {
		if v == nil {
			return nil
		}
		return v.RetryPolicy
	}).(RetryPolicyPtrOutput)
}

// Extra details needed to run the user's request
type ExecutionParametersResponse struct {
	// Details that could optimize the user's request
	OptimizationPreference *string `pulumi:"optimizationPreference"`
	// Retry policy the user can pass
	RetryPolicy *RetryPolicyResponse `pulumi:"retryPolicy"`
}

// Extra details needed to run the user's request
type ExecutionParametersResponseOutput struct{ *pulumi.OutputState }

func (ExecutionParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionParametersResponse)(nil)).Elem()
}

func (o ExecutionParametersResponseOutput) ToExecutionParametersResponseOutput() ExecutionParametersResponseOutput {
	return o
}

func (o ExecutionParametersResponseOutput) ToExecutionParametersResponseOutputWithContext(ctx context.Context) ExecutionParametersResponseOutput {
	return o
}

// Details that could optimize the user's request
func (o ExecutionParametersResponseOutput) OptimizationPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExecutionParametersResponse) *string { return v.OptimizationPreference }).(pulumi.StringPtrOutput)
}

// Retry policy the user can pass
func (o ExecutionParametersResponseOutput) RetryPolicy() RetryPolicyResponsePtrOutput {
	return o.ApplyT(func(v ExecutionParametersResponse) *RetryPolicyResponse { return v.RetryPolicy }).(RetryPolicyResponsePtrOutput)
}

type ExecutionParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (ExecutionParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExecutionParametersResponse)(nil)).Elem()
}

func (o ExecutionParametersResponsePtrOutput) ToExecutionParametersResponsePtrOutput() ExecutionParametersResponsePtrOutput {
	return o
}

func (o ExecutionParametersResponsePtrOutput) ToExecutionParametersResponsePtrOutputWithContext(ctx context.Context) ExecutionParametersResponsePtrOutput {
	return o
}

func (o ExecutionParametersResponsePtrOutput) Elem() ExecutionParametersResponseOutput {
	return o.ApplyT(func(v *ExecutionParametersResponse) ExecutionParametersResponse {
		if v != nil {
			return *v
		}
		var ret ExecutionParametersResponse
		return ret
	}).(ExecutionParametersResponseOutput)
}

// Details that could optimize the user's request
func (o ExecutionParametersResponsePtrOutput) OptimizationPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExecutionParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.OptimizationPreference
	}).(pulumi.StringPtrOutput)
}

// Retry policy the user can pass
func (o ExecutionParametersResponsePtrOutput) RetryPolicy() RetryPolicyResponsePtrOutput {
	return o.ApplyT(func(v *ExecutionParametersResponse) *RetryPolicyResponse {
		if v == nil {
			return nil
		}
		return v.RetryPolicy
	}).(RetryPolicyResponsePtrOutput)
}

// The information about notifications to be send to about upcoming operations.
type NotificationProperties struct {
	// Where the notification should be sent. For email, it should follow email format.
	Destination string `pulumi:"destination"`
	// Tells if the notification is enabled or not.
	Disabled *bool `pulumi:"disabled"`
	// The language the notification should be sent on.
	Language string `pulumi:"language"`
	// Type of notification to be sent.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for NotificationProperties
func (val *NotificationProperties) Defaults() *NotificationProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Disabled == nil {
		disabled_ := false
		tmp.Disabled = &disabled_
	}
	return &tmp
}

// NotificationPropertiesInput is an input type that accepts NotificationPropertiesArgs and NotificationPropertiesOutput values.
// You can construct a concrete instance of `NotificationPropertiesInput` via:
//
//	NotificationPropertiesArgs{...}
type NotificationPropertiesInput interface {
	pulumi.Input

	ToNotificationPropertiesOutput() NotificationPropertiesOutput
	ToNotificationPropertiesOutputWithContext(context.Context) NotificationPropertiesOutput
}

// The information about notifications to be send to about upcoming operations.
type NotificationPropertiesArgs struct {
	// Where the notification should be sent. For email, it should follow email format.
	Destination pulumi.StringInput `pulumi:"destination"`
	// Tells if the notification is enabled or not.
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// The language the notification should be sent on.
	Language pulumi.StringInput `pulumi:"language"`
	// Type of notification to be sent.
	Type pulumi.StringInput `pulumi:"type"`
}

// Defaults sets the appropriate defaults for NotificationPropertiesArgs
func (val *NotificationPropertiesArgs) Defaults() *NotificationPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Disabled == nil {
		tmp.Disabled = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (NotificationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationProperties)(nil)).Elem()
}

func (i NotificationPropertiesArgs) ToNotificationPropertiesOutput() NotificationPropertiesOutput {
	return i.ToNotificationPropertiesOutputWithContext(context.Background())
}

func (i NotificationPropertiesArgs) ToNotificationPropertiesOutputWithContext(ctx context.Context) NotificationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPropertiesOutput)
}

// NotificationPropertiesArrayInput is an input type that accepts NotificationPropertiesArray and NotificationPropertiesArrayOutput values.
// You can construct a concrete instance of `NotificationPropertiesArrayInput` via:
//
//	NotificationPropertiesArray{ NotificationPropertiesArgs{...} }
type NotificationPropertiesArrayInput interface {
	pulumi.Input

	ToNotificationPropertiesArrayOutput() NotificationPropertiesArrayOutput
	ToNotificationPropertiesArrayOutputWithContext(context.Context) NotificationPropertiesArrayOutput
}

type NotificationPropertiesArray []NotificationPropertiesInput

func (NotificationPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationProperties)(nil)).Elem()
}

func (i NotificationPropertiesArray) ToNotificationPropertiesArrayOutput() NotificationPropertiesArrayOutput {
	return i.ToNotificationPropertiesArrayOutputWithContext(context.Background())
}

func (i NotificationPropertiesArray) ToNotificationPropertiesArrayOutputWithContext(ctx context.Context) NotificationPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPropertiesArrayOutput)
}

// The information about notifications to be send to about upcoming operations.
type NotificationPropertiesOutput struct{ *pulumi.OutputState }

func (NotificationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationProperties)(nil)).Elem()
}

func (o NotificationPropertiesOutput) ToNotificationPropertiesOutput() NotificationPropertiesOutput {
	return o
}

func (o NotificationPropertiesOutput) ToNotificationPropertiesOutputWithContext(ctx context.Context) NotificationPropertiesOutput {
	return o
}

// Where the notification should be sent. For email, it should follow email format.
func (o NotificationPropertiesOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationProperties) string { return v.Destination }).(pulumi.StringOutput)
}

// Tells if the notification is enabled or not.
func (o NotificationPropertiesOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NotificationProperties) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The language the notification should be sent on.
func (o NotificationPropertiesOutput) Language() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationProperties) string { return v.Language }).(pulumi.StringOutput)
}

// Type of notification to be sent.
func (o NotificationPropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationProperties) string { return v.Type }).(pulumi.StringOutput)
}

type NotificationPropertiesArrayOutput struct{ *pulumi.OutputState }

func (NotificationPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationProperties)(nil)).Elem()
}

func (o NotificationPropertiesArrayOutput) ToNotificationPropertiesArrayOutput() NotificationPropertiesArrayOutput {
	return o
}

func (o NotificationPropertiesArrayOutput) ToNotificationPropertiesArrayOutputWithContext(ctx context.Context) NotificationPropertiesArrayOutput {
	return o
}

func (o NotificationPropertiesArrayOutput) Index(i pulumi.IntInput) NotificationPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationProperties {
		return vs[0].([]NotificationProperties)[vs[1].(int)]
	}).(NotificationPropertiesOutput)
}

// The information about notifications to be send to about upcoming operations.
type NotificationPropertiesResponse struct {
	// Where the notification should be sent. For email, it should follow email format.
	Destination string `pulumi:"destination"`
	// Tells if the notification is enabled or not.
	Disabled *bool `pulumi:"disabled"`
	// The language the notification should be sent on.
	Language string `pulumi:"language"`
	// Type of notification to be sent.
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for NotificationPropertiesResponse
func (val *NotificationPropertiesResponse) Defaults() *NotificationPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Disabled == nil {
		disabled_ := false
		tmp.Disabled = &disabled_
	}
	return &tmp
}

// The information about notifications to be send to about upcoming operations.
type NotificationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (NotificationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPropertiesResponse)(nil)).Elem()
}

func (o NotificationPropertiesResponseOutput) ToNotificationPropertiesResponseOutput() NotificationPropertiesResponseOutput {
	return o
}

func (o NotificationPropertiesResponseOutput) ToNotificationPropertiesResponseOutputWithContext(ctx context.Context) NotificationPropertiesResponseOutput {
	return o
}

// Where the notification should be sent. For email, it should follow email format.
func (o NotificationPropertiesResponseOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPropertiesResponse) string { return v.Destination }).(pulumi.StringOutput)
}

// Tells if the notification is enabled or not.
func (o NotificationPropertiesResponseOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NotificationPropertiesResponse) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The language the notification should be sent on.
func (o NotificationPropertiesResponseOutput) Language() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPropertiesResponse) string { return v.Language }).(pulumi.StringOutput)
}

// Type of notification to be sent.
func (o NotificationPropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

type NotificationPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (NotificationPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPropertiesResponse)(nil)).Elem()
}

func (o NotificationPropertiesResponseArrayOutput) ToNotificationPropertiesResponseArrayOutput() NotificationPropertiesResponseArrayOutput {
	return o
}

func (o NotificationPropertiesResponseArrayOutput) ToNotificationPropertiesResponseArrayOutputWithContext(ctx context.Context) NotificationPropertiesResponseArrayOutput {
	return o
}

func (o NotificationPropertiesResponseArrayOutput) Index(i pulumi.IntInput) NotificationPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPropertiesResponse {
		return vs[0].([]NotificationPropertiesResponse)[vs[1].(int)]
	}).(NotificationPropertiesResponseOutput)
}

// The retry policy for the user request
type RetryPolicy struct {
	// Retry count for user request
	RetryCount *int `pulumi:"retryCount"`
	// Retry window in minutes for user request
	RetryWindowInMinutes *int `pulumi:"retryWindowInMinutes"`
}

// RetryPolicyInput is an input type that accepts RetryPolicyArgs and RetryPolicyOutput values.
// You can construct a concrete instance of `RetryPolicyInput` via:
//
//	RetryPolicyArgs{...}
type RetryPolicyInput interface {
	pulumi.Input

	ToRetryPolicyOutput() RetryPolicyOutput
	ToRetryPolicyOutputWithContext(context.Context) RetryPolicyOutput
}

// The retry policy for the user request
type RetryPolicyArgs struct {
	// Retry count for user request
	RetryCount pulumi.IntPtrInput `pulumi:"retryCount"`
	// Retry window in minutes for user request
	RetryWindowInMinutes pulumi.IntPtrInput `pulumi:"retryWindowInMinutes"`
}

func (RetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetryPolicy)(nil)).Elem()
}

func (i RetryPolicyArgs) ToRetryPolicyOutput() RetryPolicyOutput {
	return i.ToRetryPolicyOutputWithContext(context.Background())
}

func (i RetryPolicyArgs) ToRetryPolicyOutputWithContext(ctx context.Context) RetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetryPolicyOutput)
}

func (i RetryPolicyArgs) ToRetryPolicyPtrOutput() RetryPolicyPtrOutput {
	return i.ToRetryPolicyPtrOutputWithContext(context.Background())
}

func (i RetryPolicyArgs) ToRetryPolicyPtrOutputWithContext(ctx context.Context) RetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetryPolicyOutput).ToRetryPolicyPtrOutputWithContext(ctx)
}

// RetryPolicyPtrInput is an input type that accepts RetryPolicyArgs, RetryPolicyPtr and RetryPolicyPtrOutput values.
// You can construct a concrete instance of `RetryPolicyPtrInput` via:
//
//	        RetryPolicyArgs{...}
//
//	or:
//
//	        nil
type RetryPolicyPtrInput interface {
	pulumi.Input

	ToRetryPolicyPtrOutput() RetryPolicyPtrOutput
	ToRetryPolicyPtrOutputWithContext(context.Context) RetryPolicyPtrOutput
}

type retryPolicyPtrType RetryPolicyArgs

func RetryPolicyPtr(v *RetryPolicyArgs) RetryPolicyPtrInput {
	return (*retryPolicyPtrType)(v)
}

func (*retryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetryPolicy)(nil)).Elem()
}

func (i *retryPolicyPtrType) ToRetryPolicyPtrOutput() RetryPolicyPtrOutput {
	return i.ToRetryPolicyPtrOutputWithContext(context.Background())
}

func (i *retryPolicyPtrType) ToRetryPolicyPtrOutputWithContext(ctx context.Context) RetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetryPolicyPtrOutput)
}

// The retry policy for the user request
type RetryPolicyOutput struct{ *pulumi.OutputState }

func (RetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetryPolicy)(nil)).Elem()
}

func (o RetryPolicyOutput) ToRetryPolicyOutput() RetryPolicyOutput {
	return o
}

func (o RetryPolicyOutput) ToRetryPolicyOutputWithContext(ctx context.Context) RetryPolicyOutput {
	return o
}

func (o RetryPolicyOutput) ToRetryPolicyPtrOutput() RetryPolicyPtrOutput {
	return o.ToRetryPolicyPtrOutputWithContext(context.Background())
}

func (o RetryPolicyOutput) ToRetryPolicyPtrOutputWithContext(ctx context.Context) RetryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RetryPolicy) *RetryPolicy {
		return &v
	}).(RetryPolicyPtrOutput)
}

// Retry count for user request
func (o RetryPolicyOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetryPolicy) *int { return v.RetryCount }).(pulumi.IntPtrOutput)
}

// Retry window in minutes for user request
func (o RetryPolicyOutput) RetryWindowInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetryPolicy) *int { return v.RetryWindowInMinutes }).(pulumi.IntPtrOutput)
}

type RetryPolicyPtrOutput struct{ *pulumi.OutputState }

func (RetryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetryPolicy)(nil)).Elem()
}

func (o RetryPolicyPtrOutput) ToRetryPolicyPtrOutput() RetryPolicyPtrOutput {
	return o
}

func (o RetryPolicyPtrOutput) ToRetryPolicyPtrOutputWithContext(ctx context.Context) RetryPolicyPtrOutput {
	return o
}

func (o RetryPolicyPtrOutput) Elem() RetryPolicyOutput {
	return o.ApplyT(func(v *RetryPolicy) RetryPolicy {
		if v != nil {
			return *v
		}
		var ret RetryPolicy
		return ret
	}).(RetryPolicyOutput)
}

// Retry count for user request
func (o RetryPolicyPtrOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetryPolicy) *int {
		if v == nil {
			return nil
		}
		return v.RetryCount
	}).(pulumi.IntPtrOutput)
}

// Retry window in minutes for user request
func (o RetryPolicyPtrOutput) RetryWindowInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetryPolicy) *int {
		if v == nil {
			return nil
		}
		return v.RetryWindowInMinutes
	}).(pulumi.IntPtrOutput)
}

// The retry policy for the user request
type RetryPolicyResponse struct {
	// Retry count for user request
	RetryCount *int `pulumi:"retryCount"`
	// Retry window in minutes for user request
	RetryWindowInMinutes *int `pulumi:"retryWindowInMinutes"`
}

// The retry policy for the user request
type RetryPolicyResponseOutput struct{ *pulumi.OutputState }

func (RetryPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetryPolicyResponse)(nil)).Elem()
}

func (o RetryPolicyResponseOutput) ToRetryPolicyResponseOutput() RetryPolicyResponseOutput {
	return o
}

func (o RetryPolicyResponseOutput) ToRetryPolicyResponseOutputWithContext(ctx context.Context) RetryPolicyResponseOutput {
	return o
}

// Retry count for user request
func (o RetryPolicyResponseOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetryPolicyResponse) *int { return v.RetryCount }).(pulumi.IntPtrOutput)
}

// Retry window in minutes for user request
func (o RetryPolicyResponseOutput) RetryWindowInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetryPolicyResponse) *int { return v.RetryWindowInMinutes }).(pulumi.IntPtrOutput)
}

type RetryPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (RetryPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetryPolicyResponse)(nil)).Elem()
}

func (o RetryPolicyResponsePtrOutput) ToRetryPolicyResponsePtrOutput() RetryPolicyResponsePtrOutput {
	return o
}

func (o RetryPolicyResponsePtrOutput) ToRetryPolicyResponsePtrOutputWithContext(ctx context.Context) RetryPolicyResponsePtrOutput {
	return o
}

func (o RetryPolicyResponsePtrOutput) Elem() RetryPolicyResponseOutput {
	return o.ApplyT(func(v *RetryPolicyResponse) RetryPolicyResponse {
		if v != nil {
			return *v
		}
		var ret RetryPolicyResponse
		return ret
	}).(RetryPolicyResponseOutput)
}

// Retry count for user request
func (o RetryPolicyResponsePtrOutput) RetryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetryPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetryCount
	}).(pulumi.IntPtrOutput)
}

// Retry window in minutes for user request
func (o RetryPolicyResponsePtrOutput) RetryWindowInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetryPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetryWindowInMinutes
	}).(pulumi.IntPtrOutput)
}

// Scheduled action properties
type ScheduledActionProperties struct {
	// The action the scheduled action should perform in the resources
	ActionType string `pulumi:"actionType"`
	// Tell if the scheduled action is disabled or not
	Disabled *bool `pulumi:"disabled"`
	// The time when the scheduled action is supposed to stop scheduling
	EndTime *string `pulumi:"endTime"`
	// The notification settings for the scheduled action
	NotificationSettings []NotificationProperties `pulumi:"notificationSettings"`
	// The type of resource the scheduled action is targeting
	ResourceType string `pulumi:"resourceType"`
	// The schedule the scheduled action is supposed to follow
	Schedule ScheduledActionsSchedule `pulumi:"schedule"`
	// The time which the scheduled action is supposed to start running
	StartTime string `pulumi:"startTime"`
}

// Defaults sets the appropriate defaults for ScheduledActionProperties
func (val *ScheduledActionProperties) Defaults() *ScheduledActionProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Disabled == nil {
		disabled_ := false
		tmp.Disabled = &disabled_
	}
	return &tmp
}

// ScheduledActionPropertiesInput is an input type that accepts ScheduledActionPropertiesArgs and ScheduledActionPropertiesOutput values.
// You can construct a concrete instance of `ScheduledActionPropertiesInput` via:
//
//	ScheduledActionPropertiesArgs{...}
type ScheduledActionPropertiesInput interface {
	pulumi.Input

	ToScheduledActionPropertiesOutput() ScheduledActionPropertiesOutput
	ToScheduledActionPropertiesOutputWithContext(context.Context) ScheduledActionPropertiesOutput
}

// Scheduled action properties
type ScheduledActionPropertiesArgs struct {
	// The action the scheduled action should perform in the resources
	ActionType pulumi.StringInput `pulumi:"actionType"`
	// Tell if the scheduled action is disabled or not
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// The time when the scheduled action is supposed to stop scheduling
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// The notification settings for the scheduled action
	NotificationSettings NotificationPropertiesArrayInput `pulumi:"notificationSettings"`
	// The type of resource the scheduled action is targeting
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The schedule the scheduled action is supposed to follow
	Schedule ScheduledActionsScheduleInput `pulumi:"schedule"`
	// The time which the scheduled action is supposed to start running
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

// Defaults sets the appropriate defaults for ScheduledActionPropertiesArgs
func (val *ScheduledActionPropertiesArgs) Defaults() *ScheduledActionPropertiesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Disabled == nil {
		tmp.Disabled = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (ScheduledActionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledActionProperties)(nil)).Elem()
}

func (i ScheduledActionPropertiesArgs) ToScheduledActionPropertiesOutput() ScheduledActionPropertiesOutput {
	return i.ToScheduledActionPropertiesOutputWithContext(context.Background())
}

func (i ScheduledActionPropertiesArgs) ToScheduledActionPropertiesOutputWithContext(ctx context.Context) ScheduledActionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledActionPropertiesOutput)
}

func (i ScheduledActionPropertiesArgs) ToScheduledActionPropertiesPtrOutput() ScheduledActionPropertiesPtrOutput {
	return i.ToScheduledActionPropertiesPtrOutputWithContext(context.Background())
}

func (i ScheduledActionPropertiesArgs) ToScheduledActionPropertiesPtrOutputWithContext(ctx context.Context) ScheduledActionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledActionPropertiesOutput).ToScheduledActionPropertiesPtrOutputWithContext(ctx)
}

// ScheduledActionPropertiesPtrInput is an input type that accepts ScheduledActionPropertiesArgs, ScheduledActionPropertiesPtr and ScheduledActionPropertiesPtrOutput values.
// You can construct a concrete instance of `ScheduledActionPropertiesPtrInput` via:
//
//	        ScheduledActionPropertiesArgs{...}
//
//	or:
//
//	        nil
type ScheduledActionPropertiesPtrInput interface {
	pulumi.Input

	ToScheduledActionPropertiesPtrOutput() ScheduledActionPropertiesPtrOutput
	ToScheduledActionPropertiesPtrOutputWithContext(context.Context) ScheduledActionPropertiesPtrOutput
}

type scheduledActionPropertiesPtrType ScheduledActionPropertiesArgs

func ScheduledActionPropertiesPtr(v *ScheduledActionPropertiesArgs) ScheduledActionPropertiesPtrInput {
	return (*scheduledActionPropertiesPtrType)(v)
}

func (*scheduledActionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledActionProperties)(nil)).Elem()
}

func (i *scheduledActionPropertiesPtrType) ToScheduledActionPropertiesPtrOutput() ScheduledActionPropertiesPtrOutput {
	return i.ToScheduledActionPropertiesPtrOutputWithContext(context.Background())
}

func (i *scheduledActionPropertiesPtrType) ToScheduledActionPropertiesPtrOutputWithContext(ctx context.Context) ScheduledActionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledActionPropertiesPtrOutput)
}

// Scheduled action properties
type ScheduledActionPropertiesOutput struct{ *pulumi.OutputState }

func (ScheduledActionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledActionProperties)(nil)).Elem()
}

func (o ScheduledActionPropertiesOutput) ToScheduledActionPropertiesOutput() ScheduledActionPropertiesOutput {
	return o
}

func (o ScheduledActionPropertiesOutput) ToScheduledActionPropertiesOutputWithContext(ctx context.Context) ScheduledActionPropertiesOutput {
	return o
}

func (o ScheduledActionPropertiesOutput) ToScheduledActionPropertiesPtrOutput() ScheduledActionPropertiesPtrOutput {
	return o.ToScheduledActionPropertiesPtrOutputWithContext(context.Background())
}

func (o ScheduledActionPropertiesOutput) ToScheduledActionPropertiesPtrOutputWithContext(ctx context.Context) ScheduledActionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledActionProperties) *ScheduledActionProperties {
		return &v
	}).(ScheduledActionPropertiesPtrOutput)
}

// The action the scheduled action should perform in the resources
func (o ScheduledActionPropertiesOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledActionProperties) string { return v.ActionType }).(pulumi.StringOutput)
}

// Tell if the scheduled action is disabled or not
func (o ScheduledActionPropertiesOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledActionProperties) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The time when the scheduled action is supposed to stop scheduling
func (o ScheduledActionPropertiesOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledActionProperties) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The notification settings for the scheduled action
func (o ScheduledActionPropertiesOutput) NotificationSettings() NotificationPropertiesArrayOutput {
	return o.ApplyT(func(v ScheduledActionProperties) []NotificationProperties { return v.NotificationSettings }).(NotificationPropertiesArrayOutput)
}

// The type of resource the scheduled action is targeting
func (o ScheduledActionPropertiesOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledActionProperties) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The schedule the scheduled action is supposed to follow
func (o ScheduledActionPropertiesOutput) Schedule() ScheduledActionsScheduleOutput {
	return o.ApplyT(func(v ScheduledActionProperties) ScheduledActionsSchedule { return v.Schedule }).(ScheduledActionsScheduleOutput)
}

// The time which the scheduled action is supposed to start running
func (o ScheduledActionPropertiesOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledActionProperties) string { return v.StartTime }).(pulumi.StringOutput)
}

type ScheduledActionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ScheduledActionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledActionProperties)(nil)).Elem()
}

func (o ScheduledActionPropertiesPtrOutput) ToScheduledActionPropertiesPtrOutput() ScheduledActionPropertiesPtrOutput {
	return o
}

func (o ScheduledActionPropertiesPtrOutput) ToScheduledActionPropertiesPtrOutputWithContext(ctx context.Context) ScheduledActionPropertiesPtrOutput {
	return o
}

func (o ScheduledActionPropertiesPtrOutput) Elem() ScheduledActionPropertiesOutput {
	return o.ApplyT(func(v *ScheduledActionProperties) ScheduledActionProperties {
		if v != nil {
			return *v
		}
		var ret ScheduledActionProperties
		return ret
	}).(ScheduledActionPropertiesOutput)
}

// The action the scheduled action should perform in the resources
func (o ScheduledActionPropertiesPtrOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledActionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ActionType
	}).(pulumi.StringPtrOutput)
}

// Tell if the scheduled action is disabled or not
func (o ScheduledActionPropertiesPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledActionProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Disabled
	}).(pulumi.BoolPtrOutput)
}

// The time when the scheduled action is supposed to stop scheduling
func (o ScheduledActionPropertiesPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledActionProperties) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// The notification settings for the scheduled action
func (o ScheduledActionPropertiesPtrOutput) NotificationSettings() NotificationPropertiesArrayOutput {
	return o.ApplyT(func(v *ScheduledActionProperties) []NotificationProperties {
		if v == nil {
			return nil
		}
		return v.NotificationSettings
	}).(NotificationPropertiesArrayOutput)
}

// The type of resource the scheduled action is targeting
func (o ScheduledActionPropertiesPtrOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledActionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceType
	}).(pulumi.StringPtrOutput)
}

// The schedule the scheduled action is supposed to follow
func (o ScheduledActionPropertiesPtrOutput) Schedule() ScheduledActionsSchedulePtrOutput {
	return o.ApplyT(func(v *ScheduledActionProperties) *ScheduledActionsSchedule {
		if v == nil {
			return nil
		}
		return &v.Schedule
	}).(ScheduledActionsSchedulePtrOutput)
}

// The time which the scheduled action is supposed to start running
func (o ScheduledActionPropertiesPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledActionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Scheduled action properties
type ScheduledActionPropertiesResponse struct {
	// The action the scheduled action should perform in the resources
	ActionType string `pulumi:"actionType"`
	// Tell if the scheduled action is disabled or not
	Disabled *bool `pulumi:"disabled"`
	// The time when the scheduled action is supposed to stop scheduling
	EndTime *string `pulumi:"endTime"`
	// The notification settings for the scheduled action
	NotificationSettings []NotificationPropertiesResponse `pulumi:"notificationSettings"`
	// The status of the last provisioning operation performed on the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The type of resource the scheduled action is targeting
	ResourceType string `pulumi:"resourceType"`
	// The schedule the scheduled action is supposed to follow
	Schedule ScheduledActionsScheduleResponse `pulumi:"schedule"`
	// The time which the scheduled action is supposed to start running
	StartTime string `pulumi:"startTime"`
}

// Defaults sets the appropriate defaults for ScheduledActionPropertiesResponse
func (val *ScheduledActionPropertiesResponse) Defaults() *ScheduledActionPropertiesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Disabled == nil {
		disabled_ := false
		tmp.Disabled = &disabled_
	}
	return &tmp
}

// Scheduled action properties
type ScheduledActionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ScheduledActionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledActionPropertiesResponse)(nil)).Elem()
}

func (o ScheduledActionPropertiesResponseOutput) ToScheduledActionPropertiesResponseOutput() ScheduledActionPropertiesResponseOutput {
	return o
}

func (o ScheduledActionPropertiesResponseOutput) ToScheduledActionPropertiesResponseOutputWithContext(ctx context.Context) ScheduledActionPropertiesResponseOutput {
	return o
}

// The action the scheduled action should perform in the resources
func (o ScheduledActionPropertiesResponseOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledActionPropertiesResponse) string { return v.ActionType }).(pulumi.StringOutput)
}

// Tell if the scheduled action is disabled or not
func (o ScheduledActionPropertiesResponseOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledActionPropertiesResponse) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The time when the scheduled action is supposed to stop scheduling
func (o ScheduledActionPropertiesResponseOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledActionPropertiesResponse) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The notification settings for the scheduled action
func (o ScheduledActionPropertiesResponseOutput) NotificationSettings() NotificationPropertiesResponseArrayOutput {
	return o.ApplyT(func(v ScheduledActionPropertiesResponse) []NotificationPropertiesResponse {
		return v.NotificationSettings
	}).(NotificationPropertiesResponseArrayOutput)
}

// The status of the last provisioning operation performed on the resource.
func (o ScheduledActionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledActionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of resource the scheduled action is targeting
func (o ScheduledActionPropertiesResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledActionPropertiesResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The schedule the scheduled action is supposed to follow
func (o ScheduledActionPropertiesResponseOutput) Schedule() ScheduledActionsScheduleResponseOutput {
	return o.ApplyT(func(v ScheduledActionPropertiesResponse) ScheduledActionsScheduleResponse { return v.Schedule }).(ScheduledActionsScheduleResponseOutput)
}

// The time which the scheduled action is supposed to start running
func (o ScheduledActionPropertiesResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledActionPropertiesResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Specify the schedule in which the scheduled action is supposed to follow
type ScheduledActionsSchedule struct {
	// The type of deadline the scheduled action is supposed to follow for the schedule. If no value is passed, it will default to InitiateAt.
	DeadlineType *string `pulumi:"deadlineType"`
	// The execution parameters the scheduled action is supposed to follow
	ExecutionParameters *ExecutionParameters `pulumi:"executionParameters"`
	// The days of the month the scheduled action is supposed to run on. If empty, it means it will run on every day of the month.
	RequestedDaysOfTheMonth []int `pulumi:"requestedDaysOfTheMonth"`
	// The months the scheduled action is supposed to run on
	RequestedMonths []string `pulumi:"requestedMonths"`
	// The week days the scheduled action is supposed to run on
	RequestedWeekDays []string `pulumi:"requestedWeekDays"`
	// The time the scheduled action is supposed to run on
	ScheduledTime string `pulumi:"scheduledTime"`
	// The timezone the scheduled time is specified on
	TimeZone string `pulumi:"timeZone"`
}

// ScheduledActionsScheduleInput is an input type that accepts ScheduledActionsScheduleArgs and ScheduledActionsScheduleOutput values.
// You can construct a concrete instance of `ScheduledActionsScheduleInput` via:
//
//	ScheduledActionsScheduleArgs{...}
type ScheduledActionsScheduleInput interface {
	pulumi.Input

	ToScheduledActionsScheduleOutput() ScheduledActionsScheduleOutput
	ToScheduledActionsScheduleOutputWithContext(context.Context) ScheduledActionsScheduleOutput
}

// Specify the schedule in which the scheduled action is supposed to follow
type ScheduledActionsScheduleArgs struct {
	// The type of deadline the scheduled action is supposed to follow for the schedule. If no value is passed, it will default to InitiateAt.
	DeadlineType pulumi.StringPtrInput `pulumi:"deadlineType"`
	// The execution parameters the scheduled action is supposed to follow
	ExecutionParameters ExecutionParametersPtrInput `pulumi:"executionParameters"`
	// The days of the month the scheduled action is supposed to run on. If empty, it means it will run on every day of the month.
	RequestedDaysOfTheMonth pulumi.IntArrayInput `pulumi:"requestedDaysOfTheMonth"`
	// The months the scheduled action is supposed to run on
	RequestedMonths pulumi.StringArrayInput `pulumi:"requestedMonths"`
	// The week days the scheduled action is supposed to run on
	RequestedWeekDays pulumi.StringArrayInput `pulumi:"requestedWeekDays"`
	// The time the scheduled action is supposed to run on
	ScheduledTime pulumi.StringInput `pulumi:"scheduledTime"`
	// The timezone the scheduled time is specified on
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (ScheduledActionsScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledActionsSchedule)(nil)).Elem()
}

func (i ScheduledActionsScheduleArgs) ToScheduledActionsScheduleOutput() ScheduledActionsScheduleOutput {
	return i.ToScheduledActionsScheduleOutputWithContext(context.Background())
}

func (i ScheduledActionsScheduleArgs) ToScheduledActionsScheduleOutputWithContext(ctx context.Context) ScheduledActionsScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledActionsScheduleOutput)
}

func (i ScheduledActionsScheduleArgs) ToScheduledActionsSchedulePtrOutput() ScheduledActionsSchedulePtrOutput {
	return i.ToScheduledActionsSchedulePtrOutputWithContext(context.Background())
}

func (i ScheduledActionsScheduleArgs) ToScheduledActionsSchedulePtrOutputWithContext(ctx context.Context) ScheduledActionsSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledActionsScheduleOutput).ToScheduledActionsSchedulePtrOutputWithContext(ctx)
}

// ScheduledActionsSchedulePtrInput is an input type that accepts ScheduledActionsScheduleArgs, ScheduledActionsSchedulePtr and ScheduledActionsSchedulePtrOutput values.
// You can construct a concrete instance of `ScheduledActionsSchedulePtrInput` via:
//
//	        ScheduledActionsScheduleArgs{...}
//
//	or:
//
//	        nil
type ScheduledActionsSchedulePtrInput interface {
	pulumi.Input

	ToScheduledActionsSchedulePtrOutput() ScheduledActionsSchedulePtrOutput
	ToScheduledActionsSchedulePtrOutputWithContext(context.Context) ScheduledActionsSchedulePtrOutput
}

type scheduledActionsSchedulePtrType ScheduledActionsScheduleArgs

func ScheduledActionsSchedulePtr(v *ScheduledActionsScheduleArgs) ScheduledActionsSchedulePtrInput {
	return (*scheduledActionsSchedulePtrType)(v)
}

func (*scheduledActionsSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledActionsSchedule)(nil)).Elem()
}

func (i *scheduledActionsSchedulePtrType) ToScheduledActionsSchedulePtrOutput() ScheduledActionsSchedulePtrOutput {
	return i.ToScheduledActionsSchedulePtrOutputWithContext(context.Background())
}

func (i *scheduledActionsSchedulePtrType) ToScheduledActionsSchedulePtrOutputWithContext(ctx context.Context) ScheduledActionsSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledActionsSchedulePtrOutput)
}

// Specify the schedule in which the scheduled action is supposed to follow
type ScheduledActionsScheduleOutput struct{ *pulumi.OutputState }

func (ScheduledActionsScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledActionsSchedule)(nil)).Elem()
}

func (o ScheduledActionsScheduleOutput) ToScheduledActionsScheduleOutput() ScheduledActionsScheduleOutput {
	return o
}

func (o ScheduledActionsScheduleOutput) ToScheduledActionsScheduleOutputWithContext(ctx context.Context) ScheduledActionsScheduleOutput {
	return o
}

func (o ScheduledActionsScheduleOutput) ToScheduledActionsSchedulePtrOutput() ScheduledActionsSchedulePtrOutput {
	return o.ToScheduledActionsSchedulePtrOutputWithContext(context.Background())
}

func (o ScheduledActionsScheduleOutput) ToScheduledActionsSchedulePtrOutputWithContext(ctx context.Context) ScheduledActionsSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledActionsSchedule) *ScheduledActionsSchedule {
		return &v
	}).(ScheduledActionsSchedulePtrOutput)
}

// The type of deadline the scheduled action is supposed to follow for the schedule. If no value is passed, it will default to InitiateAt.
func (o ScheduledActionsScheduleOutput) DeadlineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledActionsSchedule) *string { return v.DeadlineType }).(pulumi.StringPtrOutput)
}

// The execution parameters the scheduled action is supposed to follow
func (o ScheduledActionsScheduleOutput) ExecutionParameters() ExecutionParametersPtrOutput {
	return o.ApplyT(func(v ScheduledActionsSchedule) *ExecutionParameters { return v.ExecutionParameters }).(ExecutionParametersPtrOutput)
}

// The days of the month the scheduled action is supposed to run on. If empty, it means it will run on every day of the month.
func (o ScheduledActionsScheduleOutput) RequestedDaysOfTheMonth() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ScheduledActionsSchedule) []int { return v.RequestedDaysOfTheMonth }).(pulumi.IntArrayOutput)
}

// The months the scheduled action is supposed to run on
func (o ScheduledActionsScheduleOutput) RequestedMonths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduledActionsSchedule) []string { return v.RequestedMonths }).(pulumi.StringArrayOutput)
}

// The week days the scheduled action is supposed to run on
func (o ScheduledActionsScheduleOutput) RequestedWeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduledActionsSchedule) []string { return v.RequestedWeekDays }).(pulumi.StringArrayOutput)
}

// The time the scheduled action is supposed to run on
func (o ScheduledActionsScheduleOutput) ScheduledTime() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledActionsSchedule) string { return v.ScheduledTime }).(pulumi.StringOutput)
}

// The timezone the scheduled time is specified on
func (o ScheduledActionsScheduleOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledActionsSchedule) string { return v.TimeZone }).(pulumi.StringOutput)
}

type ScheduledActionsSchedulePtrOutput struct{ *pulumi.OutputState }

func (ScheduledActionsSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledActionsSchedule)(nil)).Elem()
}

func (o ScheduledActionsSchedulePtrOutput) ToScheduledActionsSchedulePtrOutput() ScheduledActionsSchedulePtrOutput {
	return o
}

func (o ScheduledActionsSchedulePtrOutput) ToScheduledActionsSchedulePtrOutputWithContext(ctx context.Context) ScheduledActionsSchedulePtrOutput {
	return o
}

func (o ScheduledActionsSchedulePtrOutput) Elem() ScheduledActionsScheduleOutput {
	return o.ApplyT(func(v *ScheduledActionsSchedule) ScheduledActionsSchedule {
		if v != nil {
			return *v
		}
		var ret ScheduledActionsSchedule
		return ret
	}).(ScheduledActionsScheduleOutput)
}

// The type of deadline the scheduled action is supposed to follow for the schedule. If no value is passed, it will default to InitiateAt.
func (o ScheduledActionsSchedulePtrOutput) DeadlineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledActionsSchedule) *string {
		if v == nil {
			return nil
		}
		return v.DeadlineType
	}).(pulumi.StringPtrOutput)
}

// The execution parameters the scheduled action is supposed to follow
func (o ScheduledActionsSchedulePtrOutput) ExecutionParameters() ExecutionParametersPtrOutput {
	return o.ApplyT(func(v *ScheduledActionsSchedule) *ExecutionParameters {
		if v == nil {
			return nil
		}
		return v.ExecutionParameters
	}).(ExecutionParametersPtrOutput)
}

// The days of the month the scheduled action is supposed to run on. If empty, it means it will run on every day of the month.
func (o ScheduledActionsSchedulePtrOutput) RequestedDaysOfTheMonth() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ScheduledActionsSchedule) []int {
		if v == nil {
			return nil
		}
		return v.RequestedDaysOfTheMonth
	}).(pulumi.IntArrayOutput)
}

// The months the scheduled action is supposed to run on
func (o ScheduledActionsSchedulePtrOutput) RequestedMonths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScheduledActionsSchedule) []string {
		if v == nil {
			return nil
		}
		return v.RequestedMonths
	}).(pulumi.StringArrayOutput)
}

// The week days the scheduled action is supposed to run on
func (o ScheduledActionsSchedulePtrOutput) RequestedWeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScheduledActionsSchedule) []string {
		if v == nil {
			return nil
		}
		return v.RequestedWeekDays
	}).(pulumi.StringArrayOutput)
}

// The time the scheduled action is supposed to run on
func (o ScheduledActionsSchedulePtrOutput) ScheduledTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledActionsSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduledTime
	}).(pulumi.StringPtrOutput)
}

// The timezone the scheduled time is specified on
func (o ScheduledActionsSchedulePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledActionsSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// Specify the schedule in which the scheduled action is supposed to follow
type ScheduledActionsScheduleResponse struct {
	// The type of deadline the scheduled action is supposed to follow for the schedule. If no value is passed, it will default to InitiateAt.
	DeadlineType *string `pulumi:"deadlineType"`
	// The execution parameters the scheduled action is supposed to follow
	ExecutionParameters *ExecutionParametersResponse `pulumi:"executionParameters"`
	// The days of the month the scheduled action is supposed to run on. If empty, it means it will run on every day of the month.
	RequestedDaysOfTheMonth []int `pulumi:"requestedDaysOfTheMonth"`
	// The months the scheduled action is supposed to run on
	RequestedMonths []string `pulumi:"requestedMonths"`
	// The week days the scheduled action is supposed to run on
	RequestedWeekDays []string `pulumi:"requestedWeekDays"`
	// The time the scheduled action is supposed to run on
	ScheduledTime string `pulumi:"scheduledTime"`
	// The timezone the scheduled time is specified on
	TimeZone string `pulumi:"timeZone"`
}

// Specify the schedule in which the scheduled action is supposed to follow
type ScheduledActionsScheduleResponseOutput struct{ *pulumi.OutputState }

func (ScheduledActionsScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledActionsScheduleResponse)(nil)).Elem()
}

func (o ScheduledActionsScheduleResponseOutput) ToScheduledActionsScheduleResponseOutput() ScheduledActionsScheduleResponseOutput {
	return o
}

func (o ScheduledActionsScheduleResponseOutput) ToScheduledActionsScheduleResponseOutputWithContext(ctx context.Context) ScheduledActionsScheduleResponseOutput {
	return o
}

// The type of deadline the scheduled action is supposed to follow for the schedule. If no value is passed, it will default to InitiateAt.
func (o ScheduledActionsScheduleResponseOutput) DeadlineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledActionsScheduleResponse) *string { return v.DeadlineType }).(pulumi.StringPtrOutput)
}

// The execution parameters the scheduled action is supposed to follow
func (o ScheduledActionsScheduleResponseOutput) ExecutionParameters() ExecutionParametersResponsePtrOutput {
	return o.ApplyT(func(v ScheduledActionsScheduleResponse) *ExecutionParametersResponse { return v.ExecutionParameters }).(ExecutionParametersResponsePtrOutput)
}

// The days of the month the scheduled action is supposed to run on. If empty, it means it will run on every day of the month.
func (o ScheduledActionsScheduleResponseOutput) RequestedDaysOfTheMonth() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ScheduledActionsScheduleResponse) []int { return v.RequestedDaysOfTheMonth }).(pulumi.IntArrayOutput)
}

// The months the scheduled action is supposed to run on
func (o ScheduledActionsScheduleResponseOutput) RequestedMonths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduledActionsScheduleResponse) []string { return v.RequestedMonths }).(pulumi.StringArrayOutput)
}

// The week days the scheduled action is supposed to run on
func (o ScheduledActionsScheduleResponseOutput) RequestedWeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduledActionsScheduleResponse) []string { return v.RequestedWeekDays }).(pulumi.StringArrayOutput)
}

// The time the scheduled action is supposed to run on
func (o ScheduledActionsScheduleResponseOutput) ScheduledTime() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledActionsScheduleResponse) string { return v.ScheduledTime }).(pulumi.StringOutput)
}

// The timezone the scheduled time is specified on
func (o ScheduledActionsScheduleResponseOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledActionsScheduleResponse) string { return v.TimeZone }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ExecutionParametersOutput{})
	pulumi.RegisterOutputType(ExecutionParametersPtrOutput{})
	pulumi.RegisterOutputType(ExecutionParametersResponseOutput{})
	pulumi.RegisterOutputType(ExecutionParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(NotificationPropertiesOutput{})
	pulumi.RegisterOutputType(NotificationPropertiesArrayOutput{})
	pulumi.RegisterOutputType(NotificationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(NotificationPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(RetryPolicyOutput{})
	pulumi.RegisterOutputType(RetryPolicyPtrOutput{})
	pulumi.RegisterOutputType(RetryPolicyResponseOutput{})
	pulumi.RegisterOutputType(RetryPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(ScheduledActionPropertiesOutput{})
	pulumi.RegisterOutputType(ScheduledActionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ScheduledActionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ScheduledActionsScheduleOutput{})
	pulumi.RegisterOutputType(ScheduledActionsSchedulePtrOutput{})
	pulumi.RegisterOutputType(ScheduledActionsScheduleResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
}
