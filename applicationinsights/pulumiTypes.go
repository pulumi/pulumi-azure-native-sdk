// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package applicationinsights

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemProperties struct {
	// A function alias, used when the type of the item is Function
	FunctionAlias *string `pulumi:"functionAlias"`
}

// ApplicationInsightsComponentAnalyticsItemPropertiesInput is an input type that accepts ApplicationInsightsComponentAnalyticsItemPropertiesArgs and ApplicationInsightsComponentAnalyticsItemPropertiesOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentAnalyticsItemPropertiesInput` via:
//
//	ApplicationInsightsComponentAnalyticsItemPropertiesArgs{...}
type ApplicationInsightsComponentAnalyticsItemPropertiesInput interface {
	pulumi.Input

	ToApplicationInsightsComponentAnalyticsItemPropertiesOutput() ApplicationInsightsComponentAnalyticsItemPropertiesOutput
	ToApplicationInsightsComponentAnalyticsItemPropertiesOutputWithContext(context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesOutput
}

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemPropertiesArgs struct {
	// A function alias, used when the type of the item is Function
	FunctionAlias pulumi.StringPtrInput `pulumi:"functionAlias"`
}

func (ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentAnalyticsItemProperties)(nil)).Elem()
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesOutput() ApplicationInsightsComponentAnalyticsItemPropertiesOutput {
	return i.ToApplicationInsightsComponentAnalyticsItemPropertiesOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentAnalyticsItemPropertiesOutput)
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return i.ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentAnalyticsItemPropertiesOutput).ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(ctx)
}

// ApplicationInsightsComponentAnalyticsItemPropertiesPtrInput is an input type that accepts ApplicationInsightsComponentAnalyticsItemPropertiesArgs, ApplicationInsightsComponentAnalyticsItemPropertiesPtr and ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentAnalyticsItemPropertiesPtrInput` via:
//
//	        ApplicationInsightsComponentAnalyticsItemPropertiesArgs{...}
//
//	or:
//
//	        nil
type ApplicationInsightsComponentAnalyticsItemPropertiesPtrInput interface {
	pulumi.Input

	ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput
	ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput
}

type applicationInsightsComponentAnalyticsItemPropertiesPtrType ApplicationInsightsComponentAnalyticsItemPropertiesArgs

func ApplicationInsightsComponentAnalyticsItemPropertiesPtr(v *ApplicationInsightsComponentAnalyticsItemPropertiesArgs) ApplicationInsightsComponentAnalyticsItemPropertiesPtrInput {
	return (*applicationInsightsComponentAnalyticsItemPropertiesPtrType)(v)
}

func (*applicationInsightsComponentAnalyticsItemPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentAnalyticsItemProperties)(nil)).Elem()
}

func (i *applicationInsightsComponentAnalyticsItemPropertiesPtrType) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return i.ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(context.Background())
}

func (i *applicationInsightsComponentAnalyticsItemPropertiesPtrType) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput)
}

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemPropertiesOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentAnalyticsItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentAnalyticsItemProperties)(nil)).Elem()
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesOutput() ApplicationInsightsComponentAnalyticsItemPropertiesOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return o.ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(context.Background())
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationInsightsComponentAnalyticsItemProperties) *ApplicationInsightsComponentAnalyticsItemProperties {
		return &v
	}).(ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput)
}

// A function alias, used when the type of the item is Function
func (o ApplicationInsightsComponentAnalyticsItemPropertiesOutput) FunctionAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentAnalyticsItemProperties) *string { return v.FunctionAlias }).(pulumi.StringPtrOutput)
}

type ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentAnalyticsItemProperties)(nil)).Elem()
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput() ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput) Elem() ApplicationInsightsComponentAnalyticsItemPropertiesOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentAnalyticsItemProperties) ApplicationInsightsComponentAnalyticsItemProperties {
		if v != nil {
			return *v
		}
		var ret ApplicationInsightsComponentAnalyticsItemProperties
		return ret
	}).(ApplicationInsightsComponentAnalyticsItemPropertiesOutput)
}

// A function alias, used when the type of the item is Function
func (o ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput) FunctionAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentAnalyticsItemProperties) *string {
		if v == nil {
			return nil
		}
		return v.FunctionAlias
	}).(pulumi.StringPtrOutput)
}

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemPropertiesResponse struct {
	// A function alias, used when the type of the item is Function
	FunctionAlias *string `pulumi:"functionAlias"`
}

// A set of properties that can be defined in the context of a specific item type. Each type may have its own properties.
type ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentAnalyticsItemPropertiesResponse)(nil)).Elem()
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput() ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput {
	return o
}

func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput) ToApplicationInsightsComponentAnalyticsItemPropertiesResponseOutputWithContext(ctx context.Context) ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput {
	return o
}

// A function alias, used when the type of the item is Function
func (o ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput) FunctionAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentAnalyticsItemPropertiesResponse) *string { return v.FunctionAlias }).(pulumi.StringPtrOutput)
}

// An Application Insights component daily data volume cap
type ApplicationInsightsComponentDataVolumeCap struct {
	// Daily data volume cap in GB.
	Cap *float64 `pulumi:"cap"`
	// Do not send a notification email when the daily data volume cap is met.
	StopSendNotificationWhenHitCap *bool `pulumi:"stopSendNotificationWhenHitCap"`
	// Reserved, not used for now.
	StopSendNotificationWhenHitThreshold *bool `pulumi:"stopSendNotificationWhenHitThreshold"`
	// Reserved, not used for now.
	WarningThreshold *int `pulumi:"warningThreshold"`
}

// ApplicationInsightsComponentDataVolumeCapInput is an input type that accepts ApplicationInsightsComponentDataVolumeCapArgs and ApplicationInsightsComponentDataVolumeCapOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentDataVolumeCapInput` via:
//
//	ApplicationInsightsComponentDataVolumeCapArgs{...}
type ApplicationInsightsComponentDataVolumeCapInput interface {
	pulumi.Input

	ToApplicationInsightsComponentDataVolumeCapOutput() ApplicationInsightsComponentDataVolumeCapOutput
	ToApplicationInsightsComponentDataVolumeCapOutputWithContext(context.Context) ApplicationInsightsComponentDataVolumeCapOutput
}

// An Application Insights component daily data volume cap
type ApplicationInsightsComponentDataVolumeCapArgs struct {
	// Daily data volume cap in GB.
	Cap pulumi.Float64PtrInput `pulumi:"cap"`
	// Do not send a notification email when the daily data volume cap is met.
	StopSendNotificationWhenHitCap pulumi.BoolPtrInput `pulumi:"stopSendNotificationWhenHitCap"`
	// Reserved, not used for now.
	StopSendNotificationWhenHitThreshold pulumi.BoolPtrInput `pulumi:"stopSendNotificationWhenHitThreshold"`
	// Reserved, not used for now.
	WarningThreshold pulumi.IntPtrInput `pulumi:"warningThreshold"`
}

func (ApplicationInsightsComponentDataVolumeCapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentDataVolumeCap)(nil)).Elem()
}

func (i ApplicationInsightsComponentDataVolumeCapArgs) ToApplicationInsightsComponentDataVolumeCapOutput() ApplicationInsightsComponentDataVolumeCapOutput {
	return i.ToApplicationInsightsComponentDataVolumeCapOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentDataVolumeCapArgs) ToApplicationInsightsComponentDataVolumeCapOutputWithContext(ctx context.Context) ApplicationInsightsComponentDataVolumeCapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentDataVolumeCapOutput)
}

func (i ApplicationInsightsComponentDataVolumeCapArgs) ToApplicationInsightsComponentDataVolumeCapPtrOutput() ApplicationInsightsComponentDataVolumeCapPtrOutput {
	return i.ToApplicationInsightsComponentDataVolumeCapPtrOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentDataVolumeCapArgs) ToApplicationInsightsComponentDataVolumeCapPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentDataVolumeCapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentDataVolumeCapOutput).ToApplicationInsightsComponentDataVolumeCapPtrOutputWithContext(ctx)
}

// ApplicationInsightsComponentDataVolumeCapPtrInput is an input type that accepts ApplicationInsightsComponentDataVolumeCapArgs, ApplicationInsightsComponentDataVolumeCapPtr and ApplicationInsightsComponentDataVolumeCapPtrOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentDataVolumeCapPtrInput` via:
//
//	        ApplicationInsightsComponentDataVolumeCapArgs{...}
//
//	or:
//
//	        nil
type ApplicationInsightsComponentDataVolumeCapPtrInput interface {
	pulumi.Input

	ToApplicationInsightsComponentDataVolumeCapPtrOutput() ApplicationInsightsComponentDataVolumeCapPtrOutput
	ToApplicationInsightsComponentDataVolumeCapPtrOutputWithContext(context.Context) ApplicationInsightsComponentDataVolumeCapPtrOutput
}

type applicationInsightsComponentDataVolumeCapPtrType ApplicationInsightsComponentDataVolumeCapArgs

func ApplicationInsightsComponentDataVolumeCapPtr(v *ApplicationInsightsComponentDataVolumeCapArgs) ApplicationInsightsComponentDataVolumeCapPtrInput {
	return (*applicationInsightsComponentDataVolumeCapPtrType)(v)
}

func (*applicationInsightsComponentDataVolumeCapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentDataVolumeCap)(nil)).Elem()
}

func (i *applicationInsightsComponentDataVolumeCapPtrType) ToApplicationInsightsComponentDataVolumeCapPtrOutput() ApplicationInsightsComponentDataVolumeCapPtrOutput {
	return i.ToApplicationInsightsComponentDataVolumeCapPtrOutputWithContext(context.Background())
}

func (i *applicationInsightsComponentDataVolumeCapPtrType) ToApplicationInsightsComponentDataVolumeCapPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentDataVolumeCapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentDataVolumeCapPtrOutput)
}

// An Application Insights component daily data volume cap
type ApplicationInsightsComponentDataVolumeCapOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentDataVolumeCapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentDataVolumeCap)(nil)).Elem()
}

func (o ApplicationInsightsComponentDataVolumeCapOutput) ToApplicationInsightsComponentDataVolumeCapOutput() ApplicationInsightsComponentDataVolumeCapOutput {
	return o
}

func (o ApplicationInsightsComponentDataVolumeCapOutput) ToApplicationInsightsComponentDataVolumeCapOutputWithContext(ctx context.Context) ApplicationInsightsComponentDataVolumeCapOutput {
	return o
}

func (o ApplicationInsightsComponentDataVolumeCapOutput) ToApplicationInsightsComponentDataVolumeCapPtrOutput() ApplicationInsightsComponentDataVolumeCapPtrOutput {
	return o.ToApplicationInsightsComponentDataVolumeCapPtrOutputWithContext(context.Background())
}

func (o ApplicationInsightsComponentDataVolumeCapOutput) ToApplicationInsightsComponentDataVolumeCapPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentDataVolumeCapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationInsightsComponentDataVolumeCap) *ApplicationInsightsComponentDataVolumeCap {
		return &v
	}).(ApplicationInsightsComponentDataVolumeCapPtrOutput)
}

// Daily data volume cap in GB.
func (o ApplicationInsightsComponentDataVolumeCapOutput) Cap() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentDataVolumeCap) *float64 { return v.Cap }).(pulumi.Float64PtrOutput)
}

// Do not send a notification email when the daily data volume cap is met.
func (o ApplicationInsightsComponentDataVolumeCapOutput) StopSendNotificationWhenHitCap() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentDataVolumeCap) *bool { return v.StopSendNotificationWhenHitCap }).(pulumi.BoolPtrOutput)
}

// Reserved, not used for now.
func (o ApplicationInsightsComponentDataVolumeCapOutput) StopSendNotificationWhenHitThreshold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentDataVolumeCap) *bool { return v.StopSendNotificationWhenHitThreshold }).(pulumi.BoolPtrOutput)
}

// Reserved, not used for now.
func (o ApplicationInsightsComponentDataVolumeCapOutput) WarningThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentDataVolumeCap) *int { return v.WarningThreshold }).(pulumi.IntPtrOutput)
}

type ApplicationInsightsComponentDataVolumeCapPtrOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentDataVolumeCapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentDataVolumeCap)(nil)).Elem()
}

func (o ApplicationInsightsComponentDataVolumeCapPtrOutput) ToApplicationInsightsComponentDataVolumeCapPtrOutput() ApplicationInsightsComponentDataVolumeCapPtrOutput {
	return o
}

func (o ApplicationInsightsComponentDataVolumeCapPtrOutput) ToApplicationInsightsComponentDataVolumeCapPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentDataVolumeCapPtrOutput {
	return o
}

func (o ApplicationInsightsComponentDataVolumeCapPtrOutput) Elem() ApplicationInsightsComponentDataVolumeCapOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentDataVolumeCap) ApplicationInsightsComponentDataVolumeCap {
		if v != nil {
			return *v
		}
		var ret ApplicationInsightsComponentDataVolumeCap
		return ret
	}).(ApplicationInsightsComponentDataVolumeCapOutput)
}

// Daily data volume cap in GB.
func (o ApplicationInsightsComponentDataVolumeCapPtrOutput) Cap() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentDataVolumeCap) *float64 {
		if v == nil {
			return nil
		}
		return v.Cap
	}).(pulumi.Float64PtrOutput)
}

// Do not send a notification email when the daily data volume cap is met.
func (o ApplicationInsightsComponentDataVolumeCapPtrOutput) StopSendNotificationWhenHitCap() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentDataVolumeCap) *bool {
		if v == nil {
			return nil
		}
		return v.StopSendNotificationWhenHitCap
	}).(pulumi.BoolPtrOutput)
}

// Reserved, not used for now.
func (o ApplicationInsightsComponentDataVolumeCapPtrOutput) StopSendNotificationWhenHitThreshold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentDataVolumeCap) *bool {
		if v == nil {
			return nil
		}
		return v.StopSendNotificationWhenHitThreshold
	}).(pulumi.BoolPtrOutput)
}

// Reserved, not used for now.
func (o ApplicationInsightsComponentDataVolumeCapPtrOutput) WarningThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentDataVolumeCap) *int {
		if v == nil {
			return nil
		}
		return v.WarningThreshold
	}).(pulumi.IntPtrOutput)
}

// An Application Insights component daily data volume cap
type ApplicationInsightsComponentDataVolumeCapResponse struct {
	// Daily data volume cap in GB.
	Cap *float64 `pulumi:"cap"`
	// Maximum daily data volume cap that the user can set for this component.
	MaxHistoryCap float64 `pulumi:"maxHistoryCap"`
	// Daily data volume cap UTC reset hour.
	ResetTime int `pulumi:"resetTime"`
	// Do not send a notification email when the daily data volume cap is met.
	StopSendNotificationWhenHitCap *bool `pulumi:"stopSendNotificationWhenHitCap"`
	// Reserved, not used for now.
	StopSendNotificationWhenHitThreshold *bool `pulumi:"stopSendNotificationWhenHitThreshold"`
	// Reserved, not used for now.
	WarningThreshold *int `pulumi:"warningThreshold"`
}

// An Application Insights component daily data volume cap
type ApplicationInsightsComponentDataVolumeCapResponseOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentDataVolumeCapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentDataVolumeCapResponse)(nil)).Elem()
}

func (o ApplicationInsightsComponentDataVolumeCapResponseOutput) ToApplicationInsightsComponentDataVolumeCapResponseOutput() ApplicationInsightsComponentDataVolumeCapResponseOutput {
	return o
}

func (o ApplicationInsightsComponentDataVolumeCapResponseOutput) ToApplicationInsightsComponentDataVolumeCapResponseOutputWithContext(ctx context.Context) ApplicationInsightsComponentDataVolumeCapResponseOutput {
	return o
}

// Daily data volume cap in GB.
func (o ApplicationInsightsComponentDataVolumeCapResponseOutput) Cap() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentDataVolumeCapResponse) *float64 { return v.Cap }).(pulumi.Float64PtrOutput)
}

// Maximum daily data volume cap that the user can set for this component.
func (o ApplicationInsightsComponentDataVolumeCapResponseOutput) MaxHistoryCap() pulumi.Float64Output {
	return o.ApplyT(func(v ApplicationInsightsComponentDataVolumeCapResponse) float64 { return v.MaxHistoryCap }).(pulumi.Float64Output)
}

// Daily data volume cap UTC reset hour.
func (o ApplicationInsightsComponentDataVolumeCapResponseOutput) ResetTime() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentDataVolumeCapResponse) int { return v.ResetTime }).(pulumi.IntOutput)
}

// Do not send a notification email when the daily data volume cap is met.
func (o ApplicationInsightsComponentDataVolumeCapResponseOutput) StopSendNotificationWhenHitCap() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentDataVolumeCapResponse) *bool {
		return v.StopSendNotificationWhenHitCap
	}).(pulumi.BoolPtrOutput)
}

// Reserved, not used for now.
func (o ApplicationInsightsComponentDataVolumeCapResponseOutput) StopSendNotificationWhenHitThreshold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentDataVolumeCapResponse) *bool {
		return v.StopSendNotificationWhenHitThreshold
	}).(pulumi.BoolPtrOutput)
}

// Reserved, not used for now.
func (o ApplicationInsightsComponentDataVolumeCapResponseOutput) WarningThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentDataVolumeCapResponse) *int { return v.WarningThreshold }).(pulumi.IntPtrOutput)
}

type ApplicationInsightsComponentDataVolumeCapResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentDataVolumeCapResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentDataVolumeCapResponse)(nil)).Elem()
}

func (o ApplicationInsightsComponentDataVolumeCapResponsePtrOutput) ToApplicationInsightsComponentDataVolumeCapResponsePtrOutput() ApplicationInsightsComponentDataVolumeCapResponsePtrOutput {
	return o
}

func (o ApplicationInsightsComponentDataVolumeCapResponsePtrOutput) ToApplicationInsightsComponentDataVolumeCapResponsePtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentDataVolumeCapResponsePtrOutput {
	return o
}

func (o ApplicationInsightsComponentDataVolumeCapResponsePtrOutput) Elem() ApplicationInsightsComponentDataVolumeCapResponseOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentDataVolumeCapResponse) ApplicationInsightsComponentDataVolumeCapResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationInsightsComponentDataVolumeCapResponse
		return ret
	}).(ApplicationInsightsComponentDataVolumeCapResponseOutput)
}

// Daily data volume cap in GB.
func (o ApplicationInsightsComponentDataVolumeCapResponsePtrOutput) Cap() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentDataVolumeCapResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Cap
	}).(pulumi.Float64PtrOutput)
}

// Maximum daily data volume cap that the user can set for this component.
func (o ApplicationInsightsComponentDataVolumeCapResponsePtrOutput) MaxHistoryCap() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentDataVolumeCapResponse) *float64 {
		if v == nil {
			return nil
		}
		return &v.MaxHistoryCap
	}).(pulumi.Float64PtrOutput)
}

// Daily data volume cap UTC reset hour.
func (o ApplicationInsightsComponentDataVolumeCapResponsePtrOutput) ResetTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentDataVolumeCapResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ResetTime
	}).(pulumi.IntPtrOutput)
}

// Do not send a notification email when the daily data volume cap is met.
func (o ApplicationInsightsComponentDataVolumeCapResponsePtrOutput) StopSendNotificationWhenHitCap() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentDataVolumeCapResponse) *bool {
		if v == nil {
			return nil
		}
		return v.StopSendNotificationWhenHitCap
	}).(pulumi.BoolPtrOutput)
}

// Reserved, not used for now.
func (o ApplicationInsightsComponentDataVolumeCapResponsePtrOutput) StopSendNotificationWhenHitThreshold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentDataVolumeCapResponse) *bool {
		if v == nil {
			return nil
		}
		return v.StopSendNotificationWhenHitThreshold
	}).(pulumi.BoolPtrOutput)
}

// Reserved, not used for now.
func (o ApplicationInsightsComponentDataVolumeCapResponsePtrOutput) WarningThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentDataVolumeCapResponse) *int {
		if v == nil {
			return nil
		}
		return v.WarningThreshold
	}).(pulumi.IntPtrOutput)
}

// Properties that define a ProactiveDetection configuration.
type ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponse struct {
	// Custom email addresses for this rule notifications
	CustomEmails []string `pulumi:"customEmails"`
	// A flag that indicates whether this rule is enabled by the user
	Enabled *bool `pulumi:"enabled"`
	// The last time this rule was updated
	LastUpdatedTime string `pulumi:"lastUpdatedTime"`
	// The rule name
	Name string `pulumi:"name"`
	// Static definitions of the ProactiveDetection configuration rule (same values for all components).
	RuleDefinitions *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions `pulumi:"ruleDefinitions"`
	// A flag that indicated whether notifications on this rule should be sent to subscription owners
	SendEmailsToSubscriptionOwners *bool `pulumi:"sendEmailsToSubscriptionOwners"`
}

// Properties that define a ProactiveDetection configuration.
type ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponse)(nil)).Elem()
}

func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseOutput) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseOutput() ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseOutput {
	return o
}

func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseOutput) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseOutputWithContext(ctx context.Context) ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseOutput {
	return o
}

// Custom email addresses for this rule notifications
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseOutput) CustomEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponse) []string {
		return v.CustomEmails
	}).(pulumi.StringArrayOutput)
}

// A flag that indicates whether this rule is enabled by the user
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponse) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The last time this rule was updated
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponse) string {
		return v.LastUpdatedTime
	}).(pulumi.StringOutput)
}

// The rule name
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponse) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// Static definitions of the ProactiveDetection configuration rule (same values for all components).
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseOutput) RuleDefinitions() ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponse) *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions {
		return v.RuleDefinitions
	}).(ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput)
}

// A flag that indicated whether notifications on this rule should be sent to subscription owners
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseOutput) SendEmailsToSubscriptionOwners() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponse) *bool {
		return v.SendEmailsToSubscriptionOwners
	}).(pulumi.BoolPtrOutput)
}

// Static definitions of the ProactiveDetection configuration rule (same values for all components).
type ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions struct {
	// The rule description
	Description *string `pulumi:"description"`
	// The rule name as it is displayed in UI
	DisplayName *string `pulumi:"displayName"`
	// URL which displays additional info about the proactive detection rule
	HelpUrl *string `pulumi:"helpUrl"`
	// A flag indicating whether the rule is enabled by default
	IsEnabledByDefault *bool `pulumi:"isEnabledByDefault"`
	// A flag indicating whether the rule is hidden (from the UI)
	IsHidden *bool `pulumi:"isHidden"`
	// A flag indicating whether the rule is in preview
	IsInPreview *bool `pulumi:"isInPreview"`
	// The rule name
	Name *string `pulumi:"name"`
	// A flag indicating whether email notifications are supported for detections for this rule
	SupportsEmailNotifications *bool `pulumi:"supportsEmailNotifications"`
}

// Static definitions of the ProactiveDetection configuration rule (same values for all components).
type ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions)(nil)).Elem()
}

func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput() ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput {
	return o
}

func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutputWithContext(ctx context.Context) ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput {
	return o
}

// The rule description
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The rule name as it is displayed in UI
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) *string {
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// URL which displays additional info about the proactive detection rule
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput) HelpUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) *string {
		return v.HelpUrl
	}).(pulumi.StringPtrOutput)
}

// A flag indicating whether the rule is enabled by default
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput) IsEnabledByDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) *bool {
		return v.IsEnabledByDefault
	}).(pulumi.BoolPtrOutput)
}

// A flag indicating whether the rule is hidden (from the UI)
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput) IsHidden() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) *bool {
		return v.IsHidden
	}).(pulumi.BoolPtrOutput)
}

// A flag indicating whether the rule is in preview
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput) IsInPreview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) *bool {
		return v.IsInPreview
	}).(pulumi.BoolPtrOutput)
}

// The rule name
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A flag indicating whether email notifications are supported for detections for this rule
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput) SupportsEmailNotifications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) *bool {
		return v.SupportsEmailNotifications
	}).(pulumi.BoolPtrOutput)
}

type ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions)(nil)).Elem()
}

func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput() ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput {
	return o
}

func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput {
	return o
}

func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput) Elem() ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions {
		if v != nil {
			return *v
		}
		var ret ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions
		return ret
	}).(ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput)
}

// The rule description
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The rule name as it is displayed in UI
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// URL which displays additional info about the proactive detection rule
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput) HelpUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) *string {
		if v == nil {
			return nil
		}
		return v.HelpUrl
	}).(pulumi.StringPtrOutput)
}

// A flag indicating whether the rule is enabled by default
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput) IsEnabledByDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabledByDefault
	}).(pulumi.BoolPtrOutput)
}

// A flag indicating whether the rule is hidden (from the UI)
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput) IsHidden() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) *bool {
		if v == nil {
			return nil
		}
		return v.IsHidden
	}).(pulumi.BoolPtrOutput)
}

// A flag indicating whether the rule is in preview
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput) IsInPreview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) *bool {
		if v == nil {
			return nil
		}
		return v.IsInPreview
	}).(pulumi.BoolPtrOutput)
}

// The rule name
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A flag indicating whether email notifications are supported for detections for this rule
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput) SupportsEmailNotifications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitions) *bool {
		if v == nil {
			return nil
		}
		return v.SupportsEmailNotifications
	}).(pulumi.BoolPtrOutput)
}

// Static definitions of the ProactiveDetection configuration rule (same values for all components).
type ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions struct {
	// The rule description
	Description *string `pulumi:"description"`
	// The rule name as it is displayed in UI
	DisplayName *string `pulumi:"displayName"`
	// URL which displays additional info about the proactive detection rule
	HelpUrl *string `pulumi:"helpUrl"`
	// A flag indicating whether the rule is enabled by default
	IsEnabledByDefault *bool `pulumi:"isEnabledByDefault"`
	// A flag indicating whether the rule is hidden (from the UI)
	IsHidden *bool `pulumi:"isHidden"`
	// A flag indicating whether the rule is in preview
	IsInPreview *bool `pulumi:"isInPreview"`
	// The rule name
	Name *string `pulumi:"name"`
	// A flag indicating whether email notifications are supported for detections for this rule
	SupportsEmailNotifications *bool `pulumi:"supportsEmailNotifications"`
}

// ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsInput is an input type that accepts ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsArgs and ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsInput` via:
//
//	ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsArgs{...}
type ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsInput interface {
	pulumi.Input

	ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput() ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput
	ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutputWithContext(context.Context) ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput
}

// Static definitions of the ProactiveDetection configuration rule (same values for all components).
type ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsArgs struct {
	// The rule description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The rule name as it is displayed in UI
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// URL which displays additional info about the proactive detection rule
	HelpUrl pulumi.StringPtrInput `pulumi:"helpUrl"`
	// A flag indicating whether the rule is enabled by default
	IsEnabledByDefault pulumi.BoolPtrInput `pulumi:"isEnabledByDefault"`
	// A flag indicating whether the rule is hidden (from the UI)
	IsHidden pulumi.BoolPtrInput `pulumi:"isHidden"`
	// A flag indicating whether the rule is in preview
	IsInPreview pulumi.BoolPtrInput `pulumi:"isInPreview"`
	// The rule name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A flag indicating whether email notifications are supported for detections for this rule
	SupportsEmailNotifications pulumi.BoolPtrInput `pulumi:"supportsEmailNotifications"`
}

func (ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions)(nil)).Elem()
}

func (i ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsArgs) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput() ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput {
	return i.ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsArgs) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutputWithContext(ctx context.Context) ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput)
}

func (i ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsArgs) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput() ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput {
	return i.ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutputWithContext(context.Background())
}

func (i ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsArgs) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput).ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutputWithContext(ctx)
}

// ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrInput is an input type that accepts ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsArgs, ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtr and ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput values.
// You can construct a concrete instance of `ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrInput` via:
//
//	        ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsArgs{...}
//
//	or:
//
//	        nil
type ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrInput interface {
	pulumi.Input

	ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput() ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput
	ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutputWithContext(context.Context) ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput
}

type applicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrType ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsArgs

func ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtr(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsArgs) ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrInput {
	return (*applicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrType)(v)
}

func (*applicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions)(nil)).Elem()
}

func (i *applicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrType) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput() ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput {
	return i.ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutputWithContext(context.Background())
}

func (i *applicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrType) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput)
}

// Static definitions of the ProactiveDetection configuration rule (same values for all components).
type ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions)(nil)).Elem()
}

func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput() ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput {
	return o
}

func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutputWithContext(ctx context.Context) ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput {
	return o
}

func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput() ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput {
	return o.ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutputWithContext(context.Background())
}

func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions {
		return &v
	}).(ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput)
}

// The rule description
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The rule name as it is displayed in UI
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *string {
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// URL which displays additional info about the proactive detection rule
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput) HelpUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *string {
		return v.HelpUrl
	}).(pulumi.StringPtrOutput)
}

// A flag indicating whether the rule is enabled by default
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput) IsEnabledByDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *bool {
		return v.IsEnabledByDefault
	}).(pulumi.BoolPtrOutput)
}

// A flag indicating whether the rule is hidden (from the UI)
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput) IsHidden() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *bool {
		return v.IsHidden
	}).(pulumi.BoolPtrOutput)
}

// A flag indicating whether the rule is in preview
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput) IsInPreview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *bool {
		return v.IsInPreview
	}).(pulumi.BoolPtrOutput)
}

// The rule name
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A flag indicating whether email notifications are supported for detections for this rule
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput) SupportsEmailNotifications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *bool {
		return v.SupportsEmailNotifications
	}).(pulumi.BoolPtrOutput)
}

type ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput struct{ *pulumi.OutputState }

func (ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions)(nil)).Elem()
}

func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput() ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput {
	return o
}

func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput) ToApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutputWithContext(ctx context.Context) ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput {
	return o
}

func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput) Elem() ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions {
		if v != nil {
			return *v
		}
		var ret ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions
		return ret
	}).(ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput)
}

// The rule description
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The rule name as it is displayed in UI
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// URL which displays additional info about the proactive detection rule
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput) HelpUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *string {
		if v == nil {
			return nil
		}
		return v.HelpUrl
	}).(pulumi.StringPtrOutput)
}

// A flag indicating whether the rule is enabled by default
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput) IsEnabledByDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *bool {
		if v == nil {
			return nil
		}
		return v.IsEnabledByDefault
	}).(pulumi.BoolPtrOutput)
}

// A flag indicating whether the rule is hidden (from the UI)
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput) IsHidden() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *bool {
		if v == nil {
			return nil
		}
		return v.IsHidden
	}).(pulumi.BoolPtrOutput)
}

// A flag indicating whether the rule is in preview
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput) IsInPreview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *bool {
		if v == nil {
			return nil
		}
		return v.IsInPreview
	}).(pulumi.BoolPtrOutput)
}

// The rule name
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A flag indicating whether email notifications are supported for detections for this rule
func (o ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput) SupportsEmailNotifications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitions) *bool {
		if v == nil {
			return nil
		}
		return v.SupportsEmailNotifications
	}).(pulumi.BoolPtrOutput)
}

// A header to add to the WebTest.
type HeaderField struct {
	// The name of the header.
	HeaderFieldName *string `pulumi:"headerFieldName"`
	// The value of the header.
	HeaderFieldValue *string `pulumi:"headerFieldValue"`
}

// HeaderFieldInput is an input type that accepts HeaderFieldArgs and HeaderFieldOutput values.
// You can construct a concrete instance of `HeaderFieldInput` via:
//
//	HeaderFieldArgs{...}
type HeaderFieldInput interface {
	pulumi.Input

	ToHeaderFieldOutput() HeaderFieldOutput
	ToHeaderFieldOutputWithContext(context.Context) HeaderFieldOutput
}

// A header to add to the WebTest.
type HeaderFieldArgs struct {
	// The name of the header.
	HeaderFieldName pulumi.StringPtrInput `pulumi:"headerFieldName"`
	// The value of the header.
	HeaderFieldValue pulumi.StringPtrInput `pulumi:"headerFieldValue"`
}

func (HeaderFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderField)(nil)).Elem()
}

func (i HeaderFieldArgs) ToHeaderFieldOutput() HeaderFieldOutput {
	return i.ToHeaderFieldOutputWithContext(context.Background())
}

func (i HeaderFieldArgs) ToHeaderFieldOutputWithContext(ctx context.Context) HeaderFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeaderFieldOutput)
}

// HeaderFieldArrayInput is an input type that accepts HeaderFieldArray and HeaderFieldArrayOutput values.
// You can construct a concrete instance of `HeaderFieldArrayInput` via:
//
//	HeaderFieldArray{ HeaderFieldArgs{...} }
type HeaderFieldArrayInput interface {
	pulumi.Input

	ToHeaderFieldArrayOutput() HeaderFieldArrayOutput
	ToHeaderFieldArrayOutputWithContext(context.Context) HeaderFieldArrayOutput
}

type HeaderFieldArray []HeaderFieldInput

func (HeaderFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HeaderField)(nil)).Elem()
}

func (i HeaderFieldArray) ToHeaderFieldArrayOutput() HeaderFieldArrayOutput {
	return i.ToHeaderFieldArrayOutputWithContext(context.Background())
}

func (i HeaderFieldArray) ToHeaderFieldArrayOutputWithContext(ctx context.Context) HeaderFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeaderFieldArrayOutput)
}

// A header to add to the WebTest.
type HeaderFieldOutput struct{ *pulumi.OutputState }

func (HeaderFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderField)(nil)).Elem()
}

func (o HeaderFieldOutput) ToHeaderFieldOutput() HeaderFieldOutput {
	return o
}

func (o HeaderFieldOutput) ToHeaderFieldOutputWithContext(ctx context.Context) HeaderFieldOutput {
	return o
}

// The name of the header.
func (o HeaderFieldOutput) HeaderFieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeaderField) *string { return v.HeaderFieldName }).(pulumi.StringPtrOutput)
}

// The value of the header.
func (o HeaderFieldOutput) HeaderFieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeaderField) *string { return v.HeaderFieldValue }).(pulumi.StringPtrOutput)
}

type HeaderFieldArrayOutput struct{ *pulumi.OutputState }

func (HeaderFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HeaderField)(nil)).Elem()
}

func (o HeaderFieldArrayOutput) ToHeaderFieldArrayOutput() HeaderFieldArrayOutput {
	return o
}

func (o HeaderFieldArrayOutput) ToHeaderFieldArrayOutputWithContext(ctx context.Context) HeaderFieldArrayOutput {
	return o
}

func (o HeaderFieldArrayOutput) Index(i pulumi.IntInput) HeaderFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HeaderField {
		return vs[0].([]HeaderField)[vs[1].(int)]
	}).(HeaderFieldOutput)
}

// A header to add to the WebTest.
type HeaderFieldResponse struct {
	// The name of the header.
	HeaderFieldName *string `pulumi:"headerFieldName"`
	// The value of the header.
	HeaderFieldValue *string `pulumi:"headerFieldValue"`
}

// A header to add to the WebTest.
type HeaderFieldResponseOutput struct{ *pulumi.OutputState }

func (HeaderFieldResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderFieldResponse)(nil)).Elem()
}

func (o HeaderFieldResponseOutput) ToHeaderFieldResponseOutput() HeaderFieldResponseOutput {
	return o
}

func (o HeaderFieldResponseOutput) ToHeaderFieldResponseOutputWithContext(ctx context.Context) HeaderFieldResponseOutput {
	return o
}

// The name of the header.
func (o HeaderFieldResponseOutput) HeaderFieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeaderFieldResponse) *string { return v.HeaderFieldName }).(pulumi.StringPtrOutput)
}

// The value of the header.
func (o HeaderFieldResponseOutput) HeaderFieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeaderFieldResponse) *string { return v.HeaderFieldValue }).(pulumi.StringPtrOutput)
}

type HeaderFieldResponseArrayOutput struct{ *pulumi.OutputState }

func (HeaderFieldResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HeaderFieldResponse)(nil)).Elem()
}

func (o HeaderFieldResponseArrayOutput) ToHeaderFieldResponseArrayOutput() HeaderFieldResponseArrayOutput {
	return o
}

func (o HeaderFieldResponseArrayOutput) ToHeaderFieldResponseArrayOutputWithContext(ctx context.Context) HeaderFieldResponseArrayOutput {
	return o
}

func (o HeaderFieldResponseArrayOutput) Index(i pulumi.IntInput) HeaderFieldResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HeaderFieldResponse {
		return vs[0].([]HeaderFieldResponse)[vs[1].(int)]
	}).(HeaderFieldResponseOutput)
}

// Customer Managed Identity
type MyWorkbookManagedIdentity struct {
	// The identity type.
	Type *string `pulumi:"type"`
}

// MyWorkbookManagedIdentityInput is an input type that accepts MyWorkbookManagedIdentityArgs and MyWorkbookManagedIdentityOutput values.
// You can construct a concrete instance of `MyWorkbookManagedIdentityInput` via:
//
//	MyWorkbookManagedIdentityArgs{...}
type MyWorkbookManagedIdentityInput interface {
	pulumi.Input

	ToMyWorkbookManagedIdentityOutput() MyWorkbookManagedIdentityOutput
	ToMyWorkbookManagedIdentityOutputWithContext(context.Context) MyWorkbookManagedIdentityOutput
}

// Customer Managed Identity
type MyWorkbookManagedIdentityArgs struct {
	// The identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (MyWorkbookManagedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MyWorkbookManagedIdentity)(nil)).Elem()
}

func (i MyWorkbookManagedIdentityArgs) ToMyWorkbookManagedIdentityOutput() MyWorkbookManagedIdentityOutput {
	return i.ToMyWorkbookManagedIdentityOutputWithContext(context.Background())
}

func (i MyWorkbookManagedIdentityArgs) ToMyWorkbookManagedIdentityOutputWithContext(ctx context.Context) MyWorkbookManagedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MyWorkbookManagedIdentityOutput)
}

func (i MyWorkbookManagedIdentityArgs) ToMyWorkbookManagedIdentityPtrOutput() MyWorkbookManagedIdentityPtrOutput {
	return i.ToMyWorkbookManagedIdentityPtrOutputWithContext(context.Background())
}

func (i MyWorkbookManagedIdentityArgs) ToMyWorkbookManagedIdentityPtrOutputWithContext(ctx context.Context) MyWorkbookManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MyWorkbookManagedIdentityOutput).ToMyWorkbookManagedIdentityPtrOutputWithContext(ctx)
}

// MyWorkbookManagedIdentityPtrInput is an input type that accepts MyWorkbookManagedIdentityArgs, MyWorkbookManagedIdentityPtr and MyWorkbookManagedIdentityPtrOutput values.
// You can construct a concrete instance of `MyWorkbookManagedIdentityPtrInput` via:
//
//	        MyWorkbookManagedIdentityArgs{...}
//
//	or:
//
//	        nil
type MyWorkbookManagedIdentityPtrInput interface {
	pulumi.Input

	ToMyWorkbookManagedIdentityPtrOutput() MyWorkbookManagedIdentityPtrOutput
	ToMyWorkbookManagedIdentityPtrOutputWithContext(context.Context) MyWorkbookManagedIdentityPtrOutput
}

type myWorkbookManagedIdentityPtrType MyWorkbookManagedIdentityArgs

func MyWorkbookManagedIdentityPtr(v *MyWorkbookManagedIdentityArgs) MyWorkbookManagedIdentityPtrInput {
	return (*myWorkbookManagedIdentityPtrType)(v)
}

func (*myWorkbookManagedIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MyWorkbookManagedIdentity)(nil)).Elem()
}

func (i *myWorkbookManagedIdentityPtrType) ToMyWorkbookManagedIdentityPtrOutput() MyWorkbookManagedIdentityPtrOutput {
	return i.ToMyWorkbookManagedIdentityPtrOutputWithContext(context.Background())
}

func (i *myWorkbookManagedIdentityPtrType) ToMyWorkbookManagedIdentityPtrOutputWithContext(ctx context.Context) MyWorkbookManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MyWorkbookManagedIdentityPtrOutput)
}

// Customer Managed Identity
type MyWorkbookManagedIdentityOutput struct{ *pulumi.OutputState }

func (MyWorkbookManagedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MyWorkbookManagedIdentity)(nil)).Elem()
}

func (o MyWorkbookManagedIdentityOutput) ToMyWorkbookManagedIdentityOutput() MyWorkbookManagedIdentityOutput {
	return o
}

func (o MyWorkbookManagedIdentityOutput) ToMyWorkbookManagedIdentityOutputWithContext(ctx context.Context) MyWorkbookManagedIdentityOutput {
	return o
}

func (o MyWorkbookManagedIdentityOutput) ToMyWorkbookManagedIdentityPtrOutput() MyWorkbookManagedIdentityPtrOutput {
	return o.ToMyWorkbookManagedIdentityPtrOutputWithContext(context.Background())
}

func (o MyWorkbookManagedIdentityOutput) ToMyWorkbookManagedIdentityPtrOutputWithContext(ctx context.Context) MyWorkbookManagedIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MyWorkbookManagedIdentity) *MyWorkbookManagedIdentity {
		return &v
	}).(MyWorkbookManagedIdentityPtrOutput)
}

// The identity type.
func (o MyWorkbookManagedIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MyWorkbookManagedIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type MyWorkbookManagedIdentityPtrOutput struct{ *pulumi.OutputState }

func (MyWorkbookManagedIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MyWorkbookManagedIdentity)(nil)).Elem()
}

func (o MyWorkbookManagedIdentityPtrOutput) ToMyWorkbookManagedIdentityPtrOutput() MyWorkbookManagedIdentityPtrOutput {
	return o
}

func (o MyWorkbookManagedIdentityPtrOutput) ToMyWorkbookManagedIdentityPtrOutputWithContext(ctx context.Context) MyWorkbookManagedIdentityPtrOutput {
	return o
}

func (o MyWorkbookManagedIdentityPtrOutput) Elem() MyWorkbookManagedIdentityOutput {
	return o.ApplyT(func(v *MyWorkbookManagedIdentity) MyWorkbookManagedIdentity {
		if v != nil {
			return *v
		}
		var ret MyWorkbookManagedIdentity
		return ret
	}).(MyWorkbookManagedIdentityOutput)
}

// The identity type.
func (o MyWorkbookManagedIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MyWorkbookManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Customer Managed Identity
type MyWorkbookManagedIdentityResponse struct {
	// The identity type.
	Type *string `pulumi:"type"`
	// Customer Managed Identity
	UserAssignedIdentities *MyWorkbookUserAssignedIdentitiesResponse `pulumi:"userAssignedIdentities"`
}

// Customer Managed Identity
type MyWorkbookManagedIdentityResponseOutput struct{ *pulumi.OutputState }

func (MyWorkbookManagedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MyWorkbookManagedIdentityResponse)(nil)).Elem()
}

func (o MyWorkbookManagedIdentityResponseOutput) ToMyWorkbookManagedIdentityResponseOutput() MyWorkbookManagedIdentityResponseOutput {
	return o
}

func (o MyWorkbookManagedIdentityResponseOutput) ToMyWorkbookManagedIdentityResponseOutputWithContext(ctx context.Context) MyWorkbookManagedIdentityResponseOutput {
	return o
}

// The identity type.
func (o MyWorkbookManagedIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MyWorkbookManagedIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Customer Managed Identity
func (o MyWorkbookManagedIdentityResponseOutput) UserAssignedIdentities() MyWorkbookUserAssignedIdentitiesResponsePtrOutput {
	return o.ApplyT(func(v MyWorkbookManagedIdentityResponse) *MyWorkbookUserAssignedIdentitiesResponse {
		return v.UserAssignedIdentities
	}).(MyWorkbookUserAssignedIdentitiesResponsePtrOutput)
}

type MyWorkbookManagedIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (MyWorkbookManagedIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MyWorkbookManagedIdentityResponse)(nil)).Elem()
}

func (o MyWorkbookManagedIdentityResponsePtrOutput) ToMyWorkbookManagedIdentityResponsePtrOutput() MyWorkbookManagedIdentityResponsePtrOutput {
	return o
}

func (o MyWorkbookManagedIdentityResponsePtrOutput) ToMyWorkbookManagedIdentityResponsePtrOutputWithContext(ctx context.Context) MyWorkbookManagedIdentityResponsePtrOutput {
	return o
}

func (o MyWorkbookManagedIdentityResponsePtrOutput) Elem() MyWorkbookManagedIdentityResponseOutput {
	return o.ApplyT(func(v *MyWorkbookManagedIdentityResponse) MyWorkbookManagedIdentityResponse {
		if v != nil {
			return *v
		}
		var ret MyWorkbookManagedIdentityResponse
		return ret
	}).(MyWorkbookManagedIdentityResponseOutput)
}

// The identity type.
func (o MyWorkbookManagedIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MyWorkbookManagedIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Customer Managed Identity
func (o MyWorkbookManagedIdentityResponsePtrOutput) UserAssignedIdentities() MyWorkbookUserAssignedIdentitiesResponsePtrOutput {
	return o.ApplyT(func(v *MyWorkbookManagedIdentityResponse) *MyWorkbookUserAssignedIdentitiesResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(MyWorkbookUserAssignedIdentitiesResponsePtrOutput)
}

// Customer Managed Identity
type MyWorkbookUserAssignedIdentitiesResponse struct {
	// The principal ID of resource identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId string `pulumi:"tenantId"`
}

// Customer Managed Identity
type MyWorkbookUserAssignedIdentitiesResponseOutput struct{ *pulumi.OutputState }

func (MyWorkbookUserAssignedIdentitiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MyWorkbookUserAssignedIdentitiesResponse)(nil)).Elem()
}

func (o MyWorkbookUserAssignedIdentitiesResponseOutput) ToMyWorkbookUserAssignedIdentitiesResponseOutput() MyWorkbookUserAssignedIdentitiesResponseOutput {
	return o
}

func (o MyWorkbookUserAssignedIdentitiesResponseOutput) ToMyWorkbookUserAssignedIdentitiesResponseOutputWithContext(ctx context.Context) MyWorkbookUserAssignedIdentitiesResponseOutput {
	return o
}

// The principal ID of resource identity.
func (o MyWorkbookUserAssignedIdentitiesResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v MyWorkbookUserAssignedIdentitiesResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of resource.
func (o MyWorkbookUserAssignedIdentitiesResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v MyWorkbookUserAssignedIdentitiesResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

type MyWorkbookUserAssignedIdentitiesResponsePtrOutput struct{ *pulumi.OutputState }

func (MyWorkbookUserAssignedIdentitiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MyWorkbookUserAssignedIdentitiesResponse)(nil)).Elem()
}

func (o MyWorkbookUserAssignedIdentitiesResponsePtrOutput) ToMyWorkbookUserAssignedIdentitiesResponsePtrOutput() MyWorkbookUserAssignedIdentitiesResponsePtrOutput {
	return o
}

func (o MyWorkbookUserAssignedIdentitiesResponsePtrOutput) ToMyWorkbookUserAssignedIdentitiesResponsePtrOutputWithContext(ctx context.Context) MyWorkbookUserAssignedIdentitiesResponsePtrOutput {
	return o
}

func (o MyWorkbookUserAssignedIdentitiesResponsePtrOutput) Elem() MyWorkbookUserAssignedIdentitiesResponseOutput {
	return o.ApplyT(func(v *MyWorkbookUserAssignedIdentitiesResponse) MyWorkbookUserAssignedIdentitiesResponse {
		if v != nil {
			return *v
		}
		var ret MyWorkbookUserAssignedIdentitiesResponse
		return ret
	}).(MyWorkbookUserAssignedIdentitiesResponseOutput)
}

// The principal ID of resource identity.
func (o MyWorkbookUserAssignedIdentitiesResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MyWorkbookUserAssignedIdentitiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o MyWorkbookUserAssignedIdentitiesResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MyWorkbookUserAssignedIdentitiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The private link scope resource reference.
type PrivateLinkScopedResourceResponse struct {
	// The full resource Id of the private link scope resource.
	ResourceId *string `pulumi:"resourceId"`
	// The private link scope unique Identifier.
	ScopeId *string `pulumi:"scopeId"`
}

// The private link scope resource reference.
type PrivateLinkScopedResourceResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkScopedResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkScopedResourceResponse)(nil)).Elem()
}

func (o PrivateLinkScopedResourceResponseOutput) ToPrivateLinkScopedResourceResponseOutput() PrivateLinkScopedResourceResponseOutput {
	return o
}

func (o PrivateLinkScopedResourceResponseOutput) ToPrivateLinkScopedResourceResponseOutputWithContext(ctx context.Context) PrivateLinkScopedResourceResponseOutput {
	return o
}

// The full resource Id of the private link scope resource.
func (o PrivateLinkScopedResourceResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkScopedResourceResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The private link scope unique Identifier.
func (o PrivateLinkScopedResourceResponseOutput) ScopeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkScopedResourceResponse) *string { return v.ScopeId }).(pulumi.StringPtrOutput)
}

type PrivateLinkScopedResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkScopedResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkScopedResourceResponse)(nil)).Elem()
}

func (o PrivateLinkScopedResourceResponseArrayOutput) ToPrivateLinkScopedResourceResponseArrayOutput() PrivateLinkScopedResourceResponseArrayOutput {
	return o
}

func (o PrivateLinkScopedResourceResponseArrayOutput) ToPrivateLinkScopedResourceResponseArrayOutputWithContext(ctx context.Context) PrivateLinkScopedResourceResponseArrayOutput {
	return o
}

func (o PrivateLinkScopedResourceResponseArrayOutput) Index(i pulumi.IntInput) PrivateLinkScopedResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkScopedResourceResponse {
		return vs[0].([]PrivateLinkScopedResourceResponse)[vs[1].(int)]
	}).(PrivateLinkScopedResourceResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// User assigned identity properties
type UserAssignedIdentityResponse struct {
	// The client ID of the assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal ID of the assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// User assigned identity properties
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal ID of the assigned identity.
func (o UserAssignedIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// Geo-physical location to run a WebTest from. You must specify one or more locations for the test to run from.
type WebTestGeolocation struct {
	// Location ID for the WebTest to run from.
	Location *string `pulumi:"location"`
}

// WebTestGeolocationInput is an input type that accepts WebTestGeolocationArgs and WebTestGeolocationOutput values.
// You can construct a concrete instance of `WebTestGeolocationInput` via:
//
//	WebTestGeolocationArgs{...}
type WebTestGeolocationInput interface {
	pulumi.Input

	ToWebTestGeolocationOutput() WebTestGeolocationOutput
	ToWebTestGeolocationOutputWithContext(context.Context) WebTestGeolocationOutput
}

// Geo-physical location to run a WebTest from. You must specify one or more locations for the test to run from.
type WebTestGeolocationArgs struct {
	// Location ID for the WebTest to run from.
	Location pulumi.StringPtrInput `pulumi:"location"`
}

func (WebTestGeolocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestGeolocation)(nil)).Elem()
}

func (i WebTestGeolocationArgs) ToWebTestGeolocationOutput() WebTestGeolocationOutput {
	return i.ToWebTestGeolocationOutputWithContext(context.Background())
}

func (i WebTestGeolocationArgs) ToWebTestGeolocationOutputWithContext(ctx context.Context) WebTestGeolocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestGeolocationOutput)
}

// WebTestGeolocationArrayInput is an input type that accepts WebTestGeolocationArray and WebTestGeolocationArrayOutput values.
// You can construct a concrete instance of `WebTestGeolocationArrayInput` via:
//
//	WebTestGeolocationArray{ WebTestGeolocationArgs{...} }
type WebTestGeolocationArrayInput interface {
	pulumi.Input

	ToWebTestGeolocationArrayOutput() WebTestGeolocationArrayOutput
	ToWebTestGeolocationArrayOutputWithContext(context.Context) WebTestGeolocationArrayOutput
}

type WebTestGeolocationArray []WebTestGeolocationInput

func (WebTestGeolocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebTestGeolocation)(nil)).Elem()
}

func (i WebTestGeolocationArray) ToWebTestGeolocationArrayOutput() WebTestGeolocationArrayOutput {
	return i.ToWebTestGeolocationArrayOutputWithContext(context.Background())
}

func (i WebTestGeolocationArray) ToWebTestGeolocationArrayOutputWithContext(ctx context.Context) WebTestGeolocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestGeolocationArrayOutput)
}

// Geo-physical location to run a WebTest from. You must specify one or more locations for the test to run from.
type WebTestGeolocationOutput struct{ *pulumi.OutputState }

func (WebTestGeolocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestGeolocation)(nil)).Elem()
}

func (o WebTestGeolocationOutput) ToWebTestGeolocationOutput() WebTestGeolocationOutput {
	return o
}

func (o WebTestGeolocationOutput) ToWebTestGeolocationOutputWithContext(ctx context.Context) WebTestGeolocationOutput {
	return o
}

// Location ID for the WebTest to run from.
func (o WebTestGeolocationOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestGeolocation) *string { return v.Location }).(pulumi.StringPtrOutput)
}

type WebTestGeolocationArrayOutput struct{ *pulumi.OutputState }

func (WebTestGeolocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebTestGeolocation)(nil)).Elem()
}

func (o WebTestGeolocationArrayOutput) ToWebTestGeolocationArrayOutput() WebTestGeolocationArrayOutput {
	return o
}

func (o WebTestGeolocationArrayOutput) ToWebTestGeolocationArrayOutputWithContext(ctx context.Context) WebTestGeolocationArrayOutput {
	return o
}

func (o WebTestGeolocationArrayOutput) Index(i pulumi.IntInput) WebTestGeolocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebTestGeolocation {
		return vs[0].([]WebTestGeolocation)[vs[1].(int)]
	}).(WebTestGeolocationOutput)
}

// Geo-physical location to run a WebTest from. You must specify one or more locations for the test to run from.
type WebTestGeolocationResponse struct {
	// Location ID for the WebTest to run from.
	Location *string `pulumi:"location"`
}

// Geo-physical location to run a WebTest from. You must specify one or more locations for the test to run from.
type WebTestGeolocationResponseOutput struct{ *pulumi.OutputState }

func (WebTestGeolocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestGeolocationResponse)(nil)).Elem()
}

func (o WebTestGeolocationResponseOutput) ToWebTestGeolocationResponseOutput() WebTestGeolocationResponseOutput {
	return o
}

func (o WebTestGeolocationResponseOutput) ToWebTestGeolocationResponseOutputWithContext(ctx context.Context) WebTestGeolocationResponseOutput {
	return o
}

// Location ID for the WebTest to run from.
func (o WebTestGeolocationResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestGeolocationResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

type WebTestGeolocationResponseArrayOutput struct{ *pulumi.OutputState }

func (WebTestGeolocationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebTestGeolocationResponse)(nil)).Elem()
}

func (o WebTestGeolocationResponseArrayOutput) ToWebTestGeolocationResponseArrayOutput() WebTestGeolocationResponseArrayOutput {
	return o
}

func (o WebTestGeolocationResponseArrayOutput) ToWebTestGeolocationResponseArrayOutputWithContext(ctx context.Context) WebTestGeolocationResponseArrayOutput {
	return o
}

func (o WebTestGeolocationResponseArrayOutput) Index(i pulumi.IntInput) WebTestGeolocationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebTestGeolocationResponse {
		return vs[0].([]WebTestGeolocationResponse)[vs[1].(int)]
	}).(WebTestGeolocationResponseOutput)
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesConfiguration struct {
	// The XML specification of a WebTest to run against an application.
	WebTest *string `pulumi:"webTest"`
}

// WebTestPropertiesConfigurationInput is an input type that accepts WebTestPropertiesConfigurationArgs and WebTestPropertiesConfigurationOutput values.
// You can construct a concrete instance of `WebTestPropertiesConfigurationInput` via:
//
//	WebTestPropertiesConfigurationArgs{...}
type WebTestPropertiesConfigurationInput interface {
	pulumi.Input

	ToWebTestPropertiesConfigurationOutput() WebTestPropertiesConfigurationOutput
	ToWebTestPropertiesConfigurationOutputWithContext(context.Context) WebTestPropertiesConfigurationOutput
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesConfigurationArgs struct {
	// The XML specification of a WebTest to run against an application.
	WebTest pulumi.StringPtrInput `pulumi:"webTest"`
}

func (WebTestPropertiesConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesConfiguration)(nil)).Elem()
}

func (i WebTestPropertiesConfigurationArgs) ToWebTestPropertiesConfigurationOutput() WebTestPropertiesConfigurationOutput {
	return i.ToWebTestPropertiesConfigurationOutputWithContext(context.Background())
}

func (i WebTestPropertiesConfigurationArgs) ToWebTestPropertiesConfigurationOutputWithContext(ctx context.Context) WebTestPropertiesConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesConfigurationOutput)
}

func (i WebTestPropertiesConfigurationArgs) ToWebTestPropertiesConfigurationPtrOutput() WebTestPropertiesConfigurationPtrOutput {
	return i.ToWebTestPropertiesConfigurationPtrOutputWithContext(context.Background())
}

func (i WebTestPropertiesConfigurationArgs) ToWebTestPropertiesConfigurationPtrOutputWithContext(ctx context.Context) WebTestPropertiesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesConfigurationOutput).ToWebTestPropertiesConfigurationPtrOutputWithContext(ctx)
}

// WebTestPropertiesConfigurationPtrInput is an input type that accepts WebTestPropertiesConfigurationArgs, WebTestPropertiesConfigurationPtr and WebTestPropertiesConfigurationPtrOutput values.
// You can construct a concrete instance of `WebTestPropertiesConfigurationPtrInput` via:
//
//	        WebTestPropertiesConfigurationArgs{...}
//
//	or:
//
//	        nil
type WebTestPropertiesConfigurationPtrInput interface {
	pulumi.Input

	ToWebTestPropertiesConfigurationPtrOutput() WebTestPropertiesConfigurationPtrOutput
	ToWebTestPropertiesConfigurationPtrOutputWithContext(context.Context) WebTestPropertiesConfigurationPtrOutput
}

type webTestPropertiesConfigurationPtrType WebTestPropertiesConfigurationArgs

func WebTestPropertiesConfigurationPtr(v *WebTestPropertiesConfigurationArgs) WebTestPropertiesConfigurationPtrInput {
	return (*webTestPropertiesConfigurationPtrType)(v)
}

func (*webTestPropertiesConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesConfiguration)(nil)).Elem()
}

func (i *webTestPropertiesConfigurationPtrType) ToWebTestPropertiesConfigurationPtrOutput() WebTestPropertiesConfigurationPtrOutput {
	return i.ToWebTestPropertiesConfigurationPtrOutputWithContext(context.Background())
}

func (i *webTestPropertiesConfigurationPtrType) ToWebTestPropertiesConfigurationPtrOutputWithContext(ctx context.Context) WebTestPropertiesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesConfigurationPtrOutput)
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesConfigurationOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesConfiguration)(nil)).Elem()
}

func (o WebTestPropertiesConfigurationOutput) ToWebTestPropertiesConfigurationOutput() WebTestPropertiesConfigurationOutput {
	return o
}

func (o WebTestPropertiesConfigurationOutput) ToWebTestPropertiesConfigurationOutputWithContext(ctx context.Context) WebTestPropertiesConfigurationOutput {
	return o
}

func (o WebTestPropertiesConfigurationOutput) ToWebTestPropertiesConfigurationPtrOutput() WebTestPropertiesConfigurationPtrOutput {
	return o.ToWebTestPropertiesConfigurationPtrOutputWithContext(context.Background())
}

func (o WebTestPropertiesConfigurationOutput) ToWebTestPropertiesConfigurationPtrOutputWithContext(ctx context.Context) WebTestPropertiesConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebTestPropertiesConfiguration) *WebTestPropertiesConfiguration {
		return &v
	}).(WebTestPropertiesConfigurationPtrOutput)
}

// The XML specification of a WebTest to run against an application.
func (o WebTestPropertiesConfigurationOutput) WebTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesConfiguration) *string { return v.WebTest }).(pulumi.StringPtrOutput)
}

type WebTestPropertiesConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesConfiguration)(nil)).Elem()
}

func (o WebTestPropertiesConfigurationPtrOutput) ToWebTestPropertiesConfigurationPtrOutput() WebTestPropertiesConfigurationPtrOutput {
	return o
}

func (o WebTestPropertiesConfigurationPtrOutput) ToWebTestPropertiesConfigurationPtrOutputWithContext(ctx context.Context) WebTestPropertiesConfigurationPtrOutput {
	return o
}

func (o WebTestPropertiesConfigurationPtrOutput) Elem() WebTestPropertiesConfigurationOutput {
	return o.ApplyT(func(v *WebTestPropertiesConfiguration) WebTestPropertiesConfiguration {
		if v != nil {
			return *v
		}
		var ret WebTestPropertiesConfiguration
		return ret
	}).(WebTestPropertiesConfigurationOutput)
}

// The XML specification of a WebTest to run against an application.
func (o WebTestPropertiesConfigurationPtrOutput) WebTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.WebTest
	}).(pulumi.StringPtrOutput)
}

// The collection of content validation properties
type WebTestPropertiesContentValidation struct {
	// Content to look for in the return of the WebTest.  Must not be null or empty.
	ContentMatch *string `pulumi:"contentMatch"`
	// When set, this value makes the ContentMatch validation case insensitive.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// When true, validation will pass if there is a match for the ContentMatch string.  If false, validation will fail if there is a match
	PassIfTextFound *bool `pulumi:"passIfTextFound"`
}

// WebTestPropertiesContentValidationInput is an input type that accepts WebTestPropertiesContentValidationArgs and WebTestPropertiesContentValidationOutput values.
// You can construct a concrete instance of `WebTestPropertiesContentValidationInput` via:
//
//	WebTestPropertiesContentValidationArgs{...}
type WebTestPropertiesContentValidationInput interface {
	pulumi.Input

	ToWebTestPropertiesContentValidationOutput() WebTestPropertiesContentValidationOutput
	ToWebTestPropertiesContentValidationOutputWithContext(context.Context) WebTestPropertiesContentValidationOutput
}

// The collection of content validation properties
type WebTestPropertiesContentValidationArgs struct {
	// Content to look for in the return of the WebTest.  Must not be null or empty.
	ContentMatch pulumi.StringPtrInput `pulumi:"contentMatch"`
	// When set, this value makes the ContentMatch validation case insensitive.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// When true, validation will pass if there is a match for the ContentMatch string.  If false, validation will fail if there is a match
	PassIfTextFound pulumi.BoolPtrInput `pulumi:"passIfTextFound"`
}

func (WebTestPropertiesContentValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesContentValidation)(nil)).Elem()
}

func (i WebTestPropertiesContentValidationArgs) ToWebTestPropertiesContentValidationOutput() WebTestPropertiesContentValidationOutput {
	return i.ToWebTestPropertiesContentValidationOutputWithContext(context.Background())
}

func (i WebTestPropertiesContentValidationArgs) ToWebTestPropertiesContentValidationOutputWithContext(ctx context.Context) WebTestPropertiesContentValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesContentValidationOutput)
}

func (i WebTestPropertiesContentValidationArgs) ToWebTestPropertiesContentValidationPtrOutput() WebTestPropertiesContentValidationPtrOutput {
	return i.ToWebTestPropertiesContentValidationPtrOutputWithContext(context.Background())
}

func (i WebTestPropertiesContentValidationArgs) ToWebTestPropertiesContentValidationPtrOutputWithContext(ctx context.Context) WebTestPropertiesContentValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesContentValidationOutput).ToWebTestPropertiesContentValidationPtrOutputWithContext(ctx)
}

// WebTestPropertiesContentValidationPtrInput is an input type that accepts WebTestPropertiesContentValidationArgs, WebTestPropertiesContentValidationPtr and WebTestPropertiesContentValidationPtrOutput values.
// You can construct a concrete instance of `WebTestPropertiesContentValidationPtrInput` via:
//
//	        WebTestPropertiesContentValidationArgs{...}
//
//	or:
//
//	        nil
type WebTestPropertiesContentValidationPtrInput interface {
	pulumi.Input

	ToWebTestPropertiesContentValidationPtrOutput() WebTestPropertiesContentValidationPtrOutput
	ToWebTestPropertiesContentValidationPtrOutputWithContext(context.Context) WebTestPropertiesContentValidationPtrOutput
}

type webTestPropertiesContentValidationPtrType WebTestPropertiesContentValidationArgs

func WebTestPropertiesContentValidationPtr(v *WebTestPropertiesContentValidationArgs) WebTestPropertiesContentValidationPtrInput {
	return (*webTestPropertiesContentValidationPtrType)(v)
}

func (*webTestPropertiesContentValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesContentValidation)(nil)).Elem()
}

func (i *webTestPropertiesContentValidationPtrType) ToWebTestPropertiesContentValidationPtrOutput() WebTestPropertiesContentValidationPtrOutput {
	return i.ToWebTestPropertiesContentValidationPtrOutputWithContext(context.Background())
}

func (i *webTestPropertiesContentValidationPtrType) ToWebTestPropertiesContentValidationPtrOutputWithContext(ctx context.Context) WebTestPropertiesContentValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesContentValidationPtrOutput)
}

// The collection of content validation properties
type WebTestPropertiesContentValidationOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesContentValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesContentValidation)(nil)).Elem()
}

func (o WebTestPropertiesContentValidationOutput) ToWebTestPropertiesContentValidationOutput() WebTestPropertiesContentValidationOutput {
	return o
}

func (o WebTestPropertiesContentValidationOutput) ToWebTestPropertiesContentValidationOutputWithContext(ctx context.Context) WebTestPropertiesContentValidationOutput {
	return o
}

func (o WebTestPropertiesContentValidationOutput) ToWebTestPropertiesContentValidationPtrOutput() WebTestPropertiesContentValidationPtrOutput {
	return o.ToWebTestPropertiesContentValidationPtrOutputWithContext(context.Background())
}

func (o WebTestPropertiesContentValidationOutput) ToWebTestPropertiesContentValidationPtrOutputWithContext(ctx context.Context) WebTestPropertiesContentValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebTestPropertiesContentValidation) *WebTestPropertiesContentValidation {
		return &v
	}).(WebTestPropertiesContentValidationPtrOutput)
}

// Content to look for in the return of the WebTest.  Must not be null or empty.
func (o WebTestPropertiesContentValidationOutput) ContentMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesContentValidation) *string { return v.ContentMatch }).(pulumi.StringPtrOutput)
}

// When set, this value makes the ContentMatch validation case insensitive.
func (o WebTestPropertiesContentValidationOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesContentValidation) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// When true, validation will pass if there is a match for the ContentMatch string.  If false, validation will fail if there is a match
func (o WebTestPropertiesContentValidationOutput) PassIfTextFound() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesContentValidation) *bool { return v.PassIfTextFound }).(pulumi.BoolPtrOutput)
}

type WebTestPropertiesContentValidationPtrOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesContentValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesContentValidation)(nil)).Elem()
}

func (o WebTestPropertiesContentValidationPtrOutput) ToWebTestPropertiesContentValidationPtrOutput() WebTestPropertiesContentValidationPtrOutput {
	return o
}

func (o WebTestPropertiesContentValidationPtrOutput) ToWebTestPropertiesContentValidationPtrOutputWithContext(ctx context.Context) WebTestPropertiesContentValidationPtrOutput {
	return o
}

func (o WebTestPropertiesContentValidationPtrOutput) Elem() WebTestPropertiesContentValidationOutput {
	return o.ApplyT(func(v *WebTestPropertiesContentValidation) WebTestPropertiesContentValidation {
		if v != nil {
			return *v
		}
		var ret WebTestPropertiesContentValidation
		return ret
	}).(WebTestPropertiesContentValidationOutput)
}

// Content to look for in the return of the WebTest.  Must not be null or empty.
func (o WebTestPropertiesContentValidationPtrOutput) ContentMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesContentValidation) *string {
		if v == nil {
			return nil
		}
		return v.ContentMatch
	}).(pulumi.StringPtrOutput)
}

// When set, this value makes the ContentMatch validation case insensitive.
func (o WebTestPropertiesContentValidationPtrOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesContentValidation) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreCase
	}).(pulumi.BoolPtrOutput)
}

// When true, validation will pass if there is a match for the ContentMatch string.  If false, validation will fail if there is a match
func (o WebTestPropertiesContentValidationPtrOutput) PassIfTextFound() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesContentValidation) *bool {
		if v == nil {
			return nil
		}
		return v.PassIfTextFound
	}).(pulumi.BoolPtrOutput)
}

// The collection of request properties
type WebTestPropertiesRequest struct {
	// Follow redirects for this web test.
	FollowRedirects *bool `pulumi:"followRedirects"`
	// List of headers and their values to add to the WebTest call.
	Headers []HeaderField `pulumi:"headers"`
	// Http verb to use for this web test.
	HttpVerb *string `pulumi:"httpVerb"`
	// Parse Dependent request for this WebTest.
	ParseDependentRequests *bool `pulumi:"parseDependentRequests"`
	// Base64 encoded string body to send with this web test.
	RequestBody *string `pulumi:"requestBody"`
	// Url location to test.
	RequestUrl *string `pulumi:"requestUrl"`
}

// WebTestPropertiesRequestInput is an input type that accepts WebTestPropertiesRequestArgs and WebTestPropertiesRequestOutput values.
// You can construct a concrete instance of `WebTestPropertiesRequestInput` via:
//
//	WebTestPropertiesRequestArgs{...}
type WebTestPropertiesRequestInput interface {
	pulumi.Input

	ToWebTestPropertiesRequestOutput() WebTestPropertiesRequestOutput
	ToWebTestPropertiesRequestOutputWithContext(context.Context) WebTestPropertiesRequestOutput
}

// The collection of request properties
type WebTestPropertiesRequestArgs struct {
	// Follow redirects for this web test.
	FollowRedirects pulumi.BoolPtrInput `pulumi:"followRedirects"`
	// List of headers and their values to add to the WebTest call.
	Headers HeaderFieldArrayInput `pulumi:"headers"`
	// Http verb to use for this web test.
	HttpVerb pulumi.StringPtrInput `pulumi:"httpVerb"`
	// Parse Dependent request for this WebTest.
	ParseDependentRequests pulumi.BoolPtrInput `pulumi:"parseDependentRequests"`
	// Base64 encoded string body to send with this web test.
	RequestBody pulumi.StringPtrInput `pulumi:"requestBody"`
	// Url location to test.
	RequestUrl pulumi.StringPtrInput `pulumi:"requestUrl"`
}

func (WebTestPropertiesRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesRequest)(nil)).Elem()
}

func (i WebTestPropertiesRequestArgs) ToWebTestPropertiesRequestOutput() WebTestPropertiesRequestOutput {
	return i.ToWebTestPropertiesRequestOutputWithContext(context.Background())
}

func (i WebTestPropertiesRequestArgs) ToWebTestPropertiesRequestOutputWithContext(ctx context.Context) WebTestPropertiesRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesRequestOutput)
}

func (i WebTestPropertiesRequestArgs) ToWebTestPropertiesRequestPtrOutput() WebTestPropertiesRequestPtrOutput {
	return i.ToWebTestPropertiesRequestPtrOutputWithContext(context.Background())
}

func (i WebTestPropertiesRequestArgs) ToWebTestPropertiesRequestPtrOutputWithContext(ctx context.Context) WebTestPropertiesRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesRequestOutput).ToWebTestPropertiesRequestPtrOutputWithContext(ctx)
}

// WebTestPropertiesRequestPtrInput is an input type that accepts WebTestPropertiesRequestArgs, WebTestPropertiesRequestPtr and WebTestPropertiesRequestPtrOutput values.
// You can construct a concrete instance of `WebTestPropertiesRequestPtrInput` via:
//
//	        WebTestPropertiesRequestArgs{...}
//
//	or:
//
//	        nil
type WebTestPropertiesRequestPtrInput interface {
	pulumi.Input

	ToWebTestPropertiesRequestPtrOutput() WebTestPropertiesRequestPtrOutput
	ToWebTestPropertiesRequestPtrOutputWithContext(context.Context) WebTestPropertiesRequestPtrOutput
}

type webTestPropertiesRequestPtrType WebTestPropertiesRequestArgs

func WebTestPropertiesRequestPtr(v *WebTestPropertiesRequestArgs) WebTestPropertiesRequestPtrInput {
	return (*webTestPropertiesRequestPtrType)(v)
}

func (*webTestPropertiesRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesRequest)(nil)).Elem()
}

func (i *webTestPropertiesRequestPtrType) ToWebTestPropertiesRequestPtrOutput() WebTestPropertiesRequestPtrOutput {
	return i.ToWebTestPropertiesRequestPtrOutputWithContext(context.Background())
}

func (i *webTestPropertiesRequestPtrType) ToWebTestPropertiesRequestPtrOutputWithContext(ctx context.Context) WebTestPropertiesRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesRequestPtrOutput)
}

// The collection of request properties
type WebTestPropertiesRequestOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesRequest)(nil)).Elem()
}

func (o WebTestPropertiesRequestOutput) ToWebTestPropertiesRequestOutput() WebTestPropertiesRequestOutput {
	return o
}

func (o WebTestPropertiesRequestOutput) ToWebTestPropertiesRequestOutputWithContext(ctx context.Context) WebTestPropertiesRequestOutput {
	return o
}

func (o WebTestPropertiesRequestOutput) ToWebTestPropertiesRequestPtrOutput() WebTestPropertiesRequestPtrOutput {
	return o.ToWebTestPropertiesRequestPtrOutputWithContext(context.Background())
}

func (o WebTestPropertiesRequestOutput) ToWebTestPropertiesRequestPtrOutputWithContext(ctx context.Context) WebTestPropertiesRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebTestPropertiesRequest) *WebTestPropertiesRequest {
		return &v
	}).(WebTestPropertiesRequestPtrOutput)
}

// Follow redirects for this web test.
func (o WebTestPropertiesRequestOutput) FollowRedirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesRequest) *bool { return v.FollowRedirects }).(pulumi.BoolPtrOutput)
}

// List of headers and their values to add to the WebTest call.
func (o WebTestPropertiesRequestOutput) Headers() HeaderFieldArrayOutput {
	return o.ApplyT(func(v WebTestPropertiesRequest) []HeaderField { return v.Headers }).(HeaderFieldArrayOutput)
}

// Http verb to use for this web test.
func (o WebTestPropertiesRequestOutput) HttpVerb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesRequest) *string { return v.HttpVerb }).(pulumi.StringPtrOutput)
}

// Parse Dependent request for this WebTest.
func (o WebTestPropertiesRequestOutput) ParseDependentRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesRequest) *bool { return v.ParseDependentRequests }).(pulumi.BoolPtrOutput)
}

// Base64 encoded string body to send with this web test.
func (o WebTestPropertiesRequestOutput) RequestBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesRequest) *string { return v.RequestBody }).(pulumi.StringPtrOutput)
}

// Url location to test.
func (o WebTestPropertiesRequestOutput) RequestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesRequest) *string { return v.RequestUrl }).(pulumi.StringPtrOutput)
}

type WebTestPropertiesRequestPtrOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesRequest)(nil)).Elem()
}

func (o WebTestPropertiesRequestPtrOutput) ToWebTestPropertiesRequestPtrOutput() WebTestPropertiesRequestPtrOutput {
	return o
}

func (o WebTestPropertiesRequestPtrOutput) ToWebTestPropertiesRequestPtrOutputWithContext(ctx context.Context) WebTestPropertiesRequestPtrOutput {
	return o
}

func (o WebTestPropertiesRequestPtrOutput) Elem() WebTestPropertiesRequestOutput {
	return o.ApplyT(func(v *WebTestPropertiesRequest) WebTestPropertiesRequest {
		if v != nil {
			return *v
		}
		var ret WebTestPropertiesRequest
		return ret
	}).(WebTestPropertiesRequestOutput)
}

// Follow redirects for this web test.
func (o WebTestPropertiesRequestPtrOutput) FollowRedirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesRequest) *bool {
		if v == nil {
			return nil
		}
		return v.FollowRedirects
	}).(pulumi.BoolPtrOutput)
}

// List of headers and their values to add to the WebTest call.
func (o WebTestPropertiesRequestPtrOutput) Headers() HeaderFieldArrayOutput {
	return o.ApplyT(func(v *WebTestPropertiesRequest) []HeaderField {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(HeaderFieldArrayOutput)
}

// Http verb to use for this web test.
func (o WebTestPropertiesRequestPtrOutput) HttpVerb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesRequest) *string {
		if v == nil {
			return nil
		}
		return v.HttpVerb
	}).(pulumi.StringPtrOutput)
}

// Parse Dependent request for this WebTest.
func (o WebTestPropertiesRequestPtrOutput) ParseDependentRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesRequest) *bool {
		if v == nil {
			return nil
		}
		return v.ParseDependentRequests
	}).(pulumi.BoolPtrOutput)
}

// Base64 encoded string body to send with this web test.
func (o WebTestPropertiesRequestPtrOutput) RequestBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesRequest) *string {
		if v == nil {
			return nil
		}
		return v.RequestBody
	}).(pulumi.StringPtrOutput)
}

// Url location to test.
func (o WebTestPropertiesRequestPtrOutput) RequestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesRequest) *string {
		if v == nil {
			return nil
		}
		return v.RequestUrl
	}).(pulumi.StringPtrOutput)
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesResponseConfiguration struct {
	// The XML specification of a WebTest to run against an application.
	WebTest *string `pulumi:"webTest"`
}

// An XML configuration specification for a WebTest.
type WebTestPropertiesResponseConfigurationOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesResponseConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesResponseConfiguration)(nil)).Elem()
}

func (o WebTestPropertiesResponseConfigurationOutput) ToWebTestPropertiesResponseConfigurationOutput() WebTestPropertiesResponseConfigurationOutput {
	return o
}

func (o WebTestPropertiesResponseConfigurationOutput) ToWebTestPropertiesResponseConfigurationOutputWithContext(ctx context.Context) WebTestPropertiesResponseConfigurationOutput {
	return o
}

// The XML specification of a WebTest to run against an application.
func (o WebTestPropertiesResponseConfigurationOutput) WebTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseConfiguration) *string { return v.WebTest }).(pulumi.StringPtrOutput)
}

type WebTestPropertiesResponseConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesResponseConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesResponseConfiguration)(nil)).Elem()
}

func (o WebTestPropertiesResponseConfigurationPtrOutput) ToWebTestPropertiesResponseConfigurationPtrOutput() WebTestPropertiesResponseConfigurationPtrOutput {
	return o
}

func (o WebTestPropertiesResponseConfigurationPtrOutput) ToWebTestPropertiesResponseConfigurationPtrOutputWithContext(ctx context.Context) WebTestPropertiesResponseConfigurationPtrOutput {
	return o
}

func (o WebTestPropertiesResponseConfigurationPtrOutput) Elem() WebTestPropertiesResponseConfigurationOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseConfiguration) WebTestPropertiesResponseConfiguration {
		if v != nil {
			return *v
		}
		var ret WebTestPropertiesResponseConfiguration
		return ret
	}).(WebTestPropertiesResponseConfigurationOutput)
}

// The XML specification of a WebTest to run against an application.
func (o WebTestPropertiesResponseConfigurationPtrOutput) WebTest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.WebTest
	}).(pulumi.StringPtrOutput)
}

// The collection of content validation properties
type WebTestPropertiesResponseContentValidation struct {
	// Content to look for in the return of the WebTest.  Must not be null or empty.
	ContentMatch *string `pulumi:"contentMatch"`
	// When set, this value makes the ContentMatch validation case insensitive.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// When true, validation will pass if there is a match for the ContentMatch string.  If false, validation will fail if there is a match
	PassIfTextFound *bool `pulumi:"passIfTextFound"`
}

// The collection of content validation properties
type WebTestPropertiesResponseContentValidationOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesResponseContentValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesResponseContentValidation)(nil)).Elem()
}

func (o WebTestPropertiesResponseContentValidationOutput) ToWebTestPropertiesResponseContentValidationOutput() WebTestPropertiesResponseContentValidationOutput {
	return o
}

func (o WebTestPropertiesResponseContentValidationOutput) ToWebTestPropertiesResponseContentValidationOutputWithContext(ctx context.Context) WebTestPropertiesResponseContentValidationOutput {
	return o
}

// Content to look for in the return of the WebTest.  Must not be null or empty.
func (o WebTestPropertiesResponseContentValidationOutput) ContentMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseContentValidation) *string { return v.ContentMatch }).(pulumi.StringPtrOutput)
}

// When set, this value makes the ContentMatch validation case insensitive.
func (o WebTestPropertiesResponseContentValidationOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseContentValidation) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// When true, validation will pass if there is a match for the ContentMatch string.  If false, validation will fail if there is a match
func (o WebTestPropertiesResponseContentValidationOutput) PassIfTextFound() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseContentValidation) *bool { return v.PassIfTextFound }).(pulumi.BoolPtrOutput)
}

type WebTestPropertiesResponseContentValidationPtrOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesResponseContentValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesResponseContentValidation)(nil)).Elem()
}

func (o WebTestPropertiesResponseContentValidationPtrOutput) ToWebTestPropertiesResponseContentValidationPtrOutput() WebTestPropertiesResponseContentValidationPtrOutput {
	return o
}

func (o WebTestPropertiesResponseContentValidationPtrOutput) ToWebTestPropertiesResponseContentValidationPtrOutputWithContext(ctx context.Context) WebTestPropertiesResponseContentValidationPtrOutput {
	return o
}

func (o WebTestPropertiesResponseContentValidationPtrOutput) Elem() WebTestPropertiesResponseContentValidationOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseContentValidation) WebTestPropertiesResponseContentValidation {
		if v != nil {
			return *v
		}
		var ret WebTestPropertiesResponseContentValidation
		return ret
	}).(WebTestPropertiesResponseContentValidationOutput)
}

// Content to look for in the return of the WebTest.  Must not be null or empty.
func (o WebTestPropertiesResponseContentValidationPtrOutput) ContentMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseContentValidation) *string {
		if v == nil {
			return nil
		}
		return v.ContentMatch
	}).(pulumi.StringPtrOutput)
}

// When set, this value makes the ContentMatch validation case insensitive.
func (o WebTestPropertiesResponseContentValidationPtrOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseContentValidation) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreCase
	}).(pulumi.BoolPtrOutput)
}

// When true, validation will pass if there is a match for the ContentMatch string.  If false, validation will fail if there is a match
func (o WebTestPropertiesResponseContentValidationPtrOutput) PassIfTextFound() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseContentValidation) *bool {
		if v == nil {
			return nil
		}
		return v.PassIfTextFound
	}).(pulumi.BoolPtrOutput)
}

// The collection of request properties
type WebTestPropertiesResponseRequest struct {
	// Follow redirects for this web test.
	FollowRedirects *bool `pulumi:"followRedirects"`
	// List of headers and their values to add to the WebTest call.
	Headers []HeaderFieldResponse `pulumi:"headers"`
	// Http verb to use for this web test.
	HttpVerb *string `pulumi:"httpVerb"`
	// Parse Dependent request for this WebTest.
	ParseDependentRequests *bool `pulumi:"parseDependentRequests"`
	// Base64 encoded string body to send with this web test.
	RequestBody *string `pulumi:"requestBody"`
	// Url location to test.
	RequestUrl *string `pulumi:"requestUrl"`
}

// The collection of request properties
type WebTestPropertiesResponseRequestOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesResponseRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesResponseRequest)(nil)).Elem()
}

func (o WebTestPropertiesResponseRequestOutput) ToWebTestPropertiesResponseRequestOutput() WebTestPropertiesResponseRequestOutput {
	return o
}

func (o WebTestPropertiesResponseRequestOutput) ToWebTestPropertiesResponseRequestOutputWithContext(ctx context.Context) WebTestPropertiesResponseRequestOutput {
	return o
}

// Follow redirects for this web test.
func (o WebTestPropertiesResponseRequestOutput) FollowRedirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseRequest) *bool { return v.FollowRedirects }).(pulumi.BoolPtrOutput)
}

// List of headers and their values to add to the WebTest call.
func (o WebTestPropertiesResponseRequestOutput) Headers() HeaderFieldResponseArrayOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseRequest) []HeaderFieldResponse { return v.Headers }).(HeaderFieldResponseArrayOutput)
}

// Http verb to use for this web test.
func (o WebTestPropertiesResponseRequestOutput) HttpVerb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseRequest) *string { return v.HttpVerb }).(pulumi.StringPtrOutput)
}

// Parse Dependent request for this WebTest.
func (o WebTestPropertiesResponseRequestOutput) ParseDependentRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseRequest) *bool { return v.ParseDependentRequests }).(pulumi.BoolPtrOutput)
}

// Base64 encoded string body to send with this web test.
func (o WebTestPropertiesResponseRequestOutput) RequestBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseRequest) *string { return v.RequestBody }).(pulumi.StringPtrOutput)
}

// Url location to test.
func (o WebTestPropertiesResponseRequestOutput) RequestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseRequest) *string { return v.RequestUrl }).(pulumi.StringPtrOutput)
}

type WebTestPropertiesResponseRequestPtrOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesResponseRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesResponseRequest)(nil)).Elem()
}

func (o WebTestPropertiesResponseRequestPtrOutput) ToWebTestPropertiesResponseRequestPtrOutput() WebTestPropertiesResponseRequestPtrOutput {
	return o
}

func (o WebTestPropertiesResponseRequestPtrOutput) ToWebTestPropertiesResponseRequestPtrOutputWithContext(ctx context.Context) WebTestPropertiesResponseRequestPtrOutput {
	return o
}

func (o WebTestPropertiesResponseRequestPtrOutput) Elem() WebTestPropertiesResponseRequestOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseRequest) WebTestPropertiesResponseRequest {
		if v != nil {
			return *v
		}
		var ret WebTestPropertiesResponseRequest
		return ret
	}).(WebTestPropertiesResponseRequestOutput)
}

// Follow redirects for this web test.
func (o WebTestPropertiesResponseRequestPtrOutput) FollowRedirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseRequest) *bool {
		if v == nil {
			return nil
		}
		return v.FollowRedirects
	}).(pulumi.BoolPtrOutput)
}

// List of headers and their values to add to the WebTest call.
func (o WebTestPropertiesResponseRequestPtrOutput) Headers() HeaderFieldResponseArrayOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseRequest) []HeaderFieldResponse {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(HeaderFieldResponseArrayOutput)
}

// Http verb to use for this web test.
func (o WebTestPropertiesResponseRequestPtrOutput) HttpVerb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseRequest) *string {
		if v == nil {
			return nil
		}
		return v.HttpVerb
	}).(pulumi.StringPtrOutput)
}

// Parse Dependent request for this WebTest.
func (o WebTestPropertiesResponseRequestPtrOutput) ParseDependentRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseRequest) *bool {
		if v == nil {
			return nil
		}
		return v.ParseDependentRequests
	}).(pulumi.BoolPtrOutput)
}

// Base64 encoded string body to send with this web test.
func (o WebTestPropertiesResponseRequestPtrOutput) RequestBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseRequest) *string {
		if v == nil {
			return nil
		}
		return v.RequestBody
	}).(pulumi.StringPtrOutput)
}

// Url location to test.
func (o WebTestPropertiesResponseRequestPtrOutput) RequestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseRequest) *string {
		if v == nil {
			return nil
		}
		return v.RequestUrl
	}).(pulumi.StringPtrOutput)
}

// The collection of validation rule properties
type WebTestPropertiesResponseValidationRules struct {
	// The collection of content validation properties
	ContentValidation *WebTestPropertiesResponseContentValidation `pulumi:"contentValidation"`
	// Validate that the WebTest returns the http status code provided.
	ExpectedHttpStatusCode *int `pulumi:"expectedHttpStatusCode"`
	// When set, validation will ignore the status code.
	IgnoreHttpStatusCode *bool `pulumi:"ignoreHttpStatusCode"`
	// A number of days to check still remain before the the existing SSL cert expires.  Value must be positive and the SSLCheck must be set to true.
	SSLCertRemainingLifetimeCheck *int `pulumi:"sSLCertRemainingLifetimeCheck"`
	// Checks to see if the SSL cert is still valid.
	SSLCheck *bool `pulumi:"sSLCheck"`
}

// The collection of validation rule properties
type WebTestPropertiesResponseValidationRulesOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesResponseValidationRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesResponseValidationRules)(nil)).Elem()
}

func (o WebTestPropertiesResponseValidationRulesOutput) ToWebTestPropertiesResponseValidationRulesOutput() WebTestPropertiesResponseValidationRulesOutput {
	return o
}

func (o WebTestPropertiesResponseValidationRulesOutput) ToWebTestPropertiesResponseValidationRulesOutputWithContext(ctx context.Context) WebTestPropertiesResponseValidationRulesOutput {
	return o
}

// The collection of content validation properties
func (o WebTestPropertiesResponseValidationRulesOutput) ContentValidation() WebTestPropertiesResponseContentValidationPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseValidationRules) *WebTestPropertiesResponseContentValidation {
		return v.ContentValidation
	}).(WebTestPropertiesResponseContentValidationPtrOutput)
}

// Validate that the WebTest returns the http status code provided.
func (o WebTestPropertiesResponseValidationRulesOutput) ExpectedHttpStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseValidationRules) *int { return v.ExpectedHttpStatusCode }).(pulumi.IntPtrOutput)
}

// When set, validation will ignore the status code.
func (o WebTestPropertiesResponseValidationRulesOutput) IgnoreHttpStatusCode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseValidationRules) *bool { return v.IgnoreHttpStatusCode }).(pulumi.BoolPtrOutput)
}

// A number of days to check still remain before the the existing SSL cert expires.  Value must be positive and the SSLCheck must be set to true.
func (o WebTestPropertiesResponseValidationRulesOutput) SSLCertRemainingLifetimeCheck() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseValidationRules) *int { return v.SSLCertRemainingLifetimeCheck }).(pulumi.IntPtrOutput)
}

// Checks to see if the SSL cert is still valid.
func (o WebTestPropertiesResponseValidationRulesOutput) SSLCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesResponseValidationRules) *bool { return v.SSLCheck }).(pulumi.BoolPtrOutput)
}

type WebTestPropertiesResponseValidationRulesPtrOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesResponseValidationRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesResponseValidationRules)(nil)).Elem()
}

func (o WebTestPropertiesResponseValidationRulesPtrOutput) ToWebTestPropertiesResponseValidationRulesPtrOutput() WebTestPropertiesResponseValidationRulesPtrOutput {
	return o
}

func (o WebTestPropertiesResponseValidationRulesPtrOutput) ToWebTestPropertiesResponseValidationRulesPtrOutputWithContext(ctx context.Context) WebTestPropertiesResponseValidationRulesPtrOutput {
	return o
}

func (o WebTestPropertiesResponseValidationRulesPtrOutput) Elem() WebTestPropertiesResponseValidationRulesOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseValidationRules) WebTestPropertiesResponseValidationRules {
		if v != nil {
			return *v
		}
		var ret WebTestPropertiesResponseValidationRules
		return ret
	}).(WebTestPropertiesResponseValidationRulesOutput)
}

// The collection of content validation properties
func (o WebTestPropertiesResponseValidationRulesPtrOutput) ContentValidation() WebTestPropertiesResponseContentValidationPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseValidationRules) *WebTestPropertiesResponseContentValidation {
		if v == nil {
			return nil
		}
		return v.ContentValidation
	}).(WebTestPropertiesResponseContentValidationPtrOutput)
}

// Validate that the WebTest returns the http status code provided.
func (o WebTestPropertiesResponseValidationRulesPtrOutput) ExpectedHttpStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseValidationRules) *int {
		if v == nil {
			return nil
		}
		return v.ExpectedHttpStatusCode
	}).(pulumi.IntPtrOutput)
}

// When set, validation will ignore the status code.
func (o WebTestPropertiesResponseValidationRulesPtrOutput) IgnoreHttpStatusCode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseValidationRules) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreHttpStatusCode
	}).(pulumi.BoolPtrOutput)
}

// A number of days to check still remain before the the existing SSL cert expires.  Value must be positive and the SSLCheck must be set to true.
func (o WebTestPropertiesResponseValidationRulesPtrOutput) SSLCertRemainingLifetimeCheck() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseValidationRules) *int {
		if v == nil {
			return nil
		}
		return v.SSLCertRemainingLifetimeCheck
	}).(pulumi.IntPtrOutput)
}

// Checks to see if the SSL cert is still valid.
func (o WebTestPropertiesResponseValidationRulesPtrOutput) SSLCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesResponseValidationRules) *bool {
		if v == nil {
			return nil
		}
		return v.SSLCheck
	}).(pulumi.BoolPtrOutput)
}

// The collection of validation rule properties
type WebTestPropertiesValidationRules struct {
	// The collection of content validation properties
	ContentValidation *WebTestPropertiesContentValidation `pulumi:"contentValidation"`
	// Validate that the WebTest returns the http status code provided.
	ExpectedHttpStatusCode *int `pulumi:"expectedHttpStatusCode"`
	// When set, validation will ignore the status code.
	IgnoreHttpStatusCode *bool `pulumi:"ignoreHttpStatusCode"`
	// A number of days to check still remain before the the existing SSL cert expires.  Value must be positive and the SSLCheck must be set to true.
	SSLCertRemainingLifetimeCheck *int `pulumi:"sSLCertRemainingLifetimeCheck"`
	// Checks to see if the SSL cert is still valid.
	SSLCheck *bool `pulumi:"sSLCheck"`
}

// WebTestPropertiesValidationRulesInput is an input type that accepts WebTestPropertiesValidationRulesArgs and WebTestPropertiesValidationRulesOutput values.
// You can construct a concrete instance of `WebTestPropertiesValidationRulesInput` via:
//
//	WebTestPropertiesValidationRulesArgs{...}
type WebTestPropertiesValidationRulesInput interface {
	pulumi.Input

	ToWebTestPropertiesValidationRulesOutput() WebTestPropertiesValidationRulesOutput
	ToWebTestPropertiesValidationRulesOutputWithContext(context.Context) WebTestPropertiesValidationRulesOutput
}

// The collection of validation rule properties
type WebTestPropertiesValidationRulesArgs struct {
	// The collection of content validation properties
	ContentValidation WebTestPropertiesContentValidationPtrInput `pulumi:"contentValidation"`
	// Validate that the WebTest returns the http status code provided.
	ExpectedHttpStatusCode pulumi.IntPtrInput `pulumi:"expectedHttpStatusCode"`
	// When set, validation will ignore the status code.
	IgnoreHttpStatusCode pulumi.BoolPtrInput `pulumi:"ignoreHttpStatusCode"`
	// A number of days to check still remain before the the existing SSL cert expires.  Value must be positive and the SSLCheck must be set to true.
	SSLCertRemainingLifetimeCheck pulumi.IntPtrInput `pulumi:"sSLCertRemainingLifetimeCheck"`
	// Checks to see if the SSL cert is still valid.
	SSLCheck pulumi.BoolPtrInput `pulumi:"sSLCheck"`
}

func (WebTestPropertiesValidationRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesValidationRules)(nil)).Elem()
}

func (i WebTestPropertiesValidationRulesArgs) ToWebTestPropertiesValidationRulesOutput() WebTestPropertiesValidationRulesOutput {
	return i.ToWebTestPropertiesValidationRulesOutputWithContext(context.Background())
}

func (i WebTestPropertiesValidationRulesArgs) ToWebTestPropertiesValidationRulesOutputWithContext(ctx context.Context) WebTestPropertiesValidationRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesValidationRulesOutput)
}

func (i WebTestPropertiesValidationRulesArgs) ToWebTestPropertiesValidationRulesPtrOutput() WebTestPropertiesValidationRulesPtrOutput {
	return i.ToWebTestPropertiesValidationRulesPtrOutputWithContext(context.Background())
}

func (i WebTestPropertiesValidationRulesArgs) ToWebTestPropertiesValidationRulesPtrOutputWithContext(ctx context.Context) WebTestPropertiesValidationRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesValidationRulesOutput).ToWebTestPropertiesValidationRulesPtrOutputWithContext(ctx)
}

// WebTestPropertiesValidationRulesPtrInput is an input type that accepts WebTestPropertiesValidationRulesArgs, WebTestPropertiesValidationRulesPtr and WebTestPropertiesValidationRulesPtrOutput values.
// You can construct a concrete instance of `WebTestPropertiesValidationRulesPtrInput` via:
//
//	        WebTestPropertiesValidationRulesArgs{...}
//
//	or:
//
//	        nil
type WebTestPropertiesValidationRulesPtrInput interface {
	pulumi.Input

	ToWebTestPropertiesValidationRulesPtrOutput() WebTestPropertiesValidationRulesPtrOutput
	ToWebTestPropertiesValidationRulesPtrOutputWithContext(context.Context) WebTestPropertiesValidationRulesPtrOutput
}

type webTestPropertiesValidationRulesPtrType WebTestPropertiesValidationRulesArgs

func WebTestPropertiesValidationRulesPtr(v *WebTestPropertiesValidationRulesArgs) WebTestPropertiesValidationRulesPtrInput {
	return (*webTestPropertiesValidationRulesPtrType)(v)
}

func (*webTestPropertiesValidationRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesValidationRules)(nil)).Elem()
}

func (i *webTestPropertiesValidationRulesPtrType) ToWebTestPropertiesValidationRulesPtrOutput() WebTestPropertiesValidationRulesPtrOutput {
	return i.ToWebTestPropertiesValidationRulesPtrOutputWithContext(context.Background())
}

func (i *webTestPropertiesValidationRulesPtrType) ToWebTestPropertiesValidationRulesPtrOutputWithContext(ctx context.Context) WebTestPropertiesValidationRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebTestPropertiesValidationRulesPtrOutput)
}

// The collection of validation rule properties
type WebTestPropertiesValidationRulesOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesValidationRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebTestPropertiesValidationRules)(nil)).Elem()
}

func (o WebTestPropertiesValidationRulesOutput) ToWebTestPropertiesValidationRulesOutput() WebTestPropertiesValidationRulesOutput {
	return o
}

func (o WebTestPropertiesValidationRulesOutput) ToWebTestPropertiesValidationRulesOutputWithContext(ctx context.Context) WebTestPropertiesValidationRulesOutput {
	return o
}

func (o WebTestPropertiesValidationRulesOutput) ToWebTestPropertiesValidationRulesPtrOutput() WebTestPropertiesValidationRulesPtrOutput {
	return o.ToWebTestPropertiesValidationRulesPtrOutputWithContext(context.Background())
}

func (o WebTestPropertiesValidationRulesOutput) ToWebTestPropertiesValidationRulesPtrOutputWithContext(ctx context.Context) WebTestPropertiesValidationRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebTestPropertiesValidationRules) *WebTestPropertiesValidationRules {
		return &v
	}).(WebTestPropertiesValidationRulesPtrOutput)
}

// The collection of content validation properties
func (o WebTestPropertiesValidationRulesOutput) ContentValidation() WebTestPropertiesContentValidationPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesValidationRules) *WebTestPropertiesContentValidation {
		return v.ContentValidation
	}).(WebTestPropertiesContentValidationPtrOutput)
}

// Validate that the WebTest returns the http status code provided.
func (o WebTestPropertiesValidationRulesOutput) ExpectedHttpStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesValidationRules) *int { return v.ExpectedHttpStatusCode }).(pulumi.IntPtrOutput)
}

// When set, validation will ignore the status code.
func (o WebTestPropertiesValidationRulesOutput) IgnoreHttpStatusCode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesValidationRules) *bool { return v.IgnoreHttpStatusCode }).(pulumi.BoolPtrOutput)
}

// A number of days to check still remain before the the existing SSL cert expires.  Value must be positive and the SSLCheck must be set to true.
func (o WebTestPropertiesValidationRulesOutput) SSLCertRemainingLifetimeCheck() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesValidationRules) *int { return v.SSLCertRemainingLifetimeCheck }).(pulumi.IntPtrOutput)
}

// Checks to see if the SSL cert is still valid.
func (o WebTestPropertiesValidationRulesOutput) SSLCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebTestPropertiesValidationRules) *bool { return v.SSLCheck }).(pulumi.BoolPtrOutput)
}

type WebTestPropertiesValidationRulesPtrOutput struct{ *pulumi.OutputState }

func (WebTestPropertiesValidationRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebTestPropertiesValidationRules)(nil)).Elem()
}

func (o WebTestPropertiesValidationRulesPtrOutput) ToWebTestPropertiesValidationRulesPtrOutput() WebTestPropertiesValidationRulesPtrOutput {
	return o
}

func (o WebTestPropertiesValidationRulesPtrOutput) ToWebTestPropertiesValidationRulesPtrOutputWithContext(ctx context.Context) WebTestPropertiesValidationRulesPtrOutput {
	return o
}

func (o WebTestPropertiesValidationRulesPtrOutput) Elem() WebTestPropertiesValidationRulesOutput {
	return o.ApplyT(func(v *WebTestPropertiesValidationRules) WebTestPropertiesValidationRules {
		if v != nil {
			return *v
		}
		var ret WebTestPropertiesValidationRules
		return ret
	}).(WebTestPropertiesValidationRulesOutput)
}

// The collection of content validation properties
func (o WebTestPropertiesValidationRulesPtrOutput) ContentValidation() WebTestPropertiesContentValidationPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesValidationRules) *WebTestPropertiesContentValidation {
		if v == nil {
			return nil
		}
		return v.ContentValidation
	}).(WebTestPropertiesContentValidationPtrOutput)
}

// Validate that the WebTest returns the http status code provided.
func (o WebTestPropertiesValidationRulesPtrOutput) ExpectedHttpStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesValidationRules) *int {
		if v == nil {
			return nil
		}
		return v.ExpectedHttpStatusCode
	}).(pulumi.IntPtrOutput)
}

// When set, validation will ignore the status code.
func (o WebTestPropertiesValidationRulesPtrOutput) IgnoreHttpStatusCode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesValidationRules) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreHttpStatusCode
	}).(pulumi.BoolPtrOutput)
}

// A number of days to check still remain before the the existing SSL cert expires.  Value must be positive and the SSLCheck must be set to true.
func (o WebTestPropertiesValidationRulesPtrOutput) SSLCertRemainingLifetimeCheck() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesValidationRules) *int {
		if v == nil {
			return nil
		}
		return v.SSLCertRemainingLifetimeCheck
	}).(pulumi.IntPtrOutput)
}

// Checks to see if the SSL cert is still valid.
func (o WebTestPropertiesValidationRulesPtrOutput) SSLCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebTestPropertiesValidationRules) *bool {
		if v == nil {
			return nil
		}
		return v.SSLCheck
	}).(pulumi.BoolPtrOutput)
}

// Identity used for BYOS
type WorkbookResourceIdentity struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities []string `pulumi:"userAssignedIdentities"`
}

// WorkbookResourceIdentityInput is an input type that accepts WorkbookResourceIdentityArgs and WorkbookResourceIdentityOutput values.
// You can construct a concrete instance of `WorkbookResourceIdentityInput` via:
//
//	WorkbookResourceIdentityArgs{...}
type WorkbookResourceIdentityInput interface {
	pulumi.Input

	ToWorkbookResourceIdentityOutput() WorkbookResourceIdentityOutput
	ToWorkbookResourceIdentityOutputWithContext(context.Context) WorkbookResourceIdentityOutput
}

// Identity used for BYOS
type WorkbookResourceIdentityArgs struct {
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type pulumi.StringInput `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities pulumi.StringArrayInput `pulumi:"userAssignedIdentities"`
}

func (WorkbookResourceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookResourceIdentity)(nil)).Elem()
}

func (i WorkbookResourceIdentityArgs) ToWorkbookResourceIdentityOutput() WorkbookResourceIdentityOutput {
	return i.ToWorkbookResourceIdentityOutputWithContext(context.Background())
}

func (i WorkbookResourceIdentityArgs) ToWorkbookResourceIdentityOutputWithContext(ctx context.Context) WorkbookResourceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookResourceIdentityOutput)
}

func (i WorkbookResourceIdentityArgs) ToWorkbookResourceIdentityPtrOutput() WorkbookResourceIdentityPtrOutput {
	return i.ToWorkbookResourceIdentityPtrOutputWithContext(context.Background())
}

func (i WorkbookResourceIdentityArgs) ToWorkbookResourceIdentityPtrOutputWithContext(ctx context.Context) WorkbookResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookResourceIdentityOutput).ToWorkbookResourceIdentityPtrOutputWithContext(ctx)
}

// WorkbookResourceIdentityPtrInput is an input type that accepts WorkbookResourceIdentityArgs, WorkbookResourceIdentityPtr and WorkbookResourceIdentityPtrOutput values.
// You can construct a concrete instance of `WorkbookResourceIdentityPtrInput` via:
//
//	        WorkbookResourceIdentityArgs{...}
//
//	or:
//
//	        nil
type WorkbookResourceIdentityPtrInput interface {
	pulumi.Input

	ToWorkbookResourceIdentityPtrOutput() WorkbookResourceIdentityPtrOutput
	ToWorkbookResourceIdentityPtrOutputWithContext(context.Context) WorkbookResourceIdentityPtrOutput
}

type workbookResourceIdentityPtrType WorkbookResourceIdentityArgs

func WorkbookResourceIdentityPtr(v *WorkbookResourceIdentityArgs) WorkbookResourceIdentityPtrInput {
	return (*workbookResourceIdentityPtrType)(v)
}

func (*workbookResourceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkbookResourceIdentity)(nil)).Elem()
}

func (i *workbookResourceIdentityPtrType) ToWorkbookResourceIdentityPtrOutput() WorkbookResourceIdentityPtrOutput {
	return i.ToWorkbookResourceIdentityPtrOutputWithContext(context.Background())
}

func (i *workbookResourceIdentityPtrType) ToWorkbookResourceIdentityPtrOutputWithContext(ctx context.Context) WorkbookResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookResourceIdentityPtrOutput)
}

// Identity used for BYOS
type WorkbookResourceIdentityOutput struct{ *pulumi.OutputState }

func (WorkbookResourceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookResourceIdentity)(nil)).Elem()
}

func (o WorkbookResourceIdentityOutput) ToWorkbookResourceIdentityOutput() WorkbookResourceIdentityOutput {
	return o
}

func (o WorkbookResourceIdentityOutput) ToWorkbookResourceIdentityOutputWithContext(ctx context.Context) WorkbookResourceIdentityOutput {
	return o
}

func (o WorkbookResourceIdentityOutput) ToWorkbookResourceIdentityPtrOutput() WorkbookResourceIdentityPtrOutput {
	return o.ToWorkbookResourceIdentityPtrOutputWithContext(context.Background())
}

func (o WorkbookResourceIdentityOutput) ToWorkbookResourceIdentityPtrOutputWithContext(ctx context.Context) WorkbookResourceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkbookResourceIdentity) *WorkbookResourceIdentity {
		return &v
	}).(WorkbookResourceIdentityPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o WorkbookResourceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookResourceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o WorkbookResourceIdentityOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkbookResourceIdentity) []string { return v.UserAssignedIdentities }).(pulumi.StringArrayOutput)
}

type WorkbookResourceIdentityPtrOutput struct{ *pulumi.OutputState }

func (WorkbookResourceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkbookResourceIdentity)(nil)).Elem()
}

func (o WorkbookResourceIdentityPtrOutput) ToWorkbookResourceIdentityPtrOutput() WorkbookResourceIdentityPtrOutput {
	return o
}

func (o WorkbookResourceIdentityPtrOutput) ToWorkbookResourceIdentityPtrOutputWithContext(ctx context.Context) WorkbookResourceIdentityPtrOutput {
	return o
}

func (o WorkbookResourceIdentityPtrOutput) Elem() WorkbookResourceIdentityOutput {
	return o.ApplyT(func(v *WorkbookResourceIdentity) WorkbookResourceIdentity {
		if v != nil {
			return *v
		}
		var ret WorkbookResourceIdentity
		return ret
	}).(WorkbookResourceIdentityOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o WorkbookResourceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookResourceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o WorkbookResourceIdentityPtrOutput) UserAssignedIdentities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkbookResourceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.StringArrayOutput)
}

// Identity used for BYOS
type WorkbookResourceResponseIdentity struct {
	// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type string `pulumi:"type"`
	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
	UserAssignedIdentities map[string]UserAssignedIdentityResponse `pulumi:"userAssignedIdentities"`
}

// Identity used for BYOS
type WorkbookResourceResponseIdentityOutput struct{ *pulumi.OutputState }

func (WorkbookResourceResponseIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookResourceResponseIdentity)(nil)).Elem()
}

func (o WorkbookResourceResponseIdentityOutput) ToWorkbookResourceResponseIdentityOutput() WorkbookResourceResponseIdentityOutput {
	return o
}

func (o WorkbookResourceResponseIdentityOutput) ToWorkbookResourceResponseIdentityOutputWithContext(ctx context.Context) WorkbookResourceResponseIdentityOutput {
	return o
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o WorkbookResourceResponseIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookResourceResponseIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o WorkbookResourceResponseIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookResourceResponseIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o WorkbookResourceResponseIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WorkbookResourceResponseIdentity) string { return v.Type }).(pulumi.StringOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o WorkbookResourceResponseIdentityOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v WorkbookResourceResponseIdentity) map[string]UserAssignedIdentityResponse {
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

type WorkbookResourceResponseIdentityPtrOutput struct{ *pulumi.OutputState }

func (WorkbookResourceResponseIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkbookResourceResponseIdentity)(nil)).Elem()
}

func (o WorkbookResourceResponseIdentityPtrOutput) ToWorkbookResourceResponseIdentityPtrOutput() WorkbookResourceResponseIdentityPtrOutput {
	return o
}

func (o WorkbookResourceResponseIdentityPtrOutput) ToWorkbookResourceResponseIdentityPtrOutputWithContext(ctx context.Context) WorkbookResourceResponseIdentityPtrOutput {
	return o
}

func (o WorkbookResourceResponseIdentityPtrOutput) Elem() WorkbookResourceResponseIdentityOutput {
	return o.ApplyT(func(v *WorkbookResourceResponseIdentity) WorkbookResourceResponseIdentity {
		if v != nil {
			return *v
		}
		var ret WorkbookResourceResponseIdentity
		return ret
	}).(WorkbookResourceResponseIdentityOutput)
}

// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o WorkbookResourceResponseIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookResourceResponseIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
func (o WorkbookResourceResponseIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookResourceResponseIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
func (o WorkbookResourceResponseIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkbookResourceResponseIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
func (o WorkbookResourceResponseIdentityPtrOutput) UserAssignedIdentities() UserAssignedIdentityResponseMapOutput {
	return o.ApplyT(func(v *WorkbookResourceResponseIdentity) map[string]UserAssignedIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(UserAssignedIdentityResponseMapOutput)
}

// Gallery information for a workbook template.
type WorkbookTemplateGallery struct {
	// Category for the gallery.
	Category *string `pulumi:"category"`
	// Name of the workbook template in the gallery.
	Name *string `pulumi:"name"`
	// Order of the template within the gallery.
	Order *int `pulumi:"order"`
	// Azure resource type supported by the gallery.
	ResourceType *string `pulumi:"resourceType"`
	// Type of workbook supported by the workbook template.
	Type *string `pulumi:"type"`
}

// WorkbookTemplateGalleryInput is an input type that accepts WorkbookTemplateGalleryArgs and WorkbookTemplateGalleryOutput values.
// You can construct a concrete instance of `WorkbookTemplateGalleryInput` via:
//
//	WorkbookTemplateGalleryArgs{...}
type WorkbookTemplateGalleryInput interface {
	pulumi.Input

	ToWorkbookTemplateGalleryOutput() WorkbookTemplateGalleryOutput
	ToWorkbookTemplateGalleryOutputWithContext(context.Context) WorkbookTemplateGalleryOutput
}

// Gallery information for a workbook template.
type WorkbookTemplateGalleryArgs struct {
	// Category for the gallery.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// Name of the workbook template in the gallery.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Order of the template within the gallery.
	Order pulumi.IntPtrInput `pulumi:"order"`
	// Azure resource type supported by the gallery.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// Type of workbook supported by the workbook template.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (WorkbookTemplateGalleryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookTemplateGallery)(nil)).Elem()
}

func (i WorkbookTemplateGalleryArgs) ToWorkbookTemplateGalleryOutput() WorkbookTemplateGalleryOutput {
	return i.ToWorkbookTemplateGalleryOutputWithContext(context.Background())
}

func (i WorkbookTemplateGalleryArgs) ToWorkbookTemplateGalleryOutputWithContext(ctx context.Context) WorkbookTemplateGalleryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookTemplateGalleryOutput)
}

// WorkbookTemplateGalleryArrayInput is an input type that accepts WorkbookTemplateGalleryArray and WorkbookTemplateGalleryArrayOutput values.
// You can construct a concrete instance of `WorkbookTemplateGalleryArrayInput` via:
//
//	WorkbookTemplateGalleryArray{ WorkbookTemplateGalleryArgs{...} }
type WorkbookTemplateGalleryArrayInput interface {
	pulumi.Input

	ToWorkbookTemplateGalleryArrayOutput() WorkbookTemplateGalleryArrayOutput
	ToWorkbookTemplateGalleryArrayOutputWithContext(context.Context) WorkbookTemplateGalleryArrayOutput
}

type WorkbookTemplateGalleryArray []WorkbookTemplateGalleryInput

func (WorkbookTemplateGalleryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkbookTemplateGallery)(nil)).Elem()
}

func (i WorkbookTemplateGalleryArray) ToWorkbookTemplateGalleryArrayOutput() WorkbookTemplateGalleryArrayOutput {
	return i.ToWorkbookTemplateGalleryArrayOutputWithContext(context.Background())
}

func (i WorkbookTemplateGalleryArray) ToWorkbookTemplateGalleryArrayOutputWithContext(ctx context.Context) WorkbookTemplateGalleryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookTemplateGalleryArrayOutput)
}

// Gallery information for a workbook template.
type WorkbookTemplateGalleryOutput struct{ *pulumi.OutputState }

func (WorkbookTemplateGalleryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookTemplateGallery)(nil)).Elem()
}

func (o WorkbookTemplateGalleryOutput) ToWorkbookTemplateGalleryOutput() WorkbookTemplateGalleryOutput {
	return o
}

func (o WorkbookTemplateGalleryOutput) ToWorkbookTemplateGalleryOutputWithContext(ctx context.Context) WorkbookTemplateGalleryOutput {
	return o
}

// Category for the gallery.
func (o WorkbookTemplateGalleryOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkbookTemplateGallery) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Name of the workbook template in the gallery.
func (o WorkbookTemplateGalleryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkbookTemplateGallery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Order of the template within the gallery.
func (o WorkbookTemplateGalleryOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkbookTemplateGallery) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// Azure resource type supported by the gallery.
func (o WorkbookTemplateGalleryOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkbookTemplateGallery) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// Type of workbook supported by the workbook template.
func (o WorkbookTemplateGalleryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkbookTemplateGallery) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WorkbookTemplateGalleryArrayOutput struct{ *pulumi.OutputState }

func (WorkbookTemplateGalleryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkbookTemplateGallery)(nil)).Elem()
}

func (o WorkbookTemplateGalleryArrayOutput) ToWorkbookTemplateGalleryArrayOutput() WorkbookTemplateGalleryArrayOutput {
	return o
}

func (o WorkbookTemplateGalleryArrayOutput) ToWorkbookTemplateGalleryArrayOutputWithContext(ctx context.Context) WorkbookTemplateGalleryArrayOutput {
	return o
}

func (o WorkbookTemplateGalleryArrayOutput) Index(i pulumi.IntInput) WorkbookTemplateGalleryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkbookTemplateGallery {
		return vs[0].([]WorkbookTemplateGallery)[vs[1].(int)]
	}).(WorkbookTemplateGalleryOutput)
}

// Gallery information for a workbook template.
type WorkbookTemplateGalleryResponse struct {
	// Category for the gallery.
	Category *string `pulumi:"category"`
	// Name of the workbook template in the gallery.
	Name *string `pulumi:"name"`
	// Order of the template within the gallery.
	Order *int `pulumi:"order"`
	// Azure resource type supported by the gallery.
	ResourceType *string `pulumi:"resourceType"`
	// Type of workbook supported by the workbook template.
	Type *string `pulumi:"type"`
}

// Gallery information for a workbook template.
type WorkbookTemplateGalleryResponseOutput struct{ *pulumi.OutputState }

func (WorkbookTemplateGalleryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookTemplateGalleryResponse)(nil)).Elem()
}

func (o WorkbookTemplateGalleryResponseOutput) ToWorkbookTemplateGalleryResponseOutput() WorkbookTemplateGalleryResponseOutput {
	return o
}

func (o WorkbookTemplateGalleryResponseOutput) ToWorkbookTemplateGalleryResponseOutputWithContext(ctx context.Context) WorkbookTemplateGalleryResponseOutput {
	return o
}

// Category for the gallery.
func (o WorkbookTemplateGalleryResponseOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkbookTemplateGalleryResponse) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// Name of the workbook template in the gallery.
func (o WorkbookTemplateGalleryResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkbookTemplateGalleryResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Order of the template within the gallery.
func (o WorkbookTemplateGalleryResponseOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkbookTemplateGalleryResponse) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// Azure resource type supported by the gallery.
func (o WorkbookTemplateGalleryResponseOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkbookTemplateGalleryResponse) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// Type of workbook supported by the workbook template.
func (o WorkbookTemplateGalleryResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkbookTemplateGalleryResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WorkbookTemplateGalleryResponseArrayOutput struct{ *pulumi.OutputState }

func (WorkbookTemplateGalleryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkbookTemplateGalleryResponse)(nil)).Elem()
}

func (o WorkbookTemplateGalleryResponseArrayOutput) ToWorkbookTemplateGalleryResponseArrayOutput() WorkbookTemplateGalleryResponseArrayOutput {
	return o
}

func (o WorkbookTemplateGalleryResponseArrayOutput) ToWorkbookTemplateGalleryResponseArrayOutputWithContext(ctx context.Context) WorkbookTemplateGalleryResponseArrayOutput {
	return o
}

func (o WorkbookTemplateGalleryResponseArrayOutput) Index(i pulumi.IntInput) WorkbookTemplateGalleryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkbookTemplateGalleryResponse {
		return vs[0].([]WorkbookTemplateGalleryResponse)[vs[1].(int)]
	}).(WorkbookTemplateGalleryResponseOutput)
}

// Localized template data and gallery information.
type WorkbookTemplateLocalizedGallery struct {
	// Workbook galleries supported by the template.
	Galleries []WorkbookTemplateGallery `pulumi:"galleries"`
	// Valid JSON object containing workbook template payload.
	TemplateData interface{} `pulumi:"templateData"`
}

// WorkbookTemplateLocalizedGalleryInput is an input type that accepts WorkbookTemplateLocalizedGalleryArgs and WorkbookTemplateLocalizedGalleryOutput values.
// You can construct a concrete instance of `WorkbookTemplateLocalizedGalleryInput` via:
//
//	WorkbookTemplateLocalizedGalleryArgs{...}
type WorkbookTemplateLocalizedGalleryInput interface {
	pulumi.Input

	ToWorkbookTemplateLocalizedGalleryOutput() WorkbookTemplateLocalizedGalleryOutput
	ToWorkbookTemplateLocalizedGalleryOutputWithContext(context.Context) WorkbookTemplateLocalizedGalleryOutput
}

// Localized template data and gallery information.
type WorkbookTemplateLocalizedGalleryArgs struct {
	// Workbook galleries supported by the template.
	Galleries WorkbookTemplateGalleryArrayInput `pulumi:"galleries"`
	// Valid JSON object containing workbook template payload.
	TemplateData pulumi.Input `pulumi:"templateData"`
}

func (WorkbookTemplateLocalizedGalleryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookTemplateLocalizedGallery)(nil)).Elem()
}

func (i WorkbookTemplateLocalizedGalleryArgs) ToWorkbookTemplateLocalizedGalleryOutput() WorkbookTemplateLocalizedGalleryOutput {
	return i.ToWorkbookTemplateLocalizedGalleryOutputWithContext(context.Background())
}

func (i WorkbookTemplateLocalizedGalleryArgs) ToWorkbookTemplateLocalizedGalleryOutputWithContext(ctx context.Context) WorkbookTemplateLocalizedGalleryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookTemplateLocalizedGalleryOutput)
}

// WorkbookTemplateLocalizedGalleryArrayInput is an input type that accepts WorkbookTemplateLocalizedGalleryArray and WorkbookTemplateLocalizedGalleryArrayOutput values.
// You can construct a concrete instance of `WorkbookTemplateLocalizedGalleryArrayInput` via:
//
//	WorkbookTemplateLocalizedGalleryArray{ WorkbookTemplateLocalizedGalleryArgs{...} }
type WorkbookTemplateLocalizedGalleryArrayInput interface {
	pulumi.Input

	ToWorkbookTemplateLocalizedGalleryArrayOutput() WorkbookTemplateLocalizedGalleryArrayOutput
	ToWorkbookTemplateLocalizedGalleryArrayOutputWithContext(context.Context) WorkbookTemplateLocalizedGalleryArrayOutput
}

type WorkbookTemplateLocalizedGalleryArray []WorkbookTemplateLocalizedGalleryInput

func (WorkbookTemplateLocalizedGalleryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkbookTemplateLocalizedGallery)(nil)).Elem()
}

func (i WorkbookTemplateLocalizedGalleryArray) ToWorkbookTemplateLocalizedGalleryArrayOutput() WorkbookTemplateLocalizedGalleryArrayOutput {
	return i.ToWorkbookTemplateLocalizedGalleryArrayOutputWithContext(context.Background())
}

func (i WorkbookTemplateLocalizedGalleryArray) ToWorkbookTemplateLocalizedGalleryArrayOutputWithContext(ctx context.Context) WorkbookTemplateLocalizedGalleryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookTemplateLocalizedGalleryArrayOutput)
}

// Localized template data and gallery information.
type WorkbookTemplateLocalizedGalleryOutput struct{ *pulumi.OutputState }

func (WorkbookTemplateLocalizedGalleryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookTemplateLocalizedGallery)(nil)).Elem()
}

func (o WorkbookTemplateLocalizedGalleryOutput) ToWorkbookTemplateLocalizedGalleryOutput() WorkbookTemplateLocalizedGalleryOutput {
	return o
}

func (o WorkbookTemplateLocalizedGalleryOutput) ToWorkbookTemplateLocalizedGalleryOutputWithContext(ctx context.Context) WorkbookTemplateLocalizedGalleryOutput {
	return o
}

// Workbook galleries supported by the template.
func (o WorkbookTemplateLocalizedGalleryOutput) Galleries() WorkbookTemplateGalleryArrayOutput {
	return o.ApplyT(func(v WorkbookTemplateLocalizedGallery) []WorkbookTemplateGallery { return v.Galleries }).(WorkbookTemplateGalleryArrayOutput)
}

// Valid JSON object containing workbook template payload.
func (o WorkbookTemplateLocalizedGalleryOutput) TemplateData() pulumi.AnyOutput {
	return o.ApplyT(func(v WorkbookTemplateLocalizedGallery) interface{} { return v.TemplateData }).(pulumi.AnyOutput)
}

type WorkbookTemplateLocalizedGalleryArrayOutput struct{ *pulumi.OutputState }

func (WorkbookTemplateLocalizedGalleryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkbookTemplateLocalizedGallery)(nil)).Elem()
}

func (o WorkbookTemplateLocalizedGalleryArrayOutput) ToWorkbookTemplateLocalizedGalleryArrayOutput() WorkbookTemplateLocalizedGalleryArrayOutput {
	return o
}

func (o WorkbookTemplateLocalizedGalleryArrayOutput) ToWorkbookTemplateLocalizedGalleryArrayOutputWithContext(ctx context.Context) WorkbookTemplateLocalizedGalleryArrayOutput {
	return o
}

func (o WorkbookTemplateLocalizedGalleryArrayOutput) Index(i pulumi.IntInput) WorkbookTemplateLocalizedGalleryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkbookTemplateLocalizedGallery {
		return vs[0].([]WorkbookTemplateLocalizedGallery)[vs[1].(int)]
	}).(WorkbookTemplateLocalizedGalleryOutput)
}

// Localized template data and gallery information.
type WorkbookTemplateLocalizedGalleryResponse struct {
	// Workbook galleries supported by the template.
	Galleries []WorkbookTemplateGalleryResponse `pulumi:"galleries"`
	// Valid JSON object containing workbook template payload.
	TemplateData interface{} `pulumi:"templateData"`
}

// Localized template data and gallery information.
type WorkbookTemplateLocalizedGalleryResponseOutput struct{ *pulumi.OutputState }

func (WorkbookTemplateLocalizedGalleryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkbookTemplateLocalizedGalleryResponse)(nil)).Elem()
}

func (o WorkbookTemplateLocalizedGalleryResponseOutput) ToWorkbookTemplateLocalizedGalleryResponseOutput() WorkbookTemplateLocalizedGalleryResponseOutput {
	return o
}

func (o WorkbookTemplateLocalizedGalleryResponseOutput) ToWorkbookTemplateLocalizedGalleryResponseOutputWithContext(ctx context.Context) WorkbookTemplateLocalizedGalleryResponseOutput {
	return o
}

// Workbook galleries supported by the template.
func (o WorkbookTemplateLocalizedGalleryResponseOutput) Galleries() WorkbookTemplateGalleryResponseArrayOutput {
	return o.ApplyT(func(v WorkbookTemplateLocalizedGalleryResponse) []WorkbookTemplateGalleryResponse { return v.Galleries }).(WorkbookTemplateGalleryResponseArrayOutput)
}

// Valid JSON object containing workbook template payload.
func (o WorkbookTemplateLocalizedGalleryResponseOutput) TemplateData() pulumi.AnyOutput {
	return o.ApplyT(func(v WorkbookTemplateLocalizedGalleryResponse) interface{} { return v.TemplateData }).(pulumi.AnyOutput)
}

type WorkbookTemplateLocalizedGalleryResponseArrayOutput struct{ *pulumi.OutputState }

func (WorkbookTemplateLocalizedGalleryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkbookTemplateLocalizedGalleryResponse)(nil)).Elem()
}

func (o WorkbookTemplateLocalizedGalleryResponseArrayOutput) ToWorkbookTemplateLocalizedGalleryResponseArrayOutput() WorkbookTemplateLocalizedGalleryResponseArrayOutput {
	return o
}

func (o WorkbookTemplateLocalizedGalleryResponseArrayOutput) ToWorkbookTemplateLocalizedGalleryResponseArrayOutputWithContext(ctx context.Context) WorkbookTemplateLocalizedGalleryResponseArrayOutput {
	return o
}

func (o WorkbookTemplateLocalizedGalleryResponseArrayOutput) Index(i pulumi.IntInput) WorkbookTemplateLocalizedGalleryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkbookTemplateLocalizedGalleryResponse {
		return vs[0].([]WorkbookTemplateLocalizedGalleryResponse)[vs[1].(int)]
	}).(WorkbookTemplateLocalizedGalleryResponseOutput)
}

type WorkbookTemplateLocalizedGalleryArrayMap map[string]WorkbookTemplateLocalizedGalleryArrayInput

func (WorkbookTemplateLocalizedGalleryArrayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string][]WorkbookTemplateLocalizedGallery)(nil)).Elem()
}

func (i WorkbookTemplateLocalizedGalleryArrayMap) ToWorkbookTemplateLocalizedGalleryArrayMapOutput() WorkbookTemplateLocalizedGalleryArrayMapOutput {
	return i.ToWorkbookTemplateLocalizedGalleryArrayMapOutputWithContext(context.Background())
}

func (i WorkbookTemplateLocalizedGalleryArrayMap) ToWorkbookTemplateLocalizedGalleryArrayMapOutputWithContext(ctx context.Context) WorkbookTemplateLocalizedGalleryArrayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbookTemplateLocalizedGalleryArrayMapOutput)
}

// WorkbookTemplateLocalizedGalleryArrayMapInput is an input type that accepts WorkbookTemplateLocalizedGalleryArrayMap and WorkbookTemplateLocalizedGalleryArrayMapOutput values.
// You can construct a concrete instance of `WorkbookTemplateLocalizedGalleryArrayMapInput` via:
//
//	WorkbookTemplateLocalizedGalleryArrayMap{ "key": WorkbookTemplateLocalizedGalleryArray{ WorkbookTemplateLocalizedGalleryArgs{...} } }
type WorkbookTemplateLocalizedGalleryArrayMapInput interface {
	pulumi.Input

	ToWorkbookTemplateLocalizedGalleryArrayMapOutput() WorkbookTemplateLocalizedGalleryArrayMapOutput
	ToWorkbookTemplateLocalizedGalleryArrayMapOutputWithContext(context.Context) WorkbookTemplateLocalizedGalleryArrayMapOutput
}

type WorkbookTemplateLocalizedGalleryArrayMapOutput struct{ *pulumi.OutputState }

func (WorkbookTemplateLocalizedGalleryArrayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string][]WorkbookTemplateLocalizedGallery)(nil)).Elem()
}

func (o WorkbookTemplateLocalizedGalleryArrayMapOutput) ToWorkbookTemplateLocalizedGalleryArrayMapOutput() WorkbookTemplateLocalizedGalleryArrayMapOutput {
	return o
}

func (o WorkbookTemplateLocalizedGalleryArrayMapOutput) ToWorkbookTemplateLocalizedGalleryArrayMapOutputWithContext(ctx context.Context) WorkbookTemplateLocalizedGalleryArrayMapOutput {
	return o
}

func (o WorkbookTemplateLocalizedGalleryArrayMapOutput) MapIndex(k pulumi.StringInput) WorkbookTemplateLocalizedGalleryArrayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) []WorkbookTemplateLocalizedGallery {
		return vs[0].(map[string][]WorkbookTemplateLocalizedGallery)[vs[1].(string)]
	}).(WorkbookTemplateLocalizedGalleryArrayOutput)
}

type WorkbookTemplateLocalizedGalleryResponseArrayMapOutput struct{ *pulumi.OutputState }

func (WorkbookTemplateLocalizedGalleryResponseArrayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string][]WorkbookTemplateLocalizedGalleryResponse)(nil)).Elem()
}

func (o WorkbookTemplateLocalizedGalleryResponseArrayMapOutput) ToWorkbookTemplateLocalizedGalleryResponseArrayMapOutput() WorkbookTemplateLocalizedGalleryResponseArrayMapOutput {
	return o
}

func (o WorkbookTemplateLocalizedGalleryResponseArrayMapOutput) ToWorkbookTemplateLocalizedGalleryResponseArrayMapOutputWithContext(ctx context.Context) WorkbookTemplateLocalizedGalleryResponseArrayMapOutput {
	return o
}

func (o WorkbookTemplateLocalizedGalleryResponseArrayMapOutput) MapIndex(k pulumi.StringInput) WorkbookTemplateLocalizedGalleryResponseArrayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) []WorkbookTemplateLocalizedGalleryResponse {
		return vs[0].(map[string][]WorkbookTemplateLocalizedGalleryResponse)[vs[1].(string)]
	}).(WorkbookTemplateLocalizedGalleryResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationInsightsComponentAnalyticsItemPropertiesOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentAnalyticsItemPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentAnalyticsItemPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentDataVolumeCapOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentDataVolumeCapPtrOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentDataVolumeCapResponseOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentDataVolumeCapResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesResponseRuleDefinitionsPtrOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsOutput{})
	pulumi.RegisterOutputType(ApplicationInsightsComponentProactiveDetectionConfigurationPropertiesRuleDefinitionsPtrOutput{})
	pulumi.RegisterOutputType(HeaderFieldOutput{})
	pulumi.RegisterOutputType(HeaderFieldArrayOutput{})
	pulumi.RegisterOutputType(HeaderFieldResponseOutput{})
	pulumi.RegisterOutputType(HeaderFieldResponseArrayOutput{})
	pulumi.RegisterOutputType(MyWorkbookManagedIdentityOutput{})
	pulumi.RegisterOutputType(MyWorkbookManagedIdentityPtrOutput{})
	pulumi.RegisterOutputType(MyWorkbookManagedIdentityResponseOutput{})
	pulumi.RegisterOutputType(MyWorkbookManagedIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(MyWorkbookUserAssignedIdentitiesResponseOutput{})
	pulumi.RegisterOutputType(MyWorkbookUserAssignedIdentitiesResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkScopedResourceResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkScopedResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(WebTestGeolocationOutput{})
	pulumi.RegisterOutputType(WebTestGeolocationArrayOutput{})
	pulumi.RegisterOutputType(WebTestGeolocationResponseOutput{})
	pulumi.RegisterOutputType(WebTestGeolocationResponseArrayOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesConfigurationOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesContentValidationOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesContentValidationPtrOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesRequestOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesRequestPtrOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesResponseConfigurationOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesResponseConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesResponseContentValidationOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesResponseContentValidationPtrOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesResponseRequestOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesResponseRequestPtrOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesResponseValidationRulesOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesResponseValidationRulesPtrOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesValidationRulesOutput{})
	pulumi.RegisterOutputType(WebTestPropertiesValidationRulesPtrOutput{})
	pulumi.RegisterOutputType(WorkbookResourceIdentityOutput{})
	pulumi.RegisterOutputType(WorkbookResourceIdentityPtrOutput{})
	pulumi.RegisterOutputType(WorkbookResourceResponseIdentityOutput{})
	pulumi.RegisterOutputType(WorkbookResourceResponseIdentityPtrOutput{})
	pulumi.RegisterOutputType(WorkbookTemplateGalleryOutput{})
	pulumi.RegisterOutputType(WorkbookTemplateGalleryArrayOutput{})
	pulumi.RegisterOutputType(WorkbookTemplateGalleryResponseOutput{})
	pulumi.RegisterOutputType(WorkbookTemplateGalleryResponseArrayOutput{})
	pulumi.RegisterOutputType(WorkbookTemplateLocalizedGalleryOutput{})
	pulumi.RegisterOutputType(WorkbookTemplateLocalizedGalleryArrayOutput{})
	pulumi.RegisterOutputType(WorkbookTemplateLocalizedGalleryResponseOutput{})
	pulumi.RegisterOutputType(WorkbookTemplateLocalizedGalleryResponseArrayOutput{})
	pulumi.RegisterOutputType(WorkbookTemplateLocalizedGalleryArrayMapOutput{})
	pulumi.RegisterOutputType(WorkbookTemplateLocalizedGalleryResponseArrayMapOutput{})
}
